

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Apr 18 10:36:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F886 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  008F                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  0105                     	;# 
   400  0107                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0185                     	;# 
   409  0187                     	;# 
   410  0188                     	;# 
   411  0189                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0089                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0095                     	;# 
   465  0096                     	;# 
   466  0097                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009A                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  0105                     	;# 
   476  0107                     	;# 
   477  0108                     	;# 
   478  0109                     	;# 
   479  010C                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0187                     	;# 
   486  0188                     	;# 
   487  0189                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  0105                     	;# 
   552  0107                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0185                     	;# 
   561  0187                     	;# 
   562  0188                     	;# 
   563  0189                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0009                     	;# 
   575  000A                     	;# 
   576  000B                     	;# 
   577  000C                     	;# 
   578  000D                     	;# 
   579  000E                     	;# 
   580  000E                     	;# 
   581  000F                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0015                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001B                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  0081                     	;# 
   601  0085                     	;# 
   602  0086                     	;# 
   603  0087                     	;# 
   604  0089                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  0105                     	;# 
   628  0107                     	;# 
   629  0108                     	;# 
   630  0109                     	;# 
   631  010C                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0185                     	;# 
   637  0187                     	;# 
   638  0188                     	;# 
   639  0189                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  0081                     	;# 
   677  0085                     	;# 
   678  0086                     	;# 
   679  0087                     	;# 
   680  0089                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0105                     	;# 
   704  0107                     	;# 
   705  0108                     	;# 
   706  0109                     	;# 
   707  010C                     	;# 
   708  010C                     	;# 
   709  010D                     	;# 
   710  010E                     	;# 
   711  010F                     	;# 
   712  0185                     	;# 
   713  0187                     	;# 
   714  0188                     	;# 
   715  0189                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  0000                     	;# 
   719  0001                     	;# 
   720  0002                     	;# 
   721  0003                     	;# 
   722  0004                     	;# 
   723  0005                     	;# 
   724  0006                     	;# 
   725  0007                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000E                     	;# 
   733  000F                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001D                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  0081                     	;# 
   753  0085                     	;# 
   754  0086                     	;# 
   755  0087                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  008F                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  0105                     	;# 
   780  0107                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0185                     	;# 
   789  0187                     	;# 
   790  0188                     	;# 
   791  0189                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  000E                     	;# 
   809  000F                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  001D                     	;# 
   826  001E                     	;# 
   827  001F                     	;# 
   828  0081                     	;# 
   829  0085                     	;# 
   830  0086                     	;# 
   831  0087                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0094                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  0105                     	;# 
   856  0107                     	;# 
   857  0108                     	;# 
   858  0109                     	;# 
   859  010C                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0185                     	;# 
   865  0187                     	;# 
   866  0188                     	;# 
   867  0189                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  000E                     	;# 
   885  000F                     	;# 
   886  0010                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0015                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  0081                     	;# 
   905  0085                     	;# 
   906  0086                     	;# 
   907  0087                     	;# 
   908  0089                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  008F                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  009F                     	;# 
   931  0105                     	;# 
   932  0107                     	;# 
   933  0108                     	;# 
   934  0109                     	;# 
   935  010C                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  010E                     	;# 
   939  010F                     	;# 
   940  0185                     	;# 
   941  0187                     	;# 
   942  0188                     	;# 
   943  0189                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0000                     	;# 
   947  0001                     	;# 
   948  0002                     	;# 
   949  0003                     	;# 
   950  0004                     	;# 
   951  0005                     	;# 
   952  0006                     	;# 
   953  0007                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  000E                     	;# 
   961  000F                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0013                     	;# 
   966  0014                     	;# 
   967  0015                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  001D                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  0081                     	;# 
   981  0085                     	;# 
   982  0086                     	;# 
   983  0087                     	;# 
   984  0089                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  009F                     	;# 
  1007  0105                     	;# 
  1008  0107                     	;# 
  1009  0108                     	;# 
  1010  0109                     	;# 
  1011  010C                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  010F                     	;# 
  1016  0185                     	;# 
  1017  0187                     	;# 
  1018  0188                     	;# 
  1019  0189                     	;# 
  1020  018C                     	;# 
  1021  018D                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0009                     	;# 
  1031  000A                     	;# 
  1032  000B                     	;# 
  1033  000C                     	;# 
  1034  000D                     	;# 
  1035  000E                     	;# 
  1036  000E                     	;# 
  1037  000F                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0013                     	;# 
  1042  0014                     	;# 
  1043  0015                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001D                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  0081                     	;# 
  1057  0085                     	;# 
  1058  0086                     	;# 
  1059  0087                     	;# 
  1060  0089                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008F                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009E                     	;# 
  1082  009F                     	;# 
  1083  0105                     	;# 
  1084  0107                     	;# 
  1085  0108                     	;# 
  1086  0109                     	;# 
  1087  010C                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  010E                     	;# 
  1091  010F                     	;# 
  1092  0185                     	;# 
  1093  0187                     	;# 
  1094  0188                     	;# 
  1095  0189                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  000E                     	;# 
  1113  000F                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001E                     	;# 
  1131  001F                     	;# 
  1132  0081                     	;# 
  1133  0085                     	;# 
  1134  0086                     	;# 
  1135  0087                     	;# 
  1136  0089                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  0105                     	;# 
  1160  0107                     	;# 
  1161  0108                     	;# 
  1162  0109                     	;# 
  1163  010C                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0187                     	;# 
  1170  0188                     	;# 
  1171  0189                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174                           
  1175                           	psect	strings
  1176  1000                     __pstrings:
  1177  1000                     stringtab:
  1178  1000                     __stringtab:
  1179                           
  1180                           ;	String table - string pointers are 1 byte each
  1181  1000  1BFF               	btfsc	btemp+1,7
  1182  1001  280A               	ljmp	stringcode
  1183  1002  1383               	bcf	3,7
  1184  1003  187F               	btfsc	btemp+1,0
  1185  1004  1783               	bsf	3,7
  1186  1005  0800               	movf	0,w
  1187  1006  0A84               	incf	4,f
  1188  1007  1903               	skipnz
  1189  1008  0AFF               	incf	btemp+1,f
  1190  1009  0008               	return
  1191  100A                     stringcode:
  1192  100A                     stringdir:
  1193  100A  3010               	movlw	high stringdir
  1194  100B  008A               	movwf	10
  1195  100C  0804               	movf	4,w
  1196  100D  0A84               	incf	4,f
  1197  100E  0782               	addwf	2,f
  1198  100F                     __stringbase:
  1199  100F  3400               	retlw	0
  1200  1010                     __end_of__stringtab:
  1201  1010                     _PT100_TRANSLADA:
  1202  1010  3466               	retlw	102
  1203  1011  3466               	retlw	102
  1204  1012  34A6               	retlw	166
  1205  1013  34BF               	retlw	191
  1206  1014                     __end_of_PT100_TRANSLADA:
  1207  1014                     _PT100_CONSTANT:
  1208  1014  3414               	retlw	20
  1209  1015  34AE               	retlw	174
  1210  1016  342B               	retlw	43
  1211  1017  34C1               	retlw	193
  1212  1018                     __end_of_PT100_CONSTANT:
  1213  1018                     _RESISTOR_ROOM_TEMP:
  1214                           
  1215                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1216  1018  3400               	retlw	0
  1217  1019  3440               	retlw	64
  1218  101A  341C               	retlw	28
  1219  101B  3446               	retlw	70
  1220  101C                     __end_of_RESISTOR_ROOM_TEMP:
  1221  101C                     _ROOM_TEMP:
  1222                           
  1223                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1224  101C  3466               	retlw	102
  1225  101D  3486               	retlw	134
  1226  101E  3496               	retlw	150
  1227  101F  3443               	retlw	67
  1228  1020                     __end_of_ROOM_TEMP:
  1229  1020                     _MAX_ADC:
  1230                           
  1231                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1232  1020  3400               	retlw	0
  1233  1021  34C0               	retlw	192
  1234  1022  347F               	retlw	127
  1235  1023  3444               	retlw	68
  1236  1024                     __end_of_MAX_ADC:
  1237  1024                     log@coeff:
  1238  1024  3400               	retlw	0
  1239  1025  3400               	retlw	0
  1240  1026  3400               	retlw	0
  1241  1027  3400               	retlw	0
  1242  1028  34C4               	retlw	196
  1243  1029  34FF               	retlw	255
  1244  102A  347F               	retlw	127
  1245  102B  343F               	retlw	63
  1246  102C  3480               	retlw	128
  1247  102D  34EF               	retlw	239
  1248  102E  34FF               	retlw	255
  1249  102F  34BE               	retlw	190
  1250  1030  3490               	retlw	144
  1251  1031  34E1               	retlw	225
  1252  1032  34A9               	retlw	169
  1253  1033  343E               	retlw	62
  1254  1034  34EC               	retlw	236
  1255  1035  3482               	retlw	130
  1256  1036  3476               	retlw	118
  1257  1037  34BE               	retlw	190
  1258  1038  3482               	retlw	130
  1259  1039  34AD               	retlw	173
  1260  103A  342B               	retlw	43
  1261  103B  343E               	retlw	62
  1262  103C  340E               	retlw	14
  1263  103D  343C               	retlw	60
  1264  103E  34C3               	retlw	195
  1265  103F  34BD               	retlw	189
  1266  1040  3487               	retlw	135
  1267  1041  34D1               	retlw	209
  1268  1042  3413               	retlw	19
  1269  1043  343D               	retlw	61
  1270  1044  3441               	retlw	65
  1271  1045  3478               	retlw	120
  1272  1046  34D3               	retlw	211
  1273  1047  34BB               	retlw	187
  1274  1048                     __end_oflog@coeff:
  1275  1048                     _BETA:
  1276                           
  1277                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1278  1048  3400               	retlw	0
  1279  1049  3460               	retlw	96
  1280  104A  3478               	retlw	120
  1281  104B  3445               	retlw	69
  1282  104C                     __end_of_BETA:
  1283  104C                     _BALANCE_RESISTOR:
  1284                           
  1285                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1286  104C  3400               	retlw	0
  1287  104D  3440               	retlw	64
  1288  104E  341C               	retlw	28
  1289  104F  3446               	retlw	70
  1290  1050                     __end_of_BALANCE_RESISTOR:
  1291  0019                     _TXREG	set	25
  1292  0018                     _RCSTAbits	set	24
  1293  001A                     _RCREG	set	26
  1294  000E                     _TMR1L	set	14
  1295  000F                     _TMR1H	set	15
  1296  000C                     _PIR1bits	set	12
  1297  001E                     _ADRESH	set	30
  1298  001F                     _ADCON0bits	set	31
  1299  0005                     _PORTAbits	set	5
  1300  0007                     _PORTCbits	set	7
  1301  0010                     _T1CON	set	16
  1302  0006                     _PORTBbits	set	6
  1303  0009                     _PORTE	set	9
  1304  0007                     _PORTC	set	7
  1305  0005                     _PORTA	set	5
  1306  0013                     _SSPBUF	set	19
  1307  000B                     _INTCONbits	set	11
  1308  0014                     _SSPCON	set	20
  1309  0006                     _PORTB	set	6
  1310  00C4                     _CREN	set	196
  1311  0081                     _TMR1CS	set	129
  1312  0085                     _T1CKPS1	set	133
  1313  0084                     _T1CKPS0	set	132
  1314  008C                     _PIE1bits	set	140
  1315  0099                     _SPBRG	set	153
  1316  0098                     _TXSTAbits	set	152
  1317  009E                     _ADRESL	set	158
  1318  009F                     _ADCON1bits	set	159
  1319  009F                     _ADCON1	set	159
  1320  0095                     _WPUB	set	149
  1321  0081                     _OPTION_REGbits	set	129
  1322  0089                     _TRISE	set	137
  1323  0087                     _TRISC	set	135
  1324  0086                     _TRISB	set	134
  1325  0085                     _TRISA	set	133
  1326  008F                     _OSCCONbits	set	143
  1327  0091                     _SSPCON2bits	set	145
  1328  0094                     _SSPSTAT	set	148
  1329  0093                     _SSPADD	set	147
  1330  0091                     _SSPCON2	set	145
  1331  043F                     _TRISC7	set	1087
  1332  043E                     _TRISC6	set	1086
  1333  0460                     _TMR1IE	set	1120
  1334  043C                     _TRISC4	set	1084
  1335  043B                     _TRISC3	set	1083
  1336  010C                     _EEDATA	set	268
  1337  010D                     _EEADR	set	269
  1338  0187                     _BAUDCTLbits	set	391
  1339  018D                     _EECON2	set	397
  1340  018C                     _EECON1bits	set	396
  1341  0189                     _ANSELH	set	393
  1342  0188                     _ANSEL	set	392
  1343  1050                     STR_1:
  1344  1050  3476               	retlw	118	;'v'
  1345  1051  3431               	retlw	49	;'1'
  1346  1052  342E               	retlw	46	;'.'
  1347  1053  3430               	retlw	48	;'0'
  1348  1054  342E               	retlw	46	;'.'
  1349  1055  3432               	retlw	50	;'2'
  1350  1056  3431               	retlw	49	;'1'
  1351  1057  3400               	retlw	0
  1352  1058                     STR_2:
  1353  1058  344F               	retlw	79	;'O'
  1354  1059  344B               	retlw	75	;'K'
  1355  105A  3400               	retlw	0
  1356                           
  1357                           	psect	cinit
  1358  0015                     start_initialization:	
  1359                           ; #config settings
  1360                           
  1361  0015                     __initialization:
  1362                           
  1363                           ; Clear objects allocated to COMMON
  1364  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1365  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1366  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1367  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1368  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1369  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1370                           
  1371                           ; Clear objects allocated to BANK0
  1372  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  001D  01EF               	clrf	__pbssBANK0& (0+127)
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001E  1383               	bcf	3,7	;select IRP bank0
  1378  001F  30A0               	movlw	low __pbssBANK1
  1379  0020  0084               	movwf	4
  1380  0021  30BB               	movlw	low (__pbssBANK1+27)
  1381  0022  160A  158A  22E0  120A  118A  	fcall	clear_ram0
  1382                           
  1383                           ; Clear objects allocated to BANK3
  1384  0027  1783               	bsf	3,7	;select IRP bank2
  1385  0028  3090               	movlw	low __pbssBANK3
  1386  0029  0084               	movwf	4
  1387  002A  30EB               	movlw	low (__pbssBANK3+91)
  1388  002B  160A  158A  22E0  120A  118A  	fcall	clear_ram0
  1389                           
  1390                           ; Clear objects allocated to BANK2
  1391  0030  3010               	movlw	low __pbssBANK2
  1392  0031  0084               	movwf	4
  1393  0032  3044               	movlw	low (__pbssBANK2+52)
  1394  0033  160A  158A  22E0   	fcall	clear_ram0
  1395  0036                     end_of_initialization:	
  1396                           ;End of C runtime variable initialization code
  1397                           
  1398  0036                     __end_of__initialization:
  1399  0036  0183               	clrf	3
  1400  0037  160A  118A  2B22   	ljmp	_main	;jump to C main() function
  1401                           
  1402                           	psect	bssCOMMON
  1403  0078                     __pbssCOMMON:
  1404  0078                     _Delay_Led_Tmr0:
  1405  0078                     	ds	2
  1406  007A                     _minuto:
  1407  007A                     	ds	1
  1408  007B                     _statuspower_memo:
  1409  007B                     	ds	1
  1410  007C                     _hora:
  1411  007C                     	ds	1
  1412  007D                     _segundo:
  1413  007D                     	ds	1
  1414                           
  1415                           	psect	bssBANK0
  1416  006F                     __pbssBANK0:
  1417  006F                     _generic_status:
  1418  006F                     	ds	1
  1419                           
  1420                           	psect	bssBANK1
  1421  00A0                     __pbssBANK1:
  1422  00A0                     _Umidade1:
  1423  00A0                     	ds	4
  1424  00A4                     _Temperatura0:
  1425  00A4                     	ds	4
  1426  00A8                     _errno:
  1427  00A8                     	ds	2
  1428  00AA                     _tempodecorrido:
  1429  00AA                     	ds	2
  1430  00AC                     _count:
  1431  00AC                     	ds	2
  1432  00AE                     _header:
  1433  00AE                     	ds	2
  1434  00B0                     _milisegundo:
  1435  00B0                     	ds	2
  1436  00B2                     _Delay_Led_Usart:
  1437  00B2                     	ds	2
  1438  00B4                     _Delay_Led_Memory:
  1439  00B4                     	ds	2
  1440  00B6                     _pointer:
  1441  00B6                     	ds	1
  1442  00B7                     _destino:
  1443  00B7                     	ds	1
  1444  00B8                     _Board_Number:
  1445  00B8                     	ds	1
  1446  00B9                     _canal:
  1447  00B9                     	ds	1
  1448  00BA                     _statuspower:
  1449  00BA                     	ds	1
  1450                           
  1451                           	psect	bssBANK3
  1452  0190                     __pbssBANK3:
  1453  0190                     _usart_protocol:
  1454  0190                     	ds	58
  1455  01CA                     _buffer:
  1456  01CA                     	ds	33
  1457                           
  1458                           	psect	bssBANK2
  1459  0110                     __pbssBANK2:
  1460  0110                     _usart_buffer:
  1461  0110                     	ds	52
  1462                           
  1463                           	psect	clrtext
  1464  1AE0                     clear_ram0:	
  1465                           ;	Called with FSR containing the base address, and
  1466                           ;	W with the last address+1
  1467                           
  1468  1AE0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1469  1AE1                     clrloop0:
  1470  1AE1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1471  1AE2  0A84               	incf	4,f	;increment pointer
  1472  1AE3  0604               	xorwf	4,w	;XOR with final address
  1473  1AE4  1903               	btfsc	3,2	;have we reached the end yet?
  1474  1AE5  3400               	retlw	0	;all done for this memory range, return
  1475  1AE6  0604               	xorwf	4,w	;XOR again to restore value
  1476  1AE7  2AE1               	goto	clrloop0	;do the next byte
  1477                           
  1478                           	psect	cstackBANK1
  1479  00BB                     __pcstackBANK1:
  1480  00BB                     ___fladd@signs:
  1481  00BB                     Decodify_Command@dados:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x0
  1486  00BB                     	ds	1
  1487  00BC                     ___fladd@aexp:
  1488                           
  1489                           ; 1 bytes @ 0x1
  1490  00BC                     	ds	1
  1491  00BD                     Decodify_Command@add:
  1492  00BD                     ___fladd@bexp:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x2
  1497  00BD                     	ds	1
  1498  00BE                     Decodify_Command@sizedata:
  1499  00BE                     ___fladd@grs:	
  1500                           ; 1 bytes @ 0x3
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x3
  1504  00BE                     	ds	1
  1505  00BF                     ??_mediaLeituraPt100Umidadde:
  1506  00BF                     Decodify_Command@tempint:	
  1507                           ; 1 bytes @ 0x4
  1508                           
  1509                           
  1510                           ; 2 bytes @ 0x4
  1511  00BF                     	ds	2
  1512  00C1                     Decodify_Command@OutPut:
  1513                           
  1514                           ; 4 bytes @ 0x6
  1515  00C1                     	ds	2
  1516  00C3                     mediaLeituraPt100Umidadde@canal:
  1517                           
  1518                           ; 1 bytes @ 0x8
  1519  00C3                     	ds	1
  1520  00C4                     mediaLeituraPt100Umidadde@Temp:
  1521                           
  1522                           ; 4 bytes @ 0x9
  1523  00C4                     	ds	1
  1524  00C5                     Decodify_Command@tempchar:
  1525                           
  1526                           ; 1 bytes @ 0xA
  1527  00C5                     	ds	1
  1528  00C6                     Decodify_Command@add_24LCxxxx:
  1529                           
  1530                           ; 4 bytes @ 0xB
  1531  00C6                     	ds	2
  1532  00C8                     mediaLeituraPt100Umidadde@i:
  1533                           
  1534                           ; 1 bytes @ 0xD
  1535  00C8                     	ds	2
  1536  00CA                     ??_main:
  1537                           
  1538                           ; 1 bytes @ 0xF
  1539  00CA                     	ds	3
  1540                           
  1541                           	psect	cstackCOMMON
  1542  0070                     __pcstackCOMMON:
  1543  0070                     ?_I2C_Master_Start:
  1544  0070                     ?_I2C_Master_Stop:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_I2C_Master_RepeatedStart:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_USART_putc:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_ADC_init:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_mediaLeituraPt100Umidadde:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Decodify_Command:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_USART_to_Protocol:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_Send_To_MB:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_Send_Reply_OK:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_EEPROM_Read_Byte:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_Package_Usart_is_for_me:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_I2C_Master_Wait:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_main:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_isr:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ??_isr:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x0
  1591  0070                     	ds	6
  1592  0076                     isr@tempo:
  1593                           
  1594                           ; 2 bytes @ 0x6
  1595  0076                     	ds	2
  1596                           
  1597                           	psect	cstackBANK0
  1598  0020                     __pcstackBANK0:
  1599  0020                     ?_my_delay_ms_WDT:
  1600  0020                     ??_USART_putc:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ??_ADC_init:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ?_USART_init:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ??_USART_to_Protocol:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ?_strcpy:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ?_EEPROM_Write_Byte:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ??_EEPROM_Read_Byte:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ?_my_delay_ms:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ??_Package_Usart_is_for_me:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ?_PROCULUS_Delay:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_I2C_Master_Wait:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ?_strlen:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ?_captura:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0020                     ?__Umul8_16:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642  0020                     ?___lwdiv:	
  1643                           ; 2 bytes @ 0x0
  1644                           
  1645  0020                     ?___lldiv:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0020                     ?___xxtofl:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651  0020                     EEPROM_Write_Byte@dado:	
  1652                           ; 4 bytes @ 0x0
  1653                           
  1654  0020                     Package_Usart_is_for_me@retorno:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     USART_putc@value:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     __Umul8_16@multiplicand:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     strcpy@from:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     PROCULUS_Delay@tempo_ms:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0020                     ___lwdiv@divisor:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0020                     my_delay_ms@time:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     my_delay_ms_WDT@time:	
  1676                           ; 4 bytes @ 0x0
  1677                           
  1678  0020                     USART_init@baudrate:	
  1679                           ; 4 bytes @ 0x0
  1680                           
  1681  0020                     ___lldiv@divisor:	
  1682                           ; 4 bytes @ 0x0
  1683                           
  1684  0020                     ___xxtofl@val:	
  1685                           ; 4 bytes @ 0x0
  1686                           
  1687                           
  1688                           ; 4 bytes @ 0x0
  1689  0020                     	ds	1
  1690  0021                     ??_strcpy:
  1691  0021                     ??_Send_To_MB:	
  1692                           ; 1 bytes @ 0x1
  1693                           
  1694  0021                     ?_USART_put_string:	
  1695                           ; 1 bytes @ 0x1
  1696                           
  1697  0021                     ??_EEPROM_Write_Byte:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700  0021                     Send_To_MB@size:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0021                     USART_put_string@vetor:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706                           
  1707                           ; 2 bytes @ 0x1
  1708  0021                     	ds	1
  1709  0022                     ??_strlen:
  1710  0022                     ??_captura:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0022                     ??_PROCULUS_Delay:	
  1714                           ; 1 bytes @ 0x2
  1715                           
  1716  0022                     ??__Umul8_16:	
  1717                           ; 1 bytes @ 0x2
  1718                           
  1719  0022                     I2C_Master_Wait@tempo:	
  1720                           ; 1 bytes @ 0x2
  1721                           
  1722  0022                     EEPROM_Read_Byte@addr:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0022                     strcpy@to:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0022                     USART_to_Protocol@i:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0022                     ___lwdiv@dividend:	
  1732                           ; 2 bytes @ 0x2
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x2
  1736  0022                     	ds	1
  1737  0023                     ??_I2C_Master_Start:
  1738  0023                     ?_I2C_Master_Write:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  0023                     ??_I2C_Master_Stop:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744  0023                     ??_I2C_Master_RepeatedStart:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747  0023                     ??_USART_put_string:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0023                     ?_EEPROM_Read_String:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     ?_I2C_Master_Read:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0023                     ?_EEPROM_Read_Integer:	
  1757                           ; 2 bytes @ 0x3
  1758                           
  1759  0023                     EEPROM_Write_Byte@addr:	
  1760                           ; 2 bytes @ 0x3
  1761                           
  1762  0023                     EEPROM_Read_String@dado:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0023                     strcpy@cp:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0023                     strlen@cp:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0023                     I2C_Master_Write@d:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0023                     I2C_Master_Read@a:	
  1775                           ; 2 bytes @ 0x3
  1776                           
  1777  0023                     USART_put_string@ptr:	
  1778                           ; 2 bytes @ 0x3
  1779                           
  1780                           
  1781                           ; 2 bytes @ 0x3
  1782  0023                     	ds	1
  1783  0024                     ??_my_delay_ms_WDT:
  1784  0024                     ??_USART_init:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0024                     ??_EEPROM_Read_String:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0024                     ??_my_delay_ms:	
  1791                           ; 1 bytes @ 0x4
  1792                           
  1793  0024                     ??___lwdiv:	
  1794                           ; 1 bytes @ 0x4
  1795                           
  1796  0024                     ??___xxtofl:	
  1797                           ; 1 bytes @ 0x4
  1798                           
  1799  0024                     EEPROM_Write_Byte@last_GIE:	
  1800                           ; 1 bytes @ 0x4
  1801                           
  1802  0024                     USART_to_Protocol@usart_protocol:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805  0024                     strlen@s:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808  0024                     PROCULUS_Delay@i:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811  0024                     __Umul8_16@product:	
  1812                           ; 2 bytes @ 0x4
  1813                           
  1814  0024                     ___lldiv@dividend:	
  1815                           ; 2 bytes @ 0x4
  1816                           
  1817                           
  1818                           ; 4 bytes @ 0x4
  1819  0024                     	ds	1
  1820  0025                     ??_I2C_Master_Write:
  1821  0025                     ??_I2C_Master_Read:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824  0025                     ??_EEPROM_Read_Integer:	
  1825                           ; 1 bytes @ 0x5
  1826                           
  1827  0025                     ?_EEPROM_Write_Integer:	
  1828                           ; 1 bytes @ 0x5
  1829                           
  1830  0025                     ??_Send_Reply_OK:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833  0025                     ?_EEPROM_Write_String:	
  1834                           ; 1 bytes @ 0x5
  1835                           
  1836  0025                     EEPROM_Write_String@dado:	
  1837                           ; 1 bytes @ 0x5
  1838                           
  1839  0025                     EEPROM_Read_String@addr:	
  1840                           ; 1 bytes @ 0x5
  1841                           
  1842  0025                     USART_init@i:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845  0025                     EEPROM_Write_Integer@dado:	
  1846                           ; 1 bytes @ 0x5
  1847                           
  1848  0025                     ___lwdiv@quotient:	
  1849                           ; 2 bytes @ 0x5
  1850                           
  1851                           
  1852                           ; 2 bytes @ 0x5
  1853  0025                     	ds	1
  1854  0026                     ??_EEPROM_Write_String:
  1855  0026                     EEPROM_Read_Integer@addr:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     EEPROM_Read_String@c:	
  1859                           ; 1 bytes @ 0x6
  1860                           
  1861  0026                     __Umul8_16@word_mpld:	
  1862                           ; 1 bytes @ 0x6
  1863                           
  1864  0026                     my_delay_ms@i:	
  1865                           ; 2 bytes @ 0x6
  1866                           
  1867  0026                     my_delay_ms_WDT@i:	
  1868                           ; 4 bytes @ 0x6
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x6
  1872  0026                     	ds	1
  1873  0027                     ??_EEPROM_Write_Integer:
  1874  0027                     EEPROM_Read_Integer@ptr:	
  1875                           ; 1 bytes @ 0x7
  1876                           
  1877  0027                     EEPROM_Write_String@addr:	
  1878                           ; 1 bytes @ 0x7
  1879                           
  1880  0027                     ___lwdiv@counter:	
  1881                           ; 1 bytes @ 0x7
  1882                           
  1883  0027                     I2C_Master_Read@temp:	
  1884                           ; 1 bytes @ 0x7
  1885                           
  1886                           
  1887                           ; 2 bytes @ 0x7
  1888  0027                     	ds	1
  1889  0028                     ??___lldiv:
  1890  0028                     __Umul8_16@multiplier:	
  1891                           ; 1 bytes @ 0x8
  1892                           
  1893  0028                     ___xxtofl@sign:	
  1894                           ; 1 bytes @ 0x8
  1895                           
  1896  0028                     EEPROM_Read_Integer@result:	
  1897                           ; 1 bytes @ 0x8
  1898                           
  1899                           
  1900                           ; 2 bytes @ 0x8
  1901  0028                     	ds	1
  1902  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  1903  0029                     ?_EEPROM_24C1025_Read_Str:	
  1904                           ; 1 bytes @ 0x9
  1905                           
  1906  0029                     ?___flmul:	
  1907                           ; 1 bytes @ 0x9
  1908                           
  1909  0029                     EEPROM_Write_Integer@ptr:	
  1910                           ; 4 bytes @ 0x9
  1911                           
  1912  0029                     ___xxtofl@exp:	
  1913                           ; 1 bytes @ 0x9
  1914                           
  1915  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  1916                           ; 1 bytes @ 0x9
  1917                           
  1918  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1919                           ; 4 bytes @ 0x9
  1920                           
  1921  0029                     ___lldiv@quotient:	
  1922                           ; 4 bytes @ 0x9
  1923                           
  1924  0029                     ___flmul@b:	
  1925                           ; 4 bytes @ 0x9
  1926                           
  1927                           
  1928                           ; 4 bytes @ 0x9
  1929  0029                     	ds	1
  1930  002A                     ?_EEPROM_24C1025_Write_Buffer:
  1931  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1932                           ; 1 bytes @ 0xA
  1933                           
  1934  002A                     ?_EEPROM_24C1025_Write_Str:	
  1935                           ; 1 bytes @ 0xA
  1936                           
  1937  002A                     EEPROM_Write_Integer@addr:	
  1938                           ; 1 bytes @ 0xA
  1939                           
  1940  002A                     EEPROM_Read_Integer@i:	
  1941                           ; 1 bytes @ 0xA
  1942                           
  1943  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1944                           ; 1 bytes @ 0xA
  1945                           
  1946  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1947                           ; 4 bytes @ 0xA
  1948                           
  1949  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1950                           ; 4 bytes @ 0xA
  1951                           
  1952  002A                     ___xxtofl@arg:	
  1953                           ; 4 bytes @ 0xA
  1954                           
  1955                           
  1956                           ; 4 bytes @ 0xA
  1957  002A                     	ds	1
  1958  002B                     EEPROM_Write_Integer@i:
  1959                           
  1960                           ; 1 bytes @ 0xB
  1961  002B                     	ds	2
  1962  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  1963  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1964                           ; 1 bytes @ 0xD
  1965                           
  1966  002D                     ___lldiv@counter:	
  1967                           ; 1 bytes @ 0xD
  1968                           
  1969  002D                     ___flmul@a:	
  1970                           ; 1 bytes @ 0xD
  1971                           
  1972                           
  1973                           ; 4 bytes @ 0xD
  1974  002D                     	ds	1
  1975  002E                     ??_EEPROM_24C1025_Read_Str:
  1976  002E                     ?_I2C_Master_Init:	
  1977                           ; 1 bytes @ 0xE
  1978                           
  1979  002E                     ?_ADC_Media_10bits:	
  1980                           ; 1 bytes @ 0xE
  1981                           
  1982  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1983                           ; 4 bytes @ 0xE
  1984                           
  1985  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1986                           ; 1 bytes @ 0xE
  1987                           
  1988  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  1989                           ; 1 bytes @ 0xE
  1990                           
  1991  002E                     EEPROM_24C1025_Write_Str@data:	
  1992                           ; 1 bytes @ 0xE
  1993                           
  1994  002E                     I2C_Master_Init@c:	
  1995                           ; 1 bytes @ 0xE
  1996                           
  1997                           
  1998                           ; 4 bytes @ 0xE
  1999  002E                     	ds	1
  2000  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2001  002F                     ??_EEPROM_24C1025_Write_Str:	
  2002                           ; 1 bytes @ 0xF
  2003                           
  2004  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2005                           ; 1 bytes @ 0xF
  2006                           
  2007  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2008                           ; 1 bytes @ 0xF
  2009                           
  2010                           
  2011                           ; 2 bytes @ 0xF
  2012  002F                     	ds	1
  2013  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2014  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2015                           ; 1 bytes @ 0x10
  2016                           
  2017                           
  2018                           ; 1 bytes @ 0x10
  2019  0030                     	ds	1
  2020  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2021  0031                     ??___flmul:	
  2022                           ; 1 bytes @ 0x11
  2023                           
  2024  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2025                           ; 1 bytes @ 0x11
  2026                           
  2027  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2028                           ; 1 bytes @ 0x11
  2029                           
  2030  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2031                           ; 1 bytes @ 0x11
  2032                           
  2033                           
  2034                           ; 1 bytes @ 0x11
  2035  0031                     	ds	1
  2036  0032                     ??_ADC_Media_10bits:
  2037  0032                     ??_I2C_Master_Init:	
  2038                           ; 1 bytes @ 0x12
  2039                           
  2040  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2041                           ; 1 bytes @ 0x12
  2042                           
  2043  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2044                           ; 1 bytes @ 0x12
  2045                           
  2046  0032                     EEPROM_24C1025_Write_Str@range:	
  2047                           ; 1 bytes @ 0x12
  2048                           
  2049  0032                     EEPROM_24C1025_Read_Str@range:	
  2050                           ; 1 bytes @ 0x12
  2051                           
  2052                           
  2053                           ; 1 bytes @ 0x12
  2054  0032                     	ds	1
  2055  0033                     EEPROM_24C1025_Write_Buffer@count:
  2056  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2057                           ; 1 bytes @ 0x13
  2058                           
  2059  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2060                           ; 1 bytes @ 0x13
  2061                           
  2062  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2063                           ; 1 bytes @ 0x13
  2064                           
  2065  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2066                           ; 1 bytes @ 0x13
  2067                           
  2068  0033                     ADC_Media_10bits@canal:	
  2069                           ; 1 bytes @ 0x13
  2070                           
  2071                           
  2072                           ; 1 bytes @ 0x13
  2073  0033                     	ds	1
  2074  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2075  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2076                           ; 1 bytes @ 0x14
  2077                           
  2078  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2079                           ; 1 bytes @ 0x14
  2080                           
  2081  0034                     ADC_Media_10bits@value:	
  2082                           ; 1 bytes @ 0x14
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0x14
  2086  0034                     	ds	1
  2087  0035                     EEPROM_24C1025_Write_Buffer@range:
  2088  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2089                           ; 1 bytes @ 0x15
  2090                           
  2091                           
  2092                           ; 1 bytes @ 0x15
  2093  0035                     	ds	1
  2094  0036                     ?_EEPROM_24C1025_Read_Byte:
  2095  0036                     ?_EEPROM_24C1025_Read_Int:	
  2096                           ; 1 bytes @ 0x16
  2097                           
  2098  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2099                           ; 2 bytes @ 0x16
  2100                           
  2101  0036                     ADC_Media_10bits@i:	
  2102                           ; 1 bytes @ 0x16
  2103                           
  2104  0036                     ___flmul@sign:	
  2105                           ; 1 bytes @ 0x16
  2106                           
  2107  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2108                           ; 1 bytes @ 0x16
  2109                           
  2110  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2111                           ; 4 bytes @ 0x16
  2112                           
  2113                           
  2114                           ; 4 bytes @ 0x16
  2115  0036                     	ds	1
  2116  0037                     ?_EEPROM_24C1025_Write_Byte:
  2117  0037                     ___flmul@aexp:	
  2118                           ; 1 bytes @ 0x17
  2119                           
  2120  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2121                           ; 1 bytes @ 0x17
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0x17
  2125  0037                     	ds	1
  2126  0038                     ___flmul@grs:
  2127                           
  2128                           ; 4 bytes @ 0x18
  2129  0038                     	ds	2
  2130  003A                     ??_EEPROM_24C1025_Read_Byte:
  2131  003A                     ??_EEPROM_24C1025_Read_Int:	
  2132                           ; 1 bytes @ 0x1A
  2133                           
  2134                           
  2135                           ; 1 bytes @ 0x1A
  2136  003A                     	ds	1
  2137  003B                     EEPROM_24C1025_Write_Byte@data:
  2138  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2139                           ; 1 bytes @ 0x1B
  2140                           
  2141                           
  2142                           ; 1 bytes @ 0x1B
  2143  003B                     	ds	1
  2144  003C                     ??_EEPROM_24C1025_Write_Byte:
  2145  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2146                           ; 1 bytes @ 0x1C
  2147                           
  2148  003C                     EEPROM_24C1025_Read_Byte@data:	
  2149                           ; 1 bytes @ 0x1C
  2150                           
  2151  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2152                           ; 1 bytes @ 0x1C
  2153                           
  2154  003C                     ___flmul@bexp:	
  2155                           ; 1 bytes @ 0x1C
  2156                           
  2157                           
  2158                           ; 1 bytes @ 0x1C
  2159  003C                     	ds	1
  2160  003D                     EEPROM_24C1025_Read_Int@data:
  2161  003D                     ___flmul@prod:	
  2162                           ; 2 bytes @ 0x1D
  2163                           
  2164                           
  2165                           ; 4 bytes @ 0x1D
  2166  003D                     	ds	4
  2167  0041                     ___flmul@temp:
  2168                           
  2169                           ; 2 bytes @ 0x21
  2170  0041                     	ds	2
  2171  0043                     ?___fltol:
  2172  0043                     ?___fldiv:	
  2173                           ; 4 bytes @ 0x23
  2174                           
  2175  0043                     ___fltol@f1:	
  2176                           ; 4 bytes @ 0x23
  2177                           
  2178  0043                     ___fldiv@a:	
  2179                           ; 4 bytes @ 0x23
  2180                           
  2181                           
  2182                           ; 4 bytes @ 0x23
  2183  0043                     	ds	4
  2184  0047                     ??___fltol:
  2185  0047                     ___fldiv@b:	
  2186                           ; 1 bytes @ 0x27
  2187                           
  2188                           
  2189                           ; 4 bytes @ 0x27
  2190  0047                     	ds	4
  2191  004B                     ??___fldiv:
  2192                           
  2193                           ; 1 bytes @ 0x2B
  2194  004B                     	ds	1
  2195  004C                     ___fltol@sign1:
  2196                           
  2197                           ; 1 bytes @ 0x2C
  2198  004C                     	ds	1
  2199  004D                     ___fltol@exp1:
  2200                           
  2201                           ; 1 bytes @ 0x2D
  2202  004D                     	ds	1
  2203  004E                     ?_USART_put_int:
  2204  004E                     ?_EEPROM_24C1025_Write_Int:	
  2205                           ; 1 bytes @ 0x2E
  2206                           
  2207  004E                     USART_put_int@value:	
  2208                           ; 1 bytes @ 0x2E
  2209                           
  2210  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2211                           ; 2 bytes @ 0x2E
  2212                           
  2213                           
  2214                           ; 4 bytes @ 0x2E
  2215  004E                     	ds	2
  2216  0050                     ??_USART_put_int:
  2217  0050                     ___fldiv@rem:	
  2218                           ; 1 bytes @ 0x30
  2219                           
  2220                           
  2221                           ; 4 bytes @ 0x30
  2222  0050                     	ds	1
  2223  0051                     USART_put_int@dado:
  2224                           
  2225                           ; 1 bytes @ 0x31
  2226  0051                     	ds	1
  2227  0052                     ?_PROCULUS_Control_Register_Write:
  2228  0052                     ?_PROCULUS_VP_Write:	
  2229                           ; 1 bytes @ 0x32
  2230                           
  2231  0052                     PROCULUS_Control_Register_Write@size:	
  2232                           ; 1 bytes @ 0x32
  2233                           
  2234  0052                     EEPROM_24C1025_Write_Int@data:	
  2235                           ; 1 bytes @ 0x32
  2236                           
  2237  0052                     PROCULUS_VP_Write@vp:	
  2238                           ; 2 bytes @ 0x32
  2239                           
  2240                           
  2241                           ; 2 bytes @ 0x32
  2242  0052                     	ds	1
  2243  0053                     ??_PROCULUS_Control_Register_Write:
  2244                           
  2245                           ; 1 bytes @ 0x33
  2246  0053                     	ds	1
  2247  0054                     ??_EEPROM_24C1025_Write_Int:
  2248  0054                     PROCULUS_Control_Register_Write@vetor:	
  2249                           ; 1 bytes @ 0x34
  2250                           
  2251  0054                     ___fldiv@sign:	
  2252                           ; 1 bytes @ 0x34
  2253                           
  2254  0054                     PROCULUS_VP_Write@vetor:	
  2255                           ; 1 bytes @ 0x34
  2256                           
  2257                           
  2258                           ; 2 bytes @ 0x34
  2259  0054                     	ds	1
  2260  0055                     EEPROM_24C1025_Write_Int@chip_add:
  2261  0055                     PROCULUS_Control_Register_Write@i:	
  2262                           ; 1 bytes @ 0x35
  2263                           
  2264  0055                     ___fldiv@new_exp:	
  2265                           ; 1 bytes @ 0x35
  2266                           
  2267                           
  2268                           ; 2 bytes @ 0x35
  2269  0055                     	ds	1
  2270  0056                     ?_PROCULUS_Show_Screen:
  2271  0056                     ?_PROCULUS_Buzzer:	
  2272                           ; 1 bytes @ 0x36
  2273                           
  2274  0056                     PROCULUS_VP_Write@size:	
  2275                           ; 1 bytes @ 0x36
  2276                           
  2277  0056                     EEPROM_24C1025_Write_Int@local:	
  2278                           ; 1 bytes @ 0x36
  2279                           
  2280  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2281                           ; 2 bytes @ 0x36
  2282                           
  2283  0056                     PROCULUS_Show_Screen@screen:	
  2284                           ; 2 bytes @ 0x36
  2285                           
  2286                           
  2287                           ; 2 bytes @ 0x36
  2288  0056                     	ds	1
  2289  0057                     ??_PROCULUS_VP_Write:
  2290  0057                     ___fldiv@grs:	
  2291                           ; 1 bytes @ 0x37
  2292                           
  2293                           
  2294                           ; 4 bytes @ 0x37
  2295  0057                     	ds	1
  2296  0058                     ?_Save_Log:
  2297  0058                     ??_PROCULUS_Show_Screen:	
  2298                           ; 1 bytes @ 0x38
  2299                           
  2300  0058                     ??_PROCULUS_Buzzer:	
  2301                           ; 1 bytes @ 0x38
  2302                           
  2303  0058                     ?_EEPROM_24C1025_Fill_All:	
  2304                           ; 1 bytes @ 0x38
  2305                           
  2306  0058                     EEPROM_24C1025_Fill_All@value:	
  2307                           ; 1 bytes @ 0x38
  2308                           
  2309  0058                     Save_Log@add_datalog:	
  2310                           ; 2 bytes @ 0x38
  2311                           
  2312                           
  2313                           ; 4 bytes @ 0x38
  2314  0058                     	ds	1
  2315  0059                     PROCULUS_VP_Write@i:
  2316  0059                     PROCULUS_Buzzer@vetor:	
  2317                           ; 1 bytes @ 0x39
  2318                           
  2319  0059                     PROCULUS_Show_Screen@vetor:	
  2320                           ; 2 bytes @ 0x39
  2321                           
  2322                           
  2323                           ; 3 bytes @ 0x39
  2324  0059                     	ds	1
  2325  005A                     ?_PROCULUS_VP_Write_String:
  2326  005A                     ??_EEPROM_24C1025_Fill_All:	
  2327                           ; 1 bytes @ 0x3A
  2328                           
  2329  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2330                           ; 1 bytes @ 0x3A
  2331                           
  2332  005A                     PROCULUS_VP_Write_String@vp:	
  2333                           ; 1 bytes @ 0x3A
  2334                           
  2335                           
  2336                           ; 2 bytes @ 0x3A
  2337  005A                     	ds	1
  2338  005B                     ___fldiv@bexp:
  2339  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2340                           ; 1 bytes @ 0x3B
  2341                           
  2342                           
  2343                           ; 4 bytes @ 0x3B
  2344  005B                     	ds	1
  2345  005C                     ??_Save_Log:
  2346  005C                     PROCULUS_VP_Write_String@text:	
  2347                           ; 1 bytes @ 0x3C
  2348                           
  2349  005C                     ___fldiv@aexp:	
  2350                           ; 1 bytes @ 0x3C
  2351                           
  2352                           
  2353                           ; 1 bytes @ 0x3C
  2354  005C                     	ds	1
  2355  005D                     ??_PROCULUS_VP_Write_String:
  2356  005D                     ?___fladd:	
  2357                           ; 1 bytes @ 0x3D
  2358                           
  2359  005D                     ___fladd@b:	
  2360                           ; 4 bytes @ 0x3D
  2361                           
  2362                           
  2363                           ; 4 bytes @ 0x3D
  2364  005D                     	ds	2
  2365  005F                     ??_Decodify_Command:
  2366                           
  2367                           ; 1 bytes @ 0x3F
  2368  005F                     	ds	2
  2369  0061                     ___fladd@a:
  2370                           
  2371                           ; 4 bytes @ 0x41
  2372  0061                     	ds	4
  2373  0065                     ??___fladd:
  2374                           
  2375                           ; 1 bytes @ 0x45
  2376  0065                     	ds	8
  2377  006D                     main@reset:
  2378                           
  2379                           ; 2 bytes @ 0x4D
  2380  006D                     	ds	2
  2381                           
  2382                           	psect	maintext
  2383  1322                     __pmaintext:	
  2384 ;;
  2385 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2386 ;;
  2387 ;; *************** function _main *****************
  2388 ;; Defined at:
  2389 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  reset           2   77[BANK0 ] unsigned int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : B00/0
  2400 ;;		On exit  : 300/100
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       2       0       0       0
  2405 ;;      Temps:          0       0       3       0       0
  2406 ;;      Totals:         0       2       3       0       0
  2407 ;;Total ram usage:        5 bytes
  2408 ;; Hardware stack levels required when called: 7
  2409 ;; This function calls:
  2410 ;;		_ADC_init
  2411 ;;		_Decodify_Command
  2412 ;;		_EEPROM_Read_Integer
  2413 ;;		_EEPROM_Write_Integer
  2414 ;;		_I2C_Master_Init
  2415 ;;		_USART_init
  2416 ;;		_mediaLeituraPt100Umidadde
  2417 ;;		_my_delay_ms_WDT
  2418 ;; This function is called by:
  2419 ;;		Startup code after reset
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _main
  2425  1322                     _main:
  2426                           
  2427                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2431  1322  3002               	movlw	2
  2432  1323  1683               	bsf	3,5	;RP0=1, select bank1
  2433  1324  1303               	bcf	3,6	;RP1=0, select bank1
  2434  1325  00CC               	movwf	(??_main^(0+128)+2)
  2435  1326  3004               	movlw	4
  2436  1327  00CB               	movwf	(??_main^(0+128)+1)
  2437  1328  30B9               	movlw	185
  2438  1329  00CA               	movwf	??_main^(0+128)
  2439  132A                     u5237:
  2440  132A  0BCA               	decfsz	??_main^(0+128),f
  2441  132B  2B2A               	goto	u5237
  2442  132C  0BCB               	decfsz	(??_main^(0+128)+1),f
  2443  132D  2B2A               	goto	u5237
  2444  132E  0BCC               	decfsz	(??_main^(0+128)+2),f
  2445  132F  2B2A               	goto	u5237
  2446  1330  2B31               	nop2
  2447                           
  2448                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2449  1331  1683               	bsf	3,5	;RP0=1, select bank1
  2450  1332  1303               	bcf	3,6	;RP1=0, select bank1
  2451  1333  160F               	bsf	15,4	;volatile
  2452                           
  2453                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2454  1334  168F               	bsf	15,5	;volatile
  2455                           
  2456                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2457  1335  170F               	bsf	15,6	;volatile
  2458                           
  2459                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2460  1336  1283               	bcf	3,5	;RP0=0, select bank0
  2461  1337  0185               	clrf	5	;volatile
  2462                           
  2463                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2464  1338  0186               	clrf	6	;volatile
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2467  1339  0187               	clrf	7	;volatile
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2470  133A  0189               	clrf	9	;volatile
  2471                           
  2472                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2473  133B  30EF               	movlw	239
  2474  133C  1683               	bsf	3,5	;RP0=1, select bank1
  2475  133D  0085               	movwf	5	;volatile
  2476                           
  2477                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2478  133E  300F               	movlw	15
  2479  133F  0086               	movwf	6	;volatile
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2482  1340  30F0               	movlw	240
  2483  1341  0087               	movwf	7	;volatile
  2484                           
  2485                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2486  1342  30FF               	movlw	255
  2487  1343  0089               	movwf	9	;volatile
  2488                           
  2489                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2490  1344  3011               	movlw	17
  2491  1345  1703               	bsf	3,6	;RP1=1, select bank3
  2492  1346  0088               	movwf	8	;volatile
  2493                           
  2494                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2495  1347  0189               	clrf	9	;volatile
  2496                           
  2497                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2498  1348  1303               	bcf	3,6	;RP1=0, select bank1
  2499  1349  1381               	bcf	1,7	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2502  134A  300F               	movlw	15
  2503  134B  0095               	movwf	21	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2506  134C  1283               	bcf	3,5	;RP0=0, select bank0
  2507  134D  1786               	bsf	6,7	;volatile
  2508                           
  2509                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2510  134E  1706               	bsf	6,6	;volatile
  2511                           
  2512                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2513  134F  1686               	bsf	6,5	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2516  1350  3000               	movlw	0
  2517  1351  00A3               	movwf	my_delay_ms_WDT@time+3
  2518  1352  3000               	movlw	0
  2519  1353  00A2               	movwf	my_delay_ms_WDT@time+2
  2520  1354  3003               	movlw	3
  2521  1355  00A1               	movwf	my_delay_ms_WDT@time+1
  2522  1356  30E8               	movlw	232
  2523  1357  00A0               	movwf	my_delay_ms_WDT@time
  2524  1358  160A  158A  264E  160A  118A  	fcall	_my_delay_ms_WDT
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2527  135D  1683               	bsf	3,5	;RP0=1, select bank1
  2528  135E  1281               	bcf	1,5	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2531  135F  1581               	bsf	1,3	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2534  1360  1401               	bsf	1,0	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2537  1361  1481               	bsf	1,1	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2540  1362  1501               	bsf	1,2	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2543  1363  128B               	bcf	11,5	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2546  1364  120B               	bcf	11,4	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2549  1365  178B               	bsf	11,7	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2552  1366  170B               	bsf	11,6	;volatile
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2555  1367  1283               	bcf	3,5	;RP0=0, select bank0
  2556  1368  1610               	bsf	16,4	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2559  1369  1690               	bsf	16,5	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2562  136A  1090               	bcf	16,1	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2565  136B  1683               	bsf	3,5	;RP0=1, select bank1
  2566  136C  140C               	bsf	12,0	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2569  136D  3001               	movlw	1
  2570  136E  1283               	bcf	3,5	;RP0=0, select bank0
  2571  136F  0090               	movwf	16	;volatile
  2572  1370  0064               	clrwdt	;# 
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2575  1371  160A  158A  2304  160A  118A  	fcall	_ADC_init
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2578  1376  3000               	movlw	0
  2579  1377  00B1               	movwf	I2C_Master_Init@c+3
  2580  1378  3001               	movlw	1
  2581  1379  00B0               	movwf	I2C_Master_Init@c+2
  2582  137A  3086               	movlw	134
  2583  137B  00AF               	movwf	I2C_Master_Init@c+1
  2584  137C  30A0               	movlw	160
  2585  137D  00AE               	movwf	I2C_Master_Init@c
  2586  137E  160A  158A  254C  160A  118A  	fcall	_I2C_Master_Init
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2589  1383  3000               	movlw	0
  2590  1384  1283               	bcf	3,5	;RP0=0, select bank0
  2591  1385  00A3               	movwf	USART_init@baudrate+3
  2592  1386  3001               	movlw	1
  2593  1387  00A2               	movwf	USART_init@baudrate+2
  2594  1388  30C2               	movlw	194
  2595  1389  00A1               	movwf	USART_init@baudrate+1
  2596  138A  3000               	movlw	0
  2597  138B  00A0               	movwf	USART_init@baudrate
  2598  138C  160A  158A  2777  160A  118A  	fcall	_USART_init
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2601  1391  3010               	movlw	16
  2602  1392  160A  158A  2522  160A  118A  	fcall	_EEPROM_Read_Integer
  2603  1397  0824               	movf	?_EEPROM_Read_Integer+1,w
  2604  1398  00EE               	movwf	main@reset+1
  2605  1399  0823               	movf	?_EEPROM_Read_Integer,w
  2606  139A  00ED               	movwf	main@reset
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2609  139B  0A6D               	incf	main@reset,w
  2610  139C  1D03               	skipz
  2611  139D  2BAA               	goto	l5771
  2612  139E  0A6E               	incf	main@reset+1,w
  2613  139F  1D03               	btfss	3,2
  2614  13A0  2BAA               	goto	l5771
  2615  13A1  3000               	movlw	0
  2616  13A2  00A5               	movwf	EEPROM_Write_Integer@dado
  2617  13A3  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2618  13A4  3010               	movlw	16
  2619  13A5  160A  158A  257D  160A  118A  	fcall	_EEPROM_Write_Integer
  2620  13AA                     l5771:
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2623  13AA  3001               	movlw	1
  2624  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  2625  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  2626  13AD  07ED               	addwf	main@reset,f
  2627  13AE  1803               	skipnc
  2628  13AF  0AEE               	incf	main@reset+1,f
  2629  13B0  3000               	movlw	0
  2630  13B1  07EE               	addwf	main@reset+1,f
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2633  13B2  086E               	movf	main@reset+1,w
  2634  13B3  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2635  13B4  086D               	movf	main@reset,w
  2636  13B5  00A5               	movwf	EEPROM_Write_Integer@dado
  2637  13B6  3010               	movlw	16
  2638  13B7  160A  158A  257D  160A  118A  	fcall	_EEPROM_Write_Integer
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2641  13BC  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2642  13BD  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2643                           
  2644                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2645  13BE  1683               	bsf	3,5	;RP0=1, select bank1
  2646  13BF  1303               	bcf	3,6	;RP1=0, select bank1
  2647  13C0  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2648  13C1  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2651  13C2  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2652  13C3  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2655  13C4  01FD               	clrf	_segundo	;volatile
  2656                           
  2657                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2658  13C5  01FC               	clrf	_hora	;volatile
  2659                           
  2660                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2661  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  2662  13C7  1007               	bcf	7,0	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2665  13C8  1087               	bcf	7,1	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2668  13C9  1105               	bcf	5,2	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2671  13CA  1185               	bcf	5,3	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2674  13CB  0906               	comf	6,w	;volatile
  2675  13CC  390F               	andlw	15
  2676  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  2677  13CE  00CA               	movwf	??_main^(0+128)
  2678  13CF  084A               	movf	??_main^(0+128),w
  2679  13D0  00B8               	movwf	_Board_Number^(0+128)
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2682  13D1  01B9               	clrf	_canal^(0+128)
  2683  13D2  0AB9               	incf	_canal^(0+128),f
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 228:      statuspower.flag_global_condensador=0;
  2686  13D3  10BA               	bcf	_statuspower^(0+128),1
  2687  13D4                     l5797:
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2690  13D4  1283               	bcf	3,5	;RP0=0, select bank0
  2691  13D5  17EF               	bsf	_generic_status,7
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 269:          if(++canal==2) canal=0;
  2694  13D6  3001               	movlw	1
  2695  13D7  1683               	bsf	3,5	;RP0=1, select bank1
  2696  13D8  00CA               	movwf	??_main^(0+128)
  2697  13D9  084A               	movf	??_main^(0+128),w
  2698  13DA  07B9               	addwf	_canal^(0+128),f
  2699  13DB  3002               	movlw	2
  2700  13DC  0639               	xorwf	_canal^(0+128),w
  2701  13DD  1903               	btfsc	3,2
  2702  13DE  01B9               	clrf	_canal^(0+128)
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 270:          mediaLeituraPt100Umidadde(canal);
  2705  13DF  0839               	movf	_canal^(0+128),w
  2706  13E0  120A  118A  26BD  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2709  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  2710  13E6  1C6F               	btfss	_generic_status,0
  2711  13E7  2BD4               	goto	l5797
  2712                           
  2713                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2714  13E8  1703               	bsf	3,6	;RP1=1, select bank2
  2715  13E9  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2716  13EA  1683               	bsf	3,5	;RP0=1, select bank1
  2717  13EB  1303               	bcf	3,6	;RP1=0, select bank1
  2718  13EC  00AF               	movwf	(_header+1)^(0+128)
  2719  13ED  1283               	bcf	3,5	;RP0=0, select bank2
  2720  13EE  1703               	bsf	3,6	;RP1=1, select bank2
  2721  13EF  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2722  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  2723  13F1  1303               	bcf	3,6	;RP1=0, select bank1
  2724  13F2  00AE               	movwf	_header^(0+128)
  2725                           
  2726                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2727  13F3  30BB               	movlw	187
  2728  13F4  062E               	xorwf	_header^(0+128),w
  2729  13F5  30AA               	movlw	170
  2730  13F6  1903               	skipnz
  2731  13F7  062F               	xorwf	(_header+1)^(0+128),w
  2732  13F8  1D03               	btfss	3,2
  2733  13F9  2BD4               	goto	l5797
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2736  13FA  1283               	bcf	3,5	;RP0=0, select bank2
  2737  13FB  1703               	bsf	3,6	;RP1=1, select bank2
  2738  13FC  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2739  13FD  1683               	bsf	3,5	;RP0=1, select bank1
  2740  13FE  1303               	bcf	3,6	;RP1=0, select bank1
  2741  13FF  00CA               	movwf	??_main^(0+128)
  2742  1400  084A               	movf	??_main^(0+128),w
  2743  1401  00B7               	movwf	_destino^(0+128)
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2746  1402  0837               	movf	_destino^(0+128),w
  2747  1403  0638               	xorwf	_Board_Number^(0+128),w
  2748  1404  1D03               	btfss	3,2
  2749  1405  0A37               	incf	_destino^(0+128),w
  2750  1406  1D03               	btfss	3,2
  2751  1407  2BD4               	goto	l5797
  2752                           
  2753                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2754  1408  3014               	movlw	20
  2755  1409  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2756  140A  3000               	movlw	0
  2757  140B  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2760  140C  120A  118A  203A  160A  118A  	fcall	_Decodify_Command
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2763  1411  1283               	bcf	3,5	;RP0=0, select bank0
  2764  1412  1303               	bcf	3,6	;RP1=0, select bank0
  2765  1413  106F               	bcf	_generic_status,0
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 296:             }
  2768  1414  2BD4               	goto	l5797
  2769  1415                     __end_of_main:
  2770                           
  2771                           	psect	text1
  2772  06BD                     __ptext1:	
  2773 ;; *************** function _mediaLeituraPt100Umidadde *****************
  2774 ;; Defined at:
  2775 ;;		line 684 in file "SlaveLiofilizadorVer1.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  canal           1    wreg     unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  canal           1    8[BANK1 ] unsigned char 
  2780 ;;  Temp            4    9[BANK1 ] float 
  2781 ;;  tensao          4    0        float 
  2782 ;;  i               1   13[BANK1 ] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 300/100
  2789 ;;		On exit  : 300/100
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         0       0       6       0       0
  2794 ;;      Temps:          0       0       4       0       0
  2795 ;;      Totals:         0       0      10       0       0
  2796 ;;Total ram usage:       10 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 3
  2799 ;; This function calls:
  2800 ;;		_ADC_Media_10bits
  2801 ;;		_Package_Usart_is_for_me
  2802 ;;		___fladd
  2803 ;;		___fldiv
  2804 ;;		___flmul
  2805 ;;		___xxtofl
  2806 ;;		_my_delay_ms
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _mediaLeituraPt100Umidadde
  2814  06BD                     _mediaLeituraPt100Umidadde:
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2818                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  2819  06BD  00C3               	movwf	mediaLeituraPt100Umidadde@canal^(0+128)
  2820                           
  2821                           ;SlaveLiofilizadorVer1.c: 684: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 685:      {;SlaveLiofilizadorVer1.c: 686:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 687:      float tensao;;SlaveLiofilizadorVer1.c: 688:      char i;;Slave
      +                          LiofilizadorVer1.c: 690:      ADCON0bits.CHS=canal;
  2822  06BE  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2823  06BF  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2824  06C0  0DBF               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2825  06C1  0DBF               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2826  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2827  06C3  081F               	movf	31,w	;volatile
  2828  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  2829  06C5  063F               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2830  06C6  39C3               	andlw	-61
  2831  06C7  063F               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2832  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2833  06C9  009F               	movwf	31	;volatile
  2834                           
  2835                           ;SlaveLiofilizadorVer1.c: 691:      my_delay_ms(1);
  2836  06CA  3000               	movlw	0
  2837  06CB  00A3               	movwf	my_delay_ms@time+3
  2838  06CC  3000               	movlw	0
  2839  06CD  00A2               	movwf	my_delay_ms@time+2
  2840  06CE  3000               	movlw	0
  2841  06CF  00A1               	movwf	my_delay_ms@time+1
  2842  06D0  3001               	movlw	1
  2843  06D1  00A0               	movwf	my_delay_ms@time
  2844  06D2  160A  158A  2617  120A  118A  	fcall	_my_delay_ms
  2845                           
  2846                           ;SlaveLiofilizadorVer1.c: 692:      Temp=0;
  2847  06D7  3000               	movlw	0
  2848  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2849  06D9  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2850  06DA  3000               	movlw	0
  2851  06DB  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2852  06DC  3000               	movlw	0
  2853  06DD  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2854  06DE  3000               	movlw	0
  2855  06DF  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2856                           
  2857                           ;SlaveLiofilizadorVer1.c: 694:      for(i=1;i<15;i++)
  2858  06E0  01C8               	clrf	mediaLeituraPt100Umidadde@i^(0+128)
  2859  06E1  0AC8               	incf	mediaLeituraPt100Umidadde@i^(0+128),f
  2860  06E2                     l4957:
  2861                           
  2862                           ;SlaveLiofilizadorVer1.c: 695:         {;SlaveLiofilizadorVer1.c: 696:         Temp+=ADC
      +                          _Media_10bits(canal);
  2863  06E2  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2864  06E3  160A  118A  20B4  120A  118A  	fcall	_ADC_Media_10bits
  2865  06E8  0831               	movf	?_ADC_Media_10bits+3,w
  2866  06E9  00E0               	movwf	___fladd@b+3
  2867  06EA  0830               	movf	?_ADC_Media_10bits+2,w
  2868  06EB  00DF               	movwf	___fladd@b+2
  2869  06EC  082F               	movf	?_ADC_Media_10bits+1,w
  2870  06ED  00DE               	movwf	___fladd@b+1
  2871  06EE  082E               	movf	?_ADC_Media_10bits,w
  2872  06EF  00DD               	movwf	___fladd@b
  2873  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  2874  06F1  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  2875  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2876  06F3  00E4               	movwf	___fladd@a+3
  2877  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2878  06F5  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  2879  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2880  06F7  00E3               	movwf	___fladd@a+2
  2881  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2882  06F9  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  2883  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2884  06FB  00E2               	movwf	___fladd@a+1
  2885  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2886  06FD  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  2887  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  2888  06FF  00E1               	movwf	___fladd@a
  2889  0700  120A  158A  256F  120A  118A  	fcall	___fladd
  2890  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0706  0860               	movf	?___fladd+3,w
  2892  0707  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0708  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2894  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2895  070A  085F               	movf	?___fladd+2,w
  2896  070B  1683               	bsf	3,5	;RP0=1, select bank1
  2897  070C  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2898  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2899  070E  085E               	movf	?___fladd+1,w
  2900  070F  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0710  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2902  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0712  085D               	movf	?___fladd,w
  2904  0713  1683               	bsf	3,5	;RP0=1, select bank1
  2905  0714  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2906                           
  2907                           ;SlaveLiofilizadorVer1.c: 697:         if(Package_Usart_is_for_me()==1) break;
  2908  0715  160A  158A  239E  120A  118A  	fcall	_Package_Usart_is_for_me
  2909  071A  3A01               	xorlw	1
  2910  071B  1903               	btfsc	3,2
  2911  071C  2F26               	goto	l4967
  2912                           
  2913                           ;SlaveLiofilizadorVer1.c: 698:         }
  2914  071D  3001               	movlw	1
  2915  071E  1683               	bsf	3,5	;RP0=1, select bank1
  2916  071F  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2917  0720  083F               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  2918  0721  07C8               	addwf	mediaLeituraPt100Umidadde@i^(0+128),f
  2919  0722  300F               	movlw	15
  2920  0723  0248               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2921  0724  1C03               	skipc
  2922  0725  2EE2               	goto	l4957
  2923  0726                     l4967:
  2924                           
  2925                           ;SlaveLiofilizadorVer1.c: 699:      if(i<10)
  2926  0726  300A               	movlw	10
  2927  0727  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0728  0248               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2929  0729  1C03               	btfss	3,0
  2930  072A  0008               	return
  2931                           
  2932                           ;SlaveLiofilizadorVer1.c: 706:      if(i==15)
  2933  072B  300F               	movlw	15
  2934  072C  0648               	xorwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2935  072D  1D03               	btfss	3,2
  2936  072E  2F3D               	goto	l4975
  2937                           
  2938                           ;SlaveLiofilizadorVer1.c: 707:        Temp/=(i-1);
  2939  072F  0848               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2940  0730  3EFF               	addlw	255
  2941  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0732  00A0               	movwf	___xxtofl@val
  2943  0733  30FF               	movlw	255
  2944  0734  1803               	skipnc
  2945  0735  3000               	movlw	0
  2946  0736  00A1               	movwf	___xxtofl@val+1
  2947  0737  01A2               	clrf	___xxtofl@val+2
  2948  0738  1BA1               	btfsc	___xxtofl@val+1,7
  2949  0739  03A2               	decf	___xxtofl@val+2,f
  2950  073A  0822               	movf	___xxtofl@val+2,w
  2951  073B  00A3               	movwf	___xxtofl@val+3
  2952  073C  2F51               	goto	L1
  2953  073D                     l4975:
  2954                           
  2955                           ;SlaveLiofilizadorVer1.c: 709:        Temp/=(i);
  2956  073D  0848               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2957  073E  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2958  073F  01C0               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+1)
  2959  0740  01C1               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+2)
  2960  0741  01C2               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+3)
  2961  0742  0842               	movf	(??_mediaLeituraPt100Umidadde+3)^(0+128),w
  2962  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0744  00A3               	movwf	___xxtofl@val+3
  2964  0745  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0746  0841               	movf	(??_mediaLeituraPt100Umidadde+2)^(0+128),w
  2966  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0748  00A2               	movwf	___xxtofl@val+2
  2968  0749  1683               	bsf	3,5	;RP0=1, select bank1
  2969  074A  0840               	movf	(??_mediaLeituraPt100Umidadde+1)^(0+128),w
  2970  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2971  074C  00A1               	movwf	___xxtofl@val+1
  2972  074D  1683               	bsf	3,5	;RP0=1, select bank1
  2973  074E  083F               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  2974  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0750  00A0               	movwf	___xxtofl@val
  2976  0751                     L1:
  2977  0751  3001               	movlw	1
  2978  0752  120A  158A  202F  120A  118A  	fcall	___xxtofl
  2979  0757  0823               	movf	?___xxtofl+3,w
  2980  0758  00C6               	movwf	___fldiv@a+3
  2981  0759  0822               	movf	?___xxtofl+2,w
  2982  075A  00C5               	movwf	___fldiv@a+2
  2983  075B  0821               	movf	?___xxtofl+1,w
  2984  075C  00C4               	movwf	___fldiv@a+1
  2985  075D  0820               	movf	?___xxtofl,w
  2986  075E  00C3               	movwf	___fldiv@a
  2987  075F  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0760  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  2989  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0762  00CA               	movwf	___fldiv@b+3
  2991  0763  1683               	bsf	3,5	;RP0=1, select bank1
  2992  0764  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  2993  0765  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0766  00C9               	movwf	___fldiv@b+2
  2995  0767  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0768  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  2997  0769  1283               	bcf	3,5	;RP0=0, select bank0
  2998  076A  00C8               	movwf	___fldiv@b+1
  2999  076B  1683               	bsf	3,5	;RP0=1, select bank1
  3000  076C  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3001  076D  1283               	bcf	3,5	;RP0=0, select bank0
  3002  076E  00C7               	movwf	___fldiv@b
  3003  076F  120A  158A  23CE  120A  118A  	fcall	___fldiv
  3004  0774  0846               	movf	?___fldiv+3,w
  3005  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0776  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  3007  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0778  0845               	movf	?___fldiv+2,w
  3009  0779  1683               	bsf	3,5	;RP0=1, select bank1
  3010  077A  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  3011  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3012  077C  0844               	movf	?___fldiv+1,w
  3013  077D  1683               	bsf	3,5	;RP0=1, select bank1
  3014  077E  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  3015  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0780  0843               	movf	?___fldiv,w
  3017  0781  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0782  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  3019                           
  3020                           ;SlaveLiofilizadorVer1.c: 721:      if(canal==0)
  3021  0783  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  3022  0784  1D03               	btfss	3,2
  3023  0785  2FDD               	goto	l4981
  3024                           
  3025                           ;SlaveLiofilizadorVer1.c: 722:         {;SlaveLiofilizadorVer1.c: 723:         Temperatu
      +                          ra0=((200.0 * Temp) / 1023.0) - 100.0;
  3026  0786  30C2               	movlw	194
  3027  0787  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0788  00E0               	movwf	___fladd@b+3
  3029  0789  30C8               	movlw	200
  3030  078A  00DF               	movwf	___fladd@b+2
  3031  078B  3000               	movlw	0
  3032  078C  00DE               	movwf	___fladd@b+1
  3033  078D  3000               	movlw	0
  3034  078E  00DD               	movwf	___fladd@b
  3035  078F  3044               	movlw	68
  3036  0790  00C6               	movwf	___fldiv@a+3
  3037  0791  307F               	movlw	127
  3038  0792  00C5               	movwf	___fldiv@a+2
  3039  0793  30C0               	movlw	192
  3040  0794  00C4               	movwf	___fldiv@a+1
  3041  0795  3000               	movlw	0
  3042  0796  00C3               	movwf	___fldiv@a
  3043  0797  3043               	movlw	67
  3044  0798  00AC               	movwf	___flmul@b+3
  3045  0799  3048               	movlw	72
  3046  079A  00AB               	movwf	___flmul@b+2
  3047  079B  3000               	movlw	0
  3048  079C  00AA               	movwf	___flmul@b+1
  3049  079D  3000               	movlw	0
  3050  079E  00A9               	movwf	___flmul@b
  3051  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3052  07A0  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3053  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  3054  07A2  00B0               	movwf	___flmul@a+3
  3055  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3056  07A4  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3057  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3058  07A6  00AF               	movwf	___flmul@a+2
  3059  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3060  07A8  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3061  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3062  07AA  00AE               	movwf	___flmul@a+1
  3063  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3064  07AC  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3065  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3066  07AE  00AD               	movwf	___flmul@a
  3067  07AF  120A  118A  23C8  120A  118A  	fcall	___flmul
  3068  07B4  082C               	movf	?___flmul+3,w
  3069  07B5  00CA               	movwf	___fldiv@b+3
  3070  07B6  082B               	movf	?___flmul+2,w
  3071  07B7  00C9               	movwf	___fldiv@b+2
  3072  07B8  082A               	movf	?___flmul+1,w
  3073  07B9  00C8               	movwf	___fldiv@b+1
  3074  07BA  0829               	movf	?___flmul,w
  3075  07BB  00C7               	movwf	___fldiv@b
  3076  07BC  120A  158A  23CE  120A  118A  	fcall	___fldiv
  3077  07C1  0846               	movf	?___fldiv+3,w
  3078  07C2  00E4               	movwf	___fladd@a+3
  3079  07C3  0845               	movf	?___fldiv+2,w
  3080  07C4  00E3               	movwf	___fladd@a+2
  3081  07C5  0844               	movf	?___fldiv+1,w
  3082  07C6  00E2               	movwf	___fladd@a+1
  3083  07C7  0843               	movf	?___fldiv,w
  3084  07C8  00E1               	movwf	___fladd@a
  3085  07C9  120A  158A  256F   	fcall	___fladd
  3086  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3087  07CD  0860               	movf	?___fladd+3,w
  3088  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  3089  07CF  00A7               	movwf	(_Temperatura0+3)^(0+128)
  3090  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3091  07D1  085F               	movf	?___fladd+2,w
  3092  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  3093  07D3  00A6               	movwf	(_Temperatura0+2)^(0+128)
  3094  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  3095  07D5  085E               	movf	?___fladd+1,w
  3096  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  3097  07D7  00A5               	movwf	(_Temperatura0+1)^(0+128)
  3098  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3099  07D9  085D               	movf	?___fladd,w
  3100  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  3101  07DB  00A4               	movwf	_Temperatura0^(0+128)
  3102                           
  3103                           ;SlaveLiofilizadorVer1.c: 724:         }
  3104  07DC  0008               	return
  3105  07DD                     l4981:
  3106                           
  3107                           ;SlaveLiofilizadorVer1.c: 726:         {;SlaveLiofilizadorVer1.c: 727:         Umidade1=
      +                          Temp;
  3108  07DD  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3109  07DE  00A3               	movwf	(_Umidade1+3)^(0+128)
  3110  07DF  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3111  07E0  00A2               	movwf	(_Umidade1+2)^(0+128)
  3112  07E1  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3113  07E2  00A1               	movwf	(_Umidade1+1)^(0+128)
  3114  07E3  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3115  07E4  00A0               	movwf	_Umidade1^(0+128)
  3116  07E5  0008               	return
  3117  07E6                     __end_of_mediaLeituraPt100Umidadde:
  3118                           
  3119                           	psect	text2
  3120  0BCE                     __ptext2:	
  3121 ;; *************** function ___fldiv *****************
  3122 ;; Defined at:
  3123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  a               4   35[BANK0 ] void 
  3126 ;;  b               4   39[BANK0 ] void 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  grs             4   55[BANK0 ] unsigned long 
  3129 ;;  rem             4   48[BANK0 ] unsigned long 
  3130 ;;  new_exp         2   53[BANK0 ] int 
  3131 ;;  aexp            1   60[BANK0 ] unsigned char 
  3132 ;;  bexp            1   59[BANK0 ] unsigned char 
  3133 ;;  sign            1   52[BANK0 ] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  4   35[BANK0 ] unsigned char 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, btemp+1
  3138 ;; Tracked objects:
  3139 ;;		On entry : 300/0
  3140 ;;		On exit  : 300/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       8       0       0       0
  3144 ;;      Locals:         0      13       0       0       0
  3145 ;;      Temps:          0       5       0       0       0
  3146 ;;      Totals:         0      26       0       0       0
  3147 ;;Total ram usage:       26 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_mediaLeituraPt100Umidadde
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function ___fldiv
  3159  0BCE                     ___fldiv:
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3163  0BCE  084A               	movf	___fldiv@b+3,w
  3164  0BCF  3980               	andlw	128
  3165  0BD0  00CB               	movwf	??___fldiv
  3166  0BD1  084B               	movf	??___fldiv,w
  3167  0BD2  00D4               	movwf	___fldiv@sign
  3168  0BD3  084A               	movf	___fldiv@b+3,w
  3169  0BD4  00CB               	movwf	??___fldiv
  3170  0BD5  074B               	addwf	??___fldiv,w
  3171  0BD6  00CC               	movwf	??___fldiv+1
  3172  0BD7  084C               	movf	??___fldiv+1,w
  3173  0BD8  00DB               	movwf	___fldiv@bexp
  3174  0BD9  1BC9               	btfsc	___fldiv@b+2,7
  3175  0BDA  145B               	bsf	___fldiv@bexp,0
  3176  0BDB  085B               	movf	___fldiv@bexp,w
  3177  0BDC  1903               	btfsc	3,2
  3178  0BDD  2BEC               	goto	l4751
  3179  0BDE  0A5B               	incf	___fldiv@bexp,w
  3180  0BDF  1D03               	btfss	3,2
  3181  0BE0  2BE9               	goto	l4747
  3182  0BE1  3000               	movlw	0
  3183  0BE2  00CA               	movwf	___fldiv@b+3
  3184  0BE3  3000               	movlw	0
  3185  0BE4  00C9               	movwf	___fldiv@b+2
  3186  0BE5  3000               	movlw	0
  3187  0BE6  00C8               	movwf	___fldiv@b+1
  3188  0BE7  3000               	movlw	0
  3189  0BE8  00C7               	movwf	___fldiv@b
  3190  0BE9                     l4747:
  3191  0BE9  17C9               	bsf	___fldiv@b+2,7
  3192  0BEA  01CA               	clrf	___fldiv@b+3
  3193  0BEB  2BF4               	goto	l4753
  3194  0BEC                     l4751:
  3195  0BEC  3000               	movlw	0
  3196  0BED  00CA               	movwf	___fldiv@b+3
  3197  0BEE  3000               	movlw	0
  3198  0BEF  00C9               	movwf	___fldiv@b+2
  3199  0BF0  3000               	movlw	0
  3200  0BF1  00C8               	movwf	___fldiv@b+1
  3201  0BF2  3000               	movlw	0
  3202  0BF3  00C7               	movwf	___fldiv@b
  3203  0BF4                     l4753:
  3204  0BF4  0846               	movf	___fldiv@a+3,w
  3205  0BF5  3980               	andlw	128
  3206  0BF6  00CB               	movwf	??___fldiv
  3207  0BF7  084B               	movf	??___fldiv,w
  3208  0BF8  06D4               	xorwf	___fldiv@sign,f
  3209  0BF9  0846               	movf	___fldiv@a+3,w
  3210  0BFA  00CB               	movwf	??___fldiv
  3211  0BFB  074B               	addwf	??___fldiv,w
  3212  0BFC  00CC               	movwf	??___fldiv+1
  3213  0BFD  084C               	movf	??___fldiv+1,w
  3214  0BFE  00DC               	movwf	___fldiv@aexp
  3215  0BFF  1BC5               	btfsc	___fldiv@a+2,7
  3216  0C00  145C               	bsf	___fldiv@aexp,0
  3217  0C01  085C               	movf	___fldiv@aexp,w
  3218  0C02  1903               	btfsc	3,2
  3219  0C03  2C12               	goto	l4771
  3220  0C04  0A5C               	incf	___fldiv@aexp,w
  3221  0C05  1D03               	btfss	3,2
  3222  0C06  2C0F               	goto	l4767
  3223  0C07  3000               	movlw	0
  3224  0C08  00C6               	movwf	___fldiv@a+3
  3225  0C09  3000               	movlw	0
  3226  0C0A  00C5               	movwf	___fldiv@a+2
  3227  0C0B  3000               	movlw	0
  3228  0C0C  00C4               	movwf	___fldiv@a+1
  3229  0C0D  3000               	movlw	0
  3230  0C0E  00C3               	movwf	___fldiv@a
  3231  0C0F                     l4767:
  3232  0C0F  17C5               	bsf	___fldiv@a+2,7
  3233  0C10  01C6               	clrf	___fldiv@a+3
  3234  0C11  2C1A               	goto	l1334
  3235  0C12                     l4771:
  3236  0C12  3000               	movlw	0
  3237  0C13  00C6               	movwf	___fldiv@a+3
  3238  0C14  3000               	movlw	0
  3239  0C15  00C5               	movwf	___fldiv@a+2
  3240  0C16  3000               	movlw	0
  3241  0C17  00C4               	movwf	___fldiv@a+1
  3242  0C18  3000               	movlw	0
  3243  0C19  00C3               	movwf	___fldiv@a
  3244  0C1A                     l1334:
  3245  0C1A  0846               	movf	___fldiv@a+3,w
  3246  0C1B  0445               	iorwf	___fldiv@a+2,w
  3247  0C1C  0444               	iorwf	___fldiv@a+1,w
  3248  0C1D  0443               	iorwf	___fldiv@a,w
  3249  0C1E  1D03               	skipz
  3250  0C1F  2C39               	goto	l4781
  3251  0C20  3000               	movlw	0
  3252  0C21  00CA               	movwf	___fldiv@b+3
  3253  0C22  3000               	movlw	0
  3254  0C23  00C9               	movwf	___fldiv@b+2
  3255  0C24  3000               	movlw	0
  3256  0C25  00C8               	movwf	___fldiv@b+1
  3257  0C26  3000               	movlw	0
  3258  0C27  00C7               	movwf	___fldiv@b
  3259  0C28  3080               	movlw	128
  3260  0C29  04C9               	iorwf	___fldiv@b+2,f
  3261  0C2A  307F               	movlw	127
  3262  0C2B  04CA               	iorwf	___fldiv@b+3,f
  3263  0C2C                     L2:
  3264  0C2C  0854               	movf	___fldiv@sign,w
  3265  0C2D  00CB               	movwf	??___fldiv
  3266  0C2E  084B               	movf	??___fldiv,w
  3267  0C2F  04CA               	iorwf	___fldiv@b+3,f
  3268  0C30  084A               	movf	___fldiv@b+3,w
  3269  0C31  00C6               	movwf	?___fldiv+3
  3270  0C32  0849               	movf	___fldiv@b+2,w
  3271  0C33  00C5               	movwf	?___fldiv+2
  3272  0C34  0848               	movf	___fldiv@b+1,w
  3273  0C35  00C4               	movwf	?___fldiv+1
  3274  0C36  0847               	movf	___fldiv@b,w
  3275  0C37  00C3               	movwf	?___fldiv
  3276  0C38  0008               	return
  3277  0C39                     l4781:
  3278  0C39  085B               	movf	___fldiv@bexp,w
  3279  0C3A  1D03               	btfss	3,2
  3280  0C3B  2C45               	goto	l4787
  3281  0C3C  3000               	movlw	0
  3282  0C3D  00C6               	movwf	?___fldiv+3
  3283  0C3E  3000               	movlw	0
  3284  0C3F  00C5               	movwf	?___fldiv+2
  3285  0C40  3000               	movlw	0
  3286  0C41  00C4               	movwf	?___fldiv+1
  3287  0C42  3000               	movlw	0
  3288  0C43  00C3               	movwf	?___fldiv
  3289  0C44  0008               	return
  3290  0C45                     l4787:
  3291  0C45  085B               	movf	___fldiv@bexp,w
  3292  0C46  00CB               	movwf	??___fldiv
  3293  0C47  01CC               	clrf	??___fldiv+1
  3294  0C48  084C               	movf	??___fldiv+1,w
  3295  0C49  00CE               	movwf	??___fldiv+3
  3296  0C4A  085C               	movf	___fldiv@aexp,w
  3297  0C4B  024B               	subwf	??___fldiv,w
  3298  0C4C  00CD               	movwf	??___fldiv+2
  3299  0C4D  1C03               	skipc
  3300  0C4E  03CE               	decf	??___fldiv+3,f
  3301  0C4F  084D               	movf	??___fldiv+2,w
  3302  0C50  3E7F               	addlw	127
  3303  0C51  00D5               	movwf	___fldiv@new_exp
  3304  0C52  084E               	movf	??___fldiv+3,w
  3305  0C53  1803               	skipnc
  3306  0C54  3E01               	addlw	1
  3307  0C55  3E00               	addlw	0
  3308  0C56  00D6               	movwf	___fldiv@new_exp+1
  3309  0C57  084A               	movf	___fldiv@b+3,w
  3310  0C58  00D3               	movwf	___fldiv@rem+3
  3311  0C59  0849               	movf	___fldiv@b+2,w
  3312  0C5A  00D2               	movwf	___fldiv@rem+2
  3313  0C5B  0848               	movf	___fldiv@b+1,w
  3314  0C5C  00D1               	movwf	___fldiv@rem+1
  3315  0C5D  0847               	movf	___fldiv@b,w
  3316  0C5E  00D0               	movwf	___fldiv@rem
  3317  0C5F  3000               	movlw	0
  3318  0C60  00CA               	movwf	___fldiv@b+3
  3319  0C61  3000               	movlw	0
  3320  0C62  00C9               	movwf	___fldiv@b+2
  3321  0C63  3000               	movlw	0
  3322  0C64  00C8               	movwf	___fldiv@b+1
  3323  0C65  3000               	movlw	0
  3324  0C66  00C7               	movwf	___fldiv@b
  3325  0C67  3000               	movlw	0
  3326  0C68  00DA               	movwf	___fldiv@grs+3
  3327  0C69  3000               	movlw	0
  3328  0C6A  00D9               	movwf	___fldiv@grs+2
  3329  0C6B  3000               	movlw	0
  3330  0C6C  00D8               	movwf	___fldiv@grs+1
  3331  0C6D  3000               	movlw	0
  3332  0C6E  00D7               	movwf	___fldiv@grs
  3333  0C6F  01DC               	clrf	___fldiv@aexp
  3334  0C70                     l4815:
  3335  0C70  301A               	movlw	26
  3336  0C71  025C               	subwf	___fldiv@aexp,w
  3337  0C72  1803               	btfsc	3,0
  3338  0C73  2CB8               	goto	l4817
  3339  0C74  085C               	movf	___fldiv@aexp,w
  3340  0C75  1903               	btfsc	3,2
  3341  0C76  2C94               	goto	l4807
  3342  0C77  3001               	movlw	1
  3343  0C78  00CB               	movwf	??___fldiv
  3344  0C79                     u4485:
  3345  0C79  1003               	clrc
  3346  0C7A  0DD0               	rlf	___fldiv@rem,f
  3347  0C7B  0DD1               	rlf	___fldiv@rem+1,f
  3348  0C7C  0DD2               	rlf	___fldiv@rem+2,f
  3349  0C7D  0DD3               	rlf	___fldiv@rem+3,f
  3350  0C7E  0BCB               	decfsz	??___fldiv,f
  3351  0C7F  2C79               	goto	u4485
  3352  0C80  3001               	movlw	1
  3353  0C81  00CB               	movwf	??___fldiv
  3354  0C82                     u4495:
  3355  0C82  1003               	clrc
  3356  0C83  0DC7               	rlf	___fldiv@b,f
  3357  0C84  0DC8               	rlf	___fldiv@b+1,f
  3358  0C85  0DC9               	rlf	___fldiv@b+2,f
  3359  0C86  0DCA               	rlf	___fldiv@b+3,f
  3360  0C87  0BCB               	decfsz	??___fldiv,f
  3361  0C88  2C82               	goto	u4495
  3362  0C89  1BDA               	btfsc	___fldiv@grs+3,7
  3363  0C8A  1447               	bsf	___fldiv@b,0
  3364  0C8B  3001               	movlw	1
  3365  0C8C  00CB               	movwf	??___fldiv
  3366  0C8D                     u4515:
  3367  0C8D  1003               	clrc
  3368  0C8E  0DD7               	rlf	___fldiv@grs,f
  3369  0C8F  0DD8               	rlf	___fldiv@grs+1,f
  3370  0C90  0DD9               	rlf	___fldiv@grs+2,f
  3371  0C91  0DDA               	rlf	___fldiv@grs+3,f
  3372  0C92  0BCB               	decfsz	??___fldiv,f
  3373  0C93  2C8D               	goto	u4515
  3374  0C94                     l4807:
  3375  0C94  0846               	movf	___fldiv@a+3,w
  3376  0C95  0253               	subwf	___fldiv@rem+3,w
  3377  0C96  1D03               	skipz
  3378  0C97  2CA2               	goto	u4525
  3379  0C98  0845               	movf	___fldiv@a+2,w
  3380  0C99  0252               	subwf	___fldiv@rem+2,w
  3381  0C9A  1D03               	skipz
  3382  0C9B  2CA2               	goto	u4525
  3383  0C9C  0844               	movf	___fldiv@a+1,w
  3384  0C9D  0251               	subwf	___fldiv@rem+1,w
  3385  0C9E  1D03               	skipz
  3386  0C9F  2CA2               	goto	u4525
  3387  0CA0  0843               	movf	___fldiv@a,w
  3388  0CA1  0250               	subwf	___fldiv@rem,w
  3389  0CA2                     u4525:
  3390  0CA2  1C03               	skipc
  3391  0CA3  2CB3               	goto	l4813
  3392  0CA4  175A               	bsf	___fldiv@grs+3,6
  3393  0CA5  0843               	movf	___fldiv@a,w
  3394  0CA6  02D0               	subwf	___fldiv@rem,f
  3395  0CA7  0844               	movf	___fldiv@a+1,w
  3396  0CA8  1C03               	skipc
  3397  0CA9  0F44               	incfsz	___fldiv@a+1,w
  3398  0CAA  02D1               	subwf	___fldiv@rem+1,f
  3399  0CAB  0845               	movf	___fldiv@a+2,w
  3400  0CAC  1C03               	skipc
  3401  0CAD  0F45               	incfsz	___fldiv@a+2,w
  3402  0CAE  02D2               	subwf	___fldiv@rem+2,f
  3403  0CAF  0846               	movf	___fldiv@a+3,w
  3404  0CB0  1C03               	skipc
  3405  0CB1  0F46               	incfsz	___fldiv@a+3,w
  3406  0CB2  02D3               	subwf	___fldiv@rem+3,f
  3407  0CB3                     l4813:
  3408  0CB3  3001               	movlw	1
  3409  0CB4  00CB               	movwf	??___fldiv
  3410  0CB5  084B               	movf	??___fldiv,w
  3411  0CB6  07DC               	addwf	___fldiv@aexp,f
  3412  0CB7  2C70               	goto	l4815
  3413  0CB8                     l4817:
  3414  0CB8  0853               	movf	___fldiv@rem+3,w
  3415  0CB9  0452               	iorwf	___fldiv@rem+2,w
  3416  0CBA  0451               	iorwf	___fldiv@rem+1,w
  3417  0CBB  0450               	iorwf	___fldiv@rem,w
  3418  0CBC  1D03               	btfss	3,2
  3419  0CBD  1457               	bsf	___fldiv@grs,0
  3420  0CBE                     l4831:
  3421  0CBE  1BC9               	btfsc	___fldiv@b+2,7
  3422  0CBF  2CDB               	goto	l4833
  3423  0CC0  3001               	movlw	1
  3424  0CC1  00CB               	movwf	??___fldiv
  3425  0CC2                     u4555:
  3426  0CC2  1003               	clrc
  3427  0CC3  0DC7               	rlf	___fldiv@b,f
  3428  0CC4  0DC8               	rlf	___fldiv@b+1,f
  3429  0CC5  0DC9               	rlf	___fldiv@b+2,f
  3430  0CC6  0DCA               	rlf	___fldiv@b+3,f
  3431  0CC7  0BCB               	decfsz	??___fldiv,f
  3432  0CC8  2CC2               	goto	u4555
  3433  0CC9  1BDA               	btfsc	___fldiv@grs+3,7
  3434  0CCA  1447               	bsf	___fldiv@b,0
  3435  0CCB  3001               	movlw	1
  3436  0CCC  00CB               	movwf	??___fldiv
  3437  0CCD                     u4575:
  3438  0CCD  1003               	clrc
  3439  0CCE  0DD7               	rlf	___fldiv@grs,f
  3440  0CCF  0DD8               	rlf	___fldiv@grs+1,f
  3441  0CD0  0DD9               	rlf	___fldiv@grs+2,f
  3442  0CD1  0DDA               	rlf	___fldiv@grs+3,f
  3443  0CD2  0BCB               	decfsz	??___fldiv,f
  3444  0CD3  2CCD               	goto	u4575
  3445  0CD4  30FF               	movlw	255
  3446  0CD5  07D5               	addwf	___fldiv@new_exp,f
  3447  0CD6  1803               	skipnc
  3448  0CD7  0AD6               	incf	___fldiv@new_exp+1,f
  3449  0CD8  30FF               	movlw	255
  3450  0CD9  07D6               	addwf	___fldiv@new_exp+1,f
  3451  0CDA  2CBE               	goto	l4831
  3452  0CDB                     l4833:
  3453  0CDB  01DC               	clrf	___fldiv@aexp
  3454  0CDC  1FDA               	btfss	___fldiv@grs+3,7
  3455  0CDD  2CF4               	goto	l4843
  3456  0CDE  30FF               	movlw	255
  3457  0CDF  0557               	andwf	___fldiv@grs,w
  3458  0CE0  00CB               	movwf	??___fldiv
  3459  0CE1  30FF               	movlw	255
  3460  0CE2  0558               	andwf	___fldiv@grs+1,w
  3461  0CE3  00CC               	movwf	??___fldiv+1
  3462  0CE4  30FF               	movlw	255
  3463  0CE5  0559               	andwf	___fldiv@grs+2,w
  3464  0CE6  00CD               	movwf	??___fldiv+2
  3465  0CE7  307F               	movlw	127
  3466  0CE8  055A               	andwf	___fldiv@grs+3,w
  3467  0CE9  00CE               	movwf	??___fldiv+3
  3468  0CEA  084E               	movf	??___fldiv+3,w
  3469  0CEB  044D               	iorwf	??___fldiv+2,w
  3470  0CEC  044C               	iorwf	??___fldiv+1,w
  3471  0CED  044B               	iorwf	??___fldiv,w
  3472  0CEE  1903               	skipnz
  3473  0CEF  1847               	btfsc	___fldiv@b,0
  3474  0CF0  2CF2               	goto	l4839
  3475  0CF1  2CF4               	goto	l4843
  3476  0CF2                     l4839:
  3477  0CF2  01DC               	clrf	___fldiv@aexp
  3478  0CF3  0ADC               	incf	___fldiv@aexp,f
  3479  0CF4                     l4843:
  3480  0CF4  085C               	movf	___fldiv@aexp,w
  3481  0CF5  1903               	btfsc	3,2
  3482  0CF6  2D26               	goto	l4853
  3483  0CF7  3001               	movlw	1
  3484  0CF8  07C7               	addwf	___fldiv@b,f
  3485  0CF9  3000               	movlw	0
  3486  0CFA  1803               	skipnc
  3487  0CFB  3001               	movlw	1
  3488  0CFC  07C8               	addwf	___fldiv@b+1,f
  3489  0CFD  3000               	movlw	0
  3490  0CFE  1803               	skipnc
  3491  0CFF  3001               	movlw	1
  3492  0D00  07C9               	addwf	___fldiv@b+2,f
  3493  0D01  3000               	movlw	0
  3494  0D02  1803               	skipnc
  3495  0D03  3001               	movlw	1
  3496  0D04  07CA               	addwf	___fldiv@b+3,f
  3497  0D05  1C4A               	btfss	___fldiv@b+3,0
  3498  0D06  2D26               	goto	l4853
  3499  0D07  0847               	movf	___fldiv@b,w
  3500  0D08  00CB               	movwf	??___fldiv
  3501  0D09  0848               	movf	___fldiv@b+1,w
  3502  0D0A  00CC               	movwf	??___fldiv+1
  3503  0D0B  0849               	movf	___fldiv@b+2,w
  3504  0D0C  00CD               	movwf	??___fldiv+2
  3505  0D0D  084A               	movf	___fldiv@b+3,w
  3506  0D0E  00CE               	movwf	??___fldiv+3
  3507  0D0F  3001               	movlw	1
  3508  0D10  00CF               	movwf	??___fldiv+4
  3509  0D11                     u4645:
  3510  0D11  0D4E               	rlf	??___fldiv+3,w
  3511  0D12  0CCE               	rrf	??___fldiv+3,f
  3512  0D13  0CCD               	rrf	??___fldiv+2,f
  3513  0D14  0CCC               	rrf	??___fldiv+1,f
  3514  0D15  0CCB               	rrf	??___fldiv,f
  3515  0D16  0BCF               	decfsz	??___fldiv+4,f
  3516  0D17  2D11               	goto	u4645
  3517  0D18  084E               	movf	??___fldiv+3,w
  3518  0D19  00CA               	movwf	___fldiv@b+3
  3519  0D1A  084D               	movf	??___fldiv+2,w
  3520  0D1B  00C9               	movwf	___fldiv@b+2
  3521  0D1C  084C               	movf	??___fldiv+1,w
  3522  0D1D  00C8               	movwf	___fldiv@b+1
  3523  0D1E  084B               	movf	??___fldiv,w
  3524  0D1F  00C7               	movwf	___fldiv@b
  3525  0D20  3001               	movlw	1
  3526  0D21  07D5               	addwf	___fldiv@new_exp,f
  3527  0D22  1803               	skipnc
  3528  0D23  0AD6               	incf	___fldiv@new_exp+1,f
  3529  0D24  3000               	movlw	0
  3530  0D25  07D6               	addwf	___fldiv@new_exp+1,f
  3531  0D26                     l4853:
  3532  0D26  0856               	movf	___fldiv@new_exp+1,w
  3533  0D27  3A80               	xorlw	128
  3534  0D28  00FF               	movwf	127
  3535  0D29  3080               	movlw	128
  3536  0D2A  027F               	subwf	127,w
  3537  0D2B  1D03               	skipz
  3538  0D2C  2D2F               	goto	u4655
  3539  0D2D  30FF               	movlw	255
  3540  0D2E  0255               	subwf	___fldiv@new_exp,w
  3541  0D2F                     u4655:
  3542  0D2F  1C03               	skipc
  3543  0D30  2D3F               	goto	l4857
  3544  0D31  30FF               	movlw	255
  3545  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0D34  00D5               	movwf	___fldiv@new_exp
  3548  0D35  3000               	movlw	0
  3549  0D36  00D6               	movwf	___fldiv@new_exp+1
  3550  0D37  3000               	movlw	0
  3551  0D38  00CA               	movwf	___fldiv@b+3
  3552  0D39  3000               	movlw	0
  3553  0D3A  00C9               	movwf	___fldiv@b+2
  3554  0D3B  3000               	movlw	0
  3555  0D3C  00C8               	movwf	___fldiv@b+1
  3556  0D3D  3000               	movlw	0
  3557  0D3E  00C7               	movwf	___fldiv@b
  3558  0D3F                     l4857:
  3559  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0D41  0856               	movf	___fldiv@new_exp+1,w
  3562  0D42  3A80               	xorlw	128
  3563  0D43  00FF               	movwf	127
  3564  0D44  3080               	movlw	128
  3565  0D45  027F               	subwf	127,w
  3566  0D46  1D03               	skipz
  3567  0D47  2D4A               	goto	u4665
  3568  0D48  3001               	movlw	1
  3569  0D49  0255               	subwf	___fldiv@new_exp,w
  3570  0D4A                     u4665:
  3571  0D4A  1803               	skipnc
  3572  0D4B  2D59               	goto	l1356
  3573  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0D4E  01D5               	clrf	___fldiv@new_exp
  3576  0D4F  01D6               	clrf	___fldiv@new_exp+1
  3577  0D50  3000               	movlw	0
  3578  0D51  00CA               	movwf	___fldiv@b+3
  3579  0D52  3000               	movlw	0
  3580  0D53  00C9               	movwf	___fldiv@b+2
  3581  0D54  3000               	movlw	0
  3582  0D55  00C8               	movwf	___fldiv@b+1
  3583  0D56  3000               	movlw	0
  3584  0D57  00C7               	movwf	___fldiv@b
  3585  0D58  01D4               	clrf	___fldiv@sign
  3586  0D59                     l1356:
  3587  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0D5B  0855               	movf	___fldiv@new_exp,w
  3590  0D5C  00CB               	movwf	??___fldiv
  3591  0D5D  084B               	movf	??___fldiv,w
  3592  0D5E  00DB               	movwf	___fldiv@bexp
  3593  0D5F  1C5B               	btfss	___fldiv@bexp,0
  3594  0D60  2D63               	goto	l4869
  3595  0D61  17C9               	bsf	___fldiv@b+2,7
  3596  0D62  2D67               	goto	l1358
  3597  0D63                     l4869:
  3598  0D63  307F               	movlw	127
  3599  0D64  00CB               	movwf	??___fldiv
  3600  0D65  084B               	movf	??___fldiv,w
  3601  0D66  05C9               	andwf	___fldiv@b+2,f
  3602  0D67                     l1358:
  3603  0D67  085B               	movf	___fldiv@bexp,w
  3604  0D68  00CB               	movwf	??___fldiv
  3605  0D69  1003               	clrc
  3606  0D6A  0C4B               	rrf	??___fldiv,w
  3607  0D6B  00CC               	movwf	??___fldiv+1
  3608  0D6C  084C               	movf	??___fldiv+1,w
  3609  0D6D  00CA               	movwf	___fldiv@b+3
  3610  0D6E  2C2C               	goto	L2
  3611  0D6F                     __end_of___fldiv:
  3612                           
  3613                           	psect	text3
  3614  0D6F                     __ptext3:	
  3615 ;; *************** function ___fladd *****************
  3616 ;; Defined at:
  3617 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  b               4   61[BANK0 ] unsigned char 
  3620 ;;  a               4   65[BANK0 ] unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  grs             1    3[BANK1 ] unsigned char 
  3623 ;;  bexp            1    2[BANK1 ] unsigned char 
  3624 ;;  aexp            1    1[BANK1 ] unsigned char 
  3625 ;;  signs           1    0[BANK1 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  4   61[BANK0 ] unsigned char 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, btemp+1
  3630 ;; Tracked objects:
  3631 ;;		On entry : 300/0
  3632 ;;		On exit  : 200/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       8       0       0       0
  3636 ;;      Locals:         0       0       4       0       0
  3637 ;;      Temps:          0       8       0       0       0
  3638 ;;      Totals:         0      16       4       0       0
  3639 ;;Total ram usage:       20 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_mediaLeituraPt100Umidadde
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function ___fladd
  3651  0D6F                     ___fladd:
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3655  0D6F  0860               	movf	___fladd@b+3,w
  3656  0D70  3980               	andlw	128
  3657  0D71  00E5               	movwf	??___fladd
  3658  0D72  0865               	movf	??___fladd,w
  3659  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  3660  0D74  00BB               	movwf	___fladd@signs^(0+128)
  3661  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0D76  0860               	movf	___fladd@b+3,w
  3663  0D77  00E5               	movwf	??___fladd
  3664  0D78  0765               	addwf	??___fladd,w
  3665  0D79  00E6               	movwf	??___fladd+1
  3666  0D7A  0866               	movf	??___fladd+1,w
  3667  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  3668  0D7C  00BD               	movwf	___fladd@bexp^(0+128)
  3669  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0D7E  1FDF               	btfss	___fladd@b+2,7
  3671  0D7F  2D82               	goto	l4547
  3672  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  3673  0D81  143D               	bsf	___fladd@bexp^(0+128),0
  3674  0D82                     l4547:
  3675  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  3676  0D83  083D               	movf	___fladd@bexp^(0+128),w
  3677  0D84  1903               	btfsc	3,2
  3678  0D85  2D96               	goto	l4557
  3679  0D86  0A3D               	incf	___fladd@bexp^(0+128),w
  3680  0D87  1D03               	btfss	3,2
  3681  0D88  2D92               	goto	l4553
  3682  0D89  3000               	movlw	0
  3683  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0D8B  00E0               	movwf	___fladd@b+3
  3685  0D8C  3000               	movlw	0
  3686  0D8D  00DF               	movwf	___fladd@b+2
  3687  0D8E  3000               	movlw	0
  3688  0D8F  00DE               	movwf	___fladd@b+1
  3689  0D90  3000               	movlw	0
  3690  0D91  00DD               	movwf	___fladd@b
  3691  0D92                     l4553:
  3692  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0D93  17DF               	bsf	___fladd@b+2,7
  3694  0D94  01E0               	clrf	___fladd@b+3
  3695  0D95  2D9F               	goto	l4559
  3696  0D96                     l4557:
  3697  0D96  3000               	movlw	0
  3698  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0D98  00E0               	movwf	___fladd@b+3
  3700  0D99  3000               	movlw	0
  3701  0D9A  00DF               	movwf	___fladd@b+2
  3702  0D9B  3000               	movlw	0
  3703  0D9C  00DE               	movwf	___fladd@b+1
  3704  0D9D  3000               	movlw	0
  3705  0D9E  00DD               	movwf	___fladd@b
  3706  0D9F                     l4559:
  3707  0D9F  0864               	movf	___fladd@a+3,w
  3708  0DA0  3980               	andlw	128
  3709  0DA1  00E5               	movwf	??___fladd
  3710  0DA2  0865               	movf	??___fladd,w
  3711  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0DA4  00BC               	movwf	___fladd@aexp^(0+128)
  3713  0DA5  083C               	movf	___fladd@aexp^(0+128),w
  3714  0DA6  063B               	xorwf	___fladd@signs^(0+128),w
  3715  0DA7  1D03               	btfss	3,2
  3716  0DA8  173B               	bsf	___fladd@signs^(0+128),6
  3717  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0DAA  0864               	movf	___fladd@a+3,w
  3719  0DAB  00E5               	movwf	??___fladd
  3720  0DAC  0765               	addwf	??___fladd,w
  3721  0DAD  00E6               	movwf	??___fladd+1
  3722  0DAE  0866               	movf	??___fladd+1,w
  3723  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  3724  0DB0  00BC               	movwf	___fladd@aexp^(0+128)
  3725  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0DB2  1FE3               	btfss	___fladd@a+2,7
  3727  0DB3  2DB6               	goto	l4571
  3728  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0DB5  143C               	bsf	___fladd@aexp^(0+128),0
  3730  0DB6                     l4571:
  3731  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  3732  0DB7  083C               	movf	___fladd@aexp^(0+128),w
  3733  0DB8  1903               	btfsc	3,2
  3734  0DB9  2DCA               	goto	l4581
  3735  0DBA  0A3C               	incf	___fladd@aexp^(0+128),w
  3736  0DBB  1D03               	btfss	3,2
  3737  0DBC  2DC6               	goto	l4577
  3738  0DBD  3000               	movlw	0
  3739  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0DBF  00E4               	movwf	___fladd@a+3
  3741  0DC0  3000               	movlw	0
  3742  0DC1  00E3               	movwf	___fladd@a+2
  3743  0DC2  3000               	movlw	0
  3744  0DC3  00E2               	movwf	___fladd@a+1
  3745  0DC4  3000               	movlw	0
  3746  0DC5  00E1               	movwf	___fladd@a
  3747  0DC6                     l4577:
  3748  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0DC7  17E3               	bsf	___fladd@a+2,7
  3750  0DC8  01E4               	clrf	___fladd@a+3
  3751  0DC9  2DD3               	goto	l1278
  3752  0DCA                     l4581:
  3753  0DCA  3000               	movlw	0
  3754  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0DCC  00E4               	movwf	___fladd@a+3
  3756  0DCD  3000               	movlw	0
  3757  0DCE  00E3               	movwf	___fladd@a+2
  3758  0DCF  3000               	movlw	0
  3759  0DD0  00E2               	movwf	___fladd@a+1
  3760  0DD1  3000               	movlw	0
  3761  0DD2  00E1               	movwf	___fladd@a
  3762  0DD3                     l1278:
  3763  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0DD4  083D               	movf	___fladd@bexp^(0+128),w
  3765  0DD5  023C               	subwf	___fladd@aexp^(0+128),w
  3766  0DD6  1803               	skipnc
  3767  0DD7  2E33               	goto	l4617
  3768  0DD8  1F3B               	btfss	___fladd@signs^(0+128),6
  3769  0DD9  2DE0               	goto	l4587
  3770  0DDA  3080               	movlw	128
  3771  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0DDC  00E5               	movwf	??___fladd
  3773  0DDD  0865               	movf	??___fladd,w
  3774  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  3775  0DDF  06BB               	xorwf	___fladd@signs^(0+128),f
  3776  0DE0                     l4587:
  3777  0DE0  083D               	movf	___fladd@bexp^(0+128),w
  3778  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0DE2  00E5               	movwf	??___fladd
  3780  0DE3  0865               	movf	??___fladd,w
  3781  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  3782  0DE5  00BE               	movwf	___fladd@grs^(0+128)
  3783  0DE6  083C               	movf	___fladd@aexp^(0+128),w
  3784  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0DE8  00E5               	movwf	??___fladd
  3786  0DE9  0865               	movf	??___fladd,w
  3787  0DEA  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0DEB  00BD               	movwf	___fladd@bexp^(0+128)
  3789  0DEC  083E               	movf	___fladd@grs^(0+128),w
  3790  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0DEE  00E5               	movwf	??___fladd
  3792  0DEF  0865               	movf	??___fladd,w
  3793  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3794  0DF1  00BC               	movwf	___fladd@aexp^(0+128)
  3795  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0DF3  085D               	movf	___fladd@b,w
  3797  0DF4  00E5               	movwf	??___fladd
  3798  0DF5  0865               	movf	??___fladd,w
  3799  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  3800  0DF7  00BE               	movwf	___fladd@grs^(0+128)
  3801  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0DF9  0861               	movf	___fladd@a,w
  3803  0DFA  00E5               	movwf	??___fladd
  3804  0DFB  0865               	movf	??___fladd,w
  3805  0DFC  00DD               	movwf	___fladd@b
  3806  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  3807  0DFE  083E               	movf	___fladd@grs^(0+128),w
  3808  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0E00  00E5               	movwf	??___fladd
  3810  0E01  0865               	movf	??___fladd,w
  3811  0E02  00E1               	movwf	___fladd@a
  3812  0E03  085E               	movf	___fladd@b+1,w
  3813  0E04  00E5               	movwf	??___fladd
  3814  0E05  0865               	movf	??___fladd,w
  3815  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3816  0E07  00BE               	movwf	___fladd@grs^(0+128)
  3817  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0E09  0862               	movf	___fladd@a+1,w
  3819  0E0A  00E5               	movwf	??___fladd
  3820  0E0B  0865               	movf	??___fladd,w
  3821  0E0C  00DE               	movwf	___fladd@b+1
  3822  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3823  0E0E  083E               	movf	___fladd@grs^(0+128),w
  3824  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0E10  00E5               	movwf	??___fladd
  3826  0E11  0865               	movf	??___fladd,w
  3827  0E12  00E2               	movwf	___fladd@a+1
  3828  0E13  085F               	movf	___fladd@b+2,w
  3829  0E14  00E5               	movwf	??___fladd
  3830  0E15  0865               	movf	??___fladd,w
  3831  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0E17  00BE               	movwf	___fladd@grs^(0+128)
  3833  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0E19  0863               	movf	___fladd@a+2,w
  3835  0E1A  00E5               	movwf	??___fladd
  3836  0E1B  0865               	movf	??___fladd,w
  3837  0E1C  00DF               	movwf	___fladd@b+2
  3838  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0E1E  083E               	movf	___fladd@grs^(0+128),w
  3840  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0E20  00E5               	movwf	??___fladd
  3842  0E21  0865               	movf	??___fladd,w
  3843  0E22  00E3               	movwf	___fladd@a+2
  3844  0E23  0860               	movf	___fladd@b+3,w
  3845  0E24  00E5               	movwf	??___fladd
  3846  0E25  0865               	movf	??___fladd,w
  3847  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  3848  0E27  00BE               	movwf	___fladd@grs^(0+128)
  3849  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0E29  0864               	movf	___fladd@a+3,w
  3851  0E2A  00E5               	movwf	??___fladd
  3852  0E2B  0865               	movf	??___fladd,w
  3853  0E2C  00E0               	movwf	___fladd@b+3
  3854  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0E2E  083E               	movf	___fladd@grs^(0+128),w
  3856  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0E30  00E5               	movwf	??___fladd
  3858  0E31  0865               	movf	??___fladd,w
  3859  0E32  00E4               	movwf	___fladd@a+3
  3860  0E33                     l4617:
  3861  0E33  1683               	bsf	3,5	;RP0=1, select bank1
  3862  0E34  01BE               	clrf	___fladd@grs^(0+128)
  3863  0E35  083C               	movf	___fladd@aexp^(0+128),w
  3864  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0E37  00E5               	movwf	??___fladd
  3866  0E38  01E6               	clrf	??___fladd+1
  3867  0E39  0866               	movf	??___fladd+1,w
  3868  0E3A  00E8               	movwf	??___fladd+3
  3869  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  3870  0E3C  083D               	movf	___fladd@bexp^(0+128),w
  3871  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0E3E  0265               	subwf	??___fladd,w
  3873  0E3F  00E7               	movwf	??___fladd+2
  3874  0E40  1C03               	skipc
  3875  0E41  03E8               	decf	??___fladd+3,f
  3876  0E42  0868               	movf	??___fladd+3,w
  3877  0E43  3A80               	xorlw	128
  3878  0E44  00FF               	movwf	127
  3879  0E45  3080               	movlw	128
  3880  0E46  027F               	subwf	127,w
  3881  0E47  1D03               	skipz
  3882  0E48  2E4B               	goto	u4025
  3883  0E49  301A               	movlw	26
  3884  0E4A  0267               	subwf	??___fladd+2,w
  3885  0E4B                     u4025:
  3886  0E4B  1C03               	skipc
  3887  0E4C  2E90               	goto	l4635
  3888  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0E4F  0860               	movf	___fladd@b+3,w
  3891  0E50  045F               	iorwf	___fladd@b+2,w
  3892  0E51  045E               	iorwf	___fladd@b+1,w
  3893  0E52  045D               	iorwf	___fladd@b,w
  3894  0E53  1903               	btfsc	3,2
  3895  0E54  2E57               	goto	u4030
  3896  0E55  3001               	movlw	1
  3897  0E56  2E58               	goto	u4040
  3898  0E57                     u4030:
  3899  0E57  3000               	movlw	0
  3900  0E58                     u4040:
  3901  0E58  00E5               	movwf	??___fladd
  3902  0E59  0865               	movf	??___fladd,w
  3903  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0E5B  00BE               	movwf	___fladd@grs^(0+128)
  3905  0E5C  3000               	movlw	0
  3906  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0E5E  00E0               	movwf	___fladd@b+3
  3908  0E5F  3000               	movlw	0
  3909  0E60  00DF               	movwf	___fladd@b+2
  3910  0E61  3000               	movlw	0
  3911  0E62  00DE               	movwf	___fladd@b+1
  3912  0E63  3000               	movlw	0
  3913  0E64  00DD               	movwf	___fladd@b
  3914  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0E66  083C               	movf	___fladd@aexp^(0+128),w
  3916  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0E68  00E5               	movwf	??___fladd
  3918  0E69  0865               	movf	??___fladd,w
  3919  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  3920  0E6B  00BD               	movwf	___fladd@bexp^(0+128)
  3921  0E6C  2E96               	goto	l1282
  3922  0E6D                     l1284:
  3923  0E6D  1C3E               	btfss	___fladd@grs^(0+128),0
  3924  0E6E  2E7A               	goto	l4625
  3925  0E6F  083E               	movf	___fladd@grs^(0+128),w
  3926  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0E71  00E5               	movwf	??___fladd
  3928  0E72  1003               	clrc
  3929  0E73  0C65               	rrf	??___fladd,w
  3930  0E74  3801               	iorlw	1
  3931  0E75  00E6               	movwf	??___fladd+1
  3932  0E76  0866               	movf	??___fladd+1,w
  3933  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  3934  0E78  00BE               	movwf	___fladd@grs^(0+128)
  3935  0E79  2E7C               	goto	l4627
  3936  0E7A                     l4625:
  3937  0E7A  1003               	clrc
  3938  0E7B  0CBE               	rrf	___fladd@grs^(0+128),f
  3939  0E7C                     l4627:
  3940  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0E7D  1C5D               	btfss	___fladd@b,0
  3942  0E7E  2E81               	goto	l4631
  3943  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0E80  17BE               	bsf	___fladd@grs^(0+128),7
  3945  0E81                     l4631:
  3946  0E81  3001               	movlw	1
  3947  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0E83  00E5               	movwf	??___fladd
  3949  0E84                     u4075:
  3950  0E84  0D60               	rlf	___fladd@b+3,w
  3951  0E85  0CE0               	rrf	___fladd@b+3,f
  3952  0E86  0CDF               	rrf	___fladd@b+2,f
  3953  0E87  0CDE               	rrf	___fladd@b+1,f
  3954  0E88  0CDD               	rrf	___fladd@b,f
  3955  0E89  0BE5               	decfsz	??___fladd& (0+127),f
  3956  0E8A  2E84               	goto	u4075
  3957  0E8B  3001               	movlw	1
  3958  0E8C  00E5               	movwf	??___fladd
  3959  0E8D  0865               	movf	??___fladd,w
  3960  0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  3961  0E8F  07BD               	addwf	___fladd@bexp^(0+128),f
  3962  0E90                     l4635:
  3963  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  3964  0E91  1303               	bcf	3,6	;RP1=0, select bank1
  3965  0E92  083C               	movf	___fladd@aexp^(0+128),w
  3966  0E93  023D               	subwf	___fladd@bexp^(0+128),w
  3967  0E94  1C03               	skipc
  3968  0E95  2E6D               	goto	l1284
  3969  0E96                     l1282:
  3970  0E96  1B3B               	btfsc	___fladd@signs^(0+128),6
  3971  0E97  2EE1               	goto	l4661
  3972  0E98  083D               	movf	___fladd@bexp^(0+128),w
  3973  0E99  1D03               	btfss	3,2
  3974  0E9A  2EA5               	goto	l4643
  3975  0E9B  3000               	movlw	0
  3976  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0E9D  00E0               	movwf	?___fladd+3
  3978  0E9E  3000               	movlw	0
  3979  0E9F  00DF               	movwf	?___fladd+2
  3980  0EA0  3000               	movlw	0
  3981  0EA1  00DE               	movwf	?___fladd+1
  3982  0EA2  3000               	movlw	0
  3983  0EA3  00DD               	movwf	?___fladd
  3984  0EA4  0008               	return
  3985  0EA5                     l4643:
  3986  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0EA6  0861               	movf	___fladd@a,w
  3988  0EA7  07DD               	addwf	___fladd@b,f
  3989  0EA8  0862               	movf	___fladd@a+1,w
  3990  0EA9  1103               	clrz
  3991  0EAA  1803               	skipnc
  3992  0EAB  3E01               	addlw	1
  3993  0EAC  1D03               	btfss	3,2
  3994  0EAD  07DE               	addwf	___fladd@b+1,f
  3995  0EAE  0863               	movf	___fladd@a+2,w
  3996  0EAF  1103               	clrz
  3997  0EB0  1803               	skipnc
  3998  0EB1  3E01               	addlw	1
  3999  0EB2  1D03               	btfss	3,2
  4000  0EB3  07DF               	addwf	___fladd@b+2,f
  4001  0EB4  0864               	movf	___fladd@a+3,w
  4002  0EB5  1103               	clrz
  4003  0EB6  1803               	skipnc
  4004  0EB7  3E01               	addlw	1
  4005  0EB8  1D03               	btfss	3,2
  4006  0EB9  07E0               	addwf	___fladd@b+3,f
  4007  0EBA  1C60               	btfss	___fladd@b+3,0
  4008  0EBB  2F8E               	goto	l4695
  4009  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0EBD  1C3E               	btfss	___fladd@grs^(0+128),0
  4011  0EBE  2ECA               	goto	l4651
  4012  0EBF  083E               	movf	___fladd@grs^(0+128),w
  4013  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0EC1  00E5               	movwf	??___fladd
  4015  0EC2  1003               	clrc
  4016  0EC3  0C65               	rrf	??___fladd,w
  4017  0EC4  3801               	iorlw	1
  4018  0EC5  00E6               	movwf	??___fladd+1
  4019  0EC6  0866               	movf	??___fladd+1,w
  4020  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0EC8  00BE               	movwf	___fladd@grs^(0+128)
  4022  0EC9  2ECC               	goto	l4653
  4023  0ECA                     l4651:
  4024  0ECA  1003               	clrc
  4025  0ECB  0CBE               	rrf	___fladd@grs^(0+128),f
  4026  0ECC                     l4653:
  4027  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0ECD  1C5D               	btfss	___fladd@b,0
  4029  0ECE  2ED1               	goto	l4657
  4030  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0ED0  17BE               	bsf	___fladd@grs^(0+128),7
  4032  0ED1                     l4657:
  4033  0ED1  3001               	movlw	1
  4034  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0ED3  00E5               	movwf	??___fladd
  4036  0ED4                     u4155:
  4037  0ED4  0D60               	rlf	___fladd@b+3,w
  4038  0ED5  0CE0               	rrf	___fladd@b+3,f
  4039  0ED6  0CDF               	rrf	___fladd@b+2,f
  4040  0ED7  0CDE               	rrf	___fladd@b+1,f
  4041  0ED8  0CDD               	rrf	___fladd@b,f
  4042  0ED9  0BE5               	decfsz	??___fladd& (0+127),f
  4043  0EDA  2ED4               	goto	u4155
  4044  0EDB  3001               	movlw	1
  4045  0EDC  00E5               	movwf	??___fladd
  4046  0EDD  0865               	movf	??___fladd,w
  4047  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  4048  0EDF  07BD               	addwf	___fladd@bexp^(0+128),f
  4049  0EE0  2F8E               	goto	l4695
  4050  0EE1                     l4661:
  4051  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0EE2  0860               	movf	___fladd@b+3,w
  4053  0EE3  3A80               	xorlw	128
  4054  0EE4  00FF               	movwf	127
  4055  0EE5  0864               	movf	___fladd@a+3,w
  4056  0EE6  3A80               	xorlw	128
  4057  0EE7  027F               	subwf	127,w
  4058  0EE8  1D03               	skipz
  4059  0EE9  2EF4               	goto	u4163
  4060  0EEA  0863               	movf	___fladd@a+2,w
  4061  0EEB  025F               	subwf	___fladd@b+2,w
  4062  0EEC  1D03               	skipz
  4063  0EED  2EF4               	goto	u4163
  4064  0EEE  0862               	movf	___fladd@a+1,w
  4065  0EEF  025E               	subwf	___fladd@b+1,w
  4066  0EF0  1D03               	skipz
  4067  0EF1  2EF4               	goto	u4163
  4068  0EF2  0861               	movf	___fladd@a,w
  4069  0EF3  025D               	subwf	___fladd@b,w
  4070  0EF4                     u4163:
  4071  0EF4  1803               	skipnc
  4072  0EF5  2F4E               	goto	l4671
  4073  0EF6  30FF               	movlw	255
  4074  0EF7  00E5               	movwf	??___fladd
  4075  0EF8  30FF               	movlw	255
  4076  0EF9  00E6               	movwf	??___fladd+1
  4077  0EFA  30FF               	movlw	255
  4078  0EFB  00E7               	movwf	??___fladd+2
  4079  0EFC  30FF               	movlw	255
  4080  0EFD  00E8               	movwf	??___fladd+3
  4081  0EFE  0861               	movf	___fladd@a,w
  4082  0EFF  00E9               	movwf	??___fladd+4
  4083  0F00  0862               	movf	___fladd@a+1,w
  4084  0F01  00EA               	movwf	??___fladd+5
  4085  0F02  0863               	movf	___fladd@a+2,w
  4086  0F03  00EB               	movwf	??___fladd+6
  4087  0F04  0864               	movf	___fladd@a+3,w
  4088  0F05  00EC               	movwf	??___fladd+7
  4089  0F06  085D               	movf	___fladd@b,w
  4090  0F07  02E9               	subwf	??___fladd+4,f
  4091  0F08  085E               	movf	___fladd@b+1,w
  4092  0F09  1C03               	skipc
  4093  0F0A  0F5E               	incfsz	___fladd@b+1,w
  4094  0F0B  2F0D               	goto	u4171
  4095  0F0C  2F0E               	goto	u4172
  4096  0F0D                     u4171:
  4097  0F0D  02EA               	subwf	??___fladd+5,f
  4098  0F0E                     u4172:
  4099  0F0E  085F               	movf	___fladd@b+2,w
  4100  0F0F  1C03               	skipc
  4101  0F10  0F5F               	incfsz	___fladd@b+2,w
  4102  0F11  2F13               	goto	u4173
  4103  0F12  2F14               	goto	u4174
  4104  0F13                     u4173:
  4105  0F13  02EB               	subwf	??___fladd+6,f
  4106  0F14                     u4174:
  4107  0F14  0860               	movf	___fladd@b+3,w
  4108  0F15  1C03               	skipc
  4109  0F16  0F60               	incfsz	___fladd@b+3,w
  4110  0F17  2F19               	goto	u4175
  4111  0F18  2F1A               	goto	u4176
  4112  0F19                     u4175:
  4113  0F19  02EC               	subwf	??___fladd+7,f
  4114  0F1A                     u4176:
  4115  0F1A  0869               	movf	??___fladd+4,w
  4116  0F1B  07E5               	addwf	??___fladd,f
  4117  0F1C  086A               	movf	??___fladd+5,w
  4118  0F1D  1803               	skipnc
  4119  0F1E  0F6A               	incfsz	??___fladd+5,w
  4120  0F1F  2F21               	goto	u4180
  4121  0F20  2F22               	goto	u4181
  4122  0F21                     u4180:
  4123  0F21  07E6               	addwf	??___fladd+1,f
  4124  0F22                     u4181:
  4125  0F22  086B               	movf	??___fladd+6,w
  4126  0F23  1803               	skipnc
  4127  0F24  0F6B               	incfsz	??___fladd+6,w
  4128  0F25  2F27               	goto	u4182
  4129  0F26  2F28               	goto	u4183
  4130  0F27                     u4182:
  4131  0F27  07E7               	addwf	??___fladd+2,f
  4132  0F28                     u4183:
  4133  0F28  086C               	movf	??___fladd+7,w
  4134  0F29  1803               	skipnc
  4135  0F2A  0A6C               	incf	??___fladd+7,w
  4136  0F2B  07E8               	addwf	??___fladd+3,f
  4137  0F2C  0868               	movf	??___fladd+3,w
  4138  0F2D  00E0               	movwf	___fladd@b+3
  4139  0F2E  0867               	movf	??___fladd+2,w
  4140  0F2F  00DF               	movwf	___fladd@b+2
  4141  0F30  0866               	movf	??___fladd+1,w
  4142  0F31  00DE               	movwf	___fladd@b+1
  4143  0F32  0865               	movf	??___fladd,w
  4144  0F33  00DD               	movwf	___fladd@b
  4145  0F34  3080               	movlw	128
  4146  0F35  00E5               	movwf	??___fladd
  4147  0F36  0865               	movf	??___fladd,w
  4148  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4149  0F38  06BB               	xorwf	___fladd@signs^(0+128),f
  4150  0F39  09BE               	comf	___fladd@grs^(0+128),f
  4151  0F3A  0ABE               	incf	___fladd@grs^(0+128),f
  4152  0F3B  083E               	movf	___fladd@grs^(0+128),w
  4153  0F3C  1D03               	btfss	3,2
  4154  0F3D  2F5C               	goto	l1299
  4155  0F3E  3001               	movlw	1
  4156  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0F40  07DD               	addwf	___fladd@b,f
  4158  0F41  3000               	movlw	0
  4159  0F42  1803               	skipnc
  4160  0F43  3001               	movlw	1
  4161  0F44  07DE               	addwf	___fladd@b+1,f
  4162  0F45  3000               	movlw	0
  4163  0F46  1803               	skipnc
  4164  0F47  3001               	movlw	1
  4165  0F48  07DF               	addwf	___fladd@b+2,f
  4166  0F49  3000               	movlw	0
  4167  0F4A  1803               	skipnc
  4168  0F4B  3001               	movlw	1
  4169  0F4C  07E0               	addwf	___fladd@b+3,f
  4170  0F4D  2F5C               	goto	l1299
  4171  0F4E                     l4671:
  4172  0F4E  0861               	movf	___fladd@a,w
  4173  0F4F  02DD               	subwf	___fladd@b,f
  4174  0F50  0862               	movf	___fladd@a+1,w
  4175  0F51  1C03               	skipc
  4176  0F52  0F62               	incfsz	___fladd@a+1,w
  4177  0F53  02DE               	subwf	___fladd@b+1,f
  4178  0F54  0863               	movf	___fladd@a+2,w
  4179  0F55  1C03               	skipc
  4180  0F56  0F63               	incfsz	___fladd@a+2,w
  4181  0F57  02DF               	subwf	___fladd@b+2,f
  4182  0F58  0864               	movf	___fladd@a+3,w
  4183  0F59  1C03               	skipc
  4184  0F5A  0F64               	incfsz	___fladd@a+3,w
  4185  0F5B  02E0               	subwf	___fladd@b+3,f
  4186  0F5C                     l1299:
  4187  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0F5D  0860               	movf	___fladd@b+3,w
  4189  0F5E  045F               	iorwf	___fladd@b+2,w
  4190  0F5F  045E               	iorwf	___fladd@b+1,w
  4191  0F60  045D               	iorwf	___fladd@b,w
  4192  0F61  1D03               	skipz
  4193  0F62  2F8B               	goto	l4693
  4194  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0F64  083E               	movf	___fladd@grs^(0+128),w
  4196  0F65  1D03               	btfss	3,2
  4197  0F66  2F8B               	goto	l4693
  4198  0F67  3000               	movlw	0
  4199  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0F69  00E0               	movwf	?___fladd+3
  4201  0F6A  3000               	movlw	0
  4202  0F6B  00DF               	movwf	?___fladd+2
  4203  0F6C  3000               	movlw	0
  4204  0F6D  00DE               	movwf	?___fladd+1
  4205  0F6E  3000               	movlw	0
  4206  0F6F  00DD               	movwf	?___fladd
  4207  0F70  0008               	return
  4208  0F71                     l4679:
  4209  0F71  3001               	movlw	1
  4210  0F72  00E5               	movwf	??___fladd
  4211  0F73                     u4225:
  4212  0F73  1003               	clrc
  4213  0F74  0DDD               	rlf	___fladd@b,f
  4214  0F75  0DDE               	rlf	___fladd@b+1,f
  4215  0F76  0DDF               	rlf	___fladd@b+2,f
  4216  0F77  0DE0               	rlf	___fladd@b+3,f
  4217  0F78  0BE5               	decfsz	??___fladd,f
  4218  0F79  2F73               	goto	u4225
  4219  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0F7B  1FBE               	btfss	___fladd@grs^(0+128),7
  4221  0F7C  2F7F               	goto	l1303
  4222  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0F7E  145D               	bsf	___fladd@b,0
  4224  0F7F                     l1303:
  4225  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  4226  0F80  1C3E               	btfss	___fladd@grs^(0+128),0
  4227  0F81  2F84               	goto	l4687
  4228  0F82  1403               	setc
  4229  0F83  2F85               	goto	L3
  4230  0F84                     l4687:
  4231  0F84  1003               	clrc
  4232  0F85                     L3:
  4233  0F85  0DBE               	rlf	___fladd@grs^(0+128),f
  4234  0F86  083D               	movf	___fladd@bexp^(0+128),w
  4235  0F87  1903               	btfsc	3,2
  4236  0F88  2F8B               	goto	l4693
  4237  0F89  3001               	movlw	1
  4238  0F8A  02BD               	subwf	___fladd@bexp^(0+128),f
  4239  0F8B                     l4693:
  4240  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0F8C  1FDF               	btfss	___fladd@b+2,7
  4242  0F8D  2F71               	goto	l4679
  4243  0F8E                     l4695:
  4244  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4245  0F8F  01BC               	clrf	___fladd@aexp^(0+128)
  4246  0F90  1FBE               	btfss	___fladd@grs^(0+128),7
  4247  0F91  2F9C               	goto	l4705
  4248  0F92  083E               	movf	___fladd@grs^(0+128),w
  4249  0F93  397F               	andlw	127
  4250  0F94  1D03               	btfss	3,2
  4251  0F95  2F99               	goto	l4701
  4252  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0F97  1C5D               	btfss	___fladd@b,0
  4254  0F98  2F9C               	goto	l4705
  4255  0F99                     l4701:
  4256  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  4257  0F9A  01BC               	clrf	___fladd@aexp^(0+128)
  4258  0F9B  0ABC               	incf	___fladd@aexp^(0+128),f
  4259  0F9C                     l4705:
  4260  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  4261  0F9D  083C               	movf	___fladd@aexp^(0+128),w
  4262  0F9E  1903               	btfsc	3,2
  4263  0F9F  2FD4               	goto	l1312
  4264  0FA0  3001               	movlw	1
  4265  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0FA2  07DD               	addwf	___fladd@b,f
  4267  0FA3  3000               	movlw	0
  4268  0FA4  1803               	skipnc
  4269  0FA5  3001               	movlw	1
  4270  0FA6  07DE               	addwf	___fladd@b+1,f
  4271  0FA7  3000               	movlw	0
  4272  0FA8  1803               	skipnc
  4273  0FA9  3001               	movlw	1
  4274  0FAA  07DF               	addwf	___fladd@b+2,f
  4275  0FAB  3000               	movlw	0
  4276  0FAC  1803               	skipnc
  4277  0FAD  3001               	movlw	1
  4278  0FAE  07E0               	addwf	___fladd@b+3,f
  4279  0FAF  1C60               	btfss	___fladd@b+3,0
  4280  0FB0  2FD4               	goto	l1312
  4281  0FB1  085D               	movf	___fladd@b,w
  4282  0FB2  00E5               	movwf	??___fladd
  4283  0FB3  085E               	movf	___fladd@b+1,w
  4284  0FB4  00E6               	movwf	??___fladd+1
  4285  0FB5  085F               	movf	___fladd@b+2,w
  4286  0FB6  00E7               	movwf	??___fladd+2
  4287  0FB7  0860               	movf	___fladd@b+3,w
  4288  0FB8  00E8               	movwf	??___fladd+3
  4289  0FB9  3001               	movlw	1
  4290  0FBA  00E9               	movwf	??___fladd+4
  4291  0FBB                     u4325:
  4292  0FBB  0D68               	rlf	??___fladd+3,w
  4293  0FBC  0CE8               	rrf	??___fladd+3,f
  4294  0FBD  0CE7               	rrf	??___fladd+2,f
  4295  0FBE  0CE6               	rrf	??___fladd+1,f
  4296  0FBF  0CE5               	rrf	??___fladd,f
  4297  0FC0  0BE9               	decfsz	??___fladd+4,f
  4298  0FC1  2FBB               	goto	u4325
  4299  0FC2  0868               	movf	??___fladd+3,w
  4300  0FC3  00E0               	movwf	___fladd@b+3
  4301  0FC4  0867               	movf	??___fladd+2,w
  4302  0FC5  00DF               	movwf	___fladd@b+2
  4303  0FC6  0866               	movf	??___fladd+1,w
  4304  0FC7  00DE               	movwf	___fladd@b+1
  4305  0FC8  0865               	movf	??___fladd,w
  4306  0FC9  00DD               	movwf	___fladd@b
  4307  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0FCB  0A3D               	incf	___fladd@bexp^(0+128),w
  4309  0FCC  1903               	btfsc	3,2
  4310  0FCD  2FD4               	goto	l1312
  4311  0FCE  3001               	movlw	1
  4312  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0FD0  00E5               	movwf	??___fladd
  4314  0FD1  0865               	movf	??___fladd,w
  4315  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  4316  0FD3  07BD               	addwf	___fladd@bexp^(0+128),f
  4317  0FD4                     l1312:
  4318  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  4319  0FD5  0A3D               	incf	___fladd@bexp^(0+128),w
  4320  0FD6  1D03               	btfss	3,2
  4321  0FD7  083D               	movf	___fladd@bexp^(0+128),w
  4322  0FD8  1D03               	btfss	3,2
  4323  0FD9  2FE7               	goto	l4723
  4324  0FDA  3000               	movlw	0
  4325  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0FDC  00E0               	movwf	___fladd@b+3
  4327  0FDD  3000               	movlw	0
  4328  0FDE  00DF               	movwf	___fladd@b+2
  4329  0FDF  3000               	movlw	0
  4330  0FE0  00DE               	movwf	___fladd@b+1
  4331  0FE1  3000               	movlw	0
  4332  0FE2  00DD               	movwf	___fladd@b
  4333  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0FE4  083D               	movf	___fladd@bexp^(0+128),w
  4335  0FE5  1903               	btfsc	3,2
  4336  0FE6  01BB               	clrf	___fladd@signs^(0+128)
  4337  0FE7                     l4723:
  4338  0FE7  1C3D               	btfss	___fladd@bexp^(0+128),0
  4339  0FE8  2FEC               	goto	l4727
  4340  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0FEA  17DF               	bsf	___fladd@b+2,7
  4342  0FEB  2FF1               	goto	l1320
  4343  0FEC                     l4727:
  4344  0FEC  307F               	movlw	127
  4345  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0FEE  00E5               	movwf	??___fladd
  4347  0FEF  0865               	movf	??___fladd,w
  4348  0FF0  05DF               	andwf	___fladd@b+2,f
  4349  0FF1                     l1320:
  4350  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0FF2  083D               	movf	___fladd@bexp^(0+128),w
  4352  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0FF4  00E5               	movwf	??___fladd
  4354  0FF5  1003               	clrc
  4355  0FF6  0C65               	rrf	??___fladd,w
  4356  0FF7  00E6               	movwf	??___fladd+1
  4357  0FF8  0866               	movf	??___fladd+1,w
  4358  0FF9  00E0               	movwf	___fladd@b+3
  4359  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  4360  0FFB  1FBB               	btfss	___fladd@signs^(0+128),7
  4361  0FFC  0008               	return
  4362  0FFD  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0FFE  17E0               	bsf	___fladd@b+3,7
  4364  0FFF  0008               	return
  4365  1000                     __end_of___fladd:
  4366                           
  4367                           	psect	text4
  4368  1B9E                     __ptext4:	
  4369 ;; *************** function _Package_Usart_is_for_me *****************
  4370 ;; Defined at:
  4371 ;;		line 8 in file "protocolo.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  retorno         1    0[BANK0 ] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 300/100
  4382 ;;		On exit  : 300/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       0       0       0       0
  4386 ;;      Locals:         0       1       0       0       0
  4387 ;;      Temps:          0       0       0       0       0
  4388 ;;      Totals:         0       1       0       0       0
  4389 ;;Total ram usage:        1 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_mediaLeituraPt100Umidadde
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function _Package_Usart_is_for_me
  4401  1B9E                     _Package_Usart_is_for_me:
  4402                           
  4403                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4404                           
  4405                           ;incstack = 0
  4406                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4407  1B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4408  1B9F  1C6F               	btfss	_generic_status,0
  4409  1BA0  2BB2               	goto	l4507
  4410                           
  4411                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4412  1BA1  1703               	bsf	3,6	;RP1=1, select bank2
  4413  1BA2  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  4414  1BA3  1683               	bsf	3,5	;RP0=1, select bank1
  4415  1BA4  1303               	bcf	3,6	;RP1=0, select bank1
  4416  1BA5  0638               	xorwf	_Board_Number^(0+128),w
  4417  1BA6  1903               	skipnz
  4418  1BA7  2BAD               	goto	l805
  4419  1BA8  1283               	bcf	3,5	;RP0=0, select bank2
  4420  1BA9  1703               	bsf	3,6	;RP1=1, select bank2
  4421  1BAA  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  4422  1BAB  1D03               	btfss	3,2
  4423  1BAC  2BB2               	goto	l4507
  4424  1BAD                     l805:
  4425                           
  4426                           ;protocolo.c: 13:             retorno=1;
  4427  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
  4429  1BAF  01A0               	clrf	Package_Usart_is_for_me@retorno
  4430  1BB0  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4431  1BB1  2BB4               	goto	l4511
  4432  1BB2                     l4507:
  4433                           
  4434                           ;protocolo.c: 15:             retorno=0;
  4435  1BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4436  1BB3  01A0               	clrf	Package_Usart_is_for_me@retorno
  4437  1BB4                     l4511:
  4438                           
  4439                           ;protocolo.c: 21:      return retorno;
  4440  1BB4  0820               	movf	Package_Usart_is_for_me@retorno,w
  4441  1BB5  0008               	return
  4442  1BB6                     __end_of_Package_Usart_is_for_me:
  4443                           
  4444                           	psect	text5
  4445  10B4                     __ptext5:	
  4446 ;; *************** function _ADC_Media_10bits *****************
  4447 ;; Defined at:
  4448 ;;		line 20 in file "adc.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  canal           1    wreg     unsigned char 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  canal           1   19[BANK0 ] unsigned char 
  4453 ;;  value           2   20[BANK0 ] unsigned int 
  4454 ;;  i               1   22[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  4   14[BANK0 ] float 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 300/100
  4461 ;;		On exit  : 300/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         0       4       0       0       0
  4465 ;;      Locals:         0       4       0       0       0
  4466 ;;      Temps:          0       1       0       0       0
  4467 ;;      Totals:         0       9       0       0       0
  4468 ;;Total ram usage:        9 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; Hardware stack levels required when called: 2
  4471 ;; This function calls:
  4472 ;;		___lwdiv
  4473 ;;		___xxtofl
  4474 ;;		_captura
  4475 ;;		_my_delay_ms
  4476 ;; This function is called by:
  4477 ;;		_mediaLeituraPt100Umidadde
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _ADC_Media_10bits
  4483  10B4                     _ADC_Media_10bits:
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4487                           ;ADC_Media_10bits@canal stored from wreg
  4488  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  4489  10B5  00B3               	movwf	ADC_Media_10bits@canal
  4490                           
  4491                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  4492  10B6  0833               	movf	ADC_Media_10bits@canal,w
  4493  10B7  00B2               	movwf	??_ADC_Media_10bits
  4494  10B8  0DB2               	rlf	??_ADC_Media_10bits,f
  4495  10B9  0DB2               	rlf	??_ADC_Media_10bits,f
  4496  10BA  081F               	movf	31,w	;volatile
  4497  10BB  0632               	xorwf	??_ADC_Media_10bits,w
  4498  10BC  39C3               	andlw	-61
  4499  10BD  0632               	xorwf	??_ADC_Media_10bits,w
  4500  10BE  009F               	movwf	31	;volatile
  4501                           
  4502                           ;adc.c: 24:       my_delay_ms(1);
  4503  10BF  3000               	movlw	0
  4504  10C0  00A3               	movwf	my_delay_ms@time+3
  4505  10C1  3000               	movlw	0
  4506  10C2  00A2               	movwf	my_delay_ms@time+2
  4507  10C3  3000               	movlw	0
  4508  10C4  00A1               	movwf	my_delay_ms@time+1
  4509  10C5  3001               	movlw	1
  4510  10C6  00A0               	movwf	my_delay_ms@time
  4511  10C7  160A  158A  2617  160A  118A  	fcall	_my_delay_ms
  4512                           
  4513                           ;adc.c: 26:       value=0;
  4514  10CC  01B4               	clrf	ADC_Media_10bits@value
  4515  10CD  01B5               	clrf	ADC_Media_10bits@value+1
  4516                           
  4517                           ;adc.c: 27:       for(i=1;i<=50;i++)
  4518  10CE  01B6               	clrf	ADC_Media_10bits@i
  4519  10CF  0AB6               	incf	ADC_Media_10bits@i,f
  4520  10D0                     l4489:
  4521                           
  4522                           ;adc.c: 28:           value+=captura();
  4523  10D0  160A  158A  22FA  160A  118A  	fcall	_captura
  4524  10D5  0820               	movf	?_captura,w
  4525  10D6  07B4               	addwf	ADC_Media_10bits@value,f
  4526  10D7  1803               	skipnc
  4527  10D8  0AB5               	incf	ADC_Media_10bits@value+1,f
  4528  10D9  0821               	movf	?_captura+1,w
  4529  10DA  07B5               	addwf	ADC_Media_10bits@value+1,f
  4530  10DB  3001               	movlw	1
  4531  10DC  00B2               	movwf	??_ADC_Media_10bits
  4532  10DD  0832               	movf	??_ADC_Media_10bits,w
  4533  10DE  07B6               	addwf	ADC_Media_10bits@i,f
  4534  10DF  3033               	movlw	51
  4535  10E0  0236               	subwf	ADC_Media_10bits@i,w
  4536  10E1  1C03               	skipc
  4537  10E2  28D0               	goto	l4489
  4538                           
  4539                           ;adc.c: 29:       value/=(i-1);
  4540  10E3  0836               	movf	ADC_Media_10bits@i,w
  4541  10E4  3EFF               	addlw	255
  4542  10E5  00A0               	movwf	___lwdiv@divisor
  4543  10E6  30FF               	movlw	255
  4544  10E7  1803               	skipnc
  4545  10E8  3000               	movlw	0
  4546  10E9  00A1               	movwf	___lwdiv@divisor+1
  4547  10EA  0835               	movf	ADC_Media_10bits@value+1,w
  4548  10EB  00A3               	movwf	___lwdiv@dividend+1
  4549  10EC  0834               	movf	ADC_Media_10bits@value,w
  4550  10ED  00A2               	movwf	___lwdiv@dividend
  4551  10EE  160A  158A  26FA  160A  118A  	fcall	___lwdiv
  4552  10F3  0821               	movf	?___lwdiv+1,w
  4553  10F4  00B5               	movwf	ADC_Media_10bits@value+1
  4554  10F5  0820               	movf	?___lwdiv,w
  4555  10F6  00B4               	movwf	ADC_Media_10bits@value
  4556                           
  4557                           ;adc.c: 30:       return value;
  4558  10F7  0834               	movf	ADC_Media_10bits@value,w
  4559  10F8  00A0               	movwf	___xxtofl@val
  4560  10F9  0835               	movf	ADC_Media_10bits@value+1,w
  4561  10FA  00A1               	movwf	___xxtofl@val+1
  4562  10FB  01A2               	clrf	___xxtofl@val+2
  4563  10FC  01A3               	clrf	___xxtofl@val+3
  4564  10FD  3000               	movlw	0
  4565  10FE  120A  158A  202F   	fcall	___xxtofl
  4566  1101  0823               	movf	?___xxtofl+3,w
  4567  1102  00B1               	movwf	?_ADC_Media_10bits+3
  4568  1103  0822               	movf	?___xxtofl+2,w
  4569  1104  00B0               	movwf	?_ADC_Media_10bits+2
  4570  1105  0821               	movf	?___xxtofl+1,w
  4571  1106  00AF               	movwf	?_ADC_Media_10bits+1
  4572  1107  0820               	movf	?___xxtofl,w
  4573  1108  00AE               	movwf	?_ADC_Media_10bits
  4574  1109  0008               	return
  4575  110A                     __end_of_ADC_Media_10bits:
  4576                           
  4577                           	psect	text6
  4578  1E17                     __ptext6:	
  4579 ;; *************** function _my_delay_ms *****************
  4580 ;; Defined at:
  4581 ;;		line 5 in file "my_delay.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  time            4    0[BANK0 ] long 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  i               4    6[BANK0 ] long 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, btemp+1
  4590 ;; Tracked objects:
  4591 ;;		On entry : 300/0
  4592 ;;		On exit  : 300/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         0       4       0       0       0
  4596 ;;      Locals:         0       4       0       0       0
  4597 ;;      Temps:          0       2       0       0       0
  4598 ;;      Totals:         0      10       0       0       0
  4599 ;;Total ram usage:       10 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_mediaLeituraPt100Umidadde
  4606 ;;		_ADC_Media_10bits
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _my_delay_ms
  4612  1E17                     _my_delay_ms:
  4613                           
  4614                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  4618  1E17  3000               	movlw	0
  4619  1E18  00A9               	movwf	my_delay_ms@i+3
  4620  1E19  3000               	movlw	0
  4621  1E1A  00A8               	movwf	my_delay_ms@i+2
  4622  1E1B  3000               	movlw	0
  4623  1E1C  00A7               	movwf	my_delay_ms@i+1
  4624  1E1D  3000               	movlw	0
  4625  1E1E  00A6               	movwf	my_delay_ms@i
  4626  1E1F                     l3793:
  4627  1E1F  0829               	movf	my_delay_ms@i+3,w
  4628  1E20  3A80               	xorlw	128
  4629  1E21  00FF               	movwf	127
  4630  1E22  0823               	movf	my_delay_ms@time+3,w
  4631  1E23  3A80               	xorlw	128
  4632  1E24  027F               	subwf	127,w
  4633  1E25  1D03               	skipz
  4634  1E26  2E31               	goto	u2853
  4635  1E27  0822               	movf	my_delay_ms@time+2,w
  4636  1E28  0228               	subwf	my_delay_ms@i+2,w
  4637  1E29  1D03               	skipz
  4638  1E2A  2E31               	goto	u2853
  4639  1E2B  0821               	movf	my_delay_ms@time+1,w
  4640  1E2C  0227               	subwf	my_delay_ms@i+1,w
  4641  1E2D  1D03               	skipz
  4642  1E2E  2E31               	goto	u2853
  4643  1E2F  0820               	movf	my_delay_ms@time,w
  4644  1E30  0226               	subwf	my_delay_ms@i,w
  4645  1E31                     u2853:
  4646  1E31  1803               	btfsc	3,0
  4647  1E32  0008               	return
  4648                           
  4649                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4650  1E33  3003               	movlw	3
  4651  1E34  1283               	bcf	3,5	;RP0=0, select bank0
  4652  1E35  1303               	bcf	3,6	;RP1=0, select bank0
  4653  1E36  00A5               	movwf	??_my_delay_ms+1
  4654  1E37  3097               	movlw	151
  4655  1E38  00A4               	movwf	??_my_delay_ms
  4656  1E39                     u5247:
  4657  1E39  0BA4               	decfsz	??_my_delay_ms,f
  4658  1E3A  2E39               	goto	u5247
  4659  1E3B  0BA5               	decfsz	??_my_delay_ms+1,f
  4660  1E3C  2E39               	goto	u5247
  4661                           
  4662                           ;my_delay.c: 10:             }
  4663  1E3D  3001               	movlw	1
  4664  1E3E  1283               	bcf	3,5	;RP0=0, select bank0
  4665  1E3F  1303               	bcf	3,6	;RP1=0, select bank0
  4666  1E40  07A6               	addwf	my_delay_ms@i,f
  4667  1E41  3000               	movlw	0
  4668  1E42  1803               	skipnc
  4669  1E43  3001               	movlw	1
  4670  1E44  07A7               	addwf	my_delay_ms@i+1,f
  4671  1E45  3000               	movlw	0
  4672  1E46  1803               	skipnc
  4673  1E47  3001               	movlw	1
  4674  1E48  07A8               	addwf	my_delay_ms@i+2,f
  4675  1E49  3000               	movlw	0
  4676  1E4A  1803               	skipnc
  4677  1E4B  3001               	movlw	1
  4678  1E4C  07A9               	addwf	my_delay_ms@i+3,f
  4679  1E4D  2E1F               	goto	l3793
  4680  1E4E                     __end_of_my_delay_ms:
  4681                           
  4682                           	psect	text7
  4683  1AFA                     __ptext7:	
  4684 ;; *************** function _captura *****************
  4685 ;; Defined at:
  4686 ;;		line 140 in file "adc.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[BANK0 ] unsigned int 
  4693 ;; Registers used:
  4694 ;;		wreg
  4695 ;; Tracked objects:
  4696 ;;		On entry : 300/0
  4697 ;;		On exit  : 300/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         0       2       0       0       0
  4701 ;;      Locals:         0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0
  4703 ;;      Totals:         0       2       0       0       0
  4704 ;;Total ram usage:        2 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; Hardware stack levels required when called: 1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_ADC_Media_10bits
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _captura
  4716  1AFA                     _captura:
  4717                           
  4718                           ;adc.c: 141:     ADCON0bits.GO=1;
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _captura: [wreg]
  4722  1AFA  149F               	bsf	31,1	;volatile
  4723  1AFB                     l483:	
  4724                           ;adc.c: 145:           }
  4725                           
  4726                           
  4727                           ;adc.c: 142:     while(ADCON0bits.GO)
  4728  1AFB  189F               	btfsc	31,1	;volatile
  4729  1AFC  2AFB               	goto	l483
  4730                           
  4731                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  4732  1AFD  081E               	movf	30,w	;volatile
  4733  1AFE  00A1               	movwf	?_captura+1
  4734  1AFF  1683               	bsf	3,5	;RP0=1, select bank1
  4735  1B00  081E               	movf	30,w	;volatile
  4736  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  4737  1B02  00A0               	movwf	?_captura
  4738  1B03  0008               	return
  4739  1B04                     __end_of_captura:
  4740                           
  4741                           	psect	text8
  4742  082F                     __ptext8:	
  4743 ;; *************** function ___xxtofl *****************
  4744 ;; Defined at:
  4745 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  sign            1    wreg     unsigned char 
  4748 ;;  val             4    0[BANK0 ] long 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  sign            1    8[BANK0 ] unsigned char 
  4751 ;;  arg             4   10[BANK0 ] unsigned long 
  4752 ;;  exp             1    9[BANK0 ] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  4    0[BANK0 ] unsigned char 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 300/0
  4759 ;;		On exit  : 300/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         0       4       0       0       0
  4763 ;;      Locals:         0       6       0       0       0
  4764 ;;      Temps:          0       4       0       0       0
  4765 ;;      Totals:         0      14       0       0       0
  4766 ;;Total ram usage:       14 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; Hardware stack levels required when called: 1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_mediaLeituraPt100Umidadde
  4773 ;;		_ADC_Media_10bits
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function ___xxtofl
  4779  082F                     ___xxtofl:
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4783                           ;___xxtofl@sign stored from wreg
  4784  082F  00A8               	movwf	___xxtofl@sign
  4785  0830  0828               	movf	___xxtofl@sign,w
  4786  0831  1D03               	btfss	3,2
  4787  0832  1FA3               	btfss	___xxtofl@val+3,7
  4788  0833  2844               	goto	l4041
  4789  0834  0920               	comf	___xxtofl@val,w
  4790  0835  00AA               	movwf	___xxtofl@arg
  4791  0836  0921               	comf	___xxtofl@val+1,w
  4792  0837  00AB               	movwf	___xxtofl@arg+1
  4793  0838  0922               	comf	___xxtofl@val+2,w
  4794  0839  00AC               	movwf	___xxtofl@arg+2
  4795  083A  0923               	comf	___xxtofl@val+3,w
  4796  083B  00AD               	movwf	___xxtofl@arg+3
  4797  083C  0AAA               	incf	___xxtofl@arg,f
  4798  083D  1903               	skipnz
  4799  083E  0AAB               	incf	___xxtofl@arg+1,f
  4800  083F  1903               	skipnz
  4801  0840  0AAC               	incf	___xxtofl@arg+2,f
  4802  0841  1903               	skipnz
  4803  0842  0AAD               	incf	___xxtofl@arg+3,f
  4804  0843  284C               	goto	l1418
  4805  0844                     l4041:
  4806  0844  0823               	movf	___xxtofl@val+3,w
  4807  0845  00AD               	movwf	___xxtofl@arg+3
  4808  0846  0822               	movf	___xxtofl@val+2,w
  4809  0847  00AC               	movwf	___xxtofl@arg+2
  4810  0848  0821               	movf	___xxtofl@val+1,w
  4811  0849  00AB               	movwf	___xxtofl@arg+1
  4812  084A  0820               	movf	___xxtofl@val,w
  4813  084B  00AA               	movwf	___xxtofl@arg
  4814  084C                     l1418:
  4815  084C  0823               	movf	___xxtofl@val+3,w
  4816  084D  0422               	iorwf	___xxtofl@val+2,w
  4817  084E  0421               	iorwf	___xxtofl@val+1,w
  4818  084F  0420               	iorwf	___xxtofl@val,w
  4819  0850  1D03               	skipz
  4820  0851  285B               	goto	l4047
  4821  0852  3000               	movlw	0
  4822  0853  00A3               	movwf	?___xxtofl+3
  4823  0854  3000               	movlw	0
  4824  0855  00A2               	movwf	?___xxtofl+2
  4825  0856  3000               	movlw	0
  4826  0857  00A1               	movwf	?___xxtofl+1
  4827  0858  3000               	movlw	0
  4828  0859  00A0               	movwf	?___xxtofl
  4829  085A  0008               	return
  4830  085B                     l4047:
  4831  085B  3096               	movlw	150
  4832  085C  00A4               	movwf	??___xxtofl
  4833  085D  0824               	movf	??___xxtofl,w
  4834  085E  00A9               	movwf	___xxtofl@exp
  4835  085F                     l4051:
  4836  085F  30FE               	movlw	254
  4837  0860  052D               	andwf	___xxtofl@arg+3,w
  4838  0861  1903               	btfsc	3,2
  4839  0862  288C               	goto	l1424
  4840  0863  3001               	movlw	1
  4841  0864  00A4               	movwf	??___xxtofl
  4842  0865  0824               	movf	??___xxtofl,w
  4843  0866  07A9               	addwf	___xxtofl@exp,f
  4844  0867  3001               	movlw	1
  4845  0868                     u3455:
  4846  0868  1003               	clrc
  4847  0869  0CAD               	rrf	___xxtofl@arg+3,f
  4848  086A  0CAC               	rrf	___xxtofl@arg+2,f
  4849  086B  0CAB               	rrf	___xxtofl@arg+1,f
  4850  086C  0CAA               	rrf	___xxtofl@arg,f
  4851  086D  3EFF               	addlw	-1
  4852  086E  1D03               	skipz
  4853  086F  2868               	goto	u3455
  4854  0870  285F               	goto	l4051
  4855  0871                     l4053:
  4856  0871  3001               	movlw	1
  4857  0872  00A4               	movwf	??___xxtofl
  4858  0873  0824               	movf	??___xxtofl,w
  4859  0874  07A9               	addwf	___xxtofl@exp,f
  4860  0875  3001               	movlw	1
  4861  0876  07AA               	addwf	___xxtofl@arg,f
  4862  0877  3000               	movlw	0
  4863  0878  1803               	skipnc
  4864  0879  3001               	movlw	1
  4865  087A  07AB               	addwf	___xxtofl@arg+1,f
  4866  087B  3000               	movlw	0
  4867  087C  1803               	skipnc
  4868  087D  3001               	movlw	1
  4869  087E  07AC               	addwf	___xxtofl@arg+2,f
  4870  087F  3000               	movlw	0
  4871  0880  1803               	skipnc
  4872  0881  3001               	movlw	1
  4873  0882  07AD               	addwf	___xxtofl@arg+3,f
  4874  0883  3001               	movlw	1
  4875  0884                     u3475:
  4876  0884  1003               	clrc
  4877  0885  0CAD               	rrf	___xxtofl@arg+3,f
  4878  0886  0CAC               	rrf	___xxtofl@arg+2,f
  4879  0887  0CAB               	rrf	___xxtofl@arg+1,f
  4880  0888  0CAA               	rrf	___xxtofl@arg,f
  4881  0889  3EFF               	addlw	-1
  4882  088A  1D03               	skipz
  4883  088B  2884               	goto	u3475
  4884  088C                     l1424:
  4885  088C  30FF               	movlw	255
  4886  088D  052D               	andwf	___xxtofl@arg+3,w
  4887  088E  1903               	btfsc	3,2
  4888  088F  28A0               	goto	l4061
  4889  0890  2871               	goto	l4053
  4890  0891                     l4063:
  4891  0891  3002               	movlw	2
  4892  0892  0229               	subwf	___xxtofl@exp,w
  4893  0893  1C03               	btfss	3,0
  4894  0894  28A2               	goto	l1431
  4895  0895  3001               	movlw	1
  4896  0896  02A9               	subwf	___xxtofl@exp,f
  4897  0897  3001               	movlw	1
  4898  0898  00A4               	movwf	??___xxtofl
  4899  0899                     u3495:
  4900  0899  1003               	clrc
  4901  089A  0DAA               	rlf	___xxtofl@arg,f
  4902  089B  0DAB               	rlf	___xxtofl@arg+1,f
  4903  089C  0DAC               	rlf	___xxtofl@arg+2,f
  4904  089D  0DAD               	rlf	___xxtofl@arg+3,f
  4905  089E  0BA4               	decfsz	??___xxtofl,f
  4906  089F  2899               	goto	u3495
  4907  08A0                     l4061:
  4908  08A0  1FAC               	btfss	___xxtofl@arg+2,7
  4909  08A1  2891               	goto	l4063
  4910  08A2                     l1431:
  4911  08A2  1829               	btfsc	___xxtofl@exp,0
  4912  08A3  28AC               	goto	l1432
  4913  08A4  30FF               	movlw	255
  4914  08A5  05AA               	andwf	___xxtofl@arg,f
  4915  08A6  30FF               	movlw	255
  4916  08A7  05AB               	andwf	___xxtofl@arg+1,f
  4917  08A8  307F               	movlw	127
  4918  08A9  05AC               	andwf	___xxtofl@arg+2,f
  4919  08AA  30FF               	movlw	255
  4920  08AB  05AD               	andwf	___xxtofl@arg+3,f
  4921  08AC                     l1432:
  4922  08AC  1003               	clrc
  4923  08AD  0CA9               	rrf	___xxtofl@exp,f
  4924  08AE  0829               	movf	___xxtofl@exp,w
  4925  08AF  00A4               	movwf	??___xxtofl
  4926  08B0  01A5               	clrf	??___xxtofl+1
  4927  08B1  01A6               	clrf	??___xxtofl+2
  4928  08B2  01A7               	clrf	??___xxtofl+3
  4929  08B3  3018               	movlw	24
  4930  08B4                     u3535:
  4931  08B4  1003               	clrc
  4932  08B5  0DA4               	rlf	??___xxtofl,f
  4933  08B6  0DA5               	rlf	??___xxtofl+1,f
  4934  08B7  0DA6               	rlf	??___xxtofl+2,f
  4935  08B8  0DA7               	rlf	??___xxtofl+3,f
  4936  08B9  3EFF               	addlw	-1
  4937  08BA  1D03               	skipz
  4938  08BB  28B4               	goto	u3535
  4939  08BC  0824               	movf	??___xxtofl,w
  4940  08BD  04AA               	iorwf	___xxtofl@arg,f
  4941  08BE  0825               	movf	??___xxtofl+1,w
  4942  08BF  04AB               	iorwf	___xxtofl@arg+1,f
  4943  08C0  0826               	movf	??___xxtofl+2,w
  4944  08C1  04AC               	iorwf	___xxtofl@arg+2,f
  4945  08C2  0827               	movf	??___xxtofl+3,w
  4946  08C3  04AD               	iorwf	___xxtofl@arg+3,f
  4947  08C4  0828               	movf	___xxtofl@sign,w
  4948  08C5  1D03               	btfss	3,2
  4949  08C6  1FA3               	btfss	___xxtofl@val+3,7
  4950  08C7  28C9               	goto	l4075
  4951  08C8  17AD               	bsf	___xxtofl@arg+3,7
  4952  08C9                     l4075:
  4953  08C9  082D               	movf	___xxtofl@arg+3,w
  4954  08CA  00A3               	movwf	?___xxtofl+3
  4955  08CB  082C               	movf	___xxtofl@arg+2,w
  4956  08CC  00A2               	movwf	?___xxtofl+2
  4957  08CD  082B               	movf	___xxtofl@arg+1,w
  4958  08CE  00A1               	movwf	?___xxtofl+1
  4959  08CF  082A               	movf	___xxtofl@arg,w
  4960  08D0  00A0               	movwf	?___xxtofl
  4961  08D1  0008               	return
  4962  08D2                     __end_of___xxtofl:
  4963                           
  4964                           	psect	text9
  4965  1F77                     __ptext9:	
  4966 ;; *************** function _USART_init *****************
  4967 ;; Defined at:
  4968 ;;		line 18 in file "usart.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  baudrate        4    0[BANK0 ] unsigned long 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  i               1    5[BANK0 ] unsigned char 
  4973 ;;  erro            1    0        unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 300/0
  4980 ;;		On exit  : 300/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       4       0       0       0
  4984 ;;      Locals:         0       1       0       0       0
  4985 ;;      Temps:          0       1       0       0       0
  4986 ;;      Totals:         0       6       0       0       0
  4987 ;;Total ram usage:        6 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; Hardware stack levels required when called: 1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function _USART_init
  4999  1F77                     _USART_init:
  5000                           
  5001                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5002                           
  5003                           ;incstack = 0
  5004                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5005  1F77  304B               	movlw	75
  5006  1F78  0621               	xorwf	USART_init@baudrate+1,w
  5007  1F79  0420               	iorwf	USART_init@baudrate,w
  5008  1F7A  0422               	iorwf	USART_init@baudrate+2,w
  5009  1F7B  0423               	iorwf	USART_init@baudrate+3,w
  5010  1F7C  1D03               	btfss	3,2
  5011  1F7D  2F8A               	goto	l4905
  5012                           
  5013                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5014  1F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5015  1F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5016  1F80  1798               	bsf	24,7	;volatile
  5017                           
  5018                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5019  1F81  1618               	bsf	24,4	;volatile
  5020                           
  5021                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5022  1F82  1683               	bsf	3,5	;RP0=1, select bank1
  5023  1F83  1518               	bsf	24,2	;volatile
  5024                           
  5025                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5026  1F84  1218               	bcf	24,4	;volatile
  5027                           
  5028                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5029  1F85  1318               	bcf	24,6	;volatile
  5030                           
  5031                           ;usart.c: 32:           SPBRG =12;
  5032  1F86  300C               	movlw	12
  5033  1F87  0099               	movwf	25	;volatile
  5034                           
  5035                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5036  1F88  170B               	bsf	11,6	;volatile
  5037  1F89  2FA6               	goto	L4
  5038  1F8A                     l4905:	
  5039                           ;usart.c: 35:           }
  5040                           
  5041                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5042                           
  5043  1F8A  30C2               	movlw	194
  5044  1F8B  1283               	bcf	3,5	;RP0=0, select bank0
  5045  1F8C  1303               	bcf	3,6	;RP1=0, select bank0
  5046  1F8D  0621               	xorwf	USART_init@baudrate+1,w
  5047  1F8E  1D03               	skipz
  5048  1F8F  2FA7               	goto	l4925
  5049  1F90  0322               	decf	USART_init@baudrate+2,w
  5050  1F91  0420               	iorwf	USART_init@baudrate,w
  5051  1F92  0423               	iorwf	USART_init@baudrate+3,w
  5052  1F93  1D03               	btfss	3,2
  5053  1F94  2FA7               	goto	l4925
  5054                           
  5055                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5056  1F95  3010               	movlw	16
  5057  1F96  1683               	bsf	3,5	;RP0=1, select bank1
  5058  1F97  1303               	bcf	3,6	;RP1=0, select bank1
  5059  1F98  0099               	movwf	25	;volatile
  5060                           
  5061                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5062  1F99  1703               	bsf	3,6	;RP1=1, select bank3
  5063  1F9A  1587               	bsf	7,3	;volatile
  5064                           
  5065                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5066  1F9B  1303               	bcf	3,6	;RP1=0, select bank1
  5067  1F9C  1518               	bsf	24,2	;volatile
  5068                           
  5069                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5070  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
  5071  1F9E  1798               	bsf	24,7	;volatile
  5072                           
  5073                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5074  1F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5075  1FA0  1218               	bcf	24,4	;volatile
  5076                           
  5077                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5078  1FA1  1318               	bcf	24,6	;volatile
  5079                           
  5080                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5081  1FA2  1283               	bcf	3,5	;RP0=0, select bank0
  5082  1FA3  1618               	bsf	24,4	;volatile
  5083                           
  5084                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5085  1FA4  170B               	bsf	11,6	;volatile
  5086                           
  5087                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5088  1FA5  1683               	bsf	3,5	;RP0=1, select bank1
  5089  1FA6                     L4:
  5090  1FA6  168C               	bsf	12,5	;volatile
  5091  1FA7                     l4925:
  5092                           
  5093                           ;usart.c: 68:      TRISC6= 1;
  5094  1FA7  1683               	bsf	3,5	;RP0=1, select bank1
  5095  1FA8  1303               	bcf	3,6	;RP1=0, select bank1
  5096  1FA9  1707               	bsf	7,6	;volatile
  5097                           
  5098                           ;usart.c: 69:      TRISC7= 1;
  5099  1FAA  1787               	bsf	7,7	;volatile
  5100                           
  5101                           ;usart.c: 71:      CREN=0;
  5102  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  5103  1FAC  1218               	bcf	24,4	;volatile
  5104                           
  5105                           ;usart.c: 72:      CREN=1;
  5106  1FAD  1618               	bsf	24,4	;volatile
  5107                           
  5108                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5109  1FAE  01A5               	clrf	USART_init@i
  5110  1FAF                     l4939:
  5111  1FAF  081A               	movf	26,w	;volatile
  5112  1FB0  3001               	movlw	1
  5113  1FB1  00A4               	movwf	??_USART_init
  5114  1FB2  0824               	movf	??_USART_init,w
  5115  1FB3  07A5               	addwf	USART_init@i,f
  5116  1FB4  300F               	movlw	15
  5117  1FB5  0225               	subwf	USART_init@i,w
  5118  1FB6  1803               	btfsc	3,0
  5119  1FB7  0008               	return
  5120  1FB8  2FAF               	goto	l4939
  5121  1FB9                     __end_of_USART_init:
  5122                           
  5123                           	psect	text10
  5124  1D4C                     __ptext10:	
  5125 ;; *************** function _I2C_Master_Init *****************
  5126 ;; Defined at:
  5127 ;;		line 7 in file "I2C.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  c               4   14[BANK0 ] const unsigned long 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 300/0
  5138 ;;		On exit  : 300/100
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       4       0       0       0
  5142 ;;      Locals:         0       0       0       0       0
  5143 ;;      Temps:          0       4       0       0       0
  5144 ;;      Totals:         0       8       0       0       0
  5145 ;;Total ram usage:        8 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 2
  5148 ;; This function calls:
  5149 ;;		___lldiv
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _I2C_Master_Init
  5157  1D4C                     _I2C_Master_Init:
  5158                           
  5159                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5163  1D4C  3028               	movlw	40
  5164  1D4D  0094               	movwf	20	;volatile
  5165                           
  5166                           ;I2C.c: 11:   SSPCON2 = 0;
  5167  1D4E  1683               	bsf	3,5	;RP0=1, select bank1
  5168  1D4F  0191               	clrf	17	;volatile
  5169                           
  5170                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5171  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  5172  1D51  082E               	movf	I2C_Master_Init@c,w
  5173  1D52  00B2               	movwf	??_I2C_Master_Init
  5174  1D53  082F               	movf	I2C_Master_Init@c+1,w
  5175  1D54  00B3               	movwf	??_I2C_Master_Init+1
  5176  1D55  0830               	movf	I2C_Master_Init@c+2,w
  5177  1D56  00B4               	movwf	??_I2C_Master_Init+2
  5178  1D57  0831               	movf	I2C_Master_Init@c+3,w
  5179  1D58  00B5               	movwf	??_I2C_Master_Init+3
  5180  1D59  3002               	movlw	2
  5181  1D5A                     u4685:
  5182  1D5A  1003               	clrc
  5183  1D5B  0DB2               	rlf	??_I2C_Master_Init,f
  5184  1D5C  0DB3               	rlf	??_I2C_Master_Init+1,f
  5185  1D5D  0DB4               	rlf	??_I2C_Master_Init+2,f
  5186  1D5E  0DB5               	rlf	??_I2C_Master_Init+3,f
  5187  1D5F  3EFF               	addlw	-1
  5188  1D60  1D03               	skipz
  5189  1D61  2D5A               	goto	u4685
  5190  1D62  0835               	movf	??_I2C_Master_Init+3,w
  5191  1D63  00A3               	movwf	___lldiv@divisor+3
  5192  1D64  0834               	movf	??_I2C_Master_Init+2,w
  5193  1D65  00A2               	movwf	___lldiv@divisor+2
  5194  1D66  0833               	movf	??_I2C_Master_Init+1,w
  5195  1D67  00A1               	movwf	___lldiv@divisor+1
  5196  1D68  0832               	movf	??_I2C_Master_Init,w
  5197  1D69  00A0               	movwf	___lldiv@divisor
  5198  1D6A  3000               	movlw	0
  5199  1D6B  00A7               	movwf	___lldiv@dividend+3
  5200  1D6C  307A               	movlw	122
  5201  1D6D  00A6               	movwf	___lldiv@dividend+2
  5202  1D6E  3012               	movlw	18
  5203  1D6F  00A5               	movwf	___lldiv@dividend+1
  5204  1D70  3000               	movlw	0
  5205  1D71  00A4               	movwf	___lldiv@dividend
  5206  1D72  160A  118A  210A   	fcall	___lldiv
  5207  1D75  0820               	movf	?___lldiv,w
  5208  1D76  3EFF               	addlw	255
  5209  1D77  1683               	bsf	3,5	;RP0=1, select bank1
  5210  1D78  0093               	movwf	19	;volatile
  5211                           
  5212                           ;I2C.c: 13:   SSPSTAT = 0;
  5213  1D79  0194               	clrf	20	;volatile
  5214                           
  5215                           ;I2C.c: 14:   TRISC3 = 1;
  5216  1D7A  1587               	bsf	7,3	;volatile
  5217                           
  5218                           ;I2C.c: 15:   TRISC4 = 1;
  5219  1D7B  1607               	bsf	7,4	;volatile
  5220  1D7C  0008               	return
  5221  1D7D                     __end_of_I2C_Master_Init:
  5222                           
  5223                           	psect	text11
  5224  110A                     __ptext11:	
  5225 ;; *************** function ___lldiv *****************
  5226 ;; Defined at:
  5227 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  divisor         4    0[BANK0 ] unsigned long 
  5230 ;;  dividend        4    4[BANK0 ] unsigned long 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  quotient        4    9[BANK0 ] unsigned long 
  5233 ;;  counter         1   13[BANK0 ] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  4    0[BANK0 ] unsigned long 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 300/0
  5240 ;;		On exit  : 300/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5243 ;;      Params:         0       8       0       0       0
  5244 ;;      Locals:         0       5       0       0       0
  5245 ;;      Temps:          0       1       0       0       0
  5246 ;;      Totals:         0      14       0       0       0
  5247 ;;Total ram usage:       14 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 1
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_I2C_Master_Init
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function ___lldiv
  5259  110A                     ___lldiv:
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5263  110A  3000               	movlw	0
  5264  110B  00AC               	movwf	___lldiv@quotient+3
  5265  110C  3000               	movlw	0
  5266  110D  00AB               	movwf	___lldiv@quotient+2
  5267  110E  3000               	movlw	0
  5268  110F  00AA               	movwf	___lldiv@quotient+1
  5269  1110  3000               	movlw	0
  5270  1111  00A9               	movwf	___lldiv@quotient
  5271  1112  0823               	movf	___lldiv@divisor+3,w
  5272  1113  0422               	iorwf	___lldiv@divisor+2,w
  5273  1114  0421               	iorwf	___lldiv@divisor+1,w
  5274  1115  0420               	iorwf	___lldiv@divisor,w
  5275  1116  1903               	skipnz
  5276  1117  295F               	goto	l4535
  5277  1118  01AD               	clrf	___lldiv@counter
  5278  1119  0AAD               	incf	___lldiv@counter,f
  5279  111A                     l4521:
  5280  111A  1BA3               	btfsc	___lldiv@divisor+3,7
  5281  111B  292A               	goto	l4523
  5282  111C  3001               	movlw	1
  5283  111D  00A8               	movwf	??___lldiv
  5284  111E                     u3875:
  5285  111E  1003               	clrc
  5286  111F  0DA0               	rlf	___lldiv@divisor,f
  5287  1120  0DA1               	rlf	___lldiv@divisor+1,f
  5288  1121  0DA2               	rlf	___lldiv@divisor+2,f
  5289  1122  0DA3               	rlf	___lldiv@divisor+3,f
  5290  1123  0BA8               	decfsz	??___lldiv,f
  5291  1124  291E               	goto	u3875
  5292  1125  3001               	movlw	1
  5293  1126  00A8               	movwf	??___lldiv
  5294  1127  0828               	movf	??___lldiv,w
  5295  1128  07AD               	addwf	___lldiv@counter,f
  5296  1129  291A               	goto	l4521
  5297  112A                     l4523:
  5298  112A  3001               	movlw	1
  5299  112B  00A8               	movwf	??___lldiv
  5300  112C                     u3895:
  5301  112C  1003               	clrc
  5302  112D  0DA9               	rlf	___lldiv@quotient,f
  5303  112E  0DAA               	rlf	___lldiv@quotient+1,f
  5304  112F  0DAB               	rlf	___lldiv@quotient+2,f
  5305  1130  0DAC               	rlf	___lldiv@quotient+3,f
  5306  1131  0BA8               	decfsz	??___lldiv,f
  5307  1132  292C               	goto	u3895
  5308  1133  0823               	movf	___lldiv@divisor+3,w
  5309  1134  0227               	subwf	___lldiv@dividend+3,w
  5310  1135  1D03               	skipz
  5311  1136  2941               	goto	u3905
  5312  1137  0822               	movf	___lldiv@divisor+2,w
  5313  1138  0226               	subwf	___lldiv@dividend+2,w
  5314  1139  1D03               	skipz
  5315  113A  2941               	goto	u3905
  5316  113B  0821               	movf	___lldiv@divisor+1,w
  5317  113C  0225               	subwf	___lldiv@dividend+1,w
  5318  113D  1D03               	skipz
  5319  113E  2941               	goto	u3905
  5320  113F  0820               	movf	___lldiv@divisor,w
  5321  1140  0224               	subwf	___lldiv@dividend,w
  5322  1141                     u3905:
  5323  1141  1C03               	skipc
  5324  1142  2952               	goto	l4531
  5325  1143  0820               	movf	___lldiv@divisor,w
  5326  1144  02A4               	subwf	___lldiv@dividend,f
  5327  1145  0821               	movf	___lldiv@divisor+1,w
  5328  1146  1C03               	skipc
  5329  1147  0F21               	incfsz	___lldiv@divisor+1,w
  5330  1148  02A5               	subwf	___lldiv@dividend+1,f
  5331  1149  0822               	movf	___lldiv@divisor+2,w
  5332  114A  1C03               	skipc
  5333  114B  0F22               	incfsz	___lldiv@divisor+2,w
  5334  114C  02A6               	subwf	___lldiv@dividend+2,f
  5335  114D  0823               	movf	___lldiv@divisor+3,w
  5336  114E  1C03               	skipc
  5337  114F  0F23               	incfsz	___lldiv@divisor+3,w
  5338  1150  02A7               	subwf	___lldiv@dividend+3,f
  5339  1151  1429               	bsf	___lldiv@quotient,0
  5340  1152                     l4531:
  5341  1152  3001               	movlw	1
  5342  1153                     u3915:
  5343  1153  1003               	clrc
  5344  1154  0CA3               	rrf	___lldiv@divisor+3,f
  5345  1155  0CA2               	rrf	___lldiv@divisor+2,f
  5346  1156  0CA1               	rrf	___lldiv@divisor+1,f
  5347  1157  0CA0               	rrf	___lldiv@divisor,f
  5348  1158  3EFF               	addlw	-1
  5349  1159  1D03               	skipz
  5350  115A  2953               	goto	u3915
  5351  115B  3001               	movlw	1
  5352  115C  02AD               	subwf	___lldiv@counter,f
  5353  115D  1D03               	btfss	3,2
  5354  115E  292A               	goto	l4523
  5355  115F                     l4535:
  5356  115F  082C               	movf	___lldiv@quotient+3,w
  5357  1160  00A3               	movwf	?___lldiv+3
  5358  1161  082B               	movf	___lldiv@quotient+2,w
  5359  1162  00A2               	movwf	?___lldiv+2
  5360  1163  082A               	movf	___lldiv@quotient+1,w
  5361  1164  00A1               	movwf	?___lldiv+1
  5362  1165  0829               	movf	___lldiv@quotient,w
  5363  1166  00A0               	movwf	?___lldiv
  5364  1167  0008               	return
  5365  1168                     __end_of___lldiv:
  5366                           
  5367                           	psect	text12
  5368  003A                     __ptext12:	
  5369 ;; *************** function _Decodify_Command *****************
  5370 ;; Defined at:
  5371 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;  sizedata        1    3[BANK1 ] unsigned char 
  5376 ;;  add             1    2[BANK1 ] unsigned char 
  5377 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  5378 ;;  OutPut          4    6[BANK1 ] float 
  5379 ;;  tempint         2    4[BANK1 ] int 
  5380 ;;  dados           2    0[BANK1 ] int 
  5381 ;;  tempchar        1   10[BANK1 ] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 300/100
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5391 ;;      Params:         0       0       0       0       0
  5392 ;;      Locals:         0       0      15       0       0
  5393 ;;      Temps:          0       4       0       0       0
  5394 ;;      Totals:         0       4      15       0       0
  5395 ;;Total ram usage:       19 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 6
  5398 ;; This function calls:
  5399 ;;		_EEPROM_24C1025_Fill_All
  5400 ;;		_EEPROM_24C1025_Read_Buffer_USART
  5401 ;;		_EEPROM_24C1025_Read_Byte
  5402 ;;		_EEPROM_24C1025_Read_Int
  5403 ;;		_EEPROM_24C1025_Read_Str
  5404 ;;		_EEPROM_24C1025_Write_Buffer
  5405 ;;		_EEPROM_24C1025_Write_Byte
  5406 ;;		_EEPROM_24C1025_Write_Int
  5407 ;;		_EEPROM_24C1025_Write_Str
  5408 ;;		_EEPROM_Read_Byte
  5409 ;;		_EEPROM_Read_Integer
  5410 ;;		_EEPROM_Read_String
  5411 ;;		_EEPROM_Write_Byte
  5412 ;;		_EEPROM_Write_Integer
  5413 ;;		_EEPROM_Write_String
  5414 ;;		_PROCULUS_Buzzer
  5415 ;;		_PROCULUS_Show_Screen
  5416 ;;		_PROCULUS_VP_Write_String
  5417 ;;		_Save_Log
  5418 ;;		_Send_Reply_OK
  5419 ;;		_Send_To_MB
  5420 ;;		_USART_put_int
  5421 ;;		_USART_put_string
  5422 ;;		_USART_putc
  5423 ;;		_USART_to_Protocol
  5424 ;;		___flmul
  5425 ;;		___fltol
  5426 ;;		_strcpy
  5427 ;;		_strlen
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           
  5434                           ;psect for function _Decodify_Command
  5435  003A                     _Decodify_Command:
  5436                           
  5437                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  5438                           
  5439                           ;incstack = 0
  5440                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5441  003A  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  5442  003B  160A  118A  205F  120A  118A  	fcall	_USART_to_Protocol
  5443                           
  5444                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5445  0040  1683               	bsf	3,5	;RP0=1, select bank3
  5446  0041  1703               	bsf	3,6	;RP1=1, select bank3
  5447  0042  0817               	movf	(_usart_protocol^(0+384)+7),w
  5448  0043  1283               	bcf	3,5	;RP0=0, select bank0
  5449  0044  1303               	bcf	3,6	;RP1=0, select bank0
  5450  0045  00DF               	movwf	??_Decodify_Command
  5451  0046  085F               	movf	??_Decodify_Command,w
  5452  0047  1683               	bsf	3,5	;RP0=1, select bank1
  5453  0048  00C9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5454                           
  5455                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5456  0049  1703               	bsf	3,6	;RP1=1, select bank3
  5457  004A  0818               	movf	(_usart_protocol^(0+384)+8),w
  5458  004B  1283               	bcf	3,5	;RP0=0, select bank0
  5459  004C  1303               	bcf	3,6	;RP1=0, select bank0
  5460  004D  00DF               	movwf	??_Decodify_Command
  5461  004E  085F               	movf	??_Decodify_Command,w
  5462  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5463  0050  00C8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5464                           
  5465                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5466  0051  1703               	bsf	3,6	;RP1=1, select bank3
  5467  0052  0819               	movf	(_usart_protocol^(0+384)+9),w
  5468  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0055  00DF               	movwf	??_Decodify_Command
  5471  0056  085F               	movf	??_Decodify_Command,w
  5472  0057  1683               	bsf	3,5	;RP0=1, select bank1
  5473  0058  00C7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5474                           
  5475                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5476  0059  1703               	bsf	3,6	;RP1=1, select bank3
  5477  005A  081A               	movf	(_usart_protocol^(0+384)+10),w
  5478  005B  1283               	bcf	3,5	;RP0=0, select bank0
  5479  005C  1303               	bcf	3,6	;RP1=0, select bank0
  5480  005D  00DF               	movwf	??_Decodify_Command
  5481  005E  085F               	movf	??_Decodify_Command,w
  5482  005F  1683               	bsf	3,5	;RP0=1, select bank1
  5483  0060  00C6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5484                           
  5485                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  5486  0061  2B75               	goto	l5693
  5487  0062                     l5533:
  5488                           
  5489                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.21");
  5490  0062  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5491  0063  00DF               	movwf	??_Decodify_Command
  5492  0064  085F               	movf	??_Decodify_Command,w
  5493  0065  00A0               	movwf	strcpy@from
  5494  0066  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5495  0067  160A  158A  23EC  120A  118A  	fcall	_strcpy
  5496                           
  5497                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  5498  006C  300B               	movlw	11
  5499  006D                     L7:
  5500  006D  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5501                           
  5502                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  5503  0072  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5504  0073  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0074  00A1               	movwf	USART_put_string@vetor
  5506  0075  3001               	movlw	1
  5507  0076  00A2               	movwf	USART_put_string@vetor+1
  5508  0077  160A  158A  25AF   	fcall	_USART_put_string
  5509                           
  5510                           ;SlaveLiofilizadorVer1.c: 346:              break;
  5511  007A  0008               	return
  5512  007B                     l5539:
  5513                           
  5514                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  5515  007B  1683               	bsf	3,5	;RP0=1, select bank3
  5516  007C  1703               	bsf	3,6	;RP1=1, select bank3
  5517  007D  0816               	movf	(_usart_protocol^(0+384)+6),w
  5518  007E  1D03               	btfss	3,2
  5519  007F  2889               	goto	l5543
  5520                           
  5521                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  5522  0080  1303               	bcf	3,6	;RP1=0, select bank1
  5523  0081  0827               	movf	(_Temperatura0+3)^(0+128),w
  5524  0082  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5525  0083  0826               	movf	(_Temperatura0+2)^(0+128),w
  5526  0084  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5527  0085  0825               	movf	(_Temperatura0+1)^(0+128),w
  5528  0086  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5529  0087  0824               	movf	_Temperatura0^(0+128),w
  5530  0088  2891               	goto	L5
  5531  0089                     l5543:
  5532                           
  5533                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  5534  0089  1303               	bcf	3,6	;RP1=0, select bank1
  5535  008A  0823               	movf	(_Umidade1+3)^(0+128),w
  5536  008B  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5537  008C  0822               	movf	(_Umidade1+2)^(0+128),w
  5538  008D  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5539  008E  0821               	movf	(_Umidade1+1)^(0+128),w
  5540  008F  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5541  0090  0820               	movf	_Umidade1^(0+128),w
  5542  0091                     L5:
  5543  0091  00C1               	movwf	Decodify_Command@OutPut^(0+128)
  5544                           
  5545                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  5546  0092  3041               	movlw	65
  5547  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0094  00AC               	movwf	___flmul@b+3
  5549  0095  3020               	movlw	32
  5550  0096  00AB               	movwf	___flmul@b+2
  5551  0097  3000               	movlw	0
  5552  0098  00AA               	movwf	___flmul@b+1
  5553  0099  3000               	movlw	0
  5554  009A  00A9               	movwf	___flmul@b
  5555  009B  1683               	bsf	3,5	;RP0=1, select bank1
  5556  009C  0844               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5557  009D  1283               	bcf	3,5	;RP0=0, select bank0
  5558  009E  00B0               	movwf	___flmul@a+3
  5559  009F  1683               	bsf	3,5	;RP0=1, select bank1
  5560  00A0  0843               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5561  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5562  00A2  00AF               	movwf	___flmul@a+2
  5563  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5564  00A4  0842               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5565  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5566  00A6  00AE               	movwf	___flmul@a+1
  5567  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  5568  00A8  0841               	movf	Decodify_Command@OutPut^(0+128),w
  5569  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  5570  00AA  00AD               	movwf	___flmul@a
  5571  00AB  120A  118A  23C8  120A  118A  	fcall	___flmul
  5572  00B0  082C               	movf	?___flmul+3,w
  5573  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  5574  00B2  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5575  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  5576  00B4  082B               	movf	?___flmul+2,w
  5577  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  5578  00B6  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5579  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  5580  00B8  082A               	movf	?___flmul+1,w
  5581  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5582  00BA  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5583  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  5584  00BC  0829               	movf	?___flmul,w
  5585  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  5586  00BE  00C1               	movwf	Decodify_Command@OutPut^(0+128)
  5587                           
  5588                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  5589  00BF  138B               	bcf	11,7	;volatile
  5590                           
  5591                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  5592  00C0  3002               	movlw	2
  5593  00C1  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5594                           
  5595                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  5596  00C6  0844               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5597  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  5598  00C8  00C6               	movwf	___fltol@f1+3
  5599  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  5600  00CA  0843               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5601  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  5602  00CC  00C5               	movwf	___fltol@f1+2
  5603  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  5604  00CE  0842               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5605  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5606  00D0  00C4               	movwf	___fltol@f1+1
  5607  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  5608  00D2  0841               	movf	Decodify_Command@OutPut^(0+128),w
  5609  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5610  00D4  00C3               	movwf	___fltol@f1
  5611  00D5  160A  118A  21CC  120A  118A  	fcall	___fltol
  5612  00DA  0844               	movf	?___fltol+1,w
  5613  00DB  00CF               	movwf	USART_put_int@value+1
  5614  00DC  0843               	movf	?___fltol,w
  5615  00DD  00CE               	movwf	USART_put_int@value
  5616  00DE  160A  158A  2371   	fcall	_USART_put_int
  5617                           
  5618                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  5619  00E1  178B               	bsf	11,7	;volatile
  5620                           
  5621                           ;SlaveLiofilizadorVer1.c: 375:              break;
  5622  00E2  0008               	return
  5623  00E3                     l5555:
  5624                           
  5625                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  5626  00E3  1683               	bsf	3,5	;RP0=1, select bank3
  5627  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  5628  00E5  0816               	movf	(_usart_protocol^(0+384)+6),w
  5629  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5630  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  5631  00E8  00DF               	movwf	??_Decodify_Command
  5632  00E9  085F               	movf	??_Decodify_Command,w
  5633  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  5634  00EB  00C9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5635                           
  5636                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  5637  00EC  1703               	bsf	3,6	;RP1=1, select bank3
  5638  00ED  0817               	movf	(_usart_protocol^(0+384)+7),w
  5639  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5640  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  5641  00F0  00DF               	movwf	??_Decodify_Command
  5642  00F1  085F               	movf	??_Decodify_Command,w
  5643  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  5644  00F3  00C8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5645                           
  5646                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  5647  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  5648  00F5  0818               	movf	(_usart_protocol^(0+384)+8),w
  5649  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  5650  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  5651  00F8  00DF               	movwf	??_Decodify_Command
  5652  00F9  085F               	movf	??_Decodify_Command,w
  5653  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  5654  00FB  00C7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5655                           
  5656                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  5657  00FC  1703               	bsf	3,6	;RP1=1, select bank3
  5658  00FD  0819               	movf	(_usart_protocol^(0+384)+9),w
  5659  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  5660  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0100  00DF               	movwf	??_Decodify_Command
  5662  0101  085F               	movf	??_Decodify_Command,w
  5663  0102  1683               	bsf	3,5	;RP0=1, select bank1
  5664  0103  00C6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5665                           
  5666                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  5667  0104  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5668  0105  1283               	bcf	3,5	;RP0=0, select bank0
  5669  0106  00DB               	movwf	Save_Log@add_datalog+3
  5670  0107  1683               	bsf	3,5	;RP0=1, select bank1
  5671  0108  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5672  0109  1283               	bcf	3,5	;RP0=0, select bank0
  5673  010A  00DA               	movwf	Save_Log@add_datalog+2
  5674  010B  1683               	bsf	3,5	;RP0=1, select bank1
  5675  010C  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5676  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5677  010E  00D9               	movwf	Save_Log@add_datalog+1
  5678  010F  1683               	bsf	3,5	;RP0=1, select bank1
  5679  0110  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5680  0111  1283               	bcf	3,5	;RP0=0, select bank0
  5681  0112  00D8               	movwf	Save_Log@add_datalog
  5682  0113  160A  118A  2168   	fcall	_Save_Log
  5683                           
  5684                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  5685  0116  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  5686  0117  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  5687                           
  5688                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  5689  0118  1683               	bsf	3,5	;RP0=1, select bank1
  5690  0119  1303               	bcf	3,6	;RP1=0, select bank1
  5691  011A  01B0               	clrf	_milisegundo^(0+128)	;volatile
  5692  011B  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  5693                           
  5694                           ;SlaveLiofilizadorVer1.c: 387:              break;
  5695  011C  0008               	return
  5696  011D                     l5563:
  5697                           
  5698                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  5699  011D  3002               	movlw	2
  5700  011E  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5701                           
  5702                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  5703  0123  3002               	movlw	2
  5704  0124  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0125  00CE               	movwf	USART_put_int@value
  5706  0126  3000               	movlw	0
  5707  0127  00CF               	movwf	USART_put_int@value+1
  5708  0128  160A  158A  2371   	fcall	_USART_put_int
  5709                           
  5710                           ;SlaveLiofilizadorVer1.c: 411:              break;
  5711  012B  0008               	return
  5712  012C                     l5567:
  5713                           
  5714                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  5715  012C  1683               	bsf	3,5	;RP0=1, select bank3
  5716  012D  1703               	bsf	3,6	;RP1=1, select bank3
  5717  012E  0817               	movf	(_usart_protocol^(0+384)+7),w
  5718  012F  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0130  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0131  00DF               	movwf	??_Decodify_Command
  5721  0132  085F               	movf	??_Decodify_Command,w
  5722  0133  00A0               	movwf	EEPROM_Write_Byte@dado
  5723  0134  1683               	bsf	3,5	;RP0=1, select bank3
  5724  0135  1703               	bsf	3,6	;RP1=1, select bank3
  5725  0136  0816               	movf	(_usart_protocol^(0+384)+6),w
  5726  0137  160A  158A  26BE  120A  118A  	fcall	_EEPROM_Write_Byte
  5727  013C                     L6:
  5728                           
  5729                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  5730  013C  3003               	movlw	3
  5731  013D  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5732                           
  5733                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  5734  0142  160A  158A  22F1   	fcall	_Send_Reply_OK
  5735                           
  5736                           ;SlaveLiofilizadorVer1.c: 432:              break;
  5737  0145  0008               	return
  5738  0146                     l5571:
  5739                           
  5740                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  5741  0146  1683               	bsf	3,5	;RP0=1, select bank3
  5742  0147  1703               	bsf	3,6	;RP1=1, select bank3
  5743  0148  0816               	movf	(_usart_protocol^(0+384)+6),w
  5744  0149  160A  158A  246B  120A  118A  	fcall	_EEPROM_Read_Byte
  5745  014E  1303               	bcf	3,6	;RP1=0, select bank0
  5746  014F  00DF               	movwf	??_Decodify_Command
  5747  0150  085F               	movf	??_Decodify_Command,w
  5748  0151  1683               	bsf	3,5	;RP0=1, select bank1
  5749  0152  00C5               	movwf	Decodify_Command@tempchar^(0+128)
  5750                           
  5751                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  5752  0153  3001               	movlw	1
  5753  0154  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5754                           
  5755                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  5756  0159  0845               	movf	Decodify_Command@tempchar^(0+128),w
  5757  015A  160A  158A  2325   	fcall	_USART_putc
  5758                           
  5759                           ;SlaveLiofilizadorVer1.c: 437:              break;
  5760  015D  0008               	return
  5761  015E                     l5577:
  5762                           
  5763                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  5764  015E  1683               	bsf	3,5	;RP0=1, select bank3
  5765  015F  1703               	bsf	3,6	;RP1=1, select bank3
  5766  0160  0816               	movf	(_usart_protocol^(0+384)+6),w
  5767  0161  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0162  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0163  00DF               	movwf	??_Decodify_Command
  5770  0164  085F               	movf	??_Decodify_Command,w
  5771  0165  1683               	bsf	3,5	;RP0=1, select bank1
  5772  0166  00BD               	movwf	Decodify_Command@add^(0+128)
  5773                           
  5774                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  5775  0167  1703               	bsf	3,6	;RP1=1, select bank3
  5776  0168  0818               	movf	(_usart_protocol^(0+384)+8),w
  5777  0169  1283               	bcf	3,5	;RP0=0, select bank0
  5778  016A  1303               	bcf	3,6	;RP1=0, select bank0
  5779  016B  00DF               	movwf	??_Decodify_Command
  5780  016C  01E0               	clrf	??_Decodify_Command+1
  5781  016D  1683               	bsf	3,5	;RP0=1, select bank3
  5782  016E  1703               	bsf	3,6	;RP1=1, select bank3
  5783  016F  0817               	movf	(_usart_protocol^(0+384)+7),w
  5784  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5785  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5786  0172  00E1               	movwf	??_Decodify_Command+2
  5787  0173  01E2               	clrf	??_Decodify_Command+3
  5788  0174  0861               	movf	??_Decodify_Command+2,w
  5789  0175  00E2               	movwf	??_Decodify_Command+3
  5790  0176  01E1               	clrf	??_Decodify_Command+2
  5791  0177  085F               	movf	??_Decodify_Command,w
  5792  0178  0461               	iorwf	??_Decodify_Command+2,w
  5793  0179  1683               	bsf	3,5	;RP0=1, select bank1
  5794  017A  00BB               	movwf	Decodify_Command@dados^(0+128)
  5795  017B  1283               	bcf	3,5	;RP0=0, select bank0
  5796  017C  0860               	movf	??_Decodify_Command+1,w
  5797  017D  0462               	iorwf	??_Decodify_Command+3,w
  5798  017E  1683               	bsf	3,5	;RP0=1, select bank1
  5799  017F  00BC               	movwf	(Decodify_Command@dados+1)^(0+128)
  5800                           
  5801                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  5802  0180  083C               	movf	(Decodify_Command@dados+1)^(0+128),w
  5803  0181  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0182  00A6               	movwf	EEPROM_Write_Integer@dado+1
  5805  0183  1683               	bsf	3,5	;RP0=1, select bank1
  5806  0184  083B               	movf	Decodify_Command@dados^(0+128),w
  5807  0185  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0186  00A5               	movwf	EEPROM_Write_Integer@dado
  5809  0187  1683               	bsf	3,5	;RP0=1, select bank1
  5810  0188  083D               	movf	Decodify_Command@add^(0+128),w
  5811  0189  160A  158A  257D  120A  118A  	fcall	_EEPROM_Write_Integer
  5812  018E  293C               	goto	L6
  5813  018F                     l5587:	
  5814                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  5815                           
  5816                           
  5817                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  5818  018F  1683               	bsf	3,5	;RP0=1, select bank3
  5819  0190  1703               	bsf	3,6	;RP1=1, select bank3
  5820  0191  0816               	movf	(_usart_protocol^(0+384)+6),w
  5821  0192  160A  158A  2522  120A  118A  	fcall	_EEPROM_Read_Integer
  5822  0197  0824               	movf	?_EEPROM_Read_Integer+1,w
  5823  0198  1683               	bsf	3,5	;RP0=1, select bank1
  5824  0199  00C0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  5825  019A  1283               	bcf	3,5	;RP0=0, select bank0
  5826  019B  0823               	movf	?_EEPROM_Read_Integer,w
  5827  019C                     L8:
  5828  019C  1683               	bsf	3,5	;RP0=1, select bank1
  5829  019D  00BF               	movwf	Decodify_Command@tempint^(0+128)
  5830                           
  5831                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  5832  019E  3002               	movlw	2
  5833  019F  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5834                           
  5835                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  5836  01A4  0840               	movf	(Decodify_Command@tempint+1)^(0+128),w
  5837  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  5838  01A6  00CF               	movwf	USART_put_int@value+1
  5839  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  5840  01A8  083F               	movf	Decodify_Command@tempint^(0+128),w
  5841  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5842  01AA  00CE               	movwf	USART_put_int@value
  5843  01AB  160A  158A  2371   	fcall	_USART_put_int
  5844                           
  5845                           ;SlaveLiofilizadorVer1.c: 452:              break;
  5846  01AE  0008               	return
  5847  01AF                     l5593:
  5848                           
  5849                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  5850  01AF  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  5851  01B0  00DF               	movwf	??_Decodify_Command
  5852  01B1  085F               	movf	??_Decodify_Command,w
  5853  01B2  00A5               	movwf	EEPROM_Write_String@dado
  5854  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  5855  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  5856  01B5  0816               	movf	(_usart_protocol^(0+384)+6),w
  5857  01B6  120A  158A  2004  120A  118A  	fcall	_EEPROM_Write_String
  5858  01BB  293C               	goto	L6
  5859  01BC                     l5599:	
  5860                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  5861                           
  5862                           
  5863                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  5864  01BC  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5865  01BD  00DF               	movwf	??_Decodify_Command
  5866  01BE  085F               	movf	??_Decodify_Command,w
  5867  01BF  00A3               	movwf	EEPROM_Read_String@dado
  5868  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  5869  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  5870  01C2  0816               	movf	(_usart_protocol^(0+384)+6),w
  5871  01C3  160A  158A  242A  120A  118A  	fcall	_EEPROM_Read_String
  5872                           
  5873                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  5874  01C8  3021               	movlw	33
  5875  01C9  286D               	goto	L7
  5876  01CA                     l5605:
  5877                           
  5878                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  5879  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  5880  01CB  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5881  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  5882  01CD  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  5883  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  5884  01CF  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5885  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  5886  01D1  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  5887  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5888  01D3  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5889  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  5890  01D5  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  5891  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  5892  01D7  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5893  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  5894  01D9  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  5895  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  5896  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  5897  01DC  081B               	movf	(_usart_protocol^(0+384)+11),w
  5898  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  5899  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  5900  01DF  00DF               	movwf	??_Decodify_Command
  5901  01E0  085F               	movf	??_Decodify_Command,w
  5902  01E1  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  5903  01E2  1683               	bsf	3,5	;RP0=1, select bank3
  5904  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  5905  01E4  0816               	movf	(_usart_protocol^(0+384)+6),w
  5906  01E5  160A  158A  235B  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  5907  01EA  293C               	goto	L6
  5908  01EB                     l5611:	
  5909                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  5910                           
  5911                           
  5912                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  5913  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  5914  01EC  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5915  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5916  01EE  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  5917  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  5918  01F0  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5919  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  5920  01F2  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  5921  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  5922  01F4  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5923  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  5924  01F6  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  5925  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  5926  01F8  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5927  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5928  01FA  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  5929  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  5930  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  5931  01FD  0816               	movf	(_usart_protocol^(0+384)+6),w
  5932  01FE  160A  158A  23B6  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  5933  0203  00DF               	movwf	??_Decodify_Command
  5934  0204  085F               	movf	??_Decodify_Command,w
  5935  0205  1683               	bsf	3,5	;RP0=1, select bank1
  5936  0206  00C5               	movwf	Decodify_Command@tempchar^(0+128)
  5937                           
  5938                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  5939  0207  3001               	movlw	1
  5940  0208  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  5941                           
  5942                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  5943  020D  0845               	movf	Decodify_Command@tempchar^(0+128),w
  5944  020E  160A  158A  2325   	fcall	_USART_putc
  5945                           
  5946                           ;SlaveLiofilizadorVer1.c: 483:              break;
  5947  0211  0008               	return
  5948  0212                     l5617:
  5949                           
  5950                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  5951  0212  1683               	bsf	3,5	;RP0=1, select bank1
  5952  0213  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5953  0214  1283               	bcf	3,5	;RP0=0, select bank0
  5954  0215  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  5955  0216  1683               	bsf	3,5	;RP0=1, select bank1
  5956  0217  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5957  0218  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0219  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  5959  021A  1683               	bsf	3,5	;RP0=1, select bank1
  5960  021B  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5961  021C  1283               	bcf	3,5	;RP0=0, select bank0
  5962  021D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  5963  021E  1683               	bsf	3,5	;RP0=1, select bank1
  5964  021F  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5965  0220  1283               	bcf	3,5	;RP0=0, select bank0
  5966  0221  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  5967  0222  1683               	bsf	3,5	;RP0=1, select bank3
  5968  0223  1703               	bsf	3,6	;RP1=1, select bank3
  5969  0224  081C               	movf	(_usart_protocol^(0+384)+12),w
  5970  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5971  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5972  0227  00DF               	movwf	??_Decodify_Command
  5973  0228  01E0               	clrf	??_Decodify_Command+1
  5974  0229  1683               	bsf	3,5	;RP0=1, select bank3
  5975  022A  1703               	bsf	3,6	;RP1=1, select bank3
  5976  022B  081B               	movf	(_usart_protocol^(0+384)+11),w
  5977  022C  1283               	bcf	3,5	;RP0=0, select bank0
  5978  022D  1303               	bcf	3,6	;RP1=0, select bank0
  5979  022E  00E1               	movwf	??_Decodify_Command+2
  5980  022F  01E2               	clrf	??_Decodify_Command+3
  5981  0230  0861               	movf	??_Decodify_Command+2,w
  5982  0231  00E2               	movwf	??_Decodify_Command+3
  5983  0232  01E1               	clrf	??_Decodify_Command+2
  5984  0233  085F               	movf	??_Decodify_Command,w
  5985  0234  0461               	iorwf	??_Decodify_Command+2,w
  5986  0235  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  5987  0236  0860               	movf	??_Decodify_Command+1,w
  5988  0237  0462               	iorwf	??_Decodify_Command+3,w
  5989  0238  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  5990  0239  1683               	bsf	3,5	;RP0=1, select bank3
  5991  023A  1703               	bsf	3,6	;RP1=1, select bank3
  5992  023B  0816               	movf	(_usart_protocol^(0+384)+6),w
  5993  023C  160A  158A  240A  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  5994  0241  293C               	goto	L6
  5995  0242                     l5623:	
  5996                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  5997                           
  5998                           
  5999                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6000  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6001  0243  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6002  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0245  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6004  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6005  0247  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6006  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0249  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6008  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6009  024B  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6010  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6011  024D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6012  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6013  024F  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6014  0250  1283               	bcf	3,5	;RP0=0, select bank0
  6015  0251  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6016  0252  1683               	bsf	3,5	;RP0=1, select bank3
  6017  0253  1703               	bsf	3,6	;RP1=1, select bank3
  6018  0254  0816               	movf	(_usart_protocol^(0+384)+6),w
  6019  0255  160A  158A  24D2  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6020  025A  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6021  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6022  025C  00C0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6023  025D  1283               	bcf	3,5	;RP0=0, select bank0
  6024  025E  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6025  025F  299C               	goto	L8
  6026  0260                     l5629:	
  6027                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6028                           
  6029                           
  6030                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6031  0260  1683               	bsf	3,5	;RP0=1, select bank3
  6032  0261  1703               	bsf	3,6	;RP1=1, select bank3
  6033  0262  081B               	movf	(_usart_protocol^(0+384)+11),w
  6034  0263  1283               	bcf	3,5	;RP0=0, select bank0
  6035  0264  1303               	bcf	3,6	;RP1=0, select bank0
  6036  0265  00DF               	movwf	??_Decodify_Command
  6037  0266  085F               	movf	??_Decodify_Command,w
  6038  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6039  0268  00BE               	movwf	Decodify_Command@sizedata^(0+128)
  6040                           
  6041                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6042  0269  083E               	movf	Decodify_Command@sizedata^(0+128),w
  6043  026A  160A  158A  24FA  120A  118A  	fcall	_Send_To_MB
  6044                           
  6045                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6046  026F  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6047  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6048  0271  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6049  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6050  0273  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6051  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6052  0275  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6053  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6054  0277  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6055  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6056  0279  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6057  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6058  027B  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6059  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6060  027D  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6061  027E  1683               	bsf	3,5	;RP0=1, select bank1
  6062  027F  083E               	movf	Decodify_Command@sizedata^(0+128),w
  6063  0280  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0281  00DF               	movwf	??_Decodify_Command
  6065  0282  085F               	movf	??_Decodify_Command,w
  6066  0283  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6067  0284  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6068  0285  00E0               	movwf	??_Decodify_Command+1
  6069  0286  0860               	movf	??_Decodify_Command+1,w
  6070  0287  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6071  0288  1683               	bsf	3,5	;RP0=1, select bank3
  6072  0289  1703               	bsf	3,6	;RP1=1, select bank3
  6073  028A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6074  028B  120A  158A  20D2   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6075                           
  6076                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6077  028E  0008               	return
  6078  028F                     l5635:
  6079                           
  6080                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6081  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6082  0290  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6083  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6084  0292  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6085  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6086  0294  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6087  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0296  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6089  0297  1683               	bsf	3,5	;RP0=1, select bank1
  6090  0298  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6091  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6092  029A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6093  029B  1683               	bsf	3,5	;RP0=1, select bank1
  6094  029C  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6095  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6096  029E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6097  029F  1683               	bsf	3,5	;RP0=1, select bank3
  6098  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  6099  02A1  081B               	movf	(_usart_protocol^(0+384)+11),w
  6100  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  6101  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  6102  02A4  00DF               	movwf	??_Decodify_Command
  6103  02A5  085F               	movf	??_Decodify_Command,w
  6104  02A6  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6105  02A7  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6106  02A8  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6107  02A9  3001               	movlw	1
  6108  02AA  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6109  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  6110  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  6111  02AD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6112  02AE  160A  118A  2510  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6113  02B3  293C               	goto	L6
  6114  02B4                     l5641:	
  6115                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6116                           
  6117                           
  6118                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6119  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6120  02B5  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6121  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6122  02B7  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6123  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6124  02B9  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6125  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6126  02BB  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6127  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6128  02BD  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6129  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6130  02BF  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6131  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  6132  02C1  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6133  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  6134  02C3  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6135  02C4  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6136  02C5  00DF               	movwf	??_Decodify_Command
  6137  02C6  085F               	movf	??_Decodify_Command,w
  6138  02C7  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6139  02C8  1683               	bsf	3,5	;RP0=1, select bank3
  6140  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  6141  02CA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6142  02CB  160A  118A  2415  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6143  02D0  293C               	goto	L6
  6144  02D1                     l5647:	
  6145                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6146                           
  6147                           
  6148                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6149  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  6150  02D2  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6151  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6152  02D4  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6153  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  6154  02D6  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6155  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6156  02D8  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6157  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6158  02DA  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6159  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  6160  02DC  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6161  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  6162  02DE  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6163  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6164  02E0  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6165  02E1  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6166  02E2  00DF               	movwf	??_Decodify_Command
  6167  02E3  085F               	movf	??_Decodify_Command,w
  6168  02E4  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6169  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  6170  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  6171  02E7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6172  02E8  160A  118A  2686  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6173                           
  6174                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6175  02ED  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6176  02EE  120A  118A  27E6  120A  118A  	fcall	_strlen
  6177  02F3  0820               	movf	?_strlen,w
  6178  02F4  3E01               	addlw	1
  6179  02F5  286D               	goto	L7
  6180  02F6                     l5651:
  6181                           
  6182                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6183  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  6184  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  6185  02F8  0817               	movf	(_usart_protocol^(0+384)+7),w
  6186  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  6187  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  6188  02FB  00DF               	movwf	??_Decodify_Command
  6189  02FC  01E0               	clrf	??_Decodify_Command+1
  6190  02FD  085F               	movf	??_Decodify_Command,w
  6191  02FE  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6192  02FF  0860               	movf	??_Decodify_Command+1,w
  6193  0300  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6194  0301  1683               	bsf	3,5	;RP0=1, select bank3
  6195  0302  1703               	bsf	3,6	;RP1=1, select bank3
  6196  0303  0816               	movf	(_usart_protocol^(0+384)+6),w
  6197  0304  160A  158A  2736  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6198  0309  293C               	goto	L6
  6199  030A                     l5657:	
  6200                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  6201                           
  6202                           
  6203                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6204  030A  1683               	bsf	3,5	;RP0=1, select bank3
  6205  030B  1703               	bsf	3,6	;RP1=1, select bank3
  6206  030C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6207  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6208  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6209  030F  00DF               	movwf	??_Decodify_Command
  6210  0310  01E0               	clrf	??_Decodify_Command+1
  6211  0311  085F               	movf	??_Decodify_Command,w
  6212  0312  00D6               	movwf	PROCULUS_Show_Screen@screen
  6213  0313  0860               	movf	??_Decodify_Command+1,w
  6214  0314  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6215  0315  160A  158A  2346  120A  118A  	fcall	_PROCULUS_Show_Screen
  6216  031A  293C               	goto	L6
  6217  031B                     l5663:	
  6218                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  6219                           
  6220                           
  6221                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6222  031B  1683               	bsf	3,5	;RP0=1, select bank3
  6223  031C  1703               	bsf	3,6	;RP1=1, select bank3
  6224  031D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6225  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6226  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6227  0320  00DF               	movwf	??_Decodify_Command
  6228  0321  01E0               	clrf	??_Decodify_Command+1
  6229  0322  085F               	movf	??_Decodify_Command,w
  6230  0323  00E0               	movwf	??_Decodify_Command+1
  6231  0324  01DF               	clrf	??_Decodify_Command
  6232  0325  1683               	bsf	3,5	;RP0=1, select bank3
  6233  0326  1703               	bsf	3,6	;RP1=1, select bank3
  6234  0327  0817               	movf	(_usart_protocol^(0+384)+7),w
  6235  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6237  032A  075F               	addwf	??_Decodify_Command,w
  6238  032B  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6239  032C  3000               	movlw	0
  6240  032D  1803               	skipnc
  6241  032E  3001               	movlw	1
  6242  032F  0760               	addwf	??_Decodify_Command+1,w
  6243  0330  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6244  0331  160A  158A  248D  120A  118A  	fcall	_PROCULUS_Buzzer
  6245  0336  293C               	goto	L6
  6246  0337                     l5669:	
  6247                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  6248                           
  6249                           
  6250                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6251  0337  1683               	bsf	3,5	;RP0=1, select bank3
  6252  0338  1703               	bsf	3,6	;RP1=1, select bank3
  6253  0339  0816               	movf	(_usart_protocol^(0+384)+6),w
  6254  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6255  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6256  033C  00DF               	movwf	??_Decodify_Command
  6257  033D  01E0               	clrf	??_Decodify_Command+1
  6258  033E  085F               	movf	??_Decodify_Command,w
  6259  033F  00E0               	movwf	??_Decodify_Command+1
  6260  0340  01DF               	clrf	??_Decodify_Command
  6261  0341  1683               	bsf	3,5	;RP0=1, select bank3
  6262  0342  1703               	bsf	3,6	;RP1=1, select bank3
  6263  0343  0817               	movf	(_usart_protocol^(0+384)+7),w
  6264  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6266  0346  075F               	addwf	??_Decodify_Command,w
  6267  0347  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6268  0348  3000               	movlw	0
  6269  0349  1803               	skipnc
  6270  034A  3001               	movlw	1
  6271  034B  0760               	addwf	??_Decodify_Command+1,w
  6272  034C  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6273  034D  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6274  034E  00E1               	movwf	??_Decodify_Command+2
  6275  034F  0861               	movf	??_Decodify_Command+2,w
  6276  0350  00DC               	movwf	PROCULUS_VP_Write_String@text
  6277  0351  160A  158A  2387  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6278  0356  293C               	goto	L6
  6279  0357                     l5675:	
  6280                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  6281                           
  6282                           
  6283                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  6284  0357  1683               	bsf	3,5	;RP0=1, select bank3
  6285  0358  1703               	bsf	3,6	;RP1=1, select bank3
  6286  0359  0816               	movf	(_usart_protocol^(0+384)+6),w
  6287  035A  1D03               	btfss	3,2
  6288  035B  2B67               	goto	l5681
  6289                           
  6290                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  6291  035C  0817               	movf	(_usart_protocol^(0+384)+7),w
  6292  035D  1D03               	btfss	3,2
  6293  035E  2B63               	goto	l422
  6294                           
  6295                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  6296  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0361  1007               	bcf	7,0	;volatile
  6299  0362  293C               	goto	L6
  6300  0363                     l422:	
  6301                           ;SlaveLiofilizadorVer1.c: 577:                 else
  6302                           
  6303                           
  6304                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  6305  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6306  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6307  0365  1407               	bsf	7,0	;volatile
  6308  0366  293C               	goto	L6
  6309  0367                     l5681:
  6310  0367  0316               	decf	(_usart_protocol^(0+384)+6),w
  6311  0368  1D03               	btfss	3,2
  6312  0369  293C               	goto	L6
  6313                           
  6314                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  6315  036A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6316  036B  1D03               	btfss	3,2
  6317  036C  2B71               	goto	l426
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  6320  036D  1283               	bcf	3,5	;RP0=0, select bank0
  6321  036E  1303               	bcf	3,6	;RP1=0, select bank0
  6322  036F  1087               	bcf	7,1	;volatile
  6323  0370  293C               	goto	L6
  6324  0371                     l426:	
  6325                           ;SlaveLiofilizadorVer1.c: 584:                       else
  6326                           
  6327                           
  6328                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  6329  0371  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0372  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0373  1487               	bsf	7,1	;volatile
  6332  0374  293C               	goto	L6
  6333  0375                     l5693:	
  6334                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  6335                           
  6336  0375  1703               	bsf	3,6	;RP1=1, select bank3
  6337  0376  0814               	movf	(_usart_protocol^(0+384)+4),w
  6338  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6339  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6340  0379  00DF               	movwf	??_Decodify_Command
  6341  037A  01E0               	clrf	??_Decodify_Command+1
  6342                           
  6343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6344                           ; Switch size 1, requested type "simple"
  6345                           ; Number of cases is 1, Range of values is 0 to 0
  6346                           ; switch strategies available:
  6347                           ; Name         Instructions Cycles
  6348                           ; simple_byte            4     3 (average)
  6349                           ; direct_byte           11     8 (fixed)
  6350                           ; jumptable            260     6 (fixed)
  6351                           ;	Chosen strategy is simple_byte
  6352  037B  0860               	movf	??_Decodify_Command+1,w
  6353  037C  3A00               	xorlw	0	; case 0
  6354  037D  1903               	skipnz
  6355  037E  2B80               	goto	l5851
  6356  037F  2BC7               	goto	l428
  6357  0380                     l5851:
  6358                           
  6359                           ; Switch size 1, requested type "simple"
  6360                           ; Number of cases is 23, Range of values is 2 to 65
  6361                           ; switch strategies available:
  6362                           ; Name         Instructions Cycles
  6363                           ; simple_byte           70    36 (average)
  6364                           ; direct_byte          203    11 (fixed)
  6365                           ; jumptable            263     9 (fixed)
  6366                           ;	Chosen strategy is simple_byte
  6367  0380  085F               	movf	??_Decodify_Command,w
  6368  0381  3A02               	xorlw	2	; case 2
  6369  0382  1903               	skipnz
  6370  0383  28E3               	goto	l5555
  6371  0384  3A01               	xorlw	1	; case 3
  6372  0385  1903               	skipnz
  6373  0386  291D               	goto	l5563
  6374  0387  3A0B               	xorlw	11	; case 8
  6375  0388  1903               	skipnz
  6376  0389  292C               	goto	l5567
  6377  038A  3A01               	xorlw	1	; case 9
  6378  038B  1903               	skipnz
  6379  038C  2946               	goto	l5571
  6380  038D  3A03               	xorlw	3	; case 10
  6381  038E  1903               	skipnz
  6382  038F  295E               	goto	l5577
  6383  0390  3A01               	xorlw	1	; case 11
  6384  0391  1903               	skipnz
  6385  0392  298F               	goto	l5587
  6386  0393  3A07               	xorlw	7	; case 12
  6387  0394  1903               	skipnz
  6388  0395  29AF               	goto	l5593
  6389  0396  3A01               	xorlw	1	; case 13
  6390  0397  1903               	skipnz
  6391  0398  29BC               	goto	l5599
  6392  0399  3A1C               	xorlw	28	; case 17
  6393  039A  1903               	skipnz
  6394  039B  29CA               	goto	l5605
  6395  039C  3A03               	xorlw	3	; case 18
  6396  039D  1903               	skipnz
  6397  039E  29EB               	goto	l5611
  6398  039F  3A01               	xorlw	1	; case 19
  6399  03A0  1903               	skipnz
  6400  03A1  2A12               	goto	l5617
  6401  03A2  3A07               	xorlw	7	; case 20
  6402  03A3  1903               	skipnz
  6403  03A4  2A42               	goto	l5623
  6404  03A5  3A01               	xorlw	1	; case 21
  6405  03A6  1903               	skipnz
  6406  03A7  2AB4               	goto	l5641
  6407  03A8  3A03               	xorlw	3	; case 22
  6408  03A9  1903               	skipnz
  6409  03AA  2AD1               	goto	l5647
  6410  03AB  3A01               	xorlw	1	; case 23
  6411  03AC  1903               	skipnz
  6412  03AD  2A8F               	goto	l5635
  6413  03AE  3A0F               	xorlw	15	; case 24
  6414  03AF  1903               	skipnz
  6415  03B0  2A60               	goto	l5629
  6416  03B1  3A01               	xorlw	1	; case 25
  6417  03B2  1903               	skipnz
  6418  03B3  2AF6               	goto	l5651
  6419  03B4  3A03               	xorlw	3	; case 26
  6420  03B5  1903               	skipnz
  6421  03B6  287B               	goto	l5539
  6422  03B7  3A38               	xorlw	56	; case 34
  6423  03B8  1903               	skipnz
  6424  03B9  2B37               	goto	l5669
  6425  03BA  3A06               	xorlw	6	; case 36
  6426  03BB  1903               	skipnz
  6427  03BC  2B1B               	goto	l5663
  6428  03BD  3A01               	xorlw	1	; case 37
  6429  03BE  1903               	skipnz
  6430  03BF  2B0A               	goto	l5657
  6431  03C0  3A15               	xorlw	21	; case 48
  6432  03C1  1903               	skipnz
  6433  03C2  2B57               	goto	l5675
  6434  03C3  3A71               	xorlw	113	; case 65
  6435  03C4  1903               	skipnz
  6436  03C5  2862               	goto	l5533
  6437  03C6  2BC7               	goto	l428
  6438  03C7                     l428:
  6439  03C7  0008               	return
  6440  03C8                     __end_of_Decodify_Command:
  6441                           
  6442                           	psect	text13
  6443  1BEC                     __ptext13:	
  6444 ;; *************** function _strcpy *****************
  6445 ;; Defined at:
  6446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  to              1    wreg     PTR unsigned char 
  6449 ;;		 -> buffer(33), 
  6450 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6451 ;;		 -> STR_1(8), 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6454 ;;		 -> buffer(33), 
  6455 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6456 ;;		 -> buffer(33), 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      PTR unsigned char 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6461 ;; Tracked objects:
  6462 ;;		On entry : 300/0
  6463 ;;		On exit  : B00/800
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         0       1       0       0       0
  6467 ;;      Locals:         0       2       0       0       0
  6468 ;;      Temps:          0       1       0       0       0
  6469 ;;      Totals:         0       4       0       0       0
  6470 ;;Total ram usage:        4 bytes
  6471 ;; Hardware stack levels used: 2
  6472 ;; Hardware stack levels required when called: 1
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_Decodify_Command
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _strcpy
  6482  1BEC                     _strcpy:
  6483                           
  6484                           ;incstack = 0
  6485                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6486                           ;strcpy@to stored from wreg
  6487  1BEC  00A2               	movwf	strcpy@to
  6488  1BED  0822               	movf	strcpy@to,w
  6489  1BEE  00A1               	movwf	??_strcpy
  6490  1BEF  0821               	movf	??_strcpy,w
  6491  1BF0  00A3               	movwf	strcpy@cp
  6492  1BF1                     l4433:
  6493  1BF1  0820               	movf	strcpy@from,w
  6494  1BF2  0084               	movwf	4
  6495  1BF3  160A  118A  200A  160A  158A  	fcall	stringdir
  6496  1BF8  00A1               	movwf	??_strcpy
  6497  1BF9  0823               	movf	strcpy@cp,w
  6498  1BFA  0084               	movwf	4
  6499  1BFB  0821               	movf	??_strcpy,w
  6500  1BFC  1783               	bsf	3,7	;select IRP bank2
  6501  1BFD  0080               	movwf	0
  6502  1BFE  0800               	movf	0,w
  6503  1BFF  1903               	btfsc	3,2
  6504  1C00  0008               	return
  6505  1C01  3001               	movlw	1
  6506  1C02  00A1               	movwf	??_strcpy
  6507  1C03  0821               	movf	??_strcpy,w
  6508  1C04  07A3               	addwf	strcpy@cp,f
  6509  1C05  3001               	movlw	1
  6510  1C06  00A1               	movwf	??_strcpy
  6511  1C07  0821               	movf	??_strcpy,w
  6512  1C08  07A0               	addwf	strcpy@from,f
  6513  1C09  2BF1               	goto	l4433
  6514  1C0A                     __end_of_strcpy:
  6515                           
  6516                           	psect	text14
  6517  105F                     __ptext14:	
  6518 ;; *************** function _USART_to_Protocol *****************
  6519 ;; Defined at:
  6520 ;;		line 77 in file "usart.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  usart_protoc    1    wreg     PTR struct .
  6523 ;;		 -> usart_protocol(58), 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6526 ;;		 -> usart_protocol(58), 
  6527 ;;  i               2    2[BANK0 ] int 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      void 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6532 ;; Tracked objects:
  6533 ;;		On entry : 300/100
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6537 ;;      Params:         0       0       0       0       0
  6538 ;;      Locals:         0       3       0       0       0
  6539 ;;      Temps:          0       2       0       0       0
  6540 ;;      Totals:         0       5       0       0       0
  6541 ;;Total ram usage:        5 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 1
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_Decodify_Command
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function _USART_to_Protocol
  6553  105F                     _USART_to_Protocol:
  6554                           
  6555                           ;incstack = 0
  6556                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6557                           ;USART_to_Protocol@usart_protocol stored from wreg
  6558  105F  1283               	bcf	3,5	;RP0=0, select bank0
  6559  1060  00A4               	movwf	USART_to_Protocol@usart_protocol
  6560                           
  6561                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6562  1061  0824               	movf	USART_to_Protocol@usart_protocol,w
  6563  1062  0084               	movwf	4
  6564  1063  1703               	bsf	3,6	;RP1=1, select bank2
  6565  1064  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6566  1065  1783               	bsf	3,7	;select IRP bank2
  6567  1066  0080               	movwf	0
  6568  1067  0A84               	incf	4,f
  6569  1068  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6570  1069  0080               	movwf	0
  6571                           
  6572                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6573  106A  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6574  106B  1303               	bcf	3,6	;RP1=0, select bank0
  6575  106C  00A0               	movwf	??_USART_to_Protocol
  6576  106D  0824               	movf	USART_to_Protocol@usart_protocol,w
  6577  106E  3E02               	addlw	2
  6578  106F  0084               	movwf	4
  6579  1070  0820               	movf	??_USART_to_Protocol,w
  6580  1071  0080               	movwf	0
  6581                           
  6582                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6583  1072  1703               	bsf	3,6	;RP1=1, select bank2
  6584  1073  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6585  1074  1303               	bcf	3,6	;RP1=0, select bank0
  6586  1075  00A0               	movwf	??_USART_to_Protocol
  6587  1076  0824               	movf	USART_to_Protocol@usart_protocol,w
  6588  1077  3E03               	addlw	3
  6589  1078  0084               	movwf	4
  6590  1079  0820               	movf	??_USART_to_Protocol,w
  6591  107A  0080               	movwf	0
  6592                           
  6593                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6594  107B  1703               	bsf	3,6	;RP1=1, select bank2
  6595  107C  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6596  107D  1303               	bcf	3,6	;RP1=0, select bank0
  6597  107E  00A0               	movwf	??_USART_to_Protocol
  6598  107F  0824               	movf	USART_to_Protocol@usart_protocol,w
  6599  1080  3E04               	addlw	4
  6600  1081  0084               	movwf	4
  6601  1082  0820               	movf	??_USART_to_Protocol,w
  6602  1083  0080               	movwf	0
  6603                           
  6604                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6605  1084  1703               	bsf	3,6	;RP1=1, select bank2
  6606  1085  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6607  1086  1303               	bcf	3,6	;RP1=0, select bank0
  6608  1087  00A0               	movwf	??_USART_to_Protocol
  6609  1088  0824               	movf	USART_to_Protocol@usart_protocol,w
  6610  1089  3E05               	addlw	5
  6611  108A  0084               	movwf	4
  6612  108B  0820               	movf	??_USART_to_Protocol,w
  6613  108C  0080               	movwf	0
  6614                           
  6615                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6616  108D  01A2               	clrf	USART_to_Protocol@i
  6617  108E  01A3               	clrf	USART_to_Protocol@i+1
  6618  108F                     l4427:
  6619  108F  0824               	movf	USART_to_Protocol@usart_protocol,w
  6620  1090  3E05               	addlw	5
  6621  1091  0084               	movwf	4
  6622  1092  0823               	movf	USART_to_Protocol@i+1,w
  6623  1093  3A80               	xorlw	128
  6624  1094  00A0               	movwf	??_USART_to_Protocol
  6625  1095  3080               	movlw	128
  6626  1096  0220               	subwf	??_USART_to_Protocol,w
  6627  1097  1D03               	skipz
  6628  1098  289B               	goto	u3785
  6629  1099  0800               	movf	0,w
  6630  109A  0222               	subwf	USART_to_Protocol@i,w
  6631  109B                     u3785:
  6632  109B  1803               	btfsc	3,0
  6633  109C  0008               	return
  6634                           
  6635                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6636  109D  1283               	bcf	3,5	;RP0=0, select bank0
  6637  109E  1303               	bcf	3,6	;RP1=0, select bank0
  6638  109F  0822               	movf	USART_to_Protocol@i,w
  6639  10A0  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6640  10A1  0084               	movwf	4
  6641  10A2  1783               	bsf	3,7	;select IRP bank2
  6642  10A3  0800               	movf	0,w
  6643  10A4  00A0               	movwf	??_USART_to_Protocol
  6644  10A5  0822               	movf	USART_to_Protocol@i,w
  6645  10A6  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6646  10A7  00A1               	movwf	??_USART_to_Protocol+1
  6647  10A8  0821               	movf	??_USART_to_Protocol+1,w
  6648  10A9  3E06               	addlw	6
  6649  10AA  0084               	movwf	4
  6650  10AB  0820               	movf	??_USART_to_Protocol,w
  6651  10AC  0080               	movwf	0
  6652  10AD  3001               	movlw	1
  6653  10AE  07A2               	addwf	USART_to_Protocol@i,f
  6654  10AF  1803               	skipnc
  6655  10B0  0AA3               	incf	USART_to_Protocol@i+1,f
  6656  10B1  3000               	movlw	0
  6657  10B2  07A3               	addwf	USART_to_Protocol@i+1,f
  6658  10B3  288F               	goto	l4427
  6659  10B4                     __end_of_USART_to_Protocol:
  6660                           
  6661                           	psect	text15
  6662  1CFA                     __ptext15:	
  6663 ;; *************** function _Send_To_MB *****************
  6664 ;; Defined at:
  6665 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  size            1    wreg     unsigned char 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  size            1    1[BANK0 ] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, pclath, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/800
  6676 ;;		On exit  : 300/100
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         0       0       0       0       0
  6680 ;;      Locals:         0       1       0       0       0
  6681 ;;      Temps:          0       0       0       0       0
  6682 ;;      Totals:         0       1       0       0       0
  6683 ;;Total ram usage:        1 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 2
  6686 ;; This function calls:
  6687 ;;		_USART_putc
  6688 ;; This function is called by:
  6689 ;;		_Decodify_Command
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           
  6694                           ;psect for function _Send_To_MB
  6695  1CFA                     _Send_To_MB:
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  6699                           ;Send_To_MB@size stored from wreg
  6700  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  6701  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  6702  1CFC  00A1               	movwf	Send_To_MB@size
  6703                           
  6704                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  6705  1CFD  30AA               	movlw	170
  6706  1CFE  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6707                           
  6708                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  6709  1D03  30BB               	movlw	187
  6710  1D04  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6711                           
  6712                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  6713  1D09  0838               	movf	_Board_Number^(0+128),w
  6714  1D0A  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6715                           
  6716                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  6717  1D0F  3000               	movlw	0
  6718  1D10  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6719                           
  6720                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  6721  1D15  1703               	bsf	3,6	;RP1=1, select bank3
  6722  1D16  0814               	movf	(_usart_protocol^(0+384)+4),w
  6723  1D17  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6724                           
  6725                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  6726  1D1C  1283               	bcf	3,5	;RP0=0, select bank0
  6727  1D1D  0821               	movf	Send_To_MB@size,w
  6728  1D1E  160A  158A  2325   	fcall	_USART_putc
  6729  1D21  0008               	return
  6730  1D22                     __end_of_Send_To_MB:
  6731                           
  6732                           	psect	text16
  6733  1AF1                     __ptext16:	
  6734 ;; *************** function _Send_Reply_OK *****************
  6735 ;; Defined at:
  6736 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 300/100
  6747 ;;		On exit  : 300/100
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6750 ;;      Params:         0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0
  6753 ;;      Totals:         0       0       0       0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 3
  6757 ;; This function calls:
  6758 ;;		_USART_put_string
  6759 ;; This function is called by:
  6760 ;;		_Decodify_Command
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function _Send_Reply_OK
  6766  1AF1                     _Send_Reply_OK:
  6767                           
  6768                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6772  1AF1  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6773  1AF2  1283               	bcf	3,5	;RP0=0, select bank0
  6774  1AF3  00A1               	movwf	USART_put_string@vetor
  6775  1AF4  3080               	movlw	128
  6776  1AF5  00A2               	movwf	USART_put_string@vetor+1
  6777  1AF6  160A  158A  25AF   	fcall	_USART_put_string
  6778  1AF9  0008               	return
  6779  1AFA                     __end_of_Send_Reply_OK:
  6780                           
  6781                           	psect	text17
  6782  1DAF                     __ptext17:	
  6783 ;; *************** function _USART_put_string *****************
  6784 ;; Defined at:
  6785 ;;		line 167 in file "usart.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6788 ;;		 -> STR_2(3), buffer(33), 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6791 ;;		 -> STR_2(3), buffer(33), 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 300/800
  6798 ;;		On exit  : 300/100
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         0       2       0       0       0
  6802 ;;      Locals:         0       2       0       0       0
  6803 ;;      Temps:          0       0       0       0       0
  6804 ;;      Totals:         0       4       0       0       0
  6805 ;;Total ram usage:        4 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 2
  6808 ;; This function calls:
  6809 ;;		_USART_putc
  6810 ;; This function is called by:
  6811 ;;		_Decodify_Command
  6812 ;;		_Send_Reply_OK
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _USART_put_string
  6818  1DAF                     _USART_put_string:
  6819                           
  6820                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  6821                           
  6822                           ;incstack = 0
  6823                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6824  1DAF  0821               	movf	USART_put_string@vetor,w
  6825  1DB0  00A3               	movwf	USART_put_string@ptr
  6826  1DB1  0822               	movf	USART_put_string@vetor+1,w
  6827  1DB2  00A4               	movwf	USART_put_string@ptr+1
  6828  1DB3                     l3737:	
  6829                           ;usart.c: 171:     while(*ptr){
  6830                           
  6831                           
  6832                           ;usart.c: 171:     while(*ptr){
  6833  1DB3  0824               	movf	USART_put_string@ptr+1,w
  6834  1DB4  00FF               	movwf	127
  6835  1DB5  0823               	movf	USART_put_string@ptr,w
  6836  1DB6  0084               	movwf	4
  6837  1DB7  160A  118A  2000  160A  158A  	fcall	stringtab
  6838  1DBC  3A00               	xorlw	0
  6839  1DBD  1903               	btfsc	3,2
  6840  1DBE  2DD5               	goto	l3739
  6841                           
  6842                           ;usart.c: 172:         USART_putc(*ptr);
  6843  1DBF  0824               	movf	USART_put_string@ptr+1,w
  6844  1DC0  00FF               	movwf	127
  6845  1DC1  0823               	movf	USART_put_string@ptr,w
  6846  1DC2  0084               	movwf	4
  6847  1DC3  160A  118A  2000  160A  158A  	fcall	stringtab
  6848  1DC8  160A  158A  2325  160A  158A  	fcall	_USART_putc
  6849                           
  6850                           ;usart.c: 173:         ptr++;
  6851  1DCD  3001               	movlw	1
  6852  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  6853  1DCF  07A3               	addwf	USART_put_string@ptr,f
  6854  1DD0  1803               	skipnc
  6855  1DD1  0AA4               	incf	USART_put_string@ptr+1,f
  6856  1DD2  3000               	movlw	0
  6857  1DD3  07A4               	addwf	USART_put_string@ptr+1,f
  6858  1DD4  2DB3               	goto	l3737
  6859  1DD5                     l3739:
  6860                           
  6861                           ;usart.c: 175:     USART_putc(*ptr);
  6862  1DD5  0824               	movf	USART_put_string@ptr+1,w
  6863  1DD6  00FF               	movwf	127
  6864  1DD7  0823               	movf	USART_put_string@ptr,w
  6865  1DD8  0084               	movwf	4
  6866  1DD9  160A  118A  2000  160A  158A  	fcall	stringtab
  6867  1DDE  160A  158A  2325   	fcall	_USART_putc
  6868  1DE1  0008               	return
  6869  1DE2                     __end_of_USART_put_string:
  6870                           
  6871                           	psect	text18
  6872  1168                     __ptext18:	
  6873 ;; *************** function _Save_Log *****************
  6874 ;; Defined at:
  6875 ;;		line 1003 in file "SlaveLiofilizadorVer1.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 300/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6889 ;;      Params:         0       4       0       0       0
  6890 ;;      Locals:         0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0
  6892 ;;      Totals:         0       4       0       0       0
  6893 ;;Total ram usage:        4 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 5
  6896 ;; This function calls:
  6897 ;;		_EEPROM_24C1025_Write_Int
  6898 ;;		___flmul
  6899 ;;		___fltol
  6900 ;; This function is called by:
  6901 ;;		_Decodify_Command
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _Save_Log
  6907  1168                     _Save_Log:
  6908                           
  6909                           ;SlaveLiofilizadorVer1.c: 1004:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura0*10.0);
  6910                           
  6911                           ;incstack = 0
  6912                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6913  1168  085B               	movf	Save_Log@add_datalog+3,w
  6914  1169  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6915  116A  085A               	movf	Save_Log@add_datalog+2,w
  6916  116B  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6917  116C  0859               	movf	Save_Log@add_datalog+1,w
  6918  116D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6919  116E  0858               	movf	Save_Log@add_datalog,w
  6920  116F  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6921  1170  1683               	bsf	3,5	;RP0=1, select bank1
  6922  1171  0827               	movf	(_Temperatura0+3)^(0+128),w
  6923  1172  1283               	bcf	3,5	;RP0=0, select bank0
  6924  1173  00B0               	movwf	___flmul@a+3
  6925  1174  1683               	bsf	3,5	;RP0=1, select bank1
  6926  1175  0826               	movf	(_Temperatura0+2)^(0+128),w
  6927  1176  1283               	bcf	3,5	;RP0=0, select bank0
  6928  1177  00AF               	movwf	___flmul@a+2
  6929  1178  1683               	bsf	3,5	;RP0=1, select bank1
  6930  1179  0825               	movf	(_Temperatura0+1)^(0+128),w
  6931  117A  1283               	bcf	3,5	;RP0=0, select bank0
  6932  117B  00AE               	movwf	___flmul@a+1
  6933  117C  1683               	bsf	3,5	;RP0=1, select bank1
  6934  117D  0824               	movf	_Temperatura0^(0+128),w
  6935  117E  1283               	bcf	3,5	;RP0=0, select bank0
  6936  117F  00AD               	movwf	___flmul@a
  6937  1180  3041               	movlw	65
  6938  1181  00AC               	movwf	___flmul@b+3
  6939  1182  3020               	movlw	32
  6940  1183  00AB               	movwf	___flmul@b+2
  6941  1184  3000               	movlw	0
  6942  1185  00AA               	movwf	___flmul@b+1
  6943  1186  3000               	movlw	0
  6944  1187  00A9               	movwf	___flmul@b
  6945  1188  120A  118A  23C8  160A  118A  	fcall	___flmul
  6946  118D  082C               	movf	?___flmul+3,w
  6947  118E  00C6               	movwf	___fltol@f1+3
  6948  118F  082B               	movf	?___flmul+2,w
  6949  1190  00C5               	movwf	___fltol@f1+2
  6950  1191  082A               	movf	?___flmul+1,w
  6951  1192  00C4               	movwf	___fltol@f1+1
  6952  1193  0829               	movf	?___flmul,w
  6953  1194  00C3               	movwf	___fltol@f1
  6954  1195  160A  118A  21CC  160A  118A  	fcall	___fltol
  6955  119A  0844               	movf	?___fltol+1,w
  6956  119B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6957  119C  0843               	movf	?___fltol,w
  6958  119D  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6959  119E  3000               	movlw	0
  6960  119F  160A  158A  240A  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6961                           
  6962                           ;SlaveLiofilizadorVer1.c: 1005:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Umidade
      +                          1);
  6963  11A4  1283               	bcf	3,5	;RP0=0, select bank0
  6964  11A5  1303               	bcf	3,6	;RP1=0, select bank0
  6965  11A6  085B               	movf	Save_Log@add_datalog+3,w
  6966  11A7  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6967  11A8  085A               	movf	Save_Log@add_datalog+2,w
  6968  11A9  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6969  11AA  0859               	movf	Save_Log@add_datalog+1,w
  6970  11AB  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6971  11AC  0858               	movf	Save_Log@add_datalog,w
  6972  11AD  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6973  11AE  1683               	bsf	3,5	;RP0=1, select bank1
  6974  11AF  0823               	movf	(_Umidade1+3)^(0+128),w
  6975  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  6976  11B1  00C6               	movwf	___fltol@f1+3
  6977  11B2  1683               	bsf	3,5	;RP0=1, select bank1
  6978  11B3  0822               	movf	(_Umidade1+2)^(0+128),w
  6979  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  6980  11B5  00C5               	movwf	___fltol@f1+2
  6981  11B6  1683               	bsf	3,5	;RP0=1, select bank1
  6982  11B7  0821               	movf	(_Umidade1+1)^(0+128),w
  6983  11B8  1283               	bcf	3,5	;RP0=0, select bank0
  6984  11B9  00C4               	movwf	___fltol@f1+1
  6985  11BA  1683               	bsf	3,5	;RP0=1, select bank1
  6986  11BB  0820               	movf	_Umidade1^(0+128),w
  6987  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  6988  11BD  00C3               	movwf	___fltol@f1
  6989  11BE  160A  118A  21CC  160A  118A  	fcall	___fltol
  6990  11C3  0844               	movf	?___fltol+1,w
  6991  11C4  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6992  11C5  0843               	movf	?___fltol,w
  6993  11C6  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6994  11C7  3001               	movlw	1
  6995  11C8  160A  158A  240A   	fcall	_EEPROM_24C1025_Write_Int
  6996  11CB  0008               	return
  6997  11CC                     __end_of_Save_Log:
  6998                           
  6999                           	psect	text19
  7000  11CC                     __ptext19:	
  7001 ;; *************** function ___fltol *****************
  7002 ;; Defined at:
  7003 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  f1              4   35[BANK0 ] void 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  exp1            1   45[BANK0 ] unsigned char 
  7008 ;;  sign1           1   44[BANK0 ] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  4   35[BANK0 ] long 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 300/0
  7015 ;;		On exit  : 300/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7018 ;;      Params:         0       4       0       0       0
  7019 ;;      Locals:         0       2       0       0       0
  7020 ;;      Temps:          0       5       0       0       0
  7021 ;;      Totals:         0      11       0       0       0
  7022 ;;Total ram usage:       11 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 1
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_Decodify_Command
  7029 ;;		_Save_Log
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function ___fltol
  7035  11CC                     ___fltol:
  7036                           
  7037                           ;incstack = 0
  7038                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7039  11CC  1003               	clrc
  7040  11CD  0D45               	rlf	___fltol@f1+2,w
  7041  11CE  0D46               	rlf	___fltol@f1+3,w
  7042  11CF  00C7               	movwf	??___fltol
  7043  11D0  0847               	movf	??___fltol,w
  7044  11D1  00CD               	movwf	___fltol@exp1
  7045  11D2  084D               	movf	___fltol@exp1,w
  7046  11D3  1D03               	btfss	3,2
  7047  11D4  29DE               	goto	l3839
  7048  11D5                     l3835:
  7049  11D5  3000               	movlw	0
  7050  11D6  00C6               	movwf	?___fltol+3
  7051  11D7  3000               	movlw	0
  7052  11D8  00C5               	movwf	?___fltol+2
  7053  11D9  3000               	movlw	0
  7054  11DA  00C4               	movwf	?___fltol+1
  7055  11DB  3000               	movlw	0
  7056  11DC  00C3               	movwf	?___fltol
  7057  11DD  0008               	return
  7058  11DE                     l3839:
  7059  11DE  0843               	movf	___fltol@f1,w
  7060  11DF  00C7               	movwf	??___fltol
  7061  11E0  0844               	movf	___fltol@f1+1,w
  7062  11E1  00C8               	movwf	??___fltol+1
  7063  11E2  0845               	movf	___fltol@f1+2,w
  7064  11E3  00C9               	movwf	??___fltol+2
  7065  11E4  0846               	movf	___fltol@f1+3,w
  7066  11E5  00CA               	movwf	??___fltol+3
  7067  11E6  301F               	movlw	31
  7068  11E7                     u2905:
  7069  11E7  1003               	clrc
  7070  11E8  0CCA               	rrf	??___fltol+3,f
  7071  11E9  0CC9               	rrf	??___fltol+2,f
  7072  11EA  0CC8               	rrf	??___fltol+1,f
  7073  11EB  0CC7               	rrf	??___fltol,f
  7074  11EC  3EFF               	addlw	-1
  7075  11ED  1D03               	skipz
  7076  11EE  29E7               	goto	u2905
  7077  11EF  0847               	movf	??___fltol,w
  7078  11F0  00CB               	movwf	??___fltol+4
  7079  11F1  084B               	movf	??___fltol+4,w
  7080  11F2  00CC               	movwf	___fltol@sign1
  7081  11F3  17C5               	bsf	___fltol@f1+2,7
  7082  11F4  30FF               	movlw	255
  7083  11F5  05C3               	andwf	___fltol@f1,f
  7084  11F6  30FF               	movlw	255
  7085  11F7  05C4               	andwf	___fltol@f1+1,f
  7086  11F8  30FF               	movlw	255
  7087  11F9  05C5               	andwf	___fltol@f1+2,f
  7088  11FA  3000               	movlw	0
  7089  11FB  05C6               	andwf	___fltol@f1+3,f
  7090  11FC  3096               	movlw	150
  7091  11FD  02CD               	subwf	___fltol@exp1,f
  7092  11FE  1FCD               	btfss	___fltol@exp1,7
  7093  11FF  2A15               	goto	l3857
  7094  1200  084D               	movf	___fltol@exp1,w
  7095  1201  3A80               	xorlw	128
  7096  1202  3E97               	addlw	151
  7097  1203  1C03               	btfss	3,0
  7098  1204  29D5               	goto	l3835
  7099  1205                     l3855:
  7100  1205  3001               	movlw	1
  7101  1206                     u2935:
  7102  1206  1003               	clrc
  7103  1207  0CC6               	rrf	___fltol@f1+3,f
  7104  1208  0CC5               	rrf	___fltol@f1+2,f
  7105  1209  0CC4               	rrf	___fltol@f1+1,f
  7106  120A  0CC3               	rrf	___fltol@f1,f
  7107  120B  3EFF               	addlw	-1
  7108  120C  1D03               	skipz
  7109  120D  2A06               	goto	u2935
  7110  120E  3001               	movlw	1
  7111  120F  00C7               	movwf	??___fltol
  7112  1210  0847               	movf	??___fltol,w
  7113  1211  07CD               	addwf	___fltol@exp1,f
  7114  1212  1903               	btfsc	3,2
  7115  1213  2A28               	goto	l3865
  7116  1214  2A05               	goto	l3855
  7117  1215                     l3857:
  7118  1215  3020               	movlw	32
  7119  1216  024D               	subwf	___fltol@exp1,w
  7120  1217  1803               	btfsc	3,0
  7121  1218  29D5               	goto	l3835
  7122  1219                     l1178:
  7123  1219  084D               	movf	___fltol@exp1,w
  7124  121A  1903               	btfsc	3,2
  7125  121B  2A28               	goto	l3865
  7126  121C  3001               	movlw	1
  7127  121D  00C7               	movwf	??___fltol
  7128  121E                     u2965:
  7129  121E  1003               	clrc
  7130  121F  0DC3               	rlf	___fltol@f1,f
  7131  1220  0DC4               	rlf	___fltol@f1+1,f
  7132  1221  0DC5               	rlf	___fltol@f1+2,f
  7133  1222  0DC6               	rlf	___fltol@f1+3,f
  7134  1223  0BC7               	decfsz	??___fltol,f
  7135  1224  2A1E               	goto	u2965
  7136  1225  3001               	movlw	1
  7137  1226  02CD               	subwf	___fltol@exp1,f
  7138  1227  2A19               	goto	l1178
  7139  1228                     l3865:
  7140  1228  084C               	movf	___fltol@sign1,w
  7141  1229  1903               	btfsc	3,2
  7142  122A  0008               	return
  7143  122B  09C3               	comf	___fltol@f1,f
  7144  122C  09C4               	comf	___fltol@f1+1,f
  7145  122D  09C5               	comf	___fltol@f1+2,f
  7146  122E  09C6               	comf	___fltol@f1+3,f
  7147  122F  0AC3               	incf	___fltol@f1,f
  7148  1230  1903               	skipnz
  7149  1231  0AC4               	incf	___fltol@f1+1,f
  7150  1232  1903               	skipnz
  7151  1233  0AC5               	incf	___fltol@f1+2,f
  7152  1234  1903               	skipnz
  7153  1235  0AC6               	incf	___fltol@f1+3,f
  7154  1236  0008               	return
  7155  1237                     __end_of___fltol:
  7156                           
  7157                           	psect	text20
  7158  03C8                     __ptext20:	
  7159 ;; *************** function ___flmul *****************
  7160 ;; Defined at:
  7161 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  b               4    9[BANK0 ] long 
  7164 ;;  a               4   13[BANK0 ] long 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  prod            4   29[BANK0 ] struct .
  7167 ;;  grs             4   24[BANK0 ] unsigned long 
  7168 ;;  temp            2   33[BANK0 ] struct .
  7169 ;;  bexp            1   28[BANK0 ] unsigned char 
  7170 ;;  aexp            1   23[BANK0 ] unsigned char 
  7171 ;;  sign            1   22[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  4    9[BANK0 ] unsigned char 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 300/0
  7178 ;;		On exit  : 300/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7181 ;;      Params:         0       8       0       0       0
  7182 ;;      Locals:         0      13       0       0       0
  7183 ;;      Temps:          0       5       0       0       0
  7184 ;;      Totals:         0      26       0       0       0
  7185 ;;Total ram usage:       26 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 2
  7188 ;; This function calls:
  7189 ;;		__Umul8_16
  7190 ;; This function is called by:
  7191 ;;		_Decodify_Command
  7192 ;;		_mediaLeituraPt100Umidadde
  7193 ;;		_Save_Log
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           
  7198                           ;psect for function ___flmul
  7199  03C8                     ___flmul:
  7200                           
  7201                           ;incstack = 0
  7202                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7203  03C8  082C               	movf	___flmul@b+3,w
  7204  03C9  3980               	andlw	128
  7205  03CA  00B1               	movwf	??___flmul
  7206  03CB  0831               	movf	??___flmul,w
  7207  03CC  00B6               	movwf	___flmul@sign
  7208  03CD  082C               	movf	___flmul@b+3,w
  7209  03CE  00B1               	movwf	??___flmul
  7210  03CF  0731               	addwf	??___flmul,w
  7211  03D0  00B2               	movwf	??___flmul+1
  7212  03D1  0832               	movf	??___flmul+1,w
  7213  03D2  00BC               	movwf	___flmul@bexp
  7214  03D3  1BAB               	btfsc	___flmul@b+2,7
  7215  03D4  143C               	bsf	___flmul@bexp,0
  7216  03D5  083C               	movf	___flmul@bexp,w
  7217  03D6  1903               	btfsc	3,2
  7218  03D7  2BE5               	goto	l3911
  7219  03D8  0A3C               	incf	___flmul@bexp,w
  7220  03D9  1D03               	btfss	3,2
  7221  03DA  2BE3               	goto	l3909
  7222  03DB  3000               	movlw	0
  7223  03DC  00AC               	movwf	___flmul@b+3
  7224  03DD  3000               	movlw	0
  7225  03DE  00AB               	movwf	___flmul@b+2
  7226  03DF  3000               	movlw	0
  7227  03E0  00AA               	movwf	___flmul@b+1
  7228  03E1  3000               	movlw	0
  7229  03E2  00A9               	movwf	___flmul@b
  7230  03E3                     l3909:
  7231  03E3  17AB               	bsf	___flmul@b+2,7
  7232  03E4  2BED               	goto	l3913
  7233  03E5                     l3911:
  7234  03E5  3000               	movlw	0
  7235  03E6  00AC               	movwf	___flmul@b+3
  7236  03E7  3000               	movlw	0
  7237  03E8  00AB               	movwf	___flmul@b+2
  7238  03E9  3000               	movlw	0
  7239  03EA  00AA               	movwf	___flmul@b+1
  7240  03EB  3000               	movlw	0
  7241  03EC  00A9               	movwf	___flmul@b
  7242  03ED                     l3913:
  7243  03ED  0830               	movf	___flmul@a+3,w
  7244  03EE  3980               	andlw	128
  7245  03EF  00B1               	movwf	??___flmul
  7246  03F0  0831               	movf	??___flmul,w
  7247  03F1  06B6               	xorwf	___flmul@sign,f
  7248  03F2  0830               	movf	___flmul@a+3,w
  7249  03F3  00B1               	movwf	??___flmul
  7250  03F4  0731               	addwf	??___flmul,w
  7251  03F5  00B2               	movwf	??___flmul+1
  7252  03F6  0832               	movf	??___flmul+1,w
  7253  03F7  00B7               	movwf	___flmul@aexp
  7254  03F8  1BAF               	btfsc	___flmul@a+2,7
  7255  03F9  1437               	bsf	___flmul@aexp,0
  7256  03FA  0837               	movf	___flmul@aexp,w
  7257  03FB  1903               	btfsc	3,2
  7258  03FC  2C0A               	goto	l3929
  7259  03FD  0A37               	incf	___flmul@aexp,w
  7260  03FE  1D03               	btfss	3,2
  7261  03FF  2C08               	goto	l3927
  7262  0400  3000               	movlw	0
  7263  0401  00B0               	movwf	___flmul@a+3
  7264  0402  3000               	movlw	0
  7265  0403  00AF               	movwf	___flmul@a+2
  7266  0404  3000               	movlw	0
  7267  0405  00AE               	movwf	___flmul@a+1
  7268  0406  3000               	movlw	0
  7269  0407  00AD               	movwf	___flmul@a
  7270  0408                     l3927:
  7271  0408  17AF               	bsf	___flmul@a+2,7
  7272  0409  2C12               	goto	l3931
  7273  040A                     l3929:
  7274  040A  3000               	movlw	0
  7275  040B  00B0               	movwf	___flmul@a+3
  7276  040C  3000               	movlw	0
  7277  040D  00AF               	movwf	___flmul@a+2
  7278  040E  3000               	movlw	0
  7279  040F  00AE               	movwf	___flmul@a+1
  7280  0410  3000               	movlw	0
  7281  0411  00AD               	movwf	___flmul@a
  7282  0412                     l3931:
  7283  0412  0837               	movf	___flmul@aexp,w
  7284  0413  1D03               	btfss	3,2
  7285  0414  083C               	movf	___flmul@bexp,w
  7286  0415  1D03               	btfss	3,2
  7287  0416  2C20               	goto	l3939
  7288  0417  3000               	movlw	0
  7289  0418  00AC               	movwf	?___flmul+3
  7290  0419  3000               	movlw	0
  7291  041A  00AB               	movwf	?___flmul+2
  7292  041B  3000               	movlw	0
  7293  041C  00AA               	movwf	?___flmul+1
  7294  041D  3000               	movlw	0
  7295  041E  00A9               	movwf	?___flmul
  7296  041F  0008               	return
  7297  0420                     l3939:
  7298  0420  0829               	movf	___flmul@b,w
  7299  0421  00B1               	movwf	??___flmul
  7300  0422  0831               	movf	??___flmul,w
  7301  0423  00A0               	movwf	__Umul8_16@multiplicand
  7302  0424  082F               	movf	___flmul@a+2,w
  7303  0425  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7304  042A  0821               	movf	?__Umul8_16+1,w
  7305  042B  00C2               	movwf	___flmul@temp+1
  7306  042C  0820               	movf	?__Umul8_16,w
  7307  042D  00C1               	movwf	___flmul@temp
  7308  042E  0841               	movf	___flmul@temp,w
  7309  042F  00B1               	movwf	??___flmul
  7310  0430  01B2               	clrf	??___flmul+1
  7311  0431  01B3               	clrf	??___flmul+2
  7312  0432  01B4               	clrf	??___flmul+3
  7313  0433  0834               	movf	??___flmul+3,w
  7314  0434  00BB               	movwf	___flmul@grs+3
  7315  0435  0833               	movf	??___flmul+2,w
  7316  0436  00BA               	movwf	___flmul@grs+2
  7317  0437  0832               	movf	??___flmul+1,w
  7318  0438  00B9               	movwf	___flmul@grs+1
  7319  0439  0831               	movf	??___flmul,w
  7320  043A  00B8               	movwf	___flmul@grs
  7321  043B  0842               	movf	___flmul@temp+1,w
  7322  043C  00B1               	movwf	??___flmul
  7323  043D  01B2               	clrf	??___flmul+1
  7324  043E  01B3               	clrf	??___flmul+2
  7325  043F  01B4               	clrf	??___flmul+3
  7326  0440  0834               	movf	??___flmul+3,w
  7327  0441  00C0               	movwf	___flmul@prod+3
  7328  0442  0833               	movf	??___flmul+2,w
  7329  0443  00BF               	movwf	___flmul@prod+2
  7330  0444  0832               	movf	??___flmul+1,w
  7331  0445  00BE               	movwf	___flmul@prod+1
  7332  0446  0831               	movf	??___flmul,w
  7333  0447  00BD               	movwf	___flmul@prod
  7334  0448  082A               	movf	___flmul@b+1,w
  7335  0449  00B1               	movwf	??___flmul
  7336  044A  0831               	movf	??___flmul,w
  7337  044B  00A0               	movwf	__Umul8_16@multiplicand
  7338  044C  082E               	movf	___flmul@a+1,w
  7339  044D  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7340  0452  0821               	movf	?__Umul8_16+1,w
  7341  0453  00C2               	movwf	___flmul@temp+1
  7342  0454  0820               	movf	?__Umul8_16,w
  7343  0455  00C1               	movwf	___flmul@temp
  7344  0456  0841               	movf	___flmul@temp,w
  7345  0457  00B1               	movwf	??___flmul
  7346  0458  01B2               	clrf	??___flmul+1
  7347  0459  01B3               	clrf	??___flmul+2
  7348  045A  01B4               	clrf	??___flmul+3
  7349  045B  0831               	movf	??___flmul,w
  7350  045C  07B8               	addwf	___flmul@grs,f
  7351  045D  0832               	movf	??___flmul+1,w
  7352  045E  1103               	clrz
  7353  045F  1803               	skipnc
  7354  0460  3E01               	addlw	1
  7355  0461  1D03               	btfss	3,2
  7356  0462  07B9               	addwf	___flmul@grs+1,f
  7357  0463  0833               	movf	??___flmul+2,w
  7358  0464  1103               	clrz
  7359  0465  1803               	skipnc
  7360  0466  3E01               	addlw	1
  7361  0467  1D03               	btfss	3,2
  7362  0468  07BA               	addwf	___flmul@grs+2,f
  7363  0469  0834               	movf	??___flmul+3,w
  7364  046A  1103               	clrz
  7365  046B  1803               	skipnc
  7366  046C  3E01               	addlw	1
  7367  046D  1D03               	btfss	3,2
  7368  046E  07BB               	addwf	___flmul@grs+3,f
  7369  046F  0842               	movf	___flmul@temp+1,w
  7370  0470  00B1               	movwf	??___flmul
  7371  0471  01B2               	clrf	??___flmul+1
  7372  0472  01B3               	clrf	??___flmul+2
  7373  0473  01B4               	clrf	??___flmul+3
  7374  0474  0831               	movf	??___flmul,w
  7375  0475  07BD               	addwf	___flmul@prod,f
  7376  0476  0832               	movf	??___flmul+1,w
  7377  0477  1103               	clrz
  7378  0478  1803               	skipnc
  7379  0479  3E01               	addlw	1
  7380  047A  1D03               	btfss	3,2
  7381  047B  07BE               	addwf	___flmul@prod+1,f
  7382  047C  0833               	movf	??___flmul+2,w
  7383  047D  1103               	clrz
  7384  047E  1803               	skipnc
  7385  047F  3E01               	addlw	1
  7386  0480  1D03               	btfss	3,2
  7387  0481  07BF               	addwf	___flmul@prod+2,f
  7388  0482  0834               	movf	??___flmul+3,w
  7389  0483  1103               	clrz
  7390  0484  1803               	skipnc
  7391  0485  3E01               	addlw	1
  7392  0486  1D03               	btfss	3,2
  7393  0487  07C0               	addwf	___flmul@prod+3,f
  7394  0488  082B               	movf	___flmul@b+2,w
  7395  0489  00B1               	movwf	??___flmul
  7396  048A  0831               	movf	??___flmul,w
  7397  048B  00A0               	movwf	__Umul8_16@multiplicand
  7398  048C  082D               	movf	___flmul@a,w
  7399  048D  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7400  0492  0821               	movf	?__Umul8_16+1,w
  7401  0493  00C2               	movwf	___flmul@temp+1
  7402  0494  0820               	movf	?__Umul8_16,w
  7403  0495  00C1               	movwf	___flmul@temp
  7404  0496  0841               	movf	___flmul@temp,w
  7405  0497  00B1               	movwf	??___flmul
  7406  0498  01B2               	clrf	??___flmul+1
  7407  0499  01B3               	clrf	??___flmul+2
  7408  049A  01B4               	clrf	??___flmul+3
  7409  049B  0831               	movf	??___flmul,w
  7410  049C  07B8               	addwf	___flmul@grs,f
  7411  049D  0832               	movf	??___flmul+1,w
  7412  049E  1103               	clrz
  7413  049F  1803               	skipnc
  7414  04A0  3E01               	addlw	1
  7415  04A1  1D03               	btfss	3,2
  7416  04A2  07B9               	addwf	___flmul@grs+1,f
  7417  04A3  0833               	movf	??___flmul+2,w
  7418  04A4  1103               	clrz
  7419  04A5  1803               	skipnc
  7420  04A6  3E01               	addlw	1
  7421  04A7  1D03               	btfss	3,2
  7422  04A8  07BA               	addwf	___flmul@grs+2,f
  7423  04A9  0834               	movf	??___flmul+3,w
  7424  04AA  1103               	clrz
  7425  04AB  1803               	skipnc
  7426  04AC  3E01               	addlw	1
  7427  04AD  1D03               	btfss	3,2
  7428  04AE  07BB               	addwf	___flmul@grs+3,f
  7429  04AF  0842               	movf	___flmul@temp+1,w
  7430  04B0  00B1               	movwf	??___flmul
  7431  04B1  01B2               	clrf	??___flmul+1
  7432  04B2  01B3               	clrf	??___flmul+2
  7433  04B3  01B4               	clrf	??___flmul+3
  7434  04B4  0831               	movf	??___flmul,w
  7435  04B5  07BD               	addwf	___flmul@prod,f
  7436  04B6  0832               	movf	??___flmul+1,w
  7437  04B7  1103               	clrz
  7438  04B8  1803               	skipnc
  7439  04B9  3E01               	addlw	1
  7440  04BA  1D03               	btfss	3,2
  7441  04BB  07BE               	addwf	___flmul@prod+1,f
  7442  04BC  0833               	movf	??___flmul+2,w
  7443  04BD  1103               	clrz
  7444  04BE  1803               	skipnc
  7445  04BF  3E01               	addlw	1
  7446  04C0  1D03               	btfss	3,2
  7447  04C1  07BF               	addwf	___flmul@prod+2,f
  7448  04C2  0834               	movf	??___flmul+3,w
  7449  04C3  1103               	clrz
  7450  04C4  1803               	skipnc
  7451  04C5  3E01               	addlw	1
  7452  04C6  1D03               	btfss	3,2
  7453  04C7  07C0               	addwf	___flmul@prod+3,f
  7454  04C8  3008               	movlw	8
  7455  04C9  00B1               	movwf	??___flmul
  7456  04CA                     u3185:
  7457  04CA  1003               	clrc
  7458  04CB  0DB8               	rlf	___flmul@grs,f
  7459  04CC  0DB9               	rlf	___flmul@grs+1,f
  7460  04CD  0DBA               	rlf	___flmul@grs+2,f
  7461  04CE  0DBB               	rlf	___flmul@grs+3,f
  7462  04CF  0BB1               	decfsz	??___flmul,f
  7463  04D0  2CCA               	goto	u3185
  7464  04D1  082A               	movf	___flmul@b+1,w
  7465  04D2  00B1               	movwf	??___flmul
  7466  04D3  0831               	movf	??___flmul,w
  7467  04D4  00A0               	movwf	__Umul8_16@multiplicand
  7468  04D5  082D               	movf	___flmul@a,w
  7469  04D6  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7470  04DB  0821               	movf	?__Umul8_16+1,w
  7471  04DC  00C2               	movwf	___flmul@temp+1
  7472  04DD  0820               	movf	?__Umul8_16,w
  7473  04DE  00C1               	movwf	___flmul@temp
  7474  04DF  0841               	movf	___flmul@temp,w
  7475  04E0  00B1               	movwf	??___flmul
  7476  04E1  0842               	movf	___flmul@temp+1,w
  7477  04E2  00B2               	movwf	??___flmul+1
  7478  04E3  01B3               	clrf	??___flmul+2
  7479  04E4  01B4               	clrf	??___flmul+3
  7480  04E5  0831               	movf	??___flmul,w
  7481  04E6  07B8               	addwf	___flmul@grs,f
  7482  04E7  0832               	movf	??___flmul+1,w
  7483  04E8  1103               	clrz
  7484  04E9  1803               	skipnc
  7485  04EA  3E01               	addlw	1
  7486  04EB  1D03               	btfss	3,2
  7487  04EC  07B9               	addwf	___flmul@grs+1,f
  7488  04ED  0833               	movf	??___flmul+2,w
  7489  04EE  1103               	clrz
  7490  04EF  1803               	skipnc
  7491  04F0  3E01               	addlw	1
  7492  04F1  1D03               	btfss	3,2
  7493  04F2  07BA               	addwf	___flmul@grs+2,f
  7494  04F3  0834               	movf	??___flmul+3,w
  7495  04F4  1103               	clrz
  7496  04F5  1803               	skipnc
  7497  04F6  3E01               	addlw	1
  7498  04F7  1D03               	btfss	3,2
  7499  04F8  07BB               	addwf	___flmul@grs+3,f
  7500  04F9  0829               	movf	___flmul@b,w
  7501  04FA  00B1               	movwf	??___flmul
  7502  04FB  0831               	movf	??___flmul,w
  7503  04FC  00A0               	movwf	__Umul8_16@multiplicand
  7504  04FD  082E               	movf	___flmul@a+1,w
  7505  04FE  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7506  0503  0821               	movf	?__Umul8_16+1,w
  7507  0504  00C2               	movwf	___flmul@temp+1
  7508  0505  0820               	movf	?__Umul8_16,w
  7509  0506  00C1               	movwf	___flmul@temp
  7510  0507  0841               	movf	___flmul@temp,w
  7511  0508  00B1               	movwf	??___flmul
  7512  0509  0842               	movf	___flmul@temp+1,w
  7513  050A  00B2               	movwf	??___flmul+1
  7514  050B  01B3               	clrf	??___flmul+2
  7515  050C  01B4               	clrf	??___flmul+3
  7516  050D  0831               	movf	??___flmul,w
  7517  050E  07B8               	addwf	___flmul@grs,f
  7518  050F  0832               	movf	??___flmul+1,w
  7519  0510  1103               	clrz
  7520  0511  1803               	skipnc
  7521  0512  3E01               	addlw	1
  7522  0513  1D03               	btfss	3,2
  7523  0514  07B9               	addwf	___flmul@grs+1,f
  7524  0515  0833               	movf	??___flmul+2,w
  7525  0516  1103               	clrz
  7526  0517  1803               	skipnc
  7527  0518  3E01               	addlw	1
  7528  0519  1D03               	btfss	3,2
  7529  051A  07BA               	addwf	___flmul@grs+2,f
  7530  051B  0834               	movf	??___flmul+3,w
  7531  051C  1103               	clrz
  7532  051D  1803               	skipnc
  7533  051E  3E01               	addlw	1
  7534  051F  1D03               	btfss	3,2
  7535  0520  07BB               	addwf	___flmul@grs+3,f
  7536  0521  3008               	movlw	8
  7537  0522  00B1               	movwf	??___flmul
  7538  0523                     u3215:
  7539  0523  1003               	clrc
  7540  0524  0DB8               	rlf	___flmul@grs,f
  7541  0525  0DB9               	rlf	___flmul@grs+1,f
  7542  0526  0DBA               	rlf	___flmul@grs+2,f
  7543  0527  0DBB               	rlf	___flmul@grs+3,f
  7544  0528  0BB1               	decfsz	??___flmul,f
  7545  0529  2D23               	goto	u3215
  7546  052A  0829               	movf	___flmul@b,w
  7547  052B  00B1               	movwf	??___flmul
  7548  052C  0831               	movf	??___flmul,w
  7549  052D  00A0               	movwf	__Umul8_16@multiplicand
  7550  052E  082D               	movf	___flmul@a,w
  7551  052F  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7552  0534  0821               	movf	?__Umul8_16+1,w
  7553  0535  00C2               	movwf	___flmul@temp+1
  7554  0536  0820               	movf	?__Umul8_16,w
  7555  0537  00C1               	movwf	___flmul@temp
  7556  0538  0841               	movf	___flmul@temp,w
  7557  0539  00B1               	movwf	??___flmul
  7558  053A  0842               	movf	___flmul@temp+1,w
  7559  053B  00B2               	movwf	??___flmul+1
  7560  053C  01B3               	clrf	??___flmul+2
  7561  053D  01B4               	clrf	??___flmul+3
  7562  053E  0831               	movf	??___flmul,w
  7563  053F  07B8               	addwf	___flmul@grs,f
  7564  0540  0832               	movf	??___flmul+1,w
  7565  0541  1103               	clrz
  7566  0542  1803               	skipnc
  7567  0543  3E01               	addlw	1
  7568  0544  1D03               	btfss	3,2
  7569  0545  07B9               	addwf	___flmul@grs+1,f
  7570  0546  0833               	movf	??___flmul+2,w
  7571  0547  1103               	clrz
  7572  0548  1803               	skipnc
  7573  0549  3E01               	addlw	1
  7574  054A  1D03               	btfss	3,2
  7575  054B  07BA               	addwf	___flmul@grs+2,f
  7576  054C  0834               	movf	??___flmul+3,w
  7577  054D  1103               	clrz
  7578  054E  1803               	skipnc
  7579  054F  3E01               	addlw	1
  7580  0550  1D03               	btfss	3,2
  7581  0551  07BB               	addwf	___flmul@grs+3,f
  7582  0552  082A               	movf	___flmul@b+1,w
  7583  0553  00B1               	movwf	??___flmul
  7584  0554  0831               	movf	??___flmul,w
  7585  0555  00A0               	movwf	__Umul8_16@multiplicand
  7586  0556  082F               	movf	___flmul@a+2,w
  7587  0557  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7588  055C  0821               	movf	?__Umul8_16+1,w
  7589  055D  00C2               	movwf	___flmul@temp+1
  7590  055E  0820               	movf	?__Umul8_16,w
  7591  055F  00C1               	movwf	___flmul@temp
  7592  0560  0841               	movf	___flmul@temp,w
  7593  0561  00B1               	movwf	??___flmul
  7594  0562  0842               	movf	___flmul@temp+1,w
  7595  0563  00B2               	movwf	??___flmul+1
  7596  0564  01B3               	clrf	??___flmul+2
  7597  0565  01B4               	clrf	??___flmul+3
  7598  0566  0831               	movf	??___flmul,w
  7599  0567  07BD               	addwf	___flmul@prod,f
  7600  0568  0832               	movf	??___flmul+1,w
  7601  0569  1103               	clrz
  7602  056A  1803               	skipnc
  7603  056B  3E01               	addlw	1
  7604  056C  1D03               	btfss	3,2
  7605  056D  07BE               	addwf	___flmul@prod+1,f
  7606  056E  0833               	movf	??___flmul+2,w
  7607  056F  1103               	clrz
  7608  0570  1803               	skipnc
  7609  0571  3E01               	addlw	1
  7610  0572  1D03               	btfss	3,2
  7611  0573  07BF               	addwf	___flmul@prod+2,f
  7612  0574  0834               	movf	??___flmul+3,w
  7613  0575  1103               	clrz
  7614  0576  1803               	skipnc
  7615  0577  3E01               	addlw	1
  7616  0578  1D03               	btfss	3,2
  7617  0579  07C0               	addwf	___flmul@prod+3,f
  7618  057A  082B               	movf	___flmul@b+2,w
  7619  057B  00B1               	movwf	??___flmul
  7620  057C  0831               	movf	??___flmul,w
  7621  057D  00A0               	movwf	__Umul8_16@multiplicand
  7622  057E  082E               	movf	___flmul@a+1,w
  7623  057F  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7624  0584  0821               	movf	?__Umul8_16+1,w
  7625  0585  00C2               	movwf	___flmul@temp+1
  7626  0586  0820               	movf	?__Umul8_16,w
  7627  0587  00C1               	movwf	___flmul@temp
  7628  0588  0841               	movf	___flmul@temp,w
  7629  0589  00B1               	movwf	??___flmul
  7630  058A  0842               	movf	___flmul@temp+1,w
  7631  058B  00B2               	movwf	??___flmul+1
  7632  058C  01B3               	clrf	??___flmul+2
  7633  058D  01B4               	clrf	??___flmul+3
  7634  058E  0831               	movf	??___flmul,w
  7635  058F  07BD               	addwf	___flmul@prod,f
  7636  0590  0832               	movf	??___flmul+1,w
  7637  0591  1103               	clrz
  7638  0592  1803               	skipnc
  7639  0593  3E01               	addlw	1
  7640  0594  1D03               	btfss	3,2
  7641  0595  07BE               	addwf	___flmul@prod+1,f
  7642  0596  0833               	movf	??___flmul+2,w
  7643  0597  1103               	clrz
  7644  0598  1803               	skipnc
  7645  0599  3E01               	addlw	1
  7646  059A  1D03               	btfss	3,2
  7647  059B  07BF               	addwf	___flmul@prod+2,f
  7648  059C  0834               	movf	??___flmul+3,w
  7649  059D  1103               	clrz
  7650  059E  1803               	skipnc
  7651  059F  3E01               	addlw	1
  7652  05A0  1D03               	btfss	3,2
  7653  05A1  07C0               	addwf	___flmul@prod+3,f
  7654  05A2  082B               	movf	___flmul@b+2,w
  7655  05A3  00B1               	movwf	??___flmul
  7656  05A4  0831               	movf	??___flmul,w
  7657  05A5  00A0               	movwf	__Umul8_16@multiplicand
  7658  05A6  082F               	movf	___flmul@a+2,w
  7659  05A7  160A  158A  24AF  120A  118A  	fcall	__Umul8_16
  7660  05AC  0821               	movf	?__Umul8_16+1,w
  7661  05AD  00C2               	movwf	___flmul@temp+1
  7662  05AE  0820               	movf	?__Umul8_16,w
  7663  05AF  00C1               	movwf	___flmul@temp
  7664  05B0  0841               	movf	___flmul@temp,w
  7665  05B1  00B1               	movwf	??___flmul
  7666  05B2  0842               	movf	___flmul@temp+1,w
  7667  05B3  00B2               	movwf	??___flmul+1
  7668  05B4  01B3               	clrf	??___flmul+2
  7669  05B5  01B4               	clrf	??___flmul+3
  7670  05B6  3008               	movlw	8
  7671  05B7                     u3255:
  7672  05B7  1003               	clrc
  7673  05B8  0DB1               	rlf	??___flmul,f
  7674  05B9  0DB2               	rlf	??___flmul+1,f
  7675  05BA  0DB3               	rlf	??___flmul+2,f
  7676  05BB  0DB4               	rlf	??___flmul+3,f
  7677  05BC  3EFF               	addlw	-1
  7678  05BD  1D03               	skipz
  7679  05BE  2DB7               	goto	u3255
  7680  05BF  0831               	movf	??___flmul,w
  7681  05C0  07BD               	addwf	___flmul@prod,f
  7682  05C1  0832               	movf	??___flmul+1,w
  7683  05C2  1103               	clrz
  7684  05C3  1803               	skipnc
  7685  05C4  3E01               	addlw	1
  7686  05C5  1D03               	btfss	3,2
  7687  05C6  07BE               	addwf	___flmul@prod+1,f
  7688  05C7  0833               	movf	??___flmul+2,w
  7689  05C8  1103               	clrz
  7690  05C9  1803               	skipnc
  7691  05CA  3E01               	addlw	1
  7692  05CB  1D03               	btfss	3,2
  7693  05CC  07BF               	addwf	___flmul@prod+2,f
  7694  05CD  0834               	movf	??___flmul+3,w
  7695  05CE  1103               	clrz
  7696  05CF  1803               	skipnc
  7697  05D0  3E01               	addlw	1
  7698  05D1  1D03               	btfss	3,2
  7699  05D2  07C0               	addwf	___flmul@prod+3,f
  7700  05D3  083B               	movf	___flmul@grs+3,w
  7701  05D4  00B1               	movwf	??___flmul
  7702  05D5  01B2               	clrf	??___flmul+1
  7703  05D6  01B3               	clrf	??___flmul+2
  7704  05D7  01B4               	clrf	??___flmul+3
  7705  05D8  0831               	movf	??___flmul,w
  7706  05D9  07BD               	addwf	___flmul@prod,f
  7707  05DA  0832               	movf	??___flmul+1,w
  7708  05DB  1103               	clrz
  7709  05DC  1803               	skipnc
  7710  05DD  3E01               	addlw	1
  7711  05DE  1D03               	btfss	3,2
  7712  05DF  07BE               	addwf	___flmul@prod+1,f
  7713  05E0  0833               	movf	??___flmul+2,w
  7714  05E1  1103               	clrz
  7715  05E2  1803               	skipnc
  7716  05E3  3E01               	addlw	1
  7717  05E4  1D03               	btfss	3,2
  7718  05E5  07BF               	addwf	___flmul@prod+2,f
  7719  05E6  0834               	movf	??___flmul+3,w
  7720  05E7  1103               	clrz
  7721  05E8  1803               	skipnc
  7722  05E9  3E01               	addlw	1
  7723  05EA  1D03               	btfss	3,2
  7724  05EB  07C0               	addwf	___flmul@prod+3,f
  7725  05EC  3008               	movlw	8
  7726  05ED  00B1               	movwf	??___flmul
  7727  05EE                     u3285:
  7728  05EE  1003               	clrc
  7729  05EF  0DB8               	rlf	___flmul@grs,f
  7730  05F0  0DB9               	rlf	___flmul@grs+1,f
  7731  05F1  0DBA               	rlf	___flmul@grs+2,f
  7732  05F2  0DBB               	rlf	___flmul@grs+3,f
  7733  05F3  0BB1               	decfsz	??___flmul,f
  7734  05F4  2DEE               	goto	u3285
  7735  05F5  083C               	movf	___flmul@bexp,w
  7736  05F6  0737               	addwf	___flmul@aexp,w
  7737  05F7  00B1               	movwf	??___flmul
  7738  05F8  01B2               	clrf	??___flmul+1
  7739  05F9  0DB2               	rlf	??___flmul+1,f
  7740  05FA  0831               	movf	??___flmul,w
  7741  05FB  3E82               	addlw	130
  7742  05FC  00C1               	movwf	___flmul@temp
  7743  05FD  0832               	movf	??___flmul+1,w
  7744  05FE  1803               	skipnc
  7745  05FF  3E01               	addlw	1
  7746  0600  3EFF               	addlw	255
  7747  0601  00C2               	movwf	___flmul@temp+1
  7748  0602                     l3991:
  7749  0602  1BBF               	btfsc	___flmul@prod+2,7
  7750  0603  2E1F               	goto	l3993
  7751  0604  3001               	movlw	1
  7752  0605  00B1               	movwf	??___flmul
  7753  0606                     u3295:
  7754  0606  1003               	clrc
  7755  0607  0DBD               	rlf	___flmul@prod,f
  7756  0608  0DBE               	rlf	___flmul@prod+1,f
  7757  0609  0DBF               	rlf	___flmul@prod+2,f
  7758  060A  0DC0               	rlf	___flmul@prod+3,f
  7759  060B  0BB1               	decfsz	??___flmul,f
  7760  060C  2E06               	goto	u3295
  7761  060D  1BBB               	btfsc	___flmul@grs+3,7
  7762  060E  143D               	bsf	___flmul@prod,0
  7763  060F  3001               	movlw	1
  7764  0610  00B1               	movwf	??___flmul
  7765  0611                     u3315:
  7766  0611  1003               	clrc
  7767  0612  0DB8               	rlf	___flmul@grs,f
  7768  0613  0DB9               	rlf	___flmul@grs+1,f
  7769  0614  0DBA               	rlf	___flmul@grs+2,f
  7770  0615  0DBB               	rlf	___flmul@grs+3,f
  7771  0616  0BB1               	decfsz	??___flmul,f
  7772  0617  2E11               	goto	u3315
  7773  0618  30FF               	movlw	255
  7774  0619  07C1               	addwf	___flmul@temp,f
  7775  061A  1803               	skipnc
  7776  061B  0AC2               	incf	___flmul@temp+1,f
  7777  061C  30FF               	movlw	255
  7778  061D  07C2               	addwf	___flmul@temp+1,f
  7779  061E  2E02               	goto	l3991
  7780  061F                     l3993:
  7781  061F  01B7               	clrf	___flmul@aexp
  7782  0620  1FBB               	btfss	___flmul@grs+3,7
  7783  0621  2E38               	goto	l4003
  7784  0622  30FF               	movlw	255
  7785  0623  0538               	andwf	___flmul@grs,w
  7786  0624  00B1               	movwf	??___flmul
  7787  0625  30FF               	movlw	255
  7788  0626  0539               	andwf	___flmul@grs+1,w
  7789  0627  00B2               	movwf	??___flmul+1
  7790  0628  30FF               	movlw	255
  7791  0629  053A               	andwf	___flmul@grs+2,w
  7792  062A  00B3               	movwf	??___flmul+2
  7793  062B  307F               	movlw	127
  7794  062C  053B               	andwf	___flmul@grs+3,w
  7795  062D  00B4               	movwf	??___flmul+3
  7796  062E  0834               	movf	??___flmul+3,w
  7797  062F  0433               	iorwf	??___flmul+2,w
  7798  0630  0432               	iorwf	??___flmul+1,w
  7799  0631  0431               	iorwf	??___flmul,w
  7800  0632  1903               	skipnz
  7801  0633  183D               	btfsc	___flmul@prod,0
  7802  0634  2E36               	goto	l3999
  7803  0635  2E38               	goto	l4003
  7804  0636                     l3999:
  7805  0636  01B7               	clrf	___flmul@aexp
  7806  0637  0AB7               	incf	___flmul@aexp,f
  7807  0638                     l4003:
  7808  0638  0837               	movf	___flmul@aexp,w
  7809  0639  1903               	btfsc	3,2
  7810  063A  2E6A               	goto	l4013
  7811  063B  3001               	movlw	1
  7812  063C  07BD               	addwf	___flmul@prod,f
  7813  063D  3000               	movlw	0
  7814  063E  1803               	skipnc
  7815  063F  3001               	movlw	1
  7816  0640  07BE               	addwf	___flmul@prod+1,f
  7817  0641  3000               	movlw	0
  7818  0642  1803               	skipnc
  7819  0643  3001               	movlw	1
  7820  0644  07BF               	addwf	___flmul@prod+2,f
  7821  0645  3000               	movlw	0
  7822  0646  1803               	skipnc
  7823  0647  3001               	movlw	1
  7824  0648  07C0               	addwf	___flmul@prod+3,f
  7825  0649  1C40               	btfss	___flmul@prod+3,0
  7826  064A  2E6A               	goto	l4013
  7827  064B  083D               	movf	___flmul@prod,w
  7828  064C  00B1               	movwf	??___flmul
  7829  064D  083E               	movf	___flmul@prod+1,w
  7830  064E  00B2               	movwf	??___flmul+1
  7831  064F  083F               	movf	___flmul@prod+2,w
  7832  0650  00B3               	movwf	??___flmul+2
  7833  0651  0840               	movf	___flmul@prod+3,w
  7834  0652  00B4               	movwf	??___flmul+3
  7835  0653  3001               	movlw	1
  7836  0654  00B5               	movwf	??___flmul+4
  7837  0655                     u3385:
  7838  0655  0D34               	rlf	??___flmul+3,w
  7839  0656  0CB4               	rrf	??___flmul+3,f
  7840  0657  0CB3               	rrf	??___flmul+2,f
  7841  0658  0CB2               	rrf	??___flmul+1,f
  7842  0659  0CB1               	rrf	??___flmul,f
  7843  065A  0BB5               	decfsz	??___flmul+4,f
  7844  065B  2E55               	goto	u3385
  7845  065C  0834               	movf	??___flmul+3,w
  7846  065D  00C0               	movwf	___flmul@prod+3
  7847  065E  0833               	movf	??___flmul+2,w
  7848  065F  00BF               	movwf	___flmul@prod+2
  7849  0660  0832               	movf	??___flmul+1,w
  7850  0661  00BE               	movwf	___flmul@prod+1
  7851  0662  0831               	movf	??___flmul,w
  7852  0663  00BD               	movwf	___flmul@prod
  7853  0664  3001               	movlw	1
  7854  0665  07C1               	addwf	___flmul@temp,f
  7855  0666  1803               	skipnc
  7856  0667  0AC2               	incf	___flmul@temp+1,f
  7857  0668  3000               	movlw	0
  7858  0669  07C2               	addwf	___flmul@temp+1,f
  7859  066A                     l4013:
  7860  066A  0842               	movf	___flmul@temp+1,w
  7861  066B  3A80               	xorlw	128
  7862  066C  00FF               	movwf	127
  7863  066D  3080               	movlw	128
  7864  066E  027F               	subwf	127,w
  7865  066F  1D03               	skipz
  7866  0670  2E73               	goto	u3395
  7867  0671  30FF               	movlw	255
  7868  0672  0241               	subwf	___flmul@temp,w
  7869  0673                     u3395:
  7870  0673  1C03               	skipc
  7871  0674  2E80               	goto	l4017
  7872  0675  307F               	movlw	127
  7873  0676  1283               	bcf	3,5	;RP0=0, select bank0
  7874  0677  1303               	bcf	3,6	;RP1=0, select bank0
  7875  0678  00C0               	movwf	___flmul@prod+3
  7876  0679  3080               	movlw	128
  7877  067A  00BF               	movwf	___flmul@prod+2
  7878  067B  3000               	movlw	0
  7879  067C  00BE               	movwf	___flmul@prod+1
  7880  067D  3000               	movlw	0
  7881  067E  00BD               	movwf	___flmul@prod
  7882  067F  2EB0               	goto	l1386
  7883  0680                     l4017:
  7884  0680  1283               	bcf	3,5	;RP0=0, select bank0
  7885  0681  1303               	bcf	3,6	;RP1=0, select bank0
  7886  0682  0842               	movf	___flmul@temp+1,w
  7887  0683  3A80               	xorlw	128
  7888  0684  00FF               	movwf	127
  7889  0685  3080               	movlw	128
  7890  0686  027F               	subwf	127,w
  7891  0687  1D03               	skipz
  7892  0688  2E8B               	goto	u3405
  7893  0689  3001               	movlw	1
  7894  068A  0241               	subwf	___flmul@temp,w
  7895  068B                     u3405:
  7896  068B  1803               	skipnc
  7897  068C  2E99               	goto	l4023
  7898  068D  3000               	movlw	0
  7899  068E  1283               	bcf	3,5	;RP0=0, select bank0
  7900  068F  1303               	bcf	3,6	;RP1=0, select bank0
  7901  0690  00C0               	movwf	___flmul@prod+3
  7902  0691  3000               	movlw	0
  7903  0692  00BF               	movwf	___flmul@prod+2
  7904  0693  3000               	movlw	0
  7905  0694  00BE               	movwf	___flmul@prod+1
  7906  0695  3000               	movlw	0
  7907  0696  00BD               	movwf	___flmul@prod
  7908  0697  01B6               	clrf	___flmul@sign
  7909  0698  2EB0               	goto	l1386
  7910  0699                     l4023:
  7911  0699  1283               	bcf	3,5	;RP0=0, select bank0
  7912  069A  1303               	bcf	3,6	;RP1=0, select bank0
  7913  069B  0841               	movf	___flmul@temp,w
  7914  069C  00B1               	movwf	??___flmul
  7915  069D  0831               	movf	??___flmul,w
  7916  069E  00BC               	movwf	___flmul@bexp
  7917  069F  30FF               	movlw	255
  7918  06A0  05BD               	andwf	___flmul@prod,f
  7919  06A1  30FF               	movlw	255
  7920  06A2  05BE               	andwf	___flmul@prod+1,f
  7921  06A3  307F               	movlw	127
  7922  06A4  05BF               	andwf	___flmul@prod+2,f
  7923  06A5  3000               	movlw	0
  7924  06A6  05C0               	andwf	___flmul@prod+3,f
  7925  06A7  183C               	btfsc	___flmul@bexp,0
  7926  06A8  17BF               	bsf	___flmul@prod+2,7
  7927  06A9  083C               	movf	___flmul@bexp,w
  7928  06AA  00B1               	movwf	??___flmul
  7929  06AB  1003               	clrc
  7930  06AC  0C31               	rrf	??___flmul,w
  7931  06AD  00B2               	movwf	??___flmul+1
  7932  06AE  0832               	movf	??___flmul+1,w
  7933  06AF  00C0               	movwf	___flmul@prod+3
  7934  06B0                     l1386:
  7935  06B0  0836               	movf	___flmul@sign,w
  7936  06B1  00B1               	movwf	??___flmul
  7937  06B2  0831               	movf	??___flmul,w
  7938  06B3  04C0               	iorwf	___flmul@prod+3,f
  7939  06B4  0840               	movf	___flmul@prod+3,w
  7940  06B5  00AC               	movwf	?___flmul+3
  7941  06B6  083F               	movf	___flmul@prod+2,w
  7942  06B7  00AB               	movwf	?___flmul+2
  7943  06B8  083E               	movf	___flmul@prod+1,w
  7944  06B9  00AA               	movwf	?___flmul+1
  7945  06BA  083D               	movf	___flmul@prod,w
  7946  06BB  00A9               	movwf	?___flmul
  7947  06BC  0008               	return
  7948  06BD                     __end_of___flmul:
  7949                           
  7950                           	psect	text21
  7951  1CAF                     __ptext21:	
  7952 ;; *************** function __Umul8_16 *****************
  7953 ;; Defined at:
  7954 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  multiplier      1    wreg     unsigned char 
  7957 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7960 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7961 ;;  product         2    4[BANK0 ] unsigned int 
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  2    0[BANK0 ] unsigned int 
  7964 ;; Registers used:
  7965 ;;		wreg, status,2, status,0
  7966 ;; Tracked objects:
  7967 ;;		On entry : 300/0
  7968 ;;		On exit  : 300/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7971 ;;      Params:         0       2       0       0       0
  7972 ;;      Locals:         0       5       0       0       0
  7973 ;;      Temps:          0       2       0       0       0
  7974 ;;      Totals:         0       9       0       0       0
  7975 ;;Total ram usage:        9 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; Hardware stack levels required when called: 1
  7978 ;; This function calls:
  7979 ;;		Nothing
  7980 ;; This function is called by:
  7981 ;;		___flmul
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function __Umul8_16
  7987  1CAF                     __Umul8_16:
  7988                           
  7989                           ;incstack = 0
  7990                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7991                           ;__Umul8_16@multiplier stored from wreg
  7992  1CAF  00A8               	movwf	__Umul8_16@multiplier
  7993  1CB0  01A4               	clrf	__Umul8_16@product
  7994  1CB1  01A5               	clrf	__Umul8_16@product+1
  7995  1CB2  0820               	movf	__Umul8_16@multiplicand,w
  7996  1CB3  00A2               	movwf	??__Umul8_16
  7997  1CB4  01A3               	clrf	??__Umul8_16+1
  7998  1CB5  0822               	movf	??__Umul8_16,w
  7999  1CB6  00A6               	movwf	__Umul8_16@word_mpld
  8000  1CB7  0823               	movf	??__Umul8_16+1,w
  8001  1CB8  00A7               	movwf	__Umul8_16@word_mpld+1
  8002  1CB9                     l3623:
  8003  1CB9  1C28               	btfss	__Umul8_16@multiplier,0
  8004  1CBA  2CC1               	goto	l1393
  8005  1CBB  0826               	movf	__Umul8_16@word_mpld,w
  8006  1CBC  07A4               	addwf	__Umul8_16@product,f
  8007  1CBD  1803               	skipnc
  8008  1CBE  0AA5               	incf	__Umul8_16@product+1,f
  8009  1CBF  0827               	movf	__Umul8_16@word_mpld+1,w
  8010  1CC0  07A5               	addwf	__Umul8_16@product+1,f
  8011  1CC1                     l1393:
  8012  1CC1  3001               	movlw	1
  8013  1CC2                     u2715:
  8014  1CC2  1003               	clrc
  8015  1CC3  0DA6               	rlf	__Umul8_16@word_mpld,f
  8016  1CC4  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8017  1CC5  3EFF               	addlw	-1
  8018  1CC6  1D03               	skipz
  8019  1CC7  2CC2               	goto	u2715
  8020  1CC8  1003               	clrc
  8021  1CC9  0CA8               	rrf	__Umul8_16@multiplier,f
  8022  1CCA  0828               	movf	__Umul8_16@multiplier,w
  8023  1CCB  1D03               	btfss	3,2
  8024  1CCC  2CB9               	goto	l3623
  8025  1CCD  0825               	movf	__Umul8_16@product+1,w
  8026  1CCE  00A1               	movwf	?__Umul8_16+1
  8027  1CCF  0824               	movf	__Umul8_16@product,w
  8028  1CD0  00A0               	movwf	?__Umul8_16
  8029  1CD1  0008               	return
  8030  1CD2                     __end_of__Umul8_16:
  8031                           
  8032                           	psect	text22
  8033  1B87                     __ptext22:	
  8034 ;; *************** function _PROCULUS_VP_Write_String *****************
  8035 ;; Defined at:
  8036 ;;		line 205 in file "proculus.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  vp              2   58[BANK0 ] unsigned int 
  8039 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8040 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 300/0
  8049 ;;		On exit  : 300/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8052 ;;      Params:         0       3       0       0       0
  8053 ;;      Locals:         0       0       0       0       0
  8054 ;;      Temps:          0       1       0       0       0
  8055 ;;      Totals:         0       4       0       0       0
  8056 ;;Total ram usage:        4 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 4
  8059 ;; This function calls:
  8060 ;;		_PROCULUS_VP_Write
  8061 ;;		_strlen
  8062 ;; This function is called by:
  8063 ;;		_Decodify_Command
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           
  8068                           ;psect for function _PROCULUS_VP_Write_String
  8069  1B87                     _PROCULUS_VP_Write_String:
  8070                           
  8071                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8075  1B87  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8076  1B88  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8077  1B89  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8078  1B8A  00D2               	movwf	PROCULUS_VP_Write@vp
  8079  1B8B  085C               	movf	PROCULUS_VP_Write_String@text,w
  8080  1B8C  00D4               	movwf	PROCULUS_VP_Write@vetor
  8081  1B8D  3001               	movlw	1
  8082  1B8E  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8083  1B8F  085C               	movf	PROCULUS_VP_Write_String@text,w
  8084  1B90  120A  118A  27E6  160A  158A  	fcall	_strlen
  8085  1B95  0820               	movf	?_strlen,w
  8086  1B96  3E01               	addlw	1
  8087  1B97  00DD               	movwf	??_PROCULUS_VP_Write_String
  8088  1B98  085D               	movf	??_PROCULUS_VP_Write_String,w
  8089  1B99  00D6               	movwf	PROCULUS_VP_Write@size
  8090  1B9A  160A  158A  27B9   	fcall	_PROCULUS_VP_Write
  8091  1B9D  0008               	return
  8092  1B9E                     __end_of_PROCULUS_VP_Write_String:
  8093                           
  8094                           	psect	text23
  8095  07E6                     __ptext23:	
  8096 ;; *************** function _strlen *****************
  8097 ;; Defined at:
  8098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  s               1    wreg     PTR const unsigned char 
  8101 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8104 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8105 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8106 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  2    0[BANK0 ] unsigned int 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/300
  8113 ;;		On exit  : B00/800
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8116 ;;      Params:         0       2       0       0       0
  8117 ;;      Locals:         0       2       0       0       0
  8118 ;;      Temps:          0       1       0       0       0
  8119 ;;      Totals:         0       5       0       0       0
  8120 ;;Total ram usage:        5 bytes
  8121 ;; Hardware stack levels used: 1
  8122 ;; Hardware stack levels required when called: 1
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_Decodify_Command
  8127 ;;		_PROCULUS_VP_Write_String
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           
  8132                           ;psect for function _strlen
  8133  07E6                     _strlen:
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8137                           ;strlen@s stored from wreg
  8138  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  8139  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  8140  07E8  00A4               	movwf	strlen@s
  8141  07E9  0824               	movf	strlen@s,w
  8142  07EA  00A2               	movwf	??_strlen
  8143  07EB  0822               	movf	??_strlen,w
  8144  07EC  00A3               	movwf	strlen@cp
  8145  07ED                     l3783:
  8146  07ED  0823               	movf	strlen@cp,w
  8147  07EE  0084               	movwf	4
  8148  07EF  1783               	bsf	3,7	;select IRP bank2
  8149  07F0  0800               	movf	0,w
  8150  07F1  1903               	btfsc	3,2
  8151  07F2  2FF8               	goto	l3785
  8152  07F3  3001               	movlw	1
  8153  07F4  00A2               	movwf	??_strlen
  8154  07F5  0822               	movf	??_strlen,w
  8155  07F6  07A3               	addwf	strlen@cp,f
  8156  07F7  2FED               	goto	l3783
  8157  07F8                     l3785:
  8158  07F8  0824               	movf	strlen@s,w
  8159  07F9  0223               	subwf	strlen@cp,w
  8160  07FA  00A0               	movwf	?_strlen
  8161  07FB  01A1               	clrf	?_strlen+1
  8162  07FC  1BA0               	btfsc	?_strlen,7
  8163  07FD  03A1               	decf	?_strlen+1,f
  8164  07FE  0008               	return
  8165  07FF                     __end_of_strlen:
  8166                           
  8167                           	psect	text24
  8168  1FB9                     __ptext24:	
  8169 ;; *************** function _PROCULUS_VP_Write *****************
  8170 ;; Defined at:
  8171 ;;		line 40 in file "proculus.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  vp              2   50[BANK0 ] unsigned int 
  8174 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8175 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8176 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8177 ;;  size            1   54[BANK0 ] unsigned char 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  i               1   57[BANK0 ] unsigned char 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : B00/800
  8186 ;;		On exit  : 300/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8189 ;;      Params:         0       5       0       0       0
  8190 ;;      Locals:         0       1       0       0       0
  8191 ;;      Temps:          0       2       0       0       0
  8192 ;;      Totals:         0       8       0       0       0
  8193 ;;Total ram usage:        8 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 3
  8196 ;; This function calls:
  8197 ;;		_PROCULUS_Delay
  8198 ;;		_USART_put_int
  8199 ;;		_USART_putc
  8200 ;; This function is called by:
  8201 ;;		_PROCULUS_VP_Write_String
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           
  8206                           ;psect for function _PROCULUS_VP_Write
  8207  1FB9                     _PROCULUS_VP_Write:
  8208                           
  8209                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8210                           
  8211                           ;incstack = 0
  8212                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8213  1FB9  30A5               	movlw	165
  8214  1FBA  00CE               	movwf	USART_put_int@value
  8215  1FBB  305A               	movlw	90
  8216  1FBC  00CF               	movwf	USART_put_int@value+1
  8217  1FBD  160A  158A  2371  160A  158A  	fcall	_USART_put_int
  8218                           
  8219                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8220  1FC2  1283               	bcf	3,5	;RP0=0, select bank0
  8221  1FC3  0856               	movf	PROCULUS_VP_Write@size,w
  8222  1FC4  3E03               	addlw	3
  8223  1FC5  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8224                           
  8225                           ;proculus.c: 43:      USART_putc(0x82);
  8226  1FCA  3082               	movlw	130
  8227  1FCB  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8228                           
  8229                           ;proculus.c: 44:      USART_put_int(vp);
  8230  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  8231  1FD1  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8232  1FD2  00CF               	movwf	USART_put_int@value+1
  8233  1FD3  0852               	movf	PROCULUS_VP_Write@vp,w
  8234  1FD4  00CE               	movwf	USART_put_int@value
  8235  1FD5  160A  158A  2371  160A  158A  	fcall	_USART_put_int
  8236                           
  8237                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8238  1FDA  1283               	bcf	3,5	;RP0=0, select bank0
  8239  1FDB  01D9               	clrf	PROCULUS_VP_Write@i
  8240  1FDC                     l5501:
  8241  1FDC  0856               	movf	PROCULUS_VP_Write@size,w
  8242  1FDD  0259               	subwf	PROCULUS_VP_Write@i,w
  8243  1FDE  1803               	btfsc	3,0
  8244  1FDF  2FF8               	goto	l5503
  8245                           
  8246                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8247  1FE0  0859               	movf	PROCULUS_VP_Write@i,w
  8248  1FE1  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8249  1FE2  00D7               	movwf	??_PROCULUS_VP_Write
  8250  1FE3  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8251  1FE4  1803               	skipnc
  8252  1FE5  3E01               	addlw	1
  8253  1FE6  00D8               	movwf	??_PROCULUS_VP_Write+1
  8254  1FE7  0857               	movf	??_PROCULUS_VP_Write,w
  8255  1FE8  0084               	movwf	4
  8256  1FE9  1783               	bsf	3,7
  8257  1FEA  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8258  1FEB  1383               	bcf	3,7
  8259  1FEC  0800               	movf	0,w
  8260  1FED  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8261  1FF2  3001               	movlw	1
  8262  1FF3  1283               	bcf	3,5	;RP0=0, select bank0
  8263  1FF4  00D7               	movwf	??_PROCULUS_VP_Write
  8264  1FF5  0857               	movf	??_PROCULUS_VP_Write,w
  8265  1FF6  07D9               	addwf	PROCULUS_VP_Write@i,f
  8266  1FF7  2FDC               	goto	l5501
  8267  1FF8                     l5503:
  8268                           
  8269                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8270  1FF8  3001               	movlw	1
  8271  1FF9  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8272  1FFA  3000               	movlw	0
  8273  1FFB  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8274  1FFC  160A  158A  23CF   	fcall	_PROCULUS_Delay
  8275  1FFF  0008               	return
  8276  2000                     __end_of_PROCULUS_VP_Write:
  8277                           
  8278                           	psect	text25
  8279  1B46                     __ptext25:	
  8280 ;; *************** function _PROCULUS_Show_Screen *****************
  8281 ;; Defined at:
  8282 ;;		line 243 in file "proculus.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  screen          2   54[BANK0 ] unsigned int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 300/0
  8293 ;;		On exit  : 300/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8296 ;;      Params:         0       2       0       0       0
  8297 ;;      Locals:         0       3       0       0       0
  8298 ;;      Temps:          0       1       0       0       0
  8299 ;;      Totals:         0       6       0       0       0
  8300 ;;Total ram usage:        6 bytes
  8301 ;; Hardware stack levels used: 1
  8302 ;; Hardware stack levels required when called: 4
  8303 ;; This function calls:
  8304 ;;		_PROCULUS_Control_Register_Write
  8305 ;; This function is called by:
  8306 ;;		_Decodify_Command
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function _PROCULUS_Show_Screen
  8312  1B46                     _PROCULUS_Show_Screen:
  8313                           
  8314                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8315                           
  8316                           ;incstack = 0
  8317                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8318  1B46  3003               	movlw	3
  8319  1B47  00D8               	movwf	??_PROCULUS_Show_Screen
  8320  1B48  0858               	movf	??_PROCULUS_Show_Screen,w
  8321  1B49  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8322                           
  8323                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8324  1B4A  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8325  1B4B  00D8               	movwf	??_PROCULUS_Show_Screen
  8326  1B4C  0858               	movf	??_PROCULUS_Show_Screen,w
  8327  1B4D  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8328                           
  8329                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8330  1B4E  0856               	movf	PROCULUS_Show_Screen@screen,w
  8331  1B4F  00D8               	movwf	??_PROCULUS_Show_Screen
  8332  1B50  0858               	movf	??_PROCULUS_Show_Screen,w
  8333  1B51  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8334                           
  8335                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8336  1B52  3003               	movlw	3
  8337  1B53  00D8               	movwf	??_PROCULUS_Show_Screen
  8338  1B54  0858               	movf	??_PROCULUS_Show_Screen,w
  8339  1B55  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8340  1B56  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8341  1B57  160A  158A  2686   	fcall	_PROCULUS_Control_Register_Write
  8342  1B5A  0008               	return
  8343  1B5B                     __end_of_PROCULUS_Show_Screen:
  8344                           
  8345                           	psect	text26
  8346  1C8D                     __ptext26:	
  8347 ;; *************** function _PROCULUS_Buzzer *****************
  8348 ;; Defined at:
  8349 ;;		line 223 in file "proculus.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 300/0
  8360 ;;		On exit  : 300/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8363 ;;      Params:         0       2       0       0       0
  8364 ;;      Locals:         0       2       0       0       0
  8365 ;;      Temps:          0       1       0       0       0
  8366 ;;      Totals:         0       5       0       0       0
  8367 ;;Total ram usage:        5 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; Hardware stack levels required when called: 4
  8370 ;; This function calls:
  8371 ;;		_PROCULUS_Control_Register_Write
  8372 ;;		___lwdiv
  8373 ;; This function is called by:
  8374 ;;		_Decodify_Command
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function _PROCULUS_Buzzer
  8380  1C8D                     _PROCULUS_Buzzer:
  8381                           
  8382                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8386  1C8D  300A               	movlw	10
  8387  1C8E  00A0               	movwf	___lwdiv@divisor
  8388  1C8F  3000               	movlw	0
  8389  1C90  00A1               	movwf	___lwdiv@divisor+1
  8390  1C91  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  8391  1C92  00A3               	movwf	___lwdiv@dividend+1
  8392  1C93  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8393  1C94  00A2               	movwf	___lwdiv@dividend
  8394  1C95  160A  158A  26FA  160A  158A  	fcall	___lwdiv
  8395  1C9A  0821               	movf	?___lwdiv+1,w
  8396  1C9B  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  8397  1C9C  0820               	movf	?___lwdiv,w
  8398  1C9D  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8399                           
  8400                           ;proculus.c: 226:      vetor[0]=0x02;
  8401  1C9E  3002               	movlw	2
  8402  1C9F  00D8               	movwf	??_PROCULUS_Buzzer
  8403  1CA0  0858               	movf	??_PROCULUS_Buzzer,w
  8404  1CA1  00D9               	movwf	PROCULUS_Buzzer@vetor
  8405                           
  8406                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8407  1CA2  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8408  1CA3  00D8               	movwf	??_PROCULUS_Buzzer
  8409  1CA4  0858               	movf	??_PROCULUS_Buzzer,w
  8410  1CA5  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  8411                           
  8412                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  8413  1CA6  3002               	movlw	2
  8414  1CA7  00D8               	movwf	??_PROCULUS_Buzzer
  8415  1CA8  0858               	movf	??_PROCULUS_Buzzer,w
  8416  1CA9  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8417  1CAA  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  8418  1CAB  160A  158A  2686   	fcall	_PROCULUS_Control_Register_Write
  8419  1CAE  0008               	return
  8420  1CAF                     __end_of_PROCULUS_Buzzer:
  8421                           
  8422                           	psect	text27
  8423  1EFA                     __ptext27:	
  8424 ;; *************** function ___lwdiv *****************
  8425 ;; Defined at:
  8426 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  divisor         2    0[BANK0 ] unsigned int 
  8429 ;;  dividend        2    2[BANK0 ] unsigned int 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  quotient        2    5[BANK0 ] unsigned int 
  8432 ;;  counter         1    7[BANK0 ] unsigned char 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2    0[BANK0 ] unsigned int 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0
  8437 ;; Tracked objects:
  8438 ;;		On entry : 300/0
  8439 ;;		On exit  : 300/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8442 ;;      Params:         0       4       0       0       0
  8443 ;;      Locals:         0       3       0       0       0
  8444 ;;      Temps:          0       1       0       0       0
  8445 ;;      Totals:         0       8       0       0       0
  8446 ;;Total ram usage:        8 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 1
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_ADC_Media_10bits
  8453 ;;		_PROCULUS_Buzzer
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           
  8458                           ;psect for function ___lwdiv
  8459  1EFA                     ___lwdiv:
  8460                           
  8461                           ;incstack = 0
  8462                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8463  1EFA  01A5               	clrf	___lwdiv@quotient
  8464  1EFB  01A6               	clrf	___lwdiv@quotient+1
  8465  1EFC  0820               	movf	___lwdiv@divisor,w
  8466  1EFD  0421               	iorwf	___lwdiv@divisor+1,w
  8467  1EFE  1903               	btfsc	3,2
  8468  1EFF  2F31               	goto	l3891
  8469  1F00  01A7               	clrf	___lwdiv@counter
  8470  1F01  0AA7               	incf	___lwdiv@counter,f
  8471  1F02                     l3879:
  8472  1F02  1BA1               	btfsc	___lwdiv@divisor+1,7
  8473  1F03  2F10               	goto	l3881
  8474  1F04  3001               	movlw	1
  8475  1F05                     u3005:
  8476  1F05  1003               	clrc
  8477  1F06  0DA0               	rlf	___lwdiv@divisor,f
  8478  1F07  0DA1               	rlf	___lwdiv@divisor+1,f
  8479  1F08  3EFF               	addlw	-1
  8480  1F09  1D03               	skipz
  8481  1F0A  2F05               	goto	u3005
  8482  1F0B  3001               	movlw	1
  8483  1F0C  00A4               	movwf	??___lwdiv
  8484  1F0D  0824               	movf	??___lwdiv,w
  8485  1F0E  07A7               	addwf	___lwdiv@counter,f
  8486  1F0F  2F02               	goto	l3879
  8487  1F10                     l3881:
  8488  1F10  3001               	movlw	1
  8489  1F11                     u3025:
  8490  1F11  1003               	clrc
  8491  1F12  0DA5               	rlf	___lwdiv@quotient,f
  8492  1F13  0DA6               	rlf	___lwdiv@quotient+1,f
  8493  1F14  3EFF               	addlw	-1
  8494  1F15  1D03               	skipz
  8495  1F16  2F11               	goto	u3025
  8496  1F17  0821               	movf	___lwdiv@divisor+1,w
  8497  1F18  0223               	subwf	___lwdiv@dividend+1,w
  8498  1F19  1D03               	skipz
  8499  1F1A  2F1D               	goto	u3035
  8500  1F1B  0820               	movf	___lwdiv@divisor,w
  8501  1F1C  0222               	subwf	___lwdiv@dividend,w
  8502  1F1D                     u3035:
  8503  1F1D  1C03               	skipc
  8504  1F1E  2F26               	goto	l3887
  8505  1F1F  0820               	movf	___lwdiv@divisor,w
  8506  1F20  02A2               	subwf	___lwdiv@dividend,f
  8507  1F21  0821               	movf	___lwdiv@divisor+1,w
  8508  1F22  1C03               	skipc
  8509  1F23  03A3               	decf	___lwdiv@dividend+1,f
  8510  1F24  02A3               	subwf	___lwdiv@dividend+1,f
  8511  1F25  1425               	bsf	___lwdiv@quotient,0
  8512  1F26                     l3887:
  8513  1F26  3001               	movlw	1
  8514  1F27                     u3045:
  8515  1F27  1003               	clrc
  8516  1F28  0CA1               	rrf	___lwdiv@divisor+1,f
  8517  1F29  0CA0               	rrf	___lwdiv@divisor,f
  8518  1F2A  3EFF               	addlw	-1
  8519  1F2B  1D03               	skipz
  8520  1F2C  2F27               	goto	u3045
  8521  1F2D  3001               	movlw	1
  8522  1F2E  02A7               	subwf	___lwdiv@counter,f
  8523  1F2F  1D03               	btfss	3,2
  8524  1F30  2F10               	goto	l3881
  8525  1F31                     l3891:
  8526  1F31  0826               	movf	___lwdiv@quotient+1,w
  8527  1F32  00A1               	movwf	?___lwdiv+1
  8528  1F33  0825               	movf	___lwdiv@quotient,w
  8529  1F34  00A0               	movwf	?___lwdiv
  8530  1F35  0008               	return
  8531  1F36                     __end_of___lwdiv:
  8532                           
  8533                           	psect	text28
  8534  1E86                     __ptext28:	
  8535 ;; *************** function _PROCULUS_Control_Register_Write *****************
  8536 ;; Defined at:
  8537 ;;		line 13 in file "proculus.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  vetor           1    wreg     PTR unsigned char 
  8540 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8541 ;;  size            1   50[BANK0 ] unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  8544 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8545 ;;  i               1   53[BANK0 ] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8550 ;; Tracked objects:
  8551 ;;		On entry : 300/0
  8552 ;;		On exit  : 300/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8555 ;;      Params:         0       1       0       0       0
  8556 ;;      Locals:         0       2       0       0       0
  8557 ;;      Temps:          0       1       0       0       0
  8558 ;;      Totals:         0       4       0       0       0
  8559 ;;Total ram usage:        4 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 3
  8562 ;; This function calls:
  8563 ;;		_PROCULUS_Delay
  8564 ;;		_USART_put_int
  8565 ;;		_USART_putc
  8566 ;; This function is called by:
  8567 ;;		_PROCULUS_Buzzer
  8568 ;;		_PROCULUS_Show_Screen
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           
  8573                           ;psect for function _PROCULUS_Control_Register_Write
  8574  1E86                     _PROCULUS_Control_Register_Write:
  8575                           
  8576                           ;incstack = 0
  8577                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  8578                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  8579  1E86  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  8580                           
  8581                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  8582  1E87  30A5               	movlw	165
  8583  1E88  00CE               	movwf	USART_put_int@value
  8584  1E89  305A               	movlw	90
  8585  1E8A  00CF               	movwf	USART_put_int@value+1
  8586  1E8B  160A  158A  2371  160A  158A  	fcall	_USART_put_int
  8587                           
  8588                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  8589  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  8590  1E91  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8591  1E92  3E01               	addlw	1
  8592  1E93  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8593                           
  8594                           ;proculus.c: 16:      USART_putc(0x80);
  8595  1E98  3080               	movlw	128
  8596  1E99  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8597                           
  8598                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  8599  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  8600  1E9F  01D5               	clrf	PROCULUS_Control_Register_Write@i
  8601  1EA0                     l3813:
  8602  1EA0  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8603  1EA1  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  8604  1EA2  1803               	btfsc	3,0
  8605  1EA3  2EB6               	goto	l3815
  8606                           
  8607                           ;proculus.c: 18:          USART_putc(vetor[i]);
  8608  1EA4  0855               	movf	PROCULUS_Control_Register_Write@i,w
  8609  1EA5  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  8610  1EA6  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8611  1EA7  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8612  1EA8  0084               	movwf	4
  8613  1EA9  1383               	bcf	3,7	;select IRP bank0
  8614  1EAA  0800               	movf	0,w
  8615  1EAB  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8616  1EB0  3001               	movlw	1
  8617  1EB1  1283               	bcf	3,5	;RP0=0, select bank0
  8618  1EB2  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8619  1EB3  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8620  1EB4  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  8621  1EB5  2EA0               	goto	l3813
  8622  1EB6                     l3815:
  8623                           
  8624                           ;proculus.c: 19:      PROCULUS_Delay(1);
  8625  1EB6  3001               	movlw	1
  8626  1EB7  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8627  1EB8  3000               	movlw	0
  8628  1EB9  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8629  1EBA  160A  158A  23CF   	fcall	_PROCULUS_Delay
  8630  1EBD  0008               	return
  8631  1EBE                     __end_of_PROCULUS_Control_Register_Write:
  8632                           
  8633                           	psect	text29
  8634  1B71                     __ptext29:	
  8635 ;; *************** function _USART_put_int *****************
  8636 ;; Defined at:
  8637 ;;		line 137 in file "usart.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  value           2   46[BANK0 ] int 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  8642 ;;		 -> USART_put_int@value(2), 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 300/0
  8649 ;;		On exit  : 300/100
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8652 ;;      Params:         0       2       0       0       0
  8653 ;;      Locals:         0       1       0       0       0
  8654 ;;      Temps:          0       1       0       0       0
  8655 ;;      Totals:         0       4       0       0       0
  8656 ;;Total ram usage:        4 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 2
  8659 ;; This function calls:
  8660 ;;		_USART_putc
  8661 ;; This function is called by:
  8662 ;;		_Decodify_Command
  8663 ;;		_PROCULUS_Control_Register_Write
  8664 ;;		_PROCULUS_VP_Write
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _USART_put_int
  8670  1B71                     _USART_put_int:
  8671                           
  8672                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  8673                           
  8674                           ;incstack = 0
  8675                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8676  1B71  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  8677  1B72  00D0               	movwf	??_USART_put_int
  8678  1B73  0850               	movf	??_USART_put_int,w
  8679  1B74  00D1               	movwf	USART_put_int@dado
  8680                           
  8681                           ;usart.c: 140:      USART_putc(*(dado+1));
  8682  1B75  0A51               	incf	USART_put_int@dado,w
  8683  1B76  0084               	movwf	4
  8684  1B77  1383               	bcf	3,7	;select IRP bank0
  8685  1B78  0800               	movf	0,w
  8686  1B79  160A  158A  2325  160A  158A  	fcall	_USART_putc
  8687                           
  8688                           ;usart.c: 141:      USART_putc(*dado);
  8689  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
  8690  1B7F  0851               	movf	USART_put_int@dado,w
  8691  1B80  0084               	movwf	4
  8692  1B81  1383               	bcf	3,7	;select IRP bank0
  8693  1B82  0800               	movf	0,w
  8694  1B83  160A  158A  2325   	fcall	_USART_putc
  8695  1B86  0008               	return
  8696  1B87                     __end_of_USART_put_int:
  8697                           
  8698                           	psect	text30
  8699  1BCF                     __ptext30:	
  8700 ;; *************** function _PROCULUS_Delay *****************
  8701 ;; Defined at:
  8702 ;;		line 267 in file "proculus.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  i               2    4[BANK0 ] unsigned int 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2
  8711 ;; Tracked objects:
  8712 ;;		On entry : 300/800
  8713 ;;		On exit  : 300/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8716 ;;      Params:         0       2       0       0       0
  8717 ;;      Locals:         0       2       0       0       0
  8718 ;;      Temps:          0       2       0       0       0
  8719 ;;      Totals:         0       6       0       0       0
  8720 ;;Total ram usage:        6 bytes
  8721 ;; Hardware stack levels used: 1
  8722 ;; Hardware stack levels required when called: 1
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_PROCULUS_Control_Register_Write
  8727 ;;		_PROCULUS_VP_Write
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           
  8732                           ;psect for function _PROCULUS_Delay
  8733  1BCF                     _PROCULUS_Delay:
  8734                           
  8735                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  8739  1BCF  01A4               	clrf	PROCULUS_Delay@i
  8740  1BD0  01A5               	clrf	PROCULUS_Delay@i+1
  8741  1BD1                     l788:
  8742  1BD1  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  8743  1BD2  0225               	subwf	PROCULUS_Delay@i+1,w
  8744  1BD3  1D03               	skipz
  8745  1BD4  2BD7               	goto	u2695
  8746  1BD5  0820               	movf	PROCULUS_Delay@tempo_ms,w
  8747  1BD6  0224               	subwf	PROCULUS_Delay@i,w
  8748  1BD7                     u2695:
  8749  1BD7  1803               	btfsc	3,0
  8750  1BD8  0008               	return
  8751                           
  8752                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8753  1BD9  3003               	movlw	3
  8754  1BDA  1283               	bcf	3,5	;RP0=0, select bank0
  8755  1BDB  1303               	bcf	3,6	;RP1=0, select bank0
  8756  1BDC  00A3               	movwf	??_PROCULUS_Delay+1
  8757  1BDD  3097               	movlw	151
  8758  1BDE  00A2               	movwf	??_PROCULUS_Delay
  8759  1BDF                     u5257:
  8760  1BDF  0BA2               	decfsz	??_PROCULUS_Delay,f
  8761  1BE0  2BDF               	goto	u5257
  8762  1BE1  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  8763  1BE2  2BDF               	goto	u5257
  8764                           
  8765                           ;proculus.c: 270:     }
  8766  1BE3  3001               	movlw	1
  8767  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
  8768  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
  8769  1BE6  07A4               	addwf	PROCULUS_Delay@i,f
  8770  1BE7  1803               	skipnc
  8771  1BE8  0AA5               	incf	PROCULUS_Delay@i+1,f
  8772  1BE9  3000               	movlw	0
  8773  1BEA  07A5               	addwf	PROCULUS_Delay@i+1,f
  8774  1BEB  2BD1               	goto	l788
  8775  1BEC                     __end_of_PROCULUS_Delay:
  8776                           
  8777                           	psect	text31
  8778  0804                     __ptext31:	
  8779 ;; *************** function _EEPROM_Write_String *****************
  8780 ;; Defined at:
  8781 ;;		line 97 in file "eeprom.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  addr            1    wreg     unsigned char 
  8784 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  8785 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  addr            1    7[BANK0 ] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 300/300
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8797 ;;      Params:         0       1       0       0       0
  8798 ;;      Locals:         0       1       0       0       0
  8799 ;;      Temps:          0       1       0       0       0
  8800 ;;      Totals:         0       3       0       0       0
  8801 ;;Total ram usage:        3 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 2
  8804 ;; This function calls:
  8805 ;;		_EEPROM_Write_Byte
  8806 ;; This function is called by:
  8807 ;;		_Decodify_Command
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           
  8812                           ;psect for function _EEPROM_Write_String
  8813  0804                     _EEPROM_Write_String:
  8814                           
  8815                           ;incstack = 0
  8816                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8817                           ;EEPROM_Write_String@addr stored from wreg
  8818  0804  1283               	bcf	3,5	;RP0=0, select bank0
  8819  0805  1303               	bcf	3,6	;RP1=0, select bank0
  8820  0806  00A7               	movwf	EEPROM_Write_String@addr
  8821  0807                     l4449:	
  8822                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  8823                           
  8824                           
  8825                           ;eeprom.c: 99:     while(*dado)
  8826  0807  0825               	movf	EEPROM_Write_String@dado,w
  8827  0808  0084               	movwf	4
  8828  0809  1783               	bsf	3,7	;select IRP bank2
  8829  080A  0800               	movf	0,w
  8830  080B  1903               	btfsc	3,2
  8831  080C  2824               	goto	l4451
  8832                           
  8833                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  8834  080D  0825               	movf	EEPROM_Write_String@dado,w
  8835  080E  0084               	movwf	4
  8836  080F  0800               	movf	0,w
  8837  0810  00A6               	movwf	??_EEPROM_Write_String
  8838  0811  0826               	movf	??_EEPROM_Write_String,w
  8839  0812  00A0               	movwf	EEPROM_Write_Byte@dado
  8840  0813  0827               	movf	EEPROM_Write_String@addr,w
  8841  0814  160A  158A  26BE  120A  158A  	fcall	_EEPROM_Write_Byte
  8842                           
  8843                           ;eeprom.c: 102:      addr++;
  8844  0819  3001               	movlw	1
  8845  081A  1283               	bcf	3,5	;RP0=0, select bank0
  8846  081B  1303               	bcf	3,6	;RP1=0, select bank0
  8847  081C  00A6               	movwf	??_EEPROM_Write_String
  8848  081D  0826               	movf	??_EEPROM_Write_String,w
  8849  081E  07A7               	addwf	EEPROM_Write_String@addr,f
  8850                           
  8851                           ;eeprom.c: 103:      dado++;
  8852  081F  3001               	movlw	1
  8853  0820  00A6               	movwf	??_EEPROM_Write_String
  8854  0821  0826               	movf	??_EEPROM_Write_String,w
  8855  0822  07A5               	addwf	EEPROM_Write_String@dado,f
  8856  0823  2807               	goto	l4449
  8857  0824                     l4451:
  8858                           
  8859                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  8860  0824  0825               	movf	EEPROM_Write_String@dado,w
  8861  0825  0084               	movwf	4
  8862  0826  0800               	movf	0,w
  8863  0827  00A6               	movwf	??_EEPROM_Write_String
  8864  0828  0826               	movf	??_EEPROM_Write_String,w
  8865  0829  00A0               	movwf	EEPROM_Write_Byte@dado
  8866  082A  0827               	movf	EEPROM_Write_String@addr,w
  8867  082B  160A  158A  26BE   	fcall	_EEPROM_Write_Byte
  8868  082E  0008               	return
  8869  082F                     __end_of_EEPROM_Write_String:
  8870                           
  8871                           	psect	text32
  8872  1D7D                     __ptext32:	
  8873 ;; *************** function _EEPROM_Write_Integer *****************
  8874 ;; Defined at:
  8875 ;;		line 68 in file "eeprom.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  addr            1    wreg     unsigned char 
  8878 ;;  dado            2    5[BANK0 ] unsigned int 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  addr            1   10[BANK0 ] unsigned char 
  8881 ;;  i               1   11[BANK0 ] unsigned char 
  8882 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  8883 ;;		 -> EEPROM_Write_Integer@dado(2), 
  8884 ;;  addr_memo       1    0        unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 200/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8894 ;;      Params:         0       2       0       0       0
  8895 ;;      Locals:         0       3       0       0       0
  8896 ;;      Temps:          0       2       0       0       0
  8897 ;;      Totals:         0       7       0       0       0
  8898 ;;Total ram usage:        7 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; Hardware stack levels required when called: 2
  8901 ;; This function calls:
  8902 ;;		_EEPROM_Write_Byte
  8903 ;; This function is called by:
  8904 ;;		_main
  8905 ;;		_Decodify_Command
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function _EEPROM_Write_Integer
  8911  1D7D                     _EEPROM_Write_Integer:
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8915                           ;EEPROM_Write_Integer@addr stored from wreg
  8916  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  8917  1D7E  00AA               	movwf	EEPROM_Write_Integer@addr
  8918                           
  8919                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  8920  1D7F  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  8921  1D80  00A7               	movwf	??_EEPROM_Write_Integer
  8922  1D81  0827               	movf	??_EEPROM_Write_Integer,w
  8923  1D82  00A9               	movwf	EEPROM_Write_Integer@ptr
  8924                           
  8925                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  8926  1D83  01AB               	clrf	EEPROM_Write_Integer@i
  8927  1D84                     l4399:
  8928                           
  8929                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  8930  1D84  0829               	movf	EEPROM_Write_Integer@ptr,w
  8931  1D85  0084               	movwf	4
  8932  1D86  1383               	bcf	3,7	;select IRP bank0
  8933  1D87  0800               	movf	0,w
  8934  1D88  00A7               	movwf	??_EEPROM_Write_Integer
  8935  1D89  0827               	movf	??_EEPROM_Write_Integer,w
  8936  1D8A  00A0               	movwf	EEPROM_Write_Byte@dado
  8937  1D8B  082A               	movf	EEPROM_Write_Integer@addr,w
  8938  1D8C  160A  158A  26BE  160A  158A  	fcall	_EEPROM_Write_Byte
  8939  1D91  3001               	movlw	1
  8940  1D92  1283               	bcf	3,5	;RP0=0, select bank0
  8941  1D93  1303               	bcf	3,6	;RP1=0, select bank0
  8942  1D94  00A7               	movwf	??_EEPROM_Write_Integer
  8943  1D95  0827               	movf	??_EEPROM_Write_Integer,w
  8944  1D96  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  8945  1D97  3001               	movlw	1
  8946  1D98  00A7               	movwf	??_EEPROM_Write_Integer
  8947  1D99  0827               	movf	??_EEPROM_Write_Integer,w
  8948  1D9A  07AA               	addwf	EEPROM_Write_Integer@addr,f
  8949  1D9B  3001               	movlw	1
  8950  1D9C  00A7               	movwf	??_EEPROM_Write_Integer
  8951  1D9D  0827               	movf	??_EEPROM_Write_Integer,w
  8952  1D9E  07AB               	addwf	EEPROM_Write_Integer@i,f
  8953  1D9F  3002               	movlw	2
  8954  1DA0  022B               	subwf	EEPROM_Write_Integer@i,w
  8955  1DA1  1C03               	skipc
  8956  1DA2  2D84               	goto	l4399
  8957                           
  8958                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  8959  1DA3  304E               	movlw	78
  8960  1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  8961  1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  8962  1DA6  00A8               	movwf	??_EEPROM_Write_Integer+1
  8963  1DA7  30EA               	movlw	234
  8964  1DA8  00A7               	movwf	??_EEPROM_Write_Integer
  8965  1DA9                     u5267:
  8966  1DA9  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  8967  1DAA  2DA9               	goto	u5267
  8968  1DAB  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  8969  1DAC  2DA9               	goto	u5267
  8970  1DAD  0000               	nop
  8971  1DAE  0008               	return
  8972  1DAF                     __end_of_EEPROM_Write_Integer:
  8973                           
  8974                           	psect	text33
  8975  1EBE                     __ptext33:	
  8976 ;; *************** function _EEPROM_Write_Byte *****************
  8977 ;; Defined at:
  8978 ;;		line 21 in file "eeprom.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  addr            1    wreg     unsigned char 
  8981 ;;  dado            1    0[BANK0 ] unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  addr            1    3[BANK0 ] unsigned char 
  8984 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/300
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8994 ;;      Params:         0       1       0       0       0
  8995 ;;      Locals:         0       2       0       0       0
  8996 ;;      Temps:          0       2       0       0       0
  8997 ;;      Totals:         0       5       0       0       0
  8998 ;;Total ram usage:        5 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; Hardware stack levels required when called: 1
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_Decodify_Command
  9005 ;;		_EEPROM_Write_Integer
  9006 ;;		_EEPROM_Write_String
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function _EEPROM_Write_Byte
  9012  1EBE                     _EEPROM_Write_Byte:
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9016                           ;EEPROM_Write_Byte@addr stored from wreg
  9017  1EBE  1283               	bcf	3,5	;RP0=0, select bank0
  9018  1EBF  1303               	bcf	3,6	;RP1=0, select bank0
  9019  1EC0  00A3               	movwf	EEPROM_Write_Byte@addr
  9020                           
  9021                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9022  1EC1  3014               	movlw	20
  9023  1EC2  1683               	bsf	3,5	;RP0=1, select bank1
  9024  1EC3  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9025  1EC4  3000               	movlw	0
  9026  1EC5  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9027  1EC6                     l507:	
  9028                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9029                           
  9030  1EC6  1703               	bsf	3,6	;RP1=1, select bank3
  9031  1EC7  188C               	btfsc	12,1	;volsfr
  9032  1EC8  2EC6               	goto	l507
  9033                           
  9034                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9035  1EC9  1F8B               	btfss	11,7	;volatile
  9036  1ECA  2ED0               	goto	l3745
  9037                           
  9038                           ;eeprom.c: 28:           last_GIE=1;
  9039  1ECB  1283               	bcf	3,5	;RP0=0, select bank0
  9040  1ECC  1303               	bcf	3,6	;RP1=0, select bank0
  9041  1ECD  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9042  1ECE  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9043  1ECF  2ED3               	goto	l3747
  9044  1ED0                     l3745:
  9045                           
  9046                           ;eeprom.c: 30:           last_GIE=0;
  9047  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  9048  1ED1  1303               	bcf	3,6	;RP1=0, select bank0
  9049  1ED2  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9050  1ED3                     l3747:
  9051                           
  9052                           ;eeprom.c: 32:        EEADR=addr;
  9053  1ED3  0823               	movf	EEPROM_Write_Byte@addr,w
  9054  1ED4  1703               	bsf	3,6	;RP1=1, select bank2
  9055  1ED5  008D               	movwf	13	;volatile
  9056                           
  9057                           ;eeprom.c: 33:        EEDATA=dado;
  9058  1ED6  1303               	bcf	3,6	;RP1=0, select bank0
  9059  1ED7  0820               	movf	EEPROM_Write_Byte@dado,w
  9060  1ED8  1703               	bsf	3,6	;RP1=1, select bank2
  9061  1ED9  008C               	movwf	12	;volatile
  9062                           
  9063                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9064  1EDA  1683               	bsf	3,5	;RP0=1, select bank3
  9065  1EDB  138C               	bcf	12,7	;volsfr
  9066                           
  9067                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9068  1EDC  150C               	bsf	12,2	;volsfr
  9069                           
  9070                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9071  1EDD  138B               	bcf	11,7	;volatile
  9072                           
  9073                           ;eeprom.c: 37:        EECON2=0x55;
  9074  1EDE  3055               	movlw	85
  9075  1EDF  008D               	movwf	13	;volsfr
  9076                           
  9077                           ;eeprom.c: 38:        EECON2=0xAA;
  9078  1EE0  30AA               	movlw	170
  9079  1EE1  008D               	movwf	13	;volsfr
  9080                           
  9081                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9082  1EE2  148C               	bsf	12,1	;volsfr
  9083                           
  9084                           ;eeprom.c: 41:        if(last_GIE==1)
  9085  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  9086  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
  9087  1EE5  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9088  1EE6  1D03               	btfss	3,2
  9089  1EE7  2EEA               	goto	l512
  9090                           
  9091                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9092  1EE8  178B               	bsf	11,7	;volatile
  9093  1EE9  2EEB               	goto	l513
  9094  1EEA                     l512:	
  9095                           ;eeprom.c: 43:        else
  9096                           
  9097                           
  9098                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9099  1EEA  138B               	bcf	11,7	;volatile
  9100  1EEB                     l513:
  9101                           
  9102                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9103  1EEB  1683               	bsf	3,5	;RP0=1, select bank3
  9104  1EEC  1703               	bsf	3,6	;RP1=1, select bank3
  9105  1EED  110C               	bcf	12,2	;volsfr
  9106                           
  9107                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9108  1EEE  304E               	movlw	78
  9109  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
  9110  1EF0  1303               	bcf	3,6	;RP1=0, select bank0
  9111  1EF1  00A2               	movwf	??_EEPROM_Write_Byte+1
  9112  1EF2  30EA               	movlw	234
  9113  1EF3  00A1               	movwf	??_EEPROM_Write_Byte
  9114  1EF4                     u5277:
  9115  1EF4  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9116  1EF5  2EF4               	goto	u5277
  9117  1EF6  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9118  1EF7  2EF4               	goto	u5277
  9119  1EF8  0000               	nop
  9120  1EF9  0008               	return
  9121  1EFA                     __end_of_EEPROM_Write_Byte:
  9122                           
  9123                           	psect	text34
  9124  1C2A                     __ptext34:	
  9125 ;; *************** function _EEPROM_Read_String *****************
  9126 ;; Defined at:
  9127 ;;		line 109 in file "eeprom.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  addr            1    wreg     unsigned char 
  9130 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9131 ;;		 -> buffer(33), 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  addr            1    5[BANK0 ] unsigned char 
  9134 ;;  c               1    6[BANK0 ] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 300/300
  9141 ;;		On exit  : B00/800
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9144 ;;      Params:         0       1       0       0       0
  9145 ;;      Locals:         0       2       0       0       0
  9146 ;;      Temps:          0       1       0       0       0
  9147 ;;      Totals:         0       4       0       0       0
  9148 ;;Total ram usage:        4 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 2
  9151 ;; This function calls:
  9152 ;;		_EEPROM_Read_Byte
  9153 ;; This function is called by:
  9154 ;;		_Decodify_Command
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function _EEPROM_Read_String
  9160  1C2A                     _EEPROM_Read_String:
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9164                           ;EEPROM_Read_String@addr stored from wreg
  9165  1C2A  1283               	bcf	3,5	;RP0=0, select bank0
  9166  1C2B  1303               	bcf	3,6	;RP1=0, select bank0
  9167  1C2C  00A5               	movwf	EEPROM_Read_String@addr
  9168  1C2D                     l539:	
  9169                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9170                           
  9171                           
  9172                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9173  1C2D  0825               	movf	EEPROM_Read_String@addr,w
  9174  1C2E  160A  158A  246B  160A  158A  	fcall	_EEPROM_Read_Byte
  9175  1C33  1303               	bcf	3,6	;RP1=0, select bank0
  9176  1C34  00A4               	movwf	??_EEPROM_Read_String
  9177  1C35  0824               	movf	??_EEPROM_Read_String,w
  9178  1C36  00A6               	movwf	EEPROM_Read_String@c
  9179  1C37  3001               	movlw	1
  9180  1C38  00A4               	movwf	??_EEPROM_Read_String
  9181  1C39  0824               	movf	??_EEPROM_Read_String,w
  9182  1C3A  07A5               	addwf	EEPROM_Read_String@addr,f
  9183                           
  9184                           ;eeprom.c: 114:         *(dado++)=c;
  9185  1C3B  0826               	movf	EEPROM_Read_String@c,w
  9186  1C3C  00A4               	movwf	??_EEPROM_Read_String
  9187  1C3D  0823               	movf	EEPROM_Read_String@dado,w
  9188  1C3E  0084               	movwf	4
  9189  1C3F  0824               	movf	??_EEPROM_Read_String,w
  9190  1C40  1783               	bsf	3,7	;select IRP bank2
  9191  1C41  0080               	movwf	0
  9192  1C42  3001               	movlw	1
  9193  1C43  00A4               	movwf	??_EEPROM_Read_String
  9194  1C44  0824               	movf	??_EEPROM_Read_String,w
  9195  1C45  07A3               	addwf	EEPROM_Read_String@dado,f
  9196                           
  9197                           ;eeprom.c: 116:       }while(c);
  9198  1C46  0826               	movf	EEPROM_Read_String@c,w
  9199  1C47  1903               	btfsc	3,2
  9200  1C48  0008               	return
  9201  1C49  2C2D               	goto	l539
  9202  1C4A                     __end_of_EEPROM_Read_String:
  9203                           
  9204                           	psect	text35
  9205  1D22                     __ptext35:	
  9206 ;; *************** function _EEPROM_Read_Integer *****************
  9207 ;; Defined at:
  9208 ;;		line 81 in file "eeprom.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  addr            1    wreg     unsigned char 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  addr            1    6[BANK0 ] unsigned char 
  9213 ;;  result          2    8[BANK0 ] unsigned int 
  9214 ;;  i               1   10[BANK0 ] unsigned char 
  9215 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9216 ;;		 -> EEPROM_Read_Integer@result(2), 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  2    3[BANK0 ] unsigned int 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : B00/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9226 ;;      Params:         0       2       0       0       0
  9227 ;;      Locals:         0       5       0       0       0
  9228 ;;      Temps:          0       1       0       0       0
  9229 ;;      Totals:         0       8       0       0       0
  9230 ;;Total ram usage:        8 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; Hardware stack levels required when called: 2
  9233 ;; This function calls:
  9234 ;;		_EEPROM_Read_Byte
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;;		_Decodify_Command
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _EEPROM_Read_Integer
  9243  1D22                     _EEPROM_Read_Integer:
  9244                           
  9245                           ;incstack = 0
  9246                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9247                           ;EEPROM_Read_Integer@addr stored from wreg
  9248  1D22  1283               	bcf	3,5	;RP0=0, select bank0
  9249  1D23  1303               	bcf	3,6	;RP1=0, select bank0
  9250  1D24  00A6               	movwf	EEPROM_Read_Integer@addr
  9251                           
  9252                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9253  1D25  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9254  1D26  00A5               	movwf	??_EEPROM_Read_Integer
  9255  1D27  0825               	movf	??_EEPROM_Read_Integer,w
  9256  1D28  00A7               	movwf	EEPROM_Read_Integer@ptr
  9257                           
  9258                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9259  1D29  01AA               	clrf	EEPROM_Read_Integer@i
  9260  1D2A                     l4375:
  9261                           
  9262                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9263  1D2A  0826               	movf	EEPROM_Read_Integer@addr,w
  9264  1D2B  160A  158A  246B  160A  158A  	fcall	_EEPROM_Read_Byte
  9265  1D30  1303               	bcf	3,6	;RP1=0, select bank0
  9266  1D31  00A5               	movwf	??_EEPROM_Read_Integer
  9267  1D32  0827               	movf	EEPROM_Read_Integer@ptr,w
  9268  1D33  0084               	movwf	4
  9269  1D34  0825               	movf	??_EEPROM_Read_Integer,w
  9270  1D35  1383               	bcf	3,7	;select IRP bank0
  9271  1D36  0080               	movwf	0
  9272  1D37  3001               	movlw	1
  9273  1D38  00A5               	movwf	??_EEPROM_Read_Integer
  9274  1D39  0825               	movf	??_EEPROM_Read_Integer,w
  9275  1D3A  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9276  1D3B  3001               	movlw	1
  9277  1D3C  00A5               	movwf	??_EEPROM_Read_Integer
  9278  1D3D  0825               	movf	??_EEPROM_Read_Integer,w
  9279  1D3E  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9280  1D3F  3001               	movlw	1
  9281  1D40  00A5               	movwf	??_EEPROM_Read_Integer
  9282  1D41  0825               	movf	??_EEPROM_Read_Integer,w
  9283  1D42  07AA               	addwf	EEPROM_Read_Integer@i,f
  9284  1D43  3002               	movlw	2
  9285  1D44  022A               	subwf	EEPROM_Read_Integer@i,w
  9286  1D45  1C03               	skipc
  9287  1D46  2D2A               	goto	l4375
  9288                           
  9289                           ;eeprom.c: 89:       return result;
  9290  1D47  0829               	movf	EEPROM_Read_Integer@result+1,w
  9291  1D48  00A4               	movwf	?_EEPROM_Read_Integer+1
  9292  1D49  0828               	movf	EEPROM_Read_Integer@result,w
  9293  1D4A  00A3               	movwf	?_EEPROM_Read_Integer
  9294  1D4B  0008               	return
  9295  1D4C                     __end_of_EEPROM_Read_Integer:
  9296                           
  9297                           	psect	text36
  9298  1C6B                     __ptext36:	
  9299 ;; *************** function _EEPROM_Read_Byte *****************
  9300 ;; Defined at:
  9301 ;;		line 52 in file "eeprom.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  addr            1    wreg     unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  addr            1    2[BANK0 ] unsigned char 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      unsigned char 
  9308 ;; Registers used:
  9309 ;;		wreg
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/300
  9312 ;;		On exit  : 300/200
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9315 ;;      Params:         0       0       0       0       0
  9316 ;;      Locals:         0       1       0       0       0
  9317 ;;      Temps:          0       2       0       0       0
  9318 ;;      Totals:         0       3       0       0       0
  9319 ;;Total ram usage:        3 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_Decodify_Command
  9326 ;;		_EEPROM_Read_Integer
  9327 ;;		_EEPROM_Read_String
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _EEPROM_Read_Byte
  9333  1C6B                     _EEPROM_Read_Byte:
  9334                           
  9335                           ;incstack = 0
  9336                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9337                           ;EEPROM_Read_Byte@addr stored from wreg
  9338  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9339  1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9340  1C6D  00A2               	movwf	EEPROM_Read_Byte@addr
  9341                           
  9342                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9343  1C6E  3014               	movlw	20
  9344  1C6F  1683               	bsf	3,5	;RP0=1, select bank1
  9345  1C70  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9346  1C71  3000               	movlw	0
  9347  1C72  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9348  1C73                     l517:	
  9349                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9350                           
  9351  1C73  1703               	bsf	3,6	;RP1=1, select bank3
  9352  1C74  188C               	btfsc	12,1	;volsfr
  9353  1C75  2C73               	goto	l517
  9354                           
  9355                           ;eeprom.c: 57:    EEADR=addr;
  9356  1C76  1283               	bcf	3,5	;RP0=0, select bank0
  9357  1C77  1303               	bcf	3,6	;RP1=0, select bank0
  9358  1C78  0822               	movf	EEPROM_Read_Byte@addr,w
  9359  1C79  1703               	bsf	3,6	;RP1=1, select bank2
  9360  1C7A  008D               	movwf	13	;volatile
  9361                           
  9362                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9363  1C7B  1683               	bsf	3,5	;RP0=1, select bank3
  9364  1C7C  138C               	bcf	12,7	;volsfr
  9365                           
  9366                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9367  1C7D  140C               	bsf	12,0	;volsfr
  9368                           
  9369                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9370  1C7E  304E               	movlw	78
  9371  1C7F  1283               	bcf	3,5	;RP0=0, select bank0
  9372  1C80  1303               	bcf	3,6	;RP1=0, select bank0
  9373  1C81  00A1               	movwf	??_EEPROM_Read_Byte+1
  9374  1C82  30EA               	movlw	234
  9375  1C83  00A0               	movwf	??_EEPROM_Read_Byte
  9376  1C84                     u5287:
  9377  1C84  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9378  1C85  2C84               	goto	u5287
  9379  1C86  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9380  1C87  2C84               	goto	u5287
  9381  1C88  0000               	nop
  9382                           
  9383                           ;eeprom.c: 61:    return EEDATA;
  9384  1C89  1283               	bcf	3,5	;RP0=0, select bank2
  9385  1C8A  1703               	bsf	3,6	;RP1=1, select bank2
  9386  1C8B  080C               	movf	12,w	;volatile
  9387  1C8C  0008               	return
  9388  1C8D                     __end_of_EEPROM_Read_Byte:
  9389                           
  9390                           	psect	text37
  9391  1415                     __ptext37:	
  9392 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9393 ;; Defined at:
  9394 ;;		line 220 in file "EEPROM_24C1025.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;  chip_add        1    wreg     unsigned char 
  9397 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9398 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9399 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9402 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9403 ;;  range           1   18[BANK0 ] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 300/300
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         0       5       0       0       0
  9414 ;;      Locals:         0       3       0       0       0
  9415 ;;      Temps:          0       2       0       0       0
  9416 ;;      Totals:         0      10       0       0       0
  9417 ;;Total ram usage:       10 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; Hardware stack levels required when called: 3
  9420 ;; This function calls:
  9421 ;;		_I2C_Master_Start
  9422 ;;		_I2C_Master_Stop
  9423 ;;		_I2C_Master_Write
  9424 ;;		_my_delay_ms_WDT
  9425 ;; This function is called by:
  9426 ;;		_Decodify_Command
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _EEPROM_24C1025_Write_Str
  9432  1415                     _EEPROM_24C1025_Write_Str:
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9436                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9437  1415  1283               	bcf	3,5	;RP0=0, select bank0
  9438  1416  1303               	bcf	3,6	;RP1=0, select bank0
  9439  1417  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9440                           
  9441                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9442  1418  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9443  1419  1D03               	btfss	3,2
  9444  141A  0008               	return
  9445  141B  3002               	movlw	2
  9446  141C  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9447  141D  1D03               	skipz
  9448  141E  2C27               	goto	u3623
  9449  141F  3000               	movlw	0
  9450  1420  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9451  1421  1D03               	skipz
  9452  1422  2C27               	goto	u3623
  9453  1423  3000               	movlw	0
  9454  1424  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9455  1425  1D03               	skipz
  9456  1426  2C27               	goto	u3623
  9457  1427                     u3623:
  9458  1427  1803               	btfsc	3,0
  9459  1428  0008               	return
  9460                           
  9461                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9462  1429  1283               	bcf	3,5	;RP0=0, select bank0
  9463  142A  1303               	bcf	3,6	;RP1=0, select bank0
  9464  142B                     L9:
  9465  142B  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9466  142C  1D03               	btfss	3,2
  9467  142D  2C3C               	goto	l4177
  9468  142E  3001               	movlw	1
  9469  142F  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9470  1430  1D03               	skipz
  9471  1431  2C3A               	goto	u3633
  9472  1432  3000               	movlw	0
  9473  1433  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9474  1434  1D03               	skipz
  9475  1435  2C3A               	goto	u3633
  9476  1436  3000               	movlw	0
  9477  1437  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9478  1438  1D03               	skipz
  9479  1439  2C3A               	goto	u3633
  9480  143A                     u3633:
  9481  143A  1C03               	btfss	3,0
  9482  143B  2C43               	goto	l4179
  9483  143C                     l4177:
  9484  143C  3008               	movlw	8
  9485  143D  1283               	bcf	3,5	;RP0=0, select bank0
  9486  143E  1303               	bcf	3,6	;RP1=0, select bank0
  9487  143F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9488  1440  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9489  1441  00B2               	movwf	EEPROM_24C1025_Write_Str@range
  9490  1442  2C46               	goto	l4181
  9491  1443                     l4179:
  9492  1443  1283               	bcf	3,5	;RP0=0, select bank0
  9493  1444  1303               	bcf	3,6	;RP1=0, select bank0
  9494  1445  01B2               	clrf	EEPROM_24C1025_Write_Str@range
  9495  1446                     l4181:
  9496                           
  9497                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
  9498  1446  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9499  1447  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9500  1448  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9501  1449  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9502                           
  9503                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
  9504  144A  1003               	clrc
  9505  144B  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9506                           
  9507                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
  9508  144C  30A0               	movlw	160
  9509  144D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9510  144E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9511  144F  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9512                           
  9513                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
  9514  1450  0832               	movf	EEPROM_24C1025_Write_Str@range,w
  9515  1451  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9516  1452  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9517  1453  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9518                           
  9519                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
  9520  1454  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Start
  9521                           
  9522                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
  9523  1459  1283               	bcf	3,5	;RP0=0, select bank0
  9524  145A  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9525  145B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9526  145C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9527  145D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9528  145E  00A3               	movwf	I2C_Master_Write@d
  9529  145F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9530  1460  00A4               	movwf	I2C_Master_Write@d+1
  9531  1461  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9532                           
  9533                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
  9534  1466  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9535  1467  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9536  1468  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9537  1469  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9538  146A  00A3               	movwf	I2C_Master_Write@d
  9539  146B  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9540  146C  00A4               	movwf	I2C_Master_Write@d+1
  9541  146D  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9542                           
  9543                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
  9544  1472  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9545  1473  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9546  1474  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9547  1475  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9548  1476  00A3               	movwf	I2C_Master_Write@d
  9549  1477  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9550  1478  00A4               	movwf	I2C_Master_Write@d+1
  9551  1479  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9552  147E                     l4241:	
  9553                           ;EEPROM_24C1025.c: 236:      while(*data)
  9554                           
  9555                           
  9556                           ;EEPROM_24C1025.c: 236:      while(*data)
  9557  147E  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9558  147F  0084               	movwf	4
  9559  1480  1783               	bsf	3,7	;select IRP bank2
  9560  1481  0800               	movf	0,w
  9561  1482  1903               	btfsc	3,2
  9562  1483  2CF6               	goto	l4243
  9563  1484  0064               	clrwdt	;# 
  9564                           
  9565                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
  9566  1485  1283               	bcf	3,5	;RP0=0, select bank0
  9567  1486  1303               	bcf	3,6	;RP1=0, select bank0
  9568  1487  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9569  1488  1D03               	btfss	3,2
  9570  1489  0008               	return
  9571  148A  3002               	movlw	2
  9572  148B  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9573  148C  1D03               	skipz
  9574  148D  2C96               	goto	u3643
  9575  148E  3000               	movlw	0
  9576  148F  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9577  1490  1D03               	skipz
  9578  1491  2C96               	goto	u3643
  9579  1492  3000               	movlw	0
  9580  1493  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9581  1494  1D03               	skipz
  9582  1495  2C96               	goto	u3643
  9583  1496                     u3643:
  9584  1496  1803               	btfsc	3,0
  9585  1497  0008               	return
  9586                           
  9587                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
  9588  1498  1283               	bcf	3,5	;RP0=0, select bank0
  9589  1499  1303               	bcf	3,6	;RP1=0, select bank0
  9590  149A  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9591  149B  3E01               	addlw	1
  9592  149C  397F               	andlw	127
  9593  149D  1D03               	btfss	3,2
  9594  149E  2CD4               	goto	l4235
  9595                           
  9596                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
  9597  149F  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9598  14A0  0084               	movwf	4
  9599  14A1  1783               	bsf	3,7	;select IRP bank2
  9600  14A2  0800               	movf	0,w
  9601  14A3  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9602  14A4  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9603  14A5  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9604  14A6  00A3               	movwf	I2C_Master_Write@d
  9605  14A7  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9606  14A8  00A4               	movwf	I2C_Master_Write@d+1
  9607  14A9  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9608                           
  9609                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
  9610  14AE  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
  9611                           
  9612                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
  9613  14B3  3000               	movlw	0
  9614  14B4  1283               	bcf	3,5	;RP0=0, select bank0
  9615  14B5  00A3               	movwf	my_delay_ms_WDT@time+3
  9616  14B6  3000               	movlw	0
  9617  14B7  00A2               	movwf	my_delay_ms_WDT@time+2
  9618  14B8  3000               	movlw	0
  9619  14B9  00A1               	movwf	my_delay_ms_WDT@time+1
  9620  14BA  3005               	movlw	5
  9621  14BB  00A0               	movwf	my_delay_ms_WDT@time
  9622  14BC  160A  158A  264E  160A  118A  	fcall	_my_delay_ms_WDT
  9623                           
  9624                           ;EEPROM_24C1025.c: 246:             mem_add++;
  9625  14C1  3001               	movlw	1
  9626  14C2  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9627  14C3  3000               	movlw	0
  9628  14C4  1803               	skipnc
  9629  14C5  3001               	movlw	1
  9630  14C6  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9631  14C7  3000               	movlw	0
  9632  14C8  1803               	skipnc
  9633  14C9  3001               	movlw	1
  9634  14CA  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9635  14CB  3000               	movlw	0
  9636  14CC  1803               	skipnc
  9637  14CD  3001               	movlw	1
  9638  14CE  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9639                           
  9640                           ;EEPROM_24C1025.c: 247:             data++;
  9641  14CF  3001               	movlw	1
  9642  14D0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9643  14D1  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9644  14D2  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9645  14D3  2C2B               	goto	L9
  9646  14D4                     l4235:	
  9647                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9648                           
  9649                           
  9650                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
  9651  14D4  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9652  14D5  0084               	movwf	4
  9653  14D6  1783               	bsf	3,7	;select IRP bank2
  9654  14D7  0800               	movf	0,w
  9655  14D8  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9656  14D9  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9657  14DA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9658  14DB  00A3               	movwf	I2C_Master_Write@d
  9659  14DC  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9660  14DD  00A4               	movwf	I2C_Master_Write@d+1
  9661  14DE  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9662                           
  9663                           ;EEPROM_24C1025.c: 262:             data++;
  9664  14E3  3001               	movlw	1
  9665  14E4  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9666  14E5  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9667  14E6  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9668                           
  9669                           ;EEPROM_24C1025.c: 263:             mem_add++;
  9670  14E7  3001               	movlw	1
  9671  14E8  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9672  14E9  3000               	movlw	0
  9673  14EA  1803               	skipnc
  9674  14EB  3001               	movlw	1
  9675  14EC  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9676  14ED  3000               	movlw	0
  9677  14EE  1803               	skipnc
  9678  14EF  3001               	movlw	1
  9679  14F0  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9680  14F1  3000               	movlw	0
  9681  14F2  1803               	skipnc
  9682  14F3  3001               	movlw	1
  9683  14F4  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9684  14F5  2C7E               	goto	l4241
  9685  14F6                     l4243:
  9686                           
  9687                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
  9688  14F6  3000               	movlw	0
  9689  14F7  00A3               	movwf	I2C_Master_Write@d
  9690  14F8  00A4               	movwf	I2C_Master_Write@d+1
  9691  14F9  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9692                           
  9693                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
  9694  14FE  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
  9695                           
  9696                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
  9697  1503  3000               	movlw	0
  9698  1504  1283               	bcf	3,5	;RP0=0, select bank0
  9699  1505  00A3               	movwf	my_delay_ms_WDT@time+3
  9700  1506  3000               	movlw	0
  9701  1507  00A2               	movwf	my_delay_ms_WDT@time+2
  9702  1508  3000               	movlw	0
  9703  1509  00A1               	movwf	my_delay_ms_WDT@time+1
  9704  150A  3005               	movlw	5
  9705  150B  00A0               	movwf	my_delay_ms_WDT@time
  9706  150C  160A  158A  264E   	fcall	_my_delay_ms_WDT
  9707  150F  0008               	return
  9708  1510                     __end_of_EEPROM_24C1025_Write_Str:
  9709                           
  9710                           	psect	text38
  9711  1B5B                     __ptext38:	
  9712 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  9713 ;; Defined at:
  9714 ;;		line 341 in file "EEPROM_24C1025.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  chip_add        1    wreg     unsigned char 
  9717 ;;  mem_add         4   23[BANK0 ] unsigned long 
  9718 ;;  data            1   27[BANK0 ] unsigned char 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  chip_add        1   28[BANK0 ] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 300/300
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9730 ;;      Params:         0       5       0       0       0
  9731 ;;      Locals:         0       1       0       0       0
  9732 ;;      Temps:          0       0       0       0       0
  9733 ;;      Totals:         0       6       0       0       0
  9734 ;;Total ram usage:        6 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 4
  9737 ;; This function calls:
  9738 ;;		_EEPROM_24C1025_Write_Buffer
  9739 ;; This function is called by:
  9740 ;;		_Decodify_Command
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           
  9745                           ;psect for function _EEPROM_24C1025_Write_Byte
  9746  1B5B                     _EEPROM_24C1025_Write_Byte:
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9750                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  9751  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  9752  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  9753  1B5D  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  9754                           
  9755                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  9756  1B5E  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  9757  1B5F  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9758  1B60  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  9759  1B61  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9760  1B62  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  9761  1B63  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9762  1B64  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  9763  1B65  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9764  1B66  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  9765  1B67  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  9766  1B68  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  9767  1B69  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  9768  1B6A  3000               	movlw	0
  9769  1B6B  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9770  1B6C  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  9771  1B6D  160A  118A  2510   	fcall	_EEPROM_24C1025_Write_Buffer
  9772  1B70  0008               	return
  9773  1B71                     __end_of_EEPROM_24C1025_Write_Byte:
  9774                           
  9775                           	psect	text39
  9776  1686                     __ptext39:	
  9777 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  9778 ;; Defined at:
  9779 ;;		line 275 in file "EEPROM_24C1025.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  chip_add        1    wreg     unsigned char 
  9782 ;;  mem_add         4    9[BANK0 ] unsigned long 
  9783 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
  9784 ;;		 -> buffer(33), 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9787 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9788 ;;  range           1   18[BANK0 ] unsigned char 
  9789 ;;  cnt             1   16[BANK0 ] unsigned char 
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 300/300
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9799 ;;      Params:         0       5       0       0       0
  9800 ;;      Locals:         0       4       0       0       0
  9801 ;;      Temps:          0       2       0       0       0
  9802 ;;      Totals:         0      11       0       0       0
  9803 ;;Total ram usage:       11 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; Hardware stack levels required when called: 3
  9806 ;; This function calls:
  9807 ;;		_I2C_Master_Read
  9808 ;;		_I2C_Master_RepeatedStart
  9809 ;;		_I2C_Master_Start
  9810 ;;		_I2C_Master_Stop
  9811 ;;		_I2C_Master_Write
  9812 ;; This function is called by:
  9813 ;;		_Decodify_Command
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           
  9818                           ;psect for function _EEPROM_24C1025_Read_Str
  9819  1686                     _EEPROM_24C1025_Read_Str:
  9820                           
  9821                           ;incstack = 0
  9822                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9823                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  9824  1686  1283               	bcf	3,5	;RP0=0, select bank0
  9825  1687  1303               	bcf	3,6	;RP1=0, select bank0
  9826  1688  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
  9827                           
  9828                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
  9829  1689  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  9830                           
  9831                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
  9832  168A  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9833  168B  1D03               	btfss	3,2
  9834  168C  0008               	return
  9835  168D  3002               	movlw	2
  9836  168E  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9837  168F  1D03               	skipz
  9838  1690  2E99               	goto	u3683
  9839  1691  3000               	movlw	0
  9840  1692  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9841  1693  1D03               	skipz
  9842  1694  2E99               	goto	u3683
  9843  1695  3000               	movlw	0
  9844  1696  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9845  1697  1D03               	skipz
  9846  1698  2E99               	goto	u3683
  9847  1699                     u3683:
  9848  1699  1803               	btfsc	3,0
  9849  169A  0008               	return
  9850                           
  9851                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9852  169B  1283               	bcf	3,5	;RP0=0, select bank0
  9853  169C  1303               	bcf	3,6	;RP1=0, select bank0
  9854  169D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9855  169E  1D03               	btfss	3,2
  9856  169F  2EAE               	goto	l4255
  9857  16A0  3001               	movlw	1
  9858  16A1  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9859  16A2  1D03               	skipz
  9860  16A3  2EAC               	goto	u3693
  9861  16A4  3000               	movlw	0
  9862  16A5  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9863  16A6  1D03               	skipz
  9864  16A7  2EAC               	goto	u3693
  9865  16A8  3000               	movlw	0
  9866  16A9  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9867  16AA  1D03               	skipz
  9868  16AB  2EAC               	goto	u3693
  9869  16AC                     u3693:
  9870  16AC  1C03               	btfss	3,0
  9871  16AD  2EB5               	goto	l4257
  9872  16AE                     l4255:
  9873  16AE  3008               	movlw	8
  9874  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  9875  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  9876  16B1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9877  16B2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9878  16B3  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  9879  16B4  2EB8               	goto	l4259
  9880  16B5                     l4257:
  9881  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  9882  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  9883  16B7  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  9884  16B8                     l4259:
  9885                           
  9886                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
  9887  16B8  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
  9888  16B9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9889  16BA  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9890  16BB  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
  9891                           
  9892                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
  9893  16BC  1003               	clrc
  9894  16BD  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
  9895                           
  9896                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
  9897  16BE  30A0               	movlw	160
  9898  16BF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9899  16C0  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9900  16C1  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9901                           
  9902                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
  9903  16C2  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
  9904                           
  9905                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
  9906  16C3  0832               	movf	EEPROM_24C1025_Read_Str@range,w
  9907  16C4  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9908  16C5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9909  16C6  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9910                           
  9911                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
  9912  16C7  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Start
  9913                           
  9914                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
  9915  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  9916  16CD  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9917  16CE  39FE               	andlw	254
  9918  16CF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9919  16D0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
  9920  16D1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9921  16D2  00A3               	movwf	I2C_Master_Write@d
  9922  16D3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
  9923  16D4  00A4               	movwf	I2C_Master_Write@d+1
  9924  16D5  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9925                           
  9926                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
  9927  16DA  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9928  16DB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9929  16DC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
  9930  16DD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9931  16DE  00A3               	movwf	I2C_Master_Write@d
  9932  16DF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
  9933  16E0  00A4               	movwf	I2C_Master_Write@d+1
  9934  16E1  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9935                           
  9936                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
  9937  16E6  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  9938  16E7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9939  16E8  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
  9940  16E9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9941  16EA  00A3               	movwf	I2C_Master_Write@d
  9942  16EB  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
  9943  16EC  00A4               	movwf	I2C_Master_Write@d+1
  9944  16ED  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9945                           
  9946                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
  9947  16F2  160A  158A  231A  160A  118A  	fcall	_I2C_Master_RepeatedStart
  9948                           
  9949                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
  9950  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  9951  16F8  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9952  16F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9953  16FA  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
  9954  16FB  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9955  16FC  00A3               	movwf	I2C_Master_Write@d
  9956  16FD  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
  9957  16FE  00A4               	movwf	I2C_Master_Write@d+1
  9958  16FF  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
  9959                           
  9960                           ;EEPROM_24C1025.c: 296:      cnt=0;
  9961  1704  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
  9962  1705                     l4281:
  9963                           
  9964                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
  9965  1705  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9966  1706  1D03               	btfss	3,2
  9967  1707  2FE7               	goto	l4337
  9968  1708  3002               	movlw	2
  9969  1709  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9970  170A  1D03               	skipz
  9971  170B  2F14               	goto	u3703
  9972  170C  3000               	movlw	0
  9973  170D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9974  170E  1D03               	skipz
  9975  170F  2F14               	goto	u3703
  9976  1710  3000               	movlw	0
  9977  1711  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9978  1712  1D03               	skipz
  9979  1713  2F14               	goto	u3703
  9980  1714                     u3703:
  9981  1714  1803               	btfsc	3,0
  9982  1715  2FE7               	goto	l4337
  9983                           
  9984                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
  9985  1716  1283               	bcf	3,5	;RP0=0, select bank0
  9986  1717  1303               	bcf	3,6	;RP1=0, select bank0
  9987  1718  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  9988  1719  3E01               	addlw	1
  9989  171A  397F               	andlw	127
  9990  171B  1D03               	btfss	3,2
  9991  171C  2FB7               	goto	l4325
  9992                           
  9993                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
  9994  171D  3000               	movlw	0
  9995  171E  00A3               	movwf	I2C_Master_Read@a
  9996  171F  00A4               	movwf	I2C_Master_Read@a+1
  9997  1720  160A  158A  25E2  160A  118A  	fcall	_I2C_Master_Read
  9998  1725  0823               	movf	?_I2C_Master_Read,w
  9999  1726  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10000  1727  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10001  1728  0084               	movwf	4
 10002  1729  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10003  172A  1783               	bsf	3,7	;select IRP bank2
 10004  172B  0080               	movwf	0
 10005                           
 10006                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10007  172C  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
 10008                           
 10009                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10010  1731  300D               	movlw	13
 10011  1732  1283               	bcf	3,5	;RP0=0, select bank0
 10012  1733  1303               	bcf	3,6	;RP1=0, select bank0
 10013  1734  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10014  1735  30FB               	movlw	251
 10015  1736  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10016  1737                     u5297:
 10017  1737  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10018  1738  2F37               	goto	u5297
 10019  1739  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10020  173A  2F37               	goto	u5297
 10021                           
 10022                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10023  173B  3001               	movlw	1
 10024  173C  1283               	bcf	3,5	;RP0=0, select bank0
 10025  173D  1303               	bcf	3,6	;RP1=0, select bank0
 10026  173E  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10027  173F  3000               	movlw	0
 10028  1740  1803               	skipnc
 10029  1741  3001               	movlw	1
 10030  1742  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10031  1743  3000               	movlw	0
 10032  1744  1803               	skipnc
 10033  1745  3001               	movlw	1
 10034  1746  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10035  1747  3000               	movlw	0
 10036  1748  1803               	skipnc
 10037  1749  3001               	movlw	1
 10038  174A  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10039                           
 10040                           ;EEPROM_24C1025.c: 306:              buffer++;
 10041  174B  3001               	movlw	1
 10042  174C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10043  174D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10044  174E  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10045                           
 10046                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10047  174F  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10048  1750  1D03               	btfss	3,2
 10049  1751  2F60               	goto	l4299
 10050  1752  3001               	movlw	1
 10051  1753  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10052  1754  1D03               	skipz
 10053  1755  2F5E               	goto	u3723
 10054  1756  3000               	movlw	0
 10055  1757  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10056  1758  1D03               	skipz
 10057  1759  2F5E               	goto	u3723
 10058  175A  3000               	movlw	0
 10059  175B  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10060  175C  1D03               	skipz
 10061  175D  2F5E               	goto	u3723
 10062  175E                     u3723:
 10063  175E  1C03               	btfss	3,0
 10064  175F  2F67               	goto	l4301
 10065  1760                     l4299:
 10066  1760  3008               	movlw	8
 10067  1761  1283               	bcf	3,5	;RP0=0, select bank0
 10068  1762  1303               	bcf	3,6	;RP1=0, select bank0
 10069  1763  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10070  1764  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10071  1765  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10072  1766  2F6A               	goto	l4303
 10073  1767                     l4301:
 10074  1767  1283               	bcf	3,5	;RP0=0, select bank0
 10075  1768  1303               	bcf	3,6	;RP1=0, select bank0
 10076  1769  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10077  176A                     l4303:
 10078                           
 10079                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10080  176A  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10081  176B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10082  176C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10083  176D  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10084                           
 10085                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10086  176E  1003               	clrc
 10087  176F  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10088                           
 10089                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10090  1770  30A0               	movlw	160
 10091  1771  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10092  1772  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10093  1773  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10094                           
 10095                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10096  1774  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10097                           
 10098                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10099  1775  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10100  1776  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10101  1777  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10102  1778  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10103                           
 10104                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10105  1779  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Start
 10106                           
 10107                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10108  177E  1283               	bcf	3,5	;RP0=0, select bank0
 10109  177F  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10110  1780  39FE               	andlw	254
 10111  1781  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10112  1782  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10113  1783  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10114  1784  00A3               	movwf	I2C_Master_Write@d
 10115  1785  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10116  1786  00A4               	movwf	I2C_Master_Write@d+1
 10117  1787  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 10118                           
 10119                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10120  178C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10121  178D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10122  178E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10123  178F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10124  1790  00A3               	movwf	I2C_Master_Write@d
 10125  1791  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10126  1792  00A4               	movwf	I2C_Master_Write@d+1
 10127  1793  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 10128                           
 10129                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10130  1798  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10131  1799  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10132  179A  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10133  179B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10134  179C  00A3               	movwf	I2C_Master_Write@d
 10135  179D  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10136  179E  00A4               	movwf	I2C_Master_Write@d+1
 10137  179F  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 10138                           
 10139                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10140  17A4  160A  158A  231A  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10141                           
 10142                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10143  17A9  1283               	bcf	3,5	;RP0=0, select bank0
 10144  17AA  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10145  17AB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10146  17AC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10147  17AD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10148  17AE  00A3               	movwf	I2C_Master_Write@d
 10149  17AF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10150  17B0  00A4               	movwf	I2C_Master_Write@d+1
 10151  17B1  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 10152                           
 10153                           ;EEPROM_24C1025.c: 320:              }
 10154  17B6  2FDE               	goto	l4335
 10155  17B7                     l4325:
 10156                           
 10157                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10158  17B7  3001               	movlw	1
 10159  17B8  00A3               	movwf	I2C_Master_Read@a
 10160  17B9  3000               	movlw	0
 10161  17BA  00A4               	movwf	I2C_Master_Read@a+1
 10162  17BB  160A  158A  25E2  160A  118A  	fcall	_I2C_Master_Read
 10163  17C0  0823               	movf	?_I2C_Master_Read,w
 10164  17C1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10165  17C2  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10166  17C3  0084               	movwf	4
 10167  17C4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10168  17C5  1783               	bsf	3,7	;select IRP bank2
 10169  17C6  0080               	movwf	0
 10170                           
 10171                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10172  17C7  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10173  17C8  0084               	movwf	4
 10174  17C9  0800               	movf	0,w
 10175  17CA  1903               	btfsc	3,2
 10176  17CB  2FE7               	goto	l4337
 10177                           
 10178                           ;EEPROM_24C1025.c: 325:              buffer++;
 10179  17CC  3001               	movlw	1
 10180  17CD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10181  17CE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10182  17CF  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10183                           
 10184                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10185  17D0  3001               	movlw	1
 10186  17D1  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10187  17D2  3000               	movlw	0
 10188  17D3  1803               	skipnc
 10189  17D4  3001               	movlw	1
 10190  17D5  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10191  17D6  3000               	movlw	0
 10192  17D7  1803               	skipnc
 10193  17D8  3001               	movlw	1
 10194  17D9  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10195  17DA  3000               	movlw	0
 10196  17DB  1803               	skipnc
 10197  17DC  3001               	movlw	1
 10198  17DD  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10199  17DE                     l4335:
 10200                           
 10201                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10202  17DE  3001               	movlw	1
 10203  17DF  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10204  17E0  30FF               	movlw	-1
 10205  17E1  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10206  17E2  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10207  17E3  3040               	movlw	64
 10208  17E4  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10209  17E5  1C03               	skipc
 10210  17E6  2F05               	goto	l4281
 10211  17E7                     l4337:
 10212                           
 10213                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10214  17E7  3000               	movlw	0
 10215  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 10216  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 10217  17EA  00A3               	movwf	I2C_Master_Read@a
 10218  17EB  00A4               	movwf	I2C_Master_Read@a+1
 10219  17EC  160A  158A  25E2  160A  118A  	fcall	_I2C_Master_Read
 10220                           
 10221                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10222  17F1  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
 10223                           
 10224                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10225  17F6  30B9               	movlw	185
 10226  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 10227  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 10228  17F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10229  17FA                     u5307:
 10230  17FA  2FFB               	nop2
 10231  17FB  2FFC               	nop2
 10232  17FC  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10233  17FD  2FFA               	goto	u5307
 10234  17FE  2FFF               	nop2
 10235  17FF  0008               	return
 10236  1800                     __end_of_EEPROM_24C1025_Read_Str:
 10237                           
 10238                           	psect	text40
 10239  1CD2                     __ptext40:	
 10240 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10241 ;; Defined at:
 10242 ;;		line 360 in file "EEPROM_24C1025.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  chip_add        1    wreg     unsigned char 
 10245 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10248 ;;  data            2   29[BANK0 ] unsigned char [2]
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  2   22[BANK0 ] unsigned int 
 10251 ;; Registers used:
 10252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10253 ;; Tracked objects:
 10254 ;;		On entry : 300/300
 10255 ;;		On exit  : 300/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10258 ;;      Params:         0       4       0       0       0
 10259 ;;      Locals:         0       3       0       0       0
 10260 ;;      Temps:          0       2       0       0       0
 10261 ;;      Totals:         0       9       0       0       0
 10262 ;;Total ram usage:        9 bytes
 10263 ;; Hardware stack levels used: 1
 10264 ;; Hardware stack levels required when called: 4
 10265 ;; This function calls:
 10266 ;;		_EEPROM_24C1025_Read_Buffer
 10267 ;; This function is called by:
 10268 ;;		_Decodify_Command
 10269 ;; This function uses a non-reentrant model
 10270 ;;
 10271                           
 10272                           
 10273                           ;psect for function _EEPROM_24C1025_Read_Int
 10274  1CD2                     _EEPROM_24C1025_Read_Int:
 10275                           
 10276                           ;incstack = 0
 10277                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10278                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10279  1CD2  1283               	bcf	3,5	;RP0=0, select bank0
 10280  1CD3  1303               	bcf	3,6	;RP1=0, select bank0
 10281  1CD4  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10282                           
 10283                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10284  1CD5  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10285  1CD6  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10286  1CD7  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10287  1CD8  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10288  1CD9  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10289  1CDA  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10290  1CDB  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10291  1CDC  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10292  1CDD  3002               	movlw	2
 10293  1CDE  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10294  1CDF  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10295  1CE0  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10296  1CE1  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10297  1CE2  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10298  1CE3  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10299  1CE4  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10300  1CE5  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10301  1CE6  120A  158A  2250   	fcall	_EEPROM_24C1025_Read_Buffer
 10302                           
 10303                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10304  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
 10305  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
 10306  1CEB  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 10307  1CEC  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10308  1CED  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 10309  1CEE  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10310  1CEF  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10311  1CF0  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 10312  1CF1  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10313  1CF2  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 10314  1CF3  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10315  1CF4  3000               	movlw	0
 10316  1CF5  1803               	skipnc
 10317  1CF6  3001               	movlw	1
 10318  1CF7  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10319  1CF8  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10320  1CF9  0008               	return
 10321  1CFA                     __end_of_EEPROM_24C1025_Read_Int:
 10322                           
 10323                           	psect	text41
 10324  1BB6                     __ptext41:	
 10325 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10326 ;; Defined at:
 10327 ;;		line 346 in file "EEPROM_24C1025.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  chip_add        1    wreg     unsigned char 
 10330 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  chip_add        1   27[BANK0 ] unsigned char 
 10333 ;;  data            1   28[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      unsigned char 
 10336 ;; Registers used:
 10337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 300/300
 10340 ;;		On exit  : 300/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10343 ;;      Params:         0       4       0       0       0
 10344 ;;      Locals:         0       2       0       0       0
 10345 ;;      Temps:          0       1       0       0       0
 10346 ;;      Totals:         0       7       0       0       0
 10347 ;;Total ram usage:        7 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 4
 10350 ;; This function calls:
 10351 ;;		_EEPROM_24C1025_Read_Buffer
 10352 ;; This function is called by:
 10353 ;;		_Decodify_Command
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           
 10358                           ;psect for function _EEPROM_24C1025_Read_Byte
 10359  1BB6                     _EEPROM_24C1025_Read_Byte:
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10363                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10364  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
 10365  1BB7  1303               	bcf	3,6	;RP1=0, select bank0
 10366  1BB8  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10367                           
 10368                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10369  1BB9  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10370  1BBA  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10371  1BBB  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10372  1BBC  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10373  1BBD  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10374  1BBE  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10375  1BBF  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10376  1BC0  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10377  1BC1  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10378  1BC2  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10379  1BC3  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10380  1BC4  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 10381  1BC5  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 10382  1BC6  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10383  1BC7  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10384  1BC8  120A  158A  2250   	fcall	_EEPROM_24C1025_Read_Buffer
 10385                           
 10386                           ;EEPROM_24C1025.c: 349:     return data;
 10387  1BCB  1283               	bcf	3,5	;RP0=0, select bank0
 10388  1BCC  1303               	bcf	3,6	;RP1=0, select bank0
 10389  1BCD  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 10390  1BCE  0008               	return
 10391  1BCF                     __end_of_EEPROM_24C1025_Read_Byte:
 10392                           
 10393                           	psect	text42
 10394  0A50                     __ptext42:	
 10395 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10396 ;; Defined at:
 10397 ;;		line 77 in file "EEPROM_24C1025.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  chip_add        1    wreg     unsigned char 
 10400 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10401 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10402 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10403 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  chip_add        1   19[BANK0 ] unsigned char 
 10406 ;;  cnt             1   18[BANK0 ] unsigned char 
 10407 ;;  ctrl            1   21[BANK0 ] unsigned char 
 10408 ;;  range           1   20[BANK0 ] unsigned char 
 10409 ;;  cnt             1    0        unsigned char 
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      void 
 10412 ;; Registers used:
 10413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 300/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10419 ;;      Params:         0       6       0       0       0
 10420 ;;      Locals:         0       4       0       0       0
 10421 ;;      Temps:          0       2       0       0       0
 10422 ;;      Totals:         0      12       0       0       0
 10423 ;;Total ram usage:       12 bytes
 10424 ;; Hardware stack levels used: 1
 10425 ;; Hardware stack levels required when called: 3
 10426 ;; This function calls:
 10427 ;;		_I2C_Master_Read
 10428 ;;		_I2C_Master_RepeatedStart
 10429 ;;		_I2C_Master_Start
 10430 ;;		_I2C_Master_Stop
 10431 ;;		_I2C_Master_Write
 10432 ;;		_my_delay_ms_WDT
 10433 ;; This function is called by:
 10434 ;;		_EEPROM_24C1025_Read_Byte
 10435 ;;		_EEPROM_24C1025_Read_Int
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           
 10440                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10441  0A50                     _EEPROM_24C1025_Read_Buffer:
 10442                           
 10443                           ;incstack = 0
 10444                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10445                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10446  0A50  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10447                           
 10448                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 10449  0A51  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10450                           
 10451                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10452  0A52  3014               	movlw	20
 10453  0A53  1683               	bsf	3,5	;RP0=1, select bank1
 10454  0A54  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10455  0A55  3000               	movlw	0
 10456  0A56  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10457                           
 10458                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10459  0A57  1283               	bcf	3,5	;RP0=0, select bank0
 10460  0A58  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10461  0A59  1D03               	btfss	3,2
 10462  0A5A  0008               	return
 10463  0A5B  3002               	movlw	2
 10464  0A5C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10465  0A5D  1D03               	skipz
 10466  0A5E  2A67               	goto	u2733
 10467  0A5F  3000               	movlw	0
 10468  0A60  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10469  0A61  1D03               	skipz
 10470  0A62  2A67               	goto	u2733
 10471  0A63  3000               	movlw	0
 10472  0A64  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10473  0A65  1D03               	skipz
 10474  0A66  2A67               	goto	u2733
 10475  0A67                     u2733:
 10476  0A67  1803               	btfsc	3,0
 10477  0A68  0008               	return
 10478                           
 10479                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10480  0A69  1283               	bcf	3,5	;RP0=0, select bank0
 10481  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
 10482  0A6B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10483  0A6C  1D03               	btfss	3,2
 10484  0A6D  2A7C               	goto	l3643
 10485  0A6E  3001               	movlw	1
 10486  0A6F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10487  0A70  1D03               	skipz
 10488  0A71  2A7A               	goto	u2743
 10489  0A72  3000               	movlw	0
 10490  0A73  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10491  0A74  1D03               	skipz
 10492  0A75  2A7A               	goto	u2743
 10493  0A76  3000               	movlw	0
 10494  0A77  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10495  0A78  1D03               	skipz
 10496  0A79  2A7A               	goto	u2743
 10497  0A7A                     u2743:
 10498  0A7A  1C03               	btfss	3,0
 10499  0A7B  2A83               	goto	l3645
 10500  0A7C                     l3643:
 10501  0A7C  3008               	movlw	8
 10502  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
 10503  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
 10504  0A7F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10505  0A80  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10506  0A81  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 10507  0A82  2A86               	goto	l3647
 10508  0A83                     l3645:
 10509  0A83  1283               	bcf	3,5	;RP0=0, select bank0
 10510  0A84  1303               	bcf	3,6	;RP1=0, select bank0
 10511  0A85  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10512  0A86                     l3647:
 10513                           
 10514                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 10515  0A86  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10516  0A87  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10517  0A88  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10518  0A89  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10519                           
 10520                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 10521  0A8A  1003               	clrc
 10522  0A8B  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10523                           
 10524                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 10525  0A8C  30A0               	movlw	160
 10526  0A8D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10527  0A8E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10528  0A8F  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10529                           
 10530                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 10531  0A90  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10532                           
 10533                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 10534  0A91  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10535  0A92  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10536  0A93  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10537  0A94  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10538                           
 10539                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 10540  0A95  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Start
 10541                           
 10542                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 10543  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
 10544  0A9B  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10545  0A9C  39FE               	andlw	254
 10546  0A9D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10547  0A9E  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10548  0A9F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10549  0AA0  00A3               	movwf	I2C_Master_Write@d
 10550  0AA1  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10551  0AA2  00A4               	movwf	I2C_Master_Write@d+1
 10552  0AA3  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10553                           
 10554                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 10555  0AA8  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10556  0AA9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10557  0AAA  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10558  0AAB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10559  0AAC  00A3               	movwf	I2C_Master_Write@d
 10560  0AAD  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10561  0AAE  00A4               	movwf	I2C_Master_Write@d+1
 10562  0AAF  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10563                           
 10564                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 10565  0AB4  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10566  0AB5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10567  0AB6  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10568  0AB7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10569  0AB8  00A3               	movwf	I2C_Master_Write@d
 10570  0AB9  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10571  0ABA  00A4               	movwf	I2C_Master_Write@d+1
 10572  0ABB  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10573                           
 10574                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 10575  0AC0  160A  158A  231A  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10576                           
 10577                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 10578  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
 10579  0AC6  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10580  0AC7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10581  0AC8  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10582  0AC9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10583  0ACA  00A3               	movwf	I2C_Master_Write@d
 10584  0ACB  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10585  0ACC  00A4               	movwf	I2C_Master_Write@d+1
 10586  0ACD  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10587                           
 10588                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 10589  0AD2  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 10590  0AD3                     l3721:
 10591  0AD3  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 10592  0AD4  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 10593  0AD5  1803               	btfsc	3,0
 10594  0AD6  2BB5               	goto	l3723
 10595  0AD7  0064               	clrwdt	;# 
 10596                           
 10597                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 10598  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
 10599  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
 10600  0ADA  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10601  0ADB  1D03               	btfss	3,2
 10602  0ADC  2BB5               	goto	l3723
 10603  0ADD  3002               	movlw	2
 10604  0ADE  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10605  0ADF  1D03               	skipz
 10606  0AE0  2AE9               	goto	u2753
 10607  0AE1  3000               	movlw	0
 10608  0AE2  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10609  0AE3  1D03               	skipz
 10610  0AE4  2AE9               	goto	u2753
 10611  0AE5  3000               	movlw	0
 10612  0AE6  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10613  0AE7  1D03               	skipz
 10614  0AE8  2AE9               	goto	u2753
 10615  0AE9                     u2753:
 10616  0AE9  1803               	btfsc	3,0
 10617  0AEA  2BB5               	goto	l3723
 10618                           
 10619                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 10620  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
 10621  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
 10622  0AED  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10623  0AEE  3E01               	addlw	1
 10624  0AEF  397F               	andlw	127
 10625  0AF0  1D03               	btfss	3,2
 10626  0AF1  2B8E               	goto	l3713
 10627                           
 10628                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 10629  0AF2  3000               	movlw	0
 10630  0AF3  00A3               	movwf	I2C_Master_Read@a
 10631  0AF4  00A4               	movwf	I2C_Master_Read@a+1
 10632  0AF5  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 10633  0AFA  0823               	movf	?_I2C_Master_Read,w
 10634  0AFB  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10635  0AFC  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10636  0AFD  0084               	movwf	4
 10637  0AFE  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10638  0AFF  1383               	bcf	3,7	;select IRP bank0
 10639  0B00  0080               	movwf	0
 10640                           
 10641                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 10642  0B01  160A  158A  22E8  120A  158A  	fcall	_I2C_Master_Stop
 10643                           
 10644                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 10645  0B06  3000               	movlw	0
 10646  0B07  1283               	bcf	3,5	;RP0=0, select bank0
 10647  0B08  00A3               	movwf	my_delay_ms_WDT@time+3
 10648  0B09  3000               	movlw	0
 10649  0B0A  00A2               	movwf	my_delay_ms_WDT@time+2
 10650  0B0B  3000               	movlw	0
 10651  0B0C  00A1               	movwf	my_delay_ms_WDT@time+1
 10652  0B0D  3005               	movlw	5
 10653  0B0E  00A0               	movwf	my_delay_ms_WDT@time
 10654  0B0F  160A  158A  264E  120A  158A  	fcall	_my_delay_ms_WDT
 10655                           
 10656                           ;EEPROM_24C1025.c: 114:              mem_add++;
 10657  0B14  3001               	movlw	1
 10658  0B15  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10659  0B16  3000               	movlw	0
 10660  0B17  1803               	skipnc
 10661  0B18  3001               	movlw	1
 10662  0B19  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10663  0B1A  3000               	movlw	0
 10664  0B1B  1803               	skipnc
 10665  0B1C  3001               	movlw	1
 10666  0B1D  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10667  0B1E  3000               	movlw	0
 10668  0B1F  1803               	skipnc
 10669  0B20  3001               	movlw	1
 10670  0B21  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10671                           
 10672                           ;EEPROM_24C1025.c: 115:              data++;
 10673  0B22  3001               	movlw	1
 10674  0B23  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10675  0B24  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10676  0B25  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10677                           
 10678                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10679  0B26  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10680  0B27  1D03               	btfss	3,2
 10681  0B28  2B37               	goto	l3687
 10682  0B29  3001               	movlw	1
 10683  0B2A  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10684  0B2B  1D03               	skipz
 10685  0B2C  2B35               	goto	u2773
 10686  0B2D  3000               	movlw	0
 10687  0B2E  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10688  0B2F  1D03               	skipz
 10689  0B30  2B35               	goto	u2773
 10690  0B31  3000               	movlw	0
 10691  0B32  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10692  0B33  1D03               	skipz
 10693  0B34  2B35               	goto	u2773
 10694  0B35                     u2773:
 10695  0B35  1C03               	btfss	3,0
 10696  0B36  2B3E               	goto	l3689
 10697  0B37                     l3687:
 10698  0B37  3008               	movlw	8
 10699  0B38  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0B39  1303               	bcf	3,6	;RP1=0, select bank0
 10701  0B3A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10702  0B3B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10703  0B3C  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 10704  0B3D  2B41               	goto	l3691
 10705  0B3E                     l3689:
 10706  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
 10707  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
 10708  0B40  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10709  0B41                     l3691:
 10710                           
 10711                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 10712  0B41  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10713  0B42  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10714  0B43  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10715  0B44  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10716                           
 10717                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 10718  0B45  1003               	clrc
 10719  0B46  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10720                           
 10721                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 10722  0B47  30A0               	movlw	160
 10723  0B48  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10724  0B49  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10725  0B4A  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10726                           
 10727                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 10728  0B4B  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10729                           
 10730                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 10731  0B4C  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10732  0B4D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10733  0B4E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10734  0B4F  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10735                           
 10736                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 10737  0B50  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Start
 10738                           
 10739                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 10740  0B55  1283               	bcf	3,5	;RP0=0, select bank0
 10741  0B56  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10742  0B57  39FE               	andlw	254
 10743  0B58  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10744  0B59  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10745  0B5A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10746  0B5B  00A3               	movwf	I2C_Master_Write@d
 10747  0B5C  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10748  0B5D  00A4               	movwf	I2C_Master_Write@d+1
 10749  0B5E  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10750                           
 10751                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 10752  0B63  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10753  0B64  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10754  0B65  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10755  0B66  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10756  0B67  00A3               	movwf	I2C_Master_Write@d
 10757  0B68  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10758  0B69  00A4               	movwf	I2C_Master_Write@d+1
 10759  0B6A  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10760                           
 10761                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 10762  0B6F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10763  0B70  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10764  0B71  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10765  0B72  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10766  0B73  00A3               	movwf	I2C_Master_Write@d
 10767  0B74  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10768  0B75  00A4               	movwf	I2C_Master_Write@d+1
 10769  0B76  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10770                           
 10771                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 10772  0B7B  160A  158A  231A  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10773                           
 10774                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 10775  0B80  1283               	bcf	3,5	;RP0=0, select bank0
 10776  0B81  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10777  0B82  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10778  0B83  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10779  0B84  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10780  0B85  00A3               	movwf	I2C_Master_Write@d
 10781  0B86  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10782  0B87  00A4               	movwf	I2C_Master_Write@d+1
 10783  0B88  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 10784                           
 10785                           ;EEPROM_24C1025.c: 129:              }
 10786  0B8D  2BB0               	goto	l3719
 10787  0B8E                     l3713:
 10788                           
 10789                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 10790  0B8E  3001               	movlw	1
 10791  0B8F  00A3               	movwf	I2C_Master_Read@a
 10792  0B90  3000               	movlw	0
 10793  0B91  00A4               	movwf	I2C_Master_Read@a+1
 10794  0B92  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 10795  0B97  0823               	movf	?_I2C_Master_Read,w
 10796  0B98  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10797  0B99  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10798  0B9A  0084               	movwf	4
 10799  0B9B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10800  0B9C  1383               	bcf	3,7	;select IRP bank0
 10801  0B9D  0080               	movwf	0
 10802                           
 10803                           ;EEPROM_24C1025.c: 133:              data++;
 10804  0B9E  3001               	movlw	1
 10805  0B9F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10806  0BA0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10807  0BA1  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10808                           
 10809                           ;EEPROM_24C1025.c: 134:              mem_add++;
 10810  0BA2  3001               	movlw	1
 10811  0BA3  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10812  0BA4  3000               	movlw	0
 10813  0BA5  1803               	skipnc
 10814  0BA6  3001               	movlw	1
 10815  0BA7  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10816  0BA8  3000               	movlw	0
 10817  0BA9  1803               	skipnc
 10818  0BAA  3001               	movlw	1
 10819  0BAB  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10820  0BAC  3000               	movlw	0
 10821  0BAD  1803               	skipnc
 10822  0BAE  3001               	movlw	1
 10823  0BAF  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10824  0BB0                     l3719:
 10825                           
 10826                           ;EEPROM_24C1025.c: 136:         }
 10827  0BB0  3001               	movlw	1
 10828  0BB1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10829  0BB2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10830  0BB3  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 10831  0BB4  2AD3               	goto	l3721
 10832  0BB5                     l3723:
 10833                           
 10834                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 10835  0BB5  3000               	movlw	0
 10836  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
 10837  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
 10838  0BB8  00A3               	movwf	I2C_Master_Read@a
 10839  0BB9  00A4               	movwf	I2C_Master_Read@a+1
 10840  0BBA  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 10841                           
 10842                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 10843  0BBF  160A  158A  22E8  120A  158A  	fcall	_I2C_Master_Stop
 10844                           
 10845                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10846  0BC4  30B9               	movlw	185
 10847  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
 10848  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
 10849  0BC7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10850  0BC8                     u5317:
 10851  0BC8  2BC9               	nop2
 10852  0BC9  2BCA               	nop2
 10853  0BCA  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10854  0BCB  2BC8               	goto	u5317
 10855  0BCC  2BCD               	nop2
 10856  0BCD  0008               	return
 10857  0BCE                     __end_of_EEPROM_24C1025_Read_Buffer:
 10858                           
 10859                           	psect	text43
 10860  08D2                     __ptext43:	
 10861 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 10862 ;; Defined at:
 10863 ;;		line 148 in file "EEPROM_24C1025.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;  chip_add        1    wreg     unsigned char 
 10866 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10867 ;;  sizedata        1   13[BANK0 ] unsigned char 
 10868 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10869 ;;		 -> buffer(33), 
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10872 ;;  cnt             1   17[BANK0 ] unsigned char 
 10873 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10874 ;;  range           1   19[BANK0 ] unsigned char 
 10875 ;;  cnt             1    0        unsigned char 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 300/300
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10885 ;;      Params:         0       6       0       0       0
 10886 ;;      Locals:         0       4       0       0       0
 10887 ;;      Temps:          0       2       0       0       0
 10888 ;;      Totals:         0      12       0       0       0
 10889 ;;Total ram usage:       12 bytes
 10890 ;; Hardware stack levels used: 1
 10891 ;; Hardware stack levels required when called: 3
 10892 ;; This function calls:
 10893 ;;		_I2C_Master_Read
 10894 ;;		_I2C_Master_RepeatedStart
 10895 ;;		_I2C_Master_Start
 10896 ;;		_I2C_Master_Stop
 10897 ;;		_I2C_Master_Write
 10898 ;;		_USART_putc
 10899 ;; This function is called by:
 10900 ;;		_Decodify_Command
 10901 ;; This function uses a non-reentrant model
 10902 ;;
 10903                           
 10904                           
 10905                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 10906  08D2                     _EEPROM_24C1025_Read_Buffer_USART:
 10907                           
 10908                           ;incstack = 0
 10909                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 10910                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 10911  08D2  1283               	bcf	3,5	;RP0=0, select bank0
 10912  08D3  1303               	bcf	3,6	;RP1=0, select bank0
 10913  08D4  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 10914                           
 10915                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 10916  08D5  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 10917                           
 10918                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 10919  08D6  3014               	movlw	20
 10920  08D7  1683               	bsf	3,5	;RP0=1, select bank1
 10921  08D8  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10922  08D9  3000               	movlw	0
 10923  08DA  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10924                           
 10925                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 10926  08DB  1283               	bcf	3,5	;RP0=0, select bank0
 10927  08DC  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 10928  08DD  1D03               	btfss	3,2
 10929  08DE  0008               	return
 10930  08DF  3002               	movlw	2
 10931  08E0  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 10932  08E1  1D03               	skipz
 10933  08E2  28EB               	goto	u3563
 10934  08E3  3000               	movlw	0
 10935  08E4  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 10936  08E5  1D03               	skipz
 10937  08E6  28EB               	goto	u3563
 10938  08E7  3000               	movlw	0
 10939  08E8  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 10940  08E9  1D03               	skipz
 10941  08EA  28EB               	goto	u3563
 10942  08EB                     u3563:
 10943  08EB  1803               	btfsc	3,0
 10944  08EC  0008               	return
 10945                           
 10946                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10947  08ED  1283               	bcf	3,5	;RP0=0, select bank0
 10948  08EE  1303               	bcf	3,6	;RP1=0, select bank0
 10949  08EF  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 10950  08F0  1D03               	btfss	3,2
 10951  08F1  2900               	goto	l4089
 10952  08F2  3001               	movlw	1
 10953  08F3  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 10954  08F4  1D03               	skipz
 10955  08F5  28FE               	goto	u3573
 10956  08F6  3000               	movlw	0
 10957  08F7  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 10958  08F8  1D03               	skipz
 10959  08F9  28FE               	goto	u3573
 10960  08FA  3000               	movlw	0
 10961  08FB  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 10962  08FC  1D03               	skipz
 10963  08FD  28FE               	goto	u3573
 10964  08FE                     u3573:
 10965  08FE  1C03               	btfss	3,0
 10966  08FF  2907               	goto	l4091
 10967  0900                     l4089:
 10968  0900  3008               	movlw	8
 10969  0901  1283               	bcf	3,5	;RP0=0, select bank0
 10970  0902  1303               	bcf	3,6	;RP1=0, select bank0
 10971  0903  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 10972  0904  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 10973  0905  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 10974  0906  290A               	goto	l4093
 10975  0907                     l4091:
 10976  0907  1283               	bcf	3,5	;RP0=0, select bank0
 10977  0908  1303               	bcf	3,6	;RP1=0, select bank0
 10978  0909  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 10979  090A                     l4093:
 10980                           
 10981                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 10982  090A  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 10983  090B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 10984  090C  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 10985  090D  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 10986                           
 10987                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 10988  090E  1003               	clrc
 10989  090F  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 10990                           
 10991                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 10992  0910  30A0               	movlw	160
 10993  0911  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 10994  0912  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 10995  0913  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 10996                           
 10997                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 10998  0914  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 10999                           
 11000                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11001  0915  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11002  0916  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11003  0917  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11004  0918  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11005                           
 11006                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11007  0919  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Start
 11008                           
 11009                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11010  091E  1283               	bcf	3,5	;RP0=0, select bank0
 11011  091F  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11012  0920  39FE               	andlw	254
 11013  0921  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11014  0922  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11015  0923  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11016  0924  00A3               	movwf	I2C_Master_Write@d
 11017  0925  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11018  0926  00A4               	movwf	I2C_Master_Write@d+1
 11019  0927  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11020                           
 11021                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11022  092C  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11023  092D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11024  092E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11025  092F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11026  0930  00A3               	movwf	I2C_Master_Write@d
 11027  0931  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11028  0932  00A4               	movwf	I2C_Master_Write@d+1
 11029  0933  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11030                           
 11031                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11032  0938  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11033  0939  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11034  093A  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11035  093B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11036  093C  00A3               	movwf	I2C_Master_Write@d
 11037  093D  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11038  093E  00A4               	movwf	I2C_Master_Write@d+1
 11039  093F  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11040                           
 11041                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11042  0944  160A  158A  231A  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11043                           
 11044                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11045  0949  1283               	bcf	3,5	;RP0=0, select bank0
 11046  094A  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11047  094B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11048  094C  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11049  094D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11050  094E  00A3               	movwf	I2C_Master_Write@d
 11051  094F  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11052  0950  00A4               	movwf	I2C_Master_Write@d+1
 11053  0951  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11054                           
 11055                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11056  0956  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11057  0957                     l4163:
 11058  0957  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11059  0958  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11060  0959  1803               	btfsc	3,0
 11061  095A  2A37               	goto	l4165
 11062  095B  0064               	clrwdt	;# 
 11063                           
 11064                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11065  095C  1283               	bcf	3,5	;RP0=0, select bank0
 11066  095D  1303               	bcf	3,6	;RP1=0, select bank0
 11067  095E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11068  095F  1D03               	btfss	3,2
 11069  0960  2A37               	goto	l4165
 11070  0961  3002               	movlw	2
 11071  0962  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11072  0963  1D03               	skipz
 11073  0964  296D               	goto	u3583
 11074  0965  3000               	movlw	0
 11075  0966  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11076  0967  1D03               	skipz
 11077  0968  296D               	goto	u3583
 11078  0969  3000               	movlw	0
 11079  096A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11080  096B  1D03               	skipz
 11081  096C  296D               	goto	u3583
 11082  096D                     u3583:
 11083  096D  1803               	btfsc	3,0
 11084  096E  2A37               	goto	l4165
 11085                           
 11086                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11087  096F  1283               	bcf	3,5	;RP0=0, select bank0
 11088  0970  1303               	bcf	3,6	;RP1=0, select bank0
 11089  0971  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11090  0972  3E01               	addlw	1
 11091  0973  397F               	andlw	127
 11092  0974  1D03               	btfss	3,2
 11093  0975  2A0B               	goto	l4157
 11094                           
 11095                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11096  0976  3000               	movlw	0
 11097  0977  00A3               	movwf	I2C_Master_Read@a
 11098  0978  00A4               	movwf	I2C_Master_Read@a+1
 11099  0979  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 11100  097E  0823               	movf	?_I2C_Master_Read,w
 11101  097F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11102  0980  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11103  0981  0084               	movwf	4
 11104  0982  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11105  0983  1783               	bsf	3,7	;select IRP bank2
 11106  0984  0080               	movwf	0
 11107                           
 11108                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11109  0985  160A  158A  22E8  120A  158A  	fcall	_I2C_Master_Stop
 11110                           
 11111                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11112  098A  1283               	bcf	3,5	;RP0=0, select bank0
 11113  098B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11114  098C  0084               	movwf	4
 11115  098D  1783               	bsf	3,7	;select IRP bank2
 11116  098E  0800               	movf	0,w
 11117  098F  160A  158A  2325  120A  158A  	fcall	_USART_putc
 11118                           
 11119                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11120  0994  3001               	movlw	1
 11121  0995  1283               	bcf	3,5	;RP0=0, select bank0
 11122  0996  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11123  0997  3000               	movlw	0
 11124  0998  1803               	skipnc
 11125  0999  3001               	movlw	1
 11126  099A  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11127  099B  3000               	movlw	0
 11128  099C  1803               	skipnc
 11129  099D  3001               	movlw	1
 11130  099E  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11131  099F  3000               	movlw	0
 11132  09A0  1803               	skipnc
 11133  09A1  3001               	movlw	1
 11134  09A2  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11135                           
 11136                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11137  09A3  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11138  09A4  1D03               	btfss	3,2
 11139  09A5  29B4               	goto	l4131
 11140  09A6  3001               	movlw	1
 11141  09A7  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11142  09A8  1D03               	skipz
 11143  09A9  29B2               	goto	u3603
 11144  09AA  3000               	movlw	0
 11145  09AB  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11146  09AC  1D03               	skipz
 11147  09AD  29B2               	goto	u3603
 11148  09AE  3000               	movlw	0
 11149  09AF  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11150  09B0  1D03               	skipz
 11151  09B1  29B2               	goto	u3603
 11152  09B2                     u3603:
 11153  09B2  1C03               	btfss	3,0
 11154  09B3  29BB               	goto	l4133
 11155  09B4                     l4131:
 11156  09B4  3008               	movlw	8
 11157  09B5  1283               	bcf	3,5	;RP0=0, select bank0
 11158  09B6  1303               	bcf	3,6	;RP1=0, select bank0
 11159  09B7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11160  09B8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11161  09B9  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11162  09BA  29BE               	goto	l4135
 11163  09BB                     l4133:
 11164  09BB  1283               	bcf	3,5	;RP0=0, select bank0
 11165  09BC  1303               	bcf	3,6	;RP1=0, select bank0
 11166  09BD  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11167  09BE                     l4135:
 11168                           
 11169                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11170  09BE  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11171  09BF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11172  09C0  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11173  09C1  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11174                           
 11175                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11176  09C2  1003               	clrc
 11177  09C3  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11178                           
 11179                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11180  09C4  30A0               	movlw	160
 11181  09C5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11182  09C6  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11183  09C7  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11184                           
 11185                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11186  09C8  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11187                           
 11188                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11189  09C9  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11190  09CA  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11191  09CB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11192  09CC  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11193                           
 11194                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11195  09CD  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Start
 11196                           
 11197                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11198  09D2  1283               	bcf	3,5	;RP0=0, select bank0
 11199  09D3  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11200  09D4  39FE               	andlw	254
 11201  09D5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11202  09D6  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11203  09D7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11204  09D8  00A3               	movwf	I2C_Master_Write@d
 11205  09D9  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11206  09DA  00A4               	movwf	I2C_Master_Write@d+1
 11207  09DB  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11208                           
 11209                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11210  09E0  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11211  09E1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11212  09E2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11213  09E3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11214  09E4  00A3               	movwf	I2C_Master_Write@d
 11215  09E5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11216  09E6  00A4               	movwf	I2C_Master_Write@d+1
 11217  09E7  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11218                           
 11219                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11220  09EC  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11221  09ED  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11222  09EE  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11223  09EF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11224  09F0  00A3               	movwf	I2C_Master_Write@d
 11225  09F1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11226  09F2  00A4               	movwf	I2C_Master_Write@d+1
 11227  09F3  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11228                           
 11229                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11230  09F8  160A  158A  231A  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11231                           
 11232                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11233  09FD  1283               	bcf	3,5	;RP0=0, select bank0
 11234  09FE  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11235  09FF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11236  0A00  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11237  0A01  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11238  0A02  00A3               	movwf	I2C_Master_Write@d
 11239  0A03  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11240  0A04  00A4               	movwf	I2C_Master_Write@d+1
 11241  0A05  160A  158A  230F  120A  158A  	fcall	_I2C_Master_Write
 11242                           
 11243                           ;EEPROM_24C1025.c: 201:              }
 11244  0A0A  2A32               	goto	l4161
 11245  0A0B                     l4157:
 11246                           
 11247                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11248  0A0B  3001               	movlw	1
 11249  0A0C  00A3               	movwf	I2C_Master_Read@a
 11250  0A0D  3000               	movlw	0
 11251  0A0E  00A4               	movwf	I2C_Master_Read@a+1
 11252  0A0F  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 11253  0A14  0823               	movf	?_I2C_Master_Read,w
 11254  0A15  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11255  0A16  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11256  0A17  0084               	movwf	4
 11257  0A18  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11258  0A19  1783               	bsf	3,7	;select IRP bank2
 11259  0A1A  0080               	movwf	0
 11260                           
 11261                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11262  0A1B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11263  0A1C  0084               	movwf	4
 11264  0A1D  0800               	movf	0,w
 11265  0A1E  160A  158A  2325  120A  158A  	fcall	_USART_putc
 11266                           
 11267                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11268  0A23  3001               	movlw	1
 11269  0A24  1283               	bcf	3,5	;RP0=0, select bank0
 11270  0A25  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11271  0A26  3000               	movlw	0
 11272  0A27  1803               	skipnc
 11273  0A28  3001               	movlw	1
 11274  0A29  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11275  0A2A  3000               	movlw	0
 11276  0A2B  1803               	skipnc
 11277  0A2C  3001               	movlw	1
 11278  0A2D  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11279  0A2E  3000               	movlw	0
 11280  0A2F  1803               	skipnc
 11281  0A30  3001               	movlw	1
 11282  0A31  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11283  0A32                     l4161:
 11284                           
 11285                           ;EEPROM_24C1025.c: 209:         }
 11286  0A32  3001               	movlw	1
 11287  0A33  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11288  0A34  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11289  0A35  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11290  0A36  2957               	goto	l4163
 11291  0A37                     l4165:
 11292                           
 11293                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11294  0A37  3000               	movlw	0
 11295  0A38  1283               	bcf	3,5	;RP0=0, select bank0
 11296  0A39  1303               	bcf	3,6	;RP1=0, select bank0
 11297  0A3A  00A3               	movwf	I2C_Master_Read@a
 11298  0A3B  00A4               	movwf	I2C_Master_Read@a+1
 11299  0A3C  160A  158A  25E2  120A  158A  	fcall	_I2C_Master_Read
 11300                           
 11301                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11302  0A41  160A  158A  22E8  120A  158A  	fcall	_I2C_Master_Stop
 11303                           
 11304                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11305  0A46  30B9               	movlw	185
 11306  0A47  1283               	bcf	3,5	;RP0=0, select bank0
 11307  0A48  1303               	bcf	3,6	;RP1=0, select bank0
 11308  0A49  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11309  0A4A                     u5327:
 11310  0A4A  2A4B               	nop2
 11311  0A4B  2A4C               	nop2
 11312  0A4C  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11313  0A4D  2A4A               	goto	u5327
 11314  0A4E  2A4F               	nop2
 11315  0A4F  0008               	return
 11316  0A50                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11317                           
 11318                           	psect	text44
 11319  1B25                     __ptext44:	
 11320 ;; *************** function _USART_putc *****************
 11321 ;; Defined at:
 11322 ;;		line 89 in file "usart.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  value           1    wreg     unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  value           1    0[BANK0 ] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/100
 11333 ;;		On exit  : 300/100
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11336 ;;      Params:         0       0       0       0       0
 11337 ;;      Locals:         0       1       0       0       0
 11338 ;;      Temps:          0       0       0       0       0
 11339 ;;      Totals:         0       1       0       0       0
 11340 ;;Total ram usage:        1 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 1
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11347 ;;		_Decodify_Command
 11348 ;;		_Send_To_MB
 11349 ;;		_PROCULUS_Control_Register_Write
 11350 ;;		_PROCULUS_VP_Write
 11351 ;;		_USART_put_int
 11352 ;;		_USART_put_string
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           
 11357                           ;psect for function _USART_putc
 11358  1B25                     _USART_putc:
 11359                           
 11360                           ;incstack = 0
 11361                           ; Regs used in _USART_putc: [wreg]
 11362                           ;USART_putc@value stored from wreg
 11363  1B25  1283               	bcf	3,5	;RP0=0, select bank0
 11364  1B26  1303               	bcf	3,6	;RP1=0, select bank0
 11365  1B27  00A0               	movwf	USART_putc@value
 11366                           
 11367                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11368  1B28  3014               	movlw	20
 11369  1B29  1683               	bsf	3,5	;RP0=1, select bank1
 11370  1B2A  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11371  1B2B  3000               	movlw	0
 11372  1B2C  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11373  1B2D                     l868:	
 11374                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11375                           
 11376  1B2D  1C98               	btfss	24,1	;volatile
 11377  1B2E  2B2D               	goto	l868
 11378                           
 11379                           ;usart.c: 93:     TXREG=value;
 11380  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
 11381  1B30  0820               	movf	USART_putc@value,w
 11382  1B31  0099               	movwf	25	;volatile
 11383                           
 11384                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11385  1B32  1683               	bsf	3,5	;RP0=1, select bank1
 11386  1B33  1698               	bsf	24,5	;volatile
 11387  1B34  0008               	return
 11388  1B35                     __end_of_USART_putc:
 11389                           
 11390                           	psect	text45
 11391  1B1A                     __ptext45:	
 11392 ;; *************** function _I2C_Master_RepeatedStart *****************
 11393 ;; Defined at:
 11394 ;;		line 62 in file "I2C.c"
 11395 ;; Parameters:    Size  Location     Type
 11396 ;;		None
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;		None
 11399 ;; Return value:  Size  Location     Type
 11400 ;;                  1    wreg      void 
 11401 ;; Registers used:
 11402 ;;		wreg, status,2, status,0, pclath, cstack
 11403 ;; Tracked objects:
 11404 ;;		On entry : 300/0
 11405 ;;		On exit  : 200/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11408 ;;      Params:         0       0       0       0       0
 11409 ;;      Locals:         0       0       0       0       0
 11410 ;;      Temps:          0       0       0       0       0
 11411 ;;      Totals:         0       0       0       0       0
 11412 ;;Total ram usage:        0 bytes
 11413 ;; Hardware stack levels used: 1
 11414 ;; Hardware stack levels required when called: 2
 11415 ;; This function calls:
 11416 ;;		_I2C_Master_Wait
 11417 ;; This function is called by:
 11418 ;;		_EEPROM_24C1025_Read_Buffer
 11419 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11420 ;;		_EEPROM_24C1025_Read_Str
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           
 11425                           ;psect for function _I2C_Master_RepeatedStart
 11426  1B1A                     _I2C_Master_RepeatedStart:
 11427                           
 11428                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11429                           
 11430                           ;incstack = 0
 11431                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11432  1B1A  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 11433  1B1F  3A00               	xorlw	0
 11434  1B20  1903               	skipnz
 11435  1B21  0008               	return
 11436                           
 11437                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11438  1B22  1683               	bsf	3,5	;RP0=1, select bank1
 11439  1B23  1491               	bsf	17,1	;volatile
 11440  1B24  0008               	return
 11441  1B25                     __end_of_I2C_Master_RepeatedStart:
 11442                           
 11443                           	psect	text46
 11444  1DE2                     __ptext46:	
 11445 ;; *************** function _I2C_Master_Read *****************
 11446 ;; Defined at:
 11447 ;;		line 87 in file "I2C.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  a               2    3[BANK0 ] unsigned short 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  temp            2    7[BANK0 ] unsigned short 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  2    3[BANK0 ] unsigned short 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2, status,0, pclath, cstack
 11456 ;; Tracked objects:
 11457 ;;		On entry : 300/0
 11458 ;;		On exit  : 300/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11461 ;;      Params:         0       2       0       0       0
 11462 ;;      Locals:         0       2       0       0       0
 11463 ;;      Temps:          0       2       0       0       0
 11464 ;;      Totals:         0       6       0       0       0
 11465 ;;Total ram usage:        6 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 2
 11468 ;; This function calls:
 11469 ;;		_I2C_Master_Wait
 11470 ;; This function is called by:
 11471 ;;		_EEPROM_24C1025_Read_Buffer
 11472 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11473 ;;		_EEPROM_24C1025_Read_Str
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           
 11478                           ;psect for function _I2C_Master_Read
 11479  1DE2                     _I2C_Master_Read:
 11480                           
 11481                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11482                           
 11483                           ;incstack = 0
 11484                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11485  1DE2  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 11486  1DE7  3A00               	xorlw	0
 11487  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
 11488  1DE9  1D03               	btfss	3,2
 11489  1DEA  1591               	bsf	17,3	;volatile
 11490                           
 11491                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11492  1DEB  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 11493  1DF0  3A00               	xorlw	0
 11494  1DF1  1903               	skipnz
 11495  1DF2  2DFA               	goto	l3593
 11496  1DF3  0813               	movf	19,w	;volatile
 11497  1DF4  00A5               	movwf	??_I2C_Master_Read
 11498  1DF5  01A6               	clrf	??_I2C_Master_Read+1
 11499  1DF6  0825               	movf	??_I2C_Master_Read,w
 11500  1DF7  00A7               	movwf	I2C_Master_Read@temp
 11501  1DF8  0826               	movf	??_I2C_Master_Read+1,w
 11502  1DF9  00A8               	movwf	I2C_Master_Read@temp+1
 11503  1DFA                     l3593:
 11504                           
 11505                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11506  1DFA  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 11507  1DFF  3A00               	xorlw	0
 11508  1E00  1903               	skipnz
 11509  1E01  2E14               	goto	l3605
 11510                           
 11511                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11512  1E02  0823               	movf	I2C_Master_Read@a,w
 11513  1E03  0424               	iorwf	I2C_Master_Read@a+1,w
 11514  1E04  1D03               	btfss	3,2
 11515  1E05  2E0A               	goto	u2670
 11516  1E06  1683               	bsf	3,5	;RP0=1, select bank1
 11517  1E07  1303               	bcf	3,6	;RP1=0, select bank1
 11518  1E08  1691               	bsf	17,5	;volatile
 11519  1E09  2E0D               	goto	l3597
 11520  1E0A                     u2670:
 11521  1E0A  1683               	bsf	3,5	;RP0=1, select bank1
 11522  1E0B  1303               	bcf	3,6	;RP1=0, select bank1
 11523  1E0C  1291               	bcf	17,5	;volatile
 11524  1E0D                     l3597:
 11525                           
 11526                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11527  1E0D  1611               	bsf	17,4	;volatile
 11528                           
 11529                           ;I2C.c: 96:     return temp;
 11530  1E0E  1283               	bcf	3,5	;RP0=0, select bank0
 11531  1E0F  0828               	movf	I2C_Master_Read@temp+1,w
 11532  1E10  00A4               	movwf	?_I2C_Master_Read+1
 11533  1E11  0827               	movf	I2C_Master_Read@temp,w
 11534  1E12  00A3               	movwf	?_I2C_Master_Read
 11535  1E13  0008               	return
 11536  1E14                     l3605:
 11537                           
 11538                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11539  1E14  01A3               	clrf	?_I2C_Master_Read
 11540  1E15  01A4               	clrf	?_I2C_Master_Read+1
 11541  1E16  0008               	return
 11542  1E17                     __end_of_I2C_Master_Read:
 11543                           
 11544                           	psect	text47
 11545  1F36                     __ptext47:	
 11546 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11547 ;; Defined at:
 11548 ;;		line 367 in file "EEPROM_24C1025.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  chip_add        1    wreg     unsigned char 
 11551 ;;  value           2   56[BANK0 ] unsigned int 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  chip_add        1   58[BANK0 ] unsigned char 
 11554 ;;  mem_add         4   59[BANK0 ] unsigned long 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1    wreg      void 
 11557 ;; Registers used:
 11558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11559 ;; Tracked objects:
 11560 ;;		On entry : 300/300
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11564 ;;      Params:         0       2       0       0       0
 11565 ;;      Locals:         0       5       0       0       0
 11566 ;;      Temps:          0       0       0       0       0
 11567 ;;      Totals:         0       7       0       0       0
 11568 ;;Total ram usage:        7 bytes
 11569 ;; Hardware stack levels used: 1
 11570 ;; Hardware stack levels required when called: 5
 11571 ;; This function calls:
 11572 ;;		_EEPROM_24C1025_Write_Int
 11573 ;; This function is called by:
 11574 ;;		_Decodify_Command
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           
 11579                           ;psect for function _EEPROM_24C1025_Fill_All
 11580  1F36                     _EEPROM_24C1025_Fill_All:
 11581                           
 11582                           ;incstack = 0
 11583                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11584                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11585  1F36  1283               	bcf	3,5	;RP0=0, select bank0
 11586  1F37  1303               	bcf	3,6	;RP1=0, select bank0
 11587  1F38  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11588                           
 11589                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11590  1F39  3000               	movlw	0
 11591  1F3A  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11592  1F3B  3000               	movlw	0
 11593  1F3C  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11594  1F3D  3000               	movlw	0
 11595  1F3E  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11596  1F3F  3000               	movlw	0
 11597  1F40  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11598  1F41                     l5513:
 11599                           
 11600                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11601  1F41  1283               	bcf	3,5	;RP0=0, select bank0
 11602  1F42  1303               	bcf	3,6	;RP1=0, select bank0
 11603  1F43  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11604  1F44  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11605  1F45  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11606  1F46  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11607  1F47  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11608  1F48  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11609  1F49  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11610  1F4A  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11611  1F4B  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11612  1F4C  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11613  1F4D  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 11614  1F4E  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11615  1F4F  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11616  1F50  160A  158A  240A  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 11617  1F55  0064               	clrwdt	;# 
 11618                           
 11619                           ;EEPROM_24C1025.c: 373:         }
 11620  1F56  3002               	movlw	2
 11621  1F57  1283               	bcf	3,5	;RP0=0, select bank0
 11622  1F58  1303               	bcf	3,6	;RP1=0, select bank0
 11623  1F59  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11624  1F5A  3000               	movlw	0
 11625  1F5B  1803               	skipnc
 11626  1F5C  3001               	movlw	1
 11627  1F5D  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11628  1F5E  3000               	movlw	0
 11629  1F5F  1803               	skipnc
 11630  1F60  3001               	movlw	1
 11631  1F61  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11632  1F62  3000               	movlw	0
 11633  1F63  1803               	skipnc
 11634  1F64  3001               	movlw	1
 11635  1F65  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11636  1F66  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11637  1F67  1D03               	btfss	3,2
 11638  1F68  0008               	return
 11639  1F69  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11640  1F6A  1D03               	btfss	3,2
 11641  1F6B  0008               	return
 11642  1F6C  3004               	movlw	4
 11643  1F6D  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11644  1F6E  1D03               	skipz
 11645  1F6F  2F74               	goto	u5113
 11646  1F70  3000               	movlw	0
 11647  1F71  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11648  1F72  1D03               	skipz
 11649  1F73  2F74               	goto	u5113
 11650  1F74                     u5113:
 11651  1F74  1803               	btfsc	3,0
 11652  1F75  0008               	return
 11653  1F76  2F41               	goto	l5513
 11654  1F77                     __end_of_EEPROM_24C1025_Fill_All:
 11655                           
 11656                           	psect	text48
 11657  1C0A                     __ptext48:	
 11658 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11659 ;; Defined at:
 11660 ;;		line 352 in file "EEPROM_24C1025.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;  chip_add        1    wreg     unsigned char 
 11663 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11664 ;;  data            2   50[BANK0 ] int 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  chip_add        1   53[BANK0 ] unsigned char 
 11667 ;;  local           2   54[BANK0 ] unsigned char [2]
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1    wreg      void 
 11670 ;; Registers used:
 11671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/300
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11677 ;;      Params:         0       6       0       0       0
 11678 ;;      Locals:         0       3       0       0       0
 11679 ;;      Temps:          0       1       0       0       0
 11680 ;;      Totals:         0      10       0       0       0
 11681 ;;Total ram usage:       10 bytes
 11682 ;; Hardware stack levels used: 1
 11683 ;; Hardware stack levels required when called: 4
 11684 ;; This function calls:
 11685 ;;		_EEPROM_24C1025_Write_Buffer
 11686 ;; This function is called by:
 11687 ;;		_EEPROM_24C1025_Fill_All
 11688 ;;		_Decodify_Command
 11689 ;;		_Save_Log
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           
 11694                           ;psect for function _EEPROM_24C1025_Write_Int
 11695  1C0A                     _EEPROM_24C1025_Write_Int:
 11696                           
 11697                           ;incstack = 0
 11698                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11699                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11700  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
 11701  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
 11702  1C0C  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 11703                           
 11704                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 11705  1C0D  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 11706  1C0E  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11707  1C0F  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11708  1C10  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 11709                           
 11710                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 11711  1C11  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 11712  1C12  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11713  1C13  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11714  1C14  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 11715                           
 11716                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11717  1C15  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 11718  1C16  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11719  1C17  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 11720  1C18  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11721  1C19  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 11722  1C1A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11723  1C1B  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 11724  1C1C  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11725  1C1D  3002               	movlw	2
 11726  1C1E  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11727  1C1F  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11728  1C20  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11729  1C21  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11730  1C22  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11731  1C23  3000               	movlw	0
 11732  1C24  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11733  1C25  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 11734  1C26  160A  118A  2510   	fcall	_EEPROM_24C1025_Write_Buffer
 11735  1C29  0008               	return
 11736  1C2A                     __end_of_EEPROM_24C1025_Write_Int:
 11737                           
 11738                           	psect	text49
 11739  1510                     __ptext49:	
 11740 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11741 ;; Defined at:
 11742 ;;		line 15 in file "EEPROM_24C1025.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  chip_add        1    wreg     unsigned char 
 11745 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11746 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11747 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11748 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11751 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11752 ;;  range           1   21[BANK0 ] unsigned char 
 11753 ;;  count           1   19[BANK0 ] unsigned char 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/300
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11763 ;;      Params:         0       7       0       0       0
 11764 ;;      Locals:         0       4       0       0       0
 11765 ;;      Temps:          0       2       0       0       0
 11766 ;;      Totals:         0      13       0       0       0
 11767 ;;Total ram usage:       13 bytes
 11768 ;; Hardware stack levels used: 1
 11769 ;; Hardware stack levels required when called: 3
 11770 ;; This function calls:
 11771 ;;		_I2C_Master_Start
 11772 ;;		_I2C_Master_Stop
 11773 ;;		_I2C_Master_Write
 11774 ;;		_my_delay_ms_WDT
 11775 ;; This function is called by:
 11776 ;;		_EEPROM_24C1025_Write_Byte
 11777 ;;		_EEPROM_24C1025_Write_Int
 11778 ;;		_Decodify_Command
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           
 11783                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11784  1510                     _EEPROM_24C1025_Write_Buffer:
 11785                           
 11786                           ;incstack = 0
 11787                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11788                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11789  1510  1283               	bcf	3,5	;RP0=0, select bank0
 11790  1511  1303               	bcf	3,6	;RP1=0, select bank0
 11791  1512  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11792                           
 11793                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 11794  1513  3014               	movlw	20
 11795  1514  1683               	bsf	3,5	;RP0=1, select bank1
 11796  1515  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11797  1516  3000               	movlw	0
 11798  1517  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11799                           
 11800                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 11801  1518  1283               	bcf	3,5	;RP0=0, select bank0
 11802  1519  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11803  151A  1D03               	btfss	3,2
 11804  151B  0008               	return
 11805  151C  3002               	movlw	2
 11806  151D  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11807  151E  1D03               	skipz
 11808  151F  2D28               	goto	u5043
 11809  1520  3000               	movlw	0
 11810  1521  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11811  1522  1D03               	skipz
 11812  1523  2D28               	goto	u5043
 11813  1524  3000               	movlw	0
 11814  1525  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11815  1526  1D03               	skipz
 11816  1527  2D28               	goto	u5043
 11817  1528                     u5043:
 11818  1528  1803               	btfsc	3,0
 11819  1529  0008               	return
 11820                           
 11821                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11822  152A  1283               	bcf	3,5	;RP0=0, select bank0
 11823  152B  1303               	bcf	3,6	;RP1=0, select bank0
 11824  152C  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11825  152D  1D03               	btfss	3,2
 11826  152E  2D3D               	goto	l5411
 11827  152F  3001               	movlw	1
 11828  1530  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11829  1531  1D03               	skipz
 11830  1532  2D3B               	goto	u5053
 11831  1533  3000               	movlw	0
 11832  1534  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11833  1535  1D03               	skipz
 11834  1536  2D3B               	goto	u5053
 11835  1537  3000               	movlw	0
 11836  1538  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11837  1539  1D03               	skipz
 11838  153A  2D3B               	goto	u5053
 11839  153B                     u5053:
 11840  153B  1C03               	btfss	3,0
 11841  153C  2D44               	goto	l5413
 11842  153D                     l5411:
 11843  153D  3008               	movlw	8
 11844  153E  1283               	bcf	3,5	;RP0=0, select bank0
 11845  153F  1303               	bcf	3,6	;RP1=0, select bank0
 11846  1540  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11847  1541  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11848  1542  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11849  1543  2D47               	goto	l5415
 11850  1544                     l5413:
 11851  1544  1283               	bcf	3,5	;RP0=0, select bank0
 11852  1545  1303               	bcf	3,6	;RP1=0, select bank0
 11853  1546  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11854  1547                     l5415:
 11855                           
 11856                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 11857  1547  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11858  1548  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11859  1549  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11860  154A  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11861                           
 11862                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 11863  154B  1003               	clrc
 11864  154C  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11865                           
 11866                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 11867  154D  30A0               	movlw	160
 11868  154E  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11869  154F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11870  1550  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11871                           
 11872                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 11873  1551  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11874  1552  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11875  1553  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11876  1554  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11877                           
 11878                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 11879  1555  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Start
 11880                           
 11881                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 11882  155A  1283               	bcf	3,5	;RP0=0, select bank0
 11883  155B  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11884  155C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11885  155D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11886  155E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11887  155F  00A3               	movwf	I2C_Master_Write@d
 11888  1560  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11889  1561  00A4               	movwf	I2C_Master_Write@d+1
 11890  1562  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 11891                           
 11892                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 11893  1567  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11894  1568  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11895  1569  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11896  156A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11897  156B  00A3               	movwf	I2C_Master_Write@d
 11898  156C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11899  156D  00A4               	movwf	I2C_Master_Write@d+1
 11900  156E  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 11901                           
 11902                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 11903  1573  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11904  1574  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11905  1575  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11906  1576  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11907  1577  00A3               	movwf	I2C_Master_Write@d
 11908  1578  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11909  1579  00A4               	movwf	I2C_Master_Write@d+1
 11910  157A  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 11911                           
 11912                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 11913  157F  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11914  1580                     l5477:
 11915  1580  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11916  1581  3EFF               	addlw	255
 11917  1582  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11918  1583  30FF               	movlw	255
 11919  1584  1803               	skipnc
 11920  1585  3000               	movlw	0
 11921  1586  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11922  1587  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11923  1588  3A80               	xorlw	128
 11924  1589  3C80               	sublw	128
 11925  158A  1D03               	skipz
 11926  158B  2D8E               	goto	u5095
 11927  158C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11928  158D  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11929  158E                     u5095:
 11930  158E  1803               	btfsc	3,0
 11931  158F  2E61               	goto	l5479
 11932  1590  0064               	clrwdt	;# 
 11933                           
 11934                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 11935  1591  1283               	bcf	3,5	;RP0=0, select bank0
 11936  1592  1303               	bcf	3,6	;RP1=0, select bank0
 11937  1593  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11938  1594  1D03               	btfss	3,2
 11939  1595  0008               	return
 11940  1596  3002               	movlw	2
 11941  1597  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11942  1598  1D03               	skipz
 11943  1599  2DA2               	goto	u5063
 11944  159A  3000               	movlw	0
 11945  159B  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11946  159C  1D03               	skipz
 11947  159D  2DA2               	goto	u5063
 11948  159E  3000               	movlw	0
 11949  159F  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11950  15A0  1D03               	skipz
 11951  15A1  2DA2               	goto	u5063
 11952  15A2                     u5063:
 11953  15A2  1803               	btfsc	3,0
 11954  15A3  0008               	return
 11955                           
 11956                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 11957  15A4  1283               	bcf	3,5	;RP0=0, select bank0
 11958  15A5  1303               	bcf	3,6	;RP1=0, select bank0
 11959  15A6  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11960  15A7  3E01               	addlw	1
 11961  15A8  397F               	andlw	127
 11962  15A9  1D03               	btfss	3,2
 11963  15AA  2E37               	goto	l5469
 11964                           
 11965                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 11966  15AB  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11967  15AC  0084               	movwf	4
 11968  15AD  1783               	bsf	3,7
 11969  15AE  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11970  15AF  1383               	bcf	3,7
 11971  15B0  0800               	movf	0,w
 11972  15B1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11973  15B2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11974  15B3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11975  15B4  00A3               	movwf	I2C_Master_Write@d
 11976  15B5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11977  15B6  00A4               	movwf	I2C_Master_Write@d+1
 11978  15B7  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 11979                           
 11980                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 11981  15BC  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
 11982                           
 11983                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 11984  15C1  3000               	movlw	0
 11985  15C2  1283               	bcf	3,5	;RP0=0, select bank0
 11986  15C3  00A3               	movwf	my_delay_ms_WDT@time+3
 11987  15C4  3000               	movlw	0
 11988  15C5  00A2               	movwf	my_delay_ms_WDT@time+2
 11989  15C6  3000               	movlw	0
 11990  15C7  00A1               	movwf	my_delay_ms_WDT@time+1
 11991  15C8  3005               	movlw	5
 11992  15C9  00A0               	movwf	my_delay_ms_WDT@time
 11993  15CA  160A  158A  264E  160A  118A  	fcall	_my_delay_ms_WDT
 11994                           
 11995                           ;EEPROM_24C1025.c: 48:             mem_add++;
 11996  15CF  3001               	movlw	1
 11997  15D0  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11998  15D1  3000               	movlw	0
 11999  15D2  1803               	skipnc
 12000  15D3  3001               	movlw	1
 12001  15D4  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12002  15D5  3000               	movlw	0
 12003  15D6  1803               	skipnc
 12004  15D7  3001               	movlw	1
 12005  15D8  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12006  15D9  3000               	movlw	0
 12007  15DA  1803               	skipnc
 12008  15DB  3001               	movlw	1
 12009  15DC  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12010                           
 12011                           ;EEPROM_24C1025.c: 49:             data++;
 12012  15DD  3001               	movlw	1
 12013  15DE  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12014  15DF  1803               	skipnc
 12015  15E0  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12016  15E1  3000               	movlw	0
 12017  15E2  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12018                           
 12019                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12020  15E3  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12021  15E4  1D03               	btfss	3,2
 12022  15E5  2DF4               	goto	l5449
 12023  15E6  3001               	movlw	1
 12024  15E7  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12025  15E8  1D03               	skipz
 12026  15E9  2DF2               	goto	u5083
 12027  15EA  3000               	movlw	0
 12028  15EB  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12029  15EC  1D03               	skipz
 12030  15ED  2DF2               	goto	u5083
 12031  15EE  3000               	movlw	0
 12032  15EF  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12033  15F0  1D03               	skipz
 12034  15F1  2DF2               	goto	u5083
 12035  15F2                     u5083:
 12036  15F2  1C03               	btfss	3,0
 12037  15F3  2DFB               	goto	l5451
 12038  15F4                     l5449:
 12039  15F4  3008               	movlw	8
 12040  15F5  1283               	bcf	3,5	;RP0=0, select bank0
 12041  15F6  1303               	bcf	3,6	;RP1=0, select bank0
 12042  15F7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12043  15F8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12044  15F9  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12045  15FA  2DFE               	goto	l5453
 12046  15FB                     l5451:
 12047  15FB  1283               	bcf	3,5	;RP0=0, select bank0
 12048  15FC  1303               	bcf	3,6	;RP1=0, select bank0
 12049  15FD  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12050  15FE                     l5453:
 12051                           
 12052                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12053  15FE  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12054  15FF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12055  1600  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12056  1601  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12057                           
 12058                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12059  1602  1003               	clrc
 12060  1603  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12061                           
 12062                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12063  1604  30A0               	movlw	160
 12064  1605  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12065  1606  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12066  1607  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12067                           
 12068                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12069  1608  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12070  1609  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12071  160A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12072  160B  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12073                           
 12074                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12075  160C  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Start
 12076                           
 12077                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12078  1611  1283               	bcf	3,5	;RP0=0, select bank0
 12079  1612  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12080  1613  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12081  1614  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12082  1615  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12083  1616  00A3               	movwf	I2C_Master_Write@d
 12084  1617  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12085  1618  00A4               	movwf	I2C_Master_Write@d+1
 12086  1619  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 12087                           
 12088                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12089  161E  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12090  161F  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12091  1620  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12092  1621  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12093  1622  00A3               	movwf	I2C_Master_Write@d
 12094  1623  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12095  1624  00A4               	movwf	I2C_Master_Write@d+1
 12096  1625  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 12097                           
 12098                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12099  162A  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12100  162B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12101  162C  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12102  162D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12103  162E  00A3               	movwf	I2C_Master_Write@d
 12104  162F  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12105  1630  00A4               	movwf	I2C_Master_Write@d+1
 12106  1631  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 12107                           
 12108                           ;EEPROM_24C1025.c: 60:             }
 12109  1636  2E5C               	goto	l5475
 12110  1637                     l5469:
 12111                           
 12112                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12113  1637  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12114  1638  0084               	movwf	4
 12115  1639  1783               	bsf	3,7
 12116  163A  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12117  163B  1383               	bcf	3,7
 12118  163C  0800               	movf	0,w
 12119  163D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12120  163E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12121  163F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12122  1640  00A3               	movwf	I2C_Master_Write@d
 12123  1641  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12124  1642  00A4               	movwf	I2C_Master_Write@d+1
 12125  1643  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 12126                           
 12127                           ;EEPROM_24C1025.c: 64:             data++;
 12128  1648  3001               	movlw	1
 12129  1649  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12130  164A  1803               	skipnc
 12131  164B  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12132  164C  3000               	movlw	0
 12133  164D  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12134                           
 12135                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12136  164E  3001               	movlw	1
 12137  164F  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12138  1650  3000               	movlw	0
 12139  1651  1803               	skipnc
 12140  1652  3001               	movlw	1
 12141  1653  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12142  1654  3000               	movlw	0
 12143  1655  1803               	skipnc
 12144  1656  3001               	movlw	1
 12145  1657  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12146  1658  3000               	movlw	0
 12147  1659  1803               	skipnc
 12148  165A  3001               	movlw	1
 12149  165B  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12150  165C                     l5475:
 12151                           
 12152                           ;EEPROM_24C1025.c: 67:      }
 12153  165C  3001               	movlw	1
 12154  165D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12155  165E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12156  165F  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12157  1660  2D80               	goto	l5477
 12158  1661                     l5479:
 12159                           
 12160                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12161  1661  1283               	bcf	3,5	;RP0=0, select bank0
 12162  1662  1303               	bcf	3,6	;RP1=0, select bank0
 12163  1663  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12164  1664  0084               	movwf	4
 12165  1665  1783               	bsf	3,7
 12166  1666  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12167  1667  1383               	bcf	3,7
 12168  1668  0800               	movf	0,w
 12169  1669  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12170  166A  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12171  166B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12172  166C  00A3               	movwf	I2C_Master_Write@d
 12173  166D  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12174  166E  00A4               	movwf	I2C_Master_Write@d+1
 12175  166F  160A  158A  230F  160A  118A  	fcall	_I2C_Master_Write
 12176                           
 12177                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12178  1674  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Stop
 12179                           
 12180                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12181  1679  3000               	movlw	0
 12182  167A  1283               	bcf	3,5	;RP0=0, select bank0
 12183  167B  00A3               	movwf	my_delay_ms_WDT@time+3
 12184  167C  3000               	movlw	0
 12185  167D  00A2               	movwf	my_delay_ms_WDT@time+2
 12186  167E  3000               	movlw	0
 12187  167F  00A1               	movwf	my_delay_ms_WDT@time+1
 12188  1680  3005               	movlw	5
 12189  1681  00A0               	movwf	my_delay_ms_WDT@time
 12190  1682  160A  158A  264E   	fcall	_my_delay_ms_WDT
 12191  1685  0008               	return
 12192  1686                     __end_of_EEPROM_24C1025_Write_Buffer:
 12193                           
 12194                           	psect	text50
 12195  1E4E                     __ptext50:	
 12196 ;; *************** function _my_delay_ms_WDT *****************
 12197 ;; Defined at:
 12198 ;;		line 13 in file "my_delay.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  time            4    0[BANK0 ] long 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  i               4    6[BANK0 ] long 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg, btemp+1
 12207 ;; Tracked objects:
 12208 ;;		On entry : 300/0
 12209 ;;		On exit  : 300/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12212 ;;      Params:         0       4       0       0       0
 12213 ;;      Locals:         0       4       0       0       0
 12214 ;;      Temps:          0       2       0       0       0
 12215 ;;      Totals:         0      10       0       0       0
 12216 ;;Total ram usage:       10 bytes
 12217 ;; Hardware stack levels used: 1
 12218 ;; Hardware stack levels required when called: 1
 12219 ;; This function calls:
 12220 ;;		Nothing
 12221 ;; This function is called by:
 12222 ;;		_EEPROM_24C1025_Write_Buffer
 12223 ;;		_EEPROM_24C1025_Read_Buffer
 12224 ;;		_EEPROM_24C1025_Write_Str
 12225 ;;		_main
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _my_delay_ms_WDT
 12231  1E4E                     _my_delay_ms_WDT:
 12232                           
 12233                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12237  1E4E  3000               	movlw	0
 12238  1E4F  00A9               	movwf	my_delay_ms_WDT@i+3
 12239  1E50  3000               	movlw	0
 12240  1E51  00A8               	movwf	my_delay_ms_WDT@i+2
 12241  1E52  3000               	movlw	0
 12242  1E53  00A7               	movwf	my_delay_ms_WDT@i+1
 12243  1E54  3000               	movlw	0
 12244  1E55  00A6               	movwf	my_delay_ms_WDT@i
 12245  1E56                     l3489:
 12246  1E56  0829               	movf	my_delay_ms_WDT@i+3,w
 12247  1E57  3A80               	xorlw	128
 12248  1E58  00FF               	movwf	127
 12249  1E59  0823               	movf	my_delay_ms_WDT@time+3,w
 12250  1E5A  3A80               	xorlw	128
 12251  1E5B  027F               	subwf	127,w
 12252  1E5C  1D03               	skipz
 12253  1E5D  2E68               	goto	u2553
 12254  1E5E  0822               	movf	my_delay_ms_WDT@time+2,w
 12255  1E5F  0228               	subwf	my_delay_ms_WDT@i+2,w
 12256  1E60  1D03               	skipz
 12257  1E61  2E68               	goto	u2553
 12258  1E62  0821               	movf	my_delay_ms_WDT@time+1,w
 12259  1E63  0227               	subwf	my_delay_ms_WDT@i+1,w
 12260  1E64  1D03               	skipz
 12261  1E65  2E68               	goto	u2553
 12262  1E66  0820               	movf	my_delay_ms_WDT@time,w
 12263  1E67  0226               	subwf	my_delay_ms_WDT@i,w
 12264  1E68                     u2553:
 12265  1E68  1803               	btfsc	3,0
 12266  1E69  0008               	return
 12267  1E6A  0064               	clrwdt	;# 
 12268                           
 12269                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12270  1E6B  3003               	movlw	3
 12271  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
 12272  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
 12273  1E6E  00A5               	movwf	??_my_delay_ms_WDT+1
 12274  1E6F  3097               	movlw	151
 12275  1E70  00A4               	movwf	??_my_delay_ms_WDT
 12276  1E71                     u5337:
 12277  1E71  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12278  1E72  2E71               	goto	u5337
 12279  1E73  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12280  1E74  2E71               	goto	u5337
 12281                           
 12282                           ;my_delay.c: 19:             }
 12283  1E75  3001               	movlw	1
 12284  1E76  1283               	bcf	3,5	;RP0=0, select bank0
 12285  1E77  1303               	bcf	3,6	;RP1=0, select bank0
 12286  1E78  07A6               	addwf	my_delay_ms_WDT@i,f
 12287  1E79  3000               	movlw	0
 12288  1E7A  1803               	skipnc
 12289  1E7B  3001               	movlw	1
 12290  1E7C  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12291  1E7D  3000               	movlw	0
 12292  1E7E  1803               	skipnc
 12293  1E7F  3001               	movlw	1
 12294  1E80  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12295  1E81  3000               	movlw	0
 12296  1E82  1803               	skipnc
 12297  1E83  3001               	movlw	1
 12298  1E84  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12299  1E85  2E56               	goto	l3489
 12300  1E86                     __end_of_my_delay_ms_WDT:
 12301                           
 12302                           	psect	text51
 12303  1B0F                     __ptext51:	
 12304 ;; *************** function _I2C_Master_Write *****************
 12305 ;; Defined at:
 12306 ;;		line 79 in file "I2C.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;  d               2    3[BANK0 ] unsigned int 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, status,2, status,0, pclath, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 300/0
 12317 ;;		On exit  : 300/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12320 ;;      Params:         0       2       0       0       0
 12321 ;;      Locals:         0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0
 12323 ;;      Totals:         0       2       0       0       0
 12324 ;;Total ram usage:        2 bytes
 12325 ;; Hardware stack levels used: 1
 12326 ;; Hardware stack levels required when called: 2
 12327 ;; This function calls:
 12328 ;;		_I2C_Master_Wait
 12329 ;; This function is called by:
 12330 ;;		_EEPROM_24C1025_Write_Buffer
 12331 ;;		_EEPROM_24C1025_Read_Buffer
 12332 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12333 ;;		_EEPROM_24C1025_Write_Str
 12334 ;;		_EEPROM_24C1025_Read_Str
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           
 12339                           ;psect for function _I2C_Master_Write
 12340  1B0F                     _I2C_Master_Write:
 12341                           
 12342                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12343                           
 12344                           ;incstack = 0
 12345                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12346  1B0F  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 12347  1B14  3A00               	xorlw	0
 12348  1B15  1903               	skipnz
 12349  1B16  0008               	return
 12350                           
 12351                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12352  1B17  0823               	movf	I2C_Master_Write@d,w
 12353  1B18  0093               	movwf	19	;volatile
 12354  1B19  0008               	return
 12355  1B1A                     __end_of_I2C_Master_Write:
 12356                           
 12357                           	psect	text52
 12358  1AE8                     __ptext52:	
 12359 ;; *************** function _I2C_Master_Stop *****************
 12360 ;; Defined at:
 12361 ;;		line 70 in file "I2C.c"
 12362 ;; Parameters:    Size  Location     Type
 12363 ;;		None
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;		None
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  1    wreg      void 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0, pclath, cstack
 12370 ;; Tracked objects:
 12371 ;;		On entry : 300/800
 12372 ;;		On exit  : 200/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12375 ;;      Params:         0       0       0       0       0
 12376 ;;      Locals:         0       0       0       0       0
 12377 ;;      Temps:          0       0       0       0       0
 12378 ;;      Totals:         0       0       0       0       0
 12379 ;;Total ram usage:        0 bytes
 12380 ;; Hardware stack levels used: 1
 12381 ;; Hardware stack levels required when called: 2
 12382 ;; This function calls:
 12383 ;;		_I2C_Master_Wait
 12384 ;; This function is called by:
 12385 ;;		_EEPROM_24C1025_Write_Buffer
 12386 ;;		_EEPROM_24C1025_Read_Buffer
 12387 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12388 ;;		_EEPROM_24C1025_Write_Str
 12389 ;;		_EEPROM_24C1025_Read_Str
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           
 12394                           ;psect for function _I2C_Master_Stop
 12395  1AE8                     _I2C_Master_Stop:
 12396                           
 12397                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12398                           
 12399                           ;incstack = 0
 12400                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12401  1AE8  160A  158A  244A   	fcall	_I2C_Master_Wait
 12402  1AEB  3A00               	xorlw	0
 12403                           
 12404                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12405  1AEC  1683               	bsf	3,5	;RP0=1, select bank1
 12406  1AED  1D03               	btfss	3,2
 12407  1AEE  1511               	bsf	17,2	;volatile
 12408                           
 12409                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12410                           
 12411                           ;I2C.c: 75:     }
 12412  1AEF  178B               	bsf	11,7	;volatile
 12413  1AF0  0008               	return
 12414  1AF1                     __end_of_I2C_Master_Stop:
 12415                           
 12416                           	psect	text53
 12417  1B35                     __ptext53:	
 12418 ;; *************** function _I2C_Master_Start *****************
 12419 ;; Defined at:
 12420 ;;		line 52 in file "I2C.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;		None
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      void 
 12427 ;; Registers used:
 12428 ;;		wreg, status,2, status,0, pclath, cstack
 12429 ;; Tracked objects:
 12430 ;;		On entry : 300/0
 12431 ;;		On exit  : 200/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12434 ;;      Params:         0       0       0       0       0
 12435 ;;      Locals:         0       0       0       0       0
 12436 ;;      Temps:          0       0       0       0       0
 12437 ;;      Totals:         0       0       0       0       0
 12438 ;;Total ram usage:        0 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 2
 12441 ;; This function calls:
 12442 ;;		_I2C_Master_Wait
 12443 ;; This function is called by:
 12444 ;;		_EEPROM_24C1025_Write_Buffer
 12445 ;;		_EEPROM_24C1025_Read_Buffer
 12446 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12447 ;;		_EEPROM_24C1025_Write_Str
 12448 ;;		_EEPROM_24C1025_Read_Str
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           
 12453                           ;psect for function _I2C_Master_Start
 12454  1B35                     _I2C_Master_Start:
 12455                           
 12456                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12457                           
 12458                           ;incstack = 0
 12459                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12460  1B35  138B               	bcf	11,7	;volatile
 12461                           
 12462                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12463  1B36  3014               	movlw	20
 12464  1B37  1683               	bsf	3,5	;RP0=1, select bank1
 12465  1B38  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12466  1B39  3000               	movlw	0
 12467  1B3A  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12468                           
 12469                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12470  1B3B  160A  158A  244A  160A  158A  	fcall	_I2C_Master_Wait
 12471  1B40  3A00               	xorlw	0
 12472  1B41  1903               	skipnz
 12473  1B42  0008               	return
 12474                           
 12475                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12476  1B43  1683               	bsf	3,5	;RP0=1, select bank1
 12477  1B44  1411               	bsf	17,0	;volatile
 12478  1B45  0008               	return
 12479  1B46                     __end_of_I2C_Master_Start:
 12480                           
 12481                           	psect	text54
 12482  1C4A                     __ptext54:	
 12483 ;; *************** function _I2C_Master_Wait *****************
 12484 ;; Defined at:
 12485 ;;		line 37 in file "I2C.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;		None
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;  tempo           1    2[BANK0 ] unsigned char 
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  1    wreg      unsigned char 
 12492 ;; Registers used:
 12493 ;;		wreg, status,2, status,0
 12494 ;; Tracked objects:
 12495 ;;		On entry : 200/0
 12496 ;;		On exit  : 300/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12499 ;;      Params:         0       0       0       0       0
 12500 ;;      Locals:         0       1       0       0       0
 12501 ;;      Temps:          0       2       0       0       0
 12502 ;;      Totals:         0       3       0       0       0
 12503 ;;Total ram usage:        3 bytes
 12504 ;; Hardware stack levels used: 1
 12505 ;; Hardware stack levels required when called: 1
 12506 ;; This function calls:
 12507 ;;		Nothing
 12508 ;; This function is called by:
 12509 ;;		_I2C_Master_Start
 12510 ;;		_I2C_Master_RepeatedStart
 12511 ;;		_I2C_Master_Stop
 12512 ;;		_I2C_Master_Write
 12513 ;;		_I2C_Master_Read
 12514 ;; This function uses a non-reentrant model
 12515 ;;
 12516                           
 12517                           
 12518                           ;psect for function _I2C_Master_Wait
 12519  1C4A                     _I2C_Master_Wait:
 12520                           
 12521                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12522                           
 12523                           ;incstack = 0
 12524                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12525  1C4A  30C8               	movlw	200
 12526  1C4B  1283               	bcf	3,5	;RP0=0, select bank0
 12527  1C4C  00A0               	movwf	??_I2C_Master_Wait
 12528  1C4D  0820               	movf	??_I2C_Master_Wait,w
 12529  1C4E  00A2               	movwf	I2C_Master_Wait@tempo
 12530                           
 12531                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12532  1C4F  2C5C               	goto	l3461
 12533  1C50                     l3457:
 12534                           
 12535                           ;I2C.c: 44:          tempo--;
 12536  1C50  3001               	movlw	1
 12537  1C51  02A2               	subwf	I2C_Master_Wait@tempo,f
 12538                           
 12539                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12540  1C52  3003               	movlw	3
 12541  1C53  1283               	bcf	3,5	;RP0=0, select bank0
 12542  1C54  1303               	bcf	3,6	;RP1=0, select bank0
 12543  1C55  00A1               	movwf	??_I2C_Master_Wait+1
 12544  1C56  3097               	movlw	151
 12545  1C57  00A0               	movwf	??_I2C_Master_Wait
 12546  1C58                     u5347:
 12547  1C58  0BA0               	decfsz	??_I2C_Master_Wait,f
 12548  1C59  2C58               	goto	u5347
 12549  1C5A  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12550  1C5B  2C58               	goto	u5347
 12551  1C5C                     l3461:
 12552                           
 12553                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12554  1C5C  1683               	bsf	3,5	;RP0=1, select bank1
 12555  1C5D  1303               	bcf	3,6	;RP1=0, select bank1
 12556  1C5E  1914               	btfsc	20,2	;volatile
 12557  1C5F  2C64               	goto	l3455
 12558  1C60  0811               	movf	17,w	;volatile
 12559  1C61  391F               	andlw	31
 12560  1C62  1903               	btfsc	3,2
 12561  1C63  2C68               	goto	l3465
 12562  1C64                     l3455:
 12563                           
 12564                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12565  1C64  1283               	bcf	3,5	;RP0=0, select bank0
 12566  1C65  0822               	movf	I2C_Master_Wait@tempo,w
 12567  1C66  1D03               	btfss	3,2
 12568  1C67  2C50               	goto	l3457
 12569  1C68                     l3465:
 12570                           
 12571                           ;I2C.c: 49:   return tempo ;
 12572  1C68  1283               	bcf	3,5	;RP0=0, select bank0
 12573  1C69  0822               	movf	I2C_Master_Wait@tempo,w
 12574  1C6A  0008               	return
 12575  1C6B                     __end_of_I2C_Master_Wait:
 12576                           
 12577                           	psect	text55
 12578  1B04                     __ptext55:	
 12579 ;; *************** function _ADC_init *****************
 12580 ;; Defined at:
 12581 ;;		line 10 in file "adc.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;		None
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, status,2, status,0
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/100
 12592 ;;		On exit  : 300/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12595 ;;      Params:         0       0       0       0       0
 12596 ;;      Locals:         0       0       0       0       0
 12597 ;;      Temps:          0       0       0       0       0
 12598 ;;      Totals:         0       0       0       0       0
 12599 ;;Total ram usage:        0 bytes
 12600 ;; Hardware stack levels used: 1
 12601 ;; Hardware stack levels required when called: 1
 12602 ;; This function calls:
 12603 ;;		Nothing
 12604 ;; This function is called by:
 12605 ;;		_main
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           
 12610                           ;psect for function _ADC_init
 12611  1B04                     _ADC_init:
 12612                           
 12613                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12614                           
 12615                           ;incstack = 0
 12616                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12617  1B04  30C0               	movlw	192
 12618  1B05  1283               	bcf	3,5	;RP0=0, select bank0
 12619  1B06  1303               	bcf	3,6	;RP1=0, select bank0
 12620  1B07  049F               	iorwf	31,f	;volatile
 12621                           
 12622                           ;adc.c: 12:      ADCON1=0b10000000;
 12623  1B08  3080               	movlw	128
 12624  1B09  1683               	bsf	3,5	;RP0=1, select bank1
 12625  1B0A  009F               	movwf	31	;volatile
 12626                           
 12627                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12628  1B0B  179F               	bsf	31,7	;volatile
 12629                           
 12630                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12631  1B0C  1283               	bcf	3,5	;RP0=0, select bank0
 12632  1B0D  141F               	bsf	31,0	;volatile
 12633  1B0E  0008               	return
 12634  1B0F                     __end_of_ADC_init:
 12635                           
 12636                           	psect	text56
 12637  1237                     __ptext56:	
 12638 ;; *************** function _isr *****************
 12639 ;; Defined at:
 12640 ;;		line 29 in file "isr.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  tempo           2    6[COMMON] unsigned int 
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 300/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12654 ;;      Params:         0       0       0       0       0
 12655 ;;      Locals:         2       0       0       0       0
 12656 ;;      Temps:          6       0       0       0       0
 12657 ;;      Totals:         8       0       0       0       0
 12658 ;;Total ram usage:        8 bytes
 12659 ;; Hardware stack levels used: 1
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		Interrupt level 1
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           
 12668                           ;psect for function _isr
 12669  1237                     _isr:
 12670                           
 12671                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12672  1237  188B               	btfsc	11,1	;volatile
 12673                           
 12674                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12675  1238  108B               	bcf	11,1	;volatile
 12676                           
 12677                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12678                           
 12679                           ;isr.c: 37:       }
 12680  1239  1C0C               	btfss	12,0	;volatile
 12681  123A  2AB1               	goto	i1l5335
 12682                           
 12683                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12684  123B  30B1               	movlw	177
 12685  123C  008F               	movwf	15	;volatile
 12686                           
 12687                           ;isr.c: 42:                 TMR1L=0xF3;
 12688  123D  30F3               	movlw	243
 12689  123E  008E               	movwf	14	;volatile
 12690                           
 12691                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12692  123F  100C               	bcf	12,0	;volatile
 12693                           
 12694                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12695  1240  1FEF               	btfss	_generic_status,7
 12696  1241  2A44               	goto	i1l5291
 12697                           
 12698                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12699  1242  13EF               	bcf	_generic_status,7
 12700  1243  0064               	clrwdt	;# 
 12701  1244                     i1l5291:
 12702                           
 12703                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12704  1244  300A               	movlw	10
 12705  1245  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12706  1246  1803               	skipnc
 12707  1247  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12708  1248  3000               	movlw	0
 12709  1249  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12710                           
 12711                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12712  124A  3003               	movlw	3
 12713  124B  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12714  124C  30E8               	movlw	232
 12715  124D  1903               	skipnz
 12716  124E  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12717  124F  1C03               	skipc
 12718  1250  2A53               	goto	i1l5295
 12719                           
 12720                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12721  1251  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12722  1252  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12723  1253                     i1l5295:
 12724                           
 12725                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12726  1253  3001               	movlw	1
 12727  1254  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12728  1255  30F4               	movlw	244
 12729  1256  1903               	skipnz
 12730  1257  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12731  1258  1803               	skipnc
 12732  1259  2A5E               	goto	i1l632
 12733                           
 12734                           ;isr.c: 55:                    PORTBbits.RB7=1;
 12735  125A  1283               	bcf	3,5	;RP0=0, select bank0
 12736  125B  1303               	bcf	3,6	;RP1=0, select bank0
 12737  125C  1786               	bsf	6,7	;volatile
 12738  125D  2A61               	goto	i1l5299
 12739  125E                     i1l632:	
 12740                           ;isr.c: 56:                 else
 12741                           
 12742                           
 12743                           ;isr.c: 57:                    PORTBbits.RB7=0;
 12744  125E  1283               	bcf	3,5	;RP0=0, select bank0
 12745  125F  1303               	bcf	3,6	;RP1=0, select bank0
 12746  1260  1386               	bcf	6,7	;volatile
 12747  1261                     i1l5299:
 12748                           
 12749                           ;isr.c: 60:                 if(Delay_Led_Usart){
 12750  1261  1683               	bsf	3,5	;RP0=1, select bank1
 12751  1262  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 12752  1263  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 12753  1264  1903               	btfsc	3,2
 12754  1265  2A6F               	goto	i1l634
 12755                           
 12756                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 12757  1266  300A               	movlw	10
 12758  1267  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 12759  1268  3000               	movlw	0
 12760  1269  1C03               	skipc
 12761  126A  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12762  126B  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12763                           
 12764                           ;isr.c: 62:                    PORTBbits.RB6=1;
 12765  126C  1283               	bcf	3,5	;RP0=0, select bank0
 12766  126D  1706               	bsf	6,6	;volatile
 12767                           
 12768                           ;isr.c: 63:                    }
 12769  126E  2A71               	goto	i1l5305
 12770  126F                     i1l634:	
 12771                           ;isr.c: 64:                 else{
 12772                           
 12773                           
 12774                           ;isr.c: 65:                    PORTBbits.RB6=0;
 12775  126F  1283               	bcf	3,5	;RP0=0, select bank0
 12776  1270  1306               	bcf	6,6	;volatile
 12777  1271                     i1l5305:
 12778                           
 12779                           ;isr.c: 68:                 if(Delay_Led_Memory){
 12780  1271  1683               	bsf	3,5	;RP0=1, select bank1
 12781  1272  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 12782  1273  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 12783  1274  1903               	btfsc	3,2
 12784  1275  2A7F               	goto	i1l636
 12785                           
 12786                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 12787  1276  300A               	movlw	10
 12788  1277  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 12789  1278  3000               	movlw	0
 12790  1279  1C03               	skipc
 12791  127A  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12792  127B  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12793                           
 12794                           ;isr.c: 70:                    PORTBbits.RB5=1;
 12795  127C  1283               	bcf	3,5	;RP0=0, select bank0
 12796  127D  1686               	bsf	6,5	;volatile
 12797                           
 12798                           ;isr.c: 71:                    }
 12799  127E  2A81               	goto	i1l5311
 12800  127F                     i1l636:	
 12801                           ;isr.c: 72:                 else{
 12802                           
 12803                           
 12804                           ;isr.c: 73:                    PORTBbits.RB5=0;
 12805  127F  1283               	bcf	3,5	;RP0=0, select bank0
 12806  1280  1286               	bcf	6,5	;volatile
 12807  1281                     i1l5311:
 12808                           
 12809                           ;isr.c: 77:                 tempodecorrido+=10;
 12810  1281  300A               	movlw	10
 12811  1282  1683               	bsf	3,5	;RP0=1, select bank1
 12812  1283  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 12813  1284  1803               	skipnc
 12814  1285  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 12815  1286  3000               	movlw	0
 12816  1287  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 12817                           
 12818                           ;isr.c: 78:                 milisegundo+=10;
 12819  1288  300A               	movlw	10
 12820  1289  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 12821  128A  1803               	skipnc
 12822  128B  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 12823  128C  3000               	movlw	0
 12824  128D  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 12825                           
 12826                           ;isr.c: 79:                 if(milisegundo==1000){
 12827  128E  30E8               	movlw	232
 12828  128F  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 12829  1290  3003               	movlw	3
 12830  1291  1903               	skipnz
 12831  1292  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 12832  1293  1D03               	btfss	3,2
 12833  1294  2AB1               	goto	i1l5335
 12834                           
 12835                           ;isr.c: 80:                    milisegundo=0;
 12836  1295  01B0               	clrf	_milisegundo^(0+128)	;volatile
 12837  1296  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 12838                           
 12839                           ;isr.c: 81:                    segundo++;
 12840  1297  3001               	movlw	1
 12841  1298  00F0               	movwf	??_isr
 12842  1299  0870               	movf	??_isr,w
 12843  129A  07FD               	addwf	_segundo,f	;volatile
 12844                           
 12845                           ;isr.c: 88:                    if(segundo==60){
 12846  129B  303C               	movlw	60
 12847  129C  067D               	xorwf	_segundo,w	;volatile
 12848  129D  1D03               	btfss	3,2
 12849  129E  2AB1               	goto	i1l5335
 12850                           
 12851                           ;isr.c: 89:                       segundo=0;
 12852  129F  01FD               	clrf	_segundo	;volatile
 12853                           
 12854                           ;isr.c: 90:                       minuto++;
 12855  12A0  3001               	movlw	1
 12856  12A1  00F0               	movwf	??_isr
 12857  12A2  0870               	movf	??_isr,w
 12858  12A3  07FA               	addwf	_minuto,f	;volatile
 12859                           
 12860                           ;isr.c: 91:                       if(minuto==60){
 12861  12A4  303C               	movlw	60
 12862  12A5  067A               	xorwf	_minuto,w	;volatile
 12863  12A6  1D03               	btfss	3,2
 12864  12A7  2AB1               	goto	i1l5335
 12865                           
 12866                           ;isr.c: 92:                          minuto=0;
 12867  12A8  01FA               	clrf	_minuto	;volatile
 12868                           
 12869                           ;isr.c: 93:                          hora++;
 12870  12A9  3001               	movlw	1
 12871  12AA  00F0               	movwf	??_isr
 12872  12AB  0870               	movf	??_isr,w
 12873  12AC  07FC               	addwf	_hora,f	;volatile
 12874                           
 12875                           ;isr.c: 94:                          if(hora==24){
 12876  12AD  3018               	movlw	24
 12877  12AE  067C               	xorwf	_hora,w	;volatile
 12878  12AF  1903               	btfsc	3,2
 12879                           
 12880                           ;isr.c: 95:                             hora=0;
 12881  12B0  01FC               	clrf	_hora	;volatile
 12882  12B1                     i1l5335:	
 12883                           ;isr.c: 99:                 }
 12884                           
 12885                           
 12886                           ;isr.c: 104:     if(PIR1bits.RCIF)
 12887  12B1  1283               	bcf	3,5	;RP0=0, select bank0
 12888  12B2  1E8C               	btfss	12,5	;volatile
 12889  12B3  2B17               	goto	i1l650
 12890                           
 12891                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 12892  12B4  146F               	bsf	_generic_status,0
 12893                           
 12894                           ;isr.c: 109:         tempo=30;
 12895  12B5  301E               	movlw	30
 12896  12B6  00F6               	movwf	isr@tempo
 12897  12B7  3000               	movlw	0
 12898  12B8  00F7               	movwf	isr@tempo+1
 12899                           
 12900                           ;isr.c: 110:         count=0;
 12901  12B9  1683               	bsf	3,5	;RP0=1, select bank1
 12902  12BA  01AC               	clrf	_count^(0+128)	;volatile
 12903  12BB  01AD               	clrf	(_count+1)^(0+128)	;volatile
 12904                           
 12905                           ;isr.c: 111:         pointer=usart_buffer;
 12906  12BC  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 12907  12BD  00F0               	movwf	??_isr
 12908  12BE  0870               	movf	??_isr,w
 12909  12BF  00B6               	movwf	_pointer^(0+128)
 12910  12C0                     i1l5357:	
 12911                           ;isr.c: 112:         while(tempo)
 12912                           
 12913                           
 12914                           ;isr.c: 112:         while(tempo)
 12915  12C0  0876               	movf	isr@tempo,w
 12916  12C1  0477               	iorwf	isr@tempo+1,w
 12917  12C2  1903               	btfsc	3,2
 12918  12C3  2AF3               	goto	i1l5359
 12919                           
 12920                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 12921  12C4  1283               	bcf	3,5	;RP0=0, select bank0
 12922  12C5  1303               	bcf	3,6	;RP1=0, select bank0
 12923  12C6  1E8C               	btfss	12,5	;volatile
 12924  12C7  2AEC               	goto	i1l5355
 12925                           
 12926                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 12927  12C8  081A               	movf	26,w	;volatile
 12928  12C9  00F0               	movwf	??_isr
 12929  12CA  1683               	bsf	3,5	;RP0=1, select bank1
 12930  12CB  0836               	movf	_pointer^(0+128),w
 12931  12CC  0084               	movwf	4
 12932  12CD  0870               	movf	??_isr,w
 12933  12CE  1783               	bsf	3,7	;select IRP bank2
 12934  12CF  0080               	movwf	0
 12935                           
 12936                           ;isr.c: 118:                 if(count<32+20 -1)
 12937  12D0  082D               	movf	(_count+1)^(0+128),w	;volatile
 12938  12D1  3A80               	xorlw	128
 12939  12D2  00FF               	movwf	127
 12940  12D3  3080               	movlw	128
 12941  12D4  027F               	subwf	127,w
 12942  12D5  1D03               	skipz
 12943  12D6  2AD9               	goto	u501_25
 12944  12D7  3033               	movlw	51
 12945  12D8  022C               	subwf	_count^(0+128),w	;volatile
 12946  12D9                     u501_25:
 12947  12D9  1803               	skipnc
 12948  12DA  2AE7               	goto	i1l5353
 12949                           
 12950                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 12951  12DB  3001               	movlw	1
 12952  12DC  1683               	bsf	3,5	;RP0=1, select bank1
 12953  12DD  1303               	bcf	3,6	;RP1=0, select bank1
 12954  12DE  07AC               	addwf	_count^(0+128),f	;volatile
 12955  12DF  1803               	skipnc
 12956  12E0  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 12957  12E1  3000               	movlw	0
 12958  12E2  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 12959                           
 12960                           ;isr.c: 121:                    pointer++;
 12961  12E3  3001               	movlw	1
 12962  12E4  00F0               	movwf	??_isr
 12963  12E5  0870               	movf	??_isr,w
 12964  12E6  07B6               	addwf	_pointer^(0+128),f
 12965  12E7                     i1l5353:
 12966                           
 12967                           ;isr.c: 123:                 tempo=30;
 12968  12E7  301E               	movlw	30
 12969  12E8  00F6               	movwf	isr@tempo
 12970  12E9  3000               	movlw	0
 12971  12EA  00F7               	movwf	isr@tempo+1
 12972                           
 12973                           ;isr.c: 124:             }
 12974  12EB  2AC0               	goto	i1l5357
 12975  12EC                     i1l5355:
 12976                           
 12977                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 12978  12EC  3001               	movlw	1
 12979  12ED  02F6               	subwf	isr@tempo,f
 12980  12EE  3000               	movlw	0
 12981  12EF  1C03               	skipc
 12982  12F0  03F7               	decf	isr@tempo+1,f
 12983  12F1  02F7               	subwf	isr@tempo+1,f
 12984  12F2  2AC0               	goto	i1l5357
 12985  12F3                     i1l5359:
 12986                           
 12987                           ;isr.c: 131:         (*pointer)=0;
 12988  12F3  1683               	bsf	3,5	;RP0=1, select bank1
 12989  12F4  1303               	bcf	3,6	;RP1=0, select bank1
 12990  12F5  0836               	movf	_pointer^(0+128),w
 12991  12F6  0084               	movwf	4
 12992  12F7  1783               	bsf	3,7	;select IRP bank2
 12993  12F8  0180               	clrf	0
 12994                           
 12995                           ;isr.c: 133:         if(RCSTAbits.OERR){
 12996  12F9  1283               	bcf	3,5	;RP0=0, select bank0
 12997  12FA  1C98               	btfss	24,1	;volatile
 12998  12FB  2B17               	goto	i1l650
 12999                           
 13000                           ;isr.c: 134:            CREN=0;
 13001  12FC  1218               	bcf	24,4	;volatile
 13002                           
 13003                           ;isr.c: 135:            CREN=1;
 13004  12FD  1618               	bsf	24,4	;volatile
 13005                           
 13006                           ;isr.c: 136:            tempo=RCREG;
 13007  12FE  081A               	movf	26,w	;volatile
 13008  12FF  00F0               	movwf	??_isr
 13009  1300  01F1               	clrf	??_isr+1
 13010  1301  0870               	movf	??_isr,w
 13011  1302  00F6               	movwf	isr@tempo
 13012  1303  0871               	movf	??_isr+1,w
 13013  1304  00F7               	movwf	isr@tempo+1
 13014                           
 13015                           ;isr.c: 137:            tempo=RCREG;
 13016  1305  081A               	movf	26,w	;volatile
 13017  1306  00F0               	movwf	??_isr
 13018  1307  01F1               	clrf	??_isr+1
 13019  1308  0870               	movf	??_isr,w
 13020  1309  00F6               	movwf	isr@tempo
 13021  130A  0871               	movf	??_isr+1,w
 13022  130B  00F7               	movwf	isr@tempo+1
 13023                           
 13024                           ;isr.c: 138:            tempo=RCREG;
 13025  130C  081A               	movf	26,w	;volatile
 13026  130D  00F0               	movwf	??_isr
 13027  130E  01F1               	clrf	??_isr+1
 13028  130F  0870               	movf	??_isr,w
 13029  1310  00F6               	movwf	isr@tempo
 13030  1311  0871               	movf	??_isr+1,w
 13031  1312  00F7               	movwf	isr@tempo+1
 13032                           
 13033                           ;isr.c: 139:            usart_buffer[0]=0;
 13034  1313  1703               	bsf	3,6	;RP1=1, select bank2
 13035  1314  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13036                           
 13037                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13038  1315  1303               	bcf	3,6	;RP1=0, select bank0
 13039  1316  14EF               	bsf	_generic_status,1
 13040  1317                     i1l650:
 13041  1317  0875               	movf	??_isr+5,w
 13042  1318  00FF               	movwf	127
 13043  1319  0874               	movf	??_isr+4,w
 13044  131A  008A               	movwf	10
 13045  131B  0873               	movf	??_isr+3,w
 13046  131C  0084               	movwf	4
 13047  131D  0E72               	swapf	??_isr+2,w
 13048  131E  0083               	movwf	3
 13049  131F  0EFE               	swapf	126,f
 13050  1320  0E7E               	swapf	126,w
 13051  1321  0009               	retfie
 13052  1322                     __end_of_isr:
 13053  007E                     btemp	set	126	;btemp
 13054  007E                     wtemp0	set	126
 13055                           
 13056                           	psect	intentry
 13057  0004                     __pintentry:	
 13058                           ;incstack = 0
 13059                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13060                           
 13061  0004                     interrupt_function:
 13062  007E                     saved_w	set	btemp
 13063  0004  00FE               	movwf	btemp
 13064  0005  0E03               	swapf	3,w
 13065  0006  00F2               	movwf	??_isr+2
 13066  0007  0804               	movf	4,w
 13067  0008  00F3               	movwf	??_isr+3
 13068  0009  080A               	movf	10,w
 13069  000A  00F4               	movwf	??_isr+4
 13070  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13071  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13072  000D  087F               	movf	btemp+1,w
 13073  000E  00F5               	movwf	??_isr+5
 13074  000F  160A  118A  2A37   	ljmp	_isr
 13075                           
 13076                           	psect	config
 13077                           
 13078                           ;Config register CONFIG1 @ 0x2007
 13079                           ;	Oscillator Selection bits
 13080                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13081                           ;	Watchdog Timer Enable bit
 13082                           ;	WDTE = ON, WDT enabled
 13083                           ;	Power-up Timer Enable bit
 13084                           ;	PWRTE = ON, PWRT enabled
 13085                           ;	RE3/MCLR pin function select bit
 13086                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13087                           ;	Code Protection bit
 13088                           ;	CP = ON, Program memory code protection is enabled
 13089                           ;	Data Code Protection bit
 13090                           ;	CPD = OFF, Data memory code protection is disabled
 13091                           ;	Brown Out Reset Selection bits
 13092                           ;	BOREN = ON, BOR enabled
 13093                           ;	Internal External Switchover bit
 13094                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13095                           ;	Fail-Safe Clock Monitor Enabled bit
 13096                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13097                           ;	Low Voltage Programming Enable bit
 13098                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13099                           ;	In-Circuit Debugger Mode bit
 13100                           ;	DEBUG = 0x1, unprogrammed default
 13101  2007                     	org	8199
 13102  2007  2F8C               	dw	12172
 13103                           
 13104                           ;Config register CONFIG2 @ 0x2008
 13105                           ;	Brown-out Reset Selection bit
 13106                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13107                           ;	Flash Program Memory Self Write Enable bits
 13108                           ;	WRT = OFF, Write protection off
 13109  2008                     	org	8200
 13110  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     18      45
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mediaLeituraPt100Umidadde->___fladd
    ___fldiv->___flmul
    ___fladd->___fldiv
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediaLeituraPt100Umidadde->___fladd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  109765
                                             77 BANK0      2     2      0
                                             15 BANK1      3     3      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           14    14      0   12176
                                              4 BANK1     10    10      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1955
                                             35 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3674
                                             61 BANK0     16     8      8
                                              0 BANK1      4     4      0
                   _ADC_Media_10bits (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1477
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   95288
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12377
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3856
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     11A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     12      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     11A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Apr 18 10:36:10 2021

                               _USART_putc 1B25                               ___fldiv@aexp 005C  
                             ___fldiv@bexp 005B                                          pc 0002  
                             ___fldiv@sign 0054            EEPROM_24C1025_Read_Buffer@range 0034  
         EEPROM_24C1025_Write_Str@chip_add 0031                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 0A50  __size_of_EEPROM_24C1025_Read_Buffer_USART 017E  
       ??_EEPROM_24C1025_Read_Buffer_USART 002F          ?_EEPROM_24C1025_Read_Buffer_USART 0029  
         _EEPROM_24C1025_Read_Buffer_USART 08D2                              _USART_put_int 1B71  
                 Decodify_Command@tempchar 00C5                        __Umul8_16@word_mpld 0026  
               __end_of_RESISTOR_ROOM_TEMP 101C               PROCULUS_VP_Write_String@text 005C  
                                      l422 0363                                        l512 1EEA  
                                      l513 1EEB                                        l426 0371  
                                      l507 1EC6                                        l428 03C7  
                                      l517 1C73                                        l539 1C2D  
                                      l483 1AFB                                        l805 1BAD  
                                      l868 1B2D                                        l788 1BD1  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00BE  
                                      _isr 1237                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1EFA  
                         _ADC_Media_10bits 10B4                               ___flmul@aexp 0037  
                             ___flmul@bexp 003C                     PROCULUS_VP_Write@vetor 0054  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0036  
                             ___flmul@temp 0041                               ___flmul@prod 003D  
  __end_of_PROCULUS_Control_Register_Write 1EBE   __size_of_PROCULUS_Control_Register_Write 0038  
        ??_PROCULUS_Control_Register_Write 0053           ?_PROCULUS_Control_Register_Write 0052  
          _PROCULUS_Control_Register_Write 1E86                               ___fltol@exp1 004D  
                          __end_of_MAX_ADC 1024                                       l1303 0F7F  
                                     l1320 0FF1                                       l1312 0FD4  
                                     l1334 0C1A                                       l1431 08A2  
                                     l1432 08AC                                       l1424 088C  
                                     l1178 1219                                       l1418 084C  
                                     l1282 0E96                                       l4003 0638  
                                     l1284 0E6D                                       l1356 0D59  
                                     l4013 066A                                       l1278 0DD3  
                                     l1358 0D67                                       l4023 0699  
                                     l1393 1CC1                                       l4017 0680  
                                     l4041 0844                                       l1386 06B0  
                                     l4131 09B4                                       l4051 085F  
                                     l1299 0F5C                                       l4133 09BB  
                                     l4301 1767                                       l4061 08A0  
                                     l4053 0871                                       l4135 09BE  
                                     l4303 176A                                       l4063 0891  
                                     l4047 085B                                       l4161 0A32  
                                     l4241 147E                                       l4163 0957  
                                     l4091 0907                                       l4243 14F6  
                                     l4235 14D4                                       l4075 08C9  
                                     l3461 1C5C                                       l3605 1E14  
                                     l4157 0A0B                                       l4165 0A37  
                                     l4093 090A                                       l4325 17B7  
                                     l4181 1446                                       l3455 1C64  
                                     l4335 17DE                                       l4255 16AE  
                                     l3623 1CB9                                       l4511 1BB4  
                                     l3457 1C50                                       l3465 1C68  
                                     l4089 0900                                       l3713 0B8E  
                                     l3721 0AD3                                       l4337 17E7  
                                     l4281 1705                                       l4257 16B5  
                                     l4177 143C                                       l4433 1BF1  
                                     l4521 111A                                       l5411 153D  
                                     l3723 0BB5                                       l3643 0A7C  
                                     l4259 16B8                                       l4179 1443  
                                     l4451 0824                                       l4427 108F  
                                     l4531 1152                                       l4523 112A  
                                     l4507 1BB2                                       l5413 1544  
                                     l3645 0A83                                       l3813 1EA0  
                                     l5501 1FDC                                       l4701 0F99  
                                     l5415 1547                                       l3719 0BB0  
                                     l3647 0A86                                       l4375 1D2A  
                                     l3815 1EB6                                       l5503 1FF8  
                                     l3911 03E5                                       l4535 115F  
                                     l4631 0E81                                       l3489 1E56  
                                     l5513 1F41                                       l3593 1DFA  
                                     l3745 1ED0                                       l4449 0807  
                                     l3913 03ED                                       l3737 1DB3  
                                     l4705 0F9C                                       l4625 0E7A  
                                     l4617 0E33                                       l4553 0D92  
                                     l5451 15FB                                       l3691 0B41  
                                     l4299 1760                                       l3747 1ED3  
                                     l3931 0412                                       l3835 11D5  
                                     l3739 1DD5                                       l5611 01EB  
                                     l4723 0FE7                                       l4651 0ECA  
                                     l4643 0EA5                                       l4627 0E7C  
                                     l4635 0E90                                       l4571 0DB6  
                                     l4547 0D82                                       l5453 15FE  
                                     l3597 1E0D                                       l3909 03E3  
                                     l5605 01CA                                       l5533 0062  
                                     l4653 0ECC                                       l4661 0EE1  
                                     l4581 0DCA                                       l4557 0D96  
                                     l4813 0CB3                                       l3687 0B37  
                                     l4399 1D84                                       l3783 07ED  
                                     l3927 0408                                       l3855 1205  
                                     l3839 11DE                                       l5623 0242  
                                     l5543 0089                                       l4727 0FEC  
                                     l4671 0F4E                                       l4559 0D9F  
                                     l4831 0CBE                                       l4807 0C94  
                                     l4815 0C70                                       l4751 0BEC  
                                     l5449 15F4                                       l3689 0B3E  
                                     l3881 1F10                                       l3785 07F8  
                                     l3929 040A                                       l3865 1228  
                                     l3857 1215                                       l5641 02B4  
                                     l5617 0212                                       l4905 1F8A  
                                     l3793 1E1F                                       l4489 10D0  
                                     l4657 0ED1                                       l4577 0DC6  
                                     l4833 0CDB                                       l4817 0CB8  
                                     l4753 0BF4                                       l5475 165C  
                                     l3891 1F31                                       l3939 0420  
                                     l5651 02F6                                       l5635 028F  
                                     l5571 0146                                       l5563 011D  
                                     l5555 00E3                                       l5539 007B  
                                     l4587 0DE0                                       l4843 0CF4  
                                     l4771 0C12                                       l4747 0BE9  
                                     l5469 1637                                       l5477 1580  
                                     l5629 0260                                       l4925 1FA7  
                                     l4693 0F8B                                       l4853 0D26  
                                     l4781 0C39                                       l5479 1661  
                                     l3887 1F26                                       l3879 1F02  
                                     l3991 0602                                       l5663 031B  
                                     l5647 02D1                                       l5567 012C  
                                     l4687 0F84                                       l4679 0F71  
                                     l4695 0F8E                                       l4839 0CF2  
                                     l4767 0C0F                                       l3993 061F  
                                     l5681 0367                                       l5657 030A  
                                     l5593 01AF                                       l5577 015E  
                                     l4857 0D3F                                       l5851 0380  
                                     l5675 0357                                       l5587 018F  
                                     l4939 1FAF                                       l4787 0C45  
                                     l5771 13AA                                       ?_isr 0070  
                                     l5669 0337                                       l5693 0375  
                                     l4869 0D63                                       l4981 07DD  
                                     l4957 06E2                                       l3999 0636  
                                     l5599 01BC                                       l4975 073D  
                                     l4967 0726                                       l5797 13D4  
                                     _BETA 1048                                       STR_1 1050  
                                     STR_2 1058                                _statuspower 00BA  
                                     _CREN 00C4                                       u3005 1F05  
                                     u3025 1F11                                       u3035 1F1D  
                                     u3045 1F27                                       u4030 0E57  
                                     u3215 0523                                       u4040 0E58  
                                     u4025 0E4B                                       u3315 0611  
                                     u3405 068B                                       u3255 05B7  
                                     u2553 1E68                                       u5113 1F74  
                                     u3185 04CA                                       u4225 0F73  
                                     u5043 1528                                       u3603 09B2  
                                     u2715 1CC2                                       u4171 0F0D  
                                     u4163 0EF4                                       u4155 0ED4  
                                     u4075 0E84                                       u4180 0F21  
                                     u4172 0F0E                                       u5053 153B  
                                     u2733 0A67                                       u3285 05EE  
                                     u4325 0FBB                                       u4181 0F22  
                                     u4173 0F13                                       u2670 1E0A  
                                     u4182 0F27                                       u4174 0F14  
                                     u5063 15A2                                       u2743 0A7A  
                                     u3703 1714                                       u3623 1427  
                                     u3295 0606                                       u3535 08B4  
                                     u3455 0868                                       u4183 0F28  
                                     u4175 0F19                                       u4176 0F1A  
                                     u2753 0AE9                                       u3633 143A  
                                     u3385 0655                                       u2905 11E7  
                                     u5083 15F2                                       u3563 08EB  
                                     u5307 17FA                                       u3723 175E  
                                     u3643 1496                                       u3395 0673  
                                     u3475 0884                                       u4515 0C8D  
                                     u3573 08FE                                       u5317 0BC8  
                                     u2773 0B35                                       u2853 1E31  
                                     u4525 0CA2                                       u5237 132A  
                                     u5095 158E                                       u5327 0A4A  
                                     u3583 096D                                       u2695 1BD7  
                                     u2935 1206                                       u3495 0899  
                                     u5247 1E39                                       u5337 1E71  
                                     u5257 1BDF                                       u3905 1141  
                                     u5347 1C58                                       u3683 1699  
                                     u5267 1DA9                                       u3915 1153  
                                     u4555 0CC2                                       u3693 16AC  
                                     u5277 1EF4                                       u2965 121E  
                                     u4645 0D11                                       u4485 0C79  
                                     u5287 1C84                                       u4655 0D2F  
                                     u4575 0CCD                                       u4495 0C82  
                                     u5297 1737                                       u3785 109B  
                                     u4665 0D4A                                       u3875 111E  
                                     u4685 1D5A                                       u3895 112C  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 0059  
         __end_of_I2C_Master_RepeatedStart 1B25                                       _main 1322  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0020  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 004E                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 1B0F                           _BALANCE_RESISTOR 104C  
                          ___fldiv@new_exp 0055         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 004E  
                            ___fltol@sign1 004C                            __end_of___fladd 1000  
                                    ?_main 0070                            __end_of___fldiv 0D6F  
                                    _EEADR 010D                            __end_of___flmul 06BD  
                          __end_of___fltol 1237                                      _ANSEL 0188  
                          __end_of___lldiv 1168                                      _T1CON 0010  
                          __end_of___lwdiv 1F36                                      i1l632 125E  
                                    i1l650 1317                                      i1l634 126F  
                                    i1l636 127F                                      _RCREG 001A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _SPBRG 0099                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
          EEPROM_24C1025_Read_Int@chip_add 003C                                      _TRISE 0089  
                                    _TXREG 0019                      ADC_Media_10bits@canal 0033  
                          __end_of_captura 1B04                               _usart_buffer 0110  
                    ADC_Media_10bits@value 0034                  EEPROM_Read_Integer@result 0028  
                                    _canal 00B9               __size_of_EEPROM_Read_Integer 002A  
                                    _count 00AC                                      _errno 00A8  
            ??_EEPROM_24C1025_Write_Buffer 0031         __size_of_EEPROM_24C1025_Write_Byte 0016  
               ?_EEPROM_24C1025_Write_Byte 0037                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
          EEPROM_24C1025_Read_Byte@mem_add 0036                               __end_of_BETA 104C  
                  __size_of_PROCULUS_Delay 001D          __size_of_PROCULUS_VP_Write_String 0017  
                              ?_USART_init 0020                            __initialization 0015  
                ?_PROCULUS_VP_Write_String 005A                                ?_USART_putc 0070  
                             __end_of_main 1415                             Send_To_MB@size 0021  
                 __end_of_EEPROM_Read_Byte 1C8D                                     ??_main 00CA  
                         __end_of_Save_Log 11CC                           _USART_put_string 1DAF  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003C                          ?_I2C_Master_Start 0070  
                EEPROM_Write_Byte@last_GIE 0024                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 0059  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 1CFA                      EEPROM_Write_Integer@i 002B  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 1B5B  
               mediaLeituraPt100Umidadde@i 00C8                                     i1l5311 1281  
                                   i1l5305 1271                                     i1l5335 12B1  
                                   i1l5353 12E7                                     i1l5355 12EC  
                                   i1l5291 1244                                     i1l5357 12C0  
                                   i1l5359 12F3                                     i1l5295 1253  
                                   i1l5299 1261                                     u501_25 12D9  
        __end_of_EEPROM_24C1025_Write_Byte 1B71                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 0058                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 005B                           __end_of___xxtofl 08D2  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 0059  
                 __end_of_Decodify_Command 03C8                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 1B1A  
               ?_mediaLeituraPt100Umidadde 0070       __size_of_EEPROM_24C1025_Write_Buffer 0176  
                                ??___fladd 0065                                  ??___fldiv 004B  
                                ??___flmul 0031                                  ??___fltol 0047  
                          ??_USART_put_int 0050                                  ??___lldiv 0028  
                                   _header 00AE                          __end_of_ROOM_TEMP 1020  
                                ??___lwdiv 0024                                     _buffer 01CA  
                        _USART_to_Protocol 105F                            USART_putc@value 0020  
                                   _minuto 007A          EEPROM_24C1025_Read_Buffer@cnt_108 0032  
                                ??_captura 0022                         ?_USART_to_Protocol 0070  
             Decodify_Command@add_24LCxxxx 00C6                                     _strcpy 1BEC  
                                   _strlen 07E6          EEPROM_24C1025_Read_Buffer@mem_add 002A  
         __end_of_EEPROM_24C1025_Read_Byte 1BCF                         __size_of__Umul8_16 0023  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0070             mediaLeituraPt100Umidadde@canal 00C3  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                               ___xxtofl@arg 002A  
                             ___xxtofl@exp 0029                               ___xxtofl@val 0020  
                         __end_oflog@coeff 1048                    __end_of__initialization 0036  
      PROCULUS_Control_Register_Write@size 0052                                 ___fltol@f1 0043  
                             _Board_Number 00B8                   __end_of_ADC_Media_10bits 110A  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 0022  
                __end_of_USART_to_Protocol 10B4                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1050           __end_of_EEPROM_24C1025_Write_Int 1C2A  
         __end_of_EEPROM_24C1025_Write_Str 1510                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 082F            __end_of_EEPROM_24C1025_Fill_All 1F77  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK0 006F                                 __pbssBANK1 00A0  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       _RESISTOR_ROOM_TEMP 1018            __end_of_EEPROM_24C1025_Read_Int 1CFA  
          __end_of_EEPROM_24C1025_Read_Str 1800                   ?_Package_Usart_is_for_me 0070  
                                ?_Save_Log 0058                             _PROCULUS_Delay 1BCF  
                        __end_of__Umul8_16 1CD2                                 __pmaintext 1322  
                      Save_Log@add_datalog 0058                        _EEPROM_Read_Integer 1D22  
               PROCULUS_Show_Screen@screen 0056                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 1B46                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                                  ?___xxtofl 0020  
                                  _MAX_ADC 1020                       ?_EEPROM_Read_Integer 0023  
                    Decodify_Command@dados 00BB                EEPROM_24C1025_Read_Int@data 003D  
                                  _SSPCON2 0091           __end_of_PROCULUS_VP_Write_String 1B9E  
                  EEPROM_Read_Integer@addr 0026                                    _SSPSTAT 0094  
                 _EEPROM_24C1025_Read_Byte 1BB6                                 __stringtab 1000  
                      PROCULUS_VP_Write@vp 0052                ??_EEPROM_24C1025_Write_Byte 003C  
               __end_of_EEPROM_Read_String 1C4A                     __end_of_PROCULUS_Delay 1BEC  
                 __end_of_USART_put_string 1DE2                       __size_of_my_delay_ms 0037  
                               ??_Save_Log 005C                            PROCULUS_Delay@i 0024  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                             ??_USART_putc 0020                 __size_of_USART_to_Protocol 0055  
              PROCULUS_Buzzer@time_ms_x_10 0056                                    ___fladd 0D6F  
                                  ___fldiv 0BCE                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 03C8                   EEPROM_Write_Integer@dado 0025  
                                  ___fltol 11CC                                    ___lldiv 110A  
                                  ___lwdiv 1EFA                              _Send_Reply_OK 1AF1  
                      __size_of_Send_To_MB 0028                      ?_PROCULUS_Show_Screen 0056  
                                  _captura 1AFA                           _statuspower_memo 007B  
                                  __ptext1 06BD                                    __ptext2 0BCE  
                                  __ptext3 0D6F                                    __ptext4 1B9E  
                                  __ptext5 10B4                                    __ptext6 1E17  
                                  __ptext7 1AFA                                    __ptext8 082F  
                                  __ptext9 1F77                          ??_PROCULUS_Buzzer 0058  
                                  _destino 00B7                          ?_EEPROM_Read_Byte 0070  
                          __size_of_strcpy 001E                            __size_of_strlen 0019  
                             __size_of_isr 00EB                                 ??___xxtofl 0024  
                       ??_EEPROM_Read_Byte 0020                                    _segundo 007D  
                 __size_of_I2C_Master_Init 0031                   __size_of_I2C_Master_Read 0035  
                           _usart_protocol 0190                      ??_EEPROM_Read_Integer 0025  
                 __size_of_I2C_Master_Wait 0021                   __size_of_I2C_Master_Stop 0009  
            EEPROM_24C1025_Write_Int@local 0056                                    _pointer 00B6  
            EEPROM_24C1025_Write_Byte@data 003B                                    clrloop0 1AE1  
                       __end_of_USART_init 1FB9            __end_of_Package_Usart_is_for_me 1BB6  
                       __end_of_USART_putc 1B35                          ADC_Media_10bits@i 0036  
                     end_of_initialization 0036                   _EEPROM_24C1025_Write_Int 1C0A  
                        ??_my_delay_ms_WDT 0024                   _EEPROM_24C1025_Write_Str 1415  
               ??_I2C_Master_RepeatedStart 0023                            ?_PROCULUS_Delay 0020  
                          my_delay_ms@time 0020            EEPROM_24C1025_Write_Buffer@data 002F  
          EEPROM_24C1025_Write_Buffer@ctrl 0036                  __size_of_I2C_Master_Start 0011  
                __size_of_I2C_Master_Write 000B                          ?_Decodify_Command 0070  
                          ___lldiv@divisor 0020                            ___lldiv@counter 002D  
     EEPROM_24C1025_Read_Buffer_USART@data 002E       EEPROM_24C1025_Read_Buffer_USART@ctrl 0034  
                       ??_Decodify_Command 005F                                  _RCSTAbits 0018  
              ??_mediaLeituraPt100Umidadde 00BF                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 1B5B           __size_of_EEPROM_24C1025_Fill_All 0041  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00B4  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 101C                                ___fladd@grs 00BE  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 1686                _EEPROM_24C1025_Write_Buffer 1510  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0057  
                              ___fldiv@rem 0050       PROCULUS_Control_Register_Write@vetor 0054  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 004E  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00BF                      PROCULUS_VP_Write@size 0056  
          EEPROM_24C1025_Read_Str@chip_add 0031                                ___flmul@grs 0038  
                 _PROCULUS_VP_Write_String 1B87                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 0058  
                       ??_ADC_Media_10bits 0032                      __end_of_USART_put_int 1B87  
                              _BAUDCTLbits 0187                             __end_of_strcpy 1C0A  
                           __end_of_strlen 07FF                        start_initialization 0015  
                _mediaLeituraPt100Umidadde 06BD                                __end_of_isr 1322  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1DAF  
         EEPROM_24C1025_Write_Int@chip_add 0055                        Decodify_Command@add 00BD  
                          ??_Send_Reply_OK 0025                          __size_of_Save_Log 0064  
                     I2C_Master_Wait@tempo 0022                                  __Umul8_16 1CAF  
            mediaLeituraPt100Umidadde@Temp 00C4                         __end_of_Send_To_MB 1D22  
         __size_of_Package_Usart_is_for_me 0018                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003A         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 0061                                  ___fladd@b 005D  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 0043  
                                ___fldiv@b 0047                                  ___flmul@a 002D  
                                ___flmul@b 0029                                __pbssCOMMON 0078  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00BB                          _PROCULUS_VP_Write 1FB9  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 0052  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 1B35  
                         _I2C_Master_Write 1B0F                        ??_PROCULUS_VP_Write 0057  
                           _tempodecorrido 00AA                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1C8D                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 005D                                   ?___fldiv 0043  
                  _EEPROM_24C1025_Fill_All 1F36                                   ?___flmul 0029  
                                 ?___fltol 0043                                   ?___lldiv 0020  
                               ?__Umul8_16 0020                         _EEPROM_Read_String 1C2A  
                                 ?___lwdiv 0020         __end_of_EEPROM_24C1025_Read_Buffer 0BCE  
               _EEPROM_24C1025_Read_Buffer 0A50                                   ?_captura 0020  
                                __pstrings 1000                            _my_delay_ms_WDT 1E4E  
                  _EEPROM_24C1025_Read_Int 1CD2                    _EEPROM_24C1025_Read_Str 1686  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 0054  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 2000                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1B04                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 1AE0  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 0055                     Decodify_Command@OutPut 00C1  
                          _PT100_TRANSLADA 1010                            _Delay_Led_Usart 00B2  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1D4C  
                               _ADCON0bits 001F                                __stringbase 100F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 038E  
                     _EEPROM_Write_Integer 1D7D             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 006D                 ??_PROCULUS_VP_Write_String 005D  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1CAF  
       __size_of_mediaLeituraPt100Umidadde 0129                             _generic_status 006F  
                               _EECON1bits 018C                                   _Save_Log 1168  
                ??_EEPROM_24C1025_Fill_All 005A                        __end_of_my_delay_ms 1E4E  
             EEPROM_24C1025_Read_Str@range 0032                                   _Umidade1 00A0  
                  __end_of_my_delay_ms_WDT 1E86                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022          __size_of_I2C_Master_RepeatedStart 000B  
                         __size_of___fladd 0291                  ??_EEPROM_24C1025_Read_Int 003A  
                  _Package_Usart_is_for_me 1B9E                           __size_of___fldiv 01A1  
                ??_EEPROM_24C1025_Read_Str 002E                           __size_of___flmul 02F5  
                ?_I2C_Master_RepeatedStart 0070                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1010        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                               _Temperatura0 00A4  
                          _I2C_Master_Init 1D4C                            _I2C_Master_Read 1DE2  
                                 ___xxtofl 082F                 __size_of_PROCULUS_VP_Write 0047  
                          _I2C_Master_Wait 1C4A           EEPROM_24C1025_Read_Byte@chip_add 003B  
                          _I2C_Master_Stop 1AE8                  __size_of_ADC_Media_10bits 0056  
                          ___lwdiv@divisor 0020                            ___lwdiv@counter 0027  
                                 __ptext10 1D4C                                   __ptext11 110A  
                                 __ptext20 03C8                                   __ptext12 003A  
                                 __ptext21 1CAF                                   __ptext13 1BEC  
                                 __ptext30 1BCF                                   __ptext22 1B87  
                                 __ptext14 105F                                   __ptext31 0804  
                                 __ptext23 07E6                                   __ptext15 1CFA  
                                 __ptext40 1CD2                                   __ptext32 1D7D  
                                 __ptext24 1FB9                                   __ptext16 1AF1  
                                 __ptext41 1BB6                                   __ptext33 1EBE  
                                 __ptext25 1B46                                   __ptext17 1DAF  
                                 __ptext50 1E4E                                   __ptext42 0A50  
                                 __ptext34 1C2A                                   __ptext26 1C8D  
                                 __ptext18 1168                                   __ptext51 1B0F  
                                 __ptext43 08D2                                   __ptext35 1D22  
                                 __ptext27 1EFA                                   __ptext19 11CC  
                                 __ptext52 1AE8                                   __ptext44 1B25  
                                 __ptext36 1C6B                                   __ptext28 1E86  
                                 __ptext53 1B35                                   __ptext45 1B1A  
                                 __ptext37 1415                                   __ptext29 1B71  
                                 __ptext54 1C4A                                   __ptext46 1DE2  
                                 __ptext38 1B5B                                   __ptext55 1B04  
                                 __ptext47 1F36                                   __ptext39 1686  
                                 __ptext56 1237                                   __ptext48 1C0A  
                                 __ptext49 1510                         USART_put_int@value 004E  
                           _PT100_CONSTANT 1014                                 strcpy@from 0020  
                            __size_of_main 00F3               EEPROM_24C1025_Fill_All@value 0058  
               PROCULUS_VP_Write_String@vp 005A                    __end_of_PT100_TRANSLADA 1014  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00B0  
        __end_of_mediaLeituraPt100Umidadde 07E6                             _Delay_Led_Tmr0 0078  
            __size_of_PROCULUS_Show_Screen 0015                        _EEPROM_Write_String 0804  
                                 log@coeff 1024                   __end_of_I2C_Master_Start 1B46  
                 __end_of_I2C_Master_Write 1B1A                                 _INTCONbits 000B  
                   __end_of_PT100_CONSTANT 1018                                   isr@tempo 0076  
                     EEPROM_Read_Byte@addr 0022                     EEPROM_Read_String@addr 0025  
                   EEPROM_Read_String@dado 0023                           my_delay_ms_WDT@i 0026  
                                 intlevel1 0000                           ?_PROCULUS_Buzzer 0056  
                        USART_put_int@dado 0051                           _EEPROM_Read_Byte 1C6B  
                              _my_delay_ms 1E17                       ?_EEPROM_Write_String 0025  
                         ___lldiv@dividend 0024                     __size_of_USART_put_int 0016  
             EEPROM_24C1025_Write_Int@data 0052                       EEPROM_Read_Integer@i 002A  
                  EEPROM_Write_String@addr 0027                    EEPROM_Write_String@dado 0025  
                       USART_init@baudrate 0020                                  stringcode 100A  
                               _OSCCONbits 008F      EEPROM_24C1025_Read_Buffer_USART@range 0033  
                ??_Package_Usart_is_for_me 0020                           ?_my_delay_ms_WDT 0020  
                    __end_of_Send_Reply_OK 1AFA                    __end_of_I2C_Master_Init 1D7D  
                  __end_of_I2C_Master_Read 1E17                    __end_of_I2C_Master_Wait 1C6B  
                  __end_of_I2C_Master_Stop 1AF1               EEPROM_24C1025_Write_Str@data 002E  
             EEPROM_24C1025_Write_Str@ctrl 0033                ?_EEPROM_24C1025_Read_Buffer 002A  
          EEPROM_24C1025_Fill_All@chip_add 005A                     ??_EEPROM_Write_Integer 0027  
                   __Umul8_16@multiplicand 0020            USART_to_Protocol@usart_protocol 0024  
                         _Decodify_Command 003A                  __size_of_USART_put_string 0033  
                         ___lldiv@quotient 0029                          I2C_Master_Write@d 0023  
                                 strcpy@cp 0023                                   strlen@cp 0023  
                                 strcpy@to 0022                                   stringdir 100A  
                                 stringtab 1000                                _SSPCON2bits 0091  
                        _EEPROM_Write_Byte 1EBE             EEPROM_24C1025_Read_Str@mem_add 0029  
                            ___fladd@signs 00BB                         ?_EEPROM_Write_Byte 0020  
                    ??_EEPROM_Write_String 0026                               ___fladd@aexp 00BC  
                             ___fladd@bexp 00BD          __size_of_EEPROM_24C1025_Read_Byte 0019  
                ?_EEPROM_24C1025_Read_Byte 0036                        EEPROM_Read_String@c 0026  
                     __Umul8_16@multiplier 0028                        ??_EEPROM_Write_Byte 0021  
                        __Umul8_16@product 0024                                 _USART_init 1F77  
