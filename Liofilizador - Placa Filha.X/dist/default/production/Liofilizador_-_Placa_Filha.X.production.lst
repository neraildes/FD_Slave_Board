

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 12:46:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.10
    76                           ; Generated 31/07/2019 GMT
    77                           ; 
    78                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F886 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  0107                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  0185                     	;# 
   180  0187                     	;# 
   181  0188                     	;# 
   182  0189                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  0105                     	;# 
   247  0107                     	;# 
   248  0108                     	;# 
   249  0109                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0185                     	;# 
   256  0187                     	;# 
   257  0188                     	;# 
   258  0189                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0089                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  008F                     	;# 
   304  0090                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  0105                     	;# 
   323  0107                     	;# 
   324  0108                     	;# 
   325  0109                     	;# 
   326  010C                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  0185                     	;# 
   332  0187                     	;# 
   333  0188                     	;# 
   334  0189                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  000E                     	;# 
   352  000F                     	;# 
   353  0010                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001D                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  0081                     	;# 
   372  0085                     	;# 
   373  0086                     	;# 
   374  0087                     	;# 
   375  0089                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  0105                     	;# 
   399  0107                     	;# 
   400  0108                     	;# 
   401  0109                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0187                     	;# 
   409  0188                     	;# 
   410  0189                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0009                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  000E                     	;# 
   428  000F                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001D                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  0081                     	;# 
   448  0085                     	;# 
   449  0086                     	;# 
   450  0087                     	;# 
   451  0089                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  008F                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  0105                     	;# 
   475  0107                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  0185                     	;# 
   484  0187                     	;# 
   485  0188                     	;# 
   486  0189                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000E                     	;# 
   504  000F                     	;# 
   505  0010                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0014                     	;# 
   510  0015                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  001D                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  0081                     	;# 
   524  0085                     	;# 
   525  0086                     	;# 
   526  0087                     	;# 
   527  0089                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  0105                     	;# 
   551  0107                     	;# 
   552  0108                     	;# 
   553  0109                     	;# 
   554  010C                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  0185                     	;# 
   560  0187                     	;# 
   561  0188                     	;# 
   562  0189                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  0000                     	;# 
   566  0001                     	;# 
   567  0002                     	;# 
   568  0003                     	;# 
   569  0004                     	;# 
   570  0005                     	;# 
   571  0006                     	;# 
   572  0007                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  000E                     	;# 
   580  000F                     	;# 
   581  0010                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001E                     	;# 
   598  001F                     	;# 
   599  0081                     	;# 
   600  0085                     	;# 
   601  0086                     	;# 
   602  0087                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0092                     	;# 
   611  0093                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  009F                     	;# 
   626  0105                     	;# 
   627  0107                     	;# 
   628  0108                     	;# 
   629  0109                     	;# 
   630  010C                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0185                     	;# 
   636  0187                     	;# 
   637  0188                     	;# 
   638  0189                     	;# 
   639  018C                     	;# 
   640  018D                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  000E                     	;# 
   656  000F                     	;# 
   657  0010                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0013                     	;# 
   661  0014                     	;# 
   662  0015                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001B                     	;# 
   671  001C                     	;# 
   672  001D                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  0081                     	;# 
   676  0085                     	;# 
   677  0086                     	;# 
   678  0087                     	;# 
   679  0089                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008F                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  009F                     	;# 
   702  0105                     	;# 
   703  0107                     	;# 
   704  0108                     	;# 
   705  0109                     	;# 
   706  010C                     	;# 
   707  010C                     	;# 
   708  010D                     	;# 
   709  010E                     	;# 
   710  010F                     	;# 
   711  0185                     	;# 
   712  0187                     	;# 
   713  0188                     	;# 
   714  0189                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000E                     	;# 
   732  000F                     	;# 
   733  0010                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0014                     	;# 
   738  0015                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0017                     	;# 
   742  0018                     	;# 
   743  0019                     	;# 
   744  001A                     	;# 
   745  001B                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  0089                     	;# 
   756  008C                     	;# 
   757  008D                     	;# 
   758  008E                     	;# 
   759  008F                     	;# 
   760  0090                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0094                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  009F                     	;# 
   778  0105                     	;# 
   779  0107                     	;# 
   780  0108                     	;# 
   781  0109                     	;# 
   782  010C                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010F                     	;# 
   787  0185                     	;# 
   788  0187                     	;# 
   789  0188                     	;# 
   790  0189                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  000E                     	;# 
   808  000F                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001D                     	;# 
   825  001E                     	;# 
   826  001F                     	;# 
   827  0081                     	;# 
   828  0085                     	;# 
   829  0086                     	;# 
   830  0087                     	;# 
   831  0089                     	;# 
   832  008C                     	;# 
   833  008D                     	;# 
   834  008E                     	;# 
   835  008F                     	;# 
   836  0090                     	;# 
   837  0091                     	;# 
   838  0092                     	;# 
   839  0093                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0094                     	;# 
   843  0095                     	;# 
   844  0096                     	;# 
   845  0097                     	;# 
   846  0098                     	;# 
   847  0099                     	;# 
   848  009A                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  009F                     	;# 
   854  0105                     	;# 
   855  0107                     	;# 
   856  0108                     	;# 
   857  0109                     	;# 
   858  010C                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  010F                     	;# 
   863  0185                     	;# 
   864  0187                     	;# 
   865  0188                     	;# 
   866  0189                     	;# 
   867  018C                     	;# 
   868  018D                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0009                     	;# 
   878  000A                     	;# 
   879  000B                     	;# 
   880  000C                     	;# 
   881  000D                     	;# 
   882  000E                     	;# 
   883  000E                     	;# 
   884  000F                     	;# 
   885  0010                     	;# 
   886  0011                     	;# 
   887  0012                     	;# 
   888  0013                     	;# 
   889  0014                     	;# 
   890  0015                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0017                     	;# 
   894  0018                     	;# 
   895  0019                     	;# 
   896  001A                     	;# 
   897  001B                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  001D                     	;# 
   901  001E                     	;# 
   902  001F                     	;# 
   903  0081                     	;# 
   904  0085                     	;# 
   905  0086                     	;# 
   906  0087                     	;# 
   907  0089                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  008E                     	;# 
   911  008F                     	;# 
   912  0090                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0093                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  009F                     	;# 
   930  0105                     	;# 
   931  0107                     	;# 
   932  0108                     	;# 
   933  0109                     	;# 
   934  010C                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  010F                     	;# 
   939  0185                     	;# 
   940  0187                     	;# 
   941  0188                     	;# 
   942  0189                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  0000                     	;# 
   946  0001                     	;# 
   947  0002                     	;# 
   948  0003                     	;# 
   949  0004                     	;# 
   950  0005                     	;# 
   951  0006                     	;# 
   952  0007                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  000E                     	;# 
   960  000F                     	;# 
   961  0010                     	;# 
   962  0011                     	;# 
   963  0012                     	;# 
   964  0013                     	;# 
   965  0014                     	;# 
   966  0015                     	;# 
   967  0015                     	;# 
   968  0016                     	;# 
   969  0017                     	;# 
   970  0018                     	;# 
   971  0019                     	;# 
   972  001A                     	;# 
   973  001B                     	;# 
   974  001B                     	;# 
   975  001C                     	;# 
   976  001D                     	;# 
   977  001E                     	;# 
   978  001F                     	;# 
   979  0081                     	;# 
   980  0085                     	;# 
   981  0086                     	;# 
   982  0087                     	;# 
   983  0089                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  008F                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0094                     	;# 
   995  0095                     	;# 
   996  0096                     	;# 
   997  0097                     	;# 
   998  0098                     	;# 
   999  0099                     	;# 
  1000  009A                     	;# 
  1001  009B                     	;# 
  1002  009C                     	;# 
  1003  009D                     	;# 
  1004  009E                     	;# 
  1005  009F                     	;# 
  1006  0105                     	;# 
  1007  0107                     	;# 
  1008  0108                     	;# 
  1009  0109                     	;# 
  1010  010C                     	;# 
  1011  010C                     	;# 
  1012  010D                     	;# 
  1013  010E                     	;# 
  1014  010F                     	;# 
  1015  0185                     	;# 
  1016  0187                     	;# 
  1017  0188                     	;# 
  1018  0189                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021  0000                     	;# 
  1022  0001                     	;# 
  1023  0002                     	;# 
  1024  0003                     	;# 
  1025  0004                     	;# 
  1026  0005                     	;# 
  1027  0006                     	;# 
  1028  0007                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000D                     	;# 
  1034  000E                     	;# 
  1035  000E                     	;# 
  1036  000F                     	;# 
  1037  0010                     	;# 
  1038  0011                     	;# 
  1039  0012                     	;# 
  1040  0013                     	;# 
  1041  0014                     	;# 
  1042  0015                     	;# 
  1043  0015                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001B                     	;# 
  1051  001C                     	;# 
  1052  001D                     	;# 
  1053  001E                     	;# 
  1054  001F                     	;# 
  1055  0081                     	;# 
  1056  0085                     	;# 
  1057  0086                     	;# 
  1058  0087                     	;# 
  1059  0089                     	;# 
  1060  008C                     	;# 
  1061  008D                     	;# 
  1062  008E                     	;# 
  1063  008F                     	;# 
  1064  0090                     	;# 
  1065  0091                     	;# 
  1066  0092                     	;# 
  1067  0093                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0094                     	;# 
  1071  0095                     	;# 
  1072  0096                     	;# 
  1073  0097                     	;# 
  1074  0098                     	;# 
  1075  0099                     	;# 
  1076  009A                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  009F                     	;# 
  1082  0105                     	;# 
  1083  0107                     	;# 
  1084  0108                     	;# 
  1085  0109                     	;# 
  1086  010C                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  010F                     	;# 
  1091  0185                     	;# 
  1092  0187                     	;# 
  1093  0188                     	;# 
  1094  0189                     	;# 
  1095  018C                     	;# 
  1096  018D                     	;# 
  1097  0000                     	;# 
  1098  0001                     	;# 
  1099  0002                     	;# 
  1100  0003                     	;# 
  1101  0004                     	;# 
  1102  0005                     	;# 
  1103  0006                     	;# 
  1104  0007                     	;# 
  1105  0009                     	;# 
  1106  000A                     	;# 
  1107  000B                     	;# 
  1108  000C                     	;# 
  1109  000D                     	;# 
  1110  000E                     	;# 
  1111  000E                     	;# 
  1112  000F                     	;# 
  1113  0010                     	;# 
  1114  0011                     	;# 
  1115  0012                     	;# 
  1116  0013                     	;# 
  1117  0014                     	;# 
  1118  0015                     	;# 
  1119  0015                     	;# 
  1120  0016                     	;# 
  1121  0017                     	;# 
  1122  0018                     	;# 
  1123  0019                     	;# 
  1124  001A                     	;# 
  1125  001B                     	;# 
  1126  001B                     	;# 
  1127  001C                     	;# 
  1128  001D                     	;# 
  1129  001E                     	;# 
  1130  001F                     	;# 
  1131  0081                     	;# 
  1132  0085                     	;# 
  1133  0086                     	;# 
  1134  0087                     	;# 
  1135  0089                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  008F                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0092                     	;# 
  1143  0093                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0094                     	;# 
  1147  0095                     	;# 
  1148  0096                     	;# 
  1149  0097                     	;# 
  1150  0098                     	;# 
  1151  0099                     	;# 
  1152  009A                     	;# 
  1153  009B                     	;# 
  1154  009C                     	;# 
  1155  009D                     	;# 
  1156  009E                     	;# 
  1157  009F                     	;# 
  1158  0105                     	;# 
  1159  0107                     	;# 
  1160  0108                     	;# 
  1161  0109                     	;# 
  1162  010C                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  010F                     	;# 
  1167  0185                     	;# 
  1168  0187                     	;# 
  1169  0188                     	;# 
  1170  0189                     	;# 
  1171  018C                     	;# 
  1172  018D                     	;# 
  1173                           
  1174                           	psect	strings
  1175  1000                     __pstrings:	
  1176  1000                     stringtab:	
  1177  1000                     __stringtab:	
  1178                           
  1179                           ;	String table - string pointers are 1 byte each
  1180  1000  1BFF               	btfsc	btemp+1,7
  1181  1001  280A               	ljmp	stringcode
  1182  1002  1383               	bcf	3,7
  1183  1003  187F               	btfsc	btemp+1,0
  1184  1004  1783               	bsf	3,7
  1185  1005  0800               	movf	0,w
  1186  1006  0A84               	incf	4,f
  1187  1007  1903               	skipnz
  1188  1008  0AFF               	incf	btemp+1,f
  1189  1009  0008               	return
  1190  100A                     stringcode:	
  1191  100A                     stringdir:	
  1192  100A  3010               	movlw	high stringdir
  1193  100B  008A               	movwf	10
  1194  100C  0804               	movf	4,w
  1195  100D  0A84               	incf	4,f
  1196  100E  0782               	addwf	2,f
  1197  100F                     __stringbase:	
  1198  100F  3400               	retlw	0
  1199  1010                     __end_of__stringtab:	
  1200  1010                     _PT100_TRANSLADA:	
  1201  1010  3466               	retlw	102
  1202  1011  3466               	retlw	102
  1203  1012  34A6               	retlw	166
  1204  1013  34BF               	retlw	191
  1205  1014                     __end_of_PT100_TRANSLADA:	
  1206  1014                     _PT100_CONSTANT:	
  1207  1014  3414               	retlw	20
  1208  1015  34AE               	retlw	174
  1209  1016  342B               	retlw	43
  1210  1017  34C1               	retlw	193
  1211  1018                     __end_of_PT100_CONSTANT:	
  1212  1018                     _RESISTOR_ROOM_TEMP:	
  1213                           
  1214                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1215  1018  3400               	retlw	0
  1216  1019  3440               	retlw	64
  1217  101A  341C               	retlw	28
  1218  101B  3446               	retlw	70
  1219  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1220  101C                     _ROOM_TEMP:	
  1221                           
  1222                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1223  101C  3466               	retlw	102
  1224  101D  3486               	retlw	134
  1225  101E  3496               	retlw	150
  1226  101F  3443               	retlw	67
  1227  1020                     __end_of_ROOM_TEMP:	
  1228  1020                     _MAX_ADC:	
  1229                           
  1230                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1231  1020  3400               	retlw	0
  1232  1021  34C0               	retlw	192
  1233  1022  347F               	retlw	127
  1234  1023  3444               	retlw	68
  1235  1024                     __end_of_MAX_ADC:	
  1236  1024                     log@coeff:	
  1237  1024  3400               	retlw	0
  1238  1025  3400               	retlw	0
  1239  1026  3400               	retlw	0
  1240  1027  3400               	retlw	0
  1241  1028  34C4               	retlw	196
  1242  1029  34FF               	retlw	255
  1243  102A  347F               	retlw	127
  1244  102B  343F               	retlw	63
  1245  102C  3480               	retlw	128
  1246  102D  34EF               	retlw	239
  1247  102E  34FF               	retlw	255
  1248  102F  34BE               	retlw	190
  1249  1030  3490               	retlw	144
  1250  1031  34E1               	retlw	225
  1251  1032  34A9               	retlw	169
  1252  1033  343E               	retlw	62
  1253  1034  34EC               	retlw	236
  1254  1035  3482               	retlw	130
  1255  1036  3476               	retlw	118
  1256  1037  34BE               	retlw	190
  1257  1038  3482               	retlw	130
  1258  1039  34AD               	retlw	173
  1259  103A  342B               	retlw	43
  1260  103B  343E               	retlw	62
  1261  103C  340E               	retlw	14
  1262  103D  343C               	retlw	60
  1263  103E  34C3               	retlw	195
  1264  103F  34BD               	retlw	189
  1265  1040  3487               	retlw	135
  1266  1041  34D1               	retlw	209
  1267  1042  3413               	retlw	19
  1268  1043  343D               	retlw	61
  1269  1044  3441               	retlw	65
  1270  1045  3478               	retlw	120
  1271  1046  34D3               	retlw	211
  1272  1047  34BB               	retlw	187
  1273  1048                     __end_oflog@coeff:	
  1274  1048                     _BETA:	
  1275                           
  1276                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1277  1048  3400               	retlw	0
  1278  1049  3460               	retlw	96
  1279  104A  3478               	retlw	120
  1280  104B  3445               	retlw	69
  1281  104C                     __end_of_BETA:	
  1282  104C                     _BALANCE_RESISTOR:	
  1283                           
  1284                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1285  104C  3400               	retlw	0
  1286  104D  3440               	retlw	64
  1287  104E  341C               	retlw	28
  1288  104F  3446               	retlw	70
  1289  1050                     __end_of_BALANCE_RESISTOR:	
  1290  0019                     _TXREG	set	25
  1291  0018                     _RCSTAbits	set	24
  1292  001A                     _RCREG	set	26
  1293  000E                     _TMR1L	set	14
  1294  000F                     _TMR1H	set	15
  1295  000C                     _PIR1bits	set	12
  1296  001E                     _ADRESH	set	30
  1297  001F                     _ADCON0bits	set	31
  1298  0005                     _PORTAbits	set	5
  1299  0007                     _PORTCbits	set	7
  1300  0010                     _T1CON	set	16
  1301  0006                     _PORTBbits	set	6
  1302  0009                     _PORTE	set	9
  1303  0007                     _PORTC	set	7
  1304  0005                     _PORTA	set	5
  1305  0013                     _SSPBUF	set	19
  1306  000B                     _INTCONbits	set	11
  1307  0014                     _SSPCON	set	20
  1308  0006                     _PORTB	set	6
  1309  00C4                     _CREN	set	196
  1310  0081                     _TMR1CS	set	129
  1311  0085                     _T1CKPS1	set	133
  1312  0084                     _T1CKPS0	set	132
  1313  008C                     _PIE1bits	set	140
  1314  0099                     _SPBRG	set	153
  1315  0098                     _TXSTAbits	set	152
  1316  009E                     _ADRESL	set	158
  1317  009F                     _ADCON1	set	159
  1318  009F                     _ADCON1bits	set	159
  1319  0095                     _WPUB	set	149
  1320  0081                     _OPTION_REGbits	set	129
  1321  0089                     _TRISE	set	137
  1322  0087                     _TRISC	set	135
  1323  0086                     _TRISB	set	134
  1324  0085                     _TRISA	set	133
  1325  008F                     _OSCCONbits	set	143
  1326  0091                     _SSPCON2bits	set	145
  1327  0094                     _SSPSTAT	set	148
  1328  0093                     _SSPADD	set	147
  1329  0091                     _SSPCON2	set	145
  1330  043F                     _TRISC7	set	1087
  1331  043E                     _TRISC6	set	1086
  1332  0460                     _TMR1IE	set	1120
  1333  043C                     _TRISC4	set	1084
  1334  043B                     _TRISC3	set	1083
  1335  010C                     _EEDATA	set	268
  1336  010D                     _EEADR	set	269
  1337  0187                     _BAUDCTLbits	set	391
  1338  018D                     _EECON2	set	397
  1339  018C                     _EECON1bits	set	396
  1340  0189                     _ANSELH	set	393
  1341  0188                     _ANSEL	set	392
  1342  1050                     STR_1:	
  1343  1050  3476               	retlw	118	;'v'
  1344  1051  3431               	retlw	49	;'1'
  1345  1052  342E               	retlw	46	;'.'
  1346  1053  3430               	retlw	48	;'0'
  1347  1054  342E               	retlw	46	;'.'
  1348  1055  3431               	retlw	49	;'1'
  1349  1056  3432               	retlw	50	;'2'
  1350  1057  3400               	retlw	0
  1351  1058                     STR_2:	
  1352  1058  344F               	retlw	79	;'O'
  1353  1059  344B               	retlw	75	;'K'
  1354  105A  3400               	retlw	0
  1355                           
  1356                           ; #config settings
  1357  0000                     
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360  0015                     __initialization:	
  1361                           
  1362                           ; Clear objects allocated to COMMON
  1363  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1364  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1365  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1366  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1367  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1368  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1369                           
  1370                           ; Clear objects allocated to BANK1
  1371  001B  1383               	bcf	3,7	;select IRP bank0
  1372  001C  30A0               	movlw	low __pbssBANK1
  1373  001D  0084               	movwf	4
  1374  001E  30DC               	movlw	low (__pbssBANK1+60)
  1375  001F  160A  158A  22D4  120A  118A  	fcall	clear_ram0
  1376                           
  1377                           ; Clear objects allocated to BANK3
  1378  0024  1783               	bsf	3,7	;select IRP bank2
  1379  0025  3090               	movlw	low __pbssBANK3
  1380  0026  0084               	movwf	4
  1381  0027  30DA               	movlw	low (__pbssBANK3+74)
  1382  0028  160A  158A  22D4   	fcall	clear_ram0
  1383  002B                     end_of_initialization:	
  1384                           ;End of C runtime variable initialization code
  1385                           
  1386  002B                     __end_of__initialization:	
  1387  002B  0183               	clrf	3
  1388  002C  160A  118A  2CC0   	ljmp	_main	;jump to C main() function
  1389                           
  1390                           	psect	bssCOMMON
  1391  0078                     __pbssCOMMON:	
  1392  0078                     _Delay_Led_Tmr0:	
  1393  0078                     	ds	2
  1394  007A                     _minuto:	
  1395  007A                     	ds	1
  1396  007B                     _statuspower_memo:	
  1397  007B                     	ds	1
  1398  007C                     _hora:	
  1399  007C                     	ds	1
  1400  007D                     _segundo:	
  1401  007D                     	ds	1
  1402                           
  1403                           	psect	bssBANK1
  1404  00A0                     __pbssBANK1:	
  1405  00A0                     _Tensao1:	
  1406  00A0                     	ds	4
  1407  00A4                     _Vaccum0:	
  1408  00A4                     	ds	4
  1409  00A8                     _errno:	
  1410  00A8                     	ds	2
  1411  00AA                     _tempodecorrido:	
  1412  00AA                     	ds	2
  1413  00AC                     _count:	
  1414  00AC                     	ds	2
  1415  00AE                     _header:	
  1416  00AE                     	ds	2
  1417  00B0                     _milisegundo:	
  1418  00B0                     	ds	2
  1419  00B2                     _Delay_Led_Usart:	
  1420  00B2                     	ds	2
  1421  00B4                     _Delay_Led_Memory:	
  1422  00B4                     	ds	2
  1423  00B6                     _pointer:	
  1424  00B6                     	ds	1
  1425  00B7                     _destino:	
  1426  00B7                     	ds	1
  1427  00B8                     _Board_Number:	
  1428  00B8                     	ds	1
  1429  00B9                     _canal:	
  1430  00B9                     	ds	1
  1431  00BA                     _statuspower:	
  1432  00BA                     	ds	1
  1433  00BB                     _generic_status:	
  1434  00BB                     	ds	1
  1435  00BC                     _texto:	
  1436  00BC                     	ds	16
  1437  00CC                     _usart_protocol:	
  1438  00CC                     	ds	16
  1439                           
  1440                           	psect	bssBANK3
  1441  0190                     __pbssBANK3:	
  1442  0190                     _usart_buffer:	
  1443  0190                     	ds	42
  1444  01BA                     _buffer:	
  1445  01BA                     	ds	32
  1446                           
  1447                           	psect	clrtext
  1448  1AD4                     clear_ram0:	
  1449                           ;	Called with FSR containing the base address, and
  1450                           ;	W with the last address+1
  1451                           
  1452  1AD4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1453  1AD5                     clrloop0:	
  1454  1AD5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1455  1AD6  0A84               	incf	4,f	;increment pointer
  1456  1AD7  0604               	xorwf	4,w	;XOR with final address
  1457  1AD8  1903               	btfsc	3,2	;have we reached the end yet?
  1458  1AD9  3400               	retlw	0	;all done for this memory range, return
  1459  1ADA  0604               	xorwf	4,w	;XOR again to restore value
  1460  1ADB  2AD5               	goto	clrloop0	;do the next byte
  1461                           
  1462                           	psect	cstackBANK1
  1463  00DC                     __pcstackBANK1:	
  1464  00DC                     Decodify_Command@dados:	
  1465  00DC                     MediaPlacaVaccum@Valor:	
  1466                           ; 2 bytes @ 0x0
  1467                           
  1468                           
  1469                           ; 4 bytes @ 0x0
  1470  00DC                     	ds	2
  1471  00DE                     Decodify_Command@add:	
  1472                           
  1473                           ; 1 bytes @ 0x2
  1474  00DE                     	ds	1
  1475  00DF                     Decodify_Command@tempint:	
  1476                           
  1477                           ; 2 bytes @ 0x3
  1478  00DF                     	ds	1
  1479  00E0                     MediaPlacaVaccum@canal:	
  1480                           
  1481                           ; 1 bytes @ 0x4
  1482  00E0                     	ds	1
  1483  00E1                     Decodify_Command@OutPut:	
  1484  00E1                     MediaPlacaVaccum@Temp:	
  1485                           ; 4 bytes @ 0x5
  1486                           
  1487                           
  1488                           ; 4 bytes @ 0x5
  1489  00E1                     	ds	4
  1490  00E5                     Decodify_Command@tempchar:	
  1491  00E5                     MediaPlacaVaccum@i:	
  1492                           ; 1 bytes @ 0x9
  1493                           
  1494                           
  1495                           ; 2 bytes @ 0x9
  1496  00E5                     	ds	1
  1497  00E6                     Decodify_Command@sizedata:	
  1498                           
  1499                           ; 1 bytes @ 0xA
  1500  00E6                     	ds	1
  1501  00E7                     Decodify_Command@add_24LCxxxx:	
  1502                           
  1503                           ; 4 bytes @ 0xB
  1504  00E7                     	ds	4
  1505                           
  1506                           	psect	cstackCOMMON
  1507  0070                     __pcstackCOMMON:	
  1508  0070                     ?_I2C_Master_Start:	
  1509  0070                     ?_I2C_Master_Stop:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_I2C_Master_RepeatedStart:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_ADC_init:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_MediaPlacaVaccum:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_Decodify_Command:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_USART_to_Protocol:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_Send_To_MB:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_Send_Reply_OK:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_EEPROM_Read_Byte:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_USART_putc:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_Package_Usart_is_for_me:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_I2C_Master_Wait:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_main:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_isr:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ??_isr:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554                           
  1555                           ; 1 bytes @ 0x0
  1556  0070                     	ds	6
  1557  0076                     isr@tempo:	
  1558                           
  1559                           ; 2 bytes @ 0x6
  1560  0076                     	ds	2
  1561                           
  1562                           	psect	cstackBANK0
  1563  0020                     __pcstackBANK0:	
  1564  0020                     ?___flge:	
  1565  0020                     ?_my_delay_ms_WDT:	
  1566                           ; 1 bit 
  1567                           
  1568  0020                     ??_ADC_init:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0020                     ?_USART_init:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0020                     ??_USART_to_Protocol:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0020                     ?_EEPROM_Write_Byte:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0020                     ??_EEPROM_Read_Byte:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0020                     ??_USART_putc:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0020                     ?_my_delay_ms:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0020                     ??_Package_Usart_is_for_me:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0020                     ?_PROCULUS_Delay:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0020                     ??_I2C_Master_Wait:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0020                     ?_strlen:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0020                     ?_captura:	
  1602                           ; 2 bytes @ 0x0
  1603                           
  1604  0020                     ?__Umul8_16:	
  1605                           ; 2 bytes @ 0x0
  1606                           
  1607  0020                     ?___lwdiv:	
  1608                           ; 2 bytes @ 0x0
  1609                           
  1610  0020                     ?___lldiv:	
  1611                           ; 2 bytes @ 0x0
  1612                           
  1613  0020                     EEPROM_Write_Byte@dado:	
  1614                           ; 4 bytes @ 0x0
  1615                           
  1616  0020                     Package_Usart_is_for_me@retorno:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0020                     USART_putc@value:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0020                     __Umul8_16@multiplicand:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0020                     PROCULUS_Delay@tempo_ms:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0020                     ___lwdiv@divisor:	
  1629                           ; 2 bytes @ 0x0
  1630                           
  1631  0020                     my_delay_ms@time:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634  0020                     my_delay_ms_WDT@time:	
  1635                           ; 4 bytes @ 0x0
  1636                           
  1637  0020                     USART_init@baudrate:	
  1638                           ; 4 bytes @ 0x0
  1639                           
  1640  0020                     ___lldiv@divisor:	
  1641                           ; 4 bytes @ 0x0
  1642                           
  1643  0020                     ___flge@ff1:	
  1644                           ; 4 bytes @ 0x0
  1645                           
  1646                           
  1647                           ; 4 bytes @ 0x0
  1648  0020                     	ds	1
  1649  0021                     ??_Send_To_MB:	
  1650  0021                     ?_USART_put_string:	
  1651                           ; 1 bytes @ 0x1
  1652                           
  1653  0021                     ??_EEPROM_Write_Byte:	
  1654                           ; 1 bytes @ 0x1
  1655                           
  1656  0021                     ?_USART_put_buffer:	
  1657                           ; 1 bytes @ 0x1
  1658                           
  1659  0021                     Send_To_MB@size:	
  1660                           ; 1 bytes @ 0x1
  1661                           
  1662  0021                     USART_put_buffer@size:	
  1663                           ; 1 bytes @ 0x1
  1664                           
  1665  0021                     USART_put_string@vetor:	
  1666                           ; 2 bytes @ 0x1
  1667                           
  1668                           
  1669                           ; 2 bytes @ 0x1
  1670  0021                     	ds	1
  1671  0022                     ??_strlen:	
  1672  0022                     ??_captura:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675  0022                     ??_PROCULUS_Delay:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678  0022                     ??__Umul8_16:	
  1679                           ; 1 bytes @ 0x2
  1680                           
  1681  0022                     I2C_Master_Wait@tempo:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684  0022                     EEPROM_Read_Byte@addr:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687  0022                     USART_to_Protocol@i:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690  0022                     ___lwdiv@dividend:	
  1691                           ; 2 bytes @ 0x2
  1692                           
  1693                           
  1694                           ; 2 bytes @ 0x2
  1695  0022                     	ds	1
  1696  0023                     ??_I2C_Master_Start:	
  1697  0023                     ?_I2C_Master_Write:	
  1698                           ; 1 bytes @ 0x3
  1699                           
  1700  0023                     ??_I2C_Master_Stop:	
  1701                           ; 1 bytes @ 0x3
  1702                           
  1703  0023                     ??_I2C_Master_RepeatedStart:	
  1704                           ; 1 bytes @ 0x3
  1705                           
  1706  0023                     ??_USART_put_string:	
  1707                           ; 1 bytes @ 0x3
  1708                           
  1709  0023                     ?_EEPROM_Read_String:	
  1710                           ; 1 bytes @ 0x3
  1711                           
  1712  0023                     ??_USART_put_buffer:	
  1713                           ; 1 bytes @ 0x3
  1714                           
  1715  0023                     ?_I2C_Master_Read:	
  1716                           ; 1 bytes @ 0x3
  1717                           
  1718  0023                     ?_EEPROM_Read_Integer:	
  1719                           ; 2 bytes @ 0x3
  1720                           
  1721  0023                     EEPROM_Write_Byte@addr:	
  1722                           ; 2 bytes @ 0x3
  1723                           
  1724  0023                     EEPROM_Read_String@dado:	
  1725                           ; 1 bytes @ 0x3
  1726                           
  1727  0023                     strlen@s:	
  1728                           ; 1 bytes @ 0x3
  1729                           
  1730  0023                     I2C_Master_Write@d:	
  1731                           ; 1 bytes @ 0x3
  1732                           
  1733  0023                     I2C_Master_Read@a:	
  1734                           ; 2 bytes @ 0x3
  1735                           
  1736  0023                     USART_put_string@ptr:	
  1737                           ; 2 bytes @ 0x3
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0x3
  1741  0023                     	ds	1
  1742  0024                     ??_my_delay_ms_WDT:	
  1743  0024                     ??_USART_init:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0024                     ??_EEPROM_Read_String:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0024                     ??_my_delay_ms:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0024                     ??___lwdiv:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0024                     EEPROM_Write_Byte@last_GIE:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0024                     USART_to_Protocol@usart_protocol:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0024                     strlen@cp:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764  0024                     PROCULUS_Delay@i:	
  1765                           ; 1 bytes @ 0x4
  1766                           
  1767  0024                     __Umul8_16@product:	
  1768                           ; 2 bytes @ 0x4
  1769                           
  1770  0024                     ___lldiv@dividend:	
  1771                           ; 2 bytes @ 0x4
  1772                           
  1773  0024                     ___flge@ff2:	
  1774                           ; 4 bytes @ 0x4
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x4
  1778  0024                     	ds	1
  1779  0025                     ??_I2C_Master_Write:	
  1780  0025                     ??_I2C_Master_Read:	
  1781                           ; 1 bytes @ 0x5
  1782                           
  1783  0025                     ??_EEPROM_Read_Integer:	
  1784                           ; 1 bytes @ 0x5
  1785                           
  1786  0025                     ?_EEPROM_Write_Integer:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0025                     ??_Send_Reply_OK:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0025                     ?_EEPROM_Write_String:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0025                     EEPROM_Write_String@dado:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798  0025                     EEPROM_Read_String@addr:	
  1799                           ; 1 bytes @ 0x5
  1800                           
  1801  0025                     USART_put_buffer@vetor:	
  1802                           ; 1 bytes @ 0x5
  1803                           
  1804  0025                     ___lwdiv@counter:	
  1805                           ; 1 bytes @ 0x5
  1806                           
  1807  0025                     EEPROM_Write_Integer@dado:	
  1808                           ; 1 bytes @ 0x5
  1809                           
  1810                           
  1811                           ; 2 bytes @ 0x5
  1812  0025                     	ds	1
  1813  0026                     ??_EEPROM_Write_String:	
  1814  0026                     EEPROM_Read_Integer@addr:	
  1815                           ; 1 bytes @ 0x6
  1816                           
  1817  0026                     EEPROM_Read_String@c:	
  1818                           ; 1 bytes @ 0x6
  1819                           
  1820  0026                     USART_init@i:	
  1821                           ; 1 bytes @ 0x6
  1822                           
  1823  0026                     USART_put_buffer@loop:	
  1824                           ; 1 bytes @ 0x6
  1825                           
  1826  0026                     ___lwdiv@quotient:	
  1827                           ; 1 bytes @ 0x6
  1828                           
  1829  0026                     __Umul8_16@word_mpld:	
  1830                           ; 2 bytes @ 0x6
  1831                           
  1832  0026                     my_delay_ms@i:	
  1833                           ; 2 bytes @ 0x6
  1834                           
  1835  0026                     my_delay_ms_WDT@i:	
  1836                           ; 4 bytes @ 0x6
  1837                           
  1838                           
  1839                           ; 4 bytes @ 0x6
  1840  0026                     	ds	1
  1841  0027                     ??_EEPROM_Write_Integer:	
  1842  0027                     EEPROM_Read_Integer@ptr:	
  1843                           ; 1 bytes @ 0x7
  1844                           
  1845  0027                     EEPROM_Write_String@addr:	
  1846                           ; 1 bytes @ 0x7
  1847                           
  1848  0027                     USART_put_buffer@ptr:	
  1849                           ; 1 bytes @ 0x7
  1850                           
  1851  0027                     I2C_Master_Read@temp:	
  1852                           ; 1 bytes @ 0x7
  1853                           
  1854                           
  1855                           ; 2 bytes @ 0x7
  1856  0027                     	ds	1
  1857  0028                     ??___lldiv:	
  1858  0028                     ??___flge:	
  1859                           ; 1 bytes @ 0x8
  1860                           
  1861  0028                     __Umul8_16@multiplier:	
  1862                           ; 1 bytes @ 0x8
  1863                           
  1864  0028                     EEPROM_Read_Integer@result:	
  1865                           ; 1 bytes @ 0x8
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x8
  1869  0028                     	ds	1
  1870  0029                     ?___flmul:	
  1871  0029                     ___lldiv@quotient:	
  1872                           ; 4 bytes @ 0x9
  1873                           
  1874  0029                     ___flmul@b:	
  1875                           ; 4 bytes @ 0x9
  1876                           
  1877                           
  1878                           ; 4 bytes @ 0x9
  1879  0029                     	ds	1
  1880  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1881  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1882                           ; 1 bytes @ 0xA
  1883                           
  1884  002A                     ?_EEPROM_24C1025_Write_Str:	
  1885                           ; 1 bytes @ 0xA
  1886                           
  1887  002A                     ?_EEPROM_24C1025_Read_Str:	
  1888                           ; 1 bytes @ 0xA
  1889                           
  1890  002A                     ?_ADC_Max_10Bits:	
  1891                           ; 1 bytes @ 0xA
  1892                           
  1893  002A                     EEPROM_Write_Integer@ptr:	
  1894                           ; 2 bytes @ 0xA
  1895                           
  1896  002A                     EEPROM_Read_Integer@i:	
  1897                           ; 1 bytes @ 0xA
  1898                           
  1899  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1900                           ; 1 bytes @ 0xA
  1901                           
  1902  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1903                           ; 4 bytes @ 0xA
  1904                           
  1905  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1906                           ; 4 bytes @ 0xA
  1907                           
  1908  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  1909                           ; 4 bytes @ 0xA
  1910                           
  1911                           
  1912                           ; 4 bytes @ 0xA
  1913  002A                     	ds	1
  1914  002B                     EEPROM_Write_Integer@addr:	
  1915                           
  1916                           ; 1 bytes @ 0xB
  1917  002B                     	ds	1
  1918  002C                     ??_ADC_Max_10Bits:	
  1919  002C                     EEPROM_Write_Integer@i:	
  1920                           ; 1 bytes @ 0xC
  1921                           
  1922                           
  1923                           ; 1 bytes @ 0xC
  1924  002C                     	ds	1
  1925  002D                     ADC_Max_10Bits@canal:	
  1926  002D                     ___lldiv@counter:	
  1927                           ; 1 bytes @ 0xD
  1928                           
  1929  002D                     ___flmul@a:	
  1930                           ; 1 bytes @ 0xD
  1931                           
  1932                           
  1933                           ; 4 bytes @ 0xD
  1934  002D                     	ds	1
  1935  002E                     ?_I2C_Master_Init:	
  1936  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1937                           ; 1 bytes @ 0xE
  1938                           
  1939  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1940                           ; 1 bytes @ 0xE
  1941                           
  1942  002E                     EEPROM_24C1025_Write_Str@data:	
  1943                           ; 1 bytes @ 0xE
  1944                           
  1945  002E                     EEPROM_24C1025_Read_Str@texto:	
  1946                           ; 1 bytes @ 0xE
  1947                           
  1948  002E                     ADC_Max_10Bits@Temp:	
  1949                           ; 1 bytes @ 0xE
  1950                           
  1951  002E                     I2C_Master_Init@c:	
  1952                           ; 2 bytes @ 0xE
  1953                           
  1954                           
  1955                           ; 4 bytes @ 0xE
  1956  002E                     	ds	1
  1957  002F                     ??_EEPROM_24C1025_Write_Str:	
  1958  002F                     ??_EEPROM_24C1025_Read_Str:	
  1959                           ; 1 bytes @ 0xF
  1960                           
  1961  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1962                           ; 1 bytes @ 0xF
  1963                           
  1964  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1965                           ; 1 bytes @ 0xF
  1966                           
  1967                           
  1968                           ; 2 bytes @ 0xF
  1969  002F                     	ds	1
  1970  0030                     ??_EEPROM_24C1025_Write_Buffer:	
  1971  0030                     ADC_Max_10Bits@value:	
  1972                           ; 1 bytes @ 0x10
  1973                           
  1974                           
  1975                           ; 2 bytes @ 0x10
  1976  0030                     	ds	1
  1977  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  1978  0031                     ??___flmul:	
  1979                           ; 1 bytes @ 0x11
  1980                           
  1981  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  1982                           ; 1 bytes @ 0x11
  1983                           
  1984  0031                     EEPROM_24C1025_Read_Str@cnt:	
  1985                           ; 1 bytes @ 0x11
  1986                           
  1987                           
  1988                           ; 1 bytes @ 0x11
  1989  0031                     	ds	1
  1990  0032                     ??_I2C_Master_Init:	
  1991  0032                     EEPROM_24C1025_Write_Buffer@count:	
  1992                           ; 1 bytes @ 0x12
  1993                           
  1994  0032                     EEPROM_24C1025_Write_Str@range:	
  1995                           ; 1 bytes @ 0x12
  1996                           
  1997  0032                     EEPROM_24C1025_Read_Str@chip_add:	
  1998                           ; 1 bytes @ 0x12
  1999                           
  2000  0032                     ADC_Max_10Bits@i:	
  2001                           ; 1 bytes @ 0x12
  2002                           
  2003                           
  2004                           ; 1 bytes @ 0x12
  2005  0032                     	ds	1
  2006  0033                     ?___xxtofl:	
  2007  0033                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2008                           ; 4 bytes @ 0x13
  2009                           
  2010  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2011                           ; 1 bytes @ 0x13
  2012                           
  2013  0033                     EEPROM_24C1025_Read_Str@range:	
  2014                           ; 1 bytes @ 0x13
  2015                           
  2016  0033                     ___xxtofl@val:	
  2017                           ; 1 bytes @ 0x13
  2018                           
  2019                           
  2020                           ; 4 bytes @ 0x13
  2021  0033                     	ds	1
  2022  0034                     EEPROM_24C1025_Write_Buffer@range:	
  2023  0034                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2024                           ; 1 bytes @ 0x14
  2025                           
  2026  0034                     EEPROM_24C1025_Read_Str@ctrl:	
  2027                           ; 1 bytes @ 0x14
  2028                           
  2029                           
  2030                           ; 1 bytes @ 0x14
  2031  0034                     	ds	1
  2032  0035                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2033  0035                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2034                           ; 1 bytes @ 0x15
  2035                           
  2036                           
  2037                           ; 1 bytes @ 0x15
  2038  0035                     	ds	1
  2039  0036                     ?_EEPROM_24C1025_Write_Byte:	
  2040  0036                     EEPROM_24C1025_Read_Buffer@range:	
  2041                           ; 1 bytes @ 0x16
  2042                           
  2043  0036                     ___flmul@sign:	
  2044                           ; 1 bytes @ 0x16
  2045                           
  2046  0036                     EEPROM_24C1025_Write_Byte@mem_add:	
  2047                           ; 1 bytes @ 0x16
  2048                           
  2049                           
  2050                           ; 4 bytes @ 0x16
  2051  0036                     	ds	1
  2052  0037                     ??___xxtofl:	
  2053  0037                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2054                           ; 1 bytes @ 0x17
  2055                           
  2056  0037                     ___flmul@aexp:	
  2057                           ; 1 bytes @ 0x17
  2058                           
  2059                           
  2060                           ; 1 bytes @ 0x17
  2061  0037                     	ds	1
  2062  0038                     ?_EEPROM_24C1025_Read_Byte:	
  2063  0038                     ?_EEPROM_24C1025_Read_Int:	
  2064                           ; 1 bytes @ 0x18
  2065                           
  2066  0038                     ___flmul@bexp:	
  2067                           ; 2 bytes @ 0x18
  2068                           
  2069  0038                     EEPROM_24C1025_Read_Byte@mem_add:	
  2070                           ; 1 bytes @ 0x18
  2071                           
  2072  0038                     EEPROM_24C1025_Read_Int@mem_add:	
  2073                           ; 4 bytes @ 0x18
  2074                           
  2075                           
  2076                           ; 4 bytes @ 0x18
  2077  0038                     	ds	1
  2078  0039                     ___flmul@grs:	
  2079                           
  2080                           ; 4 bytes @ 0x19
  2081  0039                     	ds	1
  2082  003A                     EEPROM_24C1025_Write_Byte@data:	
  2083                           
  2084                           ; 1 bytes @ 0x1A
  2085  003A                     	ds	1
  2086  003B                     ??_EEPROM_24C1025_Write_Byte:	
  2087  003B                     ___xxtofl@sign:	
  2088                           ; 1 bytes @ 0x1B
  2089                           
  2090                           
  2091                           ; 1 bytes @ 0x1B
  2092  003B                     	ds	1
  2093  003C                     ??_EEPROM_24C1025_Read_Byte:	
  2094  003C                     ??_EEPROM_24C1025_Read_Int:	
  2095                           ; 1 bytes @ 0x1C
  2096                           
  2097  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2098                           ; 1 bytes @ 0x1C
  2099                           
  2100  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2101                           ; 1 bytes @ 0x1C
  2102                           
  2103  003C                     ___xxtofl@exp:	
  2104                           ; 1 bytes @ 0x1C
  2105                           
  2106                           
  2107                           ; 1 bytes @ 0x1C
  2108  003C                     	ds	1
  2109  003D                     EEPROM_24C1025_Read_Byte@data:	
  2110  003D                     ___flmul@prod:	
  2111                           ; 1 bytes @ 0x1D
  2112                           
  2113  003D                     ___xxtofl@arg:	
  2114                           ; 4 bytes @ 0x1D
  2115                           
  2116                           
  2117                           ; 4 bytes @ 0x1D
  2118  003D                     	ds	1
  2119  003E                     EEPROM_24C1025_Read_Int@chip_add:	
  2120                           
  2121                           ; 1 bytes @ 0x1E
  2122  003E                     	ds	1
  2123  003F                     EEPROM_24C1025_Read_Int@data:	
  2124                           
  2125                           ; 2 bytes @ 0x1F
  2126  003F                     	ds	2
  2127  0041                     ?_ADC_Media_10bits:	
  2128  0041                     ?___fldiv:	
  2129                           ; 4 bytes @ 0x21
  2130                           
  2131  0041                     ___flmul@temp:	
  2132                           ; 4 bytes @ 0x21
  2133                           
  2134  0041                     ___fldiv@a:	
  2135                           ; 2 bytes @ 0x21
  2136                           
  2137                           
  2138                           ; 4 bytes @ 0x21
  2139  0041                     	ds	2
  2140  0043                     ?___fltol:	
  2141  0043                     ___fltol@f1:	
  2142                           ; 4 bytes @ 0x23
  2143                           
  2144                           
  2145                           ; 4 bytes @ 0x23
  2146  0043                     	ds	2
  2147  0045                     ??_ADC_Media_10bits:	
  2148  0045                     ___fldiv@b:	
  2149                           ; 1 bytes @ 0x25
  2150                           
  2151                           
  2152                           ; 4 bytes @ 0x25
  2153  0045                     	ds	1
  2154  0046                     ADC_Media_10bits@canal:	
  2155                           
  2156                           ; 1 bytes @ 0x26
  2157  0046                     	ds	1
  2158  0047                     ??___fltol:	
  2159  0047                     ADC_Media_10bits@value:	
  2160                           ; 1 bytes @ 0x27
  2161                           
  2162                           
  2163                           ; 2 bytes @ 0x27
  2164  0047                     	ds	2
  2165  0049                     ??___fldiv:	
  2166  0049                     ADC_Media_10bits@i:	
  2167                           ; 1 bytes @ 0x29
  2168                           
  2169                           
  2170                           ; 1 bytes @ 0x29
  2171  0049                     	ds	1
  2172  004A                     ?___fladd:	
  2173  004A                     ___fladd@b:	
  2174                           ; 4 bytes @ 0x2A
  2175                           
  2176                           
  2177                           ; 4 bytes @ 0x2A
  2178  004A                     	ds	2
  2179  004C                     ___fltol@sign1:	
  2180                           
  2181                           ; 1 bytes @ 0x2C
  2182  004C                     	ds	1
  2183  004D                     ___fltol@exp1:	
  2184                           
  2185                           ; 1 bytes @ 0x2D
  2186  004D                     	ds	1
  2187  004E                     ?_USART_put_int:	
  2188  004E                     ?_EEPROM_24C1025_Write_Int:	
  2189                           ; 1 bytes @ 0x2E
  2190                           
  2191  004E                     USART_put_int@value:	
  2192                           ; 1 bytes @ 0x2E
  2193                           
  2194  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2195                           ; 2 bytes @ 0x2E
  2196                           
  2197  004E                     ___fladd@a:	
  2198                           ; 4 bytes @ 0x2E
  2199                           
  2200  004E                     ___fldiv@rem:	
  2201                           ; 4 bytes @ 0x2E
  2202                           
  2203                           
  2204                           ; 4 bytes @ 0x2E
  2205  004E                     	ds	2
  2206  0050                     ??_USART_put_int:	
  2207                           
  2208                           ; 1 bytes @ 0x30
  2209  0050                     	ds	1
  2210  0051                     USART_put_int@dado:	
  2211                           
  2212                           ; 1 bytes @ 0x31
  2213  0051                     	ds	1
  2214  0052                     ?_PROCULUS_Control_Register_Write:	
  2215  0052                     ?_PROCULUS_VP_Write:	
  2216                           ; 1 bytes @ 0x32
  2217                           
  2218  0052                     ??___fladd:	
  2219                           ; 1 bytes @ 0x32
  2220                           
  2221  0052                     PROCULUS_Control_Register_Write@size:	
  2222                           ; 1 bytes @ 0x32
  2223                           
  2224  0052                     ___fldiv@sign:	
  2225                           ; 1 bytes @ 0x32
  2226                           
  2227  0052                     EEPROM_24C1025_Write_Int@data:	
  2228                           ; 1 bytes @ 0x32
  2229                           
  2230  0052                     PROCULUS_VP_Write@vp:	
  2231                           ; 2 bytes @ 0x32
  2232                           
  2233                           
  2234                           ; 2 bytes @ 0x32
  2235  0052                     	ds	1
  2236  0053                     ??_PROCULUS_Control_Register_Write:	
  2237  0053                     ___fldiv@new_exp:	
  2238                           ; 1 bytes @ 0x33
  2239                           
  2240                           
  2241                           ; 2 bytes @ 0x33
  2242  0053                     	ds	1
  2243  0054                     ??_EEPROM_24C1025_Write_Int:	
  2244  0054                     PROCULUS_Control_Register_Write@vetor:	
  2245                           ; 1 bytes @ 0x34
  2246                           
  2247  0054                     PROCULUS_VP_Write@vetor:	
  2248                           ; 1 bytes @ 0x34
  2249                           
  2250                           
  2251                           ; 1 bytes @ 0x34
  2252  0054                     	ds	1
  2253  0055                     PROCULUS_Control_Register_Write@i:	
  2254  0055                     PROCULUS_VP_Write@size:	
  2255                           ; 1 bytes @ 0x35
  2256                           
  2257  0055                     ___fldiv@grs:	
  2258                           ; 1 bytes @ 0x35
  2259                           
  2260                           
  2261                           ; 4 bytes @ 0x35
  2262  0055                     	ds	1
  2263  0056                     ?_PROCULUS_Show_Screen:	
  2264  0056                     ?_PROCULUS_Buzzer:	
  2265                           ; 1 bytes @ 0x36
  2266                           
  2267  0056                     ??_PROCULUS_VP_Write:	
  2268                           ; 1 bytes @ 0x36
  2269                           
  2270  0056                     EEPROM_24C1025_Write_Int@chip_add:	
  2271                           ; 1 bytes @ 0x36
  2272                           
  2273  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2274                           ; 1 bytes @ 0x36
  2275                           
  2276  0056                     PROCULUS_Show_Screen@screen:	
  2277                           ; 2 bytes @ 0x36
  2278                           
  2279                           
  2280                           ; 2 bytes @ 0x36
  2281  0056                     	ds	1
  2282  0057                     PROCULUS_VP_Write@i:	
  2283  0057                     EEPROM_24C1025_Write_Int@local:	
  2284                           ; 1 bytes @ 0x37
  2285                           
  2286                           
  2287                           ; 2 bytes @ 0x37
  2288  0057                     	ds	1
  2289  0058                     ??_PROCULUS_Show_Screen:	
  2290  0058                     ??_PROCULUS_Buzzer:	
  2291                           ; 1 bytes @ 0x38
  2292                           
  2293  0058                     ?_PROCULUS_VP_Write_String:	
  2294                           ; 1 bytes @ 0x38
  2295                           
  2296  0058                     PROCULUS_VP_Write_String@vp:	
  2297                           ; 1 bytes @ 0x38
  2298                           
  2299                           
  2300                           ; 2 bytes @ 0x38
  2301  0058                     	ds	1
  2302  0059                     ?_Save_Log:	
  2303  0059                     ?_EEPROM_24C1025_Fill_All:	
  2304                           ; 1 bytes @ 0x39
  2305                           
  2306  0059                     ___fldiv@bexp:	
  2307                           ; 1 bytes @ 0x39
  2308                           
  2309  0059                     EEPROM_24C1025_Fill_All@value:	
  2310                           ; 1 bytes @ 0x39
  2311                           
  2312  0059                     PROCULUS_Buzzer@vetor:	
  2313                           ; 2 bytes @ 0x39
  2314                           
  2315  0059                     PROCULUS_Show_Screen@vetor:	
  2316                           ; 2 bytes @ 0x39
  2317                           
  2318  0059                     Save_Log@add_datalog:	
  2319                           ; 3 bytes @ 0x39
  2320                           
  2321                           
  2322                           ; 4 bytes @ 0x39
  2323  0059                     	ds	1
  2324  005A                     PROCULUS_VP_Write_String@text:	
  2325  005A                     ___fladd@signs:	
  2326                           ; 1 bytes @ 0x3A
  2327                           
  2328  005A                     ___fldiv@aexp:	
  2329                           ; 1 bytes @ 0x3A
  2330                           
  2331                           
  2332                           ; 1 bytes @ 0x3A
  2333  005A                     	ds	1
  2334  005B                     ??_PROCULUS_VP_Write_String:	
  2335  005B                     ??_EEPROM_24C1025_Fill_All:	
  2336                           ; 1 bytes @ 0x3B
  2337                           
  2338  005B                     EEPROM_24C1025_Fill_All@chip_add:	
  2339                           ; 1 bytes @ 0x3B
  2340                           
  2341  005B                     ___fladd@aexp:	
  2342                           ; 1 bytes @ 0x3B
  2343                           
  2344                           
  2345                           ; 1 bytes @ 0x3B
  2346  005B                     	ds	1
  2347  005C                     ___fladd@bexp:	
  2348  005C                     EEPROM_24C1025_Fill_All@mem_add:	
  2349                           ; 1 bytes @ 0x3C
  2350                           
  2351                           
  2352                           ; 4 bytes @ 0x3C
  2353  005C                     	ds	1
  2354  005D                     ??_Save_Log:	
  2355  005D                     ___fladd@grs:	
  2356                           ; 1 bytes @ 0x3D
  2357                           
  2358                           
  2359                           ; 1 bytes @ 0x3D
  2360  005D                     	ds	1
  2361  005E                     ?___flsub:	
  2362  005E                     ___flsub@a:	
  2363                           ; 4 bytes @ 0x3E
  2364                           
  2365                           
  2366                           ; 4 bytes @ 0x3E
  2367  005E                     	ds	2
  2368  0060                     ??_Decodify_Command:	
  2369                           
  2370                           ; 1 bytes @ 0x40
  2371  0060                     	ds	2
  2372  0062                     ___flsub@b:	
  2373                           
  2374                           ; 4 bytes @ 0x42
  2375  0062                     	ds	4
  2376  0066                     ??_MediaPlacaVaccum:	
  2377  0066                     ??___flsub:	
  2378                           ; 1 bytes @ 0x46
  2379                           
  2380                           
  2381                           ; 1 bytes @ 0x46
  2382  0066                     	ds	4
  2383  006A                     ??_main:	
  2384                           
  2385                           ; 1 bytes @ 0x4A
  2386  006A                     	ds	3
  2387  006D                     main@reset:	
  2388                           
  2389                           ; 2 bytes @ 0x4D
  2390  006D                     	ds	2
  2391                           
  2392                           	psect	maintext
  2393  14C0                     __pmaintext:	
  2394 ;;
  2395 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2396 ;;
  2397 ;; *************** function _main *****************
  2398 ;; Defined at:
  2399 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  reset           2   77[BANK0 ] unsigned int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : B00/0
  2410 ;;		On exit  : 300/100
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       2       0       0       0
  2415 ;;      Temps:          0       3       0       0       0
  2416 ;;      Totals:         0       5       0       0       0
  2417 ;;Total ram usage:        5 bytes
  2418 ;; Hardware stack levels required when called:    7
  2419 ;; This function calls:
  2420 ;;		_ADC_init
  2421 ;;		_Decodify_Command
  2422 ;;		_EEPROM_Read_Integer
  2423 ;;		_EEPROM_Write_Integer
  2424 ;;		_I2C_Master_Init
  2425 ;;		_MediaPlacaVaccum
  2426 ;;		_USART_init
  2427 ;;		_my_delay_ms_WDT
  2428 ;; This function is called by:
  2429 ;;		Startup code after reset
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _main
  2435  14C0                     _main:	
  2436                           
  2437                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2441  14C0  3002               	movlw	2
  2442  14C1  1283               	bcf	3,5	;RP0=0, select bank0
  2443  14C2  1303               	bcf	3,6	;RP1=0, select bank0
  2444  14C3  00EC               	movwf	??_main+2
  2445  14C4  3004               	movlw	4
  2446  14C5  00EB               	movwf	??_main+1
  2447  14C6  30B9               	movlw	185
  2448  14C7  00EA               	movwf	??_main
  2449  14C8                     u7707:	
  2450  14C8  0BEA               	decfsz	??_main,f
  2451  14C9  2CC8               	goto	u7707
  2452  14CA  0BEB               	decfsz	??_main+1,f
  2453  14CB  2CC8               	goto	u7707
  2454  14CC  0BEC               	decfsz	??_main+2,f
  2455  14CD  2CC8               	goto	u7707
  2456  14CE  2CCF               	nop2
  2457                           
  2458                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2459  14CF  1683               	bsf	3,5	;RP0=1, select bank1
  2460  14D0  1303               	bcf	3,6	;RP1=0, select bank1
  2461  14D1  160F               	bsf	15,4	;volatile
  2462                           
  2463                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2464  14D2  168F               	bsf	15,5	;volatile
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2467  14D3  170F               	bsf	15,6	;volatile
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2470  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  2471  14D5  0185               	clrf	5	;volatile
  2472                           
  2473                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2474  14D6  0186               	clrf	6	;volatile
  2475                           
  2476                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2477  14D7  0187               	clrf	7	;volatile
  2478                           
  2479                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2480  14D8  0189               	clrf	9	;volatile
  2481                           
  2482                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2483  14D9  30EF               	movlw	239
  2484  14DA  1683               	bsf	3,5	;RP0=1, select bank1
  2485  14DB  0085               	movwf	5	;volatile
  2486                           
  2487                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2488  14DC  300F               	movlw	15
  2489  14DD  0086               	movwf	6	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2492  14DE  30F0               	movlw	240
  2493  14DF  0087               	movwf	7	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2496  14E0  30FF               	movlw	255
  2497  14E1  0089               	movwf	9	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2500  14E2  3011               	movlw	17
  2501  14E3  1703               	bsf	3,6	;RP1=1, select bank3
  2502  14E4  0088               	movwf	8	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2505  14E5  0189               	clrf	9	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2508  14E6  1303               	bcf	3,6	;RP1=0, select bank1
  2509  14E7  1381               	bcf	1,7	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2512  14E8  300F               	movlw	15
  2513  14E9  0095               	movwf	21	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2516  14EA  1283               	bcf	3,5	;RP0=0, select bank0
  2517  14EB  1786               	bsf	6,7	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2520  14EC  1706               	bsf	6,6	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2523  14ED  1686               	bsf	6,5	;volatile
  2524                           
  2525                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2526  14EE  3000               	movlw	0
  2527  14EF  00A3               	movwf	my_delay_ms_WDT@time+3
  2528  14F0  3000               	movlw	0
  2529  14F1  00A2               	movwf	my_delay_ms_WDT@time+2
  2530  14F2  3003               	movlw	3
  2531  14F3  00A1               	movwf	my_delay_ms_WDT@time+1
  2532  14F4  30E8               	movlw	232
  2533  14F5  00A0               	movwf	my_delay_ms_WDT@time
  2534  14F6  160A  158A  2661  160A  118A  	fcall	_my_delay_ms_WDT
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2537  14FB  1683               	bsf	3,5	;RP0=1, select bank1
  2538  14FC  1281               	bcf	1,5	;volatile
  2539                           
  2540                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2541  14FD  1581               	bsf	1,3	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2544  14FE  1401               	bsf	1,0	;volatile
  2545                           
  2546                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2547  14FF  1481               	bsf	1,1	;volatile
  2548                           
  2549                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2550  1500  1501               	bsf	1,2	;volatile
  2551                           
  2552                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2553  1501  128B               	bcf	11,5	;volatile
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2556  1502  120B               	bcf	11,4	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2559  1503  178B               	bsf	11,7	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2562  1504  170B               	bsf	11,6	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2565  1505  1283               	bcf	3,5	;RP0=0, select bank0
  2566  1506  1610               	bsf	16,4	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2569  1507  1690               	bsf	16,5	;volatile
  2570                           
  2571                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2572  1508  1090               	bcf	16,1	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2575  1509  1683               	bsf	3,5	;RP0=1, select bank1
  2576  150A  140C               	bsf	12,0	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2579  150B  3001               	movlw	1
  2580  150C  1283               	bcf	3,5	;RP0=0, select bank0
  2581  150D  0090               	movwf	16	;volatile
  2582  150E  0064               	clrwdt	;# 
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2585  150F  160A  158A  22EF  160A  118A  	fcall	_ADC_init
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2588  1514  3000               	movlw	0
  2589  1515  00B1               	movwf	I2C_Master_Init@c+3
  2590  1516  3001               	movlw	1
  2591  1517  00B0               	movwf	I2C_Master_Init@c+2
  2592  1518  3086               	movlw	134
  2593  1519  00AF               	movwf	I2C_Master_Init@c+1
  2594  151A  30A0               	movlw	160
  2595  151B  00AE               	movwf	I2C_Master_Init@c
  2596  151C  160A  158A  255F  160A  118A  	fcall	_I2C_Master_Init
  2597                           
  2598                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2599  1521  3000               	movlw	0
  2600  1522  1283               	bcf	3,5	;RP0=0, select bank0
  2601  1523  00A3               	movwf	USART_init@baudrate+3
  2602  1524  3001               	movlw	1
  2603  1525  00A2               	movwf	USART_init@baudrate+2
  2604  1526  30C2               	movlw	194
  2605  1527  00A1               	movwf	USART_init@baudrate+1
  2606  1528  3000               	movlw	0
  2607  1529  00A0               	movwf	USART_init@baudrate
  2608  152A  160A  158A  2748  160A  118A  	fcall	_USART_init
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2611  152F  3010               	movlw	16
  2612  1530  160A  158A  2536  160A  118A  	fcall	_EEPROM_Read_Integer
  2613  1535  0824               	movf	?_EEPROM_Read_Integer+1,w
  2614  1536  00EE               	movwf	main@reset+1
  2615  1537  0823               	movf	?_EEPROM_Read_Integer,w
  2616  1538  00ED               	movwf	main@reset
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2619  1539  0A6D               	incf	main@reset,w
  2620  153A  1D03               	skipz
  2621  153B  2D48               	goto	l7208
  2622  153C  0A6E               	incf	main@reset+1,w
  2623  153D  1D03               	btfss	3,2
  2624  153E  2D48               	goto	l7208
  2625  153F  3000               	movlw	0
  2626  1540  00A5               	movwf	EEPROM_Write_Integer@dado
  2627  1541  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2628  1542  3010               	movlw	16
  2629  1543  160A  158A  2590  160A  118A  	fcall	_EEPROM_Write_Integer
  2630  1548                     l7208:	
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2633  1548  3001               	movlw	1
  2634  1549  1283               	bcf	3,5	;RP0=0, select bank0
  2635  154A  1303               	bcf	3,6	;RP1=0, select bank0
  2636  154B  07ED               	addwf	main@reset,f
  2637  154C  1803               	skipnc
  2638  154D  0AEE               	incf	main@reset+1,f
  2639  154E  3000               	movlw	0
  2640  154F  07EE               	addwf	main@reset+1,f
  2641                           
  2642                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2643  1550  086E               	movf	main@reset+1,w
  2644  1551  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2645  1552  086D               	movf	main@reset,w
  2646  1553  00A5               	movwf	EEPROM_Write_Integer@dado
  2647  1554  3010               	movlw	16
  2648  1555  160A  158A  2590  160A  118A  	fcall	_EEPROM_Write_Integer
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2651  155A  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2652  155B  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2655  155C  1683               	bsf	3,5	;RP0=1, select bank1
  2656  155D  1303               	bcf	3,6	;RP1=0, select bank1
  2657  155E  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2658  155F  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2659                           
  2660                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2661  1560  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2662  1561  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2665  1562  01FD               	clrf	_segundo	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2668  1563  01FC               	clrf	_hora	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2671  1564  1283               	bcf	3,5	;RP0=0, select bank0
  2672  1565  1007               	bcf	7,0	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2675  1566  1087               	bcf	7,1	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2678  1567  1105               	bcf	5,2	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2681  1568  1185               	bcf	5,3	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2684  1569  0906               	comf	6,w	;volatile
  2685  156A  390F               	andlw	15
  2686  156B  00EA               	movwf	??_main
  2687  156C  086A               	movf	??_main,w
  2688  156D  1683               	bsf	3,5	;RP0=1, select bank1
  2689  156E  00B8               	movwf	_Board_Number^(0+128)
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2692  156F  01B9               	clrf	_canal^(0+128)
  2693  1570  0AB9               	incf	_canal^(0+128),f
  2694                           
  2695                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2696  1571  113A               	bcf	_statuspower^(0+128),2
  2697  1572                     l7234:	
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2700  1572  17BB               	bsf	_generic_status^(0+128),7
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 275:          if(++canal==2) canal=0;
  2703  1573  3001               	movlw	1
  2704  1574  1283               	bcf	3,5	;RP0=0, select bank0
  2705  1575  00EA               	movwf	??_main
  2706  1576  086A               	movf	??_main,w
  2707  1577  1683               	bsf	3,5	;RP0=1, select bank1
  2708  1578  07B9               	addwf	_canal^(0+128),f
  2709  1579  3002               	movlw	2
  2710  157A  0639               	xorwf	_canal^(0+128),w
  2711  157B  1903               	btfsc	3,2
  2712  157C  01B9               	clrf	_canal^(0+128)
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 276:          MediaPlacaVaccum(canal);
  2715  157D  0839               	movf	_canal^(0+128),w
  2716  157E  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2719  1583  1683               	bsf	3,5	;RP0=1, select bank1
  2720  1584  1C3B               	btfss	_generic_status^(0+128),0
  2721  1585  2D72               	goto	l7234
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2724  1586  1703               	bsf	3,6	;RP1=1, select bank3
  2725  1587  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2726  1588  1303               	bcf	3,6	;RP1=0, select bank1
  2727  1589  00AF               	movwf	(_header+1)^(0+128)
  2728  158A  1703               	bsf	3,6	;RP1=1, select bank3
  2729  158B  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2730  158C  1303               	bcf	3,6	;RP1=0, select bank1
  2731  158D  00AE               	movwf	_header^(0+128)
  2732                           
  2733                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2734  158E  30BB               	movlw	187
  2735  158F  062E               	xorwf	_header^(0+128),w
  2736  1590  30AA               	movlw	170
  2737  1591  1903               	skipnz
  2738  1592  062F               	xorwf	(_header+1)^(0+128),w
  2739  1593  1D03               	btfss	3,2
  2740  1594  2D72               	goto	l7234
  2741                           
  2742                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2743  1595  1703               	bsf	3,6	;RP1=1, select bank3
  2744  1596  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2745  1597  1283               	bcf	3,5	;RP0=0, select bank0
  2746  1598  1303               	bcf	3,6	;RP1=0, select bank0
  2747  1599  00EA               	movwf	??_main
  2748  159A  086A               	movf	??_main,w
  2749  159B  1683               	bsf	3,5	;RP0=1, select bank1
  2750  159C  00B7               	movwf	_destino^(0+128)
  2751                           
  2752                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2753  159D  0837               	movf	_destino^(0+128),w
  2754  159E  0638               	xorwf	_Board_Number^(0+128),w
  2755  159F  1D03               	btfss	3,2
  2756  15A0  0A37               	incf	_destino^(0+128),w
  2757  15A1  1D03               	btfss	3,2
  2758  15A2  2D72               	goto	l7234
  2759                           
  2760                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2761  15A3  3014               	movlw	20
  2762  15A4  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2763  15A5  3000               	movlw	0
  2764  15A6  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2765                           
  2766                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2767  15A7  120A  118A  202F  160A  118A  	fcall	_Decodify_Command
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2770  15AC  1683               	bsf	3,5	;RP0=1, select bank1
  2771  15AD  103B               	bcf	_generic_status^(0+128),0
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 297:             }
  2774  15AE  2D72               	goto	l7234
  2775  15AF                     __end_of_main:	
  2776                           
  2777                           	psect	text1
  2778  1F48                     __ptext1:	
  2779 ;; *************** function _USART_init *****************
  2780 ;; Defined at:
  2781 ;;		line 18 in file "usart.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  i               1    6[BANK0 ] unsigned char 
  2786 ;;  erro            1    0        unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 300/0
  2793 ;;		On exit  : 300/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       4       0       0       0
  2797 ;;      Locals:         0       2       0       0       0
  2798 ;;      Temps:          0       1       0       0       0
  2799 ;;      Totals:         0       7       0       0       0
  2800 ;;Total ram usage:        7 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _USART_init
  2812  1F48                     _USART_init:	
  2813                           
  2814                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2818  1F48  304B               	movlw	75
  2819  1F49  0621               	xorwf	USART_init@baudrate+1,w
  2820  1F4A  0420               	iorwf	USART_init@baudrate,w
  2821  1F4B  0422               	iorwf	USART_init@baudrate+2,w
  2822  1F4C  0423               	iorwf	USART_init@baudrate+3,w
  2823  1F4D  1D03               	btfss	3,2
  2824  1F4E  2F59               	goto	l6846
  2825                           
  2826                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2827  1F4F  1798               	bsf	24,7	;volatile
  2828                           
  2829                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2830  1F50  1618               	bsf	24,4	;volatile
  2831                           
  2832                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2833  1F51  1683               	bsf	3,5	;RP0=1, select bank1
  2834  1F52  1518               	bsf	24,2	;volatile
  2835                           
  2836                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2837  1F53  1218               	bcf	24,4	;volatile
  2838                           
  2839                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2840  1F54  1318               	bcf	24,6	;volatile
  2841                           
  2842                           ;usart.c: 32:           SPBRG =12;
  2843  1F55  300C               	movlw	12
  2844  1F56  0099               	movwf	25	;volatile
  2845                           
  2846                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2847  1F57  170B               	bsf	11,6	;volatile
  2848  1F58  2F72               	goto	L1
  2849  1F59                     l6846:	
  2850                           ;usart.c: 35:           }
  2851                           
  2852                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2853                           
  2854  1F59  30C2               	movlw	194
  2855  1F5A  0621               	xorwf	USART_init@baudrate+1,w
  2856  1F5B  1D03               	skipz
  2857  1F5C  2F73               	goto	l6866
  2858  1F5D  0322               	decf	USART_init@baudrate+2,w
  2859  1F5E  0420               	iorwf	USART_init@baudrate,w
  2860  1F5F  0423               	iorwf	USART_init@baudrate+3,w
  2861  1F60  1D03               	btfss	3,2
  2862  1F61  2F73               	goto	l6866
  2863                           
  2864                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2865  1F62  3010               	movlw	16
  2866  1F63  1683               	bsf	3,5	;RP0=1, select bank1
  2867  1F64  0099               	movwf	25	;volatile
  2868                           
  2869                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2870  1F65  1703               	bsf	3,6	;RP1=1, select bank3
  2871  1F66  1587               	bsf	7,3	;volatile
  2872                           
  2873                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2874  1F67  1303               	bcf	3,6	;RP1=0, select bank1
  2875  1F68  1518               	bsf	24,2	;volatile
  2876                           
  2877                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2878  1F69  1283               	bcf	3,5	;RP0=0, select bank0
  2879  1F6A  1798               	bsf	24,7	;volatile
  2880                           
  2881                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2882  1F6B  1683               	bsf	3,5	;RP0=1, select bank1
  2883  1F6C  1218               	bcf	24,4	;volatile
  2884                           
  2885                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2886  1F6D  1318               	bcf	24,6	;volatile
  2887                           
  2888                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2889  1F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2890  1F6F  1618               	bsf	24,4	;volatile
  2891                           
  2892                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2893  1F70  170B               	bsf	11,6	;volatile
  2894                           
  2895                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2896  1F71  1683               	bsf	3,5	;RP0=1, select bank1
  2897  1F72                     L1:	
  2898  1F72  168C               	bsf	12,5	;volatile
  2899  1F73                     l6866:	
  2900                           
  2901                           ;usart.c: 68:      TRISC6= 1;
  2902  1F73  1683               	bsf	3,5	;RP0=1, select bank1
  2903  1F74  1707               	bsf	7,6	;volatile
  2904                           
  2905                           ;usart.c: 69:      TRISC7= 1;
  2906  1F75  1787               	bsf	7,7	;volatile
  2907                           
  2908                           ;usart.c: 71:      CREN=0;
  2909  1F76  1283               	bcf	3,5	;RP0=0, select bank0
  2910  1F77  1218               	bcf	24,4	;volatile
  2911                           
  2912                           ;usart.c: 72:      CREN=1;
  2913  1F78  1618               	bsf	24,4	;volatile
  2914                           
  2915                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2916  1F79  01A6               	clrf	USART_init@i
  2917  1F7A                     l6880:	
  2918  1F7A  081A               	movf	26,w	;volatile
  2919  1F7B  3001               	movlw	1
  2920  1F7C  00A4               	movwf	??_USART_init
  2921  1F7D  0824               	movf	??_USART_init,w
  2922  1F7E  07A6               	addwf	USART_init@i,f
  2923  1F7F  300F               	movlw	15
  2924  1F80  0226               	subwf	USART_init@i,w
  2925  1F81  1803               	btfsc	3,0
  2926  1F82  0008               	return
  2927  1F83  2F7A               	goto	l6880
  2928  1F84                     __end_of_USART_init:	
  2929                           
  2930                           	psect	text2
  2931  0D69                     __ptext2:	
  2932 ;; *************** function _MediaPlacaVaccum *****************
  2933 ;; Defined at:
  2934 ;;		line 789 in file "SlaveLiofilizadorVer1.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  canal           1    wreg     unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  canal           1    4[BANK1 ] unsigned char 
  2939 ;;  Temp            4    5[BANK1 ] float 
  2940 ;;  Valor           4    0[BANK1 ] float 
  2941 ;;  i               2    9[BANK1 ] unsigned int 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 300/100
  2948 ;;		On exit  : 200/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         0       0      11       0       0
  2953 ;;      Temps:          0       4       0       0       0
  2954 ;;      Totals:         0       4      11       0       0
  2955 ;;Total ram usage:       15 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    3
  2958 ;; This function calls:
  2959 ;;		_ADC_Max_10Bits
  2960 ;;		_ADC_Media_10bits
  2961 ;;		_Package_Usart_is_for_me
  2962 ;;		___fladd
  2963 ;;		___fldiv
  2964 ;;		___flge
  2965 ;;		___flmul
  2966 ;;		___flsub
  2967 ;;		___xxtofl
  2968 ;;		_my_delay_ms
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _MediaPlacaVaccum
  2976  0D69                     _MediaPlacaVaccum:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2980                           ;MediaPlacaVaccum@canal stored from wreg
  2981  0D69  00E0               	movwf	MediaPlacaVaccum@canal^(0+128)
  2982                           
  2983                           ;SlaveLiofilizadorVer1.c: 790:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 791:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 795:      if(canal==0)
  2984  0D6A  0860               	movf	MediaPlacaVaccum@canal^(0+128),w
  2985  0D6B  1D03               	btfss	3,2
  2986  0D6C  2F0F               	goto	l427
  2987                           
  2988                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=1;
  2989  0D6D  161F               	bsf	31,4	;volatile
  2990                           
  2991                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=1;
  2992  0D6E  169F               	bsf	31,5	;volatile
  2993                           
  2994                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  2995  0D6F  0860               	movf	MediaPlacaVaccum@canal^(0+128),w
  2996  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0D71  00E6               	movwf	??_MediaPlacaVaccum
  2998  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  2999  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3000  0D74  081F               	movf	31,w	;volatile
  3001  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3002  0D76  39C3               	andlw	-61
  3003  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3004  0D78  009F               	movwf	31	;volatile
  3005                           
  3006                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3007  0D79  3000               	movlw	0
  3008  0D7A  00A3               	movwf	my_delay_ms@time+3
  3009  0D7B  3000               	movlw	0
  3010  0D7C  00A2               	movwf	my_delay_ms@time+2
  3011  0D7D  3000               	movlw	0
  3012  0D7E  00A1               	movwf	my_delay_ms@time+1
  3013  0D7F  3001               	movlw	1
  3014  0D80  00A0               	movwf	my_delay_ms@time
  3015  0D81  160A  158A  262A  120A  158A  	fcall	_my_delay_ms
  3016                           
  3017                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3018  0D86  3000               	movlw	0
  3019  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3020  0D88  00E4               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3021  0D89  3000               	movlw	0
  3022  0D8A  00E3               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3023  0D8B  3000               	movlw	0
  3024  0D8C  00E2               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3025  0D8D  3000               	movlw	0
  3026  0D8E  00E1               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3027                           
  3028                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3029  0D8F  3001               	movlw	1
  3030  0D90  00E5               	movwf	MediaPlacaVaccum@i^(0+128)
  3031  0D91  3000               	movlw	0
  3032  0D92  00E6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3033  0D93                     l6902:	
  3034                           
  3035                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 805:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3036  0D93  0860               	movf	MediaPlacaVaccum@canal^(0+128),w
  3037  0D94  160A  118A  20A8  120A  158A  	fcall	_ADC_Media_10bits
  3038  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3039  0D9A  00CD               	movwf	___fladd@b+3
  3040  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3041  0D9C  00CC               	movwf	___fladd@b+2
  3042  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3043  0D9E  00CB               	movwf	___fladd@b+1
  3044  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3045  0DA0  00CA               	movwf	___fladd@b
  3046  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0DA2  0864               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3048  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0DA4  00D1               	movwf	___fladd@a+3
  3050  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0DA6  0863               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3052  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0DA8  00D0               	movwf	___fladd@a+2
  3054  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3055  0DAA  0862               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3056  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0DAC  00CF               	movwf	___fladd@a+1
  3058  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0DAE  0861               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3060  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0DB0  00CE               	movwf	___fladd@a
  3062  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3063  0DB6  084D               	movf	?___fladd+3,w
  3064  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0DB8  00E4               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3066  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0DBA  084C               	movf	?___fladd+2,w
  3068  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3069  0DBC  00E3               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3070  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0DBE  084B               	movf	?___fladd+1,w
  3072  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3073  0DC0  00E2               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3074  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0DC2  084A               	movf	?___fladd,w
  3076  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0DC4  00E1               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3078                           
  3079                           ;SlaveLiofilizadorVer1.c: 806:            if(Package_Usart_is_for_me()==1) break;
  3080  0DC5  160A  158A  237C  120A  158A  	fcall	_Package_Usart_is_for_me
  3081  0DCA  3A01               	xorlw	1
  3082  0DCB  1903               	btfsc	3,2
  3083  0DCC  2DDB               	goto	l6910
  3084                           
  3085                           ;SlaveLiofilizadorVer1.c: 807:            }
  3086  0DCD  3001               	movlw	1
  3087  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0DCF  07E5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3089  0DD0  1803               	skipnc
  3090  0DD1  0AE6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3091  0DD2  3000               	movlw	0
  3092  0DD3  07E6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3093  0DD4  3000               	movlw	0
  3094  0DD5  0266               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3095  0DD6  300F               	movlw	15
  3096  0DD7  1903               	skipnz
  3097  0DD8  0265               	subwf	MediaPlacaVaccum@i^(0+128),w
  3098  0DD9  1C03               	skipc
  3099  0DDA  2D93               	goto	l6902
  3100  0DDB                     l6910:	
  3101                           
  3102                           ;SlaveLiofilizadorVer1.c: 808:        if(i<10)
  3103  0DDB  3000               	movlw	0
  3104  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3105  0DDD  0266               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3106  0DDE  300A               	movlw	10
  3107  0DDF  1903               	skipnz
  3108  0DE0  0265               	subwf	MediaPlacaVaccum@i^(0+128),w
  3109  0DE1  1C03               	btfss	3,0
  3110  0DE2  0008               	return
  3111                           
  3112                           ;SlaveLiofilizadorVer1.c: 814:        if(i==15)
  3113  0DE3  300F               	movlw	15
  3114  0DE4  0665               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3115  0DE5  0466               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3116  0DE6  1D03               	btfss	3,2
  3117  0DE7  2DF2               	goto	l6918
  3118                           
  3119                           ;SlaveLiofilizadorVer1.c: 815:          Temp/=(i-1);
  3120  0DE8  0865               	movf	MediaPlacaVaccum@i^(0+128),w
  3121  0DE9  3EFF               	addlw	255
  3122  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0DEB  00B3               	movwf	___xxtofl@val
  3124  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0DED  0866               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3126  0DEE  1803               	skipnc
  3127  0DEF  3E01               	addlw	1
  3128  0DF0  3EFF               	addlw	255
  3129  0DF1  2DF7               	goto	L2
  3130  0DF2                     l6918:	
  3131                           
  3132                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i);
  3133  0DF2  0865               	movf	MediaPlacaVaccum@i^(0+128),w
  3134  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0DF4  00B3               	movwf	___xxtofl@val
  3136  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0DF6  0866               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3138  0DF7                     L2:	
  3139  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0DF8  00B4               	movwf	___xxtofl@val+1
  3141  0DF9  01B5               	clrf	___xxtofl@val+2
  3142  0DFA  01B6               	clrf	___xxtofl@val+3
  3143  0DFB  3000               	movlw	0
  3144  0DFC  160A  118A  232F  120A  158A  	fcall	___xxtofl
  3145  0E01  0836               	movf	?___xxtofl+3,w
  3146  0E02  00C4               	movwf	___fldiv@a+3
  3147  0E03  0835               	movf	?___xxtofl+2,w
  3148  0E04  00C3               	movwf	___fldiv@a+2
  3149  0E05  0834               	movf	?___xxtofl+1,w
  3150  0E06  00C2               	movwf	___fldiv@a+1
  3151  0E07  0833               	movf	?___xxtofl,w
  3152  0E08  00C1               	movwf	___fldiv@a
  3153  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0E0A  0864               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3155  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0E0C  00C8               	movwf	___fldiv@b+3
  3157  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3158  0E0E  0863               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3159  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0E10  00C7               	movwf	___fldiv@b+2
  3161  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0E12  0862               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3163  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0E14  00C6               	movwf	___fldiv@b+1
  3165  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0E16  0861               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3167  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0E18  00C5               	movwf	___fldiv@b
  3169  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3170  0E1E  0844               	movf	?___fldiv+3,w
  3171  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0E20  00E4               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3173  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0E22  0843               	movf	?___fldiv+2,w
  3175  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0E24  00E3               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3177  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0E26  0842               	movf	?___fldiv+1,w
  3179  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3180  0E28  00E2               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3181  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0E2A  0841               	movf	?___fldiv,w
  3183  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0E2C  00E1               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3185                           
  3186                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0 =1023.0-Temp;
  3187  0E2D  0864               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3188  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0E2F  00E1               	movwf	___flsub@a+3
  3190  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0E31  0863               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3192  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0E33  00E0               	movwf	___flsub@a+2
  3194  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0E35  0862               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3196  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0E37  00DF               	movwf	___flsub@a+1
  3198  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0E39  0861               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3200  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0E3B  00DE               	movwf	___flsub@a
  3202  0E3C  3044               	movlw	68
  3203  0E3D  00E5               	movwf	___flsub@b+3
  3204  0E3E  307F               	movlw	127
  3205  0E3F  00E4               	movwf	___flsub@b+2
  3206  0E40  30C0               	movlw	192
  3207  0E41  00E3               	movwf	___flsub@b+1
  3208  0E42  3000               	movlw	0
  3209  0E43  00E2               	movwf	___flsub@b
  3210  0E44  160A  158A  23E1  120A  158A  	fcall	___flsub
  3211  0E49  0861               	movf	?___flsub+3,w
  3212  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3213  0E4B  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3214  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0E4D  0860               	movf	?___flsub+2,w
  3216  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0E4F  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3218  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0E51  085F               	movf	?___flsub+1,w
  3220  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0E53  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3222  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0E55  085E               	movf	?___flsub,w
  3224  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0E57  00A4               	movwf	_Vaccum0^(0+128)
  3226                           
  3227                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=Vaccum0;
  3228  0E58  0827               	movf	(_Vaccum0+3)^(0+128),w
  3229  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0E5A  00AC               	movwf	___flmul@b+3
  3231  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0E5C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3233  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0E5E  00AB               	movwf	___flmul@b+2
  3235  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0E60  0825               	movf	(_Vaccum0+1)^(0+128),w
  3237  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0E62  00AA               	movwf	___flmul@b+1
  3239  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3240  0E64  0824               	movf	_Vaccum0^(0+128),w
  3241  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0E66  00A9               	movwf	___flmul@b
  3243  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0E68  0827               	movf	(_Vaccum0+3)^(0+128),w
  3245  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0E6A  00B0               	movwf	___flmul@a+3
  3247  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0E6C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3249  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0E6E  00AF               	movwf	___flmul@a+2
  3251  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3252  0E70  0825               	movf	(_Vaccum0+1)^(0+128),w
  3253  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0E72  00AE               	movwf	___flmul@a+1
  3255  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0E74  0824               	movf	_Vaccum0^(0+128),w
  3257  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0E76  00AD               	movwf	___flmul@a
  3259  0E77  120A  118A  2389  120A  158A  	fcall	___flmul
  3260  0E7C  082C               	movf	?___flmul+3,w
  3261  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0E7E  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3263  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0E80  082B               	movf	?___flmul+2,w
  3265  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0E82  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3267  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0E84  082A               	movf	?___flmul+1,w
  3269  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0E86  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3271  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0E88  0829               	movf	?___flmul,w
  3273  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0E8A  00A4               	movwf	_Vaccum0^(0+128)
  3275                           
  3276                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0*=0.00222;
  3277  0E8B  303B               	movlw	59
  3278  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0E8D  00AC               	movwf	___flmul@b+3
  3280  0E8E  3011               	movlw	17
  3281  0E8F  00AB               	movwf	___flmul@b+2
  3282  0E90  307D               	movlw	125
  3283  0E91  00AA               	movwf	___flmul@b+1
  3284  0E92  306B               	movlw	107
  3285  0E93  00A9               	movwf	___flmul@b
  3286  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0E95  0827               	movf	(_Vaccum0+3)^(0+128),w
  3288  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3289  0E97  00B0               	movwf	___flmul@a+3
  3290  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3291  0E99  0826               	movf	(_Vaccum0+2)^(0+128),w
  3292  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0E9B  00AF               	movwf	___flmul@a+2
  3294  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3295  0E9D  0825               	movf	(_Vaccum0+1)^(0+128),w
  3296  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0E9F  00AE               	movwf	___flmul@a+1
  3298  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0EA1  0824               	movf	_Vaccum0^(0+128),w
  3300  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0EA3  00AD               	movwf	___flmul@a
  3302  0EA4  120A  118A  2389  120A  158A  	fcall	___flmul
  3303  0EA9  082C               	movf	?___flmul+3,w
  3304  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0EAB  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3306  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0EAD  082B               	movf	?___flmul+2,w
  3308  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0EAF  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3310  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0EB1  082A               	movf	?___flmul+1,w
  3312  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3313  0EB3  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3314  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0EB5  0829               	movf	?___flmul,w
  3316  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0EB7  00A4               	movwf	_Vaccum0^(0+128)
  3318                           
  3319                           ;SlaveLiofilizadorVer1.c: 822:        Vaccum0+=150;
  3320  0EB8  3043               	movlw	67
  3321  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0EBA  00CD               	movwf	___fladd@b+3
  3323  0EBB  3016               	movlw	22
  3324  0EBC  00CC               	movwf	___fladd@b+2
  3325  0EBD  3000               	movlw	0
  3326  0EBE  00CB               	movwf	___fladd@b+1
  3327  0EBF  3000               	movlw	0
  3328  0EC0  00CA               	movwf	___fladd@b
  3329  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0EC2  0827               	movf	(_Vaccum0+3)^(0+128),w
  3331  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0EC4  00D1               	movwf	___fladd@a+3
  3333  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0EC6  0826               	movf	(_Vaccum0+2)^(0+128),w
  3335  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0EC8  00D0               	movwf	___fladd@a+2
  3337  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0ECA  0825               	movf	(_Vaccum0+1)^(0+128),w
  3339  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0ECC  00CF               	movwf	___fladd@a+1
  3341  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0ECE  0824               	movf	_Vaccum0^(0+128),w
  3343  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0ED0  00CE               	movwf	___fladd@a
  3345  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3346  0ED6  084D               	movf	?___fladd+3,w
  3347  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0ED8  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3349  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0EDA  084C               	movf	?___fladd+2,w
  3351  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0EDC  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3353  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0EDE  084B               	movf	?___fladd+1,w
  3355  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0EE0  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3357  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0EE2  084A               	movf	?___fladd,w
  3359  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0EE4  00A4               	movwf	_Vaccum0^(0+128)
  3361                           
  3362                           ;SlaveLiofilizadorVer1.c: 824:        if(Vaccum0>2000)Vaccum0=2000;
  3363  0EE5  3044               	movlw	68
  3364  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0EE7  00A3               	movwf	___flge@ff1+3
  3366  0EE8  30FA               	movlw	250
  3367  0EE9  00A2               	movwf	___flge@ff1+2
  3368  0EEA  3000               	movlw	0
  3369  0EEB  00A1               	movwf	___flge@ff1+1
  3370  0EEC  3000               	movlw	0
  3371  0EED  00A0               	movwf	___flge@ff1
  3372  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0EEF  0827               	movf	(_Vaccum0+3)^(0+128),w
  3374  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0EF1  00A7               	movwf	___flge@ff2+3
  3376  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0EF3  0826               	movf	(_Vaccum0+2)^(0+128),w
  3378  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0EF5  00A6               	movwf	___flge@ff2+2
  3380  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0EF7  0825               	movf	(_Vaccum0+1)^(0+128),w
  3382  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0EF9  00A5               	movwf	___flge@ff2+1
  3384  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0EFB  0824               	movf	_Vaccum0^(0+128),w
  3386  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0EFD  00A4               	movwf	___flge@ff2
  3388  0EFE  160A  118A  229C  120A  158A  	fcall	___flge
  3389  0F03  1803               	btfsc	3,0
  3390  0F04  0008               	return
  3391  0F05  3044               	movlw	68
  3392  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0F07  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3394  0F08  30FA               	movlw	250
  3395  0F09  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3396  0F0A  3000               	movlw	0
  3397  0F0B  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3398  0F0C  3000               	movlw	0
  3399  0F0D  00A4               	movwf	_Vaccum0^(0+128)
  3400  0F0E  0008               	return
  3401  0F0F                     l427:	
  3402                           ;SlaveLiofilizadorVer1.c: 827:      else
  3403                           
  3404                           
  3405                           ;SlaveLiofilizadorVer1.c: 828:        {;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.
      +                          VCFG0=0;
  3406  0F0F  121F               	bcf	31,4	;volatile
  3407                           
  3408                           ;SlaveLiofilizadorVer1.c: 830:        ADCON1bits.VCFG1=0;
  3409  0F10  129F               	bcf	31,5	;volatile
  3410                           
  3411                           ;SlaveLiofilizadorVer1.c: 831:        ADCON0bits.CHS=canal;
  3412  0F11  0860               	movf	MediaPlacaVaccum@canal^(0+128),w
  3413  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3415  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3416  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3417  0F16  081F               	movf	31,w	;volatile
  3418  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3419  0F18  39C3               	andlw	-61
  3420  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3421  0F1A  009F               	movwf	31	;volatile
  3422                           
  3423                           ;SlaveLiofilizadorVer1.c: 832:        my_delay_ms(1);
  3424  0F1B  3000               	movlw	0
  3425  0F1C  00A3               	movwf	my_delay_ms@time+3
  3426  0F1D  3000               	movlw	0
  3427  0F1E  00A2               	movwf	my_delay_ms@time+2
  3428  0F1F  3000               	movlw	0
  3429  0F20  00A1               	movwf	my_delay_ms@time+1
  3430  0F21  3001               	movlw	1
  3431  0F22  00A0               	movwf	my_delay_ms@time
  3432  0F23  160A  158A  262A  120A  158A  	fcall	_my_delay_ms
  3433                           
  3434                           ;SlaveLiofilizadorVer1.c: 833:        Temp=0;
  3435  0F28  3000               	movlw	0
  3436  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0F2A  00E4               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3438  0F2B  3000               	movlw	0
  3439  0F2C  00E3               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3440  0F2D  3000               	movlw	0
  3441  0F2E  00E2               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3442  0F2F  3000               	movlw	0
  3443  0F30  00E1               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 835:        for(i=1;i<15;i++)
  3446  0F31  3001               	movlw	1
  3447  0F32  00E5               	movwf	MediaPlacaVaccum@i^(0+128)
  3448  0F33  3000               	movlw	0
  3449  0F34  00E6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3450  0F35                     l6936:	
  3451                           
  3452                           ;SlaveLiofilizadorVer1.c: 836:            {;SlaveLiofilizadorVer1.c: 837:            Val
      +                          or=ADC_Max_10Bits(canal);
  3453  0F35  0860               	movf	MediaPlacaVaccum@canal^(0+128),w
  3454  0F36  160A  158A  27C2  120A  158A  	fcall	_ADC_Max_10Bits
  3455  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3456  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3457  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3458  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3459  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3460  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3461  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3462  0F42  00B6               	movwf	___xxtofl@val+3
  3463  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3464  0F44  00B5               	movwf	___xxtofl@val+2
  3465  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3466  0F46  00B4               	movwf	___xxtofl@val+1
  3467  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3468  0F48  00B3               	movwf	___xxtofl@val
  3469  0F49  3000               	movlw	0
  3470  0F4A  160A  118A  232F  120A  158A  	fcall	___xxtofl
  3471  0F4F  0836               	movf	?___xxtofl+3,w
  3472  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3473  0F51  00DF               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3474  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0F53  0835               	movf	?___xxtofl+2,w
  3476  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0F55  00DE               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3478  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0F57  0834               	movf	?___xxtofl+1,w
  3480  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0F59  00DD               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3482  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0F5B  0833               	movf	?___xxtofl,w
  3484  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0F5D  00DC               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3486                           
  3487                           ;SlaveLiofilizadorVer1.c: 838:            if(Valor>Temp) Temp=Valor;
  3488  0F5E  0864               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3489  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0F60  00A3               	movwf	___flge@ff1+3
  3491  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0F62  0863               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3493  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0F64  00A2               	movwf	___flge@ff1+2
  3495  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3496  0F66  0862               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3497  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0F68  00A1               	movwf	___flge@ff1+1
  3499  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3500  0F6A  0861               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3501  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0F6C  00A0               	movwf	___flge@ff1
  3503  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0F6E  085F               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3505  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0F70  00A7               	movwf	___flge@ff2+3
  3507  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3508  0F72  085E               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3509  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0F74  00A6               	movwf	___flge@ff2+2
  3511  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0F76  085D               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3513  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0F78  00A5               	movwf	___flge@ff2+1
  3515  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3516  0F7A  085C               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3517  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0F7C  00A4               	movwf	___flge@ff2
  3519  0F7D  160A  118A  229C  120A  158A  	fcall	___flge
  3520  0F82  1803               	btfsc	3,0
  3521  0F83  2F8D               	goto	l6942
  3522  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0F85  085F               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3524  0F86  00E4               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3525  0F87  085E               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3526  0F88  00E3               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3527  0F89  085D               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3528  0F8A  00E2               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3529  0F8B  085C               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3530  0F8C  00E1               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3531  0F8D                     l6942:	
  3532                           
  3533                           ;SlaveLiofilizadorVer1.c: 839:            if(Package_Usart_is_for_me()==1) break;
  3534  0F8D  160A  158A  237C  120A  158A  	fcall	_Package_Usart_is_for_me
  3535  0F92  3A01               	xorlw	1
  3536  0F93  1903               	btfsc	3,2
  3537  0F94  2FA3               	goto	l6948
  3538                           
  3539                           ;SlaveLiofilizadorVer1.c: 840:            }
  3540  0F95  3001               	movlw	1
  3541  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0F97  07E5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3543  0F98  1803               	skipnc
  3544  0F99  0AE6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3545  0F9A  3000               	movlw	0
  3546  0F9B  07E6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3547  0F9C  3000               	movlw	0
  3548  0F9D  0266               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3549  0F9E  300F               	movlw	15
  3550  0F9F  1903               	skipnz
  3551  0FA0  0265               	subwf	MediaPlacaVaccum@i^(0+128),w
  3552  0FA1  1C03               	skipc
  3553  0FA2  2F35               	goto	l6936
  3554  0FA3                     l6948:	
  3555                           
  3556                           ;SlaveLiofilizadorVer1.c: 841:         if(i<10)
  3557  0FA3  3000               	movlw	0
  3558  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0FA5  0266               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3560  0FA6  300A               	movlw	10
  3561  0FA7  1903               	skipnz
  3562  0FA8  0265               	subwf	MediaPlacaVaccum@i^(0+128),w
  3563  0FA9  1C03               	btfss	3,0
  3564  0FAA  0008               	return
  3565                           
  3566                           ;SlaveLiofilizadorVer1.c: 846:         Tensao1 =Temp*0.318296;
  3567  0FAB  303E               	movlw	62
  3568  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0FAD  00AC               	movwf	___flmul@b+3
  3570  0FAE  30A2               	movlw	162
  3571  0FAF  00AB               	movwf	___flmul@b+2
  3572  0FB0  30F7               	movlw	247
  3573  0FB1  00AA               	movwf	___flmul@b+1
  3574  0FB2  30B1               	movlw	177
  3575  0FB3  00A9               	movwf	___flmul@b
  3576  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0FB5  0864               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3578  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0FB7  00B0               	movwf	___flmul@a+3
  3580  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3581  0FB9  0863               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3582  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0FBB  00AF               	movwf	___flmul@a+2
  3584  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3585  0FBD  0862               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3586  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0FBF  00AE               	movwf	___flmul@a+1
  3588  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0FC1  0861               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3590  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0FC3  00AD               	movwf	___flmul@a
  3592  0FC4  120A  118A  2389  120A  158A  	fcall	___flmul
  3593  0FC9  082C               	movf	?___flmul+3,w
  3594  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0FCB  00A3               	movwf	(_Tensao1+3)^(0+128)
  3596  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0FCD  082B               	movf	?___flmul+2,w
  3598  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0FCF  00A2               	movwf	(_Tensao1+2)^(0+128)
  3600  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0FD1  082A               	movf	?___flmul+1,w
  3602  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3603  0FD3  00A1               	movwf	(_Tensao1+1)^(0+128)
  3604  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0FD5  0829               	movf	?___flmul,w
  3606  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0FD7  00A0               	movwf	_Tensao1^(0+128)
  3608                           
  3609                           ;SlaveLiofilizadorVer1.c: 847:         if(Tensao1<15) Tensao1=0;
  3610  0FD8  0823               	movf	(_Tensao1+3)^(0+128),w
  3611  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0FDA  00A3               	movwf	___flge@ff1+3
  3613  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0FDC  0822               	movf	(_Tensao1+2)^(0+128),w
  3615  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0FDE  00A2               	movwf	___flge@ff1+2
  3617  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0FE0  0821               	movf	(_Tensao1+1)^(0+128),w
  3619  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0FE2  00A1               	movwf	___flge@ff1+1
  3621  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0FE4  0820               	movf	_Tensao1^(0+128),w
  3623  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FE6  00A0               	movwf	___flge@ff1
  3625  0FE7  3041               	movlw	65
  3626  0FE8  00A7               	movwf	___flge@ff2+3
  3627  0FE9  3070               	movlw	112
  3628  0FEA  00A6               	movwf	___flge@ff2+2
  3629  0FEB  3000               	movlw	0
  3630  0FEC  00A5               	movwf	___flge@ff2+1
  3631  0FED  3000               	movlw	0
  3632  0FEE  00A4               	movwf	___flge@ff2
  3633  0FEF  160A  118A  229C  120A  158A  	fcall	___flge
  3634  0FF4  1803               	btfsc	3,0
  3635  0FF5  0008               	return
  3636  0FF6  3000               	movlw	0
  3637  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3638  0FF8  00A3               	movwf	(_Tensao1+3)^(0+128)
  3639  0FF9  3000               	movlw	0
  3640  0FFA  00A2               	movwf	(_Tensao1+2)^(0+128)
  3641  0FFB  3000               	movlw	0
  3642  0FFC  00A1               	movwf	(_Tensao1+1)^(0+128)
  3643  0FFD  3000               	movlw	0
  3644  0FFE  00A0               	movwf	_Tensao1^(0+128)
  3645  0FFF  0008               	return
  3646  1000                     __end_of_MediaPlacaVaccum:	
  3647                           
  3648                           	psect	text3
  3649  1BE1                     __ptext3:	
  3650 ;; *************** function ___flsub *****************
  3651 ;; Defined at:
  3652 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  a               4   62[BANK0 ] void 
  3655 ;;  b               4   66[BANK0 ] void 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  4   62[BANK0 ] void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 300/0
  3664 ;;		On exit  : 300/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       8       0       0       0
  3668 ;;      Locals:         0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         0       8       0       0       0
  3671 ;;Total ram usage:        8 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    2
  3674 ;; This function calls:
  3675 ;;		___fladd
  3676 ;; This function is called by:
  3677 ;;		_MediaPlacaVaccum
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function ___flsub
  3683  1BE1                     ___flsub:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3687  1BE1  3080               	movlw	128
  3688  1BE2  06E1               	xorwf	___flsub@a+3,f
  3689  1BE3  0865               	movf	___flsub@b+3,w
  3690  1BE4  00CD               	movwf	___fladd@b+3
  3691  1BE5  0864               	movf	___flsub@b+2,w
  3692  1BE6  00CC               	movwf	___fladd@b+2
  3693  1BE7  0863               	movf	___flsub@b+1,w
  3694  1BE8  00CB               	movwf	___fladd@b+1
  3695  1BE9  0862               	movf	___flsub@b,w
  3696  1BEA  00CA               	movwf	___fladd@b
  3697  1BEB  0861               	movf	___flsub@a+3,w
  3698  1BEC  00D1               	movwf	___fladd@a+3
  3699  1BED  0860               	movf	___flsub@a+2,w
  3700  1BEE  00D0               	movwf	___fladd@a+2
  3701  1BEF  085F               	movf	___flsub@a+1,w
  3702  1BF0  00CF               	movwf	___fladd@a+1
  3703  1BF1  085E               	movf	___flsub@a,w
  3704  1BF2  00CE               	movwf	___fladd@a
  3705  1BF3  120A  158A  233C   	fcall	___fladd
  3706  1BF6  084D               	movf	?___fladd+3,w
  3707  1BF7  00E1               	movwf	?___flsub+3
  3708  1BF8  084C               	movf	?___fladd+2,w
  3709  1BF9  00E0               	movwf	?___flsub+2
  3710  1BFA  084B               	movf	?___fladd+1,w
  3711  1BFB  00DF               	movwf	?___flsub+1
  3712  1BFC  084A               	movf	?___fladd,w
  3713  1BFD  00DE               	movwf	?___flsub
  3714  1BFE  0008               	return
  3715  1BFF                     __end_of___flsub:	
  3716                           
  3717                           	psect	text4
  3718  0B3C                     __ptext4:	
  3719 ;; *************** function ___fladd *****************
  3720 ;; Defined at:
  3721 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  b               4   42[BANK0 ] void 
  3724 ;;  a               4   46[BANK0 ] void 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  grs             1   61[BANK0 ] unsigned char 
  3727 ;;  bexp            1   60[BANK0 ] unsigned char 
  3728 ;;  aexp            1   59[BANK0 ] unsigned char 
  3729 ;;  signs           1   58[BANK0 ] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  4   42[BANK0 ] unsigned char 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, btemp+1
  3734 ;; Tracked objects:
  3735 ;;		On entry : 300/0
  3736 ;;		On exit  : 300/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         0       8       0       0       0
  3740 ;;      Locals:         0       4       0       0       0
  3741 ;;      Temps:          0       8       0       0       0
  3742 ;;      Totals:         0      20       0       0       0
  3743 ;;Total ram usage:       20 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_MediaPlacaVaccum
  3750 ;;		___flsub
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function ___fladd
  3756  0B3C                     ___fladd:	
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3760  0B3C  084D               	movf	___fladd@b+3,w
  3761  0B3D  3980               	andlw	128
  3762  0B3E  00D2               	movwf	??___fladd
  3763  0B3F  0852               	movf	??___fladd,w
  3764  0B40  00DA               	movwf	___fladd@signs
  3765  0B41  084D               	movf	___fladd@b+3,w
  3766  0B42  00D2               	movwf	??___fladd
  3767  0B43  0752               	addwf	??___fladd,w
  3768  0B44  00D3               	movwf	??___fladd+1
  3769  0B45  0853               	movf	??___fladd+1,w
  3770  0B46  00DC               	movwf	___fladd@bexp
  3771  0B47  1BCC               	btfsc	___fladd@b+2,7
  3772  0B48  145C               	bsf	___fladd@bexp,0
  3773  0B49  085C               	movf	___fladd@bexp,w
  3774  0B4A  1903               	btfsc	3,2
  3775  0B4B  2B5A               	goto	l5884
  3776  0B4C  0A5C               	incf	___fladd@bexp,w
  3777  0B4D  1D03               	btfss	3,2
  3778  0B4E  2B57               	goto	l5880
  3779  0B4F  3000               	movlw	0
  3780  0B50  00CD               	movwf	___fladd@b+3
  3781  0B51  3000               	movlw	0
  3782  0B52  00CC               	movwf	___fladd@b+2
  3783  0B53  3000               	movlw	0
  3784  0B54  00CB               	movwf	___fladd@b+1
  3785  0B55  3000               	movlw	0
  3786  0B56  00CA               	movwf	___fladd@b
  3787  0B57                     l5880:	
  3788  0B57  17CC               	bsf	___fladd@b+2,7
  3789  0B58  01CD               	clrf	___fladd@b+3
  3790  0B59  2B62               	goto	l5886
  3791  0B5A                     l5884:	
  3792  0B5A  3000               	movlw	0
  3793  0B5B  00CD               	movwf	___fladd@b+3
  3794  0B5C  3000               	movlw	0
  3795  0B5D  00CC               	movwf	___fladd@b+2
  3796  0B5E  3000               	movlw	0
  3797  0B5F  00CB               	movwf	___fladd@b+1
  3798  0B60  3000               	movlw	0
  3799  0B61  00CA               	movwf	___fladd@b
  3800  0B62                     l5886:	
  3801  0B62  0851               	movf	___fladd@a+3,w
  3802  0B63  3980               	andlw	128
  3803  0B64  00D2               	movwf	??___fladd
  3804  0B65  0852               	movf	??___fladd,w
  3805  0B66  00DB               	movwf	___fladd@aexp
  3806  0B67  085B               	movf	___fladd@aexp,w
  3807  0B68  065A               	xorwf	___fladd@signs,w
  3808  0B69  1D03               	btfss	3,2
  3809  0B6A  175A               	bsf	___fladd@signs,6
  3810  0B6B  0851               	movf	___fladd@a+3,w
  3811  0B6C  00D2               	movwf	??___fladd
  3812  0B6D  0752               	addwf	??___fladd,w
  3813  0B6E  00D3               	movwf	??___fladd+1
  3814  0B6F  0853               	movf	??___fladd+1,w
  3815  0B70  00DB               	movwf	___fladd@aexp
  3816  0B71  1BD0               	btfsc	___fladd@a+2,7
  3817  0B72  145B               	bsf	___fladd@aexp,0
  3818  0B73  085B               	movf	___fladd@aexp,w
  3819  0B74  1903               	btfsc	3,2
  3820  0B75  2B84               	goto	l5908
  3821  0B76  0A5B               	incf	___fladd@aexp,w
  3822  0B77  1D03               	btfss	3,2
  3823  0B78  2B81               	goto	l5904
  3824  0B79  3000               	movlw	0
  3825  0B7A  00D1               	movwf	___fladd@a+3
  3826  0B7B  3000               	movlw	0
  3827  0B7C  00D0               	movwf	___fladd@a+2
  3828  0B7D  3000               	movlw	0
  3829  0B7E  00CF               	movwf	___fladd@a+1
  3830  0B7F  3000               	movlw	0
  3831  0B80  00CE               	movwf	___fladd@a
  3832  0B81                     l5904:	
  3833  0B81  17D0               	bsf	___fladd@a+2,7
  3834  0B82  01D1               	clrf	___fladd@a+3
  3835  0B83  2B8C               	goto	l1275
  3836  0B84                     l5908:	
  3837  0B84  3000               	movlw	0
  3838  0B85  00D1               	movwf	___fladd@a+3
  3839  0B86  3000               	movlw	0
  3840  0B87  00D0               	movwf	___fladd@a+2
  3841  0B88  3000               	movlw	0
  3842  0B89  00CF               	movwf	___fladd@a+1
  3843  0B8A  3000               	movlw	0
  3844  0B8B  00CE               	movwf	___fladd@a
  3845  0B8C                     l1275:	
  3846  0B8C  085C               	movf	___fladd@bexp,w
  3847  0B8D  025B               	subwf	___fladd@aexp,w
  3848  0B8E  1803               	skipnc
  3849  0B8F  2BD2               	goto	l5944
  3850  0B90  1F5A               	btfss	___fladd@signs,6
  3851  0B91  2B96               	goto	l5914
  3852  0B92  3080               	movlw	128
  3853  0B93  00D2               	movwf	??___fladd
  3854  0B94  0852               	movf	??___fladd,w
  3855  0B95  06DA               	xorwf	___fladd@signs,f
  3856  0B96                     l5914:	
  3857  0B96  085C               	movf	___fladd@bexp,w
  3858  0B97  00D2               	movwf	??___fladd
  3859  0B98  0852               	movf	??___fladd,w
  3860  0B99  00DD               	movwf	___fladd@grs
  3861  0B9A  085B               	movf	___fladd@aexp,w
  3862  0B9B  00D2               	movwf	??___fladd
  3863  0B9C  0852               	movf	??___fladd,w
  3864  0B9D  00DC               	movwf	___fladd@bexp
  3865  0B9E  085D               	movf	___fladd@grs,w
  3866  0B9F  00D2               	movwf	??___fladd
  3867  0BA0  0852               	movf	??___fladd,w
  3868  0BA1  00DB               	movwf	___fladd@aexp
  3869  0BA2  084A               	movf	___fladd@b,w
  3870  0BA3  00D2               	movwf	??___fladd
  3871  0BA4  0852               	movf	??___fladd,w
  3872  0BA5  00DD               	movwf	___fladd@grs
  3873  0BA6  084E               	movf	___fladd@a,w
  3874  0BA7  00D2               	movwf	??___fladd
  3875  0BA8  0852               	movf	??___fladd,w
  3876  0BA9  00CA               	movwf	___fladd@b
  3877  0BAA  085D               	movf	___fladd@grs,w
  3878  0BAB  00D2               	movwf	??___fladd
  3879  0BAC  0852               	movf	??___fladd,w
  3880  0BAD  00CE               	movwf	___fladd@a
  3881  0BAE  084B               	movf	___fladd@b+1,w
  3882  0BAF  00D2               	movwf	??___fladd
  3883  0BB0  0852               	movf	??___fladd,w
  3884  0BB1  00DD               	movwf	___fladd@grs
  3885  0BB2  084F               	movf	___fladd@a+1,w
  3886  0BB3  00D2               	movwf	??___fladd
  3887  0BB4  0852               	movf	??___fladd,w
  3888  0BB5  00CB               	movwf	___fladd@b+1
  3889  0BB6  085D               	movf	___fladd@grs,w
  3890  0BB7  00D2               	movwf	??___fladd
  3891  0BB8  0852               	movf	??___fladd,w
  3892  0BB9  00CF               	movwf	___fladd@a+1
  3893  0BBA  084C               	movf	___fladd@b+2,w
  3894  0BBB  00D2               	movwf	??___fladd
  3895  0BBC  0852               	movf	??___fladd,w
  3896  0BBD  00DD               	movwf	___fladd@grs
  3897  0BBE  0850               	movf	___fladd@a+2,w
  3898  0BBF  00D2               	movwf	??___fladd
  3899  0BC0  0852               	movf	??___fladd,w
  3900  0BC1  00CC               	movwf	___fladd@b+2
  3901  0BC2  085D               	movf	___fladd@grs,w
  3902  0BC3  00D2               	movwf	??___fladd
  3903  0BC4  0852               	movf	??___fladd,w
  3904  0BC5  00D0               	movwf	___fladd@a+2
  3905  0BC6  084D               	movf	___fladd@b+3,w
  3906  0BC7  00D2               	movwf	??___fladd
  3907  0BC8  0852               	movf	??___fladd,w
  3908  0BC9  00DD               	movwf	___fladd@grs
  3909  0BCA  0851               	movf	___fladd@a+3,w
  3910  0BCB  00D2               	movwf	??___fladd
  3911  0BCC  0852               	movf	??___fladd,w
  3912  0BCD  00CD               	movwf	___fladd@b+3
  3913  0BCE  085D               	movf	___fladd@grs,w
  3914  0BCF  00D2               	movwf	??___fladd
  3915  0BD0  0852               	movf	??___fladd,w
  3916  0BD1  00D1               	movwf	___fladd@a+3
  3917  0BD2                     l5944:	
  3918  0BD2  01DD               	clrf	___fladd@grs
  3919  0BD3  085B               	movf	___fladd@aexp,w
  3920  0BD4  00D2               	movwf	??___fladd
  3921  0BD5  01D3               	clrf	??___fladd+1
  3922  0BD6  0853               	movf	??___fladd+1,w
  3923  0BD7  00D5               	movwf	??___fladd+3
  3924  0BD8  085C               	movf	___fladd@bexp,w
  3925  0BD9  0252               	subwf	??___fladd,w
  3926  0BDA  00D4               	movwf	??___fladd+2
  3927  0BDB  1C03               	skipc
  3928  0BDC  03D5               	decf	??___fladd+3,f
  3929  0BDD  0855               	movf	??___fladd+3,w
  3930  0BDE  3A80               	xorlw	128
  3931  0BDF  00FF               	movwf	127
  3932  0BE0  3080               	movlw	128
  3933  0BE1  027F               	subwf	127,w
  3934  0BE2  1D03               	skipz
  3935  0BE3  2BE6               	goto	u5885
  3936  0BE4  301A               	movlw	26
  3937  0BE5  0254               	subwf	??___fladd+2,w
  3938  0BE6                     u5885:	
  3939  0BE6  1C03               	skipc
  3940  0BE7  2C1F               	goto	l5962
  3941  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0BEA  084D               	movf	___fladd@b+3,w
  3944  0BEB  044C               	iorwf	___fladd@b+2,w
  3945  0BEC  044B               	iorwf	___fladd@b+1,w
  3946  0BED  044A               	iorwf	___fladd@b,w
  3947  0BEE  1903               	btfsc	3,2
  3948  0BEF  2BF2               	goto	u5890
  3949  0BF0  3001               	movlw	1
  3950  0BF1  2BF3               	goto	u5900
  3951  0BF2                     u5890:	
  3952  0BF2  3000               	movlw	0
  3953  0BF3                     u5900:	
  3954  0BF3  00D2               	movwf	??___fladd
  3955  0BF4  0852               	movf	??___fladd,w
  3956  0BF5  00DD               	movwf	___fladd@grs
  3957  0BF6  3000               	movlw	0
  3958  0BF7  00CD               	movwf	___fladd@b+3
  3959  0BF8  3000               	movlw	0
  3960  0BF9  00CC               	movwf	___fladd@b+2
  3961  0BFA  3000               	movlw	0
  3962  0BFB  00CB               	movwf	___fladd@b+1
  3963  0BFC  3000               	movlw	0
  3964  0BFD  00CA               	movwf	___fladd@b
  3965  0BFE  085B               	movf	___fladd@aexp,w
  3966  0BFF  00D2               	movwf	??___fladd
  3967  0C00  0852               	movf	??___fladd,w
  3968  0C01  00DC               	movwf	___fladd@bexp
  3969  0C02  2C25               	goto	l1279
  3970  0C03                     l1281:	
  3971  0C03  1C5D               	btfss	___fladd@grs,0
  3972  0C04  2C0E               	goto	l5952
  3973  0C05  085D               	movf	___fladd@grs,w
  3974  0C06  00D2               	movwf	??___fladd
  3975  0C07  1003               	clrc
  3976  0C08  0C52               	rrf	??___fladd,w
  3977  0C09  3801               	iorlw	1
  3978  0C0A  00D3               	movwf	??___fladd+1
  3979  0C0B  0853               	movf	??___fladd+1,w
  3980  0C0C  00DD               	movwf	___fladd@grs
  3981  0C0D  2C10               	goto	l5954
  3982  0C0E                     l5952:	
  3983  0C0E  1003               	clrc
  3984  0C0F  0CDD               	rrf	___fladd@grs,f
  3985  0C10                     l5954:	
  3986  0C10  184A               	btfsc	___fladd@b,0
  3987  0C11  17DD               	bsf	___fladd@grs,7
  3988  0C12  3001               	movlw	1
  3989  0C13  00D2               	movwf	??___fladd
  3990  0C14                     u5935:	
  3991  0C14  0D4D               	rlf	___fladd@b+3,w
  3992  0C15  0CCD               	rrf	___fladd@b+3,f
  3993  0C16  0CCC               	rrf	___fladd@b+2,f
  3994  0C17  0CCB               	rrf	___fladd@b+1,f
  3995  0C18  0CCA               	rrf	___fladd@b,f
  3996  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  3997  0C1A  2C14               	goto	u5935
  3998  0C1B  3001               	movlw	1
  3999  0C1C  00D2               	movwf	??___fladd
  4000  0C1D  0852               	movf	??___fladd,w
  4001  0C1E  07DC               	addwf	___fladd@bexp,f
  4002  0C1F                     l5962:	
  4003  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4004  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4005  0C21  085B               	movf	___fladd@aexp,w
  4006  0C22  025C               	subwf	___fladd@bexp,w
  4007  0C23  1C03               	skipc
  4008  0C24  2C03               	goto	l1281
  4009  0C25                     l1279:	
  4010  0C25  1B5A               	btfsc	___fladd@signs,6
  4011  0C26  2C66               	goto	l5988
  4012  0C27  085C               	movf	___fladd@bexp,w
  4013  0C28  1D03               	btfss	3,2
  4014  0C29  2C33               	goto	l5970
  4015  0C2A  3000               	movlw	0
  4016  0C2B  00CD               	movwf	?___fladd+3
  4017  0C2C  3000               	movlw	0
  4018  0C2D  00CC               	movwf	?___fladd+2
  4019  0C2E  3000               	movlw	0
  4020  0C2F  00CB               	movwf	?___fladd+1
  4021  0C30  3000               	movlw	0
  4022  0C31  00CA               	movwf	?___fladd
  4023  0C32  0008               	return
  4024  0C33                     l5970:	
  4025  0C33  084E               	movf	___fladd@a,w
  4026  0C34  07CA               	addwf	___fladd@b,f
  4027  0C35  084F               	movf	___fladd@a+1,w
  4028  0C36  1103               	clrz
  4029  0C37  1803               	skipnc
  4030  0C38  3E01               	addlw	1
  4031  0C39  1D03               	btfss	3,2
  4032  0C3A  07CB               	addwf	___fladd@b+1,f
  4033  0C3B  0850               	movf	___fladd@a+2,w
  4034  0C3C  1103               	clrz
  4035  0C3D  1803               	skipnc
  4036  0C3E  3E01               	addlw	1
  4037  0C3F  1D03               	btfss	3,2
  4038  0C40  07CC               	addwf	___fladd@b+2,f
  4039  0C41  0851               	movf	___fladd@a+3,w
  4040  0C42  1103               	clrz
  4041  0C43  1803               	skipnc
  4042  0C44  3E01               	addlw	1
  4043  0C45  1D03               	btfss	3,2
  4044  0C46  07CD               	addwf	___fladd@b+3,f
  4045  0C47  1C4D               	btfss	___fladd@b+3,0
  4046  0C48  2D08               	goto	l6022
  4047  0C49  1C5D               	btfss	___fladd@grs,0
  4048  0C4A  2C54               	goto	l5978
  4049  0C4B  085D               	movf	___fladd@grs,w
  4050  0C4C  00D2               	movwf	??___fladd
  4051  0C4D  1003               	clrc
  4052  0C4E  0C52               	rrf	??___fladd,w
  4053  0C4F  3801               	iorlw	1
  4054  0C50  00D3               	movwf	??___fladd+1
  4055  0C51  0853               	movf	??___fladd+1,w
  4056  0C52  00DD               	movwf	___fladd@grs
  4057  0C53  2C56               	goto	l5980
  4058  0C54                     l5978:	
  4059  0C54  1003               	clrc
  4060  0C55  0CDD               	rrf	___fladd@grs,f
  4061  0C56                     l5980:	
  4062  0C56  184A               	btfsc	___fladd@b,0
  4063  0C57  17DD               	bsf	___fladd@grs,7
  4064  0C58  3001               	movlw	1
  4065  0C59  00D2               	movwf	??___fladd
  4066  0C5A                     u6015:	
  4067  0C5A  0D4D               	rlf	___fladd@b+3,w
  4068  0C5B  0CCD               	rrf	___fladd@b+3,f
  4069  0C5C  0CCC               	rrf	___fladd@b+2,f
  4070  0C5D  0CCB               	rrf	___fladd@b+1,f
  4071  0C5E  0CCA               	rrf	___fladd@b,f
  4072  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4073  0C60  2C5A               	goto	u6015
  4074  0C61  3001               	movlw	1
  4075  0C62  00D2               	movwf	??___fladd
  4076  0C63  0852               	movf	??___fladd,w
  4077  0C64  07DC               	addwf	___fladd@bexp,f
  4078  0C65  2D08               	goto	l6022
  4079  0C66                     l5988:	
  4080  0C66  084D               	movf	___fladd@b+3,w
  4081  0C67  3A80               	xorlw	128
  4082  0C68  00FF               	movwf	127
  4083  0C69  0851               	movf	___fladd@a+3,w
  4084  0C6A  3A80               	xorlw	128
  4085  0C6B  027F               	subwf	127,w
  4086  0C6C  1D03               	skipz
  4087  0C6D  2C78               	goto	u6023
  4088  0C6E  0850               	movf	___fladd@a+2,w
  4089  0C6F  024C               	subwf	___fladd@b+2,w
  4090  0C70  1D03               	skipz
  4091  0C71  2C78               	goto	u6023
  4092  0C72  084F               	movf	___fladd@a+1,w
  4093  0C73  024B               	subwf	___fladd@b+1,w
  4094  0C74  1D03               	skipz
  4095  0C75  2C78               	goto	u6023
  4096  0C76  084E               	movf	___fladd@a,w
  4097  0C77  024A               	subwf	___fladd@b,w
  4098  0C78                     u6023:	
  4099  0C78  1803               	skipnc
  4100  0C79  2CD0               	goto	l5998
  4101  0C7A  30FF               	movlw	255
  4102  0C7B  00D2               	movwf	??___fladd
  4103  0C7C  30FF               	movlw	255
  4104  0C7D  00D3               	movwf	??___fladd+1
  4105  0C7E  30FF               	movlw	255
  4106  0C7F  00D4               	movwf	??___fladd+2
  4107  0C80  30FF               	movlw	255
  4108  0C81  00D5               	movwf	??___fladd+3
  4109  0C82  084E               	movf	___fladd@a,w
  4110  0C83  00D6               	movwf	??___fladd+4
  4111  0C84  084F               	movf	___fladd@a+1,w
  4112  0C85  00D7               	movwf	??___fladd+5
  4113  0C86  0850               	movf	___fladd@a+2,w
  4114  0C87  00D8               	movwf	??___fladd+6
  4115  0C88  0851               	movf	___fladd@a+3,w
  4116  0C89  00D9               	movwf	??___fladd+7
  4117  0C8A  084A               	movf	___fladd@b,w
  4118  0C8B  02D6               	subwf	??___fladd+4,f
  4119  0C8C  084B               	movf	___fladd@b+1,w
  4120  0C8D  1C03               	skipc
  4121  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4122  0C8F  2C91               	goto	u6031
  4123  0C90  2C92               	goto	u6032
  4124  0C91                     u6031:	
  4125  0C91  02D7               	subwf	??___fladd+5,f
  4126  0C92                     u6032:	
  4127  0C92  084C               	movf	___fladd@b+2,w
  4128  0C93  1C03               	skipc
  4129  0C94  0F4C               	incfsz	___fladd@b+2,w
  4130  0C95  2C97               	goto	u6033
  4131  0C96  2C98               	goto	u6034
  4132  0C97                     u6033:	
  4133  0C97  02D8               	subwf	??___fladd+6,f
  4134  0C98                     u6034:	
  4135  0C98  084D               	movf	___fladd@b+3,w
  4136  0C99  1C03               	skipc
  4137  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4138  0C9B  2C9D               	goto	u6035
  4139  0C9C  2C9E               	goto	u6036
  4140  0C9D                     u6035:	
  4141  0C9D  02D9               	subwf	??___fladd+7,f
  4142  0C9E                     u6036:	
  4143  0C9E  0856               	movf	??___fladd+4,w
  4144  0C9F  07D2               	addwf	??___fladd,f
  4145  0CA0  0857               	movf	??___fladd+5,w
  4146  0CA1  1803               	skipnc
  4147  0CA2  0F57               	incfsz	??___fladd+5,w
  4148  0CA3  2CA5               	goto	u6040
  4149  0CA4  2CA6               	goto	u6041
  4150  0CA5                     u6040:	
  4151  0CA5  07D3               	addwf	??___fladd+1,f
  4152  0CA6                     u6041:	
  4153  0CA6  0858               	movf	??___fladd+6,w
  4154  0CA7  1803               	skipnc
  4155  0CA8  0F58               	incfsz	??___fladd+6,w
  4156  0CA9  2CAB               	goto	u6042
  4157  0CAA  2CAC               	goto	u6043
  4158  0CAB                     u6042:	
  4159  0CAB  07D4               	addwf	??___fladd+2,f
  4160  0CAC                     u6043:	
  4161  0CAC  0859               	movf	??___fladd+7,w
  4162  0CAD  1803               	skipnc
  4163  0CAE  0A59               	incf	??___fladd+7,w
  4164  0CAF  07D5               	addwf	??___fladd+3,f
  4165  0CB0  0855               	movf	??___fladd+3,w
  4166  0CB1  00CD               	movwf	___fladd@b+3
  4167  0CB2  0854               	movf	??___fladd+2,w
  4168  0CB3  00CC               	movwf	___fladd@b+2
  4169  0CB4  0853               	movf	??___fladd+1,w
  4170  0CB5  00CB               	movwf	___fladd@b+1
  4171  0CB6  0852               	movf	??___fladd,w
  4172  0CB7  00CA               	movwf	___fladd@b
  4173  0CB8  3080               	movlw	128
  4174  0CB9  00D2               	movwf	??___fladd
  4175  0CBA  0852               	movf	??___fladd,w
  4176  0CBB  06DA               	xorwf	___fladd@signs,f
  4177  0CBC  09DD               	comf	___fladd@grs,f
  4178  0CBD  0ADD               	incf	___fladd@grs,f
  4179  0CBE  085D               	movf	___fladd@grs,w
  4180  0CBF  1D03               	btfss	3,2
  4181  0CC0  2CDE               	goto	l1296
  4182  0CC1  3001               	movlw	1
  4183  0CC2  07CA               	addwf	___fladd@b,f
  4184  0CC3  3000               	movlw	0
  4185  0CC4  1803               	skipnc
  4186  0CC5  3001               	movlw	1
  4187  0CC6  07CB               	addwf	___fladd@b+1,f
  4188  0CC7  3000               	movlw	0
  4189  0CC8  1803               	skipnc
  4190  0CC9  3001               	movlw	1
  4191  0CCA  07CC               	addwf	___fladd@b+2,f
  4192  0CCB  3000               	movlw	0
  4193  0CCC  1803               	skipnc
  4194  0CCD  3001               	movlw	1
  4195  0CCE  07CD               	addwf	___fladd@b+3,f
  4196  0CCF  2CDE               	goto	l1296
  4197  0CD0                     l5998:	
  4198  0CD0  084E               	movf	___fladd@a,w
  4199  0CD1  02CA               	subwf	___fladd@b,f
  4200  0CD2  084F               	movf	___fladd@a+1,w
  4201  0CD3  1C03               	skipc
  4202  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4203  0CD5  02CB               	subwf	___fladd@b+1,f
  4204  0CD6  0850               	movf	___fladd@a+2,w
  4205  0CD7  1C03               	skipc
  4206  0CD8  0F50               	incfsz	___fladd@a+2,w
  4207  0CD9  02CC               	subwf	___fladd@b+2,f
  4208  0CDA  0851               	movf	___fladd@a+3,w
  4209  0CDB  1C03               	skipc
  4210  0CDC  0F51               	incfsz	___fladd@a+3,w
  4211  0CDD  02CD               	subwf	___fladd@b+3,f
  4212  0CDE                     l1296:	
  4213  0CDE  084D               	movf	___fladd@b+3,w
  4214  0CDF  044C               	iorwf	___fladd@b+2,w
  4215  0CE0  044B               	iorwf	___fladd@b+1,w
  4216  0CE1  044A               	iorwf	___fladd@b,w
  4217  0CE2  1D03               	skipz
  4218  0CE3  2D06               	goto	l6020
  4219  0CE4  085D               	movf	___fladd@grs,w
  4220  0CE5  1D03               	btfss	3,2
  4221  0CE6  2D06               	goto	l6020
  4222  0CE7  3000               	movlw	0
  4223  0CE8  00CD               	movwf	?___fladd+3
  4224  0CE9  3000               	movlw	0
  4225  0CEA  00CC               	movwf	?___fladd+2
  4226  0CEB  3000               	movlw	0
  4227  0CEC  00CB               	movwf	?___fladd+1
  4228  0CED  3000               	movlw	0
  4229  0CEE  00CA               	movwf	?___fladd
  4230  0CEF  0008               	return
  4231  0CF0                     l6006:	
  4232  0CF0  3001               	movlw	1
  4233  0CF1  00D2               	movwf	??___fladd
  4234  0CF2                     u6085:	
  4235  0CF2  1003               	clrc
  4236  0CF3  0DCA               	rlf	___fladd@b,f
  4237  0CF4  0DCB               	rlf	___fladd@b+1,f
  4238  0CF5  0DCC               	rlf	___fladd@b+2,f
  4239  0CF6  0DCD               	rlf	___fladd@b+3,f
  4240  0CF7  0BD2               	decfsz	??___fladd,f
  4241  0CF8  2CF2               	goto	u6085
  4242  0CF9  1BDD               	btfsc	___fladd@grs,7
  4243  0CFA  144A               	bsf	___fladd@b,0
  4244  0CFB  1C5D               	btfss	___fladd@grs,0
  4245  0CFC  2CFF               	goto	l6014
  4246  0CFD  1403               	setc
  4247  0CFE  2D00               	goto	L3
  4248  0CFF                     l6014:	
  4249  0CFF  1003               	clrc
  4250  0D00                     L3:	
  4251  0D00  0DDD               	rlf	___fladd@grs,f
  4252  0D01  085C               	movf	___fladd@bexp,w
  4253  0D02  1903               	btfsc	3,2
  4254  0D03  2D06               	goto	l6020
  4255  0D04  3001               	movlw	1
  4256  0D05  02DC               	subwf	___fladd@bexp,f
  4257  0D06                     l6020:	
  4258  0D06  1FCC               	btfss	___fladd@b+2,7
  4259  0D07  2CF0               	goto	l6006
  4260  0D08                     l6022:	
  4261  0D08  01DB               	clrf	___fladd@aexp
  4262  0D09  1FDD               	btfss	___fladd@grs,7
  4263  0D0A  2D13               	goto	l6032
  4264  0D0B  085D               	movf	___fladd@grs,w
  4265  0D0C  397F               	andlw	127
  4266  0D0D  1903               	btfsc	3,2
  4267  0D0E  184A               	btfsc	___fladd@b,0
  4268  0D0F  2D11               	goto	l6028
  4269  0D10  2D13               	goto	l6032
  4270  0D11                     l6028:	
  4271  0D11  01DB               	clrf	___fladd@aexp
  4272  0D12  0ADB               	incf	___fladd@aexp,f
  4273  0D13                     l6032:	
  4274  0D13  085B               	movf	___fladd@aexp,w
  4275  0D14  1903               	btfsc	3,2
  4276  0D15  2D46               	goto	l1309
  4277  0D16  3001               	movlw	1
  4278  0D17  07CA               	addwf	___fladd@b,f
  4279  0D18  3000               	movlw	0
  4280  0D19  1803               	skipnc
  4281  0D1A  3001               	movlw	1
  4282  0D1B  07CB               	addwf	___fladd@b+1,f
  4283  0D1C  3000               	movlw	0
  4284  0D1D  1803               	skipnc
  4285  0D1E  3001               	movlw	1
  4286  0D1F  07CC               	addwf	___fladd@b+2,f
  4287  0D20  3000               	movlw	0
  4288  0D21  1803               	skipnc
  4289  0D22  3001               	movlw	1
  4290  0D23  07CD               	addwf	___fladd@b+3,f
  4291  0D24  1C4D               	btfss	___fladd@b+3,0
  4292  0D25  2D46               	goto	l1309
  4293  0D26  084A               	movf	___fladd@b,w
  4294  0D27  00D2               	movwf	??___fladd
  4295  0D28  084B               	movf	___fladd@b+1,w
  4296  0D29  00D3               	movwf	??___fladd+1
  4297  0D2A  084C               	movf	___fladd@b+2,w
  4298  0D2B  00D4               	movwf	??___fladd+2
  4299  0D2C  084D               	movf	___fladd@b+3,w
  4300  0D2D  00D5               	movwf	??___fladd+3
  4301  0D2E  3001               	movlw	1
  4302  0D2F  00D6               	movwf	??___fladd+4
  4303  0D30                     u6185:	
  4304  0D30  0D55               	rlf	??___fladd+3,w
  4305  0D31  0CD5               	rrf	??___fladd+3,f
  4306  0D32  0CD4               	rrf	??___fladd+2,f
  4307  0D33  0CD3               	rrf	??___fladd+1,f
  4308  0D34  0CD2               	rrf	??___fladd,f
  4309  0D35  0BD6               	decfsz	??___fladd+4,f
  4310  0D36  2D30               	goto	u6185
  4311  0D37  0855               	movf	??___fladd+3,w
  4312  0D38  00CD               	movwf	___fladd@b+3
  4313  0D39  0854               	movf	??___fladd+2,w
  4314  0D3A  00CC               	movwf	___fladd@b+2
  4315  0D3B  0853               	movf	??___fladd+1,w
  4316  0D3C  00CB               	movwf	___fladd@b+1
  4317  0D3D  0852               	movf	??___fladd,w
  4318  0D3E  00CA               	movwf	___fladd@b
  4319  0D3F  0A5C               	incf	___fladd@bexp,w
  4320  0D40  1903               	btfsc	3,2
  4321  0D41  2D46               	goto	l1309
  4322  0D42  3001               	movlw	1
  4323  0D43  00D2               	movwf	??___fladd
  4324  0D44  0852               	movf	??___fladd,w
  4325  0D45  07DC               	addwf	___fladd@bexp,f
  4326  0D46                     l1309:	
  4327  0D46  0A5C               	incf	___fladd@bexp,w
  4328  0D47  1D03               	btfss	3,2
  4329  0D48  085C               	movf	___fladd@bexp,w
  4330  0D49  1D03               	btfss	3,2
  4331  0D4A  2D56               	goto	l6050
  4332  0D4B  3000               	movlw	0
  4333  0D4C  00CD               	movwf	___fladd@b+3
  4334  0D4D  3000               	movlw	0
  4335  0D4E  00CC               	movwf	___fladd@b+2
  4336  0D4F  3000               	movlw	0
  4337  0D50  00CB               	movwf	___fladd@b+1
  4338  0D51  3000               	movlw	0
  4339  0D52  00CA               	movwf	___fladd@b
  4340  0D53  085C               	movf	___fladd@bexp,w
  4341  0D54  1903               	btfsc	3,2
  4342  0D55  01DA               	clrf	___fladd@signs
  4343  0D56                     l6050:	
  4344  0D56  1C5C               	btfss	___fladd@bexp,0
  4345  0D57  2D5A               	goto	l6054
  4346  0D58  17CC               	bsf	___fladd@b+2,7
  4347  0D59  2D5E               	goto	l1317
  4348  0D5A                     l6054:	
  4349  0D5A  307F               	movlw	127
  4350  0D5B  00D2               	movwf	??___fladd
  4351  0D5C  0852               	movf	??___fladd,w
  4352  0D5D  05CC               	andwf	___fladd@b+2,f
  4353  0D5E                     l1317:	
  4354  0D5E  085C               	movf	___fladd@bexp,w
  4355  0D5F  00D2               	movwf	??___fladd
  4356  0D60  1003               	clrc
  4357  0D61  0C52               	rrf	??___fladd,w
  4358  0D62  00D3               	movwf	??___fladd+1
  4359  0D63  0853               	movf	??___fladd+1,w
  4360  0D64  00CD               	movwf	___fladd@b+3
  4361  0D65  1FDA               	btfss	___fladd@signs,7
  4362  0D66  0008               	return
  4363  0D67  17CD               	bsf	___fladd@b+3,7
  4364  0D68  0008               	return
  4365  0D69                     __end_of___fladd:	
  4366                           
  4367                           	psect	text5
  4368  129C                     __ptext5:	
  4369 ;; *************** function ___flge *****************
  4370 ;; Defined at:
  4371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  ff1             4    0[BANK0 ] unsigned char 
  4374 ;;  ff2             4    4[BANK0 ] unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;		None               void
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 300/0
  4383 ;;		On exit  : 300/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       8       0       0       0
  4387 ;;      Locals:         0       0       0       0       0
  4388 ;;      Temps:          0       4       0       0       0
  4389 ;;      Totals:         0      12       0       0       0
  4390 ;;Total ram usage:       12 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_MediaPlacaVaccum
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function ___flge
  4402  129C                     ___flge:	
  4403                           
  4404                           ;incstack = 0
  4405                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4406  129C  3000               	movlw	0
  4407  129D  0520               	andwf	___flge@ff1,w
  4408  129E  00A8               	movwf	??___flge
  4409  129F  3000               	movlw	0
  4410  12A0  0521               	andwf	___flge@ff1+1,w
  4411  12A1  00A9               	movwf	??___flge+1
  4412  12A2  3080               	movlw	128
  4413  12A3  0522               	andwf	___flge@ff1+2,w
  4414  12A4  00AA               	movwf	??___flge+2
  4415  12A5  307F               	movlw	127
  4416  12A6  0523               	andwf	___flge@ff1+3,w
  4417  12A7  00AB               	movwf	??___flge+3
  4418  12A8  082B               	movf	??___flge+3,w
  4419  12A9  042A               	iorwf	??___flge+2,w
  4420  12AA  0429               	iorwf	??___flge+1,w
  4421  12AB  0428               	iorwf	??___flge,w
  4422  12AC  1D03               	skipz
  4423  12AD  2AB6               	goto	l1156
  4424  12AE  3000               	movlw	0
  4425  12AF  00A3               	movwf	___flge@ff1+3
  4426  12B0  3000               	movlw	0
  4427  12B1  00A2               	movwf	___flge@ff1+2
  4428  12B2  3000               	movlw	0
  4429  12B3  00A1               	movwf	___flge@ff1+1
  4430  12B4  3000               	movlw	0
  4431  12B5  00A0               	movwf	___flge@ff1
  4432  12B6                     l1156:	
  4433  12B6  3000               	movlw	0
  4434  12B7  0524               	andwf	___flge@ff2,w
  4435  12B8  00A8               	movwf	??___flge
  4436  12B9  3000               	movlw	0
  4437  12BA  0525               	andwf	___flge@ff2+1,w
  4438  12BB  00A9               	movwf	??___flge+1
  4439  12BC  3080               	movlw	128
  4440  12BD  0526               	andwf	___flge@ff2+2,w
  4441  12BE  00AA               	movwf	??___flge+2
  4442  12BF  307F               	movlw	127
  4443  12C0  0527               	andwf	___flge@ff2+3,w
  4444  12C1  00AB               	movwf	??___flge+3
  4445  12C2  082B               	movf	??___flge+3,w
  4446  12C3  042A               	iorwf	??___flge+2,w
  4447  12C4  0429               	iorwf	??___flge+1,w
  4448  12C5  0428               	iorwf	??___flge,w
  4449  12C6  1D03               	skipz
  4450  12C7  2AD0               	goto	l6654
  4451  12C8  3000               	movlw	0
  4452  12C9  00A7               	movwf	___flge@ff2+3
  4453  12CA  3000               	movlw	0
  4454  12CB  00A6               	movwf	___flge@ff2+2
  4455  12CC  3000               	movlw	0
  4456  12CD  00A5               	movwf	___flge@ff2+1
  4457  12CE  3000               	movlw	0
  4458  12CF  00A4               	movwf	___flge@ff2
  4459  12D0                     l6654:	
  4460  12D0  1FA3               	btfss	___flge@ff1+3,7
  4461  12D1  2AF6               	goto	l6658
  4462  12D2  3000               	movlw	0
  4463  12D3  00A8               	movwf	??___flge
  4464  12D4  3000               	movlw	0
  4465  12D5  00A9               	movwf	??___flge+1
  4466  12D6  3000               	movlw	0
  4467  12D7  00AA               	movwf	??___flge+2
  4468  12D8  3080               	movlw	128
  4469  12D9  00AB               	movwf	??___flge+3
  4470  12DA  0820               	movf	___flge@ff1,w
  4471  12DB  02A8               	subwf	??___flge,f
  4472  12DC  0821               	movf	___flge@ff1+1,w
  4473  12DD  1C03               	skipc
  4474  12DE  0F21               	incfsz	___flge@ff1+1,w
  4475  12DF  2AE1               	goto	u7111
  4476  12E0  2AE2               	goto	u7112
  4477  12E1                     u7111:	
  4478  12E1  02A9               	subwf	??___flge+1,f
  4479  12E2                     u7112:	
  4480  12E2  0822               	movf	___flge@ff1+2,w
  4481  12E3  1C03               	skipc
  4482  12E4  0F22               	incfsz	___flge@ff1+2,w
  4483  12E5  2AE7               	goto	u7113
  4484  12E6  2AE8               	goto	u7114
  4485  12E7                     u7113:	
  4486  12E7  02AA               	subwf	??___flge+2,f
  4487  12E8                     u7114:	
  4488  12E8  0823               	movf	___flge@ff1+3,w
  4489  12E9  1C03               	skipc
  4490  12EA  0F23               	incfsz	___flge@ff1+3,w
  4491  12EB  2AED               	goto	u7115
  4492  12EC  2AEE               	goto	u7116
  4493  12ED                     u7115:	
  4494  12ED  02AB               	subwf	??___flge+3,f
  4495  12EE                     u7116:	
  4496  12EE  082B               	movf	??___flge+3,w
  4497  12EF  00A3               	movwf	___flge@ff1+3
  4498  12F0  082A               	movf	??___flge+2,w
  4499  12F1  00A2               	movwf	___flge@ff1+2
  4500  12F2  0829               	movf	??___flge+1,w
  4501  12F3  00A1               	movwf	___flge@ff1+1
  4502  12F4  0828               	movf	??___flge,w
  4503  12F5  00A0               	movwf	___flge@ff1
  4504  12F6                     l6658:	
  4505  12F6  1FA7               	btfss	___flge@ff2+3,7
  4506  12F7  2B1C               	goto	l1159
  4507  12F8  3000               	movlw	0
  4508  12F9  00A8               	movwf	??___flge
  4509  12FA  3000               	movlw	0
  4510  12FB  00A9               	movwf	??___flge+1
  4511  12FC  3000               	movlw	0
  4512  12FD  00AA               	movwf	??___flge+2
  4513  12FE  3080               	movlw	128
  4514  12FF  00AB               	movwf	??___flge+3
  4515  1300  0824               	movf	___flge@ff2,w
  4516  1301  02A8               	subwf	??___flge,f
  4517  1302  0825               	movf	___flge@ff2+1,w
  4518  1303  1C03               	skipc
  4519  1304  0F25               	incfsz	___flge@ff2+1,w
  4520  1305  2B07               	goto	u7131
  4521  1306  2B08               	goto	u7132
  4522  1307                     u7131:	
  4523  1307  02A9               	subwf	??___flge+1,f
  4524  1308                     u7132:	
  4525  1308  0826               	movf	___flge@ff2+2,w
  4526  1309  1C03               	skipc
  4527  130A  0F26               	incfsz	___flge@ff2+2,w
  4528  130B  2B0D               	goto	u7133
  4529  130C  2B0E               	goto	u7134
  4530  130D                     u7133:	
  4531  130D  02AA               	subwf	??___flge+2,f
  4532  130E                     u7134:	
  4533  130E  0827               	movf	___flge@ff2+3,w
  4534  130F  1C03               	skipc
  4535  1310  0F27               	incfsz	___flge@ff2+3,w
  4536  1311  2B13               	goto	u7135
  4537  1312  2B14               	goto	u7136
  4538  1313                     u7135:	
  4539  1313  02AB               	subwf	??___flge+3,f
  4540  1314                     u7136:	
  4541  1314  082B               	movf	??___flge+3,w
  4542  1315  00A7               	movwf	___flge@ff2+3
  4543  1316  082A               	movf	??___flge+2,w
  4544  1317  00A6               	movwf	___flge@ff2+2
  4545  1318  0829               	movf	??___flge+1,w
  4546  1319  00A5               	movwf	___flge@ff2+1
  4547  131A  0828               	movf	??___flge,w
  4548  131B  00A4               	movwf	___flge@ff2
  4549  131C                     l1159:	
  4550  131C  3080               	movlw	128
  4551  131D  06A3               	xorwf	___flge@ff1+3,f
  4552  131E  3080               	movlw	128
  4553  131F  06A7               	xorwf	___flge@ff2+3,f
  4554  1320  0827               	movf	___flge@ff2+3,w
  4555  1321  0223               	subwf	___flge@ff1+3,w
  4556  1322  1D03               	skipz
  4557  1323  0008               	return
  4558  1324  0826               	movf	___flge@ff2+2,w
  4559  1325  0222               	subwf	___flge@ff1+2,w
  4560  1326  1D03               	skipz
  4561  1327  0008               	return
  4562  1328  0825               	movf	___flge@ff2+1,w
  4563  1329  0221               	subwf	___flge@ff1+1,w
  4564  132A  1D03               	skipz
  4565  132B  0008               	return
  4566  132C  0824               	movf	___flge@ff2,w
  4567  132D  0220               	subwf	___flge@ff1,w
  4568  132E  0008               	return
  4569  132F                     __end_of___flge:	
  4570                           
  4571                           	psect	text6
  4572  099B                     __ptext6:	
  4573 ;; *************** function ___fldiv *****************
  4574 ;; Defined at:
  4575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  a               4   33[BANK0 ] unsigned char 
  4578 ;;  b               4   37[BANK0 ] unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  grs             4   53[BANK0 ] unsigned long 
  4581 ;;  rem             4   46[BANK0 ] unsigned long 
  4582 ;;  new_exp         2   51[BANK0 ] int 
  4583 ;;  aexp            1   58[BANK0 ] unsigned char 
  4584 ;;  bexp            1   57[BANK0 ] unsigned char 
  4585 ;;  sign            1   50[BANK0 ] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  4   33[BANK0 ] unsigned char 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0, btemp+1
  4590 ;; Tracked objects:
  4591 ;;		On entry : 300/0
  4592 ;;		On exit  : 300/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         0       8       0       0       0
  4596 ;;      Locals:         0      13       0       0       0
  4597 ;;      Temps:          0       5       0       0       0
  4598 ;;      Totals:         0      26       0       0       0
  4599 ;;Total ram usage:       26 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_MediaPlacaVaccum
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function ___fldiv
  4611  099B                     ___fldiv:	
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4615  099B  0848               	movf	___fldiv@b+3,w
  4616  099C  3980               	andlw	128
  4617  099D  00C9               	movwf	??___fldiv
  4618  099E  0849               	movf	??___fldiv,w
  4619  099F  00D2               	movwf	___fldiv@sign
  4620  09A0  0848               	movf	___fldiv@b+3,w
  4621  09A1  00C9               	movwf	??___fldiv
  4622  09A2  0749               	addwf	??___fldiv,w
  4623  09A3  00CA               	movwf	??___fldiv+1
  4624  09A4  084A               	movf	??___fldiv+1,w
  4625  09A5  00D9               	movwf	___fldiv@bexp
  4626  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4627  09A7  1459               	bsf	___fldiv@bexp,0
  4628  09A8  0859               	movf	___fldiv@bexp,w
  4629  09A9  1903               	btfsc	3,2
  4630  09AA  29B9               	goto	l6692
  4631  09AB  0A59               	incf	___fldiv@bexp,w
  4632  09AC  1D03               	btfss	3,2
  4633  09AD  29B6               	goto	l6688
  4634  09AE  3000               	movlw	0
  4635  09AF  00C8               	movwf	___fldiv@b+3
  4636  09B0  3000               	movlw	0
  4637  09B1  00C7               	movwf	___fldiv@b+2
  4638  09B2  3000               	movlw	0
  4639  09B3  00C6               	movwf	___fldiv@b+1
  4640  09B4  3000               	movlw	0
  4641  09B5  00C5               	movwf	___fldiv@b
  4642  09B6                     l6688:	
  4643  09B6  17C7               	bsf	___fldiv@b+2,7
  4644  09B7  01C8               	clrf	___fldiv@b+3
  4645  09B8  29C1               	goto	l6694
  4646  09B9                     l6692:	
  4647  09B9  3000               	movlw	0
  4648  09BA  00C8               	movwf	___fldiv@b+3
  4649  09BB  3000               	movlw	0
  4650  09BC  00C7               	movwf	___fldiv@b+2
  4651  09BD  3000               	movlw	0
  4652  09BE  00C6               	movwf	___fldiv@b+1
  4653  09BF  3000               	movlw	0
  4654  09C0  00C5               	movwf	___fldiv@b
  4655  09C1                     l6694:	
  4656  09C1  0844               	movf	___fldiv@a+3,w
  4657  09C2  3980               	andlw	128
  4658  09C3  00C9               	movwf	??___fldiv
  4659  09C4  0849               	movf	??___fldiv,w
  4660  09C5  06D2               	xorwf	___fldiv@sign,f
  4661  09C6  0844               	movf	___fldiv@a+3,w
  4662  09C7  00C9               	movwf	??___fldiv
  4663  09C8  0749               	addwf	??___fldiv,w
  4664  09C9  00CA               	movwf	??___fldiv+1
  4665  09CA  084A               	movf	??___fldiv+1,w
  4666  09CB  00DA               	movwf	___fldiv@aexp
  4667  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4668  09CD  145A               	bsf	___fldiv@aexp,0
  4669  09CE  085A               	movf	___fldiv@aexp,w
  4670  09CF  1903               	btfsc	3,2
  4671  09D0  29DF               	goto	l6712
  4672  09D1  0A5A               	incf	___fldiv@aexp,w
  4673  09D2  1D03               	btfss	3,2
  4674  09D3  29DC               	goto	l6708
  4675  09D4  3000               	movlw	0
  4676  09D5  00C4               	movwf	___fldiv@a+3
  4677  09D6  3000               	movlw	0
  4678  09D7  00C3               	movwf	___fldiv@a+2
  4679  09D8  3000               	movlw	0
  4680  09D9  00C2               	movwf	___fldiv@a+1
  4681  09DA  3000               	movlw	0
  4682  09DB  00C1               	movwf	___fldiv@a
  4683  09DC                     l6708:	
  4684  09DC  17C3               	bsf	___fldiv@a+2,7
  4685  09DD  01C4               	clrf	___fldiv@a+3
  4686  09DE  29E7               	goto	l1331
  4687  09DF                     l6712:	
  4688  09DF  3000               	movlw	0
  4689  09E0  00C4               	movwf	___fldiv@a+3
  4690  09E1  3000               	movlw	0
  4691  09E2  00C3               	movwf	___fldiv@a+2
  4692  09E3  3000               	movlw	0
  4693  09E4  00C2               	movwf	___fldiv@a+1
  4694  09E5  3000               	movlw	0
  4695  09E6  00C1               	movwf	___fldiv@a
  4696  09E7                     l1331:	
  4697  09E7  0844               	movf	___fldiv@a+3,w
  4698  09E8  0443               	iorwf	___fldiv@a+2,w
  4699  09E9  0442               	iorwf	___fldiv@a+1,w
  4700  09EA  0441               	iorwf	___fldiv@a,w
  4701  09EB  1D03               	skipz
  4702  09EC  2A06               	goto	l6722
  4703  09ED  3000               	movlw	0
  4704  09EE  00C8               	movwf	___fldiv@b+3
  4705  09EF  3000               	movlw	0
  4706  09F0  00C7               	movwf	___fldiv@b+2
  4707  09F1  3000               	movlw	0
  4708  09F2  00C6               	movwf	___fldiv@b+1
  4709  09F3  3000               	movlw	0
  4710  09F4  00C5               	movwf	___fldiv@b
  4711  09F5  3080               	movlw	128
  4712  09F6  04C7               	iorwf	___fldiv@b+2,f
  4713  09F7  307F               	movlw	127
  4714  09F8  04C8               	iorwf	___fldiv@b+3,f
  4715  09F9                     L5:	
  4716  09F9  0852               	movf	___fldiv@sign,w
  4717  09FA  00C9               	movwf	??___fldiv
  4718  09FB  0849               	movf	??___fldiv,w
  4719  09FC  04C8               	iorwf	___fldiv@b+3,f
  4720  09FD  0848               	movf	___fldiv@b+3,w
  4721  09FE  00C4               	movwf	?___fldiv+3
  4722  09FF  0847               	movf	___fldiv@b+2,w
  4723  0A00  00C3               	movwf	?___fldiv+2
  4724  0A01  0846               	movf	___fldiv@b+1,w
  4725  0A02  00C2               	movwf	?___fldiv+1
  4726  0A03  0845               	movf	___fldiv@b,w
  4727  0A04  00C1               	movwf	?___fldiv
  4728  0A05  0008               	return
  4729  0A06                     l6722:	
  4730  0A06  0859               	movf	___fldiv@bexp,w
  4731  0A07  1D03               	btfss	3,2
  4732  0A08  2A12               	goto	l6728
  4733  0A09  3000               	movlw	0
  4734  0A0A  00C4               	movwf	?___fldiv+3
  4735  0A0B  3000               	movlw	0
  4736  0A0C  00C3               	movwf	?___fldiv+2
  4737  0A0D  3000               	movlw	0
  4738  0A0E  00C2               	movwf	?___fldiv+1
  4739  0A0F  3000               	movlw	0
  4740  0A10  00C1               	movwf	?___fldiv
  4741  0A11  0008               	return
  4742  0A12                     l6728:	
  4743  0A12  0859               	movf	___fldiv@bexp,w
  4744  0A13  00C9               	movwf	??___fldiv
  4745  0A14  01CA               	clrf	??___fldiv+1
  4746  0A15  084A               	movf	??___fldiv+1,w
  4747  0A16  00CC               	movwf	??___fldiv+3
  4748  0A17  085A               	movf	___fldiv@aexp,w
  4749  0A18  0249               	subwf	??___fldiv,w
  4750  0A19  00CB               	movwf	??___fldiv+2
  4751  0A1A  1C03               	skipc
  4752  0A1B  03CC               	decf	??___fldiv+3,f
  4753  0A1C  084B               	movf	??___fldiv+2,w
  4754  0A1D  3E7F               	addlw	127
  4755  0A1E  00D3               	movwf	___fldiv@new_exp
  4756  0A1F  084C               	movf	??___fldiv+3,w
  4757  0A20  1803               	skipnc
  4758  0A21  3E01               	addlw	1
  4759  0A22  3E00               	addlw	0
  4760  0A23  00D4               	movwf	___fldiv@new_exp+1
  4761  0A24  0848               	movf	___fldiv@b+3,w
  4762  0A25  00D1               	movwf	___fldiv@rem+3
  4763  0A26  0847               	movf	___fldiv@b+2,w
  4764  0A27  00D0               	movwf	___fldiv@rem+2
  4765  0A28  0846               	movf	___fldiv@b+1,w
  4766  0A29  00CF               	movwf	___fldiv@rem+1
  4767  0A2A  0845               	movf	___fldiv@b,w
  4768  0A2B  00CE               	movwf	___fldiv@rem
  4769  0A2C  3000               	movlw	0
  4770  0A2D  00C8               	movwf	___fldiv@b+3
  4771  0A2E  3000               	movlw	0
  4772  0A2F  00C7               	movwf	___fldiv@b+2
  4773  0A30  3000               	movlw	0
  4774  0A31  00C6               	movwf	___fldiv@b+1
  4775  0A32  3000               	movlw	0
  4776  0A33  00C5               	movwf	___fldiv@b
  4777  0A34  3000               	movlw	0
  4778  0A35  00D8               	movwf	___fldiv@grs+3
  4779  0A36  3000               	movlw	0
  4780  0A37  00D7               	movwf	___fldiv@grs+2
  4781  0A38  3000               	movlw	0
  4782  0A39  00D6               	movwf	___fldiv@grs+1
  4783  0A3A  3000               	movlw	0
  4784  0A3B  00D5               	movwf	___fldiv@grs
  4785  0A3C  01DA               	clrf	___fldiv@aexp
  4786  0A3D                     l6756:	
  4787  0A3D  301A               	movlw	26
  4788  0A3E  025A               	subwf	___fldiv@aexp,w
  4789  0A3F  1803               	btfsc	3,0
  4790  0A40  2A85               	goto	l6758
  4791  0A41  085A               	movf	___fldiv@aexp,w
  4792  0A42  1903               	btfsc	3,2
  4793  0A43  2A61               	goto	l6748
  4794  0A44  3001               	movlw	1
  4795  0A45  00C9               	movwf	??___fldiv
  4796  0A46                     u7245:	
  4797  0A46  1003               	clrc
  4798  0A47  0DCE               	rlf	___fldiv@rem,f
  4799  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4800  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4801  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4802  0A4B  0BC9               	decfsz	??___fldiv,f
  4803  0A4C  2A46               	goto	u7245
  4804  0A4D  3001               	movlw	1
  4805  0A4E  00C9               	movwf	??___fldiv
  4806  0A4F                     u7255:	
  4807  0A4F  1003               	clrc
  4808  0A50  0DC5               	rlf	___fldiv@b,f
  4809  0A51  0DC6               	rlf	___fldiv@b+1,f
  4810  0A52  0DC7               	rlf	___fldiv@b+2,f
  4811  0A53  0DC8               	rlf	___fldiv@b+3,f
  4812  0A54  0BC9               	decfsz	??___fldiv,f
  4813  0A55  2A4F               	goto	u7255
  4814  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4815  0A57  1445               	bsf	___fldiv@b,0
  4816  0A58  3001               	movlw	1
  4817  0A59  00C9               	movwf	??___fldiv
  4818  0A5A                     u7275:	
  4819  0A5A  1003               	clrc
  4820  0A5B  0DD5               	rlf	___fldiv@grs,f
  4821  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4822  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4823  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4824  0A5F  0BC9               	decfsz	??___fldiv,f
  4825  0A60  2A5A               	goto	u7275
  4826  0A61                     l6748:	
  4827  0A61  0844               	movf	___fldiv@a+3,w
  4828  0A62  0251               	subwf	___fldiv@rem+3,w
  4829  0A63  1D03               	skipz
  4830  0A64  2A6F               	goto	u7285
  4831  0A65  0843               	movf	___fldiv@a+2,w
  4832  0A66  0250               	subwf	___fldiv@rem+2,w
  4833  0A67  1D03               	skipz
  4834  0A68  2A6F               	goto	u7285
  4835  0A69  0842               	movf	___fldiv@a+1,w
  4836  0A6A  024F               	subwf	___fldiv@rem+1,w
  4837  0A6B  1D03               	skipz
  4838  0A6C  2A6F               	goto	u7285
  4839  0A6D  0841               	movf	___fldiv@a,w
  4840  0A6E  024E               	subwf	___fldiv@rem,w
  4841  0A6F                     u7285:	
  4842  0A6F  1C03               	skipc
  4843  0A70  2A80               	goto	l6754
  4844  0A71  1758               	bsf	___fldiv@grs+3,6
  4845  0A72  0841               	movf	___fldiv@a,w
  4846  0A73  02CE               	subwf	___fldiv@rem,f
  4847  0A74  0842               	movf	___fldiv@a+1,w
  4848  0A75  1C03               	skipc
  4849  0A76  0F42               	incfsz	___fldiv@a+1,w
  4850  0A77  02CF               	subwf	___fldiv@rem+1,f
  4851  0A78  0843               	movf	___fldiv@a+2,w
  4852  0A79  1C03               	skipc
  4853  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4854  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4855  0A7C  0844               	movf	___fldiv@a+3,w
  4856  0A7D  1C03               	skipc
  4857  0A7E  0F44               	incfsz	___fldiv@a+3,w
  4858  0A7F  02D1               	subwf	___fldiv@rem+3,f
  4859  0A80                     l6754:	
  4860  0A80  3001               	movlw	1
  4861  0A81  00C9               	movwf	??___fldiv
  4862  0A82  0849               	movf	??___fldiv,w
  4863  0A83  07DA               	addwf	___fldiv@aexp,f
  4864  0A84  2A3D               	goto	l6756
  4865  0A85                     l6758:	
  4866  0A85  0851               	movf	___fldiv@rem+3,w
  4867  0A86  0450               	iorwf	___fldiv@rem+2,w
  4868  0A87  044F               	iorwf	___fldiv@rem+1,w
  4869  0A88  044E               	iorwf	___fldiv@rem,w
  4870  0A89  1D03               	btfss	3,2
  4871  0A8A  1455               	bsf	___fldiv@grs,0
  4872  0A8B                     l6772:	
  4873  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  4874  0A8C  2AA8               	goto	l6774
  4875  0A8D  3001               	movlw	1
  4876  0A8E  00C9               	movwf	??___fldiv
  4877  0A8F                     u7315:	
  4878  0A8F  1003               	clrc
  4879  0A90  0DC5               	rlf	___fldiv@b,f
  4880  0A91  0DC6               	rlf	___fldiv@b+1,f
  4881  0A92  0DC7               	rlf	___fldiv@b+2,f
  4882  0A93  0DC8               	rlf	___fldiv@b+3,f
  4883  0A94  0BC9               	decfsz	??___fldiv,f
  4884  0A95  2A8F               	goto	u7315
  4885  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  4886  0A97  1445               	bsf	___fldiv@b,0
  4887  0A98  3001               	movlw	1
  4888  0A99  00C9               	movwf	??___fldiv
  4889  0A9A                     u7335:	
  4890  0A9A  1003               	clrc
  4891  0A9B  0DD5               	rlf	___fldiv@grs,f
  4892  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  4893  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  4894  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  4895  0A9F  0BC9               	decfsz	??___fldiv,f
  4896  0AA0  2A9A               	goto	u7335
  4897  0AA1  30FF               	movlw	255
  4898  0AA2  07D3               	addwf	___fldiv@new_exp,f
  4899  0AA3  1803               	skipnc
  4900  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  4901  0AA5  30FF               	movlw	255
  4902  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  4903  0AA7  2A8B               	goto	l6772
  4904  0AA8                     l6774:	
  4905  0AA8  01DA               	clrf	___fldiv@aexp
  4906  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  4907  0AAA  2AC1               	goto	l6784
  4908  0AAB  30FF               	movlw	255
  4909  0AAC  0555               	andwf	___fldiv@grs,w
  4910  0AAD  00C9               	movwf	??___fldiv
  4911  0AAE  30FF               	movlw	255
  4912  0AAF  0556               	andwf	___fldiv@grs+1,w
  4913  0AB0  00CA               	movwf	??___fldiv+1
  4914  0AB1  30FF               	movlw	255
  4915  0AB2  0557               	andwf	___fldiv@grs+2,w
  4916  0AB3  00CB               	movwf	??___fldiv+2
  4917  0AB4  307F               	movlw	127
  4918  0AB5  0558               	andwf	___fldiv@grs+3,w
  4919  0AB6  00CC               	movwf	??___fldiv+3
  4920  0AB7  084C               	movf	??___fldiv+3,w
  4921  0AB8  044B               	iorwf	??___fldiv+2,w
  4922  0AB9  044A               	iorwf	??___fldiv+1,w
  4923  0ABA  0449               	iorwf	??___fldiv,w
  4924  0ABB  1903               	skipnz
  4925  0ABC  1845               	btfsc	___fldiv@b,0
  4926  0ABD  2ABF               	goto	l6780
  4927  0ABE  2AC1               	goto	l6784
  4928  0ABF                     l6780:	
  4929  0ABF  01DA               	clrf	___fldiv@aexp
  4930  0AC0  0ADA               	incf	___fldiv@aexp,f
  4931  0AC1                     l6784:	
  4932  0AC1  085A               	movf	___fldiv@aexp,w
  4933  0AC2  1903               	btfsc	3,2
  4934  0AC3  2AF3               	goto	l6794
  4935  0AC4  3001               	movlw	1
  4936  0AC5  07C5               	addwf	___fldiv@b,f
  4937  0AC6  3000               	movlw	0
  4938  0AC7  1803               	skipnc
  4939  0AC8  3001               	movlw	1
  4940  0AC9  07C6               	addwf	___fldiv@b+1,f
  4941  0ACA  3000               	movlw	0
  4942  0ACB  1803               	skipnc
  4943  0ACC  3001               	movlw	1
  4944  0ACD  07C7               	addwf	___fldiv@b+2,f
  4945  0ACE  3000               	movlw	0
  4946  0ACF  1803               	skipnc
  4947  0AD0  3001               	movlw	1
  4948  0AD1  07C8               	addwf	___fldiv@b+3,f
  4949  0AD2  1C48               	btfss	___fldiv@b+3,0
  4950  0AD3  2AF3               	goto	l6794
  4951  0AD4  0845               	movf	___fldiv@b,w
  4952  0AD5  00C9               	movwf	??___fldiv
  4953  0AD6  0846               	movf	___fldiv@b+1,w
  4954  0AD7  00CA               	movwf	??___fldiv+1
  4955  0AD8  0847               	movf	___fldiv@b+2,w
  4956  0AD9  00CB               	movwf	??___fldiv+2
  4957  0ADA  0848               	movf	___fldiv@b+3,w
  4958  0ADB  00CC               	movwf	??___fldiv+3
  4959  0ADC  3001               	movlw	1
  4960  0ADD  00CD               	movwf	??___fldiv+4
  4961  0ADE                     u7405:	
  4962  0ADE  0D4C               	rlf	??___fldiv+3,w
  4963  0ADF  0CCC               	rrf	??___fldiv+3,f
  4964  0AE0  0CCB               	rrf	??___fldiv+2,f
  4965  0AE1  0CCA               	rrf	??___fldiv+1,f
  4966  0AE2  0CC9               	rrf	??___fldiv,f
  4967  0AE3  0BCD               	decfsz	??___fldiv+4,f
  4968  0AE4  2ADE               	goto	u7405
  4969  0AE5  084C               	movf	??___fldiv+3,w
  4970  0AE6  00C8               	movwf	___fldiv@b+3
  4971  0AE7  084B               	movf	??___fldiv+2,w
  4972  0AE8  00C7               	movwf	___fldiv@b+2
  4973  0AE9  084A               	movf	??___fldiv+1,w
  4974  0AEA  00C6               	movwf	___fldiv@b+1
  4975  0AEB  0849               	movf	??___fldiv,w
  4976  0AEC  00C5               	movwf	___fldiv@b
  4977  0AED  3001               	movlw	1
  4978  0AEE  07D3               	addwf	___fldiv@new_exp,f
  4979  0AEF  1803               	skipnc
  4980  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  4981  0AF1  3000               	movlw	0
  4982  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  4983  0AF3                     l6794:	
  4984  0AF3  0854               	movf	___fldiv@new_exp+1,w
  4985  0AF4  3A80               	xorlw	128
  4986  0AF5  00FF               	movwf	127
  4987  0AF6  3080               	movlw	128
  4988  0AF7  027F               	subwf	127,w
  4989  0AF8  1D03               	skipz
  4990  0AF9  2AFC               	goto	u7415
  4991  0AFA  30FF               	movlw	255
  4992  0AFB  0253               	subwf	___fldiv@new_exp,w
  4993  0AFC                     u7415:	
  4994  0AFC  1C03               	skipc
  4995  0AFD  2B0C               	goto	l6798
  4996  0AFE  30FF               	movlw	255
  4997  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0B01  00D3               	movwf	___fldiv@new_exp
  5000  0B02  3000               	movlw	0
  5001  0B03  00D4               	movwf	___fldiv@new_exp+1
  5002  0B04  3000               	movlw	0
  5003  0B05  00C8               	movwf	___fldiv@b+3
  5004  0B06  3000               	movlw	0
  5005  0B07  00C7               	movwf	___fldiv@b+2
  5006  0B08  3000               	movlw	0
  5007  0B09  00C6               	movwf	___fldiv@b+1
  5008  0B0A  3000               	movlw	0
  5009  0B0B  00C5               	movwf	___fldiv@b
  5010  0B0C                     l6798:	
  5011  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5014  0B0F  3A80               	xorlw	128
  5015  0B10  00FF               	movwf	127
  5016  0B11  3080               	movlw	128
  5017  0B12  027F               	subwf	127,w
  5018  0B13  1D03               	skipz
  5019  0B14  2B17               	goto	u7425
  5020  0B15  3001               	movlw	1
  5021  0B16  0253               	subwf	___fldiv@new_exp,w
  5022  0B17                     u7425:	
  5023  0B17  1803               	skipnc
  5024  0B18  2B26               	goto	l1353
  5025  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0B1B  01D3               	clrf	___fldiv@new_exp
  5028  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5029  0B1D  3000               	movlw	0
  5030  0B1E  00C8               	movwf	___fldiv@b+3
  5031  0B1F  3000               	movlw	0
  5032  0B20  00C7               	movwf	___fldiv@b+2
  5033  0B21  3000               	movlw	0
  5034  0B22  00C6               	movwf	___fldiv@b+1
  5035  0B23  3000               	movlw	0
  5036  0B24  00C5               	movwf	___fldiv@b
  5037  0B25  01D2               	clrf	___fldiv@sign
  5038  0B26                     l1353:	
  5039  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0B28  0853               	movf	___fldiv@new_exp,w
  5042  0B29  00C9               	movwf	??___fldiv
  5043  0B2A  0849               	movf	??___fldiv,w
  5044  0B2B  00D9               	movwf	___fldiv@bexp
  5045  0B2C  1C59               	btfss	___fldiv@bexp,0
  5046  0B2D  2B30               	goto	l6810
  5047  0B2E  17C7               	bsf	___fldiv@b+2,7
  5048  0B2F  2B34               	goto	l1355
  5049  0B30                     l6810:	
  5050  0B30  307F               	movlw	127
  5051  0B31  00C9               	movwf	??___fldiv
  5052  0B32  0849               	movf	??___fldiv,w
  5053  0B33  05C7               	andwf	___fldiv@b+2,f
  5054  0B34                     l1355:	
  5055  0B34  0859               	movf	___fldiv@bexp,w
  5056  0B35  00C9               	movwf	??___fldiv
  5057  0B36  1003               	clrc
  5058  0B37  0C49               	rrf	??___fldiv,w
  5059  0B38  00CA               	movwf	??___fldiv+1
  5060  0B39  084A               	movf	??___fldiv+1,w
  5061  0B3A  00C8               	movwf	___fldiv@b+3
  5062  0B3B  29F9               	goto	L5
  5063  0B3C                     __end_of___fldiv:	
  5064                           
  5065                           	psect	text7
  5066  1B7C                     __ptext7:	
  5067 ;; *************** function _Package_Usart_is_for_me *****************
  5068 ;; Defined at:
  5069 ;;		line 8 in file "protocolo.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  retorno         1    0[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      unsigned char 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 200/100
  5080 ;;		On exit  : 300/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       1       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       1       0       0       0
  5087 ;;Total ram usage:        1 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_MediaPlacaVaccum
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _Package_Usart_is_for_me
  5099  1B7C                     _Package_Usart_is_for_me:	
  5100                           
  5101                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5105  1B7C  1683               	bsf	3,5	;RP0=1, select bank1
  5106  1B7D  1C3B               	btfss	_generic_status^(0+128),0
  5107  1B7E  2B8E               	goto	l6588
  5108                           
  5109                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5110  1B7F  1703               	bsf	3,6	;RP1=1, select bank3
  5111  1B80  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5112  1B81  1303               	bcf	3,6	;RP1=0, select bank1
  5113  1B82  0638               	xorwf	_Board_Number^(0+128),w
  5114  1B83  1903               	skipnz
  5115  1B84  2B89               	goto	l802
  5116  1B85  1703               	bsf	3,6	;RP1=1, select bank3
  5117  1B86  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5118  1B87  1D03               	btfss	3,2
  5119  1B88  2B8E               	goto	l6588
  5120  1B89                     l802:	
  5121                           
  5122                           ;protocolo.c: 13:             retorno=1;
  5123  1B89  1283               	bcf	3,5	;RP0=0, select bank0
  5124  1B8A  1303               	bcf	3,6	;RP1=0, select bank0
  5125  1B8B  01A0               	clrf	Package_Usart_is_for_me@retorno
  5126  1B8C  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5127  1B8D  2B91               	goto	l6592
  5128  1B8E                     l6588:	
  5129                           
  5130                           ;protocolo.c: 15:             retorno=0;
  5131  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  5132  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  5133  1B90  01A0               	clrf	Package_Usart_is_for_me@retorno
  5134  1B91                     l6592:	
  5135                           
  5136                           ;protocolo.c: 21:      return retorno;
  5137  1B91  0820               	movf	Package_Usart_is_for_me@retorno,w
  5138  1B92  0008               	return
  5139  1B93                     __end_of_Package_Usart_is_for_me:	
  5140                           
  5141                           	psect	text8
  5142  10A8                     __ptext8:	
  5143 ;; *************** function _ADC_Media_10bits *****************
  5144 ;; Defined at:
  5145 ;;		line 20 in file "adc.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  canal           1    wreg     unsigned char 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  canal           1   38[BANK0 ] unsigned char 
  5150 ;;  value           2   39[BANK0 ] unsigned int 
  5151 ;;  i               1   41[BANK0 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4   33[BANK0 ] float 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 300/100
  5158 ;;		On exit  : 300/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       4       0       0       0
  5162 ;;      Locals:         0       4       0       0       0
  5163 ;;      Temps:          0       1       0       0       0
  5164 ;;      Totals:         0       9       0       0       0
  5165 ;;Total ram usage:        9 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    2
  5168 ;; This function calls:
  5169 ;;		___lwdiv
  5170 ;;		___xxtofl
  5171 ;;		_captura
  5172 ;;		_my_delay_ms
  5173 ;; This function is called by:
  5174 ;;		_MediaPlacaVaccum
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _ADC_Media_10bits
  5180  10A8                     _ADC_Media_10bits:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5184                           ;ADC_Media_10bits@canal stored from wreg
  5185  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  5186  10A9  00C6               	movwf	ADC_Media_10bits@canal
  5187                           
  5188                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5189  10AA  0846               	movf	ADC_Media_10bits@canal,w
  5190  10AB  00C5               	movwf	??_ADC_Media_10bits
  5191  10AC  0DC5               	rlf	??_ADC_Media_10bits,f
  5192  10AD  0DC5               	rlf	??_ADC_Media_10bits,f
  5193  10AE  081F               	movf	31,w	;volatile
  5194  10AF  0645               	xorwf	??_ADC_Media_10bits,w
  5195  10B0  39C3               	andlw	-61
  5196  10B1  0645               	xorwf	??_ADC_Media_10bits,w
  5197  10B2  009F               	movwf	31	;volatile
  5198                           
  5199                           ;adc.c: 24:       my_delay_ms(1);
  5200  10B3  3000               	movlw	0
  5201  10B4  00A3               	movwf	my_delay_ms@time+3
  5202  10B5  3000               	movlw	0
  5203  10B6  00A2               	movwf	my_delay_ms@time+2
  5204  10B7  3000               	movlw	0
  5205  10B8  00A1               	movwf	my_delay_ms@time+1
  5206  10B9  3001               	movlw	1
  5207  10BA  00A0               	movwf	my_delay_ms@time
  5208  10BB  160A  158A  262A  160A  118A  	fcall	_my_delay_ms
  5209                           
  5210                           ;adc.c: 26:       value=0;
  5211  10C0  01C7               	clrf	ADC_Media_10bits@value
  5212  10C1  01C8               	clrf	ADC_Media_10bits@value+1
  5213                           
  5214                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5215  10C2  01C9               	clrf	ADC_Media_10bits@i
  5216  10C3  0AC9               	incf	ADC_Media_10bits@i,f
  5217  10C4                     l6570:	
  5218                           
  5219                           ;adc.c: 28:           value+=captura();
  5220  10C4  160A  158A  22E5  160A  118A  	fcall	_captura
  5221  10C9  0820               	movf	?_captura,w
  5222  10CA  07C7               	addwf	ADC_Media_10bits@value,f
  5223  10CB  1803               	skipnc
  5224  10CC  0AC8               	incf	ADC_Media_10bits@value+1,f
  5225  10CD  0821               	movf	?_captura+1,w
  5226  10CE  07C8               	addwf	ADC_Media_10bits@value+1,f
  5227  10CF  3001               	movlw	1
  5228  10D0  00C5               	movwf	??_ADC_Media_10bits
  5229  10D1  0845               	movf	??_ADC_Media_10bits,w
  5230  10D2  07C9               	addwf	ADC_Media_10bits@i,f
  5231  10D3  3033               	movlw	51
  5232  10D4  0249               	subwf	ADC_Media_10bits@i,w
  5233  10D5  1C03               	skipc
  5234  10D6  28C4               	goto	l6570
  5235                           
  5236                           ;adc.c: 29:       value/=(i-1);
  5237  10D7  0849               	movf	ADC_Media_10bits@i,w
  5238  10D8  3EFF               	addlw	255
  5239  10D9  00A0               	movwf	___lwdiv@divisor
  5240  10DA  30FF               	movlw	255
  5241  10DB  1803               	skipnc
  5242  10DC  3000               	movlw	0
  5243  10DD  00A1               	movwf	___lwdiv@divisor+1
  5244  10DE  0848               	movf	ADC_Media_10bits@value+1,w
  5245  10DF  00A3               	movwf	___lwdiv@dividend+1
  5246  10E0  0847               	movf	ADC_Media_10bits@value,w
  5247  10E1  00A2               	movwf	___lwdiv@dividend
  5248  10E2  160A  158A  270C  160A  118A  	fcall	___lwdiv
  5249  10E7  0821               	movf	?___lwdiv+1,w
  5250  10E8  00C8               	movwf	ADC_Media_10bits@value+1
  5251  10E9  0820               	movf	?___lwdiv,w
  5252  10EA  00C7               	movwf	ADC_Media_10bits@value
  5253                           
  5254                           ;adc.c: 30:       return value;
  5255  10EB  0847               	movf	ADC_Media_10bits@value,w
  5256  10EC  00B3               	movwf	___xxtofl@val
  5257  10ED  0848               	movf	ADC_Media_10bits@value+1,w
  5258  10EE  00B4               	movwf	___xxtofl@val+1
  5259  10EF  01B5               	clrf	___xxtofl@val+2
  5260  10F0  01B6               	clrf	___xxtofl@val+3
  5261  10F1  3000               	movlw	0
  5262  10F2  160A  118A  232F   	fcall	___xxtofl
  5263  10F5  0836               	movf	?___xxtofl+3,w
  5264  10F6  00C4               	movwf	?_ADC_Media_10bits+3
  5265  10F7  0835               	movf	?___xxtofl+2,w
  5266  10F8  00C3               	movwf	?_ADC_Media_10bits+2
  5267  10F9  0834               	movf	?___xxtofl+1,w
  5268  10FA  00C2               	movwf	?_ADC_Media_10bits+1
  5269  10FB  0833               	movf	?___xxtofl,w
  5270  10FC  00C1               	movwf	?_ADC_Media_10bits
  5271  10FD  0008               	return
  5272  10FE                     __end_of_ADC_Media_10bits:	
  5273                           
  5274                           	psect	text9
  5275  132F                     __ptext9:	
  5276 ;; *************** function ___xxtofl *****************
  5277 ;; Defined at:
  5278 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  sign            1    wreg     unsigned char 
  5281 ;;  val             4   19[BANK0 ] long 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  sign            1   27[BANK0 ] unsigned char 
  5284 ;;  arg             4   29[BANK0 ] unsigned long 
  5285 ;;  exp             1   28[BANK0 ] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  4   19[BANK0 ] unsigned char 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 300/0
  5292 ;;		On exit  : 300/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         0       4       0       0       0
  5296 ;;      Locals:         0       6       0       0       0
  5297 ;;      Temps:          0       4       0       0       0
  5298 ;;      Totals:         0      14       0       0       0
  5299 ;;Total ram usage:       14 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_MediaPlacaVaccum
  5306 ;;		_ADC_Media_10bits
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function ___xxtofl
  5312  132F                     ___xxtofl:	
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5316                           ;___xxtofl@sign stored from wreg
  5317  132F  00BB               	movwf	___xxtofl@sign
  5318  1330  083B               	movf	___xxtofl@sign,w
  5319  1331  1D03               	btfss	3,2
  5320  1332  1FB6               	btfss	___xxtofl@val+3,7
  5321  1333  2B44               	goto	l6206
  5322  1334  0933               	comf	___xxtofl@val,w
  5323  1335  00BD               	movwf	___xxtofl@arg
  5324  1336  0934               	comf	___xxtofl@val+1,w
  5325  1337  00BE               	movwf	___xxtofl@arg+1
  5326  1338  0935               	comf	___xxtofl@val+2,w
  5327  1339  00BF               	movwf	___xxtofl@arg+2
  5328  133A  0936               	comf	___xxtofl@val+3,w
  5329  133B  00C0               	movwf	___xxtofl@arg+3
  5330  133C  0ABD               	incf	___xxtofl@arg,f
  5331  133D  1903               	skipnz
  5332  133E  0ABE               	incf	___xxtofl@arg+1,f
  5333  133F  1903               	skipnz
  5334  1340  0ABF               	incf	___xxtofl@arg+2,f
  5335  1341  1903               	skipnz
  5336  1342  0AC0               	incf	___xxtofl@arg+3,f
  5337  1343  2B4C               	goto	l1409
  5338  1344                     l6206:	
  5339  1344  0836               	movf	___xxtofl@val+3,w
  5340  1345  00C0               	movwf	___xxtofl@arg+3
  5341  1346  0835               	movf	___xxtofl@val+2,w
  5342  1347  00BF               	movwf	___xxtofl@arg+2
  5343  1348  0834               	movf	___xxtofl@val+1,w
  5344  1349  00BE               	movwf	___xxtofl@arg+1
  5345  134A  0833               	movf	___xxtofl@val,w
  5346  134B  00BD               	movwf	___xxtofl@arg
  5347  134C                     l1409:	
  5348  134C  0836               	movf	___xxtofl@val+3,w
  5349  134D  0435               	iorwf	___xxtofl@val+2,w
  5350  134E  0434               	iorwf	___xxtofl@val+1,w
  5351  134F  0433               	iorwf	___xxtofl@val,w
  5352  1350  1D03               	skipz
  5353  1351  2B5B               	goto	l6212
  5354  1352  3000               	movlw	0
  5355  1353  00B6               	movwf	?___xxtofl+3
  5356  1354  3000               	movlw	0
  5357  1355  00B5               	movwf	?___xxtofl+2
  5358  1356  3000               	movlw	0
  5359  1357  00B4               	movwf	?___xxtofl+1
  5360  1358  3000               	movlw	0
  5361  1359  00B3               	movwf	?___xxtofl
  5362  135A  0008               	return
  5363  135B                     l6212:	
  5364  135B  3096               	movlw	150
  5365  135C  00B7               	movwf	??___xxtofl
  5366  135D  0837               	movf	??___xxtofl,w
  5367  135E  00BC               	movwf	___xxtofl@exp
  5368  135F                     l6216:	
  5369  135F  30FE               	movlw	254
  5370  1360  0540               	andwf	___xxtofl@arg+3,w
  5371  1361  1903               	btfsc	3,2
  5372  1362  2B8C               	goto	l1415
  5373  1363  3001               	movlw	1
  5374  1364  00B7               	movwf	??___xxtofl
  5375  1365  0837               	movf	??___xxtofl,w
  5376  1366  07BC               	addwf	___xxtofl@exp,f
  5377  1367  3001               	movlw	1
  5378  1368                     u6645:	
  5379  1368  1003               	clrc
  5380  1369  0CC0               	rrf	___xxtofl@arg+3,f
  5381  136A  0CBF               	rrf	___xxtofl@arg+2,f
  5382  136B  0CBE               	rrf	___xxtofl@arg+1,f
  5383  136C  0CBD               	rrf	___xxtofl@arg,f
  5384  136D  3EFF               	addlw	-1
  5385  136E  1D03               	skipz
  5386  136F  2B68               	goto	u6645
  5387  1370  2B5F               	goto	l6216
  5388  1371                     l6218:	
  5389  1371  3001               	movlw	1
  5390  1372  00B7               	movwf	??___xxtofl
  5391  1373  0837               	movf	??___xxtofl,w
  5392  1374  07BC               	addwf	___xxtofl@exp,f
  5393  1375  3001               	movlw	1
  5394  1376  07BD               	addwf	___xxtofl@arg,f
  5395  1377  3000               	movlw	0
  5396  1378  1803               	skipnc
  5397  1379  3001               	movlw	1
  5398  137A  07BE               	addwf	___xxtofl@arg+1,f
  5399  137B  3000               	movlw	0
  5400  137C  1803               	skipnc
  5401  137D  3001               	movlw	1
  5402  137E  07BF               	addwf	___xxtofl@arg+2,f
  5403  137F  3000               	movlw	0
  5404  1380  1803               	skipnc
  5405  1381  3001               	movlw	1
  5406  1382  07C0               	addwf	___xxtofl@arg+3,f
  5407  1383  3001               	movlw	1
  5408  1384                     u6665:	
  5409  1384  1003               	clrc
  5410  1385  0CC0               	rrf	___xxtofl@arg+3,f
  5411  1386  0CBF               	rrf	___xxtofl@arg+2,f
  5412  1387  0CBE               	rrf	___xxtofl@arg+1,f
  5413  1388  0CBD               	rrf	___xxtofl@arg,f
  5414  1389  3EFF               	addlw	-1
  5415  138A  1D03               	skipz
  5416  138B  2B84               	goto	u6665
  5417  138C                     l1415:	
  5418  138C  30FF               	movlw	255
  5419  138D  0540               	andwf	___xxtofl@arg+3,w
  5420  138E  1903               	btfsc	3,2
  5421  138F  2BA0               	goto	l6226
  5422  1390  2B71               	goto	l6218
  5423  1391                     l6228:	
  5424  1391  3002               	movlw	2
  5425  1392  023C               	subwf	___xxtofl@exp,w
  5426  1393  1C03               	btfss	3,0
  5427  1394  2BA2               	goto	l1422
  5428  1395  3001               	movlw	1
  5429  1396  02BC               	subwf	___xxtofl@exp,f
  5430  1397  3001               	movlw	1
  5431  1398  00B7               	movwf	??___xxtofl
  5432  1399                     u6685:	
  5433  1399  1003               	clrc
  5434  139A  0DBD               	rlf	___xxtofl@arg,f
  5435  139B  0DBE               	rlf	___xxtofl@arg+1,f
  5436  139C  0DBF               	rlf	___xxtofl@arg+2,f
  5437  139D  0DC0               	rlf	___xxtofl@arg+3,f
  5438  139E  0BB7               	decfsz	??___xxtofl,f
  5439  139F  2B99               	goto	u6685
  5440  13A0                     l6226:	
  5441  13A0  1FBF               	btfss	___xxtofl@arg+2,7
  5442  13A1  2B91               	goto	l6228
  5443  13A2                     l1422:	
  5444  13A2  183C               	btfsc	___xxtofl@exp,0
  5445  13A3  2BAC               	goto	l1423
  5446  13A4  30FF               	movlw	255
  5447  13A5  05BD               	andwf	___xxtofl@arg,f
  5448  13A6  30FF               	movlw	255
  5449  13A7  05BE               	andwf	___xxtofl@arg+1,f
  5450  13A8  307F               	movlw	127
  5451  13A9  05BF               	andwf	___xxtofl@arg+2,f
  5452  13AA  30FF               	movlw	255
  5453  13AB  05C0               	andwf	___xxtofl@arg+3,f
  5454  13AC                     l1423:	
  5455  13AC  1003               	clrc
  5456  13AD  0CBC               	rrf	___xxtofl@exp,f
  5457  13AE  083C               	movf	___xxtofl@exp,w
  5458  13AF  00B7               	movwf	??___xxtofl
  5459  13B0  01B8               	clrf	??___xxtofl+1
  5460  13B1  01B9               	clrf	??___xxtofl+2
  5461  13B2  01BA               	clrf	??___xxtofl+3
  5462  13B3  3018               	movlw	24
  5463  13B4                     u6725:	
  5464  13B4  1003               	clrc
  5465  13B5  0DB7               	rlf	??___xxtofl,f
  5466  13B6  0DB8               	rlf	??___xxtofl+1,f
  5467  13B7  0DB9               	rlf	??___xxtofl+2,f
  5468  13B8  0DBA               	rlf	??___xxtofl+3,f
  5469  13B9  3EFF               	addlw	-1
  5470  13BA  1D03               	skipz
  5471  13BB  2BB4               	goto	u6725
  5472  13BC  0837               	movf	??___xxtofl,w
  5473  13BD  04BD               	iorwf	___xxtofl@arg,f
  5474  13BE  0838               	movf	??___xxtofl+1,w
  5475  13BF  04BE               	iorwf	___xxtofl@arg+1,f
  5476  13C0  0839               	movf	??___xxtofl+2,w
  5477  13C1  04BF               	iorwf	___xxtofl@arg+2,f
  5478  13C2  083A               	movf	??___xxtofl+3,w
  5479  13C3  04C0               	iorwf	___xxtofl@arg+3,f
  5480  13C4  083B               	movf	___xxtofl@sign,w
  5481  13C5  1D03               	btfss	3,2
  5482  13C6  1FB6               	btfss	___xxtofl@val+3,7
  5483  13C7  2BC9               	goto	l6240
  5484  13C8  17C0               	bsf	___xxtofl@arg+3,7
  5485  13C9                     l6240:	
  5486  13C9  0840               	movf	___xxtofl@arg+3,w
  5487  13CA  00B6               	movwf	?___xxtofl+3
  5488  13CB  083F               	movf	___xxtofl@arg+2,w
  5489  13CC  00B5               	movwf	?___xxtofl+2
  5490  13CD  083E               	movf	___xxtofl@arg+1,w
  5491  13CE  00B4               	movwf	?___xxtofl+1
  5492  13CF  083D               	movf	___xxtofl@arg,w
  5493  13D0  00B3               	movwf	?___xxtofl
  5494  13D1  0008               	return
  5495  13D2                     __end_of___xxtofl:	
  5496                           
  5497                           	psect	text10
  5498  1FC2                     __ptext10:	
  5499 ;; *************** function _ADC_Max_10Bits *****************
  5500 ;; Defined at:
  5501 ;;		line 34 in file "adc.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  canal           1    wreg     unsigned char 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  canal           1   13[BANK0 ] unsigned char 
  5506 ;;  value           2   16[BANK0 ] unsigned int 
  5507 ;;  Temp            2   14[BANK0 ] unsigned int 
  5508 ;;  i               1   18[BANK0 ] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  2   10[BANK0 ] unsigned int 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 300/100
  5515 ;;		On exit  : 300/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5518 ;;      Params:         0       2       0       0       0
  5519 ;;      Locals:         0       6       0       0       0
  5520 ;;      Temps:          0       1       0       0       0
  5521 ;;      Totals:         0       9       0       0       0
  5522 ;;Total ram usage:        9 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    2
  5525 ;; This function calls:
  5526 ;;		_captura
  5527 ;;		_my_delay_ms
  5528 ;; This function is called by:
  5529 ;;		_MediaPlacaVaccum
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _ADC_Max_10Bits
  5535  1FC2                     _ADC_Max_10Bits:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5539                           ;ADC_Max_10Bits@canal stored from wreg
  5540  1FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5541  1FC3  00AD               	movwf	ADC_Max_10Bits@canal
  5542                           
  5543                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5544  1FC4  082D               	movf	ADC_Max_10Bits@canal,w
  5545  1FC5  00AC               	movwf	??_ADC_Max_10Bits
  5546  1FC6  0DAC               	rlf	??_ADC_Max_10Bits,f
  5547  1FC7  0DAC               	rlf	??_ADC_Max_10Bits,f
  5548  1FC8  081F               	movf	31,w	;volatile
  5549  1FC9  062C               	xorwf	??_ADC_Max_10Bits,w
  5550  1FCA  39C3               	andlw	-61
  5551  1FCB  062C               	xorwf	??_ADC_Max_10Bits,w
  5552  1FCC  009F               	movwf	31	;volatile
  5553                           
  5554                           ;adc.c: 39:       my_delay_ms(1);
  5555  1FCD  3000               	movlw	0
  5556  1FCE  00A3               	movwf	my_delay_ms@time+3
  5557  1FCF  3000               	movlw	0
  5558  1FD0  00A2               	movwf	my_delay_ms@time+2
  5559  1FD1  3000               	movlw	0
  5560  1FD2  00A1               	movwf	my_delay_ms@time+1
  5561  1FD3  3001               	movlw	1
  5562  1FD4  00A0               	movwf	my_delay_ms@time
  5563  1FD5  160A  158A  262A  160A  158A  	fcall	_my_delay_ms
  5564                           
  5565                           ;adc.c: 41:       value=0;
  5566  1FDA  01B0               	clrf	ADC_Max_10Bits@value
  5567  1FDB  01B1               	clrf	ADC_Max_10Bits@value+1
  5568                           
  5569                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5570  1FDC  01B2               	clrf	ADC_Max_10Bits@i
  5571  1FDD  0AB2               	incf	ADC_Max_10Bits@i,f
  5572  1FDE                     l6610:	
  5573                           
  5574                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5575  1FDE  160A  158A  22E5  160A  158A  	fcall	_captura
  5576  1FE3  0821               	movf	?_captura+1,w
  5577  1FE4  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5578  1FE5  0820               	movf	?_captura,w
  5579  1FE6  00AE               	movwf	ADC_Max_10Bits@Temp
  5580                           
  5581                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5582  1FE7  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5583  1FE8  0231               	subwf	ADC_Max_10Bits@value+1,w
  5584  1FE9  1D03               	skipz
  5585  1FEA  2FED               	goto	u6995
  5586  1FEB  082E               	movf	ADC_Max_10Bits@Temp,w
  5587  1FEC  0230               	subwf	ADC_Max_10Bits@value,w
  5588  1FED                     u6995:	
  5589  1FED  1803               	skipnc
  5590  1FEE  2FF3               	goto	l6616
  5591  1FEF  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5592  1FF0  00B1               	movwf	ADC_Max_10Bits@value+1
  5593  1FF1  082E               	movf	ADC_Max_10Bits@Temp,w
  5594  1FF2  00B0               	movwf	ADC_Max_10Bits@value
  5595  1FF3                     l6616:	
  5596                           
  5597                           ;adc.c: 46:           }
  5598  1FF3  3001               	movlw	1
  5599  1FF4  00AC               	movwf	??_ADC_Max_10Bits
  5600  1FF5  082C               	movf	??_ADC_Max_10Bits,w
  5601  1FF6  07B2               	addwf	ADC_Max_10Bits@i,f
  5602  1FF7  3033               	movlw	51
  5603  1FF8  0232               	subwf	ADC_Max_10Bits@i,w
  5604  1FF9  1C03               	skipc
  5605  1FFA  2FDE               	goto	l6610
  5606                           
  5607                           ;adc.c: 47:       return value;
  5608  1FFB  0831               	movf	ADC_Max_10Bits@value+1,w
  5609  1FFC  00AB               	movwf	?_ADC_Max_10Bits+1
  5610  1FFD  0830               	movf	ADC_Max_10Bits@value,w
  5611  1FFE  00AA               	movwf	?_ADC_Max_10Bits
  5612  1FFF  0008               	return
  5613  2000                     __end_of_ADC_Max_10Bits:	
  5614                           
  5615                           	psect	text11
  5616  1E2A                     __ptext11:	
  5617 ;; *************** function _my_delay_ms *****************
  5618 ;; Defined at:
  5619 ;;		line 5 in file "my_delay.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  time            4    0[BANK0 ] long 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  i               4    6[BANK0 ] long 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, btemp+1
  5628 ;; Tracked objects:
  5629 ;;		On entry : 300/0
  5630 ;;		On exit  : 300/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         0       4       0       0       0
  5634 ;;      Locals:         0       4       0       0       0
  5635 ;;      Temps:          0       2       0       0       0
  5636 ;;      Totals:         0      10       0       0       0
  5637 ;;Total ram usage:       10 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_MediaPlacaVaccum
  5644 ;;		_ADC_Media_10bits
  5645 ;;		_ADC_Max_10Bits
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function _my_delay_ms
  5651  1E2A                     _my_delay_ms:	
  5652                           
  5653                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5654                           
  5655                           ;incstack = 0
  5656                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5657  1E2A  3000               	movlw	0
  5658  1E2B  00A9               	movwf	my_delay_ms@i+3
  5659  1E2C  3000               	movlw	0
  5660  1E2D  00A8               	movwf	my_delay_ms@i+2
  5661  1E2E  3000               	movlw	0
  5662  1E2F  00A7               	movwf	my_delay_ms@i+1
  5663  1E30  3000               	movlw	0
  5664  1E31  00A6               	movwf	my_delay_ms@i
  5665  1E32                     l5764:	
  5666  1E32  0829               	movf	my_delay_ms@i+3,w
  5667  1E33  3A80               	xorlw	128
  5668  1E34  00FF               	movwf	127
  5669  1E35  0823               	movf	my_delay_ms@time+3,w
  5670  1E36  3A80               	xorlw	128
  5671  1E37  027F               	subwf	127,w
  5672  1E38  1D03               	skipz
  5673  1E39  2E44               	goto	u5583
  5674  1E3A  0822               	movf	my_delay_ms@time+2,w
  5675  1E3B  0228               	subwf	my_delay_ms@i+2,w
  5676  1E3C  1D03               	skipz
  5677  1E3D  2E44               	goto	u5583
  5678  1E3E  0821               	movf	my_delay_ms@time+1,w
  5679  1E3F  0227               	subwf	my_delay_ms@i+1,w
  5680  1E40  1D03               	skipz
  5681  1E41  2E44               	goto	u5583
  5682  1E42  0820               	movf	my_delay_ms@time,w
  5683  1E43  0226               	subwf	my_delay_ms@i,w
  5684  1E44                     u5583:	
  5685  1E44  1803               	btfsc	3,0
  5686  1E45  0008               	return
  5687                           
  5688                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5689  1E46  3003               	movlw	3
  5690  1E47  1283               	bcf	3,5	;RP0=0, select bank0
  5691  1E48  1303               	bcf	3,6	;RP1=0, select bank0
  5692  1E49  00A5               	movwf	??_my_delay_ms+1
  5693  1E4A  3097               	movlw	151
  5694  1E4B  00A4               	movwf	??_my_delay_ms
  5695  1E4C                     u7717:	
  5696  1E4C  0BA4               	decfsz	??_my_delay_ms,f
  5697  1E4D  2E4C               	goto	u7717
  5698  1E4E  0BA5               	decfsz	??_my_delay_ms+1,f
  5699  1E4F  2E4C               	goto	u7717
  5700                           
  5701                           ;my_delay.c: 10:             }
  5702  1E50  3001               	movlw	1
  5703  1E51  1283               	bcf	3,5	;RP0=0, select bank0
  5704  1E52  1303               	bcf	3,6	;RP1=0, select bank0
  5705  1E53  07A6               	addwf	my_delay_ms@i,f
  5706  1E54  3000               	movlw	0
  5707  1E55  1803               	skipnc
  5708  1E56  3001               	movlw	1
  5709  1E57  07A7               	addwf	my_delay_ms@i+1,f
  5710  1E58  3000               	movlw	0
  5711  1E59  1803               	skipnc
  5712  1E5A  3001               	movlw	1
  5713  1E5B  07A8               	addwf	my_delay_ms@i+2,f
  5714  1E5C  3000               	movlw	0
  5715  1E5D  1803               	skipnc
  5716  1E5E  3001               	movlw	1
  5717  1E5F  07A9               	addwf	my_delay_ms@i+3,f
  5718  1E60  2E32               	goto	l5764
  5719  1E61                     __end_of_my_delay_ms:	
  5720                           
  5721                           	psect	text12
  5722  1AE5                     __ptext12:	
  5723 ;; *************** function _captura *****************
  5724 ;; Defined at:
  5725 ;;		line 123 in file "adc.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  2    0[BANK0 ] unsigned int 
  5732 ;; Registers used:
  5733 ;;		wreg
  5734 ;; Tracked objects:
  5735 ;;		On entry : 300/0
  5736 ;;		On exit  : 300/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5739 ;;      Params:         0       2       0       0       0
  5740 ;;      Locals:         0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0
  5742 ;;      Totals:         0       2       0       0       0
  5743 ;;Total ram usage:        2 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    1
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_ADC_Media_10bits
  5750 ;;		_ADC_Max_10Bits
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _captura
  5756  1AE5                     _captura:	
  5757                           
  5758                           ;adc.c: 124:     ADCON0bits.GO=1;
  5759                           
  5760                           ;incstack = 0
  5761                           ; Regs used in _captura: [wreg]
  5762  1AE5  149F               	bsf	31,1	;volatile
  5763  1AE6                     l480:	
  5764                           ;adc.c: 128:           }
  5765                           
  5766                           
  5767                           ;adc.c: 125:     while(ADCON0bits.GO)
  5768  1AE6  189F               	btfsc	31,1	;volatile
  5769  1AE7  2AE6               	goto	l480
  5770                           
  5771                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5772  1AE8  081E               	movf	30,w	;volatile
  5773  1AE9  00A1               	movwf	?_captura+1
  5774  1AEA  1683               	bsf	3,5	;RP0=1, select bank1
  5775  1AEB  081E               	movf	30,w	;volatile
  5776  1AEC  1283               	bcf	3,5	;RP0=0, select bank0
  5777  1AED  00A0               	movwf	?_captura
  5778  1AEE  0008               	return
  5779  1AEF                     __end_of_captura:	
  5780                           
  5781                           	psect	text13
  5782  1D5F                     __ptext13:	
  5783 ;; *************** function _I2C_Master_Init *****************
  5784 ;; Defined at:
  5785 ;;		line 7 in file "I2C.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  c               4   14[BANK0 ] const unsigned long 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 300/0
  5796 ;;		On exit  : 300/100
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         0       4       0       0       0
  5800 ;;      Locals:         0       0       0       0       0
  5801 ;;      Temps:          0       4       0       0       0
  5802 ;;      Totals:         0       8       0       0       0
  5803 ;;Total ram usage:        8 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    2
  5806 ;; This function calls:
  5807 ;;		___lldiv
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _I2C_Master_Init
  5815  1D5F                     _I2C_Master_Init:	
  5816                           
  5817                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5821  1D5F  3028               	movlw	40
  5822  1D60  0094               	movwf	20	;volatile
  5823                           
  5824                           ;I2C.c: 11:   SSPCON2 = 0;
  5825  1D61  1683               	bsf	3,5	;RP0=1, select bank1
  5826  1D62  0191               	clrf	17	;volatile
  5827                           
  5828                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5829  1D63  1283               	bcf	3,5	;RP0=0, select bank0
  5830  1D64  082E               	movf	I2C_Master_Init@c,w
  5831  1D65  00B2               	movwf	??_I2C_Master_Init
  5832  1D66  082F               	movf	I2C_Master_Init@c+1,w
  5833  1D67  00B3               	movwf	??_I2C_Master_Init+1
  5834  1D68  0830               	movf	I2C_Master_Init@c+2,w
  5835  1D69  00B4               	movwf	??_I2C_Master_Init+2
  5836  1D6A  0831               	movf	I2C_Master_Init@c+3,w
  5837  1D6B  00B5               	movwf	??_I2C_Master_Init+3
  5838  1D6C  3002               	movlw	2
  5839  1D6D                     u7445:	
  5840  1D6D  1003               	clrc
  5841  1D6E  0DB2               	rlf	??_I2C_Master_Init,f
  5842  1D6F  0DB3               	rlf	??_I2C_Master_Init+1,f
  5843  1D70  0DB4               	rlf	??_I2C_Master_Init+2,f
  5844  1D71  0DB5               	rlf	??_I2C_Master_Init+3,f
  5845  1D72  3EFF               	addlw	-1
  5846  1D73  1D03               	skipz
  5847  1D74  2D6D               	goto	u7445
  5848  1D75  0835               	movf	??_I2C_Master_Init+3,w
  5849  1D76  00A3               	movwf	___lldiv@divisor+3
  5850  1D77  0834               	movf	??_I2C_Master_Init+2,w
  5851  1D78  00A2               	movwf	___lldiv@divisor+2
  5852  1D79  0833               	movf	??_I2C_Master_Init+1,w
  5853  1D7A  00A1               	movwf	___lldiv@divisor+1
  5854  1D7B  0832               	movf	??_I2C_Master_Init,w
  5855  1D7C  00A0               	movwf	___lldiv@divisor
  5856  1D7D  3000               	movlw	0
  5857  1D7E  00A7               	movwf	___lldiv@dividend+3
  5858  1D7F  307A               	movlw	122
  5859  1D80  00A6               	movwf	___lldiv@dividend+2
  5860  1D81  3012               	movlw	18
  5861  1D82  00A5               	movwf	___lldiv@dividend+1
  5862  1D83  3000               	movlw	0
  5863  1D84  00A4               	movwf	___lldiv@dividend
  5864  1D85  160A  118A  215C   	fcall	___lldiv
  5865  1D88  0820               	movf	?___lldiv,w
  5866  1D89  3EFF               	addlw	255
  5867  1D8A  1683               	bsf	3,5	;RP0=1, select bank1
  5868  1D8B  0093               	movwf	19	;volatile
  5869                           
  5870                           ;I2C.c: 13:   SSPSTAT = 0;
  5871  1D8C  0194               	clrf	20	;volatile
  5872                           
  5873                           ;I2C.c: 14:   TRISC3 = 1;
  5874  1D8D  1587               	bsf	7,3	;volatile
  5875                           
  5876                           ;I2C.c: 15:   TRISC4 = 1;
  5877  1D8E  1607               	bsf	7,4	;volatile
  5878  1D8F  0008               	return
  5879  1D90                     __end_of_I2C_Master_Init:	
  5880                           
  5881                           	psect	text14
  5882  115C                     __ptext14:	
  5883 ;; *************** function ___lldiv *****************
  5884 ;; Defined at:
  5885 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  divisor         4    0[BANK0 ] unsigned long 
  5888 ;;  dividend        4    4[BANK0 ] unsigned long 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  quotient        4    9[BANK0 ] unsigned long 
  5891 ;;  counter         1   13[BANK0 ] unsigned char 
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  4    0[BANK0 ] unsigned long 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0
  5896 ;; Tracked objects:
  5897 ;;		On entry : 300/0
  5898 ;;		On exit  : 300/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5901 ;;      Params:         0       8       0       0       0
  5902 ;;      Locals:         0       5       0       0       0
  5903 ;;      Temps:          0       1       0       0       0
  5904 ;;      Totals:         0      14       0       0       0
  5905 ;;Total ram usage:       14 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    1
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_I2C_Master_Init
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function ___lldiv
  5917  115C                     ___lldiv:	
  5918                           
  5919                           ;incstack = 0
  5920                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5921  115C  3000               	movlw	0
  5922  115D  00AC               	movwf	___lldiv@quotient+3
  5923  115E  3000               	movlw	0
  5924  115F  00AB               	movwf	___lldiv@quotient+2
  5925  1160  3000               	movlw	0
  5926  1161  00AA               	movwf	___lldiv@quotient+1
  5927  1162  3000               	movlw	0
  5928  1163  00A9               	movwf	___lldiv@quotient
  5929  1164  0823               	movf	___lldiv@divisor+3,w
  5930  1165  0422               	iorwf	___lldiv@divisor+2,w
  5931  1166  0421               	iorwf	___lldiv@divisor+1,w
  5932  1167  0420               	iorwf	___lldiv@divisor,w
  5933  1168  1903               	skipnz
  5934  1169  29B1               	goto	l6644
  5935  116A  01AD               	clrf	___lldiv@counter
  5936  116B  0AAD               	incf	___lldiv@counter,f
  5937  116C                     l6630:	
  5938  116C  1BA3               	btfsc	___lldiv@divisor+3,7
  5939  116D  297C               	goto	l6632
  5940  116E  3001               	movlw	1
  5941  116F  00A8               	movwf	??___lldiv
  5942  1170                     u7025:	
  5943  1170  1003               	clrc
  5944  1171  0DA0               	rlf	___lldiv@divisor,f
  5945  1172  0DA1               	rlf	___lldiv@divisor+1,f
  5946  1173  0DA2               	rlf	___lldiv@divisor+2,f
  5947  1174  0DA3               	rlf	___lldiv@divisor+3,f
  5948  1175  0BA8               	decfsz	??___lldiv,f
  5949  1176  2970               	goto	u7025
  5950  1177  3001               	movlw	1
  5951  1178  00A8               	movwf	??___lldiv
  5952  1179  0828               	movf	??___lldiv,w
  5953  117A  07AD               	addwf	___lldiv@counter,f
  5954  117B  296C               	goto	l6630
  5955  117C                     l6632:	
  5956  117C  3001               	movlw	1
  5957  117D  00A8               	movwf	??___lldiv
  5958  117E                     u7045:	
  5959  117E  1003               	clrc
  5960  117F  0DA9               	rlf	___lldiv@quotient,f
  5961  1180  0DAA               	rlf	___lldiv@quotient+1,f
  5962  1181  0DAB               	rlf	___lldiv@quotient+2,f
  5963  1182  0DAC               	rlf	___lldiv@quotient+3,f
  5964  1183  0BA8               	decfsz	??___lldiv,f
  5965  1184  297E               	goto	u7045
  5966  1185  0823               	movf	___lldiv@divisor+3,w
  5967  1186  0227               	subwf	___lldiv@dividend+3,w
  5968  1187  1D03               	skipz
  5969  1188  2993               	goto	u7055
  5970  1189  0822               	movf	___lldiv@divisor+2,w
  5971  118A  0226               	subwf	___lldiv@dividend+2,w
  5972  118B  1D03               	skipz
  5973  118C  2993               	goto	u7055
  5974  118D  0821               	movf	___lldiv@divisor+1,w
  5975  118E  0225               	subwf	___lldiv@dividend+1,w
  5976  118F  1D03               	skipz
  5977  1190  2993               	goto	u7055
  5978  1191  0820               	movf	___lldiv@divisor,w
  5979  1192  0224               	subwf	___lldiv@dividend,w
  5980  1193                     u7055:	
  5981  1193  1C03               	skipc
  5982  1194  29A4               	goto	l6640
  5983  1195  0820               	movf	___lldiv@divisor,w
  5984  1196  02A4               	subwf	___lldiv@dividend,f
  5985  1197  0821               	movf	___lldiv@divisor+1,w
  5986  1198  1C03               	skipc
  5987  1199  0F21               	incfsz	___lldiv@divisor+1,w
  5988  119A  02A5               	subwf	___lldiv@dividend+1,f
  5989  119B  0822               	movf	___lldiv@divisor+2,w
  5990  119C  1C03               	skipc
  5991  119D  0F22               	incfsz	___lldiv@divisor+2,w
  5992  119E  02A6               	subwf	___lldiv@dividend+2,f
  5993  119F  0823               	movf	___lldiv@divisor+3,w
  5994  11A0  1C03               	skipc
  5995  11A1  0F23               	incfsz	___lldiv@divisor+3,w
  5996  11A2  02A7               	subwf	___lldiv@dividend+3,f
  5997  11A3  1429               	bsf	___lldiv@quotient,0
  5998  11A4                     l6640:	
  5999  11A4  3001               	movlw	1
  6000  11A5                     u7065:	
  6001  11A5  1003               	clrc
  6002  11A6  0CA3               	rrf	___lldiv@divisor+3,f
  6003  11A7  0CA2               	rrf	___lldiv@divisor+2,f
  6004  11A8  0CA1               	rrf	___lldiv@divisor+1,f
  6005  11A9  0CA0               	rrf	___lldiv@divisor,f
  6006  11AA  3EFF               	addlw	-1
  6007  11AB  1D03               	skipz
  6008  11AC  29A5               	goto	u7065
  6009  11AD  3001               	movlw	1
  6010  11AE  02AD               	subwf	___lldiv@counter,f
  6011  11AF  1D03               	btfss	3,2
  6012  11B0  297C               	goto	l6632
  6013  11B1                     l6644:	
  6014  11B1  082C               	movf	___lldiv@quotient+3,w
  6015  11B2  00A3               	movwf	?___lldiv+3
  6016  11B3  082B               	movf	___lldiv@quotient+2,w
  6017  11B4  00A2               	movwf	?___lldiv+2
  6018  11B5  082A               	movf	___lldiv@quotient+1,w
  6019  11B6  00A1               	movwf	?___lldiv+1
  6020  11B7  0829               	movf	___lldiv@quotient,w
  6021  11B8  00A0               	movwf	?___lldiv
  6022  11B9  0008               	return
  6023  11BA                     __end_of___lldiv:	
  6024                           
  6025                           	psect	text15
  6026  002F                     __ptext15:	
  6027 ;; *************** function _Decodify_Command *****************
  6028 ;; Defined at:
  6029 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  sizedata        1   10[BANK1 ] unsigned char 
  6034 ;;  add             1    2[BANK1 ] unsigned char 
  6035 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  6036 ;;  OutPut          4    5[BANK1 ] float 
  6037 ;;  tempint         2    3[BANK1 ] int 
  6038 ;;  dados           2    0[BANK1 ] int 
  6039 ;;  tempchar        1    9[BANK1 ] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 300/100
  6046 ;;		On exit  : 200/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6049 ;;      Params:         0       0       0       0       0
  6050 ;;      Locals:         0       0      15       0       0
  6051 ;;      Temps:          0       4       0       0       0
  6052 ;;      Totals:         0       4      15       0       0
  6053 ;;Total ram usage:       19 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    6
  6056 ;; This function calls:
  6057 ;;		_EEPROM_24C1025_Fill_All
  6058 ;;		_EEPROM_24C1025_Read_Buffer
  6059 ;;		_EEPROM_24C1025_Read_Byte
  6060 ;;		_EEPROM_24C1025_Read_Int
  6061 ;;		_EEPROM_24C1025_Read_Str
  6062 ;;		_EEPROM_24C1025_Write_Buffer
  6063 ;;		_EEPROM_24C1025_Write_Byte
  6064 ;;		_EEPROM_24C1025_Write_Int
  6065 ;;		_EEPROM_24C1025_Write_Str
  6066 ;;		_EEPROM_Read_Byte
  6067 ;;		_EEPROM_Read_Integer
  6068 ;;		_EEPROM_Read_String
  6069 ;;		_EEPROM_Write_Byte
  6070 ;;		_EEPROM_Write_Integer
  6071 ;;		_EEPROM_Write_String
  6072 ;;		_PROCULUS_Buzzer
  6073 ;;		_PROCULUS_Show_Screen
  6074 ;;		_PROCULUS_VP_Write_String
  6075 ;;		_Save_Log
  6076 ;;		_Send_Reply_OK
  6077 ;;		_Send_To_MB
  6078 ;;		_USART_put_buffer
  6079 ;;		_USART_put_int
  6080 ;;		_USART_put_string
  6081 ;;		_USART_putc
  6082 ;;		_USART_to_Protocol
  6083 ;;		___flmul
  6084 ;;		___fltol
  6085 ;;		_strlen
  6086 ;; This function is called by:
  6087 ;;		_main
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           
  6092                           ;psect for function _Decodify_Command
  6093  002F                     _Decodify_Command:	
  6094                           
  6095                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6096                           
  6097                           ;incstack = 0
  6098                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6099  002F  30CC               	movlw	(low (_usart_protocol| 0))& (0+255)
  6100  0030  160A  118A  20FE  120A  118A  	fcall	_USART_to_Protocol
  6101                           
  6102                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6103  0035  1683               	bsf	3,5	;RP0=1, select bank1
  6104  0036  1303               	bcf	3,6	;RP1=0, select bank1
  6105  0037  0853               	movf	(_usart_protocol^(0+128)+7),w
  6106  0038  1283               	bcf	3,5	;RP0=0, select bank0
  6107  0039  00E0               	movwf	??_Decodify_Command
  6108  003A  0860               	movf	??_Decodify_Command,w
  6109  003B  1683               	bsf	3,5	;RP0=1, select bank1
  6110  003C  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6111                           
  6112                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6113  003D  0854               	movf	(_usart_protocol^(0+128)+8),w
  6114  003E  1283               	bcf	3,5	;RP0=0, select bank0
  6115  003F  00E0               	movwf	??_Decodify_Command
  6116  0040  0860               	movf	??_Decodify_Command,w
  6117  0041  1683               	bsf	3,5	;RP0=1, select bank1
  6118  0042  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6119                           
  6120                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6121  0043  0855               	movf	(_usart_protocol^(0+128)+9),w
  6122  0044  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0045  00E0               	movwf	??_Decodify_Command
  6124  0046  0860               	movf	??_Decodify_Command,w
  6125  0047  1683               	bsf	3,5	;RP0=1, select bank1
  6126  0048  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6127                           
  6128                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6129  0049  0856               	movf	(_usart_protocol^(0+128)+10),w
  6130  004A  1283               	bcf	3,5	;RP0=0, select bank0
  6131  004B  00E0               	movwf	??_Decodify_Command
  6132  004C  0860               	movf	??_Decodify_Command,w
  6133  004D  1683               	bsf	3,5	;RP0=1, select bank1
  6134  004E  00E7               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6135                           
  6136                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6137  004F  2B38               	goto	l7130
  6138  0050                     l6968:	
  6139                           
  6140                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6141  0050  300B               	movlw	11
  6142  0051  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6143                           
  6144                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.12");
  6145  0056  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6146  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0058  00A1               	movwf	USART_put_string@vetor
  6148  0059  3080               	movlw	128
  6149  005A  00A2               	movwf	USART_put_string@vetor+1
  6150  005B  160A  158A  25C2   	fcall	_USART_put_string
  6151                           
  6152                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6153  005E  0008               	return
  6154  005F                     l6972:	
  6155                           
  6156                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6157  005F  1683               	bsf	3,5	;RP0=1, select bank1
  6158  0060  0852               	movf	(_usart_protocol^(0+128)+6),w
  6159  0061  1D03               	btfss	3,2
  6160  0062  286B               	goto	l6976
  6161                           
  6162                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6163  0063  0823               	movf	(_Tensao1+3)^(0+128),w
  6164  0064  00E4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6165  0065  0822               	movf	(_Tensao1+2)^(0+128),w
  6166  0066  00E3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6167  0067  0821               	movf	(_Tensao1+1)^(0+128),w
  6168  0068  00E2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6169  0069  0820               	movf	_Tensao1^(0+128),w
  6170  006A  2872               	goto	L6
  6171  006B                     l6976:	
  6172                           
  6173                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6174  006B  0827               	movf	(_Vaccum0+3)^(0+128),w
  6175  006C  00E4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6176  006D  0826               	movf	(_Vaccum0+2)^(0+128),w
  6177  006E  00E3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6178  006F  0825               	movf	(_Vaccum0+1)^(0+128),w
  6179  0070  00E2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6180  0071  0824               	movf	_Vaccum0^(0+128),w
  6181  0072                     L6:	
  6182  0072  00E1               	movwf	Decodify_Command@OutPut^(0+128)
  6183                           
  6184                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6185  0073  3041               	movlw	65
  6186  0074  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0075  00AC               	movwf	___flmul@b+3
  6188  0076  3020               	movlw	32
  6189  0077  00AB               	movwf	___flmul@b+2
  6190  0078  3000               	movlw	0
  6191  0079  00AA               	movwf	___flmul@b+1
  6192  007A  3000               	movlw	0
  6193  007B  00A9               	movwf	___flmul@b
  6194  007C  1683               	bsf	3,5	;RP0=1, select bank1
  6195  007D  0864               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6196  007E  1283               	bcf	3,5	;RP0=0, select bank0
  6197  007F  00B0               	movwf	___flmul@a+3
  6198  0080  1683               	bsf	3,5	;RP0=1, select bank1
  6199  0081  0863               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6200  0082  1283               	bcf	3,5	;RP0=0, select bank0
  6201  0083  00AF               	movwf	___flmul@a+2
  6202  0084  1683               	bsf	3,5	;RP0=1, select bank1
  6203  0085  0862               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6204  0086  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0087  00AE               	movwf	___flmul@a+1
  6206  0088  1683               	bsf	3,5	;RP0=1, select bank1
  6207  0089  0861               	movf	Decodify_Command@OutPut^(0+128),w
  6208  008A  1283               	bcf	3,5	;RP0=0, select bank0
  6209  008B  00AD               	movwf	___flmul@a
  6210  008C  120A  118A  2389  120A  118A  	fcall	___flmul
  6211  0091  082C               	movf	?___flmul+3,w
  6212  0092  1683               	bsf	3,5	;RP0=1, select bank1
  6213  0093  00E4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6214  0094  1283               	bcf	3,5	;RP0=0, select bank0
  6215  0095  082B               	movf	?___flmul+2,w
  6216  0096  1683               	bsf	3,5	;RP0=1, select bank1
  6217  0097  00E3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6218  0098  1283               	bcf	3,5	;RP0=0, select bank0
  6219  0099  082A               	movf	?___flmul+1,w
  6220  009A  1683               	bsf	3,5	;RP0=1, select bank1
  6221  009B  00E2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6222  009C  1283               	bcf	3,5	;RP0=0, select bank0
  6223  009D  0829               	movf	?___flmul,w
  6224  009E  1683               	bsf	3,5	;RP0=1, select bank1
  6225  009F  00E1               	movwf	Decodify_Command@OutPut^(0+128)
  6226                           
  6227                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6228  00A0  138B               	bcf	11,7	;volatile
  6229                           
  6230                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6231  00A1  3002               	movlw	2
  6232  00A2  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6233                           
  6234                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6235  00A7  0864               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6236  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  6237  00A9  00C6               	movwf	___fltol@f1+3
  6238  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  6239  00AB  0863               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6240  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  6241  00AD  00C5               	movwf	___fltol@f1+2
  6242  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6243  00AF  0862               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6244  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6245  00B1  00C4               	movwf	___fltol@f1+1
  6246  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  6247  00B3  0861               	movf	Decodify_Command@OutPut^(0+128),w
  6248  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  6249  00B5  00C3               	movwf	___fltol@f1
  6250  00B6  160A  118A  21BA  120A  118A  	fcall	___fltol
  6251  00BB  0844               	movf	?___fltol+1,w
  6252  00BC  00CF               	movwf	USART_put_int@value+1
  6253  00BD  0843               	movf	?___fltol,w
  6254  00BE  00CE               	movwf	USART_put_int@value
  6255  00BF  160A  158A  234F   	fcall	_USART_put_int
  6256                           
  6257                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6258  00C2  178B               	bsf	11,7	;volatile
  6259                           
  6260                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6261  00C3  0008               	return
  6262  00C4                     l6988:	
  6263                           
  6264                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6265  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  6266  00C5  0852               	movf	(_usart_protocol^(0+128)+6),w
  6267  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  6268  00C7  00E0               	movwf	??_Decodify_Command
  6269  00C8  0860               	movf	??_Decodify_Command,w
  6270  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  6271  00CA  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6272                           
  6273                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6274  00CB  0853               	movf	(_usart_protocol^(0+128)+7),w
  6275  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  6276  00CD  00E0               	movwf	??_Decodify_Command
  6277  00CE  0860               	movf	??_Decodify_Command,w
  6278  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  6279  00D0  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6280                           
  6281                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6282  00D1  0854               	movf	(_usart_protocol^(0+128)+8),w
  6283  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  6284  00D3  00E0               	movwf	??_Decodify_Command
  6285  00D4  0860               	movf	??_Decodify_Command,w
  6286  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  6287  00D6  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6288                           
  6289                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6290  00D7  0855               	movf	(_usart_protocol^(0+128)+9),w
  6291  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6292  00D9  00E0               	movwf	??_Decodify_Command
  6293  00DA  0860               	movf	??_Decodify_Command,w
  6294  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  6295  00DC  00E7               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6296                           
  6297                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6298  00DD  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6299  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  6300  00DF  00DC               	movwf	Save_Log@add_datalog+3
  6301  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  6302  00E1  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6303  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  6304  00E3  00DB               	movwf	Save_Log@add_datalog+2
  6305  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6306  00E5  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6307  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  6308  00E7  00DA               	movwf	Save_Log@add_datalog+1
  6309  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  6310  00E9  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6311  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  6312  00EB  00D9               	movwf	Save_Log@add_datalog
  6313  00EC  160A  118A  2225   	fcall	_Save_Log
  6314                           
  6315                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6316  00EF  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6317  00F0  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6320  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  6321  00F2  01B0               	clrf	_milisegundo^(0+128)	;volatile
  6322  00F3  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6323                           
  6324                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6325  00F4  0008               	return
  6326  00F5                     l6996:	
  6327                           
  6328                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6329  00F5  3002               	movlw	2
  6330  00F6  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6331                           
  6332                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6333  00FB  3001               	movlw	1
  6334  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  6335  00FD  00CE               	movwf	USART_put_int@value
  6336  00FE  3000               	movlw	0
  6337  00FF  00CF               	movwf	USART_put_int@value+1
  6338  0100  160A  158A  234F   	fcall	_USART_put_int
  6339                           
  6340                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6341  0103  0008               	return
  6342  0104                     l7000:	
  6343                           
  6344                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6345  0104  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0105  0853               	movf	(_usart_protocol^(0+128)+7),w
  6347  0106  1283               	bcf	3,5	;RP0=0, select bank0
  6348  0107  00E0               	movwf	??_Decodify_Command
  6349  0108  0860               	movf	??_Decodify_Command,w
  6350  0109  00A0               	movwf	EEPROM_Write_Byte@dado
  6351  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6352  010B  0852               	movf	(_usart_protocol^(0+128)+6),w
  6353  010C  160A  158A  26D1  120A  118A  	fcall	_EEPROM_Write_Byte
  6354  0111                     L7:	
  6355                           
  6356                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6357  0111  3003               	movlw	3
  6358  0112  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6359                           
  6360                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6361  0117  120A  118A  27F7   	fcall	_Send_Reply_OK
  6362                           
  6363                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6364  011A  0008               	return
  6365  011B                     l7004:	
  6366                           
  6367                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6368  011B  1683               	bsf	3,5	;RP0=1, select bank1
  6369  011C  0852               	movf	(_usart_protocol^(0+128)+6),w
  6370  011D  160A  158A  245E  120A  118A  	fcall	_EEPROM_Read_Byte
  6371  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0123  00E0               	movwf	??_Decodify_Command
  6373  0124  0860               	movf	??_Decodify_Command,w
  6374  0125  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0126  00E5               	movwf	Decodify_Command@tempchar^(0+128)
  6376                           
  6377                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6378  0127  3001               	movlw	1
  6379  0128  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6380                           
  6381                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6382  012D  0865               	movf	Decodify_Command@tempchar^(0+128),w
  6383  012E  160A  158A  2305   	fcall	_USART_putc
  6384                           
  6385                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6386  0131  0008               	return
  6387  0132                     l7010:	
  6388                           
  6389                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6390  0132  1683               	bsf	3,5	;RP0=1, select bank1
  6391  0133  0852               	movf	(_usart_protocol^(0+128)+6),w
  6392  0134  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0135  00E0               	movwf	??_Decodify_Command
  6394  0136  0860               	movf	??_Decodify_Command,w
  6395  0137  1683               	bsf	3,5	;RP0=1, select bank1
  6396  0138  00DE               	movwf	Decodify_Command@add^(0+128)
  6397                           
  6398                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6399  0139  0854               	movf	(_usart_protocol^(0+128)+8),w
  6400  013A  1283               	bcf	3,5	;RP0=0, select bank0
  6401  013B  00E0               	movwf	??_Decodify_Command
  6402  013C  01E1               	clrf	??_Decodify_Command+1
  6403  013D  1683               	bsf	3,5	;RP0=1, select bank1
  6404  013E  0853               	movf	(_usart_protocol^(0+128)+7),w
  6405  013F  1283               	bcf	3,5	;RP0=0, select bank0
  6406  0140  00E2               	movwf	??_Decodify_Command+2
  6407  0141  01E3               	clrf	??_Decodify_Command+3
  6408  0142  0862               	movf	??_Decodify_Command+2,w
  6409  0143  00E3               	movwf	??_Decodify_Command+3
  6410  0144  01E2               	clrf	??_Decodify_Command+2
  6411  0145  0860               	movf	??_Decodify_Command,w
  6412  0146  0462               	iorwf	??_Decodify_Command+2,w
  6413  0147  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0148  00DC               	movwf	Decodify_Command@dados^(0+128)
  6415  0149  1283               	bcf	3,5	;RP0=0, select bank0
  6416  014A  0861               	movf	??_Decodify_Command+1,w
  6417  014B  0463               	iorwf	??_Decodify_Command+3,w
  6418  014C  1683               	bsf	3,5	;RP0=1, select bank1
  6419  014D  00DD               	movwf	(Decodify_Command@dados+1)^(0+128)
  6420                           
  6421                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6422  014E  085D               	movf	(Decodify_Command@dados+1)^(0+128),w
  6423  014F  1283               	bcf	3,5	;RP0=0, select bank0
  6424  0150  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6425  0151  1683               	bsf	3,5	;RP0=1, select bank1
  6426  0152  085C               	movf	Decodify_Command@dados^(0+128),w
  6427  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6428  0154  00A5               	movwf	EEPROM_Write_Integer@dado
  6429  0155  1683               	bsf	3,5	;RP0=1, select bank1
  6430  0156  085E               	movf	Decodify_Command@add^(0+128),w
  6431  0157  160A  158A  2590  120A  118A  	fcall	_EEPROM_Write_Integer
  6432  015C  2911               	goto	L7
  6433  015D                     l7020:	
  6434                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6435                           
  6436                           
  6437                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6438  015D  1683               	bsf	3,5	;RP0=1, select bank1
  6439  015E  0852               	movf	(_usart_protocol^(0+128)+6),w
  6440  015F  160A  158A  2536  120A  118A  	fcall	_EEPROM_Read_Integer
  6441  0164  0824               	movf	?_EEPROM_Read_Integer+1,w
  6442  0165  1683               	bsf	3,5	;RP0=1, select bank1
  6443  0166  00E0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6444  0167  1283               	bcf	3,5	;RP0=0, select bank0
  6445  0168  0823               	movf	?_EEPROM_Read_Integer,w
  6446  0169                     L8:	
  6447  0169  1683               	bsf	3,5	;RP0=1, select bank1
  6448  016A  00DF               	movwf	Decodify_Command@tempint^(0+128)
  6449                           
  6450                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6451  016B  3002               	movlw	2
  6452  016C  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6453                           
  6454                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6455  0171  0860               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6456  0172  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0173  00CF               	movwf	USART_put_int@value+1
  6458  0174  1683               	bsf	3,5	;RP0=1, select bank1
  6459  0175  085F               	movf	Decodify_Command@tempint^(0+128),w
  6460  0176  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0177  00CE               	movwf	USART_put_int@value
  6462  0178  160A  158A  234F   	fcall	_USART_put_int
  6463                           
  6464                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6465  017B  0008               	return
  6466  017C                     l7026:	
  6467                           
  6468                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6469  017C  30D3               	movlw	(low ((_usart_protocol| 0+7)))& (0+255)
  6470  017D  00E0               	movwf	??_Decodify_Command
  6471  017E  0860               	movf	??_Decodify_Command,w
  6472  017F  00A5               	movwf	EEPROM_Write_String@dado
  6473  0180  1683               	bsf	3,5	;RP0=1, select bank1
  6474  0181  0852               	movf	(_usart_protocol^(0+128)+6),w
  6475  0182  120A  158A  2001  120A  118A  	fcall	_EEPROM_Write_String
  6476  0187  2911               	goto	L7
  6477  0188                     l7032:	
  6478                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6479                           
  6480                           
  6481                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6482  0188  30BC               	movlw	(low (_texto| 0))& (0+255)
  6483  0189  00E0               	movwf	??_Decodify_Command
  6484  018A  0860               	movf	??_Decodify_Command,w
  6485  018B  00A3               	movwf	EEPROM_Read_String@dado
  6486  018C  1683               	bsf	3,5	;RP0=1, select bank1
  6487  018D  0852               	movf	(_usart_protocol^(0+128)+6),w
  6488  018E  160A  158A  241E  120A  118A  	fcall	_EEPROM_Read_String
  6489                           
  6490                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6491  0193  3010               	movlw	16
  6492  0194                     L9:	
  6493  0194  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6494                           
  6495                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6496  0199  30BC               	movlw	(low (_texto| 0))& (0+255)
  6497  019A  1283               	bcf	3,5	;RP0=0, select bank0
  6498  019B  00A1               	movwf	USART_put_string@vetor
  6499  019C  3000               	movlw	0
  6500  019D  00A2               	movwf	USART_put_string@vetor+1
  6501  019E  160A  158A  25C2   	fcall	_USART_put_string
  6502                           
  6503                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6504  01A1  0008               	return
  6505  01A2                     l7038:	
  6506                           
  6507                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6508  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  6509  01A3  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6510  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  6511  01A5  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6512  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  6513  01A7  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6514  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6515  01A9  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6516  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  6517  01AB  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6518  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  6519  01AD  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6520  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  6521  01AF  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6522  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  6523  01B1  00B6               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6524  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  6525  01B3  0857               	movf	(_usart_protocol^(0+128)+11),w
  6526  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  6527  01B5  00E0               	movwf	??_Decodify_Command
  6528  01B6  0860               	movf	??_Decodify_Command,w
  6529  01B7  00BA               	movwf	EEPROM_24C1025_Write_Byte@data
  6530  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  6531  01B9  0852               	movf	(_usart_protocol^(0+128)+6),w
  6532  01BA  160A  158A  2325  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6533  01BF  2911               	goto	L7
  6534  01C0                     l7044:	
  6535                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6536                           
  6537                           
  6538                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6539  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  6540  01C1  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6541  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  6542  01C3  00BB               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6543  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  6544  01C5  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6545  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  6546  01C7  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6547  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  6548  01C9  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6549  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  6550  01CB  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6551  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  6552  01CD  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6553  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  6554  01CF  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6555  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  6556  01D1  0852               	movf	(_usart_protocol^(0+128)+6),w
  6557  01D2  160A  158A  2393  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6558  01D7  00E0               	movwf	??_Decodify_Command
  6559  01D8  0860               	movf	??_Decodify_Command,w
  6560  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  6561  01DA  00E5               	movwf	Decodify_Command@tempchar^(0+128)
  6562                           
  6563                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6564  01DB  3001               	movlw	1
  6565  01DC  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6566                           
  6567                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6568  01E1  0865               	movf	Decodify_Command@tempchar^(0+128),w
  6569  01E2  160A  158A  2305   	fcall	_USART_putc
  6570                           
  6571                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6572  01E5  0008               	return
  6573  01E6                     l7050:	
  6574                           
  6575                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6576  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  6577  01E7  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6578  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6579  01E9  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6580  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6581  01EB  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6582  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6583  01ED  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6584  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6585  01EF  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6586  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6587  01F1  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6588  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6589  01F3  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6590  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6591  01F5  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6592  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6593  01F7  0858               	movf	(_usart_protocol^(0+128)+12),w
  6594  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6595  01F9  00E0               	movwf	??_Decodify_Command
  6596  01FA  01E1               	clrf	??_Decodify_Command+1
  6597  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  6598  01FC  0857               	movf	(_usart_protocol^(0+128)+11),w
  6599  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  6600  01FE  00E2               	movwf	??_Decodify_Command+2
  6601  01FF  01E3               	clrf	??_Decodify_Command+3
  6602  0200  0862               	movf	??_Decodify_Command+2,w
  6603  0201  00E3               	movwf	??_Decodify_Command+3
  6604  0202  01E2               	clrf	??_Decodify_Command+2
  6605  0203  0860               	movf	??_Decodify_Command,w
  6606  0204  0462               	iorwf	??_Decodify_Command+2,w
  6607  0205  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6608  0206  0861               	movf	??_Decodify_Command+1,w
  6609  0207  0463               	iorwf	??_Decodify_Command+3,w
  6610  0208  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6611  0209  1683               	bsf	3,5	;RP0=1, select bank1
  6612  020A  0852               	movf	(_usart_protocol^(0+128)+6),w
  6613  020B  160A  158A  23FF  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6614  0210  2911               	goto	L7
  6615  0211                     l7056:	
  6616                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6617                           
  6618                           
  6619                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6620  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6621  0212  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6622  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6623  0214  00BB               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6624  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6625  0216  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6626  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0218  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6628  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6629  021A  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6630  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6631  021C  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6632  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6633  021E  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6634  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0220  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6636  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6637  0222  0852               	movf	(_usart_protocol^(0+128)+6),w
  6638  0223  160A  158A  24E8  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6639  0228  0839               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6640  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6641  022A  00E0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6642  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6643  022C  0838               	movf	?_EEPROM_24C1025_Read_Int,w
  6644  022D  2969               	goto	L8
  6645  022E                     l7062:	
  6646                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6647                           
  6648                           
  6649                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6650  022E  1683               	bsf	3,5	;RP0=1, select bank1
  6651  022F  0857               	movf	(_usart_protocol^(0+128)+11),w
  6652  0230  1283               	bcf	3,5	;RP0=0, select bank0
  6653  0231  00E0               	movwf	??_Decodify_Command
  6654  0232  0860               	movf	??_Decodify_Command,w
  6655  0233  1683               	bsf	3,5	;RP0=1, select bank1
  6656  0234  00E6               	movwf	Decodify_Command@sizedata^(0+128)
  6657                           
  6658                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6659  0235  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6660  0236  1283               	bcf	3,5	;RP0=0, select bank0
  6661  0237  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6662  0238  1683               	bsf	3,5	;RP0=1, select bank1
  6663  0239  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6664  023A  1283               	bcf	3,5	;RP0=0, select bank0
  6665  023B  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6666  023C  1683               	bsf	3,5	;RP0=1, select bank1
  6667  023D  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6668  023E  1283               	bcf	3,5	;RP0=0, select bank0
  6669  023F  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6670  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6671  0241  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6672  0242  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0243  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6674  0244  1683               	bsf	3,5	;RP0=1, select bank1
  6675  0245  0866               	movf	Decodify_Command@sizedata^(0+128),w
  6676  0246  1283               	bcf	3,5	;RP0=0, select bank0
  6677  0247  00E0               	movwf	??_Decodify_Command
  6678  0248  0860               	movf	??_Decodify_Command,w
  6679  0249  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6680  024A  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6681  024B  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6682  024C  3001               	movlw	1
  6683  024D  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6684  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6685  024F  0852               	movf	(_usart_protocol^(0+128)+6),w
  6686  0250  120A  118A  267E  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6687                           
  6688                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6689  0255  1683               	bsf	3,5	;RP0=1, select bank1
  6690  0256  1303               	bcf	3,6	;RP1=0, select bank1
  6691  0257  0866               	movf	Decodify_Command@sizedata^(0+128),w
  6692  0258  160A  158A  250F  120A  118A  	fcall	_Send_To_MB
  6693                           
  6694                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6695  025D  0866               	movf	Decodify_Command@sizedata^(0+128),w
  6696  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6697  025F  00E0               	movwf	??_Decodify_Command
  6698  0260  01E1               	clrf	??_Decodify_Command+1
  6699  0261  0860               	movf	??_Decodify_Command,w
  6700  0262  00A1               	movwf	USART_put_buffer@size
  6701  0263  0861               	movf	??_Decodify_Command+1,w
  6702  0264  00A2               	movwf	USART_put_buffer@size+1
  6703  0265  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6704  0266  160A  158A  24C4   	fcall	_USART_put_buffer
  6705                           
  6706                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6707  0269  0008               	return
  6708  026A                     l7070:	
  6709                           
  6710                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6711  026A  1683               	bsf	3,5	;RP0=1, select bank1
  6712  026B  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6713  026C  1283               	bcf	3,5	;RP0=0, select bank0
  6714  026D  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6715  026E  1683               	bsf	3,5	;RP0=1, select bank1
  6716  026F  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6717  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0271  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6719  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6720  0273  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6721  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0275  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6723  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6724  0277  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6725  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6726  0279  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6727  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6728  027B  0857               	movf	(_usart_protocol^(0+128)+11),w
  6729  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6730  027D  00E0               	movwf	??_Decodify_Command
  6731  027E  0860               	movf	??_Decodify_Command,w
  6732  027F  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6733  0280  30D8               	movlw	(low ((_usart_protocol| 0+12)))& (0+255)
  6734  0281  00E1               	movwf	??_Decodify_Command+1
  6735  0282  0861               	movf	??_Decodify_Command+1,w
  6736  0283  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6737  0284  1683               	bsf	3,5	;RP0=1, select bank1
  6738  0285  0852               	movf	(_usart_protocol^(0+128)+6),w
  6739  0286  160A  118A  26A1  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6740  028B  2911               	goto	L7
  6741  028C                     l7076:	
  6742                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  6743                           
  6744                           
  6745                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6746  028C  1683               	bsf	3,5	;RP0=1, select bank1
  6747  028D  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6748  028E  1283               	bcf	3,5	;RP0=0, select bank0
  6749  028F  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6750  0290  1683               	bsf	3,5	;RP0=1, select bank1
  6751  0291  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6752  0292  1283               	bcf	3,5	;RP0=0, select bank0
  6753  0293  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6754  0294  1683               	bsf	3,5	;RP0=1, select bank1
  6755  0295  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6756  0296  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0297  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6758  0298  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0299  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6760  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6761  029B  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6762  029C  30D7               	movlw	(low ((_usart_protocol| 0+11)))& (0+255)
  6763  029D  00E0               	movwf	??_Decodify_Command
  6764  029E  0860               	movf	??_Decodify_Command,w
  6765  029F  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6766  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6767  02A1  0852               	movf	(_usart_protocol^(0+128)+6),w
  6768  02A2  160A  118A  25AF  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6769  02A7  2911               	goto	L7
  6770  02A8                     l7082:	
  6771                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  6772                           
  6773                           
  6774                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6775  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  6776  02A9  086A               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6777  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  6778  02AB  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6779  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  6780  02AD  0869               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6781  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  6782  02AF  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6783  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  6784  02B1  0868               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6785  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  6786  02B3  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6787  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6788  02B5  0867               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6789  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6790  02B7  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6791  02B8  30BC               	movlw	(low (_texto| 0))& (0+255)
  6792  02B9  00E0               	movwf	??_Decodify_Command
  6793  02BA  0860               	movf	??_Decodify_Command,w
  6794  02BB  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  6795  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6796  02BD  0852               	movf	(_usart_protocol^(0+128)+6),w
  6797  02BE  120A  158A  202B  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6798                           
  6799                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  6800  02C3  30BC               	movlw	(low (_texto| 0))& (0+255)
  6801  02C4  160A  158A  23AB  120A  118A  	fcall	_strlen
  6802  02C9  0820               	movf	?_strlen,w
  6803  02CA  2994               	goto	L9
  6804  02CB                     l7088:	
  6805                           
  6806                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6807  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  6808  02CC  0853               	movf	(_usart_protocol^(0+128)+7),w
  6809  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  6810  02CE  00E0               	movwf	??_Decodify_Command
  6811  02CF  01E1               	clrf	??_Decodify_Command+1
  6812  02D0  0860               	movf	??_Decodify_Command,w
  6813  02D1  00D9               	movwf	EEPROM_24C1025_Fill_All@value
  6814  02D2  0861               	movf	??_Decodify_Command+1,w
  6815  02D3  00DA               	movwf	EEPROM_24C1025_Fill_All@value+1
  6816  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  6817  02D5  0852               	movf	(_usart_protocol^(0+128)+6),w
  6818  02D6  160A  158A  2784  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6819  02DB  2911               	goto	L7
  6820  02DC                     l7094:	
  6821                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  6822                           
  6823                           
  6824                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6825  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  6826  02DD  0852               	movf	(_usart_protocol^(0+128)+6),w
  6827  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  6828  02DF  00E0               	movwf	??_Decodify_Command
  6829  02E0  01E1               	clrf	??_Decodify_Command+1
  6830  02E1  0860               	movf	??_Decodify_Command,w
  6831  02E2  00D6               	movwf	PROCULUS_Show_Screen@screen
  6832  02E3  0861               	movf	??_Decodify_Command+1,w
  6833  02E4  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6834  02E5  160A  158A  233A  120A  118A  	fcall	_PROCULUS_Show_Screen
  6835  02EA  2911               	goto	L7
  6836  02EB                     l7100:	
  6837                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  6838                           
  6839                           
  6840                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6841  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  6842  02EC  0852               	movf	(_usart_protocol^(0+128)+6),w
  6843  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  6844  02EE  00E0               	movwf	??_Decodify_Command
  6845  02EF  01E1               	clrf	??_Decodify_Command+1
  6846  02F0  0860               	movf	??_Decodify_Command,w
  6847  02F1  00E1               	movwf	??_Decodify_Command+1
  6848  02F2  01E0               	clrf	??_Decodify_Command
  6849  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6850  02F4  0853               	movf	(_usart_protocol^(0+128)+7),w
  6851  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  6852  02F6  0760               	addwf	??_Decodify_Command,w
  6853  02F7  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6854  02F8  3000               	movlw	0
  6855  02F9  1803               	skipnc
  6856  02FA  3001               	movlw	1
  6857  02FB  0761               	addwf	??_Decodify_Command+1,w
  6858  02FC  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6859  02FD  160A  158A  247F  120A  118A  	fcall	_PROCULUS_Buzzer
  6860  0302  2911               	goto	L7
  6861  0303                     l7106:	
  6862                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  6863                           
  6864                           
  6865                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6866  0303  1683               	bsf	3,5	;RP0=1, select bank1
  6867  0304  0852               	movf	(_usart_protocol^(0+128)+6),w
  6868  0305  1283               	bcf	3,5	;RP0=0, select bank0
  6869  0306  00E0               	movwf	??_Decodify_Command
  6870  0307  01E1               	clrf	??_Decodify_Command+1
  6871  0308  0860               	movf	??_Decodify_Command,w
  6872  0309  00E1               	movwf	??_Decodify_Command+1
  6873  030A  01E0               	clrf	??_Decodify_Command
  6874  030B  1683               	bsf	3,5	;RP0=1, select bank1
  6875  030C  0853               	movf	(_usart_protocol^(0+128)+7),w
  6876  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6877  030E  0760               	addwf	??_Decodify_Command,w
  6878  030F  00D8               	movwf	PROCULUS_VP_Write_String@vp
  6879  0310  3000               	movlw	0
  6880  0311  1803               	skipnc
  6881  0312  3001               	movlw	1
  6882  0313  0761               	addwf	??_Decodify_Command+1,w
  6883  0314  00D9               	movwf	PROCULUS_VP_Write_String@vp+1
  6884  0315  30D4               	movlw	(low ((_usart_protocol| 0+8)))& (0+255)
  6885  0316  00E2               	movwf	??_Decodify_Command+2
  6886  0317  0862               	movf	??_Decodify_Command+2,w
  6887  0318  00DA               	movwf	PROCULUS_VP_Write_String@text
  6888  0319  160A  158A  2365  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6889  031E  2911               	goto	L7
  6890  031F                     l7112:	
  6891                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  6892                           
  6893                           
  6894                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  6895  031F  1683               	bsf	3,5	;RP0=1, select bank1
  6896  0320  0852               	movf	(_usart_protocol^(0+128)+6),w
  6897  0321  1D03               	btfss	3,2
  6898  0322  2B2C               	goto	l7118
  6899                           
  6900                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  6901  0323  0853               	movf	(_usart_protocol^(0+128)+7),w
  6902  0324  1D03               	btfss	3,2
  6903  0325  2B29               	goto	l412
  6904                           
  6905                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  6906  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6907  0327  1007               	bcf	7,0	;volatile
  6908  0328  2911               	goto	L7
  6909  0329                     l412:	
  6910                           ;SlaveLiofilizadorVer1.c: 627:                 else
  6911                           
  6912                           
  6913                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  6914  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6915  032A  1407               	bsf	7,0	;volatile
  6916  032B  2911               	goto	L7
  6917  032C                     l7118:	
  6918  032C  0352               	decf	(_usart_protocol^(0+128)+6),w
  6919  032D  1D03               	btfss	3,2
  6920  032E  2911               	goto	L7
  6921                           
  6922                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  6923  032F  0853               	movf	(_usart_protocol^(0+128)+7),w
  6924  0330  1D03               	btfss	3,2
  6925  0331  2B35               	goto	l416
  6926                           
  6927                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  6928  0332  1283               	bcf	3,5	;RP0=0, select bank0
  6929  0333  1087               	bcf	7,1	;volatile
  6930  0334  2911               	goto	L7
  6931  0335                     l416:	
  6932                           ;SlaveLiofilizadorVer1.c: 634:                       else
  6933                           
  6934                           
  6935                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  6936  0335  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0336  1487               	bsf	7,1	;volatile
  6938  0337  2911               	goto	L7
  6939  0338                     l7130:	
  6940                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  6941                           
  6942  0338  0850               	movf	(_usart_protocol^(0+128)+4),w
  6943  0339  1283               	bcf	3,5	;RP0=0, select bank0
  6944  033A  00E0               	movwf	??_Decodify_Command
  6945  033B  01E1               	clrf	??_Decodify_Command+1
  6946                           
  6947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6948                           ; Switch size 1, requested type "simple"
  6949                           ; Number of cases is 1, Range of values is 0 to 0
  6950                           ; switch strategies available:
  6951                           ; Name         Instructions Cycles
  6952                           ; simple_byte            4     3 (average)
  6953                           ; direct_byte           11     8 (fixed)
  6954                           ; jumptable            260     6 (fixed)
  6955                           ;	Chosen strategy is simple_byte
  6956  033C  0861               	movf	??_Decodify_Command+1,w
  6957  033D  3A00               	xorlw	0	; case 0
  6958  033E  1903               	skipnz
  6959  033F  2B41               	goto	l7288
  6960  0340  2B88               	goto	l418
  6961  0341                     l7288:	
  6962                           
  6963                           ; Switch size 1, requested type "simple"
  6964                           ; Number of cases is 23, Range of values is 2 to 65
  6965                           ; switch strategies available:
  6966                           ; Name         Instructions Cycles
  6967                           ; simple_byte           70    36 (average)
  6968                           ; direct_byte          203    11 (fixed)
  6969                           ; jumptable            263     9 (fixed)
  6970                           ;	Chosen strategy is simple_byte
  6971  0341  0860               	movf	??_Decodify_Command,w
  6972  0342  3A02               	xorlw	2	; case 2
  6973  0343  1903               	skipnz
  6974  0344  28C4               	goto	l6988
  6975  0345  3A01               	xorlw	1	; case 3
  6976  0346  1903               	skipnz
  6977  0347  28F5               	goto	l6996
  6978  0348  3A0B               	xorlw	11	; case 8
  6979  0349  1903               	skipnz
  6980  034A  2904               	goto	l7000
  6981  034B  3A01               	xorlw	1	; case 9
  6982  034C  1903               	skipnz
  6983  034D  291B               	goto	l7004
  6984  034E  3A03               	xorlw	3	; case 10
  6985  034F  1903               	skipnz
  6986  0350  2932               	goto	l7010
  6987  0351  3A01               	xorlw	1	; case 11
  6988  0352  1903               	skipnz
  6989  0353  295D               	goto	l7020
  6990  0354  3A07               	xorlw	7	; case 12
  6991  0355  1903               	skipnz
  6992  0356  297C               	goto	l7026
  6993  0357  3A01               	xorlw	1	; case 13
  6994  0358  1903               	skipnz
  6995  0359  2988               	goto	l7032
  6996  035A  3A1C               	xorlw	28	; case 17
  6997  035B  1903               	skipnz
  6998  035C  29A2               	goto	l7038
  6999  035D  3A03               	xorlw	3	; case 18
  7000  035E  1903               	skipnz
  7001  035F  29C0               	goto	l7044
  7002  0360  3A01               	xorlw	1	; case 19
  7003  0361  1903               	skipnz
  7004  0362  29E6               	goto	l7050
  7005  0363  3A07               	xorlw	7	; case 20
  7006  0364  1903               	skipnz
  7007  0365  2A11               	goto	l7056
  7008  0366  3A01               	xorlw	1	; case 21
  7009  0367  1903               	skipnz
  7010  0368  2A8C               	goto	l7076
  7011  0369  3A03               	xorlw	3	; case 22
  7012  036A  1903               	skipnz
  7013  036B  2AA8               	goto	l7082
  7014  036C  3A01               	xorlw	1	; case 23
  7015  036D  1903               	skipnz
  7016  036E  2A6A               	goto	l7070
  7017  036F  3A0F               	xorlw	15	; case 24
  7018  0370  1903               	skipnz
  7019  0371  2A2E               	goto	l7062
  7020  0372  3A01               	xorlw	1	; case 25
  7021  0373  1903               	skipnz
  7022  0374  2ACB               	goto	l7088
  7023  0375  3A03               	xorlw	3	; case 26
  7024  0376  1903               	skipnz
  7025  0377  285F               	goto	l6972
  7026  0378  3A38               	xorlw	56	; case 34
  7027  0379  1903               	skipnz
  7028  037A  2B03               	goto	l7106
  7029  037B  3A06               	xorlw	6	; case 36
  7030  037C  1903               	skipnz
  7031  037D  2AEB               	goto	l7100
  7032  037E  3A01               	xorlw	1	; case 37
  7033  037F  1903               	skipnz
  7034  0380  2ADC               	goto	l7094
  7035  0381  3A15               	xorlw	21	; case 48
  7036  0382  1903               	skipnz
  7037  0383  2B1F               	goto	l7112
  7038  0384  3A71               	xorlw	113	; case 65
  7039  0385  1903               	skipnz
  7040  0386  2850               	goto	l6968
  7041  0387  2B88               	goto	l418
  7042  0388                     l418:	
  7043  0388  0008               	return
  7044  0389                     __end_of_Decodify_Command:	
  7045                           
  7046                           	psect	text16
  7047  10FE                     __ptext16:	
  7048 ;; *************** function _USART_to_Protocol *****************
  7049 ;; Defined at:
  7050 ;;		line 77 in file "usart.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  usart_protoc    1    wreg     PTR struct .
  7053 ;;		 -> usart_protocol(16), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7056 ;;		 -> usart_protocol(16), 
  7057 ;;  i               2    2[BANK0 ] int 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7062 ;; Tracked objects:
  7063 ;;		On entry : 300/100
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7067 ;;      Params:         0       0       0       0       0
  7068 ;;      Locals:         0       3       0       0       0
  7069 ;;      Temps:          0       2       0       0       0
  7070 ;;      Totals:         0       5       0       0       0
  7071 ;;Total ram usage:        5 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_Decodify_Command
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _USART_to_Protocol
  7083  10FE                     _USART_to_Protocol:	
  7084                           
  7085                           ;incstack = 0
  7086                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7087                           ;USART_to_Protocol@usart_protocol stored from wreg
  7088  10FE  1283               	bcf	3,5	;RP0=0, select bank0
  7089  10FF  00A4               	movwf	USART_to_Protocol@usart_protocol
  7090                           
  7091                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7092  1100  0824               	movf	USART_to_Protocol@usart_protocol,w
  7093  1101  0084               	movwf	4
  7094  1102  1683               	bsf	3,5	;RP0=1, select bank3
  7095  1103  1703               	bsf	3,6	;RP1=1, select bank3
  7096  1104  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  7097  1105  1383               	bcf	3,7	;select IRP bank0
  7098  1106  0080               	movwf	0
  7099  1107  0A84               	incf	4,f
  7100  1108  0810               	movf	_usart_buffer^(0+384),w	;volatile
  7101  1109  0080               	movwf	0
  7102                           
  7103                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7104  110A  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  7105  110B  1283               	bcf	3,5	;RP0=0, select bank0
  7106  110C  1303               	bcf	3,6	;RP1=0, select bank0
  7107  110D  00A0               	movwf	??_USART_to_Protocol
  7108  110E  0824               	movf	USART_to_Protocol@usart_protocol,w
  7109  110F  3E02               	addlw	2
  7110  1110  0084               	movwf	4
  7111  1111  0820               	movf	??_USART_to_Protocol,w
  7112  1112  0080               	movwf	0
  7113                           
  7114                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7115  1113  1683               	bsf	3,5	;RP0=1, select bank3
  7116  1114  1703               	bsf	3,6	;RP1=1, select bank3
  7117  1115  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  7118  1116  1283               	bcf	3,5	;RP0=0, select bank0
  7119  1117  1303               	bcf	3,6	;RP1=0, select bank0
  7120  1118  00A0               	movwf	??_USART_to_Protocol
  7121  1119  0824               	movf	USART_to_Protocol@usart_protocol,w
  7122  111A  3E03               	addlw	3
  7123  111B  0084               	movwf	4
  7124  111C  0820               	movf	??_USART_to_Protocol,w
  7125  111D  0080               	movwf	0
  7126                           
  7127                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7128  111E  1683               	bsf	3,5	;RP0=1, select bank3
  7129  111F  1703               	bsf	3,6	;RP1=1, select bank3
  7130  1120  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  7131  1121  1283               	bcf	3,5	;RP0=0, select bank0
  7132  1122  1303               	bcf	3,6	;RP1=0, select bank0
  7133  1123  00A0               	movwf	??_USART_to_Protocol
  7134  1124  0824               	movf	USART_to_Protocol@usart_protocol,w
  7135  1125  3E04               	addlw	4
  7136  1126  0084               	movwf	4
  7137  1127  0820               	movf	??_USART_to_Protocol,w
  7138  1128  0080               	movwf	0
  7139                           
  7140                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7141  1129  1683               	bsf	3,5	;RP0=1, select bank3
  7142  112A  1703               	bsf	3,6	;RP1=1, select bank3
  7143  112B  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  7144  112C  1283               	bcf	3,5	;RP0=0, select bank0
  7145  112D  1303               	bcf	3,6	;RP1=0, select bank0
  7146  112E  00A0               	movwf	??_USART_to_Protocol
  7147  112F  0824               	movf	USART_to_Protocol@usart_protocol,w
  7148  1130  3E05               	addlw	5
  7149  1131  0084               	movwf	4
  7150  1132  0820               	movf	??_USART_to_Protocol,w
  7151  1133  0080               	movwf	0
  7152                           
  7153                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7154  1134  01A2               	clrf	USART_to_Protocol@i
  7155  1135  01A3               	clrf	USART_to_Protocol@i+1
  7156  1136                     l6502:	
  7157  1136  0824               	movf	USART_to_Protocol@usart_protocol,w
  7158  1137  3E05               	addlw	5
  7159  1138  0084               	movwf	4
  7160  1139  0823               	movf	USART_to_Protocol@i+1,w
  7161  113A  3A80               	xorlw	128
  7162  113B  00A0               	movwf	??_USART_to_Protocol
  7163  113C  3080               	movlw	128
  7164  113D  0220               	subwf	??_USART_to_Protocol,w
  7165  113E  1D03               	skipz
  7166  113F  2942               	goto	u6915
  7167  1140  0800               	movf	0,w
  7168  1141  0222               	subwf	USART_to_Protocol@i,w
  7169  1142                     u6915:	
  7170  1142  1803               	btfsc	3,0
  7171  1143  0008               	return
  7172                           
  7173                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7174  1144  1283               	bcf	3,5	;RP0=0, select bank0
  7175  1145  1303               	bcf	3,6	;RP1=0, select bank0
  7176  1146  0822               	movf	USART_to_Protocol@i,w
  7177  1147  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7178  1148  0084               	movwf	4
  7179  1149  1783               	bsf	3,7	;select IRP bank3
  7180  114A  0800               	movf	0,w
  7181  114B  00A0               	movwf	??_USART_to_Protocol
  7182  114C  0822               	movf	USART_to_Protocol@i,w
  7183  114D  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7184  114E  00A1               	movwf	??_USART_to_Protocol+1
  7185  114F  0821               	movf	??_USART_to_Protocol+1,w
  7186  1150  3E06               	addlw	6
  7187  1151  0084               	movwf	4
  7188  1152  0820               	movf	??_USART_to_Protocol,w
  7189  1153  1383               	bcf	3,7	;select IRP bank0
  7190  1154  0080               	movwf	0
  7191  1155  3001               	movlw	1
  7192  1156  07A2               	addwf	USART_to_Protocol@i,f
  7193  1157  1803               	skipnc
  7194  1158  0AA3               	incf	USART_to_Protocol@i+1,f
  7195  1159  3000               	movlw	0
  7196  115A  07A3               	addwf	USART_to_Protocol@i+1,f
  7197  115B  2936               	goto	l6502
  7198  115C                     __end_of_USART_to_Protocol:	
  7199                           
  7200                           	psect	text17
  7201  1CC4                     __ptext17:	
  7202 ;; *************** function _USART_put_buffer *****************
  7203 ;; Defined at:
  7204 ;;		line 99 in file "usart.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  vetor           1    wreg     PTR unsigned char 
  7207 ;;		 -> buffer(32), 
  7208 ;;  size            2    1[BANK0 ] unsigned int 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  7211 ;;		 -> buffer(32), 
  7212 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  7213 ;;		 -> USART_put_buffer@vetor(1), 
  7214 ;;  loop            1    6[BANK0 ] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 300/0
  7221 ;;		On exit  : 300/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7224 ;;      Params:         0       2       0       0       0
  7225 ;;      Locals:         0       3       0       0       0
  7226 ;;      Temps:          0       2       0       0       0
  7227 ;;      Totals:         0       7       0       0       0
  7228 ;;Total ram usage:        7 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    2
  7231 ;; This function calls:
  7232 ;;		_USART_putc
  7233 ;; This function is called by:
  7234 ;;		_Decodify_Command
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           
  7239                           ;psect for function _USART_put_buffer
  7240  1CC4                     _USART_put_buffer:	
  7241                           
  7242                           ;incstack = 0
  7243                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7244                           ;USART_put_buffer@vetor stored from wreg
  7245  1CC4  00A5               	movwf	USART_put_buffer@vetor
  7246                           
  7247                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  7248  1CC5  01A6               	clrf	USART_put_buffer@loop
  7249                           
  7250                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  7251  1CC6  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  7252  1CC7  00A3               	movwf	??_USART_put_buffer
  7253  1CC8  0823               	movf	??_USART_put_buffer,w
  7254  1CC9  00A7               	movwf	USART_put_buffer@ptr
  7255  1CCA                     l6542:	
  7256                           ;usart.c: 105:     while(loop<size)
  7257                           
  7258                           
  7259                           ;usart.c: 105:     while(loop<size)
  7260  1CCA  0826               	movf	USART_put_buffer@loop,w
  7261  1CCB  00A3               	movwf	??_USART_put_buffer
  7262  1CCC  01A4               	clrf	??_USART_put_buffer+1
  7263  1CCD  0822               	movf	USART_put_buffer@size+1,w
  7264  1CCE  0224               	subwf	??_USART_put_buffer+1,w
  7265  1CCF  1D03               	skipz
  7266  1CD0  2CD3               	goto	u6945
  7267  1CD1  0821               	movf	USART_put_buffer@size,w
  7268  1CD2  0223               	subwf	??_USART_put_buffer,w
  7269  1CD3                     u6945:	
  7270  1CD3  1803               	btfsc	3,0
  7271  1CD4  0008               	return
  7272                           
  7273                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  7274  1CD5  0827               	movf	USART_put_buffer@ptr,w
  7275  1CD6  0084               	movwf	4
  7276  1CD7  1383               	bcf	3,7	;select IRP bank0
  7277  1CD8  0800               	movf	0,w
  7278  1CD9  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7279                           
  7280                           ;usart.c: 108:         ptr++;
  7281  1CDE  3001               	movlw	1
  7282  1CDF  1283               	bcf	3,5	;RP0=0, select bank0
  7283  1CE0  00A3               	movwf	??_USART_put_buffer
  7284  1CE1  0823               	movf	??_USART_put_buffer,w
  7285  1CE2  07A7               	addwf	USART_put_buffer@ptr,f
  7286                           
  7287                           ;usart.c: 109:         loop++;
  7288  1CE3  3001               	movlw	1
  7289  1CE4  00A3               	movwf	??_USART_put_buffer
  7290  1CE5  0823               	movf	??_USART_put_buffer,w
  7291  1CE6  07A6               	addwf	USART_put_buffer@loop,f
  7292  1CE7  2CCA               	goto	l6542
  7293  1CE8                     __end_of_USART_put_buffer:	
  7294                           
  7295                           	psect	text18
  7296  1D0F                     __ptext18:	
  7297 ;; *************** function _Send_To_MB *****************
  7298 ;; Defined at:
  7299 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  size            1    wreg     unsigned char 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  size            1    1[BANK0 ] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0, pclath, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 300/100
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7313 ;;      Params:         0       0       0       0       0
  7314 ;;      Locals:         0       1       0       0       0
  7315 ;;      Temps:          0       0       0       0       0
  7316 ;;      Totals:         0       1       0       0       0
  7317 ;;Total ram usage:        1 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    2
  7320 ;; This function calls:
  7321 ;;		_USART_putc
  7322 ;; This function is called by:
  7323 ;;		_Decodify_Command
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function _Send_To_MB
  7329  1D0F                     _Send_To_MB:	
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7333                           ;Send_To_MB@size stored from wreg
  7334  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  7335  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  7336  1D11  00A1               	movwf	Send_To_MB@size
  7337                           
  7338                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  7339  1D12  30AA               	movlw	170
  7340  1D13  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7341                           
  7342                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  7343  1D18  30BB               	movlw	187
  7344  1D19  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7345                           
  7346                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  7347  1D1E  0838               	movf	_Board_Number^(0+128),w
  7348  1D1F  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7349                           
  7350                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  7351  1D24  3000               	movlw	0
  7352  1D25  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7353                           
  7354                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  7355  1D2A  0850               	movf	(_usart_protocol^(0+128)+4),w
  7356  1D2B  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7357                           
  7358                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  7359  1D30  1283               	bcf	3,5	;RP0=0, select bank0
  7360  1D31  0821               	movf	Send_To_MB@size,w
  7361  1D32  160A  158A  2305   	fcall	_USART_putc
  7362  1D35  0008               	return
  7363  1D36                     __end_of_Send_To_MB:	
  7364                           
  7365                           	psect	text19
  7366  07F7                     __ptext19:	
  7367 ;; *************** function _Send_Reply_OK *****************
  7368 ;; Defined at:
  7369 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 300/100
  7380 ;;		On exit  : 300/100
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7383 ;;      Params:         0       0       0       0       0
  7384 ;;      Locals:         0       0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0
  7386 ;;      Totals:         0       0       0       0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    3
  7390 ;; This function calls:
  7391 ;;		_USART_put_string
  7392 ;; This function is called by:
  7393 ;;		_Decodify_Command
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           
  7398                           ;psect for function _Send_Reply_OK
  7399  07F7                     _Send_Reply_OK:	
  7400                           
  7401                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  7402                           
  7403                           ;incstack = 0
  7404                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7405  07F7  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7406  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  7407  07F9  00A1               	movwf	USART_put_string@vetor
  7408  07FA  3080               	movlw	128
  7409  07FB  00A2               	movwf	USART_put_string@vetor+1
  7410  07FC  160A  158A  25C2   	fcall	_USART_put_string
  7411  07FF  0008               	return
  7412  0800                     __end_of_Send_Reply_OK:	
  7413                           
  7414                           	psect	text20
  7415  1DC2                     __ptext20:	
  7416 ;; *************** function _USART_put_string *****************
  7417 ;; Defined at:
  7418 ;;		line 168 in file "usart.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7421 ;;		 -> STR_2(3), texto(16), STR_1(8), 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7424 ;;		 -> STR_2(3), texto(16), STR_1(8), 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 300/0
  7431 ;;		On exit  : 300/100
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7434 ;;      Params:         0       2       0       0       0
  7435 ;;      Locals:         0       2       0       0       0
  7436 ;;      Temps:          0       0       0       0       0
  7437 ;;      Totals:         0       4       0       0       0
  7438 ;;Total ram usage:        4 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    2
  7441 ;; This function calls:
  7442 ;;		_USART_putc
  7443 ;; This function is called by:
  7444 ;;		_Decodify_Command
  7445 ;;		_Send_Reply_OK
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function _USART_put_string
  7451  1DC2                     _USART_put_string:	
  7452                           
  7453                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  7454                           
  7455                           ;incstack = 0
  7456                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7457  1DC2  0821               	movf	USART_put_string@vetor,w
  7458  1DC3  00A3               	movwf	USART_put_string@ptr
  7459  1DC4  0822               	movf	USART_put_string@vetor+1,w
  7460  1DC5  00A4               	movwf	USART_put_string@ptr+1
  7461  1DC6                     l5708:	
  7462                           ;usart.c: 172:     while(*(ptr)){
  7463                           
  7464                           
  7465                           ;usart.c: 172:     while(*(ptr)){
  7466  1DC6  0824               	movf	USART_put_string@ptr+1,w
  7467  1DC7  00FF               	movwf	127
  7468  1DC8  0823               	movf	USART_put_string@ptr,w
  7469  1DC9  0084               	movwf	4
  7470  1DCA  160A  118A  2000  160A  158A  	fcall	stringtab
  7471  1DCF  3A00               	xorlw	0
  7472  1DD0  1903               	btfsc	3,2
  7473  1DD1  2DE8               	goto	l5710
  7474                           
  7475                           ;usart.c: 173:         USART_putc(*(ptr));
  7476  1DD2  0824               	movf	USART_put_string@ptr+1,w
  7477  1DD3  00FF               	movwf	127
  7478  1DD4  0823               	movf	USART_put_string@ptr,w
  7479  1DD5  0084               	movwf	4
  7480  1DD6  160A  118A  2000  160A  158A  	fcall	stringtab
  7481  1DDB  160A  158A  2305  160A  158A  	fcall	_USART_putc
  7482                           
  7483                           ;usart.c: 174:         ptr++;
  7484  1DE0  3001               	movlw	1
  7485  1DE1  1283               	bcf	3,5	;RP0=0, select bank0
  7486  1DE2  07A3               	addwf	USART_put_string@ptr,f
  7487  1DE3  1803               	skipnc
  7488  1DE4  0AA4               	incf	USART_put_string@ptr+1,f
  7489  1DE5  3000               	movlw	0
  7490  1DE6  07A4               	addwf	USART_put_string@ptr+1,f
  7491  1DE7  2DC6               	goto	l5708
  7492  1DE8                     l5710:	
  7493                           
  7494                           ;usart.c: 176:     USART_putc(*(ptr));
  7495  1DE8  0824               	movf	USART_put_string@ptr+1,w
  7496  1DE9  00FF               	movwf	127
  7497  1DEA  0823               	movf	USART_put_string@ptr,w
  7498  1DEB  0084               	movwf	4
  7499  1DEC  160A  118A  2000  160A  158A  	fcall	stringtab
  7500  1DF1  160A  158A  2305   	fcall	_USART_putc
  7501  1DF4  0008               	return
  7502  1DF5                     __end_of_USART_put_string:	
  7503                           
  7504                           	psect	text21
  7505  1225                     __ptext21:	
  7506 ;; *************** function _Save_Log *****************
  7507 ;; Defined at:
  7508 ;;		line 1017 in file "SlaveLiofilizadorVer1.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  add_datalog     4   57[BANK0 ] unsigned long 
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      void 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 300/0
  7519 ;;		On exit  : 300/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7522 ;;      Params:         0       4       0       0       0
  7523 ;;      Locals:         0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0
  7525 ;;      Totals:         0       4       0       0       0
  7526 ;;Total ram usage:        4 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    5
  7529 ;; This function calls:
  7530 ;;		_EEPROM_24C1025_Write_Int
  7531 ;;		___flmul
  7532 ;;		___fltol
  7533 ;; This function is called by:
  7534 ;;		_Decodify_Command
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function _Save_Log
  7540  1225                     _Save_Log:	
  7541                           
  7542                           ;SlaveLiofilizadorVer1.c: 1018:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Tensao1*10));
  7543                           
  7544                           ;incstack = 0
  7545                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7546  1225  085C               	movf	Save_Log@add_datalog+3,w
  7547  1226  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7548  1227  085B               	movf	Save_Log@add_datalog+2,w
  7549  1228  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7550  1229  085A               	movf	Save_Log@add_datalog+1,w
  7551  122A  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7552  122B  0859               	movf	Save_Log@add_datalog,w
  7553  122C  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7554  122D  1683               	bsf	3,5	;RP0=1, select bank1
  7555  122E  0823               	movf	(_Tensao1+3)^(0+128),w
  7556  122F  1283               	bcf	3,5	;RP0=0, select bank0
  7557  1230  00B0               	movwf	___flmul@a+3
  7558  1231  1683               	bsf	3,5	;RP0=1, select bank1
  7559  1232  0822               	movf	(_Tensao1+2)^(0+128),w
  7560  1233  1283               	bcf	3,5	;RP0=0, select bank0
  7561  1234  00AF               	movwf	___flmul@a+2
  7562  1235  1683               	bsf	3,5	;RP0=1, select bank1
  7563  1236  0821               	movf	(_Tensao1+1)^(0+128),w
  7564  1237  1283               	bcf	3,5	;RP0=0, select bank0
  7565  1238  00AE               	movwf	___flmul@a+1
  7566  1239  1683               	bsf	3,5	;RP0=1, select bank1
  7567  123A  0820               	movf	_Tensao1^(0+128),w
  7568  123B  1283               	bcf	3,5	;RP0=0, select bank0
  7569  123C  00AD               	movwf	___flmul@a
  7570  123D  3041               	movlw	65
  7571  123E  00AC               	movwf	___flmul@b+3
  7572  123F  3020               	movlw	32
  7573  1240  00AB               	movwf	___flmul@b+2
  7574  1241  3000               	movlw	0
  7575  1242  00AA               	movwf	___flmul@b+1
  7576  1243  3000               	movlw	0
  7577  1244  00A9               	movwf	___flmul@b
  7578  1245  120A  118A  2389  160A  118A  	fcall	___flmul
  7579  124A  082C               	movf	?___flmul+3,w
  7580  124B  00C6               	movwf	___fltol@f1+3
  7581  124C  082B               	movf	?___flmul+2,w
  7582  124D  00C5               	movwf	___fltol@f1+2
  7583  124E  082A               	movf	?___flmul+1,w
  7584  124F  00C4               	movwf	___fltol@f1+1
  7585  1250  0829               	movf	?___flmul,w
  7586  1251  00C3               	movwf	___fltol@f1
  7587  1252  160A  118A  21BA  160A  118A  	fcall	___fltol
  7588  1257  0844               	movf	?___fltol+1,w
  7589  1258  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7590  1259  0843               	movf	?___fltol,w
  7591  125A  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7592  125B  3000               	movlw	0
  7593  125C  160A  158A  23FF  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7594                           
  7595                           ;SlaveLiofilizadorVer1.c: 1019:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Vaccum0*10));
  7596  1261  085C               	movf	Save_Log@add_datalog+3,w
  7597  1262  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7598  1263  085B               	movf	Save_Log@add_datalog+2,w
  7599  1264  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7600  1265  085A               	movf	Save_Log@add_datalog+1,w
  7601  1266  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7602  1267  0859               	movf	Save_Log@add_datalog,w
  7603  1268  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7604  1269  1683               	bsf	3,5	;RP0=1, select bank1
  7605  126A  0827               	movf	(_Vaccum0+3)^(0+128),w
  7606  126B  1283               	bcf	3,5	;RP0=0, select bank0
  7607  126C  00B0               	movwf	___flmul@a+3
  7608  126D  1683               	bsf	3,5	;RP0=1, select bank1
  7609  126E  0826               	movf	(_Vaccum0+2)^(0+128),w
  7610  126F  1283               	bcf	3,5	;RP0=0, select bank0
  7611  1270  00AF               	movwf	___flmul@a+2
  7612  1271  1683               	bsf	3,5	;RP0=1, select bank1
  7613  1272  0825               	movf	(_Vaccum0+1)^(0+128),w
  7614  1273  1283               	bcf	3,5	;RP0=0, select bank0
  7615  1274  00AE               	movwf	___flmul@a+1
  7616  1275  1683               	bsf	3,5	;RP0=1, select bank1
  7617  1276  0824               	movf	_Vaccum0^(0+128),w
  7618  1277  1283               	bcf	3,5	;RP0=0, select bank0
  7619  1278  00AD               	movwf	___flmul@a
  7620  1279  3041               	movlw	65
  7621  127A  00AC               	movwf	___flmul@b+3
  7622  127B  3020               	movlw	32
  7623  127C  00AB               	movwf	___flmul@b+2
  7624  127D  3000               	movlw	0
  7625  127E  00AA               	movwf	___flmul@b+1
  7626  127F  3000               	movlw	0
  7627  1280  00A9               	movwf	___flmul@b
  7628  1281  120A  118A  2389  160A  118A  	fcall	___flmul
  7629  1286  082C               	movf	?___flmul+3,w
  7630  1287  00C6               	movwf	___fltol@f1+3
  7631  1288  082B               	movf	?___flmul+2,w
  7632  1289  00C5               	movwf	___fltol@f1+2
  7633  128A  082A               	movf	?___flmul+1,w
  7634  128B  00C4               	movwf	___fltol@f1+1
  7635  128C  0829               	movf	?___flmul,w
  7636  128D  00C3               	movwf	___fltol@f1
  7637  128E  160A  118A  21BA  160A  118A  	fcall	___fltol
  7638  1293  0844               	movf	?___fltol+1,w
  7639  1294  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7640  1295  0843               	movf	?___fltol,w
  7641  1296  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7642  1297  3001               	movlw	1
  7643  1298  160A  158A  23FF   	fcall	_EEPROM_24C1025_Write_Int
  7644  129B  0008               	return
  7645  129C                     __end_of_Save_Log:	
  7646                           
  7647                           	psect	text22
  7648  11BA                     __ptext22:	
  7649 ;; *************** function ___fltol *****************
  7650 ;; Defined at:
  7651 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  f1              4   35[BANK0 ] void 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  exp1            1   45[BANK0 ] unsigned char 
  7656 ;;  sign1           1   44[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  4   35[BANK0 ] long 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 300/0
  7663 ;;		On exit  : 300/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7666 ;;      Params:         0       4       0       0       0
  7667 ;;      Locals:         0       2       0       0       0
  7668 ;;      Temps:          0       5       0       0       0
  7669 ;;      Totals:         0      11       0       0       0
  7670 ;;Total ram usage:       11 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_Decodify_Command
  7677 ;;		_Save_Log
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function ___fltol
  7683  11BA                     ___fltol:	
  7684                           
  7685                           ;incstack = 0
  7686                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7687  11BA  1003               	clrc
  7688  11BB  0D45               	rlf	___fltol@f1+2,w
  7689  11BC  0D46               	rlf	___fltol@f1+3,w
  7690  11BD  00C7               	movwf	??___fltol
  7691  11BE  0847               	movf	??___fltol,w
  7692  11BF  00CD               	movwf	___fltol@exp1
  7693  11C0  084D               	movf	___fltol@exp1,w
  7694  11C1  1D03               	btfss	3,2
  7695  11C2  29CC               	goto	l5810
  7696  11C3                     l5806:	
  7697  11C3  3000               	movlw	0
  7698  11C4  00C6               	movwf	?___fltol+3
  7699  11C5  3000               	movlw	0
  7700  11C6  00C5               	movwf	?___fltol+2
  7701  11C7  3000               	movlw	0
  7702  11C8  00C4               	movwf	?___fltol+1
  7703  11C9  3000               	movlw	0
  7704  11CA  00C3               	movwf	?___fltol
  7705  11CB  0008               	return
  7706  11CC                     l5810:	
  7707  11CC  0843               	movf	___fltol@f1,w
  7708  11CD  00C7               	movwf	??___fltol
  7709  11CE  0844               	movf	___fltol@f1+1,w
  7710  11CF  00C8               	movwf	??___fltol+1
  7711  11D0  0845               	movf	___fltol@f1+2,w
  7712  11D1  00C9               	movwf	??___fltol+2
  7713  11D2  0846               	movf	___fltol@f1+3,w
  7714  11D3  00CA               	movwf	??___fltol+3
  7715  11D4  301F               	movlw	31
  7716  11D5                     u5635:	
  7717  11D5  1003               	clrc
  7718  11D6  0CCA               	rrf	??___fltol+3,f
  7719  11D7  0CC9               	rrf	??___fltol+2,f
  7720  11D8  0CC8               	rrf	??___fltol+1,f
  7721  11D9  0CC7               	rrf	??___fltol,f
  7722  11DA  3EFF               	addlw	-1
  7723  11DB  1D03               	skipz
  7724  11DC  29D5               	goto	u5635
  7725  11DD  0847               	movf	??___fltol,w
  7726  11DE  00CB               	movwf	??___fltol+4
  7727  11DF  084B               	movf	??___fltol+4,w
  7728  11E0  00CC               	movwf	___fltol@sign1
  7729  11E1  17C5               	bsf	___fltol@f1+2,7
  7730  11E2  30FF               	movlw	255
  7731  11E3  05C3               	andwf	___fltol@f1,f
  7732  11E4  30FF               	movlw	255
  7733  11E5  05C4               	andwf	___fltol@f1+1,f
  7734  11E6  30FF               	movlw	255
  7735  11E7  05C5               	andwf	___fltol@f1+2,f
  7736  11E8  3000               	movlw	0
  7737  11E9  05C6               	andwf	___fltol@f1+3,f
  7738  11EA  3096               	movlw	150
  7739  11EB  02CD               	subwf	___fltol@exp1,f
  7740  11EC  1FCD               	btfss	___fltol@exp1,7
  7741  11ED  2A03               	goto	l5828
  7742  11EE  084D               	movf	___fltol@exp1,w
  7743  11EF  3A80               	xorlw	128
  7744  11F0  3E97               	addlw	151
  7745  11F1  1C03               	btfss	3,0
  7746  11F2  29C3               	goto	l5806
  7747  11F3                     l5826:	
  7748  11F3  3001               	movlw	1
  7749  11F4                     u5665:	
  7750  11F4  1003               	clrc
  7751  11F5  0CC6               	rrf	___fltol@f1+3,f
  7752  11F6  0CC5               	rrf	___fltol@f1+2,f
  7753  11F7  0CC4               	rrf	___fltol@f1+1,f
  7754  11F8  0CC3               	rrf	___fltol@f1,f
  7755  11F9  3EFF               	addlw	-1
  7756  11FA  1D03               	skipz
  7757  11FB  29F4               	goto	u5665
  7758  11FC  3001               	movlw	1
  7759  11FD  00C7               	movwf	??___fltol
  7760  11FE  0847               	movf	??___fltol,w
  7761  11FF  07CD               	addwf	___fltol@exp1,f
  7762  1200  1903               	btfsc	3,2
  7763  1201  2A16               	goto	l5836
  7764  1202  29F3               	goto	l5826
  7765  1203                     l5828:	
  7766  1203  3020               	movlw	32
  7767  1204  024D               	subwf	___fltol@exp1,w
  7768  1205  1803               	btfsc	3,0
  7769  1206  29C3               	goto	l5806
  7770  1207                     l1175:	
  7771  1207  084D               	movf	___fltol@exp1,w
  7772  1208  1903               	btfsc	3,2
  7773  1209  2A16               	goto	l5836
  7774  120A  3001               	movlw	1
  7775  120B  00C7               	movwf	??___fltol
  7776  120C                     u5695:	
  7777  120C  1003               	clrc
  7778  120D  0DC3               	rlf	___fltol@f1,f
  7779  120E  0DC4               	rlf	___fltol@f1+1,f
  7780  120F  0DC5               	rlf	___fltol@f1+2,f
  7781  1210  0DC6               	rlf	___fltol@f1+3,f
  7782  1211  0BC7               	decfsz	??___fltol,f
  7783  1212  2A0C               	goto	u5695
  7784  1213  3001               	movlw	1
  7785  1214  02CD               	subwf	___fltol@exp1,f
  7786  1215  2A07               	goto	l1175
  7787  1216                     l5836:	
  7788  1216  084C               	movf	___fltol@sign1,w
  7789  1217  1903               	btfsc	3,2
  7790  1218  0008               	return
  7791  1219  09C3               	comf	___fltol@f1,f
  7792  121A  09C4               	comf	___fltol@f1+1,f
  7793  121B  09C5               	comf	___fltol@f1+2,f
  7794  121C  09C6               	comf	___fltol@f1+3,f
  7795  121D  0AC3               	incf	___fltol@f1,f
  7796  121E  1903               	skipnz
  7797  121F  0AC4               	incf	___fltol@f1+1,f
  7798  1220  1903               	skipnz
  7799  1221  0AC5               	incf	___fltol@f1+2,f
  7800  1222  1903               	skipnz
  7801  1223  0AC6               	incf	___fltol@f1+3,f
  7802  1224  0008               	return
  7803  1225                     __end_of___fltol:	
  7804                           
  7805                           	psect	text23
  7806  0389                     __ptext23:	
  7807 ;; *************** function ___flmul *****************
  7808 ;; Defined at:
  7809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  b               4    9[BANK0 ] long 
  7812 ;;  a               4   13[BANK0 ] long 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  prod            4   29[BANK0 ] struct .
  7815 ;;  grs             4   25[BANK0 ] unsigned long 
  7816 ;;  temp            2   33[BANK0 ] struct .
  7817 ;;  bexp            1   24[BANK0 ] unsigned char 
  7818 ;;  aexp            1   23[BANK0 ] unsigned char 
  7819 ;;  sign            1   22[BANK0 ] unsigned char 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  4    9[BANK0 ] unsigned char 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 300/0
  7826 ;;		On exit  : 300/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7829 ;;      Params:         0       8       0       0       0
  7830 ;;      Locals:         0      13       0       0       0
  7831 ;;      Temps:          0       5       0       0       0
  7832 ;;      Totals:         0      26       0       0       0
  7833 ;;Total ram usage:       26 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    2
  7836 ;; This function calls:
  7837 ;;		__Umul8_16
  7838 ;; This function is called by:
  7839 ;;		_Decodify_Command
  7840 ;;		_MediaPlacaVaccum
  7841 ;;		_Save_Log
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           
  7846                           ;psect for function ___flmul
  7847  0389                     ___flmul:	
  7848                           
  7849                           ;incstack = 0
  7850                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7851  0389  082C               	movf	___flmul@b+3,w
  7852  038A  3980               	andlw	128
  7853  038B  00B1               	movwf	??___flmul
  7854  038C  0831               	movf	??___flmul,w
  7855  038D  00B6               	movwf	___flmul@sign
  7856  038E  082C               	movf	___flmul@b+3,w
  7857  038F  00B1               	movwf	??___flmul
  7858  0390  0731               	addwf	??___flmul,w
  7859  0391  00B2               	movwf	??___flmul+1
  7860  0392  0832               	movf	??___flmul+1,w
  7861  0393  00B8               	movwf	___flmul@bexp
  7862  0394  1BAB               	btfsc	___flmul@b+2,7
  7863  0395  1438               	bsf	___flmul@bexp,0
  7864  0396  0838               	movf	___flmul@bexp,w
  7865  0397  1903               	btfsc	3,2
  7866  0398  2BA6               	goto	l6076
  7867  0399  0A38               	incf	___flmul@bexp,w
  7868  039A  1D03               	btfss	3,2
  7869  039B  2BA4               	goto	l6074
  7870  039C  3000               	movlw	0
  7871  039D  00AC               	movwf	___flmul@b+3
  7872  039E  3000               	movlw	0
  7873  039F  00AB               	movwf	___flmul@b+2
  7874  03A0  3000               	movlw	0
  7875  03A1  00AA               	movwf	___flmul@b+1
  7876  03A2  3000               	movlw	0
  7877  03A3  00A9               	movwf	___flmul@b
  7878  03A4                     l6074:	
  7879  03A4  17AB               	bsf	___flmul@b+2,7
  7880  03A5  2BAE               	goto	l6078
  7881  03A6                     l6076:	
  7882  03A6  3000               	movlw	0
  7883  03A7  00AC               	movwf	___flmul@b+3
  7884  03A8  3000               	movlw	0
  7885  03A9  00AB               	movwf	___flmul@b+2
  7886  03AA  3000               	movlw	0
  7887  03AB  00AA               	movwf	___flmul@b+1
  7888  03AC  3000               	movlw	0
  7889  03AD  00A9               	movwf	___flmul@b
  7890  03AE                     l6078:	
  7891  03AE  0830               	movf	___flmul@a+3,w
  7892  03AF  3980               	andlw	128
  7893  03B0  00B1               	movwf	??___flmul
  7894  03B1  0831               	movf	??___flmul,w
  7895  03B2  06B6               	xorwf	___flmul@sign,f
  7896  03B3  0830               	movf	___flmul@a+3,w
  7897  03B4  00B1               	movwf	??___flmul
  7898  03B5  0731               	addwf	??___flmul,w
  7899  03B6  00B2               	movwf	??___flmul+1
  7900  03B7  0832               	movf	??___flmul+1,w
  7901  03B8  00B7               	movwf	___flmul@aexp
  7902  03B9  1BAF               	btfsc	___flmul@a+2,7
  7903  03BA  1437               	bsf	___flmul@aexp,0
  7904  03BB  0837               	movf	___flmul@aexp,w
  7905  03BC  1903               	btfsc	3,2
  7906  03BD  2BCB               	goto	l6094
  7907  03BE  0A37               	incf	___flmul@aexp,w
  7908  03BF  1D03               	btfss	3,2
  7909  03C0  2BC9               	goto	l6092
  7910  03C1  3000               	movlw	0
  7911  03C2  00B0               	movwf	___flmul@a+3
  7912  03C3  3000               	movlw	0
  7913  03C4  00AF               	movwf	___flmul@a+2
  7914  03C5  3000               	movlw	0
  7915  03C6  00AE               	movwf	___flmul@a+1
  7916  03C7  3000               	movlw	0
  7917  03C8  00AD               	movwf	___flmul@a
  7918  03C9                     l6092:	
  7919  03C9  17AF               	bsf	___flmul@a+2,7
  7920  03CA  2BD3               	goto	l6096
  7921  03CB                     l6094:	
  7922  03CB  3000               	movlw	0
  7923  03CC  00B0               	movwf	___flmul@a+3
  7924  03CD  3000               	movlw	0
  7925  03CE  00AF               	movwf	___flmul@a+2
  7926  03CF  3000               	movlw	0
  7927  03D0  00AE               	movwf	___flmul@a+1
  7928  03D1  3000               	movlw	0
  7929  03D2  00AD               	movwf	___flmul@a
  7930  03D3                     l6096:	
  7931  03D3  0837               	movf	___flmul@aexp,w
  7932  03D4  1D03               	btfss	3,2
  7933  03D5  0838               	movf	___flmul@bexp,w
  7934  03D6  1D03               	btfss	3,2
  7935  03D7  2BE1               	goto	l6104
  7936  03D8  3000               	movlw	0
  7937  03D9  00AC               	movwf	?___flmul+3
  7938  03DA  3000               	movlw	0
  7939  03DB  00AB               	movwf	?___flmul+2
  7940  03DC  3000               	movlw	0
  7941  03DD  00AA               	movwf	?___flmul+1
  7942  03DE  3000               	movlw	0
  7943  03DF  00A9               	movwf	?___flmul
  7944  03E0  0008               	return
  7945  03E1                     l6104:	
  7946  03E1  0829               	movf	___flmul@b,w
  7947  03E2  00B1               	movwf	??___flmul
  7948  03E3  0831               	movf	??___flmul,w
  7949  03E4  00A0               	movwf	__Umul8_16@multiplicand
  7950  03E5  082F               	movf	___flmul@a+2,w
  7951  03E6  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  7952  03EB  0821               	movf	?__Umul8_16+1,w
  7953  03EC  00C2               	movwf	___flmul@temp+1
  7954  03ED  0820               	movf	?__Umul8_16,w
  7955  03EE  00C1               	movwf	___flmul@temp
  7956  03EF  0841               	movf	___flmul@temp,w
  7957  03F0  00B1               	movwf	??___flmul
  7958  03F1  01B2               	clrf	??___flmul+1
  7959  03F2  01B3               	clrf	??___flmul+2
  7960  03F3  01B4               	clrf	??___flmul+3
  7961  03F4  0834               	movf	??___flmul+3,w
  7962  03F5  00BC               	movwf	___flmul@grs+3
  7963  03F6  0833               	movf	??___flmul+2,w
  7964  03F7  00BB               	movwf	___flmul@grs+2
  7965  03F8  0832               	movf	??___flmul+1,w
  7966  03F9  00BA               	movwf	___flmul@grs+1
  7967  03FA  0831               	movf	??___flmul,w
  7968  03FB  00B9               	movwf	___flmul@grs
  7969  03FC  0842               	movf	___flmul@temp+1,w
  7970  03FD  00B1               	movwf	??___flmul
  7971  03FE  01B2               	clrf	??___flmul+1
  7972  03FF  01B3               	clrf	??___flmul+2
  7973  0400  01B4               	clrf	??___flmul+3
  7974  0401  0834               	movf	??___flmul+3,w
  7975  0402  00C0               	movwf	___flmul@prod+3
  7976  0403  0833               	movf	??___flmul+2,w
  7977  0404  00BF               	movwf	___flmul@prod+2
  7978  0405  0832               	movf	??___flmul+1,w
  7979  0406  00BE               	movwf	___flmul@prod+1
  7980  0407  0831               	movf	??___flmul,w
  7981  0408  00BD               	movwf	___flmul@prod
  7982  0409  082A               	movf	___flmul@b+1,w
  7983  040A  00B1               	movwf	??___flmul
  7984  040B  0831               	movf	??___flmul,w
  7985  040C  00A0               	movwf	__Umul8_16@multiplicand
  7986  040D  082E               	movf	___flmul@a+1,w
  7987  040E  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  7988  0413  0821               	movf	?__Umul8_16+1,w
  7989  0414  00C2               	movwf	___flmul@temp+1
  7990  0415  0820               	movf	?__Umul8_16,w
  7991  0416  00C1               	movwf	___flmul@temp
  7992  0417  0841               	movf	___flmul@temp,w
  7993  0418  00B1               	movwf	??___flmul
  7994  0419  01B2               	clrf	??___flmul+1
  7995  041A  01B3               	clrf	??___flmul+2
  7996  041B  01B4               	clrf	??___flmul+3
  7997  041C  0831               	movf	??___flmul,w
  7998  041D  07B9               	addwf	___flmul@grs,f
  7999  041E  0832               	movf	??___flmul+1,w
  8000  041F  1103               	clrz
  8001  0420  1803               	skipnc
  8002  0421  3E01               	addlw	1
  8003  0422  1D03               	btfss	3,2
  8004  0423  07BA               	addwf	___flmul@grs+1,f
  8005  0424  0833               	movf	??___flmul+2,w
  8006  0425  1103               	clrz
  8007  0426  1803               	skipnc
  8008  0427  3E01               	addlw	1
  8009  0428  1D03               	btfss	3,2
  8010  0429  07BB               	addwf	___flmul@grs+2,f
  8011  042A  0834               	movf	??___flmul+3,w
  8012  042B  1103               	clrz
  8013  042C  1803               	skipnc
  8014  042D  3E01               	addlw	1
  8015  042E  1D03               	btfss	3,2
  8016  042F  07BC               	addwf	___flmul@grs+3,f
  8017  0430  0842               	movf	___flmul@temp+1,w
  8018  0431  00B1               	movwf	??___flmul
  8019  0432  01B2               	clrf	??___flmul+1
  8020  0433  01B3               	clrf	??___flmul+2
  8021  0434  01B4               	clrf	??___flmul+3
  8022  0435  0831               	movf	??___flmul,w
  8023  0436  07BD               	addwf	___flmul@prod,f
  8024  0437  0832               	movf	??___flmul+1,w
  8025  0438  1103               	clrz
  8026  0439  1803               	skipnc
  8027  043A  3E01               	addlw	1
  8028  043B  1D03               	btfss	3,2
  8029  043C  07BE               	addwf	___flmul@prod+1,f
  8030  043D  0833               	movf	??___flmul+2,w
  8031  043E  1103               	clrz
  8032  043F  1803               	skipnc
  8033  0440  3E01               	addlw	1
  8034  0441  1D03               	btfss	3,2
  8035  0442  07BF               	addwf	___flmul@prod+2,f
  8036  0443  0834               	movf	??___flmul+3,w
  8037  0444  1103               	clrz
  8038  0445  1803               	skipnc
  8039  0446  3E01               	addlw	1
  8040  0447  1D03               	btfss	3,2
  8041  0448  07C0               	addwf	___flmul@prod+3,f
  8042  0449  082B               	movf	___flmul@b+2,w
  8043  044A  00B1               	movwf	??___flmul
  8044  044B  0831               	movf	??___flmul,w
  8045  044C  00A0               	movwf	__Umul8_16@multiplicand
  8046  044D  082D               	movf	___flmul@a,w
  8047  044E  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8048  0453  0821               	movf	?__Umul8_16+1,w
  8049  0454  00C2               	movwf	___flmul@temp+1
  8050  0455  0820               	movf	?__Umul8_16,w
  8051  0456  00C1               	movwf	___flmul@temp
  8052  0457  0841               	movf	___flmul@temp,w
  8053  0458  00B1               	movwf	??___flmul
  8054  0459  01B2               	clrf	??___flmul+1
  8055  045A  01B3               	clrf	??___flmul+2
  8056  045B  01B4               	clrf	??___flmul+3
  8057  045C  0831               	movf	??___flmul,w
  8058  045D  07B9               	addwf	___flmul@grs,f
  8059  045E  0832               	movf	??___flmul+1,w
  8060  045F  1103               	clrz
  8061  0460  1803               	skipnc
  8062  0461  3E01               	addlw	1
  8063  0462  1D03               	btfss	3,2
  8064  0463  07BA               	addwf	___flmul@grs+1,f
  8065  0464  0833               	movf	??___flmul+2,w
  8066  0465  1103               	clrz
  8067  0466  1803               	skipnc
  8068  0467  3E01               	addlw	1
  8069  0468  1D03               	btfss	3,2
  8070  0469  07BB               	addwf	___flmul@grs+2,f
  8071  046A  0834               	movf	??___flmul+3,w
  8072  046B  1103               	clrz
  8073  046C  1803               	skipnc
  8074  046D  3E01               	addlw	1
  8075  046E  1D03               	btfss	3,2
  8076  046F  07BC               	addwf	___flmul@grs+3,f
  8077  0470  0842               	movf	___flmul@temp+1,w
  8078  0471  00B1               	movwf	??___flmul
  8079  0472  01B2               	clrf	??___flmul+1
  8080  0473  01B3               	clrf	??___flmul+2
  8081  0474  01B4               	clrf	??___flmul+3
  8082  0475  0831               	movf	??___flmul,w
  8083  0476  07BD               	addwf	___flmul@prod,f
  8084  0477  0832               	movf	??___flmul+1,w
  8085  0478  1103               	clrz
  8086  0479  1803               	skipnc
  8087  047A  3E01               	addlw	1
  8088  047B  1D03               	btfss	3,2
  8089  047C  07BE               	addwf	___flmul@prod+1,f
  8090  047D  0833               	movf	??___flmul+2,w
  8091  047E  1103               	clrz
  8092  047F  1803               	skipnc
  8093  0480  3E01               	addlw	1
  8094  0481  1D03               	btfss	3,2
  8095  0482  07BF               	addwf	___flmul@prod+2,f
  8096  0483  0834               	movf	??___flmul+3,w
  8097  0484  1103               	clrz
  8098  0485  1803               	skipnc
  8099  0486  3E01               	addlw	1
  8100  0487  1D03               	btfss	3,2
  8101  0488  07C0               	addwf	___flmul@prod+3,f
  8102  0489  3008               	movlw	8
  8103  048A  00B1               	movwf	??___flmul
  8104  048B                     u6375:	
  8105  048B  1003               	clrc
  8106  048C  0DB9               	rlf	___flmul@grs,f
  8107  048D  0DBA               	rlf	___flmul@grs+1,f
  8108  048E  0DBB               	rlf	___flmul@grs+2,f
  8109  048F  0DBC               	rlf	___flmul@grs+3,f
  8110  0490  0BB1               	decfsz	??___flmul,f
  8111  0491  2C8B               	goto	u6375
  8112  0492  082A               	movf	___flmul@b+1,w
  8113  0493  00B1               	movwf	??___flmul
  8114  0494  0831               	movf	??___flmul,w
  8115  0495  00A0               	movwf	__Umul8_16@multiplicand
  8116  0496  082D               	movf	___flmul@a,w
  8117  0497  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8118  049C  0821               	movf	?__Umul8_16+1,w
  8119  049D  00C2               	movwf	___flmul@temp+1
  8120  049E  0820               	movf	?__Umul8_16,w
  8121  049F  00C1               	movwf	___flmul@temp
  8122  04A0  0841               	movf	___flmul@temp,w
  8123  04A1  00B1               	movwf	??___flmul
  8124  04A2  0842               	movf	___flmul@temp+1,w
  8125  04A3  00B2               	movwf	??___flmul+1
  8126  04A4  01B3               	clrf	??___flmul+2
  8127  04A5  01B4               	clrf	??___flmul+3
  8128  04A6  0831               	movf	??___flmul,w
  8129  04A7  07B9               	addwf	___flmul@grs,f
  8130  04A8  0832               	movf	??___flmul+1,w
  8131  04A9  1103               	clrz
  8132  04AA  1803               	skipnc
  8133  04AB  3E01               	addlw	1
  8134  04AC  1D03               	btfss	3,2
  8135  04AD  07BA               	addwf	___flmul@grs+1,f
  8136  04AE  0833               	movf	??___flmul+2,w
  8137  04AF  1103               	clrz
  8138  04B0  1803               	skipnc
  8139  04B1  3E01               	addlw	1
  8140  04B2  1D03               	btfss	3,2
  8141  04B3  07BB               	addwf	___flmul@grs+2,f
  8142  04B4  0834               	movf	??___flmul+3,w
  8143  04B5  1103               	clrz
  8144  04B6  1803               	skipnc
  8145  04B7  3E01               	addlw	1
  8146  04B8  1D03               	btfss	3,2
  8147  04B9  07BC               	addwf	___flmul@grs+3,f
  8148  04BA  0829               	movf	___flmul@b,w
  8149  04BB  00B1               	movwf	??___flmul
  8150  04BC  0831               	movf	??___flmul,w
  8151  04BD  00A0               	movwf	__Umul8_16@multiplicand
  8152  04BE  082E               	movf	___flmul@a+1,w
  8153  04BF  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8154  04C4  0821               	movf	?__Umul8_16+1,w
  8155  04C5  00C2               	movwf	___flmul@temp+1
  8156  04C6  0820               	movf	?__Umul8_16,w
  8157  04C7  00C1               	movwf	___flmul@temp
  8158  04C8  0841               	movf	___flmul@temp,w
  8159  04C9  00B1               	movwf	??___flmul
  8160  04CA  0842               	movf	___flmul@temp+1,w
  8161  04CB  00B2               	movwf	??___flmul+1
  8162  04CC  01B3               	clrf	??___flmul+2
  8163  04CD  01B4               	clrf	??___flmul+3
  8164  04CE  0831               	movf	??___flmul,w
  8165  04CF  07B9               	addwf	___flmul@grs,f
  8166  04D0  0832               	movf	??___flmul+1,w
  8167  04D1  1103               	clrz
  8168  04D2  1803               	skipnc
  8169  04D3  3E01               	addlw	1
  8170  04D4  1D03               	btfss	3,2
  8171  04D5  07BA               	addwf	___flmul@grs+1,f
  8172  04D6  0833               	movf	??___flmul+2,w
  8173  04D7  1103               	clrz
  8174  04D8  1803               	skipnc
  8175  04D9  3E01               	addlw	1
  8176  04DA  1D03               	btfss	3,2
  8177  04DB  07BB               	addwf	___flmul@grs+2,f
  8178  04DC  0834               	movf	??___flmul+3,w
  8179  04DD  1103               	clrz
  8180  04DE  1803               	skipnc
  8181  04DF  3E01               	addlw	1
  8182  04E0  1D03               	btfss	3,2
  8183  04E1  07BC               	addwf	___flmul@grs+3,f
  8184  04E2  3008               	movlw	8
  8185  04E3  00B1               	movwf	??___flmul
  8186  04E4                     u6405:	
  8187  04E4  1003               	clrc
  8188  04E5  0DB9               	rlf	___flmul@grs,f
  8189  04E6  0DBA               	rlf	___flmul@grs+1,f
  8190  04E7  0DBB               	rlf	___flmul@grs+2,f
  8191  04E8  0DBC               	rlf	___flmul@grs+3,f
  8192  04E9  0BB1               	decfsz	??___flmul,f
  8193  04EA  2CE4               	goto	u6405
  8194  04EB  0829               	movf	___flmul@b,w
  8195  04EC  00B1               	movwf	??___flmul
  8196  04ED  0831               	movf	??___flmul,w
  8197  04EE  00A0               	movwf	__Umul8_16@multiplicand
  8198  04EF  082D               	movf	___flmul@a,w
  8199  04F0  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8200  04F5  0821               	movf	?__Umul8_16+1,w
  8201  04F6  00C2               	movwf	___flmul@temp+1
  8202  04F7  0820               	movf	?__Umul8_16,w
  8203  04F8  00C1               	movwf	___flmul@temp
  8204  04F9  0841               	movf	___flmul@temp,w
  8205  04FA  00B1               	movwf	??___flmul
  8206  04FB  0842               	movf	___flmul@temp+1,w
  8207  04FC  00B2               	movwf	??___flmul+1
  8208  04FD  01B3               	clrf	??___flmul+2
  8209  04FE  01B4               	clrf	??___flmul+3
  8210  04FF  0831               	movf	??___flmul,w
  8211  0500  07B9               	addwf	___flmul@grs,f
  8212  0501  0832               	movf	??___flmul+1,w
  8213  0502  1103               	clrz
  8214  0503  1803               	skipnc
  8215  0504  3E01               	addlw	1
  8216  0505  1D03               	btfss	3,2
  8217  0506  07BA               	addwf	___flmul@grs+1,f
  8218  0507  0833               	movf	??___flmul+2,w
  8219  0508  1103               	clrz
  8220  0509  1803               	skipnc
  8221  050A  3E01               	addlw	1
  8222  050B  1D03               	btfss	3,2
  8223  050C  07BB               	addwf	___flmul@grs+2,f
  8224  050D  0834               	movf	??___flmul+3,w
  8225  050E  1103               	clrz
  8226  050F  1803               	skipnc
  8227  0510  3E01               	addlw	1
  8228  0511  1D03               	btfss	3,2
  8229  0512  07BC               	addwf	___flmul@grs+3,f
  8230  0513  082A               	movf	___flmul@b+1,w
  8231  0514  00B1               	movwf	??___flmul
  8232  0515  0831               	movf	??___flmul,w
  8233  0516  00A0               	movwf	__Umul8_16@multiplicand
  8234  0517  082F               	movf	___flmul@a+2,w
  8235  0518  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8236  051D  0821               	movf	?__Umul8_16+1,w
  8237  051E  00C2               	movwf	___flmul@temp+1
  8238  051F  0820               	movf	?__Umul8_16,w
  8239  0520  00C1               	movwf	___flmul@temp
  8240  0521  0841               	movf	___flmul@temp,w
  8241  0522  00B1               	movwf	??___flmul
  8242  0523  0842               	movf	___flmul@temp+1,w
  8243  0524  00B2               	movwf	??___flmul+1
  8244  0525  01B3               	clrf	??___flmul+2
  8245  0526  01B4               	clrf	??___flmul+3
  8246  0527  0831               	movf	??___flmul,w
  8247  0528  07BD               	addwf	___flmul@prod,f
  8248  0529  0832               	movf	??___flmul+1,w
  8249  052A  1103               	clrz
  8250  052B  1803               	skipnc
  8251  052C  3E01               	addlw	1
  8252  052D  1D03               	btfss	3,2
  8253  052E  07BE               	addwf	___flmul@prod+1,f
  8254  052F  0833               	movf	??___flmul+2,w
  8255  0530  1103               	clrz
  8256  0531  1803               	skipnc
  8257  0532  3E01               	addlw	1
  8258  0533  1D03               	btfss	3,2
  8259  0534  07BF               	addwf	___flmul@prod+2,f
  8260  0535  0834               	movf	??___flmul+3,w
  8261  0536  1103               	clrz
  8262  0537  1803               	skipnc
  8263  0538  3E01               	addlw	1
  8264  0539  1D03               	btfss	3,2
  8265  053A  07C0               	addwf	___flmul@prod+3,f
  8266  053B  082B               	movf	___flmul@b+2,w
  8267  053C  00B1               	movwf	??___flmul
  8268  053D  0831               	movf	??___flmul,w
  8269  053E  00A0               	movwf	__Umul8_16@multiplicand
  8270  053F  082E               	movf	___flmul@a+1,w
  8271  0540  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8272  0545  0821               	movf	?__Umul8_16+1,w
  8273  0546  00C2               	movwf	___flmul@temp+1
  8274  0547  0820               	movf	?__Umul8_16,w
  8275  0548  00C1               	movwf	___flmul@temp
  8276  0549  0841               	movf	___flmul@temp,w
  8277  054A  00B1               	movwf	??___flmul
  8278  054B  0842               	movf	___flmul@temp+1,w
  8279  054C  00B2               	movwf	??___flmul+1
  8280  054D  01B3               	clrf	??___flmul+2
  8281  054E  01B4               	clrf	??___flmul+3
  8282  054F  0831               	movf	??___flmul,w
  8283  0550  07BD               	addwf	___flmul@prod,f
  8284  0551  0832               	movf	??___flmul+1,w
  8285  0552  1103               	clrz
  8286  0553  1803               	skipnc
  8287  0554  3E01               	addlw	1
  8288  0555  1D03               	btfss	3,2
  8289  0556  07BE               	addwf	___flmul@prod+1,f
  8290  0557  0833               	movf	??___flmul+2,w
  8291  0558  1103               	clrz
  8292  0559  1803               	skipnc
  8293  055A  3E01               	addlw	1
  8294  055B  1D03               	btfss	3,2
  8295  055C  07BF               	addwf	___flmul@prod+2,f
  8296  055D  0834               	movf	??___flmul+3,w
  8297  055E  1103               	clrz
  8298  055F  1803               	skipnc
  8299  0560  3E01               	addlw	1
  8300  0561  1D03               	btfss	3,2
  8301  0562  07C0               	addwf	___flmul@prod+3,f
  8302  0563  082B               	movf	___flmul@b+2,w
  8303  0564  00B1               	movwf	??___flmul
  8304  0565  0831               	movf	??___flmul,w
  8305  0566  00A0               	movwf	__Umul8_16@multiplicand
  8306  0567  082F               	movf	___flmul@a+2,w
  8307  0568  160A  158A  24A1  120A  118A  	fcall	__Umul8_16
  8308  056D  0821               	movf	?__Umul8_16+1,w
  8309  056E  00C2               	movwf	___flmul@temp+1
  8310  056F  0820               	movf	?__Umul8_16,w
  8311  0570  00C1               	movwf	___flmul@temp
  8312  0571  0841               	movf	___flmul@temp,w
  8313  0572  00B1               	movwf	??___flmul
  8314  0573  0842               	movf	___flmul@temp+1,w
  8315  0574  00B2               	movwf	??___flmul+1
  8316  0575  01B3               	clrf	??___flmul+2
  8317  0576  01B4               	clrf	??___flmul+3
  8318  0577  3008               	movlw	8
  8319  0578                     u6445:	
  8320  0578  1003               	clrc
  8321  0579  0DB1               	rlf	??___flmul,f
  8322  057A  0DB2               	rlf	??___flmul+1,f
  8323  057B  0DB3               	rlf	??___flmul+2,f
  8324  057C  0DB4               	rlf	??___flmul+3,f
  8325  057D  3EFF               	addlw	-1
  8326  057E  1D03               	skipz
  8327  057F  2D78               	goto	u6445
  8328  0580  0831               	movf	??___flmul,w
  8329  0581  07BD               	addwf	___flmul@prod,f
  8330  0582  0832               	movf	??___flmul+1,w
  8331  0583  1103               	clrz
  8332  0584  1803               	skipnc
  8333  0585  3E01               	addlw	1
  8334  0586  1D03               	btfss	3,2
  8335  0587  07BE               	addwf	___flmul@prod+1,f
  8336  0588  0833               	movf	??___flmul+2,w
  8337  0589  1103               	clrz
  8338  058A  1803               	skipnc
  8339  058B  3E01               	addlw	1
  8340  058C  1D03               	btfss	3,2
  8341  058D  07BF               	addwf	___flmul@prod+2,f
  8342  058E  0834               	movf	??___flmul+3,w
  8343  058F  1103               	clrz
  8344  0590  1803               	skipnc
  8345  0591  3E01               	addlw	1
  8346  0592  1D03               	btfss	3,2
  8347  0593  07C0               	addwf	___flmul@prod+3,f
  8348  0594  083C               	movf	___flmul@grs+3,w
  8349  0595  00B1               	movwf	??___flmul
  8350  0596  01B2               	clrf	??___flmul+1
  8351  0597  01B3               	clrf	??___flmul+2
  8352  0598  01B4               	clrf	??___flmul+3
  8353  0599  0831               	movf	??___flmul,w
  8354  059A  07BD               	addwf	___flmul@prod,f
  8355  059B  0832               	movf	??___flmul+1,w
  8356  059C  1103               	clrz
  8357  059D  1803               	skipnc
  8358  059E  3E01               	addlw	1
  8359  059F  1D03               	btfss	3,2
  8360  05A0  07BE               	addwf	___flmul@prod+1,f
  8361  05A1  0833               	movf	??___flmul+2,w
  8362  05A2  1103               	clrz
  8363  05A3  1803               	skipnc
  8364  05A4  3E01               	addlw	1
  8365  05A5  1D03               	btfss	3,2
  8366  05A6  07BF               	addwf	___flmul@prod+2,f
  8367  05A7  0834               	movf	??___flmul+3,w
  8368  05A8  1103               	clrz
  8369  05A9  1803               	skipnc
  8370  05AA  3E01               	addlw	1
  8371  05AB  1D03               	btfss	3,2
  8372  05AC  07C0               	addwf	___flmul@prod+3,f
  8373  05AD  3008               	movlw	8
  8374  05AE  00B1               	movwf	??___flmul
  8375  05AF                     u6475:	
  8376  05AF  1003               	clrc
  8377  05B0  0DB9               	rlf	___flmul@grs,f
  8378  05B1  0DBA               	rlf	___flmul@grs+1,f
  8379  05B2  0DBB               	rlf	___flmul@grs+2,f
  8380  05B3  0DBC               	rlf	___flmul@grs+3,f
  8381  05B4  0BB1               	decfsz	??___flmul,f
  8382  05B5  2DAF               	goto	u6475
  8383  05B6  0838               	movf	___flmul@bexp,w
  8384  05B7  0737               	addwf	___flmul@aexp,w
  8385  05B8  00B1               	movwf	??___flmul
  8386  05B9  01B2               	clrf	??___flmul+1
  8387  05BA  0DB2               	rlf	??___flmul+1,f
  8388  05BB  0831               	movf	??___flmul,w
  8389  05BC  3E82               	addlw	130
  8390  05BD  00C1               	movwf	___flmul@temp
  8391  05BE  0832               	movf	??___flmul+1,w
  8392  05BF  1803               	skipnc
  8393  05C0  3E01               	addlw	1
  8394  05C1  3EFF               	addlw	255
  8395  05C2  00C2               	movwf	___flmul@temp+1
  8396  05C3                     l6156:	
  8397  05C3  1BBF               	btfsc	___flmul@prod+2,7
  8398  05C4  2DE0               	goto	l6158
  8399  05C5  3001               	movlw	1
  8400  05C6  00B1               	movwf	??___flmul
  8401  05C7                     u6485:	
  8402  05C7  1003               	clrc
  8403  05C8  0DBD               	rlf	___flmul@prod,f
  8404  05C9  0DBE               	rlf	___flmul@prod+1,f
  8405  05CA  0DBF               	rlf	___flmul@prod+2,f
  8406  05CB  0DC0               	rlf	___flmul@prod+3,f
  8407  05CC  0BB1               	decfsz	??___flmul,f
  8408  05CD  2DC7               	goto	u6485
  8409  05CE  1BBC               	btfsc	___flmul@grs+3,7
  8410  05CF  143D               	bsf	___flmul@prod,0
  8411  05D0  3001               	movlw	1
  8412  05D1  00B1               	movwf	??___flmul
  8413  05D2                     u6505:	
  8414  05D2  1003               	clrc
  8415  05D3  0DB9               	rlf	___flmul@grs,f
  8416  05D4  0DBA               	rlf	___flmul@grs+1,f
  8417  05D5  0DBB               	rlf	___flmul@grs+2,f
  8418  05D6  0DBC               	rlf	___flmul@grs+3,f
  8419  05D7  0BB1               	decfsz	??___flmul,f
  8420  05D8  2DD2               	goto	u6505
  8421  05D9  30FF               	movlw	255
  8422  05DA  07C1               	addwf	___flmul@temp,f
  8423  05DB  1803               	skipnc
  8424  05DC  0AC2               	incf	___flmul@temp+1,f
  8425  05DD  30FF               	movlw	255
  8426  05DE  07C2               	addwf	___flmul@temp+1,f
  8427  05DF  2DC3               	goto	l6156
  8428  05E0                     l6158:	
  8429  05E0  01B7               	clrf	___flmul@aexp
  8430  05E1  1FBC               	btfss	___flmul@grs+3,7
  8431  05E2  2DF9               	goto	l6168
  8432  05E3  30FF               	movlw	255
  8433  05E4  0539               	andwf	___flmul@grs,w
  8434  05E5  00B1               	movwf	??___flmul
  8435  05E6  30FF               	movlw	255
  8436  05E7  053A               	andwf	___flmul@grs+1,w
  8437  05E8  00B2               	movwf	??___flmul+1
  8438  05E9  30FF               	movlw	255
  8439  05EA  053B               	andwf	___flmul@grs+2,w
  8440  05EB  00B3               	movwf	??___flmul+2
  8441  05EC  307F               	movlw	127
  8442  05ED  053C               	andwf	___flmul@grs+3,w
  8443  05EE  00B4               	movwf	??___flmul+3
  8444  05EF  0834               	movf	??___flmul+3,w
  8445  05F0  0433               	iorwf	??___flmul+2,w
  8446  05F1  0432               	iorwf	??___flmul+1,w
  8447  05F2  0431               	iorwf	??___flmul,w
  8448  05F3  1903               	skipnz
  8449  05F4  183D               	btfsc	___flmul@prod,0
  8450  05F5  2DF7               	goto	l6164
  8451  05F6  2DF9               	goto	l6168
  8452  05F7                     l6164:	
  8453  05F7  01B7               	clrf	___flmul@aexp
  8454  05F8  0AB7               	incf	___flmul@aexp,f
  8455  05F9                     l6168:	
  8456  05F9  0837               	movf	___flmul@aexp,w
  8457  05FA  1903               	btfsc	3,2
  8458  05FB  2E2B               	goto	l6178
  8459  05FC  3001               	movlw	1
  8460  05FD  07BD               	addwf	___flmul@prod,f
  8461  05FE  3000               	movlw	0
  8462  05FF  1803               	skipnc
  8463  0600  3001               	movlw	1
  8464  0601  07BE               	addwf	___flmul@prod+1,f
  8465  0602  3000               	movlw	0
  8466  0603  1803               	skipnc
  8467  0604  3001               	movlw	1
  8468  0605  07BF               	addwf	___flmul@prod+2,f
  8469  0606  3000               	movlw	0
  8470  0607  1803               	skipnc
  8471  0608  3001               	movlw	1
  8472  0609  07C0               	addwf	___flmul@prod+3,f
  8473  060A  1C40               	btfss	___flmul@prod+3,0
  8474  060B  2E2B               	goto	l6178
  8475  060C  083D               	movf	___flmul@prod,w
  8476  060D  00B1               	movwf	??___flmul
  8477  060E  083E               	movf	___flmul@prod+1,w
  8478  060F  00B2               	movwf	??___flmul+1
  8479  0610  083F               	movf	___flmul@prod+2,w
  8480  0611  00B3               	movwf	??___flmul+2
  8481  0612  0840               	movf	___flmul@prod+3,w
  8482  0613  00B4               	movwf	??___flmul+3
  8483  0614  3001               	movlw	1
  8484  0615  00B5               	movwf	??___flmul+4
  8485  0616                     u6575:	
  8486  0616  0D34               	rlf	??___flmul+3,w
  8487  0617  0CB4               	rrf	??___flmul+3,f
  8488  0618  0CB3               	rrf	??___flmul+2,f
  8489  0619  0CB2               	rrf	??___flmul+1,f
  8490  061A  0CB1               	rrf	??___flmul,f
  8491  061B  0BB5               	decfsz	??___flmul+4,f
  8492  061C  2E16               	goto	u6575
  8493  061D  0834               	movf	??___flmul+3,w
  8494  061E  00C0               	movwf	___flmul@prod+3
  8495  061F  0833               	movf	??___flmul+2,w
  8496  0620  00BF               	movwf	___flmul@prod+2
  8497  0621  0832               	movf	??___flmul+1,w
  8498  0622  00BE               	movwf	___flmul@prod+1
  8499  0623  0831               	movf	??___flmul,w
  8500  0624  00BD               	movwf	___flmul@prod
  8501  0625  3001               	movlw	1
  8502  0626  07C1               	addwf	___flmul@temp,f
  8503  0627  1803               	skipnc
  8504  0628  0AC2               	incf	___flmul@temp+1,f
  8505  0629  3000               	movlw	0
  8506  062A  07C2               	addwf	___flmul@temp+1,f
  8507  062B                     l6178:	
  8508  062B  0842               	movf	___flmul@temp+1,w
  8509  062C  3A80               	xorlw	128
  8510  062D  00FF               	movwf	127
  8511  062E  3080               	movlw	128
  8512  062F  027F               	subwf	127,w
  8513  0630  1D03               	skipz
  8514  0631  2E34               	goto	u6585
  8515  0632  30FF               	movlw	255
  8516  0633  0241               	subwf	___flmul@temp,w
  8517  0634                     u6585:	
  8518  0634  1C03               	skipc
  8519  0635  2E41               	goto	l6182
  8520  0636  307F               	movlw	127
  8521  0637  1283               	bcf	3,5	;RP0=0, select bank0
  8522  0638  1303               	bcf	3,6	;RP1=0, select bank0
  8523  0639  00C0               	movwf	___flmul@prod+3
  8524  063A  3080               	movlw	128
  8525  063B  00BF               	movwf	___flmul@prod+2
  8526  063C  3000               	movlw	0
  8527  063D  00BE               	movwf	___flmul@prod+1
  8528  063E  3000               	movlw	0
  8529  063F  00BD               	movwf	___flmul@prod
  8530  0640  2E71               	goto	l1383
  8531  0641                     l6182:	
  8532  0641  1283               	bcf	3,5	;RP0=0, select bank0
  8533  0642  1303               	bcf	3,6	;RP1=0, select bank0
  8534  0643  0842               	movf	___flmul@temp+1,w
  8535  0644  3A80               	xorlw	128
  8536  0645  00FF               	movwf	127
  8537  0646  3080               	movlw	128
  8538  0647  027F               	subwf	127,w
  8539  0648  1D03               	skipz
  8540  0649  2E4C               	goto	u6595
  8541  064A  3001               	movlw	1
  8542  064B  0241               	subwf	___flmul@temp,w
  8543  064C                     u6595:	
  8544  064C  1803               	skipnc
  8545  064D  2E5A               	goto	l6188
  8546  064E  3000               	movlw	0
  8547  064F  1283               	bcf	3,5	;RP0=0, select bank0
  8548  0650  1303               	bcf	3,6	;RP1=0, select bank0
  8549  0651  00C0               	movwf	___flmul@prod+3
  8550  0652  3000               	movlw	0
  8551  0653  00BF               	movwf	___flmul@prod+2
  8552  0654  3000               	movlw	0
  8553  0655  00BE               	movwf	___flmul@prod+1
  8554  0656  3000               	movlw	0
  8555  0657  00BD               	movwf	___flmul@prod
  8556  0658  01B6               	clrf	___flmul@sign
  8557  0659  2E71               	goto	l1383
  8558  065A                     l6188:	
  8559  065A  1283               	bcf	3,5	;RP0=0, select bank0
  8560  065B  1303               	bcf	3,6	;RP1=0, select bank0
  8561  065C  0841               	movf	___flmul@temp,w
  8562  065D  00B1               	movwf	??___flmul
  8563  065E  0831               	movf	??___flmul,w
  8564  065F  00B8               	movwf	___flmul@bexp
  8565  0660  30FF               	movlw	255
  8566  0661  05BD               	andwf	___flmul@prod,f
  8567  0662  30FF               	movlw	255
  8568  0663  05BE               	andwf	___flmul@prod+1,f
  8569  0664  307F               	movlw	127
  8570  0665  05BF               	andwf	___flmul@prod+2,f
  8571  0666  3000               	movlw	0
  8572  0667  05C0               	andwf	___flmul@prod+3,f
  8573  0668  1838               	btfsc	___flmul@bexp,0
  8574  0669  17BF               	bsf	___flmul@prod+2,7
  8575  066A  0838               	movf	___flmul@bexp,w
  8576  066B  00B1               	movwf	??___flmul
  8577  066C  1003               	clrc
  8578  066D  0C31               	rrf	??___flmul,w
  8579  066E  00B2               	movwf	??___flmul+1
  8580  066F  0832               	movf	??___flmul+1,w
  8581  0670  00C0               	movwf	___flmul@prod+3
  8582  0671                     l1383:	
  8583  0671  0836               	movf	___flmul@sign,w
  8584  0672  00B1               	movwf	??___flmul
  8585  0673  0831               	movf	??___flmul,w
  8586  0674  04C0               	iorwf	___flmul@prod+3,f
  8587  0675  0840               	movf	___flmul@prod+3,w
  8588  0676  00AC               	movwf	?___flmul+3
  8589  0677  083F               	movf	___flmul@prod+2,w
  8590  0678  00AB               	movwf	?___flmul+2
  8591  0679  083E               	movf	___flmul@prod+1,w
  8592  067A  00AA               	movwf	?___flmul+1
  8593  067B  083D               	movf	___flmul@prod,w
  8594  067C  00A9               	movwf	?___flmul
  8595  067D  0008               	return
  8596  067E                     __end_of___flmul:	
  8597                           
  8598                           	psect	text24
  8599  1CA1                     __ptext24:	
  8600 ;; *************** function __Umul8_16 *****************
  8601 ;; Defined at:
  8602 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  multiplier      1    wreg     unsigned char 
  8605 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8608 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8609 ;;  product         2    4[BANK0 ] unsigned int 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  2    0[BANK0 ] unsigned int 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0
  8614 ;; Tracked objects:
  8615 ;;		On entry : 300/0
  8616 ;;		On exit  : 300/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8619 ;;      Params:         0       2       0       0       0
  8620 ;;      Locals:         0       5       0       0       0
  8621 ;;      Temps:          0       2       0       0       0
  8622 ;;      Totals:         0       9       0       0       0
  8623 ;;Total ram usage:        9 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    1
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		___flmul
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function __Umul8_16
  8635  1CA1                     __Umul8_16:	
  8636                           
  8637                           ;incstack = 0
  8638                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8639                           ;__Umul8_16@multiplier stored from wreg
  8640  1CA1  00A8               	movwf	__Umul8_16@multiplier
  8641  1CA2  01A4               	clrf	__Umul8_16@product
  8642  1CA3  01A5               	clrf	__Umul8_16@product+1
  8643  1CA4  0820               	movf	__Umul8_16@multiplicand,w
  8644  1CA5  00A2               	movwf	??__Umul8_16
  8645  1CA6  01A3               	clrf	??__Umul8_16+1
  8646  1CA7  0822               	movf	??__Umul8_16,w
  8647  1CA8  00A6               	movwf	__Umul8_16@word_mpld
  8648  1CA9  0823               	movf	??__Umul8_16+1,w
  8649  1CAA  00A7               	movwf	__Umul8_16@word_mpld+1
  8650  1CAB                     l5594:	
  8651  1CAB  1C28               	btfss	__Umul8_16@multiplier,0
  8652  1CAC  2CB3               	goto	l1450
  8653  1CAD  0826               	movf	__Umul8_16@word_mpld,w
  8654  1CAE  07A4               	addwf	__Umul8_16@product,f
  8655  1CAF  1803               	skipnc
  8656  1CB0  0AA5               	incf	__Umul8_16@product+1,f
  8657  1CB1  0827               	movf	__Umul8_16@word_mpld+1,w
  8658  1CB2  07A5               	addwf	__Umul8_16@product+1,f
  8659  1CB3                     l1450:	
  8660  1CB3  3001               	movlw	1
  8661  1CB4                     u5445:	
  8662  1CB4  1003               	clrc
  8663  1CB5  0DA6               	rlf	__Umul8_16@word_mpld,f
  8664  1CB6  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8665  1CB7  3EFF               	addlw	-1
  8666  1CB8  1D03               	skipz
  8667  1CB9  2CB4               	goto	u5445
  8668  1CBA  1003               	clrc
  8669  1CBB  0CA8               	rrf	__Umul8_16@multiplier,f
  8670  1CBC  0828               	movf	__Umul8_16@multiplier,w
  8671  1CBD  1D03               	btfss	3,2
  8672  1CBE  2CAB               	goto	l5594
  8673  1CBF  0825               	movf	__Umul8_16@product+1,w
  8674  1CC0  00A1               	movwf	?__Umul8_16+1
  8675  1CC1  0824               	movf	__Umul8_16@product,w
  8676  1CC2  00A0               	movwf	?__Umul8_16
  8677  1CC3  0008               	return
  8678  1CC4                     __end_of__Umul8_16:	
  8679                           
  8680                           	psect	text25
  8681  1B65                     __ptext25:	
  8682 ;; *************** function _PROCULUS_VP_Write_String *****************
  8683 ;; Defined at:
  8684 ;;		line 205 in file "proculus.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  vp              2   56[BANK0 ] unsigned int 
  8687 ;;  text            1   58[BANK0 ] PTR unsigned char 
  8688 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 300/0
  8697 ;;		On exit  : 300/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8700 ;;      Params:         0       3       0       0       0
  8701 ;;      Locals:         0       0       0       0       0
  8702 ;;      Temps:          0       2       0       0       0
  8703 ;;      Totals:         0       5       0       0       0
  8704 ;;Total ram usage:        5 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    4
  8707 ;; This function calls:
  8708 ;;		_PROCULUS_VP_Write
  8709 ;;		_strlen
  8710 ;; This function is called by:
  8711 ;;		_Decodify_Command
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _PROCULUS_VP_Write_String
  8717  1B65                     _PROCULUS_VP_Write_String:	
  8718                           
  8719                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8723  1B65  0859               	movf	PROCULUS_VP_Write_String@vp+1,w
  8724  1B66  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8725  1B67  0858               	movf	PROCULUS_VP_Write_String@vp,w
  8726  1B68  00D2               	movwf	PROCULUS_VP_Write@vp
  8727  1B69  085A               	movf	PROCULUS_VP_Write_String@text,w
  8728  1B6A  00DB               	movwf	??_PROCULUS_VP_Write_String
  8729  1B6B  085B               	movf	??_PROCULUS_VP_Write_String,w
  8730  1B6C  00D4               	movwf	PROCULUS_VP_Write@vetor
  8731  1B6D  085A               	movf	PROCULUS_VP_Write_String@text,w
  8732  1B6E  160A  158A  23AB  160A  158A  	fcall	_strlen
  8733  1B73  0820               	movf	?_strlen,w
  8734  1B74  3E01               	addlw	1
  8735  1B75  00DC               	movwf	??_PROCULUS_VP_Write_String+1
  8736  1B76  085C               	movf	??_PROCULUS_VP_Write_String+1,w
  8737  1B77  00D5               	movwf	PROCULUS_VP_Write@size
  8738  1B78  160A  118A  2067   	fcall	_PROCULUS_VP_Write
  8739  1B7B  0008               	return
  8740  1B7C                     __end_of_PROCULUS_VP_Write_String:	
  8741                           
  8742                           	psect	text26
  8743  1BAB                     __ptext26:	
  8744 ;; *************** function _strlen *****************
  8745 ;; Defined at:
  8746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  s               1    wreg     PTR const unsigned char 
  8749 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8752 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8753 ;;  cp              1    4[BANK0 ] PTR const unsigned char 
  8754 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  2    0[BANK0 ] unsigned int 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : B00/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8764 ;;      Params:         0       2       0       0       0
  8765 ;;      Locals:         0       2       0       0       0
  8766 ;;      Temps:          0       1       0       0       0
  8767 ;;      Totals:         0       5       0       0       0
  8768 ;;Total ram usage:        5 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:    1
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_Decodify_Command
  8775 ;;		_PROCULUS_VP_Write_String
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           
  8780                           ;psect for function _strlen
  8781  1BAB                     _strlen:	
  8782                           
  8783                           ;incstack = 0
  8784                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8785                           ;strlen@s stored from wreg
  8786  1BAB  1283               	bcf	3,5	;RP0=0, select bank0
  8787  1BAC  1303               	bcf	3,6	;RP1=0, select bank0
  8788  1BAD  00A3               	movwf	strlen@s
  8789  1BAE  0823               	movf	strlen@s,w
  8790  1BAF  00A2               	movwf	??_strlen
  8791  1BB0  0822               	movf	??_strlen,w
  8792  1BB1  00A4               	movwf	strlen@cp
  8793  1BB2                     l5754:	
  8794  1BB2  0824               	movf	strlen@cp,w
  8795  1BB3  0084               	movwf	4
  8796  1BB4  1383               	bcf	3,7	;select IRP bank0
  8797  1BB5  0800               	movf	0,w
  8798  1BB6  1903               	btfsc	3,2
  8799  1BB7  2BBD               	goto	l5756
  8800  1BB8  3001               	movlw	1
  8801  1BB9  00A2               	movwf	??_strlen
  8802  1BBA  0822               	movf	??_strlen,w
  8803  1BBB  07A4               	addwf	strlen@cp,f
  8804  1BBC  2BB2               	goto	l5754
  8805  1BBD                     l5756:	
  8806  1BBD  0823               	movf	strlen@s,w
  8807  1BBE  0224               	subwf	strlen@cp,w
  8808  1BBF  00A0               	movwf	?_strlen
  8809  1BC0  01A1               	clrf	?_strlen+1
  8810  1BC1  1BA0               	btfsc	?_strlen,7
  8811  1BC2  03A1               	decf	?_strlen+1,f
  8812  1BC3  0008               	return
  8813  1BC4                     __end_of_strlen:	
  8814                           
  8815                           	psect	text27
  8816  1067                     __ptext27:	
  8817 ;; *************** function _PROCULUS_VP_Write *****************
  8818 ;; Defined at:
  8819 ;;		line 40 in file "proculus.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  vp              2   50[BANK0 ] unsigned int 
  8822 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  8823 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8824 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  8825 ;;  size            1   53[BANK0 ] unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  i               1   55[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : B00/0
  8834 ;;		On exit  : 300/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       4       0       0       0
  8838 ;;      Locals:         0       1       0       0       0
  8839 ;;      Temps:          0       1       0       0       0
  8840 ;;      Totals:         0       6       0       0       0
  8841 ;;Total ram usage:        6 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    3
  8844 ;; This function calls:
  8845 ;;		_PROCULUS_Delay
  8846 ;;		_USART_put_int
  8847 ;;		_USART_putc
  8848 ;; This function is called by:
  8849 ;;		_PROCULUS_VP_Write_String
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           
  8854                           ;psect for function _PROCULUS_VP_Write
  8855  1067                     _PROCULUS_VP_Write:	
  8856                           
  8857                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8858                           
  8859                           ;incstack = 0
  8860                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8861  1067  30A5               	movlw	165
  8862  1068  00CE               	movwf	USART_put_int@value
  8863  1069  305A               	movlw	90
  8864  106A  00CF               	movwf	USART_put_int@value+1
  8865  106B  160A  158A  234F  160A  118A  	fcall	_USART_put_int
  8866                           
  8867                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8868  1070  1283               	bcf	3,5	;RP0=0, select bank0
  8869  1071  0855               	movf	PROCULUS_VP_Write@size,w
  8870  1072  3E03               	addlw	3
  8871  1073  160A  158A  2305  160A  118A  	fcall	_USART_putc
  8872                           
  8873                           ;proculus.c: 43:      USART_putc(0x82);
  8874  1078  3082               	movlw	130
  8875  1079  160A  158A  2305  160A  118A  	fcall	_USART_putc
  8876                           
  8877                           ;proculus.c: 44:      USART_put_int(vp);
  8878  107E  1283               	bcf	3,5	;RP0=0, select bank0
  8879  107F  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8880  1080  00CF               	movwf	USART_put_int@value+1
  8881  1081  0852               	movf	PROCULUS_VP_Write@vp,w
  8882  1082  00CE               	movwf	USART_put_int@value
  8883  1083  160A  158A  234F  160A  118A  	fcall	_USART_put_int
  8884                           
  8885                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8886  1088  1283               	bcf	3,5	;RP0=0, select bank0
  8887  1089  01D7               	clrf	PROCULUS_VP_Write@i
  8888  108A                     l5800:	
  8889  108A  0855               	movf	PROCULUS_VP_Write@size,w
  8890  108B  0257               	subwf	PROCULUS_VP_Write@i,w
  8891  108C  1803               	btfsc	3,0
  8892  108D  28A0               	goto	l5802
  8893                           
  8894                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8895  108E  0857               	movf	PROCULUS_VP_Write@i,w
  8896  108F  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8897  1090  00D6               	movwf	??_PROCULUS_VP_Write
  8898  1091  0856               	movf	??_PROCULUS_VP_Write,w
  8899  1092  0084               	movwf	4
  8900  1093  1383               	bcf	3,7	;select IRP bank0
  8901  1094  0800               	movf	0,w
  8902  1095  160A  158A  2305  160A  118A  	fcall	_USART_putc
  8903  109A  3001               	movlw	1
  8904  109B  1283               	bcf	3,5	;RP0=0, select bank0
  8905  109C  00D6               	movwf	??_PROCULUS_VP_Write
  8906  109D  0856               	movf	??_PROCULUS_VP_Write,w
  8907  109E  07D7               	addwf	PROCULUS_VP_Write@i,f
  8908  109F  288A               	goto	l5800
  8909  10A0                     l5802:	
  8910                           
  8911                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8912  10A0  3001               	movlw	1
  8913  10A1  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8914  10A2  3000               	movlw	0
  8915  10A3  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8916  10A4  160A  158A  23C4   	fcall	_PROCULUS_Delay
  8917  10A7  0008               	return
  8918  10A8                     __end_of_PROCULUS_VP_Write:	
  8919                           
  8920                           	psect	text28
  8921  1B3A                     __ptext28:	
  8922 ;; *************** function _PROCULUS_Show_Screen *****************
  8923 ;; Defined at:
  8924 ;;		line 243 in file "proculus.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  screen          2   54[BANK0 ] unsigned int 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 300/0
  8935 ;;		On exit  : 300/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8938 ;;      Params:         0       2       0       0       0
  8939 ;;      Locals:         0       3       0       0       0
  8940 ;;      Temps:          0       1       0       0       0
  8941 ;;      Totals:         0       6       0       0       0
  8942 ;;Total ram usage:        6 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    4
  8945 ;; This function calls:
  8946 ;;		_PROCULUS_Control_Register_Write
  8947 ;; This function is called by:
  8948 ;;		_Decodify_Command
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function _PROCULUS_Show_Screen
  8954  1B3A                     _PROCULUS_Show_Screen:	
  8955                           
  8956                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8960  1B3A  3003               	movlw	3
  8961  1B3B  00D8               	movwf	??_PROCULUS_Show_Screen
  8962  1B3C  0858               	movf	??_PROCULUS_Show_Screen,w
  8963  1B3D  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8964                           
  8965                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8966  1B3E  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8967  1B3F  00D8               	movwf	??_PROCULUS_Show_Screen
  8968  1B40  0858               	movf	??_PROCULUS_Show_Screen,w
  8969  1B41  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8970                           
  8971                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8972  1B42  0856               	movf	PROCULUS_Show_Screen@screen,w
  8973  1B43  00D8               	movwf	??_PROCULUS_Show_Screen
  8974  1B44  0858               	movf	??_PROCULUS_Show_Screen,w
  8975  1B45  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8976                           
  8977                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8978  1B46  3003               	movlw	3
  8979  1B47  00D8               	movwf	??_PROCULUS_Show_Screen
  8980  1B48  0858               	movf	??_PROCULUS_Show_Screen,w
  8981  1B49  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8982  1B4A  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8983  1B4B  160A  158A  2699   	fcall	_PROCULUS_Control_Register_Write
  8984  1B4E  0008               	return
  8985  1B4F                     __end_of_PROCULUS_Show_Screen:	
  8986                           
  8987                           	psect	text29
  8988  1C7F                     __ptext29:	
  8989 ;; *************** function _PROCULUS_Buzzer *****************
  8990 ;; Defined at:
  8991 ;;		line 223 in file "proculus.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 300/0
  9002 ;;		On exit  : 300/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9005 ;;      Params:         0       2       0       0       0
  9006 ;;      Locals:         0       2       0       0       0
  9007 ;;      Temps:          0       1       0       0       0
  9008 ;;      Totals:         0       5       0       0       0
  9009 ;;Total ram usage:        5 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    4
  9012 ;; This function calls:
  9013 ;;		_PROCULUS_Control_Register_Write
  9014 ;;		___lwdiv
  9015 ;; This function is called by:
  9016 ;;		_Decodify_Command
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _PROCULUS_Buzzer
  9022  1C7F                     _PROCULUS_Buzzer:	
  9023                           
  9024                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9025                           
  9026                           ;incstack = 0
  9027                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9028  1C7F  300A               	movlw	10
  9029  1C80  00A0               	movwf	___lwdiv@divisor
  9030  1C81  3000               	movlw	0
  9031  1C82  00A1               	movwf	___lwdiv@divisor+1
  9032  1C83  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9033  1C84  00A3               	movwf	___lwdiv@dividend+1
  9034  1C85  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9035  1C86  00A2               	movwf	___lwdiv@dividend
  9036  1C87  160A  158A  270C  160A  158A  	fcall	___lwdiv
  9037  1C8C  0821               	movf	?___lwdiv+1,w
  9038  1C8D  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9039  1C8E  0820               	movf	?___lwdiv,w
  9040  1C8F  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9041                           
  9042                           ;proculus.c: 226:      vetor[0]=0x02;
  9043  1C90  3002               	movlw	2
  9044  1C91  00D8               	movwf	??_PROCULUS_Buzzer
  9045  1C92  0858               	movf	??_PROCULUS_Buzzer,w
  9046  1C93  00D9               	movwf	PROCULUS_Buzzer@vetor
  9047                           
  9048                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9049  1C94  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9050  1C95  00D8               	movwf	??_PROCULUS_Buzzer
  9051  1C96  0858               	movf	??_PROCULUS_Buzzer,w
  9052  1C97  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  9053                           
  9054                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9055  1C98  3002               	movlw	2
  9056  1C99  00D8               	movwf	??_PROCULUS_Buzzer
  9057  1C9A  0858               	movf	??_PROCULUS_Buzzer,w
  9058  1C9B  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9059  1C9C  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9060  1C9D  160A  158A  2699   	fcall	_PROCULUS_Control_Register_Write
  9061  1CA0  0008               	return
  9062  1CA1                     __end_of_PROCULUS_Buzzer:	
  9063                           
  9064                           	psect	text30
  9065  1F0C                     __ptext30:	
  9066 ;; *************** function ___lwdiv *****************
  9067 ;; Defined at:
  9068 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  divisor         2    0[BANK0 ] unsigned int 
  9071 ;;  dividend        2    2[BANK0 ] unsigned int 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  quotient        2    6[BANK0 ] unsigned int 
  9074 ;;  counter         1    5[BANK0 ] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  2    0[BANK0 ] unsigned int 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 300/0
  9081 ;;		On exit  : 300/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9084 ;;      Params:         0       4       0       0       0
  9085 ;;      Locals:         0       3       0       0       0
  9086 ;;      Temps:          0       1       0       0       0
  9087 ;;      Totals:         0       8       0       0       0
  9088 ;;Total ram usage:        8 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    1
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_ADC_Media_10bits
  9095 ;;		_PROCULUS_Buzzer
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function ___lwdiv
  9101  1F0C                     ___lwdiv:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9105  1F0C  01A6               	clrf	___lwdiv@quotient
  9106  1F0D  01A7               	clrf	___lwdiv@quotient+1
  9107  1F0E  0820               	movf	___lwdiv@divisor,w
  9108  1F0F  0421               	iorwf	___lwdiv@divisor+1,w
  9109  1F10  1903               	btfsc	3,2
  9110  1F11  2F43               	goto	l5862
  9111  1F12  01A5               	clrf	___lwdiv@counter
  9112  1F13  0AA5               	incf	___lwdiv@counter,f
  9113  1F14                     l5850:	
  9114  1F14  1BA1               	btfsc	___lwdiv@divisor+1,7
  9115  1F15  2F22               	goto	l5852
  9116  1F16  3001               	movlw	1
  9117  1F17                     u5735:	
  9118  1F17  1003               	clrc
  9119  1F18  0DA0               	rlf	___lwdiv@divisor,f
  9120  1F19  0DA1               	rlf	___lwdiv@divisor+1,f
  9121  1F1A  3EFF               	addlw	-1
  9122  1F1B  1D03               	skipz
  9123  1F1C  2F17               	goto	u5735
  9124  1F1D  3001               	movlw	1
  9125  1F1E  00A4               	movwf	??___lwdiv
  9126  1F1F  0824               	movf	??___lwdiv,w
  9127  1F20  07A5               	addwf	___lwdiv@counter,f
  9128  1F21  2F14               	goto	l5850
  9129  1F22                     l5852:	
  9130  1F22  3001               	movlw	1
  9131  1F23                     u5755:	
  9132  1F23  1003               	clrc
  9133  1F24  0DA6               	rlf	___lwdiv@quotient,f
  9134  1F25  0DA7               	rlf	___lwdiv@quotient+1,f
  9135  1F26  3EFF               	addlw	-1
  9136  1F27  1D03               	skipz
  9137  1F28  2F23               	goto	u5755
  9138  1F29  0821               	movf	___lwdiv@divisor+1,w
  9139  1F2A  0223               	subwf	___lwdiv@dividend+1,w
  9140  1F2B  1D03               	skipz
  9141  1F2C  2F2F               	goto	u5765
  9142  1F2D  0820               	movf	___lwdiv@divisor,w
  9143  1F2E  0222               	subwf	___lwdiv@dividend,w
  9144  1F2F                     u5765:	
  9145  1F2F  1C03               	skipc
  9146  1F30  2F38               	goto	l5858
  9147  1F31  0820               	movf	___lwdiv@divisor,w
  9148  1F32  02A2               	subwf	___lwdiv@dividend,f
  9149  1F33  0821               	movf	___lwdiv@divisor+1,w
  9150  1F34  1C03               	skipc
  9151  1F35  03A3               	decf	___lwdiv@dividend+1,f
  9152  1F36  02A3               	subwf	___lwdiv@dividend+1,f
  9153  1F37  1426               	bsf	___lwdiv@quotient,0
  9154  1F38                     l5858:	
  9155  1F38  3001               	movlw	1
  9156  1F39                     u5775:	
  9157  1F39  1003               	clrc
  9158  1F3A  0CA1               	rrf	___lwdiv@divisor+1,f
  9159  1F3B  0CA0               	rrf	___lwdiv@divisor,f
  9160  1F3C  3EFF               	addlw	-1
  9161  1F3D  1D03               	skipz
  9162  1F3E  2F39               	goto	u5775
  9163  1F3F  3001               	movlw	1
  9164  1F40  02A5               	subwf	___lwdiv@counter,f
  9165  1F41  1D03               	btfss	3,2
  9166  1F42  2F22               	goto	l5852
  9167  1F43                     l5862:	
  9168  1F43  0827               	movf	___lwdiv@quotient+1,w
  9169  1F44  00A1               	movwf	?___lwdiv+1
  9170  1F45  0826               	movf	___lwdiv@quotient,w
  9171  1F46  00A0               	movwf	?___lwdiv
  9172  1F47  0008               	return
  9173  1F48                     __end_of___lwdiv:	
  9174                           
  9175                           	psect	text31
  9176  1E99                     __ptext31:	
  9177 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9178 ;; Defined at:
  9179 ;;		line 13 in file "proculus.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  vetor           1    wreg     PTR unsigned char 
  9182 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9183 ;;  size            1   50[BANK0 ] unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9186 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9187 ;;  i               1   53[BANK0 ] unsigned char 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  1    wreg      void 
  9190 ;; Registers used:
  9191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9192 ;; Tracked objects:
  9193 ;;		On entry : 300/0
  9194 ;;		On exit  : 300/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9197 ;;      Params:         0       1       0       0       0
  9198 ;;      Locals:         0       2       0       0       0
  9199 ;;      Temps:          0       1       0       0       0
  9200 ;;      Totals:         0       4       0       0       0
  9201 ;;Total ram usage:        4 bytes
  9202 ;; Hardware stack levels used:    1
  9203 ;; Hardware stack levels required when called:    3
  9204 ;; This function calls:
  9205 ;;		_PROCULUS_Delay
  9206 ;;		_USART_put_int
  9207 ;;		_USART_putc
  9208 ;; This function is called by:
  9209 ;;		_PROCULUS_Buzzer
  9210 ;;		_PROCULUS_Show_Screen
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _PROCULUS_Control_Register_Write
  9216  1E99                     _PROCULUS_Control_Register_Write:	
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9220                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9221  1E99  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9222                           
  9223                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9224  1E9A  30A5               	movlw	165
  9225  1E9B  00CE               	movwf	USART_put_int@value
  9226  1E9C  305A               	movlw	90
  9227  1E9D  00CF               	movwf	USART_put_int@value+1
  9228  1E9E  160A  158A  234F  160A  158A  	fcall	_USART_put_int
  9229                           
  9230                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9231  1EA3  1283               	bcf	3,5	;RP0=0, select bank0
  9232  1EA4  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9233  1EA5  3E01               	addlw	1
  9234  1EA6  160A  158A  2305  160A  158A  	fcall	_USART_putc
  9235                           
  9236                           ;proculus.c: 16:      USART_putc(0x80);
  9237  1EAB  3080               	movlw	128
  9238  1EAC  160A  158A  2305  160A  158A  	fcall	_USART_putc
  9239                           
  9240                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9241  1EB1  1283               	bcf	3,5	;RP0=0, select bank0
  9242  1EB2  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9243  1EB3                     l5784:	
  9244  1EB3  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9245  1EB4  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9246  1EB5  1803               	btfsc	3,0
  9247  1EB6  2EC9               	goto	l5786
  9248                           
  9249                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9250  1EB7  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9251  1EB8  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9252  1EB9  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9253  1EBA  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9254  1EBB  0084               	movwf	4
  9255  1EBC  1383               	bcf	3,7	;select IRP bank0
  9256  1EBD  0800               	movf	0,w
  9257  1EBE  160A  158A  2305  160A  158A  	fcall	_USART_putc
  9258  1EC3  3001               	movlw	1
  9259  1EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9260  1EC5  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9261  1EC6  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9262  1EC7  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9263  1EC8  2EB3               	goto	l5784
  9264  1EC9                     l5786:	
  9265                           
  9266                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9267  1EC9  3001               	movlw	1
  9268  1ECA  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9269  1ECB  3000               	movlw	0
  9270  1ECC  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9271  1ECD  160A  158A  23C4   	fcall	_PROCULUS_Delay
  9272  1ED0  0008               	return
  9273  1ED1                     __end_of_PROCULUS_Control_Register_Write:	
  9274                           
  9275                           	psect	text32
  9276  1B4F                     __ptext32:	
  9277 ;; *************** function _USART_put_int *****************
  9278 ;; Defined at:
  9279 ;;		line 138 in file "usart.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;  value           2   46[BANK0 ] int 
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9284 ;;		 -> USART_put_int@value(2), 
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9289 ;; Tracked objects:
  9290 ;;		On entry : 300/0
  9291 ;;		On exit  : 300/100
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9294 ;;      Params:         0       2       0       0       0
  9295 ;;      Locals:         0       1       0       0       0
  9296 ;;      Temps:          0       1       0       0       0
  9297 ;;      Totals:         0       4       0       0       0
  9298 ;;Total ram usage:        4 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; Hardware stack levels required when called:    2
  9301 ;; This function calls:
  9302 ;;		_USART_putc
  9303 ;; This function is called by:
  9304 ;;		_Decodify_Command
  9305 ;;		_PROCULUS_Control_Register_Write
  9306 ;;		_PROCULUS_VP_Write
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _USART_put_int
  9312  1B4F                     _USART_put_int:	
  9313                           
  9314                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9318  1B4F  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9319  1B50  00D0               	movwf	??_USART_put_int
  9320  1B51  0850               	movf	??_USART_put_int,w
  9321  1B52  00D1               	movwf	USART_put_int@dado
  9322                           
  9323                           ;usart.c: 141:      USART_putc(*(dado+1));
  9324  1B53  0A51               	incf	USART_put_int@dado,w
  9325  1B54  0084               	movwf	4
  9326  1B55  1383               	bcf	3,7	;select IRP bank0
  9327  1B56  0800               	movf	0,w
  9328  1B57  160A  158A  2305  160A  158A  	fcall	_USART_putc
  9329                           
  9330                           ;usart.c: 142:      USART_putc(*dado);
  9331  1B5C  1283               	bcf	3,5	;RP0=0, select bank0
  9332  1B5D  0851               	movf	USART_put_int@dado,w
  9333  1B5E  0084               	movwf	4
  9334  1B5F  1383               	bcf	3,7	;select IRP bank0
  9335  1B60  0800               	movf	0,w
  9336  1B61  160A  158A  2305   	fcall	_USART_putc
  9337  1B64  0008               	return
  9338  1B65                     __end_of_USART_put_int:	
  9339                           
  9340                           	psect	text33
  9341  1B05                     __ptext33:	
  9342 ;; *************** function _USART_putc *****************
  9343 ;; Defined at:
  9344 ;;		line 89 in file "usart.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  value           1    wreg     unsigned char 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  value           1    0[BANK0 ] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg
  9353 ;; Tracked objects:
  9354 ;;		On entry : 200/100
  9355 ;;		On exit  : 300/100
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9358 ;;      Params:         0       0       0       0       0
  9359 ;;      Locals:         0       1       0       0       0
  9360 ;;      Temps:          0       0       0       0       0
  9361 ;;      Totals:         0       1       0       0       0
  9362 ;;Total ram usage:        1 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_Decodify_Command
  9369 ;;		_Send_To_MB
  9370 ;;		_PROCULUS_Control_Register_Write
  9371 ;;		_PROCULUS_VP_Write
  9372 ;;		_USART_put_buffer
  9373 ;;		_USART_put_int
  9374 ;;		_USART_put_string
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           
  9379                           ;psect for function _USART_putc
  9380  1B05                     _USART_putc:	
  9381                           
  9382                           ;incstack = 0
  9383                           ; Regs used in _USART_putc: [wreg]
  9384                           ;USART_putc@value stored from wreg
  9385  1B05  1283               	bcf	3,5	;RP0=0, select bank0
  9386  1B06  00A0               	movwf	USART_putc@value
  9387                           
  9388                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  9389  1B07  3014               	movlw	20
  9390  1B08  1683               	bsf	3,5	;RP0=1, select bank1
  9391  1B09  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  9392  1B0A  3000               	movlw	0
  9393  1B0B  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  9394  1B0C                     l865:	
  9395                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  9396                           
  9397  1B0C  1C98               	btfss	24,1	;volatile
  9398  1B0D  2B0C               	goto	l865
  9399                           
  9400                           ;usart.c: 93:     TXREG=value;
  9401  1B0E  1283               	bcf	3,5	;RP0=0, select bank0
  9402  1B0F  0820               	movf	USART_putc@value,w
  9403  1B10  0099               	movwf	25	;volatile
  9404                           
  9405                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  9406  1B11  1683               	bsf	3,5	;RP0=1, select bank1
  9407  1B12  1698               	bsf	24,5	;volatile
  9408  1B13  0008               	return
  9409  1B14                     __end_of_USART_putc:	
  9410                           
  9411                           	psect	text34
  9412  1BC4                     __ptext34:	
  9413 ;; *************** function _PROCULUS_Delay *****************
  9414 ;; Defined at:
  9415 ;;		line 267 in file "proculus.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  i               2    4[BANK0 ] unsigned int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2
  9424 ;; Tracked objects:
  9425 ;;		On entry : 300/0
  9426 ;;		On exit  : 300/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9429 ;;      Params:         0       2       0       0       0
  9430 ;;      Locals:         0       2       0       0       0
  9431 ;;      Temps:          0       2       0       0       0
  9432 ;;      Totals:         0       6       0       0       0
  9433 ;;Total ram usage:        6 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_PROCULUS_Control_Register_Write
  9440 ;;		_PROCULUS_VP_Write
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function _PROCULUS_Delay
  9446  1BC4                     _PROCULUS_Delay:	
  9447                           
  9448                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9449                           
  9450                           ;incstack = 0
  9451                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9452  1BC4  01A4               	clrf	PROCULUS_Delay@i
  9453  1BC5  01A5               	clrf	PROCULUS_Delay@i+1
  9454  1BC6                     l785:	
  9455  1BC6  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9456  1BC7  0225               	subwf	PROCULUS_Delay@i+1,w
  9457  1BC8  1D03               	skipz
  9458  1BC9  2BCC               	goto	u5425
  9459  1BCA  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9460  1BCB  0224               	subwf	PROCULUS_Delay@i,w
  9461  1BCC                     u5425:	
  9462  1BCC  1803               	btfsc	3,0
  9463  1BCD  0008               	return
  9464                           
  9465                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9466  1BCE  3003               	movlw	3
  9467  1BCF  1283               	bcf	3,5	;RP0=0, select bank0
  9468  1BD0  1303               	bcf	3,6	;RP1=0, select bank0
  9469  1BD1  00A3               	movwf	??_PROCULUS_Delay+1
  9470  1BD2  3097               	movlw	151
  9471  1BD3  00A2               	movwf	??_PROCULUS_Delay
  9472  1BD4                     u7727:	
  9473  1BD4  0BA2               	decfsz	??_PROCULUS_Delay,f
  9474  1BD5  2BD4               	goto	u7727
  9475  1BD6  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9476  1BD7  2BD4               	goto	u7727
  9477                           
  9478                           ;proculus.c: 270:     }
  9479  1BD8  3001               	movlw	1
  9480  1BD9  1283               	bcf	3,5	;RP0=0, select bank0
  9481  1BDA  1303               	bcf	3,6	;RP1=0, select bank0
  9482  1BDB  07A4               	addwf	PROCULUS_Delay@i,f
  9483  1BDC  1803               	skipnc
  9484  1BDD  0AA5               	incf	PROCULUS_Delay@i+1,f
  9485  1BDE  3000               	movlw	0
  9486  1BDF  07A5               	addwf	PROCULUS_Delay@i+1,f
  9487  1BE0  2BC6               	goto	l785
  9488  1BE1                     __end_of_PROCULUS_Delay:	
  9489                           
  9490                           	psect	text35
  9491  0801                     __ptext35:	
  9492 ;; *************** function _EEPROM_Write_String *****************
  9493 ;; Defined at:
  9494 ;;		line 97 in file "eeprom.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  addr            1    wreg     unsigned char 
  9497 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9498 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  addr            1    7[BANK0 ] unsigned char 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 300/100
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9510 ;;      Params:         0       1       0       0       0
  9511 ;;      Locals:         0       1       0       0       0
  9512 ;;      Temps:          0       1       0       0       0
  9513 ;;      Totals:         0       3       0       0       0
  9514 ;;Total ram usage:        3 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    2
  9517 ;; This function calls:
  9518 ;;		_EEPROM_Write_Byte
  9519 ;; This function is called by:
  9520 ;;		_Decodify_Command
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _EEPROM_Write_String
  9526  0801                     _EEPROM_Write_String:	
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9530                           ;EEPROM_Write_String@addr stored from wreg
  9531  0801  1283               	bcf	3,5	;RP0=0, select bank0
  9532  0802  00A7               	movwf	EEPROM_Write_String@addr
  9533  0803                     l6518:	
  9534                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9535                           
  9536                           
  9537                           ;eeprom.c: 99:     while(*dado)
  9538  0803  0825               	movf	EEPROM_Write_String@dado,w
  9539  0804  0084               	movwf	4
  9540  0805  1383               	bcf	3,7	;select IRP bank0
  9541  0806  0800               	movf	0,w
  9542  0807  1903               	btfsc	3,2
  9543  0808  2820               	goto	l6520
  9544                           
  9545                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9546  0809  0825               	movf	EEPROM_Write_String@dado,w
  9547  080A  0084               	movwf	4
  9548  080B  0800               	movf	0,w
  9549  080C  00A6               	movwf	??_EEPROM_Write_String
  9550  080D  0826               	movf	??_EEPROM_Write_String,w
  9551  080E  00A0               	movwf	EEPROM_Write_Byte@dado
  9552  080F  0827               	movf	EEPROM_Write_String@addr,w
  9553  0810  160A  158A  26D1  120A  158A  	fcall	_EEPROM_Write_Byte
  9554                           
  9555                           ;eeprom.c: 102:      addr++;
  9556  0815  3001               	movlw	1
  9557  0816  1283               	bcf	3,5	;RP0=0, select bank0
  9558  0817  1303               	bcf	3,6	;RP1=0, select bank0
  9559  0818  00A6               	movwf	??_EEPROM_Write_String
  9560  0819  0826               	movf	??_EEPROM_Write_String,w
  9561  081A  07A7               	addwf	EEPROM_Write_String@addr,f
  9562                           
  9563                           ;eeprom.c: 103:      dado++;
  9564  081B  3001               	movlw	1
  9565  081C  00A6               	movwf	??_EEPROM_Write_String
  9566  081D  0826               	movf	??_EEPROM_Write_String,w
  9567  081E  07A5               	addwf	EEPROM_Write_String@dado,f
  9568  081F  2803               	goto	l6518
  9569  0820                     l6520:	
  9570                           
  9571                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9572  0820  0825               	movf	EEPROM_Write_String@dado,w
  9573  0821  0084               	movwf	4
  9574  0822  0800               	movf	0,w
  9575  0823  00A6               	movwf	??_EEPROM_Write_String
  9576  0824  0826               	movf	??_EEPROM_Write_String,w
  9577  0825  00A0               	movwf	EEPROM_Write_Byte@dado
  9578  0826  0827               	movf	EEPROM_Write_String@addr,w
  9579  0827  160A  158A  26D1   	fcall	_EEPROM_Write_Byte
  9580  082A  0008               	return
  9581  082B                     __end_of_EEPROM_Write_String:	
  9582                           
  9583                           	psect	text36
  9584  1D90                     __ptext36:	
  9585 ;; *************** function _EEPROM_Write_Integer *****************
  9586 ;; Defined at:
  9587 ;;		line 68 in file "eeprom.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  addr            1    wreg     unsigned char 
  9590 ;;  dado            2    5[BANK0 ] unsigned int 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  addr            1   11[BANK0 ] unsigned char 
  9593 ;;  i               1   12[BANK0 ] unsigned char 
  9594 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9595 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9596 ;;  addr_memo       1    0        unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 200/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9606 ;;      Params:         0       2       0       0       0
  9607 ;;      Locals:         0       4       0       0       0
  9608 ;;      Temps:          0       2       0       0       0
  9609 ;;      Totals:         0       8       0       0       0
  9610 ;;Total ram usage:        8 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    2
  9613 ;; This function calls:
  9614 ;;		_EEPROM_Write_Byte
  9615 ;; This function is called by:
  9616 ;;		_main
  9617 ;;		_Decodify_Command
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           
  9622                           ;psect for function _EEPROM_Write_Integer
  9623  1D90                     _EEPROM_Write_Integer:	
  9624                           
  9625                           ;incstack = 0
  9626                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9627                           ;EEPROM_Write_Integer@addr stored from wreg
  9628  1D90  1283               	bcf	3,5	;RP0=0, select bank0
  9629  1D91  00AB               	movwf	EEPROM_Write_Integer@addr
  9630                           
  9631                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9632  1D92  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9633  1D93  00A7               	movwf	??_EEPROM_Write_Integer
  9634  1D94  0827               	movf	??_EEPROM_Write_Integer,w
  9635  1D95  00AA               	movwf	EEPROM_Write_Integer@ptr
  9636                           
  9637                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9638  1D96  01AC               	clrf	EEPROM_Write_Integer@i
  9639  1D97                     l6474:	
  9640                           
  9641                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9642  1D97  082A               	movf	EEPROM_Write_Integer@ptr,w
  9643  1D98  0084               	movwf	4
  9644  1D99  1383               	bcf	3,7	;select IRP bank0
  9645  1D9A  0800               	movf	0,w
  9646  1D9B  00A7               	movwf	??_EEPROM_Write_Integer
  9647  1D9C  0827               	movf	??_EEPROM_Write_Integer,w
  9648  1D9D  00A0               	movwf	EEPROM_Write_Byte@dado
  9649  1D9E  082B               	movf	EEPROM_Write_Integer@addr,w
  9650  1D9F  160A  158A  26D1  160A  158A  	fcall	_EEPROM_Write_Byte
  9651  1DA4  3001               	movlw	1
  9652  1DA5  1283               	bcf	3,5	;RP0=0, select bank0
  9653  1DA6  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1DA7  00A7               	movwf	??_EEPROM_Write_Integer
  9655  1DA8  0827               	movf	??_EEPROM_Write_Integer,w
  9656  1DA9  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9657  1DAA  3001               	movlw	1
  9658  1DAB  00A7               	movwf	??_EEPROM_Write_Integer
  9659  1DAC  0827               	movf	??_EEPROM_Write_Integer,w
  9660  1DAD  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9661  1DAE  3001               	movlw	1
  9662  1DAF  00A7               	movwf	??_EEPROM_Write_Integer
  9663  1DB0  0827               	movf	??_EEPROM_Write_Integer,w
  9664  1DB1  07AC               	addwf	EEPROM_Write_Integer@i,f
  9665  1DB2  3002               	movlw	2
  9666  1DB3  022C               	subwf	EEPROM_Write_Integer@i,w
  9667  1DB4  1C03               	skipc
  9668  1DB5  2D97               	goto	l6474
  9669                           
  9670                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9671  1DB6  304E               	movlw	78
  9672  1DB7  1283               	bcf	3,5	;RP0=0, select bank0
  9673  1DB8  1303               	bcf	3,6	;RP1=0, select bank0
  9674  1DB9  00A8               	movwf	??_EEPROM_Write_Integer+1
  9675  1DBA  30EA               	movlw	234
  9676  1DBB  00A7               	movwf	??_EEPROM_Write_Integer
  9677  1DBC                     u7737:	
  9678  1DBC  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9679  1DBD  2DBC               	goto	u7737
  9680  1DBE  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9681  1DBF  2DBC               	goto	u7737
  9682  1DC0  0000               	nop
  9683  1DC1  0008               	return
  9684  1DC2                     __end_of_EEPROM_Write_Integer:	
  9685                           
  9686                           	psect	text37
  9687  1ED1                     __ptext37:	
  9688 ;; *************** function _EEPROM_Write_Byte *****************
  9689 ;; Defined at:
  9690 ;;		line 21 in file "eeprom.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  addr            1    wreg     unsigned char 
  9693 ;;  dado            1    0[BANK0 ] unsigned char 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  addr            1    3[BANK0 ] unsigned char 
  9696 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0
  9701 ;; Tracked objects:
  9702 ;;		On entry : 200/100
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9706 ;;      Params:         0       1       0       0       0
  9707 ;;      Locals:         0       2       0       0       0
  9708 ;;      Temps:          0       2       0       0       0
  9709 ;;      Totals:         0       5       0       0       0
  9710 ;;Total ram usage:        5 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_Decodify_Command
  9717 ;;		_EEPROM_Write_Integer
  9718 ;;		_EEPROM_Write_String
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           
  9723                           ;psect for function _EEPROM_Write_Byte
  9724  1ED1                     _EEPROM_Write_Byte:	
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9728                           ;EEPROM_Write_Byte@addr stored from wreg
  9729  1ED1  1283               	bcf	3,5	;RP0=0, select bank0
  9730  1ED2  00A3               	movwf	EEPROM_Write_Byte@addr
  9731                           
  9732                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9733  1ED3  3014               	movlw	20
  9734  1ED4  1683               	bsf	3,5	;RP0=1, select bank1
  9735  1ED5  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9736  1ED6  3000               	movlw	0
  9737  1ED7  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9738  1ED8                     l504:	
  9739                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9740                           
  9741  1ED8  1703               	bsf	3,6	;RP1=1, select bank3
  9742  1ED9  188C               	btfsc	12,1	;volsfr
  9743  1EDA  2ED8               	goto	l504
  9744                           
  9745                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9746  1EDB  1F8B               	btfss	11,7	;volatile
  9747  1EDC  2EE2               	goto	l5716
  9748                           
  9749                           ;eeprom.c: 28:           last_GIE=1;
  9750  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
  9751  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
  9752  1EDF  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9753  1EE0  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9754  1EE1  2EE5               	goto	l5718
  9755  1EE2                     l5716:	
  9756                           
  9757                           ;eeprom.c: 30:           last_GIE=0;
  9758  1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  9759  1EE3  1303               	bcf	3,6	;RP1=0, select bank0
  9760  1EE4  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9761  1EE5                     l5718:	
  9762                           
  9763                           ;eeprom.c: 32:        EEADR=addr;
  9764  1EE5  0823               	movf	EEPROM_Write_Byte@addr,w
  9765  1EE6  1703               	bsf	3,6	;RP1=1, select bank2
  9766  1EE7  008D               	movwf	13	;volatile
  9767                           
  9768                           ;eeprom.c: 33:        EEDATA=dado;
  9769  1EE8  1303               	bcf	3,6	;RP1=0, select bank0
  9770  1EE9  0820               	movf	EEPROM_Write_Byte@dado,w
  9771  1EEA  1703               	bsf	3,6	;RP1=1, select bank2
  9772  1EEB  008C               	movwf	12	;volatile
  9773                           
  9774                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9775  1EEC  1683               	bsf	3,5	;RP0=1, select bank3
  9776  1EED  138C               	bcf	12,7	;volsfr
  9777                           
  9778                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9779  1EEE  150C               	bsf	12,2	;volsfr
  9780                           
  9781                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9782  1EEF  138B               	bcf	11,7	;volatile
  9783                           
  9784                           ;eeprom.c: 37:        EECON2=0x55;
  9785  1EF0  3055               	movlw	85
  9786  1EF1  008D               	movwf	13	;volsfr
  9787                           
  9788                           ;eeprom.c: 38:        EECON2=0xAA;
  9789  1EF2  30AA               	movlw	170
  9790  1EF3  008D               	movwf	13	;volsfr
  9791                           
  9792                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9793  1EF4  148C               	bsf	12,1	;volsfr
  9794                           
  9795                           ;eeprom.c: 41:        if(last_GIE==1)
  9796  1EF5  1283               	bcf	3,5	;RP0=0, select bank0
  9797  1EF6  1303               	bcf	3,6	;RP1=0, select bank0
  9798  1EF7  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9799  1EF8  1D03               	btfss	3,2
  9800  1EF9  2EFC               	goto	l509
  9801                           
  9802                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9803  1EFA  178B               	bsf	11,7	;volatile
  9804  1EFB  2EFD               	goto	l510
  9805  1EFC                     l509:	
  9806                           ;eeprom.c: 43:        else
  9807                           
  9808                           
  9809                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9810  1EFC  138B               	bcf	11,7	;volatile
  9811  1EFD                     l510:	
  9812                           
  9813                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9814  1EFD  1683               	bsf	3,5	;RP0=1, select bank3
  9815  1EFE  1703               	bsf	3,6	;RP1=1, select bank3
  9816  1EFF  110C               	bcf	12,2	;volsfr
  9817                           
  9818                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9819  1F00  304E               	movlw	78
  9820  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  9821  1F02  1303               	bcf	3,6	;RP1=0, select bank0
  9822  1F03  00A2               	movwf	??_EEPROM_Write_Byte+1
  9823  1F04  30EA               	movlw	234
  9824  1F05  00A1               	movwf	??_EEPROM_Write_Byte
  9825  1F06                     u7747:	
  9826  1F06  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9827  1F07  2F06               	goto	u7747
  9828  1F08  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9829  1F09  2F06               	goto	u7747
  9830  1F0A  0000               	nop
  9831  1F0B  0008               	return
  9832  1F0C                     __end_of_EEPROM_Write_Byte:	
  9833                           
  9834                           	psect	text38
  9835  1C1E                     __ptext38:	
  9836 ;; *************** function _EEPROM_Read_String *****************
  9837 ;; Defined at:
  9838 ;;		line 109 in file "eeprom.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  addr            1    wreg     unsigned char 
  9841 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9842 ;;		 -> texto(16), 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  addr            1    5[BANK0 ] unsigned char 
  9845 ;;  c               1    6[BANK0 ] unsigned char 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 300/100
  9852 ;;		On exit  : B00/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9855 ;;      Params:         0       1       0       0       0
  9856 ;;      Locals:         0       2       0       0       0
  9857 ;;      Temps:          0       1       0       0       0
  9858 ;;      Totals:         0       4       0       0       0
  9859 ;;Total ram usage:        4 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    2
  9862 ;; This function calls:
  9863 ;;		_EEPROM_Read_Byte
  9864 ;; This function is called by:
  9865 ;;		_Decodify_Command
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _EEPROM_Read_String
  9871  1C1E                     _EEPROM_Read_String:	
  9872                           
  9873                           ;incstack = 0
  9874                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9875                           ;EEPROM_Read_String@addr stored from wreg
  9876  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
  9877  1C1F  00A5               	movwf	EEPROM_Read_String@addr
  9878  1C20                     l536:	
  9879                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9880                           
  9881                           
  9882                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9883  1C20  0825               	movf	EEPROM_Read_String@addr,w
  9884  1C21  160A  158A  245E  160A  158A  	fcall	_EEPROM_Read_Byte
  9885  1C26  1303               	bcf	3,6	;RP1=0, select bank0
  9886  1C27  00A4               	movwf	??_EEPROM_Read_String
  9887  1C28  0824               	movf	??_EEPROM_Read_String,w
  9888  1C29  00A6               	movwf	EEPROM_Read_String@c
  9889  1C2A  3001               	movlw	1
  9890  1C2B  00A4               	movwf	??_EEPROM_Read_String
  9891  1C2C  0824               	movf	??_EEPROM_Read_String,w
  9892  1C2D  07A5               	addwf	EEPROM_Read_String@addr,f
  9893                           
  9894                           ;eeprom.c: 114:         *(dado++)=c;
  9895  1C2E  0826               	movf	EEPROM_Read_String@c,w
  9896  1C2F  00A4               	movwf	??_EEPROM_Read_String
  9897  1C30  0823               	movf	EEPROM_Read_String@dado,w
  9898  1C31  0084               	movwf	4
  9899  1C32  0824               	movf	??_EEPROM_Read_String,w
  9900  1C33  1383               	bcf	3,7	;select IRP bank0
  9901  1C34  0080               	movwf	0
  9902  1C35  3001               	movlw	1
  9903  1C36  00A4               	movwf	??_EEPROM_Read_String
  9904  1C37  0824               	movf	??_EEPROM_Read_String,w
  9905  1C38  07A3               	addwf	EEPROM_Read_String@dado,f
  9906                           
  9907                           ;eeprom.c: 116:       }while(c);
  9908  1C39  0826               	movf	EEPROM_Read_String@c,w
  9909  1C3A  1903               	btfsc	3,2
  9910  1C3B  0008               	return
  9911  1C3C  2C20               	goto	l536
  9912  1C3D                     __end_of_EEPROM_Read_String:	
  9913                           
  9914                           	psect	text39
  9915  1D36                     __ptext39:	
  9916 ;; *************** function _EEPROM_Read_Integer *****************
  9917 ;; Defined at:
  9918 ;;		line 81 in file "eeprom.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  addr            1    wreg     unsigned char 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  addr            1    6[BANK0 ] unsigned char 
  9923 ;;  result          2    8[BANK0 ] unsigned int 
  9924 ;;  i               1   10[BANK0 ] unsigned char 
  9925 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9926 ;;		 -> EEPROM_Read_Integer@result(2), 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  2    3[BANK0 ] unsigned int 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 200/0
  9933 ;;		On exit  : B00/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9936 ;;      Params:         0       2       0       0       0
  9937 ;;      Locals:         0       5       0       0       0
  9938 ;;      Temps:          0       1       0       0       0
  9939 ;;      Totals:         0       8       0       0       0
  9940 ;;Total ram usage:        8 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    2
  9943 ;; This function calls:
  9944 ;;		_EEPROM_Read_Byte
  9945 ;; This function is called by:
  9946 ;;		_main
  9947 ;;		_Decodify_Command
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function _EEPROM_Read_Integer
  9953  1D36                     _EEPROM_Read_Integer:	
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9957                           ;EEPROM_Read_Integer@addr stored from wreg
  9958  1D36  1283               	bcf	3,5	;RP0=0, select bank0
  9959  1D37  00A6               	movwf	EEPROM_Read_Integer@addr
  9960                           
  9961                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9962  1D38  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9963  1D39  00A5               	movwf	??_EEPROM_Read_Integer
  9964  1D3A  0825               	movf	??_EEPROM_Read_Integer,w
  9965  1D3B  00A7               	movwf	EEPROM_Read_Integer@ptr
  9966                           
  9967                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9968  1D3C  01AA               	clrf	EEPROM_Read_Integer@i
  9969  1D3D                     l6450:	
  9970                           
  9971                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9972  1D3D  0826               	movf	EEPROM_Read_Integer@addr,w
  9973  1D3E  160A  158A  245E  160A  158A  	fcall	_EEPROM_Read_Byte
  9974  1D43  1303               	bcf	3,6	;RP1=0, select bank0
  9975  1D44  00A5               	movwf	??_EEPROM_Read_Integer
  9976  1D45  0827               	movf	EEPROM_Read_Integer@ptr,w
  9977  1D46  0084               	movwf	4
  9978  1D47  0825               	movf	??_EEPROM_Read_Integer,w
  9979  1D48  1383               	bcf	3,7	;select IRP bank0
  9980  1D49  0080               	movwf	0
  9981  1D4A  3001               	movlw	1
  9982  1D4B  00A5               	movwf	??_EEPROM_Read_Integer
  9983  1D4C  0825               	movf	??_EEPROM_Read_Integer,w
  9984  1D4D  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9985  1D4E  3001               	movlw	1
  9986  1D4F  00A5               	movwf	??_EEPROM_Read_Integer
  9987  1D50  0825               	movf	??_EEPROM_Read_Integer,w
  9988  1D51  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9989  1D52  3001               	movlw	1
  9990  1D53  00A5               	movwf	??_EEPROM_Read_Integer
  9991  1D54  0825               	movf	??_EEPROM_Read_Integer,w
  9992  1D55  07AA               	addwf	EEPROM_Read_Integer@i,f
  9993  1D56  3002               	movlw	2
  9994  1D57  022A               	subwf	EEPROM_Read_Integer@i,w
  9995  1D58  1C03               	skipc
  9996  1D59  2D3D               	goto	l6450
  9997                           
  9998                           ;eeprom.c: 89:       return result;
  9999  1D5A  0829               	movf	EEPROM_Read_Integer@result+1,w
 10000  1D5B  00A4               	movwf	?_EEPROM_Read_Integer+1
 10001  1D5C  0828               	movf	EEPROM_Read_Integer@result,w
 10002  1D5D  00A3               	movwf	?_EEPROM_Read_Integer
 10003  1D5E  0008               	return
 10004  1D5F                     __end_of_EEPROM_Read_Integer:	
 10005                           
 10006                           	psect	text40
 10007  1C5E                     __ptext40:	
 10008 ;; *************** function _EEPROM_Read_Byte *****************
 10009 ;; Defined at:
 10010 ;;		line 52 in file "eeprom.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  addr            1    wreg     unsigned char 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  addr            1    2[BANK0 ] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      unsigned char 
 10017 ;; Registers used:
 10018 ;;		wreg
 10019 ;; Tracked objects:
 10020 ;;		On entry : 200/100
 10021 ;;		On exit  : 300/200
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10024 ;;      Params:         0       0       0       0       0
 10025 ;;      Locals:         0       1       0       0       0
 10026 ;;      Temps:          0       2       0       0       0
 10027 ;;      Totals:         0       3       0       0       0
 10028 ;;Total ram usage:        3 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    1
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_Decodify_Command
 10035 ;;		_EEPROM_Read_Integer
 10036 ;;		_EEPROM_Read_String
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           
 10041                           ;psect for function _EEPROM_Read_Byte
 10042  1C5E                     _EEPROM_Read_Byte:	
 10043                           
 10044                           ;incstack = 0
 10045                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10046                           ;EEPROM_Read_Byte@addr stored from wreg
 10047  1C5E  1283               	bcf	3,5	;RP0=0, select bank0
 10048  1C5F  00A2               	movwf	EEPROM_Read_Byte@addr
 10049                           
 10050                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10051  1C60  3014               	movlw	20
 10052  1C61  1683               	bsf	3,5	;RP0=1, select bank1
 10053  1C62  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10054  1C63  3000               	movlw	0
 10055  1C64  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10056  1C65                     l514:	
 10057                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10058                           
 10059  1C65  1703               	bsf	3,6	;RP1=1, select bank3
 10060  1C66  188C               	btfsc	12,1	;volsfr
 10061  1C67  2C65               	goto	l514
 10062                           
 10063                           ;eeprom.c: 57:    EEADR=addr;
 10064  1C68  1283               	bcf	3,5	;RP0=0, select bank0
 10065  1C69  1303               	bcf	3,6	;RP1=0, select bank0
 10066  1C6A  0822               	movf	EEPROM_Read_Byte@addr,w
 10067  1C6B  1703               	bsf	3,6	;RP1=1, select bank2
 10068  1C6C  008D               	movwf	13	;volatile
 10069                           
 10070                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10071  1C6D  1683               	bsf	3,5	;RP0=1, select bank3
 10072  1C6E  138C               	bcf	12,7	;volsfr
 10073                           
 10074                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10075  1C6F  140C               	bsf	12,0	;volsfr
 10076                           
 10077                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10078  1C70  304E               	movlw	78
 10079  1C71  1283               	bcf	3,5	;RP0=0, select bank0
 10080  1C72  1303               	bcf	3,6	;RP1=0, select bank0
 10081  1C73  00A1               	movwf	??_EEPROM_Read_Byte+1
 10082  1C74  30EA               	movlw	234
 10083  1C75  00A0               	movwf	??_EEPROM_Read_Byte
 10084  1C76                     u7757:	
 10085  1C76  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10086  1C77  2C76               	goto	u7757
 10087  1C78  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10088  1C79  2C76               	goto	u7757
 10089  1C7A  0000               	nop
 10090                           
 10091                           ;eeprom.c: 61:    return EEDATA;
 10092  1C7B  1283               	bcf	3,5	;RP0=0, select bank2
 10093  1C7C  1703               	bsf	3,6	;RP1=1, select bank2
 10094  1C7D  080C               	movf	12,w	;volatile
 10095  1C7E  0008               	return
 10096  1C7F                     __end_of_EEPROM_Read_Byte:	
 10097                           
 10098                           	psect	text41
 10099  15AF                     __ptext41:	
 10100 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10101 ;; Defined at:
 10102 ;;		line 146 in file "EEPROM_24C1025.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  chip_add        1    wreg     unsigned char 
 10105 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10106 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10107 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10110 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10111 ;;  range           1   18[BANK0 ] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10116 ;; Tracked objects:
 10117 ;;		On entry : 300/100
 10118 ;;		On exit  : 300/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10121 ;;      Params:         0       5       0       0       0
 10122 ;;      Locals:         0       3       0       0       0
 10123 ;;      Temps:          0       2       0       0       0
 10124 ;;      Totals:         0      10       0       0       0
 10125 ;;Total ram usage:       10 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    3
 10128 ;; This function calls:
 10129 ;;		_I2C_Master_Start
 10130 ;;		_I2C_Master_Stop
 10131 ;;		_I2C_Master_Write
 10132 ;;		_my_delay_ms_WDT
 10133 ;; This function is called by:
 10134 ;;		_Decodify_Command
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           
 10139                           ;psect for function _EEPROM_24C1025_Write_Str
 10140  15AF                     _EEPROM_24C1025_Write_Str:	
 10141                           
 10142                           ;incstack = 0
 10143                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10144                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10145  15AF  1283               	bcf	3,5	;RP0=0, select bank0
 10146  15B0  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10147                           
 10148                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
 10149  15B1  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10150  15B2  1D03               	btfss	3,2
 10151  15B3  0008               	return
 10152  15B4  3002               	movlw	2
 10153  15B5  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10154  15B6  1D03               	skipz
 10155  15B7  2DC0               	goto	u6753
 10156  15B8  3000               	movlw	0
 10157  15B9  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10158  15BA  1D03               	skipz
 10159  15BB  2DC0               	goto	u6753
 10160  15BC  3000               	movlw	0
 10161  15BD  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10162  15BE  1D03               	skipz
 10163  15BF  2DC0               	goto	u6753
 10164  15C0                     u6753:	
 10165  15C0  1803               	btfsc	3,0
 10166  15C1  0008               	return
 10167  15C2                     L10:	
 10168                           
 10169                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10170  15C2  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10171  15C3  1D03               	btfss	3,2
 10172  15C4  2DD3               	goto	l6252
 10173  15C5  3001               	movlw	1
 10174  15C6  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10175  15C7  1D03               	skipz
 10176  15C8  2DD1               	goto	u6763
 10177  15C9  3000               	movlw	0
 10178  15CA  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10179  15CB  1D03               	skipz
 10180  15CC  2DD1               	goto	u6763
 10181  15CD  3000               	movlw	0
 10182  15CE  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10183  15CF  1D03               	skipz
 10184  15D0  2DD1               	goto	u6763
 10185  15D1                     u6763:	
 10186  15D1  1C03               	btfss	3,0
 10187  15D2  2DD8               	goto	l6254
 10188  15D3                     l6252:	
 10189  15D3  3008               	movlw	8
 10190  15D4  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10191  15D5  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10192  15D6  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10193  15D7  2DD9               	goto	l6256
 10194  15D8                     l6254:	
 10195  15D8  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10196  15D9                     l6256:	
 10197                           
 10198                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
 10199  15D9  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10200  15DA  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10201  15DB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10202  15DC  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10203                           
 10204                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
 10205  15DD  1003               	clrc
 10206  15DE  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10207                           
 10208                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
 10209  15DF  30A0               	movlw	160
 10210  15E0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10211  15E1  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10212  15E2  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10213                           
 10214                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
 10215  15E3  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10216  15E4  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10217  15E5  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10218  15E6  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10219                           
 10220                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
 10221  15E7  160A  158A  2314  160A  118A  	fcall	_I2C_Master_Start
 10222                           
 10223                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
 10224  15EC  1283               	bcf	3,5	;RP0=0, select bank0
 10225  15ED  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10226  15EE  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10227  15EF  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10228  15F0  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10229  15F1  00A3               	movwf	I2C_Master_Write@d
 10230  15F2  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10231  15F3  00A4               	movwf	I2C_Master_Write@d+1
 10232  15F4  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10233                           
 10234                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
 10235  15F9  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10236  15FA  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10237  15FB  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10238  15FC  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10239  15FD  00A3               	movwf	I2C_Master_Write@d
 10240  15FE  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10241  15FF  00A4               	movwf	I2C_Master_Write@d+1
 10242  1600  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10243                           
 10244                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
 10245  1605  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10246  1606  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10247  1607  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10248  1608  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10249  1609  00A3               	movwf	I2C_Master_Write@d
 10250  160A  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10251  160B  00A4               	movwf	I2C_Master_Write@d+1
 10252  160C  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10253  1611                     l6316:	
 10254                           ;EEPROM_24C1025.c: 162:      while(*data)
 10255                           
 10256                           
 10257                           ;EEPROM_24C1025.c: 162:      while(*data)
 10258  1611  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10259  1612  0084               	movwf	4
 10260  1613  1383               	bcf	3,7	;select IRP bank0
 10261  1614  0800               	movf	0,w
 10262  1615  1903               	btfsc	3,2
 10263  1616  2E87               	goto	l6318
 10264  1617  0064               	clrwdt	;# 
 10265                           
 10266                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
 10267  1618  1283               	bcf	3,5	;RP0=0, select bank0
 10268  1619  1303               	bcf	3,6	;RP1=0, select bank0
 10269  161A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10270  161B  1D03               	btfss	3,2
 10271  161C  0008               	return
 10272  161D  3002               	movlw	2
 10273  161E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10274  161F  1D03               	skipz
 10275  1620  2E29               	goto	u6773
 10276  1621  3000               	movlw	0
 10277  1622  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10278  1623  1D03               	skipz
 10279  1624  2E29               	goto	u6773
 10280  1625  3000               	movlw	0
 10281  1626  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10282  1627  1D03               	skipz
 10283  1628  2E29               	goto	u6773
 10284  1629                     u6773:	
 10285  1629  1803               	btfsc	3,0
 10286  162A  0008               	return
 10287                           
 10288                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
 10289  162B  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10290  162C  3E01               	addlw	1
 10291  162D  397F               	andlw	127
 10292  162E  1D03               	btfss	3,2
 10293  162F  2E65               	goto	l6310
 10294                           
 10295                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
 10296  1630  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10297  1631  0084               	movwf	4
 10298  1632  1383               	bcf	3,7	;select IRP bank0
 10299  1633  0800               	movf	0,w
 10300  1634  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10301  1635  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10302  1636  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10303  1637  00A3               	movwf	I2C_Master_Write@d
 10304  1638  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10305  1639  00A4               	movwf	I2C_Master_Write@d+1
 10306  163A  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10307                           
 10308                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
 10309  163F  160A  158A  22DC  160A  118A  	fcall	_I2C_Master_Stop
 10310                           
 10311                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
 10312  1644  3000               	movlw	0
 10313  1645  1283               	bcf	3,5	;RP0=0, select bank0
 10314  1646  00A3               	movwf	my_delay_ms_WDT@time+3
 10315  1647  3000               	movlw	0
 10316  1648  00A2               	movwf	my_delay_ms_WDT@time+2
 10317  1649  3000               	movlw	0
 10318  164A  00A1               	movwf	my_delay_ms_WDT@time+1
 10319  164B  3005               	movlw	5
 10320  164C  00A0               	movwf	my_delay_ms_WDT@time
 10321  164D  160A  158A  2661  160A  118A  	fcall	_my_delay_ms_WDT
 10322                           
 10323                           ;EEPROM_24C1025.c: 172:             mem_add++;
 10324  1652  3001               	movlw	1
 10325  1653  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10326  1654  3000               	movlw	0
 10327  1655  1803               	skipnc
 10328  1656  3001               	movlw	1
 10329  1657  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10330  1658  3000               	movlw	0
 10331  1659  1803               	skipnc
 10332  165A  3001               	movlw	1
 10333  165B  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10334  165C  3000               	movlw	0
 10335  165D  1803               	skipnc
 10336  165E  3001               	movlw	1
 10337  165F  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10338                           
 10339                           ;EEPROM_24C1025.c: 173:             data++;
 10340  1660  3001               	movlw	1
 10341  1661  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10342  1662  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10343  1663  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10344  1664  2DC2               	goto	L10
 10345  1665                     l6310:	
 10346                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10347                           
 10348                           
 10349                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
 10350  1665  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10351  1666  0084               	movwf	4
 10352  1667  1383               	bcf	3,7	;select IRP bank0
 10353  1668  0800               	movf	0,w
 10354  1669  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10355  166A  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10356  166B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10357  166C  00A3               	movwf	I2C_Master_Write@d
 10358  166D  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10359  166E  00A4               	movwf	I2C_Master_Write@d+1
 10360  166F  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10361                           
 10362                           ;EEPROM_24C1025.c: 188:             data++;
 10363  1674  3001               	movlw	1
 10364  1675  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10365  1676  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10366  1677  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10367                           
 10368                           ;EEPROM_24C1025.c: 189:             mem_add++;
 10369  1678  3001               	movlw	1
 10370  1679  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10371  167A  3000               	movlw	0
 10372  167B  1803               	skipnc
 10373  167C  3001               	movlw	1
 10374  167D  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10375  167E  3000               	movlw	0
 10376  167F  1803               	skipnc
 10377  1680  3001               	movlw	1
 10378  1681  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10379  1682  3000               	movlw	0
 10380  1683  1803               	skipnc
 10381  1684  3001               	movlw	1
 10382  1685  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10383  1686  2E11               	goto	l6316
 10384  1687                     l6318:	
 10385                           
 10386                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
 10387  1687  3000               	movlw	0
 10388  1688  00A3               	movwf	I2C_Master_Write@d
 10389  1689  00A4               	movwf	I2C_Master_Write@d+1
 10390  168A  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 10391                           
 10392                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
 10393  168F  160A  158A  22DC  160A  118A  	fcall	_I2C_Master_Stop
 10394                           
 10395                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
 10396  1694  3000               	movlw	0
 10397  1695  1283               	bcf	3,5	;RP0=0, select bank0
 10398  1696  00A3               	movwf	my_delay_ms_WDT@time+3
 10399  1697  3000               	movlw	0
 10400  1698  00A2               	movwf	my_delay_ms_WDT@time+2
 10401  1699  3000               	movlw	0
 10402  169A  00A1               	movwf	my_delay_ms_WDT@time+1
 10403  169B  3005               	movlw	5
 10404  169C  00A0               	movwf	my_delay_ms_WDT@time
 10405  169D  160A  158A  2661   	fcall	_my_delay_ms_WDT
 10406  16A0  0008               	return
 10407  16A1                     __end_of_EEPROM_24C1025_Write_Str:	
 10408                           
 10409                           	psect	text42
 10410  1B25                     __ptext42:	
 10411 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10412 ;; Defined at:
 10413 ;;		line 268 in file "EEPROM_24C1025.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  chip_add        1    wreg     unsigned char 
 10416 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10417 ;;  data            1   26[BANK0 ] unsigned char 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      void 
 10422 ;; Registers used:
 10423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 300/100
 10426 ;;		On exit  : 300/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10429 ;;      Params:         0       5       0       0       0
 10430 ;;      Locals:         0       1       0       0       0
 10431 ;;      Temps:          0       1       0       0       0
 10432 ;;      Totals:         0       7       0       0       0
 10433 ;;Total ram usage:        7 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    4
 10436 ;; This function calls:
 10437 ;;		_EEPROM_24C1025_Write_Buffer
 10438 ;; This function is called by:
 10439 ;;		_Decodify_Command
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           
 10444                           ;psect for function _EEPROM_24C1025_Write_Byte
 10445  1B25                     _EEPROM_24C1025_Write_Byte:	
 10446                           
 10447                           ;incstack = 0
 10448                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10449                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10450  1B25  1283               	bcf	3,5	;RP0=0, select bank0
 10451  1B26  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10452                           
 10453                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10454  1B27  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10455  1B28  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10456  1B29  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10457  1B2A  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10458  1B2B  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10459  1B2C  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10460  1B2D  0836               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10461  1B2E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10462  1B2F  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10463  1B30  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10464  1B31  303A               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10465  1B32  00BB               	movwf	??_EEPROM_24C1025_Write_Byte
 10466  1B33  083B               	movf	??_EEPROM_24C1025_Write_Byte,w
 10467  1B34  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10468  1B35  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10469  1B36  160A  118A  26A1   	fcall	_EEPROM_24C1025_Write_Buffer
 10470  1B39  0008               	return
 10471  1B3A                     __end_of_EEPROM_24C1025_Write_Byte:	
 10472                           
 10473                           	psect	text43
 10474  082B                     __ptext43:	
 10475 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10476 ;; Defined at:
 10477 ;;		line 201 in file "EEPROM_24C1025.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  chip_add        1    wreg     unsigned char 
 10480 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10481 ;;  texto           1   14[BANK0 ] PTR unsigned char 
 10482 ;;		 -> texto(16), 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10485 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10486 ;;  range           1   19[BANK0 ] unsigned char 
 10487 ;;  cnt             1   17[BANK0 ] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 300/100
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10497 ;;      Params:         0       5       0       0       0
 10498 ;;      Locals:         0       4       0       0       0
 10499 ;;      Temps:          0       2       0       0       0
 10500 ;;      Totals:         0      11       0       0       0
 10501 ;;Total ram usage:       11 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    3
 10504 ;; This function calls:
 10505 ;;		_I2C_Master_Read
 10506 ;;		_I2C_Master_RepeatedStart
 10507 ;;		_I2C_Master_Start
 10508 ;;		_I2C_Master_Stop
 10509 ;;		_I2C_Master_Write
 10510 ;;		_my_delay_ms_WDT
 10511 ;; This function is called by:
 10512 ;;		_Decodify_Command
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           
 10517                           ;psect for function _EEPROM_24C1025_Read_Str
 10518  082B                     _EEPROM_24C1025_Read_Str:	
 10519                           
 10520                           ;incstack = 0
 10521                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10522                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10523  082B  1283               	bcf	3,5	;RP0=0, select bank0
 10524  082C  00B2               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10525                           
 10526                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
 10527  082D  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10528                           
 10529                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
 10530  082E  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10531  082F  1D03               	btfss	3,2
 10532  0830  0008               	return
 10533  0831  3002               	movlw	2
 10534  0832  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10535  0833  1D03               	skipz
 10536  0834  283D               	goto	u6813
 10537  0835  3000               	movlw	0
 10538  0836  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10539  0837  1D03               	skipz
 10540  0838  283D               	goto	u6813
 10541  0839  3000               	movlw	0
 10542  083A  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10543  083B  1D03               	skipz
 10544  083C  283D               	goto	u6813
 10545  083D                     u6813:	
 10546  083D  1803               	btfsc	3,0
 10547  083E  0008               	return
 10548                           
 10549                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10550  083F  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10551  0840  1D03               	btfss	3,2
 10552  0841  2850               	goto	l6330
 10553  0842  3001               	movlw	1
 10554  0843  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10555  0844  1D03               	skipz
 10556  0845  284E               	goto	u6823
 10557  0846  3000               	movlw	0
 10558  0847  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10559  0848  1D03               	skipz
 10560  0849  284E               	goto	u6823
 10561  084A  3000               	movlw	0
 10562  084B  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10563  084C  1D03               	skipz
 10564  084D  284E               	goto	u6823
 10565  084E                     u6823:	
 10566  084E  1C03               	btfss	3,0
 10567  084F  2855               	goto	l6332
 10568  0850                     l6330:	
 10569  0850  3008               	movlw	8
 10570  0851  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10571  0852  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10572  0853  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 10573  0854  2856               	goto	l6334
 10574  0855                     l6332:	
 10575  0855  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10576  0856                     l6334:	
 10577                           
 10578                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
 10579  0856  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10580  0857  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10581  0858  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10582  0859  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10583                           
 10584                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
 10585  085A  1003               	clrc
 10586  085B  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10587                           
 10588                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
 10589  085C  30A0               	movlw	160
 10590  085D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10591  085E  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10592  085F  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10593                           
 10594                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
 10595  0860  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10596                           
 10597                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
 10598  0861  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 10599  0862  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10600  0863  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10601  0864  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10602                           
 10603                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
 10604  0865  160A  158A  2314  120A  158A  	fcall	_I2C_Master_Start
 10605                           
 10606                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
 10607  086A  1283               	bcf	3,5	;RP0=0, select bank0
 10608  086B  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10609  086C  39FE               	andlw	254
 10610  086D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10611  086E  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10612  086F  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10613  0870  00A3               	movwf	I2C_Master_Write@d
 10614  0871  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10615  0872  00A4               	movwf	I2C_Master_Write@d+1
 10616  0873  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10617                           
 10618                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
 10619  0878  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10620  0879  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10621  087A  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10622  087B  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10623  087C  00A3               	movwf	I2C_Master_Write@d
 10624  087D  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10625  087E  00A4               	movwf	I2C_Master_Write@d+1
 10626  087F  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10627                           
 10628                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
 10629  0884  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10630  0885  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10631  0886  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10632  0887  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10633  0888  00A3               	movwf	I2C_Master_Write@d
 10634  0889  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10635  088A  00A4               	movwf	I2C_Master_Write@d+1
 10636  088B  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10637                           
 10638                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
 10639  0890  160A  118A  205C  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10640                           
 10641                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
 10642  0895  1283               	bcf	3,5	;RP0=0, select bank0
 10643  0896  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10644  0897  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10645  0898  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10646  0899  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10647  089A  00A3               	movwf	I2C_Master_Write@d
 10648  089B  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10649  089C  00A4               	movwf	I2C_Master_Write@d+1
 10650  089D  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10651                           
 10652                           ;EEPROM_24C1025.c: 222:      cnt=0;
 10653  08A2  01B1               	clrf	EEPROM_24C1025_Read_Str@cnt
 10654  08A3                     l69:	
 10655                           ;EEPROM_24C1025.c: 223:      do{
 10656                           
 10657  08A3  0064               	clrwdt	;# 
 10658                           
 10659                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10660  08A4  1283               	bcf	3,5	;RP0=0, select bank0
 10661  08A5  1303               	bcf	3,6	;RP1=0, select bank0
 10662  08A6  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10663  08A7  1D03               	btfss	3,2
 10664  08A8  2984               	goto	l6412
 10665  08A9  3002               	movlw	2
 10666  08AA  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10667  08AB  1D03               	skipz
 10668  08AC  28B5               	goto	u6833
 10669  08AD  3000               	movlw	0
 10670  08AE  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10671  08AF  1D03               	skipz
 10672  08B0  28B5               	goto	u6833
 10673  08B1  3000               	movlw	0
 10674  08B2  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10675  08B3  1D03               	skipz
 10676  08B4  28B5               	goto	u6833
 10677  08B5                     u6833:	
 10678  08B5  1803               	btfsc	3,0
 10679  08B6  2984               	goto	l6412
 10680                           
 10681                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10682  08B7  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10683  08B8  3E01               	addlw	1
 10684  08B9  397F               	andlw	127
 10685  08BA  1D03               	btfss	3,2
 10686  08BB  2954               	goto	l6400
 10687                           
 10688                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
 10689  08BC  3000               	movlw	0
 10690  08BD  00A3               	movwf	I2C_Master_Read@a
 10691  08BE  00A4               	movwf	I2C_Master_Read@a+1
 10692  08BF  160A  158A  25F5  120A  158A  	fcall	_I2C_Master_Read
 10693  08C4  0823               	movf	?_I2C_Master_Read,w
 10694  08C5  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10695  08C6  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10696  08C7  0084               	movwf	4
 10697  08C8  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10698  08C9  1383               	bcf	3,7	;select IRP bank0
 10699  08CA  0080               	movwf	0
 10700                           
 10701                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10702  08CB  160A  158A  22DC  120A  158A  	fcall	_I2C_Master_Stop
 10703                           
 10704                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
 10705  08D0  3000               	movlw	0
 10706  08D1  1283               	bcf	3,5	;RP0=0, select bank0
 10707  08D2  00A3               	movwf	my_delay_ms_WDT@time+3
 10708  08D3  3000               	movlw	0
 10709  08D4  00A2               	movwf	my_delay_ms_WDT@time+2
 10710  08D5  3000               	movlw	0
 10711  08D6  00A1               	movwf	my_delay_ms_WDT@time+1
 10712  08D7  3005               	movlw	5
 10713  08D8  00A0               	movwf	my_delay_ms_WDT@time
 10714  08D9  160A  158A  2661  120A  158A  	fcall	_my_delay_ms_WDT
 10715                           
 10716                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10717  08DE  3001               	movlw	1
 10718  08DF  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10719  08E0  3000               	movlw	0
 10720  08E1  1803               	skipnc
 10721  08E2  3001               	movlw	1
 10722  08E3  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10723  08E4  3000               	movlw	0
 10724  08E5  1803               	skipnc
 10725  08E6  3001               	movlw	1
 10726  08E7  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10727  08E8  3000               	movlw	0
 10728  08E9  1803               	skipnc
 10729  08EA  3001               	movlw	1
 10730  08EB  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10731                           
 10732                           ;EEPROM_24C1025.c: 233:              texto++;
 10733  08EC  3001               	movlw	1
 10734  08ED  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10735  08EE  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10736  08EF  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 10737                           
 10738                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10739  08F0  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10740  08F1  1D03               	btfss	3,2
 10741  08F2  2901               	goto	l6374
 10742  08F3  3001               	movlw	1
 10743  08F4  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10744  08F5  1D03               	skipz
 10745  08F6  28FF               	goto	u6853
 10746  08F7  3000               	movlw	0
 10747  08F8  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10748  08F9  1D03               	skipz
 10749  08FA  28FF               	goto	u6853
 10750  08FB  3000               	movlw	0
 10751  08FC  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10752  08FD  1D03               	skipz
 10753  08FE  28FF               	goto	u6853
 10754  08FF                     u6853:	
 10755  08FF  1C03               	btfss	3,0
 10756  0900  2906               	goto	l6376
 10757  0901                     l6374:	
 10758  0901  3008               	movlw	8
 10759  0902  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10760  0903  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10761  0904  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 10762  0905  2907               	goto	l6378
 10763  0906                     l6376:	
 10764  0906  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10765  0907                     l6378:	
 10766                           
 10767                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10768  0907  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10769  0908  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10770  0909  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10771  090A  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10772                           
 10773                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10774  090B  1003               	clrc
 10775  090C  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10776                           
 10777                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10778  090D  30A0               	movlw	160
 10779  090E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10780  090F  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10781  0910  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10782                           
 10783                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10784  0911  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10785                           
 10786                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10787  0912  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 10788  0913  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10789  0914  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10790  0915  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10791                           
 10792                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10793  0916  160A  158A  2314  120A  158A  	fcall	_I2C_Master_Start
 10794                           
 10795                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10796  091B  1283               	bcf	3,5	;RP0=0, select bank0
 10797  091C  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10798  091D  39FE               	andlw	254
 10799  091E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10800  091F  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10801  0920  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10802  0921  00A3               	movwf	I2C_Master_Write@d
 10803  0922  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10804  0923  00A4               	movwf	I2C_Master_Write@d+1
 10805  0924  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10806                           
 10807                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10808  0929  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10809  092A  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10810  092B  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10811  092C  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10812  092D  00A3               	movwf	I2C_Master_Write@d
 10813  092E  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10814  092F  00A4               	movwf	I2C_Master_Write@d+1
 10815  0930  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10816                           
 10817                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10818  0935  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10819  0936  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10820  0937  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10821  0938  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10822  0939  00A3               	movwf	I2C_Master_Write@d
 10823  093A  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10824  093B  00A4               	movwf	I2C_Master_Write@d+1
 10825  093C  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10826                           
 10827                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10828  0941  160A  118A  205C  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10829                           
 10830                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 10831  0946  1283               	bcf	3,5	;RP0=0, select bank0
 10832  0947  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10833  0948  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10834  0949  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10835  094A  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10836  094B  00A3               	movwf	I2C_Master_Write@d
 10837  094C  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10838  094D  00A4               	movwf	I2C_Master_Write@d+1
 10839  094E  160A  158A  22FA  120A  158A  	fcall	_I2C_Master_Write
 10840                           
 10841                           ;EEPROM_24C1025.c: 247:              }
 10842  0953  297B               	goto	l6410
 10843  0954                     l6400:	
 10844                           
 10845                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
 10846  0954  3001               	movlw	1
 10847  0955  00A3               	movwf	I2C_Master_Read@a
 10848  0956  3000               	movlw	0
 10849  0957  00A4               	movwf	I2C_Master_Read@a+1
 10850  0958  160A  158A  25F5  120A  158A  	fcall	_I2C_Master_Read
 10851  095D  0823               	movf	?_I2C_Master_Read,w
 10852  095E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10853  095F  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10854  0960  0084               	movwf	4
 10855  0961  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10856  0962  1383               	bcf	3,7	;select IRP bank0
 10857  0963  0080               	movwf	0
 10858                           
 10859                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
 10860  0964  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10861  0965  0084               	movwf	4
 10862  0966  0800               	movf	0,w
 10863  0967  1903               	btfsc	3,2
 10864  0968  2984               	goto	l6412
 10865                           
 10866                           ;EEPROM_24C1025.c: 252:              texto++;
 10867  0969  3001               	movlw	1
 10868  096A  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10869  096B  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10870  096C  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 10871                           
 10872                           ;EEPROM_24C1025.c: 253:              mem_add++;
 10873  096D  3001               	movlw	1
 10874  096E  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10875  096F  3000               	movlw	0
 10876  0970  1803               	skipnc
 10877  0971  3001               	movlw	1
 10878  0972  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10879  0973  3000               	movlw	0
 10880  0974  1803               	skipnc
 10881  0975  3001               	movlw	1
 10882  0976  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10883  0977  3000               	movlw	0
 10884  0978  1803               	skipnc
 10885  0979  3001               	movlw	1
 10886  097A  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10887  097B                     l6410:	
 10888                           
 10889                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 10890  097B  3001               	movlw	1
 10891  097C  07B1               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10892  097D  30FF               	movlw	-1
 10893  097E  0731               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10894  097F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10895  0980  3040               	movlw	64
 10896  0981  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
 10897  0982  1C03               	skipc
 10898  0983  28A3               	goto	l69
 10899  0984                     l6412:	
 10900                           
 10901                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 10902  0984  3000               	movlw	0
 10903  0985  00A3               	movwf	I2C_Master_Read@a
 10904  0986  00A4               	movwf	I2C_Master_Read@a+1
 10905  0987  160A  158A  25F5  120A  158A  	fcall	_I2C_Master_Read
 10906                           
 10907                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 10908  098C  160A  158A  22DC  120A  158A  	fcall	_I2C_Master_Stop
 10909                           
 10910                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10911  0991  30B9               	movlw	185
 10912  0992  1283               	bcf	3,5	;RP0=0, select bank0
 10913  0993  1303               	bcf	3,6	;RP1=0, select bank0
 10914  0994  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10915  0995                     u7767:	
 10916  0995  2996               	nop2
 10917  0996  2997               	nop2
 10918  0997  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10919  0998  2995               	goto	u7767
 10920  0999  299A               	nop2
 10921  099A  0008               	return
 10922  099B                     __end_of_EEPROM_24C1025_Read_Str:	
 10923                           
 10924                           	psect	text44
 10925  1CE8                     __ptext44:	
 10926 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10927 ;; Defined at:
 10928 ;;		line 287 in file "EEPROM_24C1025.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  chip_add        1    wreg     unsigned char 
 10931 ;;  mem_add         4   24[BANK0 ] unsigned long 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  chip_add        1   30[BANK0 ] unsigned char 
 10934 ;;  data            2   31[BANK0 ] unsigned char [2]
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  2   24[BANK0 ] unsigned int 
 10937 ;; Registers used:
 10938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10939 ;; Tracked objects:
 10940 ;;		On entry : 300/100
 10941 ;;		On exit  : 300/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10944 ;;      Params:         0       4       0       0       0
 10945 ;;      Locals:         0       3       0       0       0
 10946 ;;      Temps:          0       2       0       0       0
 10947 ;;      Totals:         0       9       0       0       0
 10948 ;;Total ram usage:        9 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    4
 10951 ;; This function calls:
 10952 ;;		_EEPROM_24C1025_Read_Buffer
 10953 ;; This function is called by:
 10954 ;;		_Decodify_Command
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _EEPROM_24C1025_Read_Int
 10960  1CE8                     _EEPROM_24C1025_Read_Int:	
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10964                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10965  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
 10966  1CE9  00BE               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10967                           
 10968                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10969  1CEA  083B               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10970  1CEB  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10971  1CEC  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10972  1CED  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10973  1CEE  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10974  1CEF  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10975  1CF0  0838               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10976  1CF1  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10977  1CF2  3002               	movlw	2
 10978  1CF3  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 10979  1CF4  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 10980  1CF5  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10981  1CF6  303F               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10982  1CF7  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10983  1CF8  3000               	movlw	0
 10984  1CF9  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 10985  1CFA  083E               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10986  1CFB  120A  118A  267E   	fcall	_EEPROM_24C1025_Read_Buffer
 10987                           
 10988                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 10989  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
 10990  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
 10991  1D00  083F               	movf	EEPROM_24C1025_Read_Int@data,w
 10992  1D01  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 10993  1D02  01BD               	clrf	??_EEPROM_24C1025_Read_Int+1
 10994  1D03  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 10995  1D04  00BD               	movwf	??_EEPROM_24C1025_Read_Int+1
 10996  1D05  01BC               	clrf	??_EEPROM_24C1025_Read_Int
 10997  1D06  0840               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10998  1D07  073C               	addwf	??_EEPROM_24C1025_Read_Int,w
 10999  1D08  00B8               	movwf	?_EEPROM_24C1025_Read_Int
 11000  1D09  3000               	movlw	0
 11001  1D0A  1803               	skipnc
 11002  1D0B  3001               	movlw	1
 11003  1D0C  073D               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11004  1D0D  00B9               	movwf	?_EEPROM_24C1025_Read_Int+1
 11005  1D0E  0008               	return
 11006  1D0F                     __end_of_EEPROM_24C1025_Read_Int:	
 11007                           
 11008                           	psect	text45
 11009  1B93                     __ptext45:	
 11010 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11011 ;; Defined at:
 11012 ;;		line 273 in file "EEPROM_24C1025.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  chip_add        1    wreg     unsigned char 
 11015 ;;  mem_add         4   24[BANK0 ] unsigned long 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11018 ;;  data            1   29[BANK0 ] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      unsigned char 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 300/100
 11025 ;;		On exit  : 300/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11028 ;;      Params:         0       4       0       0       0
 11029 ;;      Locals:         0       2       0       0       0
 11030 ;;      Temps:          0       0       0       0       0
 11031 ;;      Totals:         0       6       0       0       0
 11032 ;;Total ram usage:        6 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    4
 11035 ;; This function calls:
 11036 ;;		_EEPROM_24C1025_Read_Buffer
 11037 ;; This function is called by:
 11038 ;;		_Decodify_Command
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           
 11043                           ;psect for function _EEPROM_24C1025_Read_Byte
 11044  1B93                     _EEPROM_24C1025_Read_Byte:	
 11045                           
 11046                           ;incstack = 0
 11047                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11048                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11049  1B93  1283               	bcf	3,5	;RP0=0, select bank0
 11050  1B94  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11051                           
 11052                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11053  1B95  083B               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11054  1B96  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11055  1B97  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11056  1B98  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11057  1B99  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11058  1B9A  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11059  1B9B  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11060  1B9C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11061  1B9D  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11062  1B9E  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11063  1B9F  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11064  1BA0  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11065  1BA1  3000               	movlw	0
 11066  1BA2  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11067  1BA3  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11068  1BA4  120A  118A  267E   	fcall	_EEPROM_24C1025_Read_Buffer
 11069                           
 11070                           ;EEPROM_24C1025.c: 276:     return data;
 11071  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
 11072  1BA8  1303               	bcf	3,6	;RP1=0, select bank0
 11073  1BA9  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11074  1BAA  0008               	return
 11075  1BAB                     __end_of_EEPROM_24C1025_Read_Byte:	
 11076                           
 11077                           	psect	text46
 11078  067E                     __ptext46:	
 11079 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11080 ;; Defined at:
 11081 ;;		line 77 in file "EEPROM_24C1025.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  chip_add        1    wreg     unsigned char 
 11084 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11085 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11086 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11087 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11090 ;;  cnt             1   20[BANK0 ] unsigned char 
 11091 ;;  ctrl            1   23[BANK0 ] unsigned char 
 11092 ;;  range           1   22[BANK0 ] unsigned char 
 11093 ;;  cnt             1    0        unsigned char 
 11094 ;; Return value:  Size  Location     Type
 11095 ;;                  1    wreg      void 
 11096 ;; Registers used:
 11097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11098 ;; Tracked objects:
 11099 ;;		On entry : 200/100
 11100 ;;		On exit  : 0/0
 11101 ;;		Unchanged: 0/0
 11102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11103 ;;      Params:         0       7       0       0       0
 11104 ;;      Locals:         0       5       0       0       0
 11105 ;;      Temps:          0       2       0       0       0
 11106 ;;      Totals:         0      14       0       0       0
 11107 ;;Total ram usage:       14 bytes
 11108 ;; Hardware stack levels used:    1
 11109 ;; Hardware stack levels required when called:    3
 11110 ;; This function calls:
 11111 ;;		_I2C_Master_Read
 11112 ;;		_I2C_Master_RepeatedStart
 11113 ;;		_I2C_Master_Start
 11114 ;;		_I2C_Master_Stop
 11115 ;;		_I2C_Master_Write
 11116 ;;		_my_delay_ms_WDT
 11117 ;; This function is called by:
 11118 ;;		_EEPROM_24C1025_Read_Byte
 11119 ;;		_EEPROM_24C1025_Read_Int
 11120 ;;		_Decodify_Command
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           
 11125                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11126  067E                     _EEPROM_24C1025_Read_Buffer:	
 11127                           
 11128                           ;incstack = 0
 11129                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11130                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11131  067E  1283               	bcf	3,5	;RP0=0, select bank0
 11132  067F  00B5               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11133                           
 11134                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11135  0680  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11136                           
 11137                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11138  0681  3014               	movlw	20
 11139  0682  1683               	bsf	3,5	;RP0=1, select bank1
 11140  0683  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11141  0684  3000               	movlw	0
 11142  0685  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11143                           
 11144                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11145  0686  1283               	bcf	3,5	;RP0=0, select bank0
 11146  0687  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11147  0688  1D03               	btfss	3,2
 11148  0689  0008               	return
 11149  068A  3002               	movlw	2
 11150  068B  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11151  068C  1D03               	skipz
 11152  068D  2E96               	goto	u5463
 11153  068E  3000               	movlw	0
 11154  068F  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11155  0690  1D03               	skipz
 11156  0691  2E96               	goto	u5463
 11157  0692  3000               	movlw	0
 11158  0693  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11159  0694  1D03               	skipz
 11160  0695  2E96               	goto	u5463
 11161  0696                     u5463:	
 11162  0696  1803               	btfsc	3,0
 11163  0697  0008               	return
 11164                           
 11165                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11166  0698  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11167  0699  1D03               	btfss	3,2
 11168  069A  2EA9               	goto	l5614
 11169  069B  3001               	movlw	1
 11170  069C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11171  069D  1D03               	skipz
 11172  069E  2EA7               	goto	u5473
 11173  069F  3000               	movlw	0
 11174  06A0  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11175  06A1  1D03               	skipz
 11176  06A2  2EA7               	goto	u5473
 11177  06A3  3000               	movlw	0
 11178  06A4  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11179  06A5  1D03               	skipz
 11180  06A6  2EA7               	goto	u5473
 11181  06A7                     u5473:	
 11182  06A7  1C03               	btfss	3,0
 11183  06A8  2EAE               	goto	l5616
 11184  06A9                     l5614:	
 11185  06A9  3008               	movlw	8
 11186  06AA  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11187  06AB  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11188  06AC  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 11189  06AD  2EAF               	goto	l5618
 11190  06AE                     l5616:	
 11191  06AE  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11192  06AF                     l5618:	
 11193                           
 11194                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11195  06AF  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11196  06B0  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11197  06B1  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11198  06B2  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11199                           
 11200                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11201  06B3  1003               	clrc
 11202  06B4  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11203                           
 11204                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11205  06B5  30A0               	movlw	160
 11206  06B6  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11207  06B7  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11208  06B8  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11209                           
 11210                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11211  06B9  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11212                           
 11213                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11214  06BA  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11215  06BB  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11216  06BC  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11217  06BD  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11218                           
 11219                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11220  06BE  160A  158A  2314  120A  118A  	fcall	_I2C_Master_Start
 11221                           
 11222                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11223  06C3  1283               	bcf	3,5	;RP0=0, select bank0
 11224  06C4  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11225  06C5  39FE               	andlw	254
 11226  06C6  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11227  06C7  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11228  06C8  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11229  06C9  00A3               	movwf	I2C_Master_Write@d
 11230  06CA  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11231  06CB  00A4               	movwf	I2C_Master_Write@d+1
 11232  06CC  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11233                           
 11234                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11235  06D1  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11236  06D2  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11237  06D3  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11238  06D4  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11239  06D5  00A3               	movwf	I2C_Master_Write@d
 11240  06D6  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11241  06D7  00A4               	movwf	I2C_Master_Write@d+1
 11242  06D8  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11243                           
 11244                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11245  06DD  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11246  06DE  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11247  06DF  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11248  06E0  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11249  06E1  00A3               	movwf	I2C_Master_Write@d
 11250  06E2  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11251  06E3  00A4               	movwf	I2C_Master_Write@d+1
 11252  06E4  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11253                           
 11254                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11255  06E9  160A  118A  205C  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11256                           
 11257                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11258  06EE  1283               	bcf	3,5	;RP0=0, select bank0
 11259  06EF  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11260  06F0  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11261  06F1  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11262  06F2  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11263  06F3  00A3               	movwf	I2C_Master_Write@d
 11264  06F4  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11265  06F5  00A4               	movwf	I2C_Master_Write@d+1
 11266  06F6  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11267                           
 11268                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11269  06FB  01B4               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 11270  06FC                     l5692:	
 11271  06FC  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11272  06FD  0234               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 11273  06FE  1803               	btfsc	3,0
 11274  06FF  2FE0               	goto	l5694
 11275  0700  0064               	clrwdt	;# 
 11276                           
 11277                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11278  0701  1283               	bcf	3,5	;RP0=0, select bank0
 11279  0702  1303               	bcf	3,6	;RP1=0, select bank0
 11280  0703  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11281  0704  1D03               	btfss	3,2
 11282  0705  2FE0               	goto	l5694
 11283  0706  3002               	movlw	2
 11284  0707  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11285  0708  1D03               	skipz
 11286  0709  2F12               	goto	u5483
 11287  070A  3000               	movlw	0
 11288  070B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11289  070C  1D03               	skipz
 11290  070D  2F12               	goto	u5483
 11291  070E  3000               	movlw	0
 11292  070F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11293  0710  1D03               	skipz
 11294  0711  2F12               	goto	u5483
 11295  0712                     u5483:	
 11296  0712  1803               	btfsc	3,0
 11297  0713  2FE0               	goto	l5694
 11298                           
 11299                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11300  0714  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11301  0715  3E01               	addlw	1
 11302  0716  397F               	andlw	127
 11303  0717  1D03               	btfss	3,2
 11304  0718  2FB5               	goto	l5684
 11305                           
 11306                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11307  0719  3000               	movlw	0
 11308  071A  00A3               	movwf	I2C_Master_Read@a
 11309  071B  00A4               	movwf	I2C_Master_Read@a+1
 11310  071C  160A  158A  25F5  120A  118A  	fcall	_I2C_Master_Read
 11311  0721  0823               	movf	?_I2C_Master_Read,w
 11312  0722  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11313  0723  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11314  0724  0084               	movwf	4
 11315  0725  1783               	bsf	3,7
 11316  0726  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 11317  0727  1383               	bcf	3,7
 11318  0728  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11319  0729  0080               	movwf	0
 11320                           
 11321                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11322  072A  160A  158A  22DC  120A  118A  	fcall	_I2C_Master_Stop
 11323                           
 11324                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11325  072F  3000               	movlw	0
 11326  0730  1283               	bcf	3,5	;RP0=0, select bank0
 11327  0731  00A3               	movwf	my_delay_ms_WDT@time+3
 11328  0732  3000               	movlw	0
 11329  0733  00A2               	movwf	my_delay_ms_WDT@time+2
 11330  0734  3000               	movlw	0
 11331  0735  00A1               	movwf	my_delay_ms_WDT@time+1
 11332  0736  3005               	movlw	5
 11333  0737  00A0               	movwf	my_delay_ms_WDT@time
 11334  0738  160A  158A  2661  120A  118A  	fcall	_my_delay_ms_WDT
 11335                           
 11336                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11337  073D  3001               	movlw	1
 11338  073E  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11339  073F  3000               	movlw	0
 11340  0740  1803               	skipnc
 11341  0741  3001               	movlw	1
 11342  0742  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11343  0743  3000               	movlw	0
 11344  0744  1803               	skipnc
 11345  0745  3001               	movlw	1
 11346  0746  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11347  0747  3000               	movlw	0
 11348  0748  1803               	skipnc
 11349  0749  3001               	movlw	1
 11350  074A  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11351                           
 11352                           ;EEPROM_24C1025.c: 115:              data++;
 11353  074B  3001               	movlw	1
 11354  074C  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11355  074D  1803               	skipnc
 11356  074E  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11357  074F  3000               	movlw	0
 11358  0750  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 11359                           
 11360                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11361  0751  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11362  0752  1D03               	btfss	3,2
 11363  0753  2F62               	goto	l5658
 11364  0754  3001               	movlw	1
 11365  0755  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11366  0756  1D03               	skipz
 11367  0757  2F60               	goto	u5503
 11368  0758  3000               	movlw	0
 11369  0759  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11370  075A  1D03               	skipz
 11371  075B  2F60               	goto	u5503
 11372  075C  3000               	movlw	0
 11373  075D  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11374  075E  1D03               	skipz
 11375  075F  2F60               	goto	u5503
 11376  0760                     u5503:	
 11377  0760  1C03               	btfss	3,0
 11378  0761  2F67               	goto	l5660
 11379  0762                     l5658:	
 11380  0762  3008               	movlw	8
 11381  0763  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11382  0764  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11383  0765  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 11384  0766  2F68               	goto	l5662
 11385  0767                     l5660:	
 11386  0767  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11387  0768                     l5662:	
 11388                           
 11389                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11390  0768  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11391  0769  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11392  076A  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11393  076B  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11394                           
 11395                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11396  076C  1003               	clrc
 11397  076D  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11398                           
 11399                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11400  076E  30A0               	movlw	160
 11401  076F  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11402  0770  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11403  0771  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11404                           
 11405                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11406  0772  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11407                           
 11408                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11409  0773  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11410  0774  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11411  0775  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11412  0776  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11413                           
 11414                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11415  0777  160A  158A  2314  120A  118A  	fcall	_I2C_Master_Start
 11416                           
 11417                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11418  077C  1283               	bcf	3,5	;RP0=0, select bank0
 11419  077D  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11420  077E  39FE               	andlw	254
 11421  077F  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11422  0780  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11423  0781  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11424  0782  00A3               	movwf	I2C_Master_Write@d
 11425  0783  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11426  0784  00A4               	movwf	I2C_Master_Write@d+1
 11427  0785  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11428                           
 11429                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11430  078A  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11431  078B  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11432  078C  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11433  078D  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11434  078E  00A3               	movwf	I2C_Master_Write@d
 11435  078F  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11436  0790  00A4               	movwf	I2C_Master_Write@d+1
 11437  0791  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11438                           
 11439                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11440  0796  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11441  0797  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11442  0798  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11443  0799  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11444  079A  00A3               	movwf	I2C_Master_Write@d
 11445  079B  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11446  079C  00A4               	movwf	I2C_Master_Write@d+1
 11447  079D  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11448                           
 11449                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11450  07A2  160A  118A  205C  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11451                           
 11452                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11453  07A7  1283               	bcf	3,5	;RP0=0, select bank0
 11454  07A8  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11455  07A9  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11456  07AA  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11457  07AB  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11458  07AC  00A3               	movwf	I2C_Master_Write@d
 11459  07AD  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11460  07AE  00A4               	movwf	I2C_Master_Write@d+1
 11461  07AF  160A  158A  22FA  120A  118A  	fcall	_I2C_Master_Write
 11462                           
 11463                           ;EEPROM_24C1025.c: 129:              }
 11464  07B4  2FDB               	goto	l5690
 11465  07B5                     l5684:	
 11466                           
 11467                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11468  07B5  3001               	movlw	1
 11469  07B6  00A3               	movwf	I2C_Master_Read@a
 11470  07B7  3000               	movlw	0
 11471  07B8  00A4               	movwf	I2C_Master_Read@a+1
 11472  07B9  160A  158A  25F5  120A  118A  	fcall	_I2C_Master_Read
 11473  07BE  0823               	movf	?_I2C_Master_Read,w
 11474  07BF  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11475  07C0  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11476  07C1  0084               	movwf	4
 11477  07C2  1783               	bsf	3,7
 11478  07C3  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 11479  07C4  1383               	bcf	3,7
 11480  07C5  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11481  07C6  0080               	movwf	0
 11482                           
 11483                           ;EEPROM_24C1025.c: 133:              data++;
 11484  07C7  3001               	movlw	1
 11485  07C8  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11486  07C9  1803               	skipnc
 11487  07CA  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11488  07CB  3000               	movlw	0
 11489  07CC  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 11490                           
 11491                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11492  07CD  3001               	movlw	1
 11493  07CE  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11494  07CF  3000               	movlw	0
 11495  07D0  1803               	skipnc
 11496  07D1  3001               	movlw	1
 11497  07D2  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11498  07D3  3000               	movlw	0
 11499  07D4  1803               	skipnc
 11500  07D5  3001               	movlw	1
 11501  07D6  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11502  07D7  3000               	movlw	0
 11503  07D8  1803               	skipnc
 11504  07D9  3001               	movlw	1
 11505  07DA  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11506  07DB                     l5690:	
 11507                           
 11508                           ;EEPROM_24C1025.c: 136:         }
 11509  07DB  3001               	movlw	1
 11510  07DC  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11511  07DD  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11512  07DE  07B4               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 11513  07DF  2EFC               	goto	l5692
 11514  07E0                     l5694:	
 11515                           
 11516                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11517  07E0  3000               	movlw	0
 11518  07E1  00A3               	movwf	I2C_Master_Read@a
 11519  07E2  00A4               	movwf	I2C_Master_Read@a+1
 11520  07E3  160A  158A  25F5  120A  118A  	fcall	_I2C_Master_Read
 11521                           
 11522                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11523  07E8  160A  158A  22DC  120A  118A  	fcall	_I2C_Master_Stop
 11524                           
 11525                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11526  07ED  30B9               	movlw	185
 11527  07EE  1283               	bcf	3,5	;RP0=0, select bank0
 11528  07EF  1303               	bcf	3,6	;RP1=0, select bank0
 11529  07F0  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11530  07F1                     u7777:	
 11531  07F1  2FF2               	nop2
 11532  07F2  2FF3               	nop2
 11533  07F3  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11534  07F4  2FF1               	goto	u7777
 11535  07F5  2FF6               	nop2
 11536  07F6  0008               	return
 11537  07F7                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11538                           
 11539                           	psect	text47
 11540  105C                     __ptext47:	
 11541 ;; *************** function _I2C_Master_RepeatedStart *****************
 11542 ;; Defined at:
 11543 ;;		line 62 in file "I2C.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0, pclath, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 300/0
 11554 ;;		On exit  : 200/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11557 ;;      Params:         0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0
 11560 ;;      Totals:         0       0       0       0       0
 11561 ;;Total ram usage:        0 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    2
 11564 ;; This function calls:
 11565 ;;		_I2C_Master_Wait
 11566 ;; This function is called by:
 11567 ;;		_EEPROM_24C1025_Read_Buffer
 11568 ;;		_EEPROM_24C1025_Read_Str
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           
 11573                           ;psect for function _I2C_Master_RepeatedStart
 11574  105C                     _I2C_Master_RepeatedStart:	
 11575                           
 11576                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11577                           
 11578                           ;incstack = 0
 11579                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11580  105C  160A  158A  243D  160A  118A  	fcall	_I2C_Master_Wait
 11581  1061  3A00               	xorlw	0
 11582  1062  1903               	skipnz
 11583  1063  0008               	return
 11584                           
 11585                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11586  1064  1683               	bsf	3,5	;RP0=1, select bank1
 11587  1065  1491               	bsf	17,1	;volatile
 11588  1066  0008               	return
 11589  1067                     __end_of_I2C_Master_RepeatedStart:	
 11590                           
 11591                           	psect	text48
 11592  1DF5                     __ptext48:	
 11593 ;; *************** function _I2C_Master_Read *****************
 11594 ;; Defined at:
 11595 ;;		line 87 in file "I2C.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  a               2    3[BANK0 ] unsigned short 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  temp            2    7[BANK0 ] unsigned short 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  2    3[BANK0 ] unsigned short 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0, pclath, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 300/0
 11606 ;;		On exit  : 300/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11609 ;;      Params:         0       2       0       0       0
 11610 ;;      Locals:         0       2       0       0       0
 11611 ;;      Temps:          0       2       0       0       0
 11612 ;;      Totals:         0       6       0       0       0
 11613 ;;Total ram usage:        6 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    2
 11616 ;; This function calls:
 11617 ;;		_I2C_Master_Wait
 11618 ;; This function is called by:
 11619 ;;		_EEPROM_24C1025_Read_Buffer
 11620 ;;		_EEPROM_24C1025_Read_Str
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           
 11625                           ;psect for function _I2C_Master_Read
 11626  1DF5                     _I2C_Master_Read:	
 11627                           
 11628                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11629                           
 11630                           ;incstack = 0
 11631                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11632  1DF5  160A  158A  243D  160A  158A  	fcall	_I2C_Master_Wait
 11633  1DFA  3A00               	xorlw	0
 11634  1DFB  1683               	bsf	3,5	;RP0=1, select bank1
 11635  1DFC  1D03               	btfss	3,2
 11636  1DFD  1591               	bsf	17,3	;volatile
 11637                           
 11638                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11639  1DFE  160A  158A  243D  160A  158A  	fcall	_I2C_Master_Wait
 11640  1E03  3A00               	xorlw	0
 11641  1E04  1903               	skipnz
 11642  1E05  2E0D               	goto	l5564
 11643  1E06  0813               	movf	19,w	;volatile
 11644  1E07  00A5               	movwf	??_I2C_Master_Read
 11645  1E08  01A6               	clrf	??_I2C_Master_Read+1
 11646  1E09  0825               	movf	??_I2C_Master_Read,w
 11647  1E0A  00A7               	movwf	I2C_Master_Read@temp
 11648  1E0B  0826               	movf	??_I2C_Master_Read+1,w
 11649  1E0C  00A8               	movwf	I2C_Master_Read@temp+1
 11650  1E0D                     l5564:	
 11651                           
 11652                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11653  1E0D  160A  158A  243D  160A  158A  	fcall	_I2C_Master_Wait
 11654  1E12  3A00               	xorlw	0
 11655  1E13  1903               	skipnz
 11656  1E14  2E27               	goto	l5576
 11657                           
 11658                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11659  1E15  0823               	movf	I2C_Master_Read@a,w
 11660  1E16  0424               	iorwf	I2C_Master_Read@a+1,w
 11661  1E17  1D03               	btfss	3,2
 11662  1E18  2E1D               	goto	u5400
 11663  1E19  1683               	bsf	3,5	;RP0=1, select bank1
 11664  1E1A  1303               	bcf	3,6	;RP1=0, select bank1
 11665  1E1B  1691               	bsf	17,5	;volatile
 11666  1E1C  2E20               	goto	l5568
 11667  1E1D                     u5400:	
 11668  1E1D  1683               	bsf	3,5	;RP0=1, select bank1
 11669  1E1E  1303               	bcf	3,6	;RP1=0, select bank1
 11670  1E1F  1291               	bcf	17,5	;volatile
 11671  1E20                     l5568:	
 11672                           
 11673                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11674  1E20  1611               	bsf	17,4	;volatile
 11675                           
 11676                           ;I2C.c: 96:     return temp;
 11677  1E21  1283               	bcf	3,5	;RP0=0, select bank0
 11678  1E22  0828               	movf	I2C_Master_Read@temp+1,w
 11679  1E23  00A4               	movwf	?_I2C_Master_Read+1
 11680  1E24  0827               	movf	I2C_Master_Read@temp,w
 11681  1E25  00A3               	movwf	?_I2C_Master_Read
 11682  1E26  0008               	return
 11683  1E27                     l5576:	
 11684                           
 11685                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11686  1E27  01A3               	clrf	?_I2C_Master_Read
 11687  1E28  01A4               	clrf	?_I2C_Master_Read+1
 11688  1E29  0008               	return
 11689  1E2A                     __end_of_I2C_Master_Read:	
 11690                           
 11691                           	psect	text49
 11692  1F84                     __ptext49:	
 11693 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11694 ;; Defined at:
 11695 ;;		line 294 in file "EEPROM_24C1025.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;  chip_add        1    wreg     unsigned char 
 11698 ;;  value           2   57[BANK0 ] unsigned int 
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;  chip_add        1   59[BANK0 ] unsigned char 
 11701 ;;  mem_add         4   60[BANK0 ] unsigned long 
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 300/100
 11708 ;;		On exit  : 300/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11711 ;;      Params:         0       2       0       0       0
 11712 ;;      Locals:         0       5       0       0       0
 11713 ;;      Temps:          0       0       0       0       0
 11714 ;;      Totals:         0       7       0       0       0
 11715 ;;Total ram usage:        7 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    5
 11718 ;; This function calls:
 11719 ;;		_EEPROM_24C1025_Write_Int
 11720 ;; This function is called by:
 11721 ;;		_Decodify_Command
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           
 11726                           ;psect for function _EEPROM_24C1025_Fill_All
 11727  1F84                     _EEPROM_24C1025_Fill_All:	
 11728                           
 11729                           ;incstack = 0
 11730                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11731                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11732  1F84  1283               	bcf	3,5	;RP0=0, select bank0
 11733  1F85  00DB               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11734                           
 11735                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11736  1F86  3000               	movlw	0
 11737  1F87  00DF               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11738  1F88  3000               	movlw	0
 11739  1F89  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11740  1F8A  3000               	movlw	0
 11741  1F8B  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11742  1F8C  3000               	movlw	0
 11743  1F8D  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11744  1F8E                     l6436:	
 11745                           
 11746                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11747  1F8E  085F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11748  1F8F  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11749  1F90  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11750  1F91  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11751  1F92  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11752  1F93  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11753  1F94  085C               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11754  1F95  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11755  1F96  085A               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11756  1F97  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11757  1F98  0859               	movf	EEPROM_24C1025_Fill_All@value,w
 11758  1F99  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11759  1F9A  085B               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11760  1F9B  160A  158A  23FF  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 11761  1FA0  0064               	clrwdt	;# 
 11762                           
 11763                           ;EEPROM_24C1025.c: 300:         }
 11764  1FA1  3002               	movlw	2
 11765  1FA2  1283               	bcf	3,5	;RP0=0, select bank0
 11766  1FA3  1303               	bcf	3,6	;RP1=0, select bank0
 11767  1FA4  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11768  1FA5  3000               	movlw	0
 11769  1FA6  1803               	skipnc
 11770  1FA7  3001               	movlw	1
 11771  1FA8  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11772  1FA9  3000               	movlw	0
 11773  1FAA  1803               	skipnc
 11774  1FAB  3001               	movlw	1
 11775  1FAC  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11776  1FAD  3000               	movlw	0
 11777  1FAE  1803               	skipnc
 11778  1FAF  3001               	movlw	1
 11779  1FB0  07DF               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11780  1FB1  085F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11781  1FB2  1D03               	btfss	3,2
 11782  1FB3  0008               	return
 11783  1FB4  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11784  1FB5  1D03               	btfss	3,2
 11785  1FB6  0008               	return
 11786  1FB7  3004               	movlw	4
 11787  1FB8  025D               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11788  1FB9  1D03               	skipz
 11789  1FBA  2FBF               	goto	u6883
 11790  1FBB  3000               	movlw	0
 11791  1FBC  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11792  1FBD  1D03               	skipz
 11793  1FBE  2FBF               	goto	u6883
 11794  1FBF                     u6883:	
 11795  1FBF  1803               	btfsc	3,0
 11796  1FC0  0008               	return
 11797  1FC1  2F8E               	goto	l6436
 11798  1FC2                     __end_of_EEPROM_24C1025_Fill_All:	
 11799                           
 11800                           	psect	text50
 11801  1BFF                     __ptext50:	
 11802 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11803 ;; Defined at:
 11804 ;;		line 279 in file "EEPROM_24C1025.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  chip_add        1    wreg     unsigned char 
 11807 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11808 ;;  data            2   50[BANK0 ] int 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  chip_add        1   54[BANK0 ] unsigned char 
 11811 ;;  local           2   55[BANK0 ] unsigned char [2]
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      void 
 11814 ;; Registers used:
 11815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 200/100
 11818 ;;		On exit  : 300/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11821 ;;      Params:         0       6       0       0       0
 11822 ;;      Locals:         0       3       0       0       0
 11823 ;;      Temps:          0       2       0       0       0
 11824 ;;      Totals:         0      11       0       0       0
 11825 ;;Total ram usage:       11 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:    4
 11828 ;; This function calls:
 11829 ;;		_EEPROM_24C1025_Write_Buffer
 11830 ;; This function is called by:
 11831 ;;		_EEPROM_24C1025_Fill_All
 11832 ;;		_Decodify_Command
 11833 ;;		_Save_Log
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           
 11838                           ;psect for function _EEPROM_24C1025_Write_Int
 11839  1BFF                     _EEPROM_24C1025_Write_Int:	
 11840                           
 11841                           ;incstack = 0
 11842                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11843                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11844  1BFF  1283               	bcf	3,5	;RP0=0, select bank0
 11845  1C00  00D6               	movwf	EEPROM_24C1025_Write_Int@chip_add
 11846                           
 11847                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 11848  1C01  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 11849  1C02  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11850  1C03  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11851  1C04  00D7               	movwf	EEPROM_24C1025_Write_Int@local
 11852                           
 11853                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 11854  1C05  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 11855  1C06  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11856  1C07  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11857  1C08  00D8               	movwf	EEPROM_24C1025_Write_Int@local+1
 11858                           
 11859                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11860  1C09  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 11861  1C0A  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11862  1C0B  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 11863  1C0C  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11864  1C0D  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 11865  1C0E  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11866  1C0F  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 11867  1C10  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11868  1C11  3002               	movlw	2
 11869  1C12  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11870  1C13  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11871  1C14  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11872  1C15  3057               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11873  1C16  00D5               	movwf	??_EEPROM_24C1025_Write_Int+1
 11874  1C17  0855               	movf	??_EEPROM_24C1025_Write_Int+1,w
 11875  1C18  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11876  1C19  0856               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 11877  1C1A  160A  118A  26A1   	fcall	_EEPROM_24C1025_Write_Buffer
 11878  1C1D  0008               	return
 11879  1C1E                     __end_of_EEPROM_24C1025_Write_Int:	
 11880                           
 11881                           	psect	text51
 11882  16A1                     __ptext51:	
 11883 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11884 ;; Defined at:
 11885 ;;		line 14 in file "EEPROM_24C1025.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  chip_add        1    wreg     unsigned char 
 11888 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11889 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11890 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11891 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11894 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11895 ;;  range           1   20[BANK0 ] unsigned char 
 11896 ;;  count           1   18[BANK0 ] unsigned char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  1    wreg      void 
 11899 ;; Registers used:
 11900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11901 ;; Tracked objects:
 11902 ;;		On entry : 200/100
 11903 ;;		On exit  : 300/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11906 ;;      Params:         0       6       0       0       0
 11907 ;;      Locals:         0       4       0       0       0
 11908 ;;      Temps:          0       2       0       0       0
 11909 ;;      Totals:         0      12       0       0       0
 11910 ;;Total ram usage:       12 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:    3
 11913 ;; This function calls:
 11914 ;;		_I2C_Master_Start
 11915 ;;		_I2C_Master_Stop
 11916 ;;		_I2C_Master_Write
 11917 ;;		_my_delay_ms_WDT
 11918 ;; This function is called by:
 11919 ;;		_EEPROM_24C1025_Write_Byte
 11920 ;;		_EEPROM_24C1025_Write_Int
 11921 ;;		_Decodify_Command
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           
 11926                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11927  16A1                     _EEPROM_24C1025_Write_Buffer:	
 11928                           
 11929                           ;incstack = 0
 11930                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11931                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11932  16A1  1283               	bcf	3,5	;RP0=0, select bank0
 11933  16A2  00B3               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11934                           
 11935                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
 11936  16A3  3014               	movlw	20
 11937  16A4  1683               	bsf	3,5	;RP0=1, select bank1
 11938  16A5  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11939  16A6  3000               	movlw	0
 11940  16A7  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11941                           
 11942                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
 11943  16A8  1283               	bcf	3,5	;RP0=0, select bank0
 11944  16A9  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11945  16AA  1D03               	btfss	3,2
 11946  16AB  0008               	return
 11947  16AC  3002               	movlw	2
 11948  16AD  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11949  16AE  1D03               	skipz
 11950  16AF  2EB8               	goto	u5303
 11951  16B0  3000               	movlw	0
 11952  16B1  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11953  16B2  1D03               	skipz
 11954  16B3  2EB8               	goto	u5303
 11955  16B4  3000               	movlw	0
 11956  16B5  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11957  16B6  1D03               	skipz
 11958  16B7  2EB8               	goto	u5303
 11959  16B8                     u5303:	
 11960  16B8  1803               	btfsc	3,0
 11961  16B9  0008               	return
 11962                           
 11963                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11964  16BA  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11965  16BB  1D03               	btfss	3,2
 11966  16BC  2ECB               	goto	l5478
 11967  16BD  3001               	movlw	1
 11968  16BE  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11969  16BF  1D03               	skipz
 11970  16C0  2EC9               	goto	u5313
 11971  16C1  3000               	movlw	0
 11972  16C2  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11973  16C3  1D03               	skipz
 11974  16C4  2EC9               	goto	u5313
 11975  16C5  3000               	movlw	0
 11976  16C6  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11977  16C7  1D03               	skipz
 11978  16C8  2EC9               	goto	u5313
 11979  16C9                     u5313:	
 11980  16C9  1C03               	btfss	3,0
 11981  16CA  2ED0               	goto	l5480
 11982  16CB                     l5478:	
 11983  16CB  3008               	movlw	8
 11984  16CC  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 11985  16CD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11986  16CE  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
 11987  16CF  2ED1               	goto	l5482
 11988  16D0                     l5480:	
 11989  16D0  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
 11990  16D1                     l5482:	
 11991                           
 11992                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
 11993  16D1  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11994  16D2  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 11995  16D3  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11996  16D4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11997                           
 11998                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
 11999  16D5  1003               	clrc
 12000  16D6  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12001                           
 12002                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
 12003  16D7  30A0               	movlw	160
 12004  16D8  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12005  16D9  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12006  16DA  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12007                           
 12008                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
 12009  16DB  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12010  16DC  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12011  16DD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12012  16DE  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12013                           
 12014                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
 12015  16DF  160A  158A  2314  160A  118A  	fcall	_I2C_Master_Start
 12016                           
 12017                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
 12018  16E4  1283               	bcf	3,5	;RP0=0, select bank0
 12019  16E5  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12020  16E6  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12021  16E7  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12022  16E8  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12023  16E9  00A3               	movwf	I2C_Master_Write@d
 12024  16EA  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12025  16EB  00A4               	movwf	I2C_Master_Write@d+1
 12026  16EC  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12027                           
 12028                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
 12029  16F1  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12030  16F2  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12031  16F3  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12032  16F4  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12033  16F5  00A3               	movwf	I2C_Master_Write@d
 12034  16F6  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12035  16F7  00A4               	movwf	I2C_Master_Write@d+1
 12036  16F8  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12037                           
 12038                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
 12039  16FD  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12040  16FE  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12041  16FF  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12042  1700  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12043  1701  00A3               	movwf	I2C_Master_Write@d
 12044  1702  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12045  1703  00A4               	movwf	I2C_Master_Write@d+1
 12046  1704  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12047                           
 12048                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
 12049  1709  01B2               	clrf	EEPROM_24C1025_Write_Buffer@count
 12050  170A                     l5544:	
 12051  170A  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12052  170B  3EFF               	addlw	255
 12053  170C  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12054  170D  30FF               	movlw	255
 12055  170E  1803               	skipnc
 12056  170F  3000               	movlw	0
 12057  1710  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12058  1711  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12059  1712  3A80               	xorlw	128
 12060  1713  3C80               	sublw	128
 12061  1714  1D03               	skipz
 12062  1715  2F18               	goto	u5355
 12063  1716  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12064  1717  0232               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12065  1718                     u5355:	
 12066  1718  1803               	btfsc	3,0
 12067  1719  2FDD               	goto	l5546
 12068  171A  0064               	clrwdt	;# 
 12069                           
 12070                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
 12071  171B  1283               	bcf	3,5	;RP0=0, select bank0
 12072  171C  1303               	bcf	3,6	;RP1=0, select bank0
 12073  171D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12074  171E  1D03               	btfss	3,2
 12075  171F  0008               	return
 12076  1720  3002               	movlw	2
 12077  1721  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12078  1722  1D03               	skipz
 12079  1723  2F2C               	goto	u5323
 12080  1724  3000               	movlw	0
 12081  1725  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12082  1726  1D03               	skipz
 12083  1727  2F2C               	goto	u5323
 12084  1728  3000               	movlw	0
 12085  1729  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12086  172A  1D03               	skipz
 12087  172B  2F2C               	goto	u5323
 12088  172C                     u5323:	
 12089  172C  1803               	btfsc	3,0
 12090  172D  0008               	return
 12091                           
 12092                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
 12093  172E  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12094  172F  3E01               	addlw	1
 12095  1730  397F               	andlw	127
 12096  1731  1D03               	btfss	3,2
 12097  1732  2FB7               	goto	l5536
 12098                           
 12099                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
 12100  1733  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12101  1734  0084               	movwf	4
 12102  1735  1383               	bcf	3,7	;select IRP bank0
 12103  1736  0800               	movf	0,w
 12104  1737  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12105  1738  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12106  1739  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12107  173A  00A3               	movwf	I2C_Master_Write@d
 12108  173B  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12109  173C  00A4               	movwf	I2C_Master_Write@d+1
 12110  173D  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12111                           
 12112                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
 12113  1742  160A  158A  22DC  160A  118A  	fcall	_I2C_Master_Stop
 12114                           
 12115                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
 12116  1747  3000               	movlw	0
 12117  1748  1283               	bcf	3,5	;RP0=0, select bank0
 12118  1749  00A3               	movwf	my_delay_ms_WDT@time+3
 12119  174A  3000               	movlw	0
 12120  174B  00A2               	movwf	my_delay_ms_WDT@time+2
 12121  174C  3000               	movlw	0
 12122  174D  00A1               	movwf	my_delay_ms_WDT@time+1
 12123  174E  3005               	movlw	5
 12124  174F  00A0               	movwf	my_delay_ms_WDT@time
 12125  1750  160A  158A  2661  160A  118A  	fcall	_my_delay_ms_WDT
 12126                           
 12127                           ;EEPROM_24C1025.c: 47:             mem_add++;
 12128  1755  3001               	movlw	1
 12129  1756  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12130  1757  3000               	movlw	0
 12131  1758  1803               	skipnc
 12132  1759  3001               	movlw	1
 12133  175A  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12134  175B  3000               	movlw	0
 12135  175C  1803               	skipnc
 12136  175D  3001               	movlw	1
 12137  175E  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12138  175F  3000               	movlw	0
 12139  1760  1803               	skipnc
 12140  1761  3001               	movlw	1
 12141  1762  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12142                           
 12143                           ;EEPROM_24C1025.c: 48:             data++;
 12144  1763  3001               	movlw	1
 12145  1764  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12146  1765  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12147  1766  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12148                           
 12149                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12150  1767  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12151  1768  1D03               	btfss	3,2
 12152  1769  2F78               	goto	l5516
 12153  176A  3001               	movlw	1
 12154  176B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12155  176C  1D03               	skipz
 12156  176D  2F76               	goto	u5343
 12157  176E  3000               	movlw	0
 12158  176F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12159  1770  1D03               	skipz
 12160  1771  2F76               	goto	u5343
 12161  1772  3000               	movlw	0
 12162  1773  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12163  1774  1D03               	skipz
 12164  1775  2F76               	goto	u5343
 12165  1776                     u5343:	
 12166  1776  1C03               	btfss	3,0
 12167  1777  2F7D               	goto	l5518
 12168  1778                     l5516:	
 12169  1778  3008               	movlw	8
 12170  1779  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12171  177A  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12172  177B  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
 12173  177C  2F7E               	goto	l5520
 12174  177D                     l5518:	
 12175  177D  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
 12176  177E                     l5520:	
 12177                           
 12178                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
 12179  177E  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12180  177F  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12181  1780  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12182  1781  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12183                           
 12184                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
 12185  1782  1003               	clrc
 12186  1783  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12187                           
 12188                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
 12189  1784  30A0               	movlw	160
 12190  1785  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12191  1786  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12192  1787  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12193                           
 12194                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
 12195  1788  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12196  1789  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12197  178A  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12198  178B  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12199                           
 12200                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
 12201  178C  160A  158A  2314  160A  118A  	fcall	_I2C_Master_Start
 12202                           
 12203                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
 12204  1791  1283               	bcf	3,5	;RP0=0, select bank0
 12205  1792  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12206  1793  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12207  1794  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12208  1795  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12209  1796  00A3               	movwf	I2C_Master_Write@d
 12210  1797  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12211  1798  00A4               	movwf	I2C_Master_Write@d+1
 12212  1799  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12213                           
 12214                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
 12215  179E  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12216  179F  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12217  17A0  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12218  17A1  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12219  17A2  00A3               	movwf	I2C_Master_Write@d
 12220  17A3  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12221  17A4  00A4               	movwf	I2C_Master_Write@d+1
 12222  17A5  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12223                           
 12224                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
 12225  17AA  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12226  17AB  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12227  17AC  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12228  17AD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12229  17AE  00A3               	movwf	I2C_Master_Write@d
 12230  17AF  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12231  17B0  00A4               	movwf	I2C_Master_Write@d+1
 12232  17B1  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12233                           
 12234                           ;EEPROM_24C1025.c: 59:             }
 12235  17B6  2FD8               	goto	l5542
 12236  17B7                     l5536:	
 12237                           
 12238                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
 12239  17B7  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12240  17B8  0084               	movwf	4
 12241  17B9  1383               	bcf	3,7	;select IRP bank0
 12242  17BA  0800               	movf	0,w
 12243  17BB  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12244  17BC  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12245  17BD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12246  17BE  00A3               	movwf	I2C_Master_Write@d
 12247  17BF  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12248  17C0  00A4               	movwf	I2C_Master_Write@d+1
 12249  17C1  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12250                           
 12251                           ;EEPROM_24C1025.c: 63:             data++;
 12252  17C6  3001               	movlw	1
 12253  17C7  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12254  17C8  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12255  17C9  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12256                           
 12257                           ;EEPROM_24C1025.c: 64:             mem_add++;
 12258  17CA  3001               	movlw	1
 12259  17CB  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12260  17CC  3000               	movlw	0
 12261  17CD  1803               	skipnc
 12262  17CE  3001               	movlw	1
 12263  17CF  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12264  17D0  3000               	movlw	0
 12265  17D1  1803               	skipnc
 12266  17D2  3001               	movlw	1
 12267  17D3  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12268  17D4  3000               	movlw	0
 12269  17D5  1803               	skipnc
 12270  17D6  3001               	movlw	1
 12271  17D7  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12272  17D8                     l5542:	
 12273                           
 12274                           ;EEPROM_24C1025.c: 66:      }
 12275  17D8  3001               	movlw	1
 12276  17D9  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12277  17DA  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12278  17DB  07B2               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12279  17DC  2F0A               	goto	l5544
 12280  17DD                     l5546:	
 12281                           
 12282                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
 12283  17DD  1283               	bcf	3,5	;RP0=0, select bank0
 12284  17DE  1303               	bcf	3,6	;RP1=0, select bank0
 12285  17DF  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12286  17E0  0084               	movwf	4
 12287  17E1  1383               	bcf	3,7	;select IRP bank0
 12288  17E2  0800               	movf	0,w
 12289  17E3  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12290  17E4  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12291  17E5  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12292  17E6  00A3               	movwf	I2C_Master_Write@d
 12293  17E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12294  17E8  00A4               	movwf	I2C_Master_Write@d+1
 12295  17E9  160A  158A  22FA  160A  118A  	fcall	_I2C_Master_Write
 12296                           
 12297                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
 12298  17EE  160A  158A  22DC  160A  118A  	fcall	_I2C_Master_Stop
 12299                           
 12300                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
 12301  17F3  3000               	movlw	0
 12302  17F4  1283               	bcf	3,5	;RP0=0, select bank0
 12303  17F5  00A3               	movwf	my_delay_ms_WDT@time+3
 12304  17F6  3000               	movlw	0
 12305  17F7  00A2               	movwf	my_delay_ms_WDT@time+2
 12306  17F8  3000               	movlw	0
 12307  17F9  00A1               	movwf	my_delay_ms_WDT@time+1
 12308  17FA  3005               	movlw	5
 12309  17FB  00A0               	movwf	my_delay_ms_WDT@time
 12310  17FC  160A  158A  2661   	fcall	_my_delay_ms_WDT
 12311  17FF  0008               	return
 12312  1800                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12313                           
 12314                           	psect	text52
 12315  1E61                     __ptext52:	
 12316 ;; *************** function _my_delay_ms_WDT *****************
 12317 ;; Defined at:
 12318 ;;		line 13 in file "my_delay.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  time            4    0[BANK0 ] long 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  i               4    6[BANK0 ] long 
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg, btemp+1
 12327 ;; Tracked objects:
 12328 ;;		On entry : 300/0
 12329 ;;		On exit  : 300/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12332 ;;      Params:         0       4       0       0       0
 12333 ;;      Locals:         0       4       0       0       0
 12334 ;;      Temps:          0       2       0       0       0
 12335 ;;      Totals:         0      10       0       0       0
 12336 ;;Total ram usage:       10 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    1
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_EEPROM_24C1025_Write_Buffer
 12343 ;;		_EEPROM_24C1025_Read_Buffer
 12344 ;;		_EEPROM_24C1025_Write_Str
 12345 ;;		_EEPROM_24C1025_Read_Str
 12346 ;;		_main
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           
 12351                           ;psect for function _my_delay_ms_WDT
 12352  1E61                     _my_delay_ms_WDT:	
 12353                           
 12354                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12355                           
 12356                           ;incstack = 0
 12357                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12358  1E61  3000               	movlw	0
 12359  1E62  00A9               	movwf	my_delay_ms_WDT@i+3
 12360  1E63  3000               	movlw	0
 12361  1E64  00A8               	movwf	my_delay_ms_WDT@i+2
 12362  1E65  3000               	movlw	0
 12363  1E66  00A7               	movwf	my_delay_ms_WDT@i+1
 12364  1E67  3000               	movlw	0
 12365  1E68  00A6               	movwf	my_delay_ms_WDT@i
 12366  1E69                     l5460:	
 12367  1E69  0829               	movf	my_delay_ms_WDT@i+3,w
 12368  1E6A  3A80               	xorlw	128
 12369  1E6B  00FF               	movwf	127
 12370  1E6C  0823               	movf	my_delay_ms_WDT@time+3,w
 12371  1E6D  3A80               	xorlw	128
 12372  1E6E  027F               	subwf	127,w
 12373  1E6F  1D03               	skipz
 12374  1E70  2E7B               	goto	u5283
 12375  1E71  0822               	movf	my_delay_ms_WDT@time+2,w
 12376  1E72  0228               	subwf	my_delay_ms_WDT@i+2,w
 12377  1E73  1D03               	skipz
 12378  1E74  2E7B               	goto	u5283
 12379  1E75  0821               	movf	my_delay_ms_WDT@time+1,w
 12380  1E76  0227               	subwf	my_delay_ms_WDT@i+1,w
 12381  1E77  1D03               	skipz
 12382  1E78  2E7B               	goto	u5283
 12383  1E79  0820               	movf	my_delay_ms_WDT@time,w
 12384  1E7A  0226               	subwf	my_delay_ms_WDT@i,w
 12385  1E7B                     u5283:	
 12386  1E7B  1803               	btfsc	3,0
 12387  1E7C  0008               	return
 12388  1E7D  0064               	clrwdt	;# 
 12389                           
 12390                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12391  1E7E  3003               	movlw	3
 12392  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
 12393  1E80  1303               	bcf	3,6	;RP1=0, select bank0
 12394  1E81  00A5               	movwf	??_my_delay_ms_WDT+1
 12395  1E82  3097               	movlw	151
 12396  1E83  00A4               	movwf	??_my_delay_ms_WDT
 12397  1E84                     u7787:	
 12398  1E84  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12399  1E85  2E84               	goto	u7787
 12400  1E86  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12401  1E87  2E84               	goto	u7787
 12402                           
 12403                           ;my_delay.c: 19:             }
 12404  1E88  3001               	movlw	1
 12405  1E89  1283               	bcf	3,5	;RP0=0, select bank0
 12406  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
 12407  1E8B  07A6               	addwf	my_delay_ms_WDT@i,f
 12408  1E8C  3000               	movlw	0
 12409  1E8D  1803               	skipnc
 12410  1E8E  3001               	movlw	1
 12411  1E8F  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12412  1E90  3000               	movlw	0
 12413  1E91  1803               	skipnc
 12414  1E92  3001               	movlw	1
 12415  1E93  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12416  1E94  3000               	movlw	0
 12417  1E95  1803               	skipnc
 12418  1E96  3001               	movlw	1
 12419  1E97  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12420  1E98  2E69               	goto	l5460
 12421  1E99                     __end_of_my_delay_ms_WDT:	
 12422                           
 12423                           	psect	text53
 12424  1AFA                     __ptext53:	
 12425 ;; *************** function _I2C_Master_Write *****************
 12426 ;; Defined at:
 12427 ;;		line 79 in file "I2C.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  d               2    3[BANK0 ] unsigned int 
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;		None
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  1    wreg      void 
 12434 ;; Registers used:
 12435 ;;		wreg, status,2, status,0, pclath, cstack
 12436 ;; Tracked objects:
 12437 ;;		On entry : 300/0
 12438 ;;		On exit  : 300/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12441 ;;      Params:         0       2       0       0       0
 12442 ;;      Locals:         0       0       0       0       0
 12443 ;;      Temps:          0       0       0       0       0
 12444 ;;      Totals:         0       2       0       0       0
 12445 ;;Total ram usage:        2 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:    2
 12448 ;; This function calls:
 12449 ;;		_I2C_Master_Wait
 12450 ;; This function is called by:
 12451 ;;		_EEPROM_24C1025_Write_Buffer
 12452 ;;		_EEPROM_24C1025_Read_Buffer
 12453 ;;		_EEPROM_24C1025_Write_Str
 12454 ;;		_EEPROM_24C1025_Read_Str
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           
 12459                           ;psect for function _I2C_Master_Write
 12460  1AFA                     _I2C_Master_Write:	
 12461                           
 12462                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12463                           
 12464                           ;incstack = 0
 12465                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12466  1AFA  160A  158A  243D  160A  158A  	fcall	_I2C_Master_Wait
 12467  1AFF  3A00               	xorlw	0
 12468  1B00  1903               	skipnz
 12469  1B01  0008               	return
 12470                           
 12471                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12472  1B02  0823               	movf	I2C_Master_Write@d,w
 12473  1B03  0093               	movwf	19	;volatile
 12474  1B04  0008               	return
 12475  1B05                     __end_of_I2C_Master_Write:	
 12476                           
 12477                           	psect	text54
 12478  1ADC                     __ptext54:	
 12479 ;; *************** function _I2C_Master_Stop *****************
 12480 ;; Defined at:
 12481 ;;		line 70 in file "I2C.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;		None
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  1    wreg      void 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0, pclath, cstack
 12490 ;; Tracked objects:
 12491 ;;		On entry : 300/0
 12492 ;;		On exit  : 200/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12495 ;;      Params:         0       0       0       0       0
 12496 ;;      Locals:         0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0
 12498 ;;      Totals:         0       0       0       0       0
 12499 ;;Total ram usage:        0 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; Hardware stack levels required when called:    2
 12502 ;; This function calls:
 12503 ;;		_I2C_Master_Wait
 12504 ;; This function is called by:
 12505 ;;		_EEPROM_24C1025_Write_Buffer
 12506 ;;		_EEPROM_24C1025_Read_Buffer
 12507 ;;		_EEPROM_24C1025_Write_Str
 12508 ;;		_EEPROM_24C1025_Read_Str
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           
 12513                           ;psect for function _I2C_Master_Stop
 12514  1ADC                     _I2C_Master_Stop:	
 12515                           
 12516                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12517                           
 12518                           ;incstack = 0
 12519                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12520  1ADC  160A  158A  243D   	fcall	_I2C_Master_Wait
 12521  1ADF  3A00               	xorlw	0
 12522                           
 12523                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12524  1AE0  1683               	bsf	3,5	;RP0=1, select bank1
 12525  1AE1  1D03               	btfss	3,2
 12526  1AE2  1511               	bsf	17,2	;volatile
 12527                           
 12528                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12529                           
 12530                           ;I2C.c: 75:     }
 12531  1AE3  178B               	bsf	11,7	;volatile
 12532  1AE4  0008               	return
 12533  1AE5                     __end_of_I2C_Master_Stop:	
 12534                           
 12535                           	psect	text55
 12536  1B14                     __ptext55:	
 12537 ;; *************** function _I2C_Master_Start *****************
 12538 ;; Defined at:
 12539 ;;		line 52 in file "I2C.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;		None
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1    wreg      void 
 12546 ;; Registers used:
 12547 ;;		wreg, status,2, status,0, pclath, cstack
 12548 ;; Tracked objects:
 12549 ;;		On entry : 300/0
 12550 ;;		On exit  : 200/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12553 ;;      Params:         0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:    2
 12560 ;; This function calls:
 12561 ;;		_I2C_Master_Wait
 12562 ;; This function is called by:
 12563 ;;		_EEPROM_24C1025_Write_Buffer
 12564 ;;		_EEPROM_24C1025_Read_Buffer
 12565 ;;		_EEPROM_24C1025_Write_Str
 12566 ;;		_EEPROM_24C1025_Read_Str
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           
 12571                           ;psect for function _I2C_Master_Start
 12572  1B14                     _I2C_Master_Start:	
 12573                           
 12574                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12575                           
 12576                           ;incstack = 0
 12577                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12578  1B14  138B               	bcf	11,7	;volatile
 12579                           
 12580                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12581  1B15  3014               	movlw	20
 12582  1B16  1683               	bsf	3,5	;RP0=1, select bank1
 12583  1B17  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12584  1B18  3000               	movlw	0
 12585  1B19  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12586                           
 12587                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12588  1B1A  160A  158A  243D  160A  158A  	fcall	_I2C_Master_Wait
 12589  1B1F  3A00               	xorlw	0
 12590  1B20  1903               	skipnz
 12591  1B21  0008               	return
 12592                           
 12593                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12594  1B22  1683               	bsf	3,5	;RP0=1, select bank1
 12595  1B23  1411               	bsf	17,0	;volatile
 12596  1B24  0008               	return
 12597  1B25                     __end_of_I2C_Master_Start:	
 12598                           
 12599                           	psect	text56
 12600  1C3D                     __ptext56:	
 12601 ;; *************** function _I2C_Master_Wait *****************
 12602 ;; Defined at:
 12603 ;;		line 37 in file "I2C.c"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;		None
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;  tempo           1    2[BANK0 ] unsigned char 
 12608 ;; Return value:  Size  Location     Type
 12609 ;;                  1    wreg      unsigned char 
 12610 ;; Registers used:
 12611 ;;		wreg, status,2, status,0
 12612 ;; Tracked objects:
 12613 ;;		On entry : 200/0
 12614 ;;		On exit  : 300/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12617 ;;      Params:         0       0       0       0       0
 12618 ;;      Locals:         0       1       0       0       0
 12619 ;;      Temps:          0       2       0       0       0
 12620 ;;      Totals:         0       3       0       0       0
 12621 ;;Total ram usage:        3 bytes
 12622 ;; Hardware stack levels used:    1
 12623 ;; Hardware stack levels required when called:    1
 12624 ;; This function calls:
 12625 ;;		Nothing
 12626 ;; This function is called by:
 12627 ;;		_I2C_Master_Start
 12628 ;;		_I2C_Master_RepeatedStart
 12629 ;;		_I2C_Master_Stop
 12630 ;;		_I2C_Master_Write
 12631 ;;		_I2C_Master_Read
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635                           
 12636                           ;psect for function _I2C_Master_Wait
 12637  1C3D                     _I2C_Master_Wait:	
 12638                           
 12639                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12643  1C3D  30C8               	movlw	200
 12644  1C3E  1283               	bcf	3,5	;RP0=0, select bank0
 12645  1C3F  00A0               	movwf	??_I2C_Master_Wait
 12646  1C40  0820               	movf	??_I2C_Master_Wait,w
 12647  1C41  00A2               	movwf	I2C_Master_Wait@tempo
 12648                           
 12649                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12650  1C42  2C4F               	goto	l5432
 12651  1C43                     l5428:	
 12652                           
 12653                           ;I2C.c: 44:          tempo--;
 12654  1C43  3001               	movlw	1
 12655  1C44  02A2               	subwf	I2C_Master_Wait@tempo,f
 12656                           
 12657                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12658  1C45  3003               	movlw	3
 12659  1C46  1283               	bcf	3,5	;RP0=0, select bank0
 12660  1C47  1303               	bcf	3,6	;RP1=0, select bank0
 12661  1C48  00A1               	movwf	??_I2C_Master_Wait+1
 12662  1C49  3097               	movlw	151
 12663  1C4A  00A0               	movwf	??_I2C_Master_Wait
 12664  1C4B                     u7797:	
 12665  1C4B  0BA0               	decfsz	??_I2C_Master_Wait,f
 12666  1C4C  2C4B               	goto	u7797
 12667  1C4D  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12668  1C4E  2C4B               	goto	u7797
 12669  1C4F                     l5432:	
 12670                           
 12671                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12672  1C4F  1683               	bsf	3,5	;RP0=1, select bank1
 12673  1C50  1303               	bcf	3,6	;RP1=0, select bank1
 12674  1C51  1914               	btfsc	20,2	;volatile
 12675  1C52  2C57               	goto	l5426
 12676  1C53  0811               	movf	17,w	;volatile
 12677  1C54  391F               	andlw	31
 12678  1C55  1903               	btfsc	3,2
 12679  1C56  2C5B               	goto	l5436
 12680  1C57                     l5426:	
 12681                           
 12682                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12683  1C57  1283               	bcf	3,5	;RP0=0, select bank0
 12684  1C58  0822               	movf	I2C_Master_Wait@tempo,w
 12685  1C59  1D03               	btfss	3,2
 12686  1C5A  2C43               	goto	l5428
 12687  1C5B                     l5436:	
 12688                           
 12689                           ;I2C.c: 49:   return tempo ;
 12690  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
 12691  1C5C  0822               	movf	I2C_Master_Wait@tempo,w
 12692  1C5D  0008               	return
 12693  1C5E                     __end_of_I2C_Master_Wait:	
 12694                           
 12695                           	psect	text57
 12696  1AEF                     __ptext57:	
 12697 ;; *************** function _ADC_init *****************
 12698 ;; Defined at:
 12699 ;;		line 10 in file "adc.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;		None
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, status,2, status,0
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/100
 12710 ;;		On exit  : 300/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12713 ;;      Params:         0       0       0       0       0
 12714 ;;      Locals:         0       0       0       0       0
 12715 ;;      Temps:          0       0       0       0       0
 12716 ;;      Totals:         0       0       0       0       0
 12717 ;;Total ram usage:        0 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:    1
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_main
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           
 12728                           ;psect for function _ADC_init
 12729  1AEF                     _ADC_init:	
 12730                           
 12731                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12732                           
 12733                           ;incstack = 0
 12734                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12735  1AEF  30C0               	movlw	192
 12736  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
 12737  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
 12738  1AF2  049F               	iorwf	31,f	;volatile
 12739                           
 12740                           ;adc.c: 12:      ADCON1=0b10000000;
 12741  1AF3  3080               	movlw	128
 12742  1AF4  1683               	bsf	3,5	;RP0=1, select bank1
 12743  1AF5  009F               	movwf	31	;volatile
 12744                           
 12745                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12746  1AF6  179F               	bsf	31,7	;volatile
 12747                           
 12748                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12749  1AF7  1283               	bcf	3,5	;RP0=0, select bank0
 12750  1AF8  141F               	bsf	31,0	;volatile
 12751  1AF9  0008               	return
 12752  1AFA                     __end_of_ADC_init:	
 12753                           
 12754                           	psect	text58
 12755  13D2                     __ptext58:	
 12756 ;; *************** function _isr *****************
 12757 ;; Defined at:
 12758 ;;		line 29 in file "isr.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;		None
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;  tempo           2    6[COMMON] unsigned int 
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 300/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12772 ;;      Params:         0       0       0       0       0
 12773 ;;      Locals:         2       0       0       0       0
 12774 ;;      Temps:          6       0       0       0       0
 12775 ;;      Totals:         8       0       0       0       0
 12776 ;;Total ram usage:        8 bytes
 12777 ;; Hardware stack levels used:    1
 12778 ;; This function calls:
 12779 ;;		Nothing
 12780 ;; This function is called by:
 12781 ;;		Interrupt level 1
 12782 ;; This function uses a non-reentrant model
 12783 ;;
 12784                           
 12785                           
 12786                           ;psect for function _isr
 12787  13D2                     _isr:	
 12788                           
 12789                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12790  13D2  188B               	btfsc	11,1	;volatile
 12791                           
 12792                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12793  13D3  108B               	bcf	11,1	;volatile
 12794                           
 12795                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12796                           
 12797                           ;isr.c: 37:       }
 12798  13D4  1C0C               	btfss	12,0	;volatile
 12799  13D5  2C4D               	goto	i1l5354
 12800                           
 12801                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12802  13D6  30B1               	movlw	177
 12803  13D7  008F               	movwf	15	;volatile
 12804                           
 12805                           ;isr.c: 42:                 TMR1L=0xF3;
 12806  13D8  30F3               	movlw	243
 12807  13D9  008E               	movwf	14	;volatile
 12808                           
 12809                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12810  13DA  100C               	bcf	12,0	;volatile
 12811                           
 12812                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12813  13DB  1683               	bsf	3,5	;RP0=1, select bank1
 12814  13DC  1FBB               	btfss	_generic_status^(0+128),7
 12815  13DD  2BE0               	goto	i1l5310
 12816                           
 12817                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12818  13DE  13BB               	bcf	_generic_status^(0+128),7
 12819  13DF  0064               	clrwdt	;# 
 12820  13E0                     i1l5310:	
 12821                           
 12822                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12823  13E0  300A               	movlw	10
 12824  13E1  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12825  13E2  1803               	skipnc
 12826  13E3  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12827  13E4  3000               	movlw	0
 12828  13E5  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12829                           
 12830                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12831  13E6  3003               	movlw	3
 12832  13E7  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12833  13E8  30E8               	movlw	232
 12834  13E9  1903               	skipnz
 12835  13EA  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12836  13EB  1C03               	skipc
 12837  13EC  2BEF               	goto	i1l5314
 12838                           
 12839                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12840  13ED  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12841  13EE  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12842  13EF                     i1l5314:	
 12843                           
 12844                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12845  13EF  3001               	movlw	1
 12846  13F0  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12847  13F1  30F4               	movlw	244
 12848  13F2  1903               	skipnz
 12849  13F3  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12850  13F4  1803               	skipnc
 12851  13F5  2BFA               	goto	i1l629
 12852                           
 12853                           ;isr.c: 55:                    PORTBbits.RB7=1;
 12854  13F6  1283               	bcf	3,5	;RP0=0, select bank0
 12855  13F7  1303               	bcf	3,6	;RP1=0, select bank0
 12856  13F8  1786               	bsf	6,7	;volatile
 12857  13F9  2BFD               	goto	i1l5318
 12858  13FA                     i1l629:	
 12859                           ;isr.c: 56:                 else
 12860                           
 12861                           
 12862                           ;isr.c: 57:                    PORTBbits.RB7=0;
 12863  13FA  1283               	bcf	3,5	;RP0=0, select bank0
 12864  13FB  1303               	bcf	3,6	;RP1=0, select bank0
 12865  13FC  1386               	bcf	6,7	;volatile
 12866  13FD                     i1l5318:	
 12867                           
 12868                           ;isr.c: 60:                 if(Delay_Led_Usart){
 12869  13FD  1683               	bsf	3,5	;RP0=1, select bank1
 12870  13FE  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 12871  13FF  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 12872  1400  1903               	btfsc	3,2
 12873  1401  2C0B               	goto	i1l631
 12874                           
 12875                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 12876  1402  300A               	movlw	10
 12877  1403  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 12878  1404  3000               	movlw	0
 12879  1405  1C03               	skipc
 12880  1406  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12881  1407  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12882                           
 12883                           ;isr.c: 62:                    PORTBbits.RB6=1;
 12884  1408  1283               	bcf	3,5	;RP0=0, select bank0
 12885  1409  1706               	bsf	6,6	;volatile
 12886                           
 12887                           ;isr.c: 63:                    }
 12888  140A  2C0D               	goto	i1l5324
 12889  140B                     i1l631:	
 12890                           ;isr.c: 64:                 else{
 12891                           
 12892                           
 12893                           ;isr.c: 65:                    PORTBbits.RB6=0;
 12894  140B  1283               	bcf	3,5	;RP0=0, select bank0
 12895  140C  1306               	bcf	6,6	;volatile
 12896  140D                     i1l5324:	
 12897                           
 12898                           ;isr.c: 68:                 if(Delay_Led_Memory){
 12899  140D  1683               	bsf	3,5	;RP0=1, select bank1
 12900  140E  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 12901  140F  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 12902  1410  1903               	btfsc	3,2
 12903  1411  2C1B               	goto	i1l633
 12904                           
 12905                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 12906  1412  300A               	movlw	10
 12907  1413  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 12908  1414  3000               	movlw	0
 12909  1415  1C03               	skipc
 12910  1416  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12911  1417  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12912                           
 12913                           ;isr.c: 70:                    PORTBbits.RB5=1;
 12914  1418  1283               	bcf	3,5	;RP0=0, select bank0
 12915  1419  1686               	bsf	6,5	;volatile
 12916                           
 12917                           ;isr.c: 71:                    }
 12918  141A  2C1D               	goto	i1l5330
 12919  141B                     i1l633:	
 12920                           ;isr.c: 72:                 else{
 12921                           
 12922                           
 12923                           ;isr.c: 73:                    PORTBbits.RB5=0;
 12924  141B  1283               	bcf	3,5	;RP0=0, select bank0
 12925  141C  1286               	bcf	6,5	;volatile
 12926  141D                     i1l5330:	
 12927                           
 12928                           ;isr.c: 77:                 tempodecorrido+=10;
 12929  141D  300A               	movlw	10
 12930  141E  1683               	bsf	3,5	;RP0=1, select bank1
 12931  141F  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 12932  1420  1803               	skipnc
 12933  1421  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 12934  1422  3000               	movlw	0
 12935  1423  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 12936                           
 12937                           ;isr.c: 78:                 milisegundo+=10;
 12938  1424  300A               	movlw	10
 12939  1425  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 12940  1426  1803               	skipnc
 12941  1427  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 12942  1428  3000               	movlw	0
 12943  1429  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 12944                           
 12945                           ;isr.c: 79:                 if(milisegundo==1000){
 12946  142A  30E8               	movlw	232
 12947  142B  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 12948  142C  3003               	movlw	3
 12949  142D  1903               	skipnz
 12950  142E  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 12951  142F  1D03               	btfss	3,2
 12952  1430  2C4D               	goto	i1l5354
 12953                           
 12954                           ;isr.c: 80:                    milisegundo=0;
 12955  1431  01B0               	clrf	_milisegundo^(0+128)	;volatile
 12956  1432  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 12957                           
 12958                           ;isr.c: 81:                    segundo++;
 12959  1433  3001               	movlw	1
 12960  1434  00F0               	movwf	??_isr
 12961  1435  0870               	movf	??_isr,w
 12962  1436  07FD               	addwf	_segundo,f	;volatile
 12963                           
 12964                           ;isr.c: 88:                    if(segundo==60){
 12965  1437  303C               	movlw	60
 12966  1438  067D               	xorwf	_segundo,w	;volatile
 12967  1439  1D03               	btfss	3,2
 12968  143A  2C4D               	goto	i1l5354
 12969                           
 12970                           ;isr.c: 89:                       segundo=0;
 12971  143B  01FD               	clrf	_segundo	;volatile
 12972                           
 12973                           ;isr.c: 90:                       minuto++;
 12974  143C  3001               	movlw	1
 12975  143D  00F0               	movwf	??_isr
 12976  143E  0870               	movf	??_isr,w
 12977  143F  07FA               	addwf	_minuto,f	;volatile
 12978                           
 12979                           ;isr.c: 91:                       if(minuto==60){
 12980  1440  303C               	movlw	60
 12981  1441  067A               	xorwf	_minuto,w	;volatile
 12982  1442  1D03               	btfss	3,2
 12983  1443  2C4D               	goto	i1l5354
 12984                           
 12985                           ;isr.c: 92:                          minuto=0;
 12986  1444  01FA               	clrf	_minuto	;volatile
 12987                           
 12988                           ;isr.c: 93:                          hora++;
 12989  1445  3001               	movlw	1
 12990  1446  00F0               	movwf	??_isr
 12991  1447  0870               	movf	??_isr,w
 12992  1448  07FC               	addwf	_hora,f	;volatile
 12993                           
 12994                           ;isr.c: 94:                          if(hora==24){
 12995  1449  3018               	movlw	24
 12996  144A  067C               	xorwf	_hora,w	;volatile
 12997  144B  1903               	btfsc	3,2
 12998                           
 12999                           ;isr.c: 95:                             hora=0;
 13000  144C  01FC               	clrf	_hora	;volatile
 13001  144D                     i1l5354:	
 13002                           ;isr.c: 99:                 }
 13003                           
 13004                           
 13005                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13006  144D  1283               	bcf	3,5	;RP0=0, select bank0
 13007  144E  1E8C               	btfss	12,5	;volatile
 13008  144F  2CB4               	goto	i1l647
 13009                           
 13010                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13011  1450  1683               	bsf	3,5	;RP0=1, select bank1
 13012  1451  143B               	bsf	_generic_status^(0+128),0
 13013                           
 13014                           ;isr.c: 109:         tempo=30;
 13015  1452  301E               	movlw	30
 13016  1453  00F6               	movwf	isr@tempo
 13017  1454  3000               	movlw	0
 13018  1455  00F7               	movwf	isr@tempo+1
 13019                           
 13020                           ;isr.c: 110:         count=0;
 13021  1456  01AC               	clrf	_count^(0+128)	;volatile
 13022  1457  01AD               	clrf	(_count+1)^(0+128)	;volatile
 13023                           
 13024                           ;isr.c: 111:         pointer=usart_buffer;
 13025  1458  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13026  1459  00F0               	movwf	??_isr
 13027  145A  0870               	movf	??_isr,w
 13028  145B  00B6               	movwf	_pointer^(0+128)
 13029  145C                     i1l5376:	
 13030                           ;isr.c: 112:         while(tempo)
 13031                           
 13032                           
 13033                           ;isr.c: 112:         while(tempo)
 13034  145C  0876               	movf	isr@tempo,w
 13035  145D  0477               	iorwf	isr@tempo+1,w
 13036  145E  1903               	btfsc	3,2
 13037  145F  2C8F               	goto	i1l5378
 13038                           
 13039                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13040  1460  1283               	bcf	3,5	;RP0=0, select bank0
 13041  1461  1303               	bcf	3,6	;RP1=0, select bank0
 13042  1462  1E8C               	btfss	12,5	;volatile
 13043  1463  2C88               	goto	i1l5374
 13044                           
 13045                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13046  1464  081A               	movf	26,w	;volatile
 13047  1465  00F0               	movwf	??_isr
 13048  1466  1683               	bsf	3,5	;RP0=1, select bank1
 13049  1467  0836               	movf	_pointer^(0+128),w
 13050  1468  0084               	movwf	4
 13051  1469  0870               	movf	??_isr,w
 13052  146A  1783               	bsf	3,7	;select IRP bank2
 13053  146B  0080               	movwf	0
 13054                           
 13055                           ;isr.c: 118:                 if(count<32+10 -1)
 13056  146C  082D               	movf	(_count+1)^(0+128),w	;volatile
 13057  146D  3A80               	xorlw	128
 13058  146E  00FF               	movwf	127
 13059  146F  3080               	movlw	128
 13060  1470  027F               	subwf	127,w
 13061  1471  1D03               	skipz
 13062  1472  2C75               	goto	u519_25
 13063  1473  3029               	movlw	41
 13064  1474  022C               	subwf	_count^(0+128),w	;volatile
 13065  1475                     u519_25:	
 13066  1475  1803               	skipnc
 13067  1476  2C83               	goto	i1l5372
 13068                           
 13069                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13070  1477  3001               	movlw	1
 13071  1478  1683               	bsf	3,5	;RP0=1, select bank1
 13072  1479  1303               	bcf	3,6	;RP1=0, select bank1
 13073  147A  07AC               	addwf	_count^(0+128),f	;volatile
 13074  147B  1803               	skipnc
 13075  147C  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13076  147D  3000               	movlw	0
 13077  147E  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13078                           
 13079                           ;isr.c: 121:                    pointer++;
 13080  147F  3001               	movlw	1
 13081  1480  00F0               	movwf	??_isr
 13082  1481  0870               	movf	??_isr,w
 13083  1482  07B6               	addwf	_pointer^(0+128),f
 13084  1483                     i1l5372:	
 13085                           
 13086                           ;isr.c: 123:                 tempo=30;
 13087  1483  301E               	movlw	30
 13088  1484  00F6               	movwf	isr@tempo
 13089  1485  3000               	movlw	0
 13090  1486  00F7               	movwf	isr@tempo+1
 13091                           
 13092                           ;isr.c: 124:             }
 13093  1487  2C5C               	goto	i1l5376
 13094  1488                     i1l5374:	
 13095                           
 13096                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13097  1488  3001               	movlw	1
 13098  1489  02F6               	subwf	isr@tempo,f
 13099  148A  3000               	movlw	0
 13100  148B  1C03               	skipc
 13101  148C  03F7               	decf	isr@tempo+1,f
 13102  148D  02F7               	subwf	isr@tempo+1,f
 13103  148E  2C5C               	goto	i1l5376
 13104  148F                     i1l5378:	
 13105                           
 13106                           ;isr.c: 131:         (*pointer)=0;
 13107  148F  1683               	bsf	3,5	;RP0=1, select bank1
 13108  1490  1303               	bcf	3,6	;RP1=0, select bank1
 13109  1491  0836               	movf	_pointer^(0+128),w
 13110  1492  0084               	movwf	4
 13111  1493  1783               	bsf	3,7	;select IRP bank2
 13112  1494  0180               	clrf	0
 13113                           
 13114                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13115  1495  1283               	bcf	3,5	;RP0=0, select bank0
 13116  1496  1C98               	btfss	24,1	;volatile
 13117  1497  2CB4               	goto	i1l647
 13118                           
 13119                           ;isr.c: 134:            CREN=0;
 13120  1498  1218               	bcf	24,4	;volatile
 13121                           
 13122                           ;isr.c: 135:            CREN=1;
 13123  1499  1618               	bsf	24,4	;volatile
 13124                           
 13125                           ;isr.c: 136:            tempo=RCREG;
 13126  149A  081A               	movf	26,w	;volatile
 13127  149B  00F0               	movwf	??_isr
 13128  149C  01F1               	clrf	??_isr+1
 13129  149D  0870               	movf	??_isr,w
 13130  149E  00F6               	movwf	isr@tempo
 13131  149F  0871               	movf	??_isr+1,w
 13132  14A0  00F7               	movwf	isr@tempo+1
 13133                           
 13134                           ;isr.c: 137:            tempo=RCREG;
 13135  14A1  081A               	movf	26,w	;volatile
 13136  14A2  00F0               	movwf	??_isr
 13137  14A3  01F1               	clrf	??_isr+1
 13138  14A4  0870               	movf	??_isr,w
 13139  14A5  00F6               	movwf	isr@tempo
 13140  14A6  0871               	movf	??_isr+1,w
 13141  14A7  00F7               	movwf	isr@tempo+1
 13142                           
 13143                           ;isr.c: 138:            tempo=RCREG;
 13144  14A8  081A               	movf	26,w	;volatile
 13145  14A9  00F0               	movwf	??_isr
 13146  14AA  01F1               	clrf	??_isr+1
 13147  14AB  0870               	movf	??_isr,w
 13148  14AC  00F6               	movwf	isr@tempo
 13149  14AD  0871               	movf	??_isr+1,w
 13150  14AE  00F7               	movwf	isr@tempo+1
 13151                           
 13152                           ;isr.c: 139:            usart_buffer[0]=0;
 13153  14AF  1683               	bsf	3,5	;RP0=1, select bank3
 13154  14B0  1703               	bsf	3,6	;RP1=1, select bank3
 13155  14B1  0190               	clrf	_usart_buffer^(0+384)	;volatile
 13156                           
 13157                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13158  14B2  1303               	bcf	3,6	;RP1=0, select bank1
 13159  14B3  14BB               	bsf	_generic_status^(0+128),1
 13160  14B4                     i1l647:	
 13161  14B4  0875               	movf	??_isr+5,w
 13162  14B5  1283               	bcf	3,5	;RP0=0, select bank0
 13163  14B6  00FF               	movwf	127
 13164  14B7  0874               	movf	??_isr+4,w
 13165  14B8  008A               	movwf	10
 13166  14B9  0873               	movf	??_isr+3,w
 13167  14BA  0084               	movwf	4
 13168  14BB  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13169  14BC  0083               	movwf	3
 13170  14BD  0EFE               	swapf	126,f
 13171  14BE  0E7E               	swapf	126,w
 13172  14BF  0009               	retfie
 13173  14C0                     __end_of_isr:	
 13174  007E                     btemp	set	126	;btemp
 13175  007E                     wtemp0	set	126
 13176                           
 13177                           	psect	intentry
 13178  0004                     __pintentry:	
 13179                           ;incstack = 0
 13180                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13181                           
 13182  0004                     interrupt_function:	
 13183  007E                     saved_w	set	btemp
 13184  0004  00FE               	movwf	btemp
 13185  0005  0E03               	swapf	3,w
 13186  0006  00F2               	movwf	??_isr+2
 13187  0007  0804               	movf	4,w
 13188  0008  00F3               	movwf	??_isr+3
 13189  0009  080A               	movf	10,w
 13190  000A  00F4               	movwf	??_isr+4
 13191  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13192  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13193  000D  087F               	movf	btemp+1,w
 13194  000E  00F5               	movwf	??_isr+5
 13195  000F  160A  118A  2BD2   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     15      75
    BANK3            96      0      74
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK1[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK1[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[3]), texto(BANK1[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[3]), texto(BANK1[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK3[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(1) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK1[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK1[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK3[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  135142
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24105
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2136
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0  108052
                                             64 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     521
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     521
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14508
                                             57 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             5     2      3    3379
                                             56 BANK0      5     2      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    6     2      4    2904
                                             50 BANK0      6     2      4
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2741
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6608
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            7     2      5    7588
                                             22 BANK0      7     2      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7804
                                             10 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    8697
                                             24 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    8663
                                             24 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    8437
                                             10 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1023
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8484
                                             57 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            11     5      6    8233
                                             46 BANK0     11     5      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         12     6      6    7306
                                             10 BANK0     12     6      6
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     698
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4979
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      F2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      4A       9       77.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      F2      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 12:46:01 2020

                              _USART_putc 1B05                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l69 08A3  
         EEPROM_24C1025_Read_Buffer@range 0036          EEPROM_24C1025_Write_Str@chip_add 0031  
                                      fsr 0004                             _USART_put_int 1B4F  
                Decodify_Command@tempchar 00E5                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 101C              PROCULUS_VP_Write_String@text 005A  
                                     l412 0329                                       l510 1EFD  
                                     l504 1ED8                                       l416 0335  
                                     l514 1C65                                       l418 0388  
                                     l427 0F0F                                       l509 1EFC  
                                     l536 1C20                                       l480 1AE6  
                                     l802 1B89                                       l785 1BC6  
                                     l865 1B0C                              __CFG_CPD$OFF 0000  
      EEPROM_24C1025_Read_Buffer@chip_add 0035                  Decodify_Command@sizedata 00E6  
                                     _isr 13D2                                       fsr0 0004  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1F0C  
                        _ADC_Media_10bits 10A8                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0037                              ___flmul@bexp 0038  
                  PROCULUS_VP_Write@vetor 0054              ?_EEPROM_24C1025_Write_Buffer 002A  
                            ___flmul@sign 0036                              ___flmul@temp 0041  
                            ___flmul@prod 003D   __end_of_PROCULUS_Control_Register_Write 1ED1  
__size_of_PROCULUS_Control_Register_Write 0038         ??_PROCULUS_Control_Register_Write 0053  
        ?_PROCULUS_Control_Register_Write 0052           _PROCULUS_Control_Register_Write 1E99  
                            __CFG_LVP$OFF 0000                              ___fltol@exp1 004D  
                         __end_of_MAX_ADC 1024                                      l1331 09E7  
                                    l1156 12B6                                      l1317 0D5E  
                                    l1309 0D46                                      l1422 13A2  
                                    l1175 1207                                      l1423 13AC  
                                    l1415 138C                                      l1159 131C  
                                    l1409 134C                                      l1353 0B26  
                                    l1281 0C03                                      l1450 1CB3  
                                    l1355 0B34                                      l1275 0B8C  
                                    l1383 0671                                      l1279 0C25  
                                    l1296 0CDE                                      l6020 0D06  
                                    l6014 0CFF                                      l6006 0CF0  
                                    l6022 0D08                                      l6104 03E1  
                                    l7000 0104                                      l6032 0D13  
                                    l7010 0132                                      l6050 0D56  
                                    l7100 02EB                                      l7020 015D  
                                    l7004 011B                                      l6212 135B  
                                    l6028 0D11                                      l6310 1665  
                                    l6206 1344                                      l6054 0D5A  
                                    l5432 1C4F                                      l5520 177E  
                                    l6400 0954                                      l7112 031F  
                                    l7032 0188                                      l6240 13C9  
                                    l6216 135F                                      l5426 1C57  
                                    l6410 097B                                      l6330 0850  
                                    l6074 03A4                                      l7106 0303  
                                    l7050 01E6                                      l7026 017C  
                                    l7130 0338                                      l6226 13A0  
                                    l6218 1371                                      l5428 1C43  
                                    l5436 1C5B                                      l5460 1E69  
                                    l5516 1778                                      l6412 0984  
                                    l6332 0855                                      l6316 1611  
                                    l6252 15D3                                      l6164 05F7  
                                    l6156 05C3                                      l6092 03C9  
                                    l6076 03A6                                      l7044 01C0  
                                    l6228 1391                                      l5542 17D8  
                                    l5518 177D                                      l5614 06A9  
                                    l6334 0856                                      l6318 1687  
                                    l6254 15D8                                      l6182 0641  
                                    l6158 05E0                                      l6094 03CB  
                                    l6078 03AE                                      l5710 1DE8  
                                    l6502 1136                                      l7118 032C  
                                    l7070 026A                                      l7062 022E  
                                    l7038 01A2                                      l5536 17B7  
                                    l5544 170A                                      l5480 16D0  
                                    l5616 06AE                                      l6256 15D9  
                                    l6520 0820                                      l5800 108A  
                                    l6168 05F9                                      l6096 03D3  
                                    l7056 0211                                      l7208 1548  
                                    l5546 17DD                                      l5482 16D1  
                                    l5618 06AF                                      l6450 1D3D  
                                    l5802 10A0                                      l6178 062B  
                                    l5810 11CC                                      l7082 02A8  
                                    l6610 1FDE                                      l7234 1572  
                                    l6436 1F8E                                      l5564 1E0D  
                                    l5660 0767                                      l5716 1EE2  
                                    l6188 065A                                      l5708 1DC6  
                                    l7076 028C                                      l5478 16CB  
                                    l5662 0768                                      l6374 0901  
                                    l5718 1EE5                                      l6518 0803  
                                    l5806 11C3                                      l6542 1CCA  
                                    l7094 02DC                                      l6630 116C  
                                    l5568 1E20                                      l5576 1E27  
                                    l6376 0906                                      l7088 02CB  
                                    l6640 11A4                                      l6632 117C  
                                    l6616 1FF3                                      l6712 09DF  
                                    l5904 0B81                                      l5690 07DB  
                                    l5658 0762                                      l6378 0907  
                                    l6474 1D97                                      l5850 1F14  
                                    l5754 1BB2                                      l5594 1CAB  
                                    l5826 11F3                                      l6570 10C4  
                                    l6810 0B30                                      l6722 0A06  
                                    l5914 0B96                                      l5684 07B5  
                                    l5692 06FC                                      l5852 1F22  
                                    l5756 1BBD                                      l5836 1216  
                                    l5828 1203                                      l6644 11B1  
                                    l5764 1E32                                      l6708 09DC  
                                    l5908 0B84                                      ?_isr 0070  
                                    l5694 07E0                                      l5862 1F43  
                                    l6654 12D0                                      l6910 0DDB  
                                    l6902 0D93                                      l5784 1EB3  
                                    l7288 0341                                      l6592 1B91  
                                    l6728 0A12                                      l5952 0C0E  
                                    l5944 0BD2                                      l5880 0B57  
                                    l5786 1EC9                                      l5858 1F38  
                                    l6754 0A80                                      l6658 12F6  
                                    l5970 0C33                                      l5954 0C10  
                                    l5962 0C1F                                      l6588 1B8E  
                                    l6780 0ABF                                      l6772 0A8B  
                                    l6748 0A61                                      l6756 0A3D  
                                    l6692 09B9                                      l5980 0C56  
                                    l5884 0B5A                                      l6774 0AA8  
                                    l6758 0A85                                      l6694 09C1  
                                    l5886 0B62                                      l6942 0F8D  
                                    l6918 0DF2                                      l6846 1F59  
                                    l6784 0AC1                                      l6688 09B6  
                                    l6936 0F35                                      l6880 1F7A  
                                    l6794 0AF3                                      l5978 0C54  
                                    l6866 1F73                                      l6972 005F  
                                    l5988 0C66                                      l6948 0FA3  
                                    l6798 0B0C                                      l5998 0CD0  
                                    l6976 006B                                      l6968 0050  
                                    l6996 00F5                                      l6988 00C4  
                                    _BETA 1048                                      STR_1 1050  
                            __CFG_WDTE$ON 0000                                      STR_2 1058  
                             _statuspower 00BA                           ADC_Max_10Bits@i 0032  
                                    _CREN 00C4                                      u5303 16B8  
                                    u6031 0C91                                      u6023 0C78  
                                    u6015 0C5A                                      u5400 1E1D  
                                    u6040 0CA5                                      u6032 0C92  
                                    u5313 16C9                                      u6041 0CA6  
                                    u6033 0C97                                      u6042 0CAB  
                                    u6034 0C98                                      u5323 172C  
                                    u6043 0CAC                                      u6035 0C9D  
                                    u6036 0C9E                                      u5343 1776  
                                    u5503 0760                                      u7111 12E1  
                                    u7112 12E2                                      u5425 1BCC  
                                    u7025 1170                                      u7113 12E7  
                                    u7114 12E8                                      u5283 1E7B  
                                    u5355 1718                                      u7131 1307  
                                    u7115 12ED                                      u7132 1308  
                                    u7116 12EE                                      u5445 1CB4  
                                    u6405 04E4                                      u7045 117E  
                                    u7133 130D                                      u6085 0CF2  
                                    u7134 130E                                      u5463 0696  
                                    u7055 1193                                      u7135 1313  
                                    u7136 1314                                      u5473 06A7  
                                    u6505 05D2                                      u7065 11A5  
                                    u6185 0D30                                      u5483 0712  
                                    u5635 11D5                                      u7315 0A8F  
                                    u5900 0BF3                                      u6445 0578  
                                    u7405 0ADE                                      u7245 0A46  
                                    u5735 1F17                                      u6375 048B  
                                    u5583 1E44                                      u7415 0AFC  
                                    u7335 0A9A                                      u7255 0A4F  
                                    u5665 11F4                                      u7425 0B17  
                                    u5755 1F23                                      u6475 05AF  
                                    u7275 0A5A                                      u6813 083D  
                                    u5765 1F2F                                      u6485 05C7  
                                    u7445 1D6D                                      u6725 13B4  
                                    u6645 1368                                      u7285 0A6F  
                                    u6823 084E                                      u5775 1F39  
                                    u6575 0616                                      u5695 120C  
                                    u5935 0C14                                      u6833 08B5  
                                    u6753 15C0                                      u6585 0634  
                                    u6665 1384                                      u5890 0BF2  
                                    u6763 15D1                                      u6595 064C  
                                    u6915 1142                                      u7707 14C8  
                                    u6853 08FF                                      u6773 1629  
                                    u7717 1E4C                                      u6685 1399  
                                    u5885 0BE6                                      u7727 1BD4  
                                    u7737 1DBC                                      u6945 1CD3  
                                    u6883 1FBF                                      u7747 1F06  
                                    u7757 1C76                                      u7767 0995  
                                    u7777 07F1                                      u7787 1E84  
                                    u6995 1FED                                      u7797 1C4B  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 1067                                      _main 14C0  
                                    _hora 007C         __size_of_EEPROM_24C1025_Write_Int 001F  
                                    btemp 007E         __size_of_EEPROM_24C1025_Write_Str 00F2  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 002A               __size_of_EEPROM_Read_String 001F  
                                    start 0012                          __end_of_ADC_init 1AFA  
                        _BALANCE_RESISTOR 104C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002E                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0023  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                         __end_of___fldiv 0B3C                                     _EEADR 010D  
                         __end_of___flmul 067E                           __end_of___flsub 1BFF  
                         __end_of___fltol 1225                                     _ANSEL 0188  
                         __end_of___lldiv 11BA                                     _T1CON 0010  
                         __end_of___lwdiv 1F48                                     i1l631 140B  
                                   i1l633 141B                                     i1l629 13FA  
                                   i1l647 14B4                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 003E                                     _TRISE 0089  
                                   _TXREG 0019                     ADC_Media_10bits@canal 0046  
                         __end_of_captura 1AEF                             __CFG_PWRTE$ON 0000  
                            _usart_buffer 0190                     ADC_Media_10bits@value 0047  
               EEPROM_Read_Integer@result 0028                                     _canal 00B9  
            __size_of_EEPROM_Read_Integer 0029                                     _count 00AC  
                                   _errno 00A8             ??_EEPROM_24C1025_Write_Buffer 0030  
      __size_of_EEPROM_24C1025_Write_Byte 0015                                     _texto 00BC  
              ?_EEPROM_24C1025_Write_Byte 0036                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
         EEPROM_24C1025_Read_Byte@mem_add 0038                              __end_of_BETA 104C  
                 __size_of_PROCULUS_Delay 001D                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0017                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 0058  
                             ?_USART_putc 0070                              __end_of_main 15AF  
                          Send_To_MB@size 0021                          _USART_put_buffer 1CC4  
                __end_of_EEPROM_Read_Byte 1C7F                                    ??_main 006A  
                        __end_of_Save_Log 129C                          _USART_put_string 1DC2  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0070  
               EEPROM_Write_Byte@last_GIE 0024                         ?_I2C_Master_Write 0023  
                      ??_I2C_Master_Start 0023                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0025                 PROCULUS_Show_Screen@vetor 0059  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 1D0F                     EEPROM_Write_Integer@i 002C  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1B4F  
                                  i1l5310 13E0                                    i1l5330 141D  
                                  i1l5314 13EF                                    i1l5324 140D  
                                  i1l5318 13FD                                    i1l5354 144D  
                                  i1l5372 1483                                    i1l5374 1488  
                                  i1l5376 145C                                    i1l5378 148F  
       __end_of_EEPROM_24C1025_Write_Byte 1B3A                                    u519_25 1475  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 0059  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 005C  
                        __end_of___xxtofl 13D2                        PROCULUS_VP_Write@i 0057  
                __end_of_Decodify_Command 0389                  ?_EEPROM_24C1025_Read_Int 0038  
                ?_EEPROM_24C1025_Read_Str 002A                  _I2C_Master_RepeatedStart 105C  
    __size_of_EEPROM_24C1025_Write_Buffer 015F                                    ___flge 129C  
                               ??___fladd 0052                                 ??___fldiv 0049  
                               ??___flmul 0031                                 ??___flsub 0066  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00AE  
                       __end_of_ROOM_TEMP 1020                                 ??___lwdiv 0024  
                                  _buffer 01BA                         _USART_to_Protocol 10FE  
                         USART_putc@value 0020         EEPROM_24C1025_Read_Buffer@cnt_103 0034  
                                  _minuto 007A                                 ??_captura 0022  
                      ?_USART_to_Protocol 0070              Decodify_Command@add_24LCxxxx 00E7  
                                  _strlen 1BAB         EEPROM_24C1025_Read_Buffer@mem_add 002A  
        __end_of_EEPROM_24C1025_Read_Byte 1BAB                        __size_of__Umul8_16 0023  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 003C  
                               ?_ADC_init 0070                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 000F  
                __end_of_MediaPlacaVaccum 1000                                ___flge@ff1 0020  
                              ___flge@ff2 0024                              ___xxtofl@arg 003D  
                            ___xxtofl@exp 003C                              ___xxtofl@val 0033  
                        __end_oflog@coeff 1048                   __end_of__initialization 002B  
     PROCULUS_Control_Register_Write@size 0052                                ___fltol@f1 0043  
                            _Board_Number 00B8                  __end_of_ADC_Media_10bits 10FE  
                          __pcstackCOMMON 0070                  __size_of_PROCULUS_Buzzer 0022  
               __end_of_USART_to_Protocol 115C                     USART_put_string@vetor 0021  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0032  
                __size_of_my_delay_ms_WDT 0038                            _OPTION_REGbits 0081  
                 __size_of_ADC_Max_10Bits 003E                  __end_of_BALANCE_RESISTOR 1050  
        __end_of_EEPROM_24C1025_Write_Int 1C1E          __end_of_EEPROM_24C1025_Write_Str 16A1  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 082B  
         __end_of_EEPROM_24C1025_Fill_All 1FC2                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00A0  
                              __pbssBANK3 0190                        _RESISTOR_ROOM_TEMP 1018  
         __end_of_EEPROM_24C1025_Read_Int 1D0F           __end_of_EEPROM_24C1025_Read_Str 099B  
                ?_Package_Usart_is_for_me 0070                                 ?_Save_Log 0059  
                          _PROCULUS_Delay 1BC4                         __end_of__Umul8_16 1CC4  
                              __pmaintext 14C0                                   ?___flge 0020  
                     Save_Log@add_datalog 0059                       _EEPROM_Read_Integer 1D36  
              PROCULUS_Show_Screen@screen 0056                                __pintentry 0004  
                    _PROCULUS_Show_Screen 1B3A                        ADC_Max_10Bits@Temp 002E  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strlen 0020                         MediaPlacaVaccum@i 00E5  
                               ?___xxtofl 0033                                   _MAX_ADC 1020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00DC  
             EEPROM_24C1025_Read_Int@data 003F                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1B7C                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 1B93  
                              __stringtab 1000                       PROCULUS_VP_Write@vp 0052  
             ??_EEPROM_24C1025_Write_Byte 003B                  __end_of_USART_put_buffer 1CE8  
              __end_of_EEPROM_Read_String 1C3D                    __end_of_PROCULUS_Delay 1BE1  
                __end_of_USART_put_string 1DF5                      __size_of_my_delay_ms 0037  
                              ??_Save_Log 005D                           PROCULUS_Delay@i 0024  
                                 _Vaccum0 00A4                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 0034                                   _Tensao1 00A0  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 005E  
             PROCULUS_Buzzer@time_ms_x_10 0056                           __size_of___flge 0093  
                                 ___fladd 0B3C                                   ___fldiv 099B  
                EEPROM_Write_Integer@addr 002B                                   ___flmul 0389  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1BE1  
                                 ___fltol 11BA                                   ___lldiv 115C  
                                 ___lwdiv 1F0C                             _Send_Reply_OK 07F7  
                     __size_of_Send_To_MB 0027                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 1AE5                          _statuspower_memo 007B  
                                 __ptext1 1F48                                   __ptext2 0D69  
                                 __ptext3 1BE1                                   __ptext4 0B3C  
                                 __ptext5 129C                                   __ptext6 099B  
                                 __ptext7 1B7C                                   __ptext8 10A8  
                                 __ptext9 132F                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00B7                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strlen 0019                              __size_of_isr 00EE  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 007D                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 0035                            _usart_protocol 00CC  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0021  
                __size_of_I2C_Master_Stop 0009             EEPROM_24C1025_Write_Int@local 0057  
                                 _pointer 00B6             EEPROM_24C1025_Write_Byte@data 003A  
                                 clrloop0 1AD5                        __end_of_USART_init 1F84  
         __end_of_Package_Usart_is_for_me 1B93                        __end_of_USART_putc 1B14  
                       ADC_Media_10bits@i 0049                      end_of_initialization 002B  
                _EEPROM_24C1025_Write_Int 1BFF                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 15AF                ??_I2C_Master_RepeatedStart 0023  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 002F           EEPROM_24C1025_Write_Buffer@ctrl 0035  
               __size_of_I2C_Master_Start 0011                 __size_of_I2C_Master_Write 000B  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 0060  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0023                            ?_Send_Reply_OK 0070  
               _EEPROM_24C1025_Write_Byte 1B25          __size_of_EEPROM_24C1025_Fill_All 003E  
                                 strlen@s 0023                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 00B4  
            ??_EEPROM_24C1025_Read_Buffer 0031             EEPROM_24C1025_Write_Str@range 0032  
                               _ROOM_TEMP 101C                            _ADC_Max_10Bits 1FC2  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0027  
        __size_of_EEPROM_24C1025_Read_Str 0170                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 1800               _EEPROM_24C1025_Write_Buffer 16A1  
                             ___fldiv@grs 0055                               ___fldiv@rem 004E  
    PROCULUS_Control_Register_Write@vetor 0054          EEPROM_24C1025_Write_Buffer@count 0032  
         EEPROM_24C1025_Write_Int@mem_add 004E          EEPROM_24C1025_Write_Buffer@range 0034  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00DF  
                       ?_MediaPlacaVaccum 0070                     PROCULUS_VP_Write@size 0055  
         EEPROM_24C1025_Read_Str@chip_add 0032                               ___flmul@grs 0039  
                      ??_MediaPlacaVaccum 0066                  _PROCULUS_VP_Write_String 1B65  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 0179  
                       ?_ADC_Media_10bits 0041                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0058                        ??_ADC_Media_10bits 0045  
                          __end_of___flge 132F                     __end_of_USART_put_int 1B65  
                  __end_of_ADC_Max_10Bits 2000                               _BAUDCTLbits 0187  
                          __end_of_strlen 1BC4                       start_initialization 0015  
                             __end_of_isr 14C0                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0025                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0023              __end_of_EEPROM_Write_Integer 1DC2  
        EEPROM_24C1025_Write_Int@chip_add 0056                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DE                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 0077                      I2C_Master_Wait@tempo 0022  
                               __Umul8_16 1CA1                        __end_of_Send_To_MB 1D36  
        __size_of_Package_Usart_is_for_me 0017                           ?_ADC_Max_10Bits 002A  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 003C  
      EEPROM_24C1025_Write_Buffer@mem_add 002A                                 ___fladd@a 004E  
                               ___fladd@b 004A          EEPROM_24C1025_Write_Byte@mem_add 0036  
                               ___fldiv@a 0041                                 ___fldiv@b 0045  
                               ___flmul@a 002D                                 ___flmul@b 0029  
                             __pbssCOMMON 0078                                 ___flsub@a 005E  
                               ___flsub@b 0062                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00DC  
                       _PROCULUS_VP_Write 1067                         __size_of___xxtofl 00A3  
                      ?_PROCULUS_VP_Write 0052                       USART_put_buffer@ptr 0027  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 002A  
                        _I2C_Master_Start 1B14                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 1AFA                       ??_PROCULUS_VP_Write 0056  
                          _tempodecorrido 00AA                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1C7F                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 004A                                  ?___fldiv 0041  
                 _EEPROM_24C1025_Fill_All 1F84                                  ?___flmul 0029  
                                ?___flsub 005E                                  ?___fltol 0043  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 1C1E                                  ?___lwdiv 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 07F7                _EEPROM_24C1025_Read_Buffer 067E  
                   MediaPlacaVaccum@Valor 00DC                                  ?_captura 0020  
                               __pstrings 1000                     MediaPlacaVaccum@canal 00E0  
                         _my_delay_ms_WDT 1E61                   _EEPROM_24C1025_Read_Int 1CE8  
                 _EEPROM_24C1025_Read_Str 082B                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0054                ??_EEPROM_24C1025_Write_Str 002F  
                     ?_EEPROM_Read_String 0023                 __end_of_PROCULUS_VP_Write 10A8  
              EEPROM_24C1025_Read_Str@cnt 0031                                  _ADC_init 1AEF  
                        ___lwdiv@quotient 0026                   EEPROM_Write_Integer@ptr 002A  
                        ??_PROCULUS_Delay 0022                       ADC_Max_10Bits@canal 002D  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0037  
                     ADC_Max_10Bits@value 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0021                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 002A                      ??_EEPROM_Read_String 0024  
                               clear_ram0 1AD4                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0055  
                  Decodify_Command@OutPut 00E1                           _PT100_TRANSLADA 1010  
                         _Delay_Led_Usart 00B2              EEPROM_24C1025_Read_Byte@data 003D  
             __end_of_EEPROM_Read_Integer 1D5F                                _ADCON0bits 001F  
                             __stringbase 100F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 035A                      _EEPROM_Write_Integer 1D90  
          EEPROM_24C1025_Read_Int@mem_add 0038                                 main@reset 006D  
              ??_PROCULUS_VP_Write_String 005B                       I2C_Master_Read@temp 0027  
                 __end_of_PROCULUS_Buzzer 1CA1                            _generic_status 00BB  
                              _EECON1bits 018C                                  _Save_Log 1225  
               ??_EEPROM_24C1025_Fill_All 005B                       __end_of_my_delay_ms 1E61  
            EEPROM_24C1025_Read_Str@range 0033              EEPROM_24C1025_Read_Str@texto 002E  
                 __end_of_my_delay_ms_WDT 1E99                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 000B                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 003C                   _Package_Usart_is_for_me 1B7C  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002F  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                      __end_of__stringtab 1010       EEPROM_24C1025_Write_Buffer@chip_add 0033  
                     USART_put_string@ptr 0023                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1D5F  
                         _I2C_Master_Read 1DF5                                  ___xxtofl 132F  
              __size_of_PROCULUS_VP_Write 0041                           _I2C_Master_Wait 1C3D  
        EEPROM_24C1025_Read_Byte@chip_add 003C                           _I2C_Master_Stop 1ADC  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 1FC2  
                                __ptext11 1E2A                                  __ptext20 1DC2  
                                __ptext12 1AE5                                  __ptext21 1225  
                                __ptext13 1D5F                                  __ptext30 1F0C  
                                __ptext22 11BA                                  __ptext14 115C  
                                __ptext31 1E99                                  __ptext23 0389  
                                __ptext15 002F                                  __ptext40 1C5E  
                                __ptext32 1B4F                                  __ptext24 1CA1  
                                __ptext16 10FE                                  __ptext41 15AF  
                                __ptext33 1B05                                  __ptext25 1B65  
                                __ptext17 1CC4                                  __ptext50 1BFF  
                                __ptext42 1B25                                  __ptext34 1BC4  
                                __ptext26 1BAB                                  __ptext18 1D0F  
                                __ptext51 16A1                                  __ptext43 082B  
                                __ptext35 0801                                  __ptext27 1067  
                                __ptext19 07F7                                  __ptext52 1E61  
                                __ptext44 1CE8                                  __ptext36 1D90  
                                __ptext28 1B3A                                  __ptext53 1AFA  
                                __ptext45 1B93                                  __ptext37 1ED1  
                                __ptext29 1C7F                                  __ptext54 1ADC  
                                __ptext46 067E                                  __ptext38 1C1E  
                                __ptext55 1B14                                  __ptext47 105C  
                                __ptext39 1D36                                  __ptext56 1C3D  
                                __ptext48 1DF5                                  __ptext57 1AEF  
                                __ptext49 1F84                                  __ptext58 13D2  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 004E  
                          _PT100_CONSTANT 1014                      MediaPlacaVaccum@Temp 00E1  
                           __size_of_main 00EF              EEPROM_24C1025_Fill_All@value 0059  
              PROCULUS_VP_Write_String@vp 0058                   __end_of_PT100_TRANSLADA 1014  
     EEPROM_24C1025_Write_Buffer@sizedata 002E                               _milisegundo 00B0  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 0801  
                                log@coeff 1024                  __end_of_I2C_Master_Start 1B25  
                __end_of_I2C_Master_Write 1B05                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1018                                  isr@tempo 0076  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1C5E  
                             _my_delay_ms 1E2A                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 100A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 0800  
                 __end_of_I2C_Master_Init 1D90                   __end_of_I2C_Master_Read 1E2A  
                 __end_of_I2C_Master_Wait 1C5E                   __end_of_I2C_Master_Stop 1AE5  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0033  
               __size_of_USART_put_buffer 0024               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 005B                    ??_EEPROM_Write_Integer 0027  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 002F                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0023  
                                strlen@cp 0024                                  stringdir 100A  
                                stringtab 1000                               _SSPCON2bits 0091  
                       _EEPROM_Write_Byte 1ED1            EEPROM_24C1025_Read_Str@mem_add 002A  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 0018  
               ?_EEPROM_24C1025_Read_Byte 0038                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1F48  
