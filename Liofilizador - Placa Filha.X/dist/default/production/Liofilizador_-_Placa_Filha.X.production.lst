

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 21 14:39:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text21,local,class=CODE,merge=1,delta=2
    22                           	psect	text22,local,class=CODE,merge=1,delta=2
    23                           	psect	text24,local,class=CODE,merge=1,delta=2
    24                           	psect	text29,local,class=CODE,merge=1,delta=2
    25                           	psect	text33,local,class=CODE,merge=1,delta=2
    26                           	psect	text35,local,class=CODE,merge=1,delta=2
    27                           	psect	text38,local,class=CODE,merge=1,delta=2
    28                           	psect	text40,local,class=CODE,merge=1,delta=2
    29                           	psect	text42,local,class=CODE,merge=1,delta=2
    30                           	psect	text48,local,class=CODE,merge=1,delta=2
    31                           	psect	text49,local,class=CODE,merge=1,delta=2
    32                           	psect	text53,local,class=CODE,merge=1,delta=2
    33                           	psect	text61,local,class=CODE,merge=1,delta=2
    34                           	psect	text62,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	pa_nodes0,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F886 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  000E                     	;# 
   544  000F                     	;# 
   545  0010                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0013                     	;# 
   549  0014                     	;# 
   550  0015                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0017                     	;# 
   554  0018                     	;# 
   555  0019                     	;# 
   556  001A                     	;# 
   557  001B                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001D                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  0081                     	;# 
   564  0085                     	;# 
   565  0086                     	;# 
   566  0087                     	;# 
   567  0089                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  008F                     	;# 
   572  0090                     	;# 
   573  0091                     	;# 
   574  0092                     	;# 
   575  0093                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  0105                     	;# 
   591  0107                     	;# 
   592  0108                     	;# 
   593  0109                     	;# 
   594  010C                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  0185                     	;# 
   600  0187                     	;# 
   601  0188                     	;# 
   602  0189                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  000E                     	;# 
   619  000E                     	;# 
   620  000F                     	;# 
   621  0010                     	;# 
   622  0011                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0014                     	;# 
   626  0015                     	;# 
   627  0015                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  001B                     	;# 
   634  001B                     	;# 
   635  001C                     	;# 
   636  001D                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  0081                     	;# 
   640  0085                     	;# 
   641  0086                     	;# 
   642  0087                     	;# 
   643  0089                     	;# 
   644  008C                     	;# 
   645  008D                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0093                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  009F                     	;# 
   666  0105                     	;# 
   667  0107                     	;# 
   668  0108                     	;# 
   669  0109                     	;# 
   670  010C                     	;# 
   671  010C                     	;# 
   672  010D                     	;# 
   673  010E                     	;# 
   674  010F                     	;# 
   675  0185                     	;# 
   676  0187                     	;# 
   677  0188                     	;# 
   678  0189                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  000E                     	;# 
   696  000F                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0014                     	;# 
   702  0015                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0019                     	;# 
   708  001A                     	;# 
   709  001B                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  001D                     	;# 
   713  001E                     	;# 
   714  001F                     	;# 
   715  0081                     	;# 
   716  0085                     	;# 
   717  0086                     	;# 
   718  0087                     	;# 
   719  0089                     	;# 
   720  008C                     	;# 
   721  008D                     	;# 
   722  008E                     	;# 
   723  008F                     	;# 
   724  0090                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0093                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0097                     	;# 
   734  0098                     	;# 
   735  0099                     	;# 
   736  009A                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009E                     	;# 
   741  009F                     	;# 
   742  0105                     	;# 
   743  0107                     	;# 
   744  0108                     	;# 
   745  0109                     	;# 
   746  010C                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0185                     	;# 
   752  0187                     	;# 
   753  0188                     	;# 
   754  0189                     	;# 
   755  018C                     	;# 
   756  018D                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000D                     	;# 
   770  000E                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  0081                     	;# 
   792  0085                     	;# 
   793  0086                     	;# 
   794  0087                     	;# 
   795  0089                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  008F                     	;# 
   800  0090                     	;# 
   801  0091                     	;# 
   802  0092                     	;# 
   803  0093                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0094                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0097                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009A                     	;# 
   813  009B                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009E                     	;# 
   817  009F                     	;# 
   818  0105                     	;# 
   819  0107                     	;# 
   820  0108                     	;# 
   821  0109                     	;# 
   822  010C                     	;# 
   823  010C                     	;# 
   824  010D                     	;# 
   825  010E                     	;# 
   826  010F                     	;# 
   827  0185                     	;# 
   828  0187                     	;# 
   829  0188                     	;# 
   830  0189                     	;# 
   831  018C                     	;# 
   832  018D                     	;# 
   833  0000                     	;# 
   834  0001                     	;# 
   835  0002                     	;# 
   836  0003                     	;# 
   837  0004                     	;# 
   838  0005                     	;# 
   839  0006                     	;# 
   840  0007                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  000E                     	;# 
   848  000F                     	;# 
   849  0010                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0014                     	;# 
   854  0015                     	;# 
   855  0015                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001B                     	;# 
   863  001C                     	;# 
   864  001D                     	;# 
   865  001E                     	;# 
   866  001F                     	;# 
   867  0081                     	;# 
   868  0085                     	;# 
   869  0086                     	;# 
   870  0087                     	;# 
   871  0089                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  008E                     	;# 
   875  008F                     	;# 
   876  0090                     	;# 
   877  0091                     	;# 
   878  0092                     	;# 
   879  0093                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0094                     	;# 
   883  0095                     	;# 
   884  0096                     	;# 
   885  0097                     	;# 
   886  0098                     	;# 
   887  0099                     	;# 
   888  009A                     	;# 
   889  009B                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009E                     	;# 
   893  009F                     	;# 
   894  0105                     	;# 
   895  0107                     	;# 
   896  0108                     	;# 
   897  0109                     	;# 
   898  010C                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  010F                     	;# 
   903  0185                     	;# 
   904  0187                     	;# 
   905  0188                     	;# 
   906  0189                     	;# 
   907  018C                     	;# 
   908  018D                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0094                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0097                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009A                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  009F                     	;# 
   970  0105                     	;# 
   971  0107                     	;# 
   972  0108                     	;# 
   973  0109                     	;# 
   974  010C                     	;# 
   975  010C                     	;# 
   976  010D                     	;# 
   977  010E                     	;# 
   978  010F                     	;# 
   979  0185                     	;# 
   980  0187                     	;# 
   981  0188                     	;# 
   982  0189                     	;# 
   983  018C                     	;# 
   984  018D                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001B                     	;# 
  1015  001C                     	;# 
  1016  001D                     	;# 
  1017  001E                     	;# 
  1018  001F                     	;# 
  1019  0081                     	;# 
  1020  0085                     	;# 
  1021  0086                     	;# 
  1022  0087                     	;# 
  1023  0089                     	;# 
  1024  008C                     	;# 
  1025  008D                     	;# 
  1026  008E                     	;# 
  1027  008F                     	;# 
  1028  0090                     	;# 
  1029  0091                     	;# 
  1030  0092                     	;# 
  1031  0093                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0094                     	;# 
  1035  0095                     	;# 
  1036  0096                     	;# 
  1037  0097                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  0105                     	;# 
  1047  0107                     	;# 
  1048  0108                     	;# 
  1049  0109                     	;# 
  1050  010C                     	;# 
  1051  010C                     	;# 
  1052  010D                     	;# 
  1053  010E                     	;# 
  1054  010F                     	;# 
  1055  0185                     	;# 
  1056  0187                     	;# 
  1057  0188                     	;# 
  1058  0189                     	;# 
  1059  018C                     	;# 
  1060  018D                     	;# 
  1061  0000                     	;# 
  1062  0001                     	;# 
  1063  0002                     	;# 
  1064  0003                     	;# 
  1065  0004                     	;# 
  1066  0005                     	;# 
  1067  0006                     	;# 
  1068  0007                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  000E                     	;# 
  1076  000F                     	;# 
  1077  0010                     	;# 
  1078  0011                     	;# 
  1079  0012                     	;# 
  1080  0013                     	;# 
  1081  0014                     	;# 
  1082  0015                     	;# 
  1083  0015                     	;# 
  1084  0016                     	;# 
  1085  0017                     	;# 
  1086  0018                     	;# 
  1087  0019                     	;# 
  1088  001A                     	;# 
  1089  001B                     	;# 
  1090  001B                     	;# 
  1091  001C                     	;# 
  1092  001D                     	;# 
  1093  001E                     	;# 
  1094  001F                     	;# 
  1095  0081                     	;# 
  1096  0085                     	;# 
  1097  0086                     	;# 
  1098  0087                     	;# 
  1099  0089                     	;# 
  1100  008C                     	;# 
  1101  008D                     	;# 
  1102  008E                     	;# 
  1103  008F                     	;# 
  1104  0090                     	;# 
  1105  0091                     	;# 
  1106  0092                     	;# 
  1107  0093                     	;# 
  1108  0093                     	;# 
  1109  0093                     	;# 
  1110  0094                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  009F                     	;# 
  1122  0105                     	;# 
  1123  0107                     	;# 
  1124  0108                     	;# 
  1125  0109                     	;# 
  1126  010C                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0185                     	;# 
  1132  0187                     	;# 
  1133  0188                     	;# 
  1134  0189                     	;# 
  1135  018C                     	;# 
  1136  018D                     	;# 
  1137                           
  1138                           	psect	strings
  1139  1000                     __pstrings:	
  1140  1000                     stringtab:	
  1141  1000                     __stringtab:	
  1142                           
  1143                           ;	String table - string pointers are 1 byte each
  1144  1000  1BFF               	btfsc	btemp+1,7
  1145  1001  280A               	ljmp	stringcode
  1146  1002  1383               	bcf	3,7
  1147  1003  187F               	btfsc	btemp+1,0
  1148  1004  1783               	bsf	3,7
  1149  1005  0800               	movf	0,w
  1150  1006  0A84               	incf	4,f
  1151  1007  1903               	skipnz
  1152  1008  0AFF               	incf	btemp+1,f
  1153  1009  0008               	return
  1154  100A                     stringcode:	
  1155  100A                     stringdir:	
  1156  100A  3010               	movlw	high stringdir
  1157  100B  008A               	movwf	10
  1158  100C  0804               	movf	4,w
  1159  100D  0A84               	incf	4,f
  1160  100E  0782               	addwf	2,f
  1161  100F                     __stringbase:	
  1162  100F  3400               	retlw	0
  1163  1010                     __end_of__stringtab:	
  1164  1010                     log@coeff:	
  1165  1010  3400               	retlw	0
  1166  1011  3400               	retlw	0
  1167  1012  3400               	retlw	0
  1168  1013  3400               	retlw	0
  1169  1014  34C4               	retlw	196
  1170  1015  34FF               	retlw	255
  1171  1016  347F               	retlw	127
  1172  1017  343F               	retlw	63
  1173  1018  3480               	retlw	128
  1174  1019  34EF               	retlw	239
  1175  101A  34FF               	retlw	255
  1176  101B  34BE               	retlw	190
  1177  101C  3490               	retlw	144
  1178  101D  34E1               	retlw	225
  1179  101E  34A9               	retlw	169
  1180  101F  343E               	retlw	62
  1181  1020  34EC               	retlw	236
  1182  1021  3482               	retlw	130
  1183  1022  3476               	retlw	118
  1184  1023  34BE               	retlw	190
  1185  1024  3482               	retlw	130
  1186  1025  34AD               	retlw	173
  1187  1026  342B               	retlw	43
  1188  1027  343E               	retlw	62
  1189  1028  340E               	retlw	14
  1190  1029  343C               	retlw	60
  1191  102A  34C3               	retlw	195
  1192  102B  34BD               	retlw	189
  1193  102C  3487               	retlw	135
  1194  102D  34D1               	retlw	209
  1195  102E  3413               	retlw	19
  1196  102F  343D               	retlw	61
  1197  1030  3441               	retlw	65
  1198  1031  3478               	retlw	120
  1199  1032  34D3               	retlw	211
  1200  1033  34BB               	retlw	187
  1201  1034                     __end_oflog@coeff:	
  1202  1034                     _BETA:	
  1203                           
  1204                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1205  1034  3400               	retlw	0
  1206  1035  3460               	retlw	96
  1207  1036  3478               	retlw	120
  1208  1037  3445               	retlw	69
  1209  1038                     __end_of_BETA:	
  1210  1038                     _BALANCE_RESISTOR:	
  1211                           
  1212                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1213  1038  3400               	retlw	0
  1214  1039  3440               	retlw	64
  1215  103A  341C               	retlw	28
  1216  103B  3446               	retlw	70
  1217  103C                     __end_of_BALANCE_RESISTOR:	
  1218  0019                     _TXREG	set	25
  1219  0018                     _RCSTAbits	set	24
  1220  001A                     _RCREG	set	26
  1221  000E                     _TMR1L	set	14
  1222  000F                     _TMR1H	set	15
  1223  000C                     _PIR1bits	set	12
  1224  001E                     _ADRESH	set	30
  1225  001F                     _ADCON0bits	set	31
  1226  0005                     _PORTAbits	set	5
  1227  0007                     _PORTCbits	set	7
  1228  0010                     _T1CON	set	16
  1229  000B                     _INTCONbits	set	11
  1230  0006                     _PORTBbits	set	6
  1231  0009                     _PORTE	set	9
  1232  0007                     _PORTC	set	7
  1233  0005                     _PORTA	set	5
  1234  0013                     _SSPBUF	set	19
  1235  0014                     _SSPCON	set	20
  1236  0006                     _PORTB	set	6
  1237  00C4                     _CREN	set	196
  1238  0081                     _TMR1CS	set	129
  1239  0085                     _T1CKPS1	set	133
  1240  0084                     _T1CKPS0	set	132
  1241  008C                     _PIE1bits	set	140
  1242  0099                     _SPBRG	set	153
  1243  0098                     _TXSTAbits	set	152
  1244  009E                     _ADRESL	set	158
  1245  009F                     _ADCON1bits	set	159
  1246  009F                     _ADCON1	set	159
  1247  0095                     _WPUB	set	149
  1248  0081                     _OPTION_REGbits	set	129
  1249  0089                     _TRISE	set	137
  1250  0087                     _TRISC	set	135
  1251  0086                     _TRISB	set	134
  1252  0085                     _TRISA	set	133
  1253  008F                     _OSCCONbits	set	143
  1254  0094                     _SSPSTAT	set	148
  1255  0093                     _SSPADD	set	147
  1256  0091                     _SSPCON2	set	145
  1257  043F                     _TRISC7	set	1087
  1258  043E                     _TRISC6	set	1086
  1259  0460                     _TMR1IE	set	1120
  1260  048C                     _ACKEN	set	1164
  1261  048D                     _ACKDT	set	1165
  1262  048B                     _RCEN	set	1163
  1263  048A                     _PEN	set	1162
  1264  0489                     _RSEN	set	1161
  1265  0488                     _SEN	set	1160
  1266  043C                     _TRISC4	set	1084
  1267  043B                     _TRISC3	set	1083
  1268  010C                     _EEDATA	set	268
  1269  010D                     _EEADR	set	269
  1270  0187                     _BAUDCTLbits	set	391
  1271  018D                     _EECON2	set	397
  1272  018C                     _EECON1bits	set	396
  1273  0189                     _ANSELH	set	393
  1274  0188                     _ANSEL	set	392
  1275  103C                     STR_1:	
  1276  103C  3476               	retlw	118	;'v'
  1277  103D  3431               	retlw	49	;'1'
  1278  103E  342E               	retlw	46	;'.'
  1279  103F  3430               	retlw	48	;'0'
  1280  1040  342E               	retlw	46	;'.'
  1281  1041  3431               	retlw	49	;'1'
  1282  1042  3430               	retlw	48	;'0'
  1283  1043  3400               	retlw	0
  1284  1044                     STR_8:	
  1285  1044  344F               	retlw	79	;'O'
  1286  1045  344B               	retlw	75	;'K'
  1287  1046  3400               	retlw	0
  1288  1047                     STR_4:	
  1289  1047  343A               	retlw	58	;':'
  1290  1048  3400               	retlw	0
  1291  1043                     
  1292                           ; #config settings
  1293  0000                     
  1294                           	psect	cinit
  1295  0015                     start_initialization:	
  1296  0015                     __initialization:	
  1297  0015  3063               	movlw	low __pbssBANK0
  1298                           
  1299                           ; Clear objects allocated to COMMON
  1300  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  1301  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1302  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1303  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1304  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1305  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1306                           
  1307                           ; Clear objects allocated to BANK0
  1308  001C  1383               	bcf	3,7	;select IRP bank0
  1309  001D  0084               	movwf	4
  1310  001E  306C               	movlw	low (__pbssBANK0+9)
  1311  001F  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1312                           
  1313                           ; Clear objects allocated to BANK1
  1314  0024  30CD               	movlw	low __pbssBANK1
  1315  0025  0084               	movwf	4
  1316  0026  30EC               	movlw	low (__pbssBANK1+31)
  1317  0027  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1318  002C  3090               	movlw	low __pbssBANK3
  1319                           
  1320                           ; Clear objects allocated to BANK3
  1321  002D  1783               	bsf	3,7	;select IRP bank2
  1322  002E  0084               	movwf	4
  1323  002F  30EA               	movlw	low (__pbssBANK3+90)
  1324  0030  120A  158A  2001   	fcall	clear_ram0
  1325  0033                     end_of_initialization:	
  1326                           ;End of C runtime variable initialization code
  1327                           
  1328  0033                     __end_of__initialization:	
  1329  0033  0183               	clrf	3
  1330  0034  160A  118A  2F24   	ljmp	l6647	;jump to C main() function
  1331                           
  1332                           	psect	bssCOMMON
  1333  0070                     __pbssCOMMON:	
  1334  0070                     _Delay_Led_Usart:	
  1335  0070                     	ds	2
  1336  0072                     _Delay_Led_Tmr0:	
  1337  0072                     	ds	2
  1338  0074                     _Delay_Led_Memory:	
  1339  0074                     	ds	2
  1340                           
  1341                           	psect	bssBANK0
  1342  0063                     __pbssBANK0:	
  1343  0063                     _count:	
  1344  0063                     	ds	2
  1345  0065                     _header:	
  1346  0065                     	ds	2
  1347  0067                     _pointer:	
  1348  0067                     	ds	1
  1349  0068                     _destino:	
  1350  0068                     	ds	1
  1351  0069                     _Board_Number:	
  1352  0069                     	ds	1
  1353  006A                     _canal:	
  1354  006A                     	ds	1
  1355  006B                     _generic_status:	
  1356  006B                     	ds	1
  1357                           
  1358                           	psect	bssBANK1
  1359  00CD                     __pbssBANK1:	
  1360  00CD                     _Umidade1:	
  1361  00CD                     	ds	4
  1362  00D1                     _Temperatura0:	
  1363  00D1                     	ds	4
  1364  00D5                     _tempodecorrido:	
  1365  00D5                     	ds	2
  1366  00D7                     _milisegundo:	
  1367  00D7                     	ds	2
  1368  00D9                     _minuto:	
  1369  00D9                     	ds	1
  1370  00DA                     _hora:	
  1371  00DA                     	ds	1
  1372  00DB                     _segundo:	
  1373  00DB                     	ds	1
  1374  00DC                     _usart_protocol:	
  1375  00DC                     	ds	16
  1376                           
  1377                           	psect	bssBANK3
  1378  0190                     __pbssBANK3:	
  1379  0190                     _usart_buffer:	
  1380  0190                     	ds	42
  1381  01BA                     _buffer:	
  1382  01BA                     	ds	32
  1383  01DA                     _texto:	
  1384  01DA                     	ds	16
  1385                           
  1386                           	psect	clrtext
  1387  0801                     clear_ram0:	
  1388                           ;	Called with FSR containing the base address, and
  1389                           ;	W with the last address+1
  1390                           
  1391  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
  1392  0802                     clrloop0:	
  1393  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
  1394  0803  0A84               	incf	4,f	;increment pointer
  1395  0804  0604               	xorwf	4,w	;XOR with final address
  1396  0805  1903               	btfsc	3,2	;have we reached the end yet?
  1397  0806  3400               	retlw	0	;all done for this memory range, return
  1398  0807  0604               	xorwf	4,w	;XOR again to restore value
  1399  0808  2802               	goto	clrloop0	;do the next byte
  1400                           
  1401                           	psect	cstackBANK1
  1402  00A0                     __pcstackBANK1:	
  1403  00A0                     Decodify_Command@hh:	
  1404                           
  1405                           ; 10 bytes @ 0x0
  1406  00A0                     	ds	10
  1407  00AA                     Decodify_Command@mm:	
  1408                           
  1409                           ; 10 bytes @ 0xA
  1410  00AA                     	ds	10
  1411  00B4                     Decodify_Command@ss:	
  1412                           
  1413                           ; 10 bytes @ 0x14
  1414  00B4                     	ds	10
  1415  00BE                     Decodify_Command@dados:	
  1416                           
  1417                           ; 2 bytes @ 0x1E
  1418  00BE                     	ds	2
  1419  00C0                     Decodify_Command@add:	
  1420                           
  1421                           ; 1 bytes @ 0x20
  1422  00C0                     	ds	1
  1423  00C1                     Decodify_Command@tempint:	
  1424                           
  1425                           ; 2 bytes @ 0x21
  1426  00C1                     	ds	2
  1427  00C3                     Decodify_Command@OutPut:	
  1428                           
  1429                           ; 4 bytes @ 0x23
  1430  00C3                     	ds	4
  1431  00C7                     Decodify_Command@tempchar:	
  1432                           
  1433                           ; 1 bytes @ 0x27
  1434  00C7                     	ds	1
  1435  00C8                     Decodify_Command@sizedata:	
  1436                           
  1437                           ; 1 bytes @ 0x28
  1438  00C8                     	ds	1
  1439  00C9                     Decodify_Command@add_24LCxxxx:	
  1440                           
  1441                           ; 4 bytes @ 0x29
  1442  00C9                     	ds	4
  1443                           
  1444                           	psect	cstackCOMMON
  1445  0076                     __pcstackCOMMON:	
  1446  0076                     ?_I2C_Master_Start:	
  1447  0076                     ?_I2C_Master_Stop:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0076                     ?_I2C_Master_RepeatedStart:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0076                     ?_ADC_init:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0076                     ?_mediaLeituraPt100Umidadde:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0076                     ?_Decodify_Command:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0076                     ?_USART_to_Protocol:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0076                     ?_Send_To_MB:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0076                     ?_Send_Reply_OK:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0076                     ?_EEPROM_Read_Byte:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0076                     ?_USART_putc:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0076                     ?_Package_Usart_is_for_me:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0076                     ?_I2C_Master_Wait:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0076                     ?_main:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0076                     ?_isr:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0076                     ??_isr:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x0
  1494  0076                     	ds	4
  1495  007A                     isr@tempo:	
  1496                           
  1497                           ; 2 bytes @ 0x4
  1498  007A                     	ds	2
  1499                           
  1500                           	psect	cstackBANK0
  1501  0020                     __pcstackBANK0:	
  1502  0020                     ??_I2C_Master_Start:	
  1503  0020                     ?_I2C_Master_Write:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0020                     ??_I2C_Master_Stop:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0020                     ?_my_delay_ms_WDT:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0020                     ??_I2C_Master_RepeatedStart:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0020                     ??_ADC_init:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0020                     ?_USART_init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0020                     ??_USART_to_Protocol:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0020                     ?_EEPROM_Write_Byte:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0020                     ??_EEPROM_Read_Byte:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0020                     ??_USART_putc:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0020                     ?_strcpy:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0020                     ?_strcat:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0020                     ?_my_delay_ms:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0020                     ??_Package_Usart_is_for_me:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0020                     ?_PROCULUS_Delay:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0020                     ??_I2C_Master_Wait:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0020                     ?_I2C_Master_Read:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0020                     ?_strlen:	
  1555                           ; 2 bytes @ 0x0
  1556                           
  1557  0020                     ?_captura:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560  0020                     ?__Umul8_16:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0020                     ?___lwdiv:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566  0020                     ?___lwmod:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569  0020                     ?___lldiv:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0020                     ?___fltol:	
  1573                           ; 4 bytes @ 0x0
  1574                           
  1575  0020                     ?___xxtofl:	
  1576                           ; 4 bytes @ 0x0
  1577                           
  1578  0020                     EEPROM_Write_Byte@dado:	
  1579                           ; 4 bytes @ 0x0
  1580                           
  1581  0020                     Package_Usart_is_for_me@retorno:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     USART_putc@value:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     strcpy@from:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     __Umul8_16@multiplicand:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     I2C_Master_Write@d:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     I2C_Master_Read@a:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0020                     PROCULUS_Delay@tempo_ms:	
  1600                           ; 2 bytes @ 0x0
  1601                           
  1602  0020                     ___lwdiv@divisor:	
  1603                           ; 2 bytes @ 0x0
  1604                           
  1605  0020                     ___lwmod@divisor:	
  1606                           ; 2 bytes @ 0x0
  1607                           
  1608  0020                     strcat@from:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611  0020                     strlen@s:	
  1612                           ; 2 bytes @ 0x0
  1613                           
  1614  0020                     my_delay_ms@time:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     my_delay_ms_WDT@time:	
  1618                           ; 4 bytes @ 0x0
  1619                           
  1620  0020                     USART_init@baudrate:	
  1621                           ; 4 bytes @ 0x0
  1622                           
  1623  0020                     ___lldiv@divisor:	
  1624                           ; 4 bytes @ 0x0
  1625                           
  1626  0020                     ___fltol@f1:	
  1627                           ; 4 bytes @ 0x0
  1628                           
  1629  0020                     ___xxtofl@val:	
  1630                           ; 4 bytes @ 0x0
  1631                           
  1632                           
  1633                           ; 4 bytes @ 0x0
  1634  0020                     	ds	1
  1635  0021                     ??_Send_To_MB:	
  1636  0021                     ?_USART_put_string:	
  1637                           ; 1 bytes @ 0x1
  1638                           
  1639  0021                     ??_EEPROM_Write_Byte:	
  1640                           ; 1 bytes @ 0x1
  1641                           
  1642  0021                     ?_USART_put_buffer:	
  1643                           ; 1 bytes @ 0x1
  1644                           
  1645  0021                     ??_strcpy:	
  1646                           ; 1 bytes @ 0x1
  1647                           
  1648  0021                     Send_To_MB@size:	
  1649                           ; 1 bytes @ 0x1
  1650                           
  1651  0021                     USART_put_buffer@size:	
  1652                           ; 1 bytes @ 0x1
  1653                           
  1654  0021                     USART_put_string@vetor:	
  1655                           ; 2 bytes @ 0x1
  1656                           
  1657                           
  1658                           ; 2 bytes @ 0x1
  1659  0021                     	ds	1
  1660  0022                     ??_I2C_Master_Write:	
  1661  0022                     ??_I2C_Master_Read:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0022                     ??_strlen:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0022                     ??_strcat:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0022                     ??_captura:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673  0022                     ??_PROCULUS_Delay:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0022                     EEPROM_Read_Byte@addr:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0022                     strcpy@to:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0022                     I2C_Master_Read@temp:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0022                     USART_to_Protocol@i:	
  1686                           ; 2 bytes @ 0x2
  1687                           
  1688  0022                     ___lwdiv@dividend:	
  1689                           ; 2 bytes @ 0x2
  1690                           
  1691  0022                     ___lwmod@dividend:	
  1692                           ; 2 bytes @ 0x2
  1693                           
  1694  0022                     strlen@cp:	
  1695                           ; 2 bytes @ 0x2
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0x2
  1699  0022                     	ds	1
  1700  0023                     ??_USART_put_string:	
  1701  0023                     ?_EEPROM_Read_String:	
  1702                           ; 1 bytes @ 0x3
  1703                           
  1704  0023                     ??_USART_put_buffer:	
  1705                           ; 1 bytes @ 0x3
  1706                           
  1707  0023                     ??__Umul8_16:	
  1708                           ; 1 bytes @ 0x3
  1709                           
  1710  0023                     ?_EEPROM_Read_Integer:	
  1711                           ; 1 bytes @ 0x3
  1712                           
  1713  0023                     EEPROM_Write_Byte@addr:	
  1714                           ; 2 bytes @ 0x3
  1715                           
  1716  0023                     EEPROM_Read_String@dado:	
  1717                           ; 1 bytes @ 0x3
  1718                           
  1719  0023                     strcat@cp:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722  0023                     strcpy@cp:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725  0023                     USART_put_string@ptr:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     __Umul8_16@product:	
  1729                           ; 2 bytes @ 0x3
  1730                           
  1731                           
  1732                           ; 2 bytes @ 0x3
  1733  0023                     	ds	1
  1734  0024                     ??_my_delay_ms_WDT:	
  1735  0024                     ??_USART_init:	
  1736                           ; 1 bytes @ 0x4
  1737                           
  1738  0024                     ??_EEPROM_Read_String:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0024                     ??_my_delay_ms:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0024                     ??___fltol:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0024                     ??___lwdiv:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0024                     ??___lwmod:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0024                     ??___xxtofl:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0024                     EEPROM_Write_Byte@last_GIE:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0024                     EEPROM_Read_String@addr:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0024                     USART_init@i:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     USART_to_Protocol@usart_protocol:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     ___lwdiv@counter:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     ___lwmod@counter:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     strcat@to:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     PROCULUS_Delay@i:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     ___lldiv@dividend:	
  1781                           ; 2 bytes @ 0x4
  1782                           
  1783                           
  1784                           ; 4 bytes @ 0x4
  1785  0024                     	ds	1
  1786  0025                     ?_EEPROM_Write_Integer:	
  1787  0025                     ??_Send_Reply_OK:	
  1788                           ; 1 bytes @ 0x5
  1789                           
  1790  0025                     ?_EEPROM_Write_String:	
  1791                           ; 1 bytes @ 0x5
  1792                           
  1793  0025                     EEPROM_Write_String@dado:	
  1794                           ; 1 bytes @ 0x5
  1795                           
  1796  0025                     EEPROM_Read_String@c:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799  0025                     USART_put_buffer@loop:	
  1800                           ; 1 bytes @ 0x5
  1801                           
  1802  0025                     EEPROM_Write_Integer@dado:	
  1803                           ; 1 bytes @ 0x5
  1804                           
  1805  0025                     ___lwdiv@quotient:	
  1806                           ; 2 bytes @ 0x5
  1807                           
  1808  0025                     __Umul8_16@word_mpld:	
  1809                           ; 2 bytes @ 0x5
  1810                           
  1811                           
  1812                           ; 2 bytes @ 0x5
  1813  0025                     	ds	1
  1814  0026                     ??_EEPROM_Read_Integer:	
  1815  0026                     ??_EEPROM_Write_String:	
  1816                           ; 1 bytes @ 0x6
  1817                           
  1818  0026                     EEPROM_Read_Integer@addr:	
  1819                           ; 1 bytes @ 0x6
  1820                           
  1821  0026                     EEPROM_Write_String@addr:	
  1822                           ; 1 bytes @ 0x6
  1823                           
  1824  0026                     USART_put_buffer@ptr:	
  1825                           ; 1 bytes @ 0x6
  1826                           
  1827  0026                     my_delay_ms@i:	
  1828                           ; 1 bytes @ 0x6
  1829                           
  1830  0026                     my_delay_ms_WDT@i:	
  1831                           ; 4 bytes @ 0x6
  1832                           
  1833                           
  1834                           ; 4 bytes @ 0x6
  1835  0026                     	ds	1
  1836  0027                     ??_EEPROM_Write_Integer:	
  1837  0027                     ?_utoa:	
  1838                           ; 1 bytes @ 0x7
  1839                           
  1840  0027                     EEPROM_Read_Integer@ptr:	
  1841                           ; 1 bytes @ 0x7
  1842                           
  1843  0027                     USART_put_buffer@vetor:	
  1844                           ; 1 bytes @ 0x7
  1845                           
  1846  0027                     __Umul8_16@multiplier:	
  1847                           ; 1 bytes @ 0x7
  1848                           
  1849  0027                     utoa@val:	
  1850                           ; 1 bytes @ 0x7
  1851                           
  1852                           
  1853                           ; 2 bytes @ 0x7
  1854  0027                     	ds	1
  1855  0028                     ??___lldiv:	
  1856  0028                     ?___flmul:	
  1857                           ; 1 bytes @ 0x8
  1858                           
  1859  0028                     ___fltol@sign1:	
  1860                           ; 4 bytes @ 0x8
  1861                           
  1862  0028                     ___xxtofl@sign:	
  1863                           ; 1 bytes @ 0x8
  1864                           
  1865  0028                     EEPROM_Read_Integer@result:	
  1866                           ; 1 bytes @ 0x8
  1867                           
  1868  0028                     ___lldiv@quotient:	
  1869                           ; 2 bytes @ 0x8
  1870                           
  1871  0028                     ___flmul@b:	
  1872                           ; 4 bytes @ 0x8
  1873                           
  1874                           
  1875                           ; 4 bytes @ 0x8
  1876  0028                     	ds	1
  1877  0029                     EEPROM_Write_Integer@addr:	
  1878  0029                     ___fltol@exp1:	
  1879                           ; 1 bytes @ 0x9
  1880                           
  1881  0029                     ___xxtofl@exp:	
  1882                           ; 1 bytes @ 0x9
  1883                           
  1884  0029                     utoa@base:	
  1885                           ; 1 bytes @ 0x9
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0x9
  1889  0029                     	ds	1
  1890  002A                     ?_USART_put_int:	
  1891  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1892                           ; 1 bytes @ 0xA
  1893                           
  1894  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1895                           ; 1 bytes @ 0xA
  1896                           
  1897  002A                     ?_EEPROM_24C1025_Write_Str:	
  1898                           ; 1 bytes @ 0xA
  1899                           
  1900  002A                     ?_EEPROM_24C1025_Read_Str:	
  1901                           ; 1 bytes @ 0xA
  1902                           
  1903  002A                     ?___wmul:	
  1904                           ; 1 bytes @ 0xA
  1905                           
  1906  002A                     EEPROM_Write_Integer@ptr:	
  1907                           ; 2 bytes @ 0xA
  1908                           
  1909  002A                     EEPROM_Read_Integer@i:	
  1910                           ; 1 bytes @ 0xA
  1911                           
  1912  002A                     USART_put_int@value:	
  1913                           ; 1 bytes @ 0xA
  1914                           
  1915  002A                     ___wmul@multiplier:	
  1916                           ; 2 bytes @ 0xA
  1917                           
  1918  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1919                           ; 2 bytes @ 0xA
  1920                           
  1921  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1922                           ; 4 bytes @ 0xA
  1923                           
  1924  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1925                           ; 4 bytes @ 0xA
  1926                           
  1927  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  1928                           ; 4 bytes @ 0xA
  1929                           
  1930  002A                     ___xxtofl@arg:	
  1931                           ; 4 bytes @ 0xA
  1932                           
  1933                           
  1934                           ; 4 bytes @ 0xA
  1935  002A                     	ds	1
  1936  002B                     ??_utoa:	
  1937  002B                     EEPROM_Write_Integer@i:	
  1938                           ; 1 bytes @ 0xB
  1939                           
  1940  002B                     utoa@v:	
  1941                           ; 1 bytes @ 0xB
  1942                           
  1943                           
  1944                           ; 2 bytes @ 0xB
  1945  002B                     	ds	1
  1946  002C                     ??_USART_put_int:	
  1947  002C                     USART_put_int@dado:	
  1948                           ; 1 bytes @ 0xC
  1949                           
  1950  002C                     ___lldiv@counter:	
  1951                           ; 1 bytes @ 0xC
  1952                           
  1953  002C                     ___wmul@multiplicand:	
  1954                           ; 1 bytes @ 0xC
  1955                           
  1956  002C                     ___flmul@a:	
  1957                           ; 2 bytes @ 0xC
  1958                           
  1959                           
  1960                           ; 4 bytes @ 0xC
  1961  002C                     	ds	1
  1962  002D                     ?_I2C_Master_Init:	
  1963  002D                     ?_PROCULUS_Control_Register_Write:	
  1964                           ; 1 bytes @ 0xD
  1965                           
  1966  002D                     ?_PROCULUS_VP_Write:	
  1967                           ; 1 bytes @ 0xD
  1968                           
  1969  002D                     PROCULUS_Control_Register_Write@size:	
  1970                           ; 1 bytes @ 0xD
  1971                           
  1972  002D                     utoa@c:	
  1973                           ; 1 bytes @ 0xD
  1974                           
  1975  002D                     PROCULUS_VP_Write@vp:	
  1976                           ; 1 bytes @ 0xD
  1977                           
  1978  002D                     I2C_Master_Init@c:	
  1979                           ; 2 bytes @ 0xD
  1980                           
  1981                           
  1982                           ; 4 bytes @ 0xD
  1983  002D                     	ds	1
  1984  002E                     ??_PROCULUS_Control_Register_Write:	
  1985  002E                     ??___wmul:	
  1986                           ; 1 bytes @ 0xE
  1987                           
  1988  002E                     ?_ADC_Media_10bits:	
  1989                           ; 1 bytes @ 0xE
  1990                           
  1991  002E                     ?___fldiv:	
  1992                           ; 4 bytes @ 0xE
  1993                           
  1994  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1995                           ; 4 bytes @ 0xE
  1996                           
  1997  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1998                           ; 1 bytes @ 0xE
  1999                           
  2000  002E                     EEPROM_24C1025_Write_Str@data:	
  2001                           ; 1 bytes @ 0xE
  2002                           
  2003  002E                     EEPROM_24C1025_Read_Str@texto:	
  2004                           ; 1 bytes @ 0xE
  2005                           
  2006  002E                     utoa@buf:	
  2007                           ; 1 bytes @ 0xE
  2008                           
  2009  002E                     ___wmul@product:	
  2010                           ; 1 bytes @ 0xE
  2011                           
  2012  002E                     ___fldiv@a:	
  2013                           ; 2 bytes @ 0xE
  2014                           
  2015                           
  2016                           ; 4 bytes @ 0xE
  2017  002E                     	ds	1
  2018  002F                     ?_itoa:	
  2019  002F                     ??_EEPROM_24C1025_Write_Str:	
  2020                           ; 1 bytes @ 0xF
  2021                           
  2022  002F                     ??_EEPROM_24C1025_Read_Str:	
  2023                           ; 1 bytes @ 0xF
  2024                           
  2025  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2026                           ; 1 bytes @ 0xF
  2027                           
  2028  002F                     EEPROM_24C1025_Write_Str@chip_add:	
  2029                           ; 1 bytes @ 0xF
  2030                           
  2031  002F                     PROCULUS_Control_Register_Write@vetor:	
  2032                           ; 1 bytes @ 0xF
  2033                           
  2034  002F                     PROCULUS_VP_Write@vetor:	
  2035                           ; 1 bytes @ 0xF
  2036                           
  2037  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2038                           ; 1 bytes @ 0xF
  2039                           
  2040  002F                     itoa@val:	
  2041                           ; 2 bytes @ 0xF
  2042                           
  2043                           
  2044                           ; 2 bytes @ 0xF
  2045  002F                     	ds	1
  2046  0030                     ??_EEPROM_24C1025_Write_Buffer:	
  2047  0030                     ??___flmul:	
  2048                           ; 1 bytes @ 0x10
  2049                           
  2050  0030                     EEPROM_24C1025_Write_Str@range:	
  2051                           ; 1 bytes @ 0x10
  2052                           
  2053  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2054                           ; 1 bytes @ 0x10
  2055                           
  2056  0030                     PROCULUS_Control_Register_Write@i:	
  2057                           ; 1 bytes @ 0x10
  2058                           
  2059  0030                     PROCULUS_VP_Write@size:	
  2060                           ; 1 bytes @ 0x10
  2061                           
  2062                           
  2063                           ; 1 bytes @ 0x10
  2064  0030                     	ds	1
  2065  0031                     ?_PROCULUS_Show_Screen:	
  2066  0031                     ?_PROCULUS_Buzzer:	
  2067                           ; 1 bytes @ 0x11
  2068                           
  2069  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  2070                           ; 1 bytes @ 0x11
  2071                           
  2072  0031                     ??_I2C_Master_Init:	
  2073                           ; 1 bytes @ 0x11
  2074                           
  2075  0031                     ??_PROCULUS_VP_Write:	
  2076                           ; 1 bytes @ 0x11
  2077                           
  2078  0031                     EEPROM_24C1025_Write_Str@ctrl:	
  2079                           ; 1 bytes @ 0x11
  2080                           
  2081  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2082                           ; 1 bytes @ 0x11
  2083                           
  2084  0031                     PROCULUS_Buzzer@time_ms_x_10:	
  2085                           ; 1 bytes @ 0x11
  2086                           
  2087  0031                     PROCULUS_Show_Screen@screen:	
  2088                           ; 2 bytes @ 0x11
  2089                           
  2090  0031                     itoa@base:	
  2091                           ; 2 bytes @ 0x11
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0x11
  2095  0031                     	ds	1
  2096  0032                     ??_ADC_Media_10bits:	
  2097  0032                     EEPROM_24C1025_Write_Buffer@count:	
  2098                           ; 1 bytes @ 0x12
  2099                           
  2100  0032                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2101                           ; 1 bytes @ 0x12
  2102                           
  2103  0032                     EEPROM_24C1025_Read_Str@range:	
  2104                           ; 1 bytes @ 0x12
  2105                           
  2106  0032                     PROCULUS_VP_Write@i:	
  2107                           ; 1 bytes @ 0x12
  2108                           
  2109  0032                     ___fldiv@b:	
  2110                           ; 1 bytes @ 0x12
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0x12
  2114  0032                     	ds	1
  2115  0033                     ??_itoa:	
  2116  0033                     ??_PROCULUS_Show_Screen:	
  2117                           ; 1 bytes @ 0x13
  2118                           
  2119  0033                     ??_PROCULUS_Buzzer:	
  2120                           ; 1 bytes @ 0x13
  2121                           
  2122  0033                     ?_PROCULUS_VP_Write_String:	
  2123                           ; 1 bytes @ 0x13
  2124                           
  2125  0033                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2126                           ; 1 bytes @ 0x13
  2127                           
  2128  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2129                           ; 1 bytes @ 0x13
  2130                           
  2131  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2132                           ; 1 bytes @ 0x13
  2133                           
  2134  0033                     ADC_Media_10bits@canal:	
  2135                           ; 1 bytes @ 0x13
  2136                           
  2137  0033                     PROCULUS_VP_Write_String@vp:	
  2138                           ; 1 bytes @ 0x13
  2139                           
  2140  0033                     PROCULUS_Buzzer@vetor:	
  2141                           ; 2 bytes @ 0x13
  2142                           
  2143  0033                     PROCULUS_Show_Screen@vetor:	
  2144                           ; 2 bytes @ 0x13
  2145                           
  2146                           
  2147                           ; 3 bytes @ 0x13
  2148  0033                     	ds	1
  2149  0034                     EEPROM_24C1025_Write_Buffer@range:	
  2150  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2151                           ; 1 bytes @ 0x14
  2152                           
  2153  0034                     ___flmul@sign:	
  2154                           ; 1 bytes @ 0x14
  2155                           
  2156  0034                     itoa@buf:	
  2157                           ; 1 bytes @ 0x14
  2158                           
  2159  0034                     ADC_Media_10bits@value:	
  2160                           ; 1 bytes @ 0x14
  2161                           
  2162                           
  2163                           ; 2 bytes @ 0x14
  2164  0034                     	ds	1
  2165  0035                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2166  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2167                           ; 1 bytes @ 0x15
  2168                           
  2169  0035                     PROCULUS_VP_Write_String@text:	
  2170                           ; 1 bytes @ 0x15
  2171                           
  2172  0035                     ___flmul@aexp:	
  2173                           ; 1 bytes @ 0x15
  2174                           
  2175                           
  2176                           ; 1 bytes @ 0x15
  2177  0035                     	ds	1
  2178  0036                     ??_PROCULUS_VP_Write_String:	
  2179  0036                     ?_EEPROM_24C1025_Write_Byte:	
  2180                           ; 1 bytes @ 0x16
  2181                           
  2182  0036                     ?_EEPROM_24C1025_Read_Byte:	
  2183                           ; 1 bytes @ 0x16
  2184                           
  2185  0036                     ?_EEPROM_24C1025_Write_Int:	
  2186                           ; 1 bytes @ 0x16
  2187                           
  2188  0036                     ??___fldiv:	
  2189                           ; 1 bytes @ 0x16
  2190                           
  2191  0036                     ?_EEPROM_24C1025_Read_Int:	
  2192                           ; 1 bytes @ 0x16
  2193                           
  2194  0036                     ADC_Media_10bits@i:	
  2195                           ; 2 bytes @ 0x16
  2196                           
  2197  0036                     ___flmul@bexp:	
  2198                           ; 1 bytes @ 0x16
  2199                           
  2200  0036                     EEPROM_24C1025_Write_Byte@mem_add:	
  2201                           ; 1 bytes @ 0x16
  2202                           
  2203  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2204                           ; 4 bytes @ 0x16
  2205                           
  2206  0036                     EEPROM_24C1025_Write_Int@mem_add:	
  2207                           ; 4 bytes @ 0x16
  2208                           
  2209  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2210                           ; 4 bytes @ 0x16
  2211                           
  2212                           
  2213                           ; 4 bytes @ 0x16
  2214  0036                     	ds	1
  2215  0037                     ?___fladd:	
  2216  0037                     ___fladd@b:	
  2217                           ; 4 bytes @ 0x17
  2218                           
  2219  0037                     ___flmul@grs:	
  2220                           ; 4 bytes @ 0x17
  2221                           
  2222                           
  2223                           ; 4 bytes @ 0x17
  2224  0037                     	ds	3
  2225  003A                     ??_EEPROM_24C1025_Read_Byte:	
  2226  003A                     ??_EEPROM_24C1025_Read_Int:	
  2227                           ; 1 bytes @ 0x1A
  2228                           
  2229  003A                     EEPROM_24C1025_Write_Byte@data:	
  2230                           ; 1 bytes @ 0x1A
  2231                           
  2232  003A                     EEPROM_24C1025_Read_Byte@chip_add:	
  2233                           ; 1 bytes @ 0x1A
  2234                           
  2235  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2236                           ; 1 bytes @ 0x1A
  2237                           
  2238  003A                     EEPROM_24C1025_Write_Int@data:	
  2239                           ; 1 bytes @ 0x1A
  2240                           
  2241  003A                     ___fldiv@rem:	
  2242                           ; 2 bytes @ 0x1A
  2243                           
  2244                           
  2245                           ; 4 bytes @ 0x1A
  2246  003A                     	ds	1
  2247  003B                     ??_EEPROM_24C1025_Write_Byte:	
  2248  003B                     EEPROM_24C1025_Write_Byte@chip_add:	
  2249                           ; 1 bytes @ 0x1B
  2250                           
  2251  003B                     EEPROM_24C1025_Read_Byte@data:	
  2252                           ; 1 bytes @ 0x1B
  2253                           
  2254  003B                     EEPROM_24C1025_Read_Int@data:	
  2255                           ; 1 bytes @ 0x1B
  2256                           
  2257  003B                     ___fladd@a:	
  2258                           ; 2 bytes @ 0x1B
  2259                           
  2260  003B                     ___flmul@prod:	
  2261                           ; 4 bytes @ 0x1B
  2262                           
  2263                           
  2264                           ; 4 bytes @ 0x1B
  2265  003B                     	ds	1
  2266  003C                     ??_EEPROM_24C1025_Write_Int:	
  2267  003C                     EEPROM_24C1025_Write_Int@chip_add:	
  2268                           ; 1 bytes @ 0x1C
  2269                           
  2270                           
  2271                           ; 1 bytes @ 0x1C
  2272  003C                     	ds	1
  2273  003D                     EEPROM_24C1025_Write_Int@local:	
  2274                           
  2275                           ; 2 bytes @ 0x1D
  2276  003D                     	ds	1
  2277  003E                     ___fldiv@sign:	
  2278                           
  2279                           ; 1 bytes @ 0x1E
  2280  003E                     	ds	1
  2281  003F                     ?_Save_Log:	
  2282  003F                     ?_EEPROM_24C1025_Fill_All:	
  2283                           ; 1 bytes @ 0x1F
  2284                           
  2285  003F                     ??___fladd:	
  2286                           ; 1 bytes @ 0x1F
  2287                           
  2288  003F                     EEPROM_24C1025_Fill_All@value:	
  2289                           ; 1 bytes @ 0x1F
  2290                           
  2291  003F                     ___fldiv@new_exp:	
  2292                           ; 2 bytes @ 0x1F
  2293                           
  2294  003F                     ___flmul@temp:	
  2295                           ; 2 bytes @ 0x1F
  2296                           
  2297  003F                     Save_Log@add_datalog:	
  2298                           ; 2 bytes @ 0x1F
  2299                           
  2300                           
  2301                           ; 4 bytes @ 0x1F
  2302  003F                     	ds	2
  2303  0041                     ??_EEPROM_24C1025_Fill_All:	
  2304  0041                     EEPROM_24C1025_Fill_All@chip_add:	
  2305                           ; 1 bytes @ 0x21
  2306                           
  2307  0041                     ___fldiv@grs:	
  2308                           ; 1 bytes @ 0x21
  2309                           
  2310                           
  2311                           ; 4 bytes @ 0x21
  2312  0041                     	ds	1
  2313  0042                     EEPROM_24C1025_Fill_All@mem_add:	
  2314                           
  2315                           ; 4 bytes @ 0x22
  2316  0042                     	ds	1
  2317  0043                     ??_Save_Log:	
  2318                           
  2319                           ; 1 bytes @ 0x23
  2320  0043                     	ds	2
  2321  0045                     ___fldiv@bexp:	
  2322                           
  2323                           ; 1 bytes @ 0x25
  2324  0045                     	ds	1
  2325  0046                     ??_Decodify_Command:	
  2326  0046                     ___fldiv@aexp:	
  2327                           ; 1 bytes @ 0x26
  2328                           
  2329                           
  2330                           ; 1 bytes @ 0x26
  2331  0046                     	ds	1
  2332  0047                     ___fladd@signs:	
  2333                           
  2334                           ; 1 bytes @ 0x27
  2335  0047                     	ds	1
  2336  0048                     ___fladd@aexp:	
  2337                           
  2338                           ; 1 bytes @ 0x28
  2339  0048                     	ds	1
  2340  0049                     ___fladd@bexp:	
  2341                           
  2342                           ; 1 bytes @ 0x29
  2343  0049                     	ds	1
  2344  004A                     ___fladd@grs:	
  2345                           
  2346                           ; 1 bytes @ 0x2A
  2347  004A                     	ds	1
  2348  004B                     ?___flsub:	
  2349  004B                     ___flsub@a:	
  2350                           ; 4 bytes @ 0x2B
  2351                           
  2352                           
  2353                           ; 4 bytes @ 0x2B
  2354  004B                     	ds	4
  2355  004F                     ___flsub@b:	
  2356                           
  2357                           ; 4 bytes @ 0x2F
  2358  004F                     	ds	4
  2359  0053                     ??_mediaLeituraPt100Umidadde:	
  2360  0053                     ??___flsub:	
  2361                           ; 1 bytes @ 0x33
  2362                           
  2363                           
  2364                           ; 1 bytes @ 0x33
  2365  0053                     	ds	1
  2366  0054                     mediaLeituraPt100Umidadde@tensao:	
  2367                           
  2368                           ; 4 bytes @ 0x34
  2369  0054                     	ds	4
  2370  0058                     mediaLeituraPt100Umidadde@canal:	
  2371                           
  2372                           ; 1 bytes @ 0x38
  2373  0058                     	ds	1
  2374  0059                     mediaLeituraPt100Umidadde@i:	
  2375                           
  2376                           ; 1 bytes @ 0x39
  2377  0059                     	ds	1
  2378  005A                     mediaLeituraPt100Umidadde@Temp:	
  2379                           
  2380                           ; 4 bytes @ 0x3A
  2381  005A                     	ds	4
  2382  005E                     ??_main:	
  2383                           
  2384                           ; 1 bytes @ 0x3E
  2385  005E                     	ds	3
  2386  0061                     main@reset:	
  2387                           
  2388                           ; 2 bytes @ 0x41
  2389  0061                     	ds	2
  2390                           
  2391                           	psect	maintext
  2392  1724                     __pmaintext:	
  2393 ;;
  2394 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2395 ;;
  2396 ;; *************** function _main *****************
  2397 ;; Defined at:
  2398 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  reset           2   65[BANK0 ] unsigned int 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : B00/0
  2409 ;;		On exit  : 300/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2412 ;;      Params:         0       0       0       0       0
  2413 ;;      Locals:         0       2       0       0       0
  2414 ;;      Temps:          0       3       0       0       0
  2415 ;;      Totals:         0       5       0       0       0
  2416 ;;Total ram usage:        5 bytes
  2417 ;; Hardware stack levels required when called:    7
  2418 ;; This function calls:
  2419 ;;		_ADC_init
  2420 ;;		_Decodify_Command
  2421 ;;		_EEPROM_Read_Integer
  2422 ;;		_EEPROM_Write_Integer
  2423 ;;		_I2C_Master_Init
  2424 ;;		_USART_init
  2425 ;;		_mediaLeituraPt100Umidadde
  2426 ;;		_my_delay_ms_WDT
  2427 ;; This function is called by:
  2428 ;;		Startup code after reset
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _main
  2434  1724                     _main:	
  2435  1724                     l6647:	
  2436                           ;incstack = 0
  2437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2438                           
  2439                           
  2440                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2441  1724  3002               	movlw	2
  2442  1725  1283               	bcf	3,5	;RP0=0, select bank0
  2443  1726  1303               	bcf	3,6	;RP1=0, select bank0
  2444  1727  00E0               	movwf	??_main+2
  2445  1728  3004               	movlw	4
  2446  1729  00DF               	movwf	??_main+1
  2447  172A  30B9               	movlw	185
  2448  172B  00DE               	movwf	??_main
  2449  172C                     u5437:	
  2450  172C  0BDE               	decfsz	??_main,f
  2451  172D  2F2C               	goto	u5437
  2452  172E  0BDF               	decfsz	??_main+1,f
  2453  172F  2F2C               	goto	u5437
  2454  1730  0BE0               	decfsz	??_main+2,f
  2455  1731  2F2C               	goto	u5437
  2456  1732  2F33               	nop2
  2457                           
  2458                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2459  1733  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1734  1303               	bcf	3,6	;RP1=0, select bank1
  2461  1735  160F               	bsf	15,4	;volatile
  2462                           
  2463                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2464  1736  168F               	bsf	15,5	;volatile
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2467  1737  170F               	bsf	15,6	;volatile
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2470  1738  1283               	bcf	3,5	;RP0=0, select bank0
  2471  1739  0185               	clrf	5	;volatile
  2472                           
  2473                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2474  173A  0186               	clrf	6	;volatile
  2475                           
  2476                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2477  173B  0187               	clrf	7	;volatile
  2478                           
  2479                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2480  173C  0189               	clrf	9	;volatile
  2481                           
  2482                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2483  173D  30EF               	movlw	239
  2484  173E  1683               	bsf	3,5	;RP0=1, select bank1
  2485  173F  0085               	movwf	5	;volatile
  2486                           
  2487                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2488  1740  300F               	movlw	15
  2489  1741  0086               	movwf	6	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2492  1742  30F0               	movlw	240
  2493  1743  0087               	movwf	7	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2496  1744  30FF               	movlw	255
  2497  1745  0089               	movwf	9	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2500  1746  3011               	movlw	17
  2501  1747  1703               	bsf	3,6	;RP1=1, select bank3
  2502  1748  0088               	movwf	8	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2505  1749  0189               	clrf	9	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2508  174A  1303               	bcf	3,6	;RP1=0, select bank1
  2509  174B  1381               	bcf	1,7	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2512  174C  300F               	movlw	15
  2513  174D  0095               	movwf	21	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2516  174E  1283               	bcf	3,5	;RP0=0, select bank0
  2517  174F  1786               	bsf	6,7	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2520  1750  1706               	bsf	6,6	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2523  1751  1686               	bsf	6,5	;volatile
  2524                           
  2525                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2526  1752  3003               	movlw	3
  2527  1753  01A3               	clrf	my_delay_ms_WDT@time+3
  2528  1754  01A2               	clrf	my_delay_ms_WDT@time+2
  2529  1755  00A1               	movwf	my_delay_ms_WDT@time+1
  2530  1756  30E8               	movlw	232
  2531  1757  00A0               	movwf	my_delay_ms_WDT@time
  2532  1758  120A  158A  2730  160A  118A  	fcall	_my_delay_ms_WDT
  2533                           
  2534                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2535  175D  1683               	bsf	3,5	;RP0=1, select bank1
  2536  175E  1281               	bcf	1,5	;volatile
  2537                           
  2538                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2539  175F  1581               	bsf	1,3	;volatile
  2540                           
  2541                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2542  1760  1401               	bsf	1,0	;volatile
  2543                           
  2544                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2545  1761  1481               	bsf	1,1	;volatile
  2546                           
  2547                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2548  1762  1501               	bsf	1,2	;volatile
  2549                           
  2550                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2551  1763  128B               	bcf	11,5	;volatile
  2552                           
  2553                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2554  1764  120B               	bcf	11,4	;volatile
  2555                           
  2556                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2557  1765  178B               	bsf	11,7	;volatile
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2560  1766  170B               	bsf	11,6	;volatile
  2561                           
  2562                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2563  1767  1283               	bcf	3,5	;RP0=0, select bank0
  2564  1768  1610               	bsf	16,4	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2567  1769  1690               	bsf	16,5	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2570  176A  1090               	bcf	16,1	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2573  176B  1683               	bsf	3,5	;RP0=1, select bank1
  2574  176C  140C               	bsf	12,0	;volatile
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2577  176D  3001               	movlw	1
  2578  176E  1283               	bcf	3,5	;RP0=0, select bank0
  2579  176F  0090               	movwf	16	;volatile
  2580  1770  0064               	clrwdt	;# 
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2583  1771  160A  118A  2358  160A  118A  	fcall	_ADC_init
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2586  1776  3001               	movlw	1
  2587  1777  01B0               	clrf	I2C_Master_Init@c+3
  2588  1778  00AF               	movwf	I2C_Master_Init@c+2
  2589  1779  3086               	movlw	134
  2590  177A  00AE               	movwf	I2C_Master_Init@c+1
  2591  177B  30A0               	movlw	160
  2592  177C  00AD               	movwf	I2C_Master_Init@c
  2593  177D  160A  118A  24C8  160A  118A  	fcall	_I2C_Master_Init
  2594                           
  2595                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2596  1782  1283               	bcf	3,5	;RP0=0, select bank0
  2597  1783  3001               	movlw	1
  2598  1784  01A3               	clrf	USART_init@baudrate+3
  2599  1785  00A2               	movwf	USART_init@baudrate+2
  2600  1786  30C2               	movlw	194
  2601  1787  00A1               	movwf	USART_init@baudrate+1
  2602  1788  01A0               	clrf	USART_init@baudrate
  2603  1789  160A  118A  243B  160A  118A  	fcall	_USART_init
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2606  178E  3010               	movlw	16
  2607  178F  120A  118A  27C0  160A  118A  	fcall	_EEPROM_Read_Integer
  2608  1794  0824               	movf	?_EEPROM_Read_Integer+1,w
  2609  1795  00E2               	movwf	main@reset+1
  2610  1796  0823               	movf	?_EEPROM_Read_Integer,w
  2611  1797  00E1               	movwf	main@reset
  2612                           
  2613                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2614  1798  0F61               	incfsz	main@reset,w
  2615  1799  2FA5               	goto	l6717
  2616  179A  0A62               	incf	main@reset+1,w
  2617  179B  1D03               	btfss	3,2
  2618  179C  2FA5               	goto	l6717
  2619  179D  3010               	movlw	16
  2620  179E  01A5               	clrf	EEPROM_Write_Integer@dado
  2621  179F  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2622  17A0  160A  118A  253D  160A  118A  	fcall	_EEPROM_Write_Integer
  2623  17A5                     l6717:	
  2624                           
  2625                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2626  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2627  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2628  17A7  0AE1               	incf	main@reset,f
  2629  17A8  1903               	skipnz
  2630  17A9  0AE2               	incf	main@reset+1,f
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2633  17AA  0862               	movf	main@reset+1,w
  2634  17AB  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2635  17AC  0861               	movf	main@reset,w
  2636  17AD  00A5               	movwf	EEPROM_Write_Integer@dado
  2637  17AE  3010               	movlw	16
  2638  17AF  160A  118A  253D  160A  118A  	fcall	_EEPROM_Write_Integer
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2641  17B4  01F2               	clrf	_Delay_Led_Tmr0	;volatile
  2642  17B5  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
  2643                           
  2644                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2645  17B6  01F0               	clrf	_Delay_Led_Usart	;volatile
  2646  17B7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  2647                           
  2648                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2649  17B8  01F4               	clrf	_Delay_Led_Memory	;volatile
  2650  17B9  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2653  17BA  1683               	bsf	3,5	;RP0=1, select bank1
  2654  17BB  1303               	bcf	3,6	;RP1=0, select bank1
  2655  17BC  01DB               	clrf	_segundo^(0+128)	;volatile
  2656                           
  2657                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2658  17BD  01DA               	clrf	_hora^(0+128)	;volatile
  2659                           
  2660                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2661  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2662  17BF  1007               	bcf	7,0	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2665  17C0  1087               	bcf	7,1	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2668  17C1  1105               	bcf	5,2	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2671  17C2  1185               	bcf	5,3	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2674  17C3  0906               	comf	6,w	;volatile
  2675  17C4  00E9               	movwf	_Board_Number
  2676  17C5  300F               	movlw	15
  2677  17C6  05E9               	andwf	_Board_Number,f
  2678                           
  2679                           ;SlaveLiofilizadorVer1.c: 229:      statuspower.flag_global_condensador=0;
  2680  17C7  01EA               	clrf	_canal
  2681  17C8  0AEA               	incf	_canal,f
  2682  17C9                     l6743:	
  2683  17C9  3002               	movlw	2
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2686  17CA  17EB               	bsf	_generic_status,7
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 270:          if(++canal==2) canal=0;
  2689  17CB  0AEA               	incf	_canal,f
  2690  17CC  066A               	xorwf	_canal,w
  2691  17CD  1903               	btfsc	3,2
  2692  17CE  01EA               	clrf	_canal
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 271:          mediaLeituraPt100Umidadde(canal);
  2695  17CF  086A               	movf	_canal,w
  2696  17D0  120A  118A  207C  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2699  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2700  17D6  1C6B               	btfss	_generic_status,0
  2701  17D7  2FC9               	goto	l6743
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2704  17D8  1683               	bsf	3,5	;RP0=1, select bank3
  2705  17D9  1703               	bsf	3,6	;RP1=1, select bank3
  2706  17DA  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2707  17DB  1283               	bcf	3,5	;RP0=0, select bank0
  2708  17DC  1303               	bcf	3,6	;RP1=0, select bank0
  2709  17DD  00E6               	movwf	_header+1
  2710  17DE  1683               	bsf	3,5	;RP0=1, select bank3
  2711  17DF  1703               	bsf	3,6	;RP1=1, select bank3
  2712  17E0  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2713  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  2714  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  2715  17E3  00E5               	movwf	_header
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2718  17E4  3ABB               	xorlw	187
  2719  17E5  30AA               	movlw	170
  2720  17E6  1903               	skipnz
  2721  17E7  0666               	xorwf	_header+1,w
  2722  17E8  1D03               	btfss	3,2
  2723  17E9  2FC9               	goto	l6743
  2724                           
  2725                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2726  17EA  1683               	bsf	3,5	;RP0=1, select bank3
  2727  17EB  1703               	bsf	3,6	;RP1=1, select bank3
  2728  17EC  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2729  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  2730  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  2731  17EF  00E8               	movwf	_destino
  2732                           
  2733                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2734  17F0  0669               	xorwf	_Board_Number,w
  2735  17F1  1903               	skipnz
  2736  17F2  2FF5               	goto	l6759
  2737  17F3  0F68               	incfsz	_destino,w
  2738  17F4  2FC9               	goto	l6743
  2739  17F5                     l6759:	
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2742  17F5  3014               	movlw	20
  2743  17F6  00F0               	movwf	_Delay_Led_Usart	;volatile
  2744  17F7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2747  17F8  120A  158A  2064  160A  118A  	fcall	_Decodify_Command
  2748                           
  2749                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2750  17FD  1283               	bcf	3,5	;RP0=0, select bank0
  2751  17FE  106B               	bcf	_generic_status,0
  2752                           
  2753                           ;SlaveLiofilizadorVer1.c: 297:             }
  2754  17FF  2FC9               	goto	l6743
  2755  1800                     __end_of_main:	
  2756                           
  2757                           	psect	text2
  2758  03FB                     __ptext2:	
  2759 ;; *************** function ___flsub *****************
  2760 ;; Defined at:
  2761 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  a               4   43[BANK0 ] void 
  2764 ;;  b               4   47[BANK0 ] void 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  4   43[BANK0 ] void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 300/0
  2773 ;;		On exit  : 300/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       8       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       8       0       0       0
  2780 ;;Total ram usage:        8 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    2
  2783 ;; This function calls:
  2784 ;;		___fladd
  2785 ;; This function is called by:
  2786 ;;		_mediaLeituraPt100Umidadde
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function ___flsub
  2792  03FB                     ___flsub:	
  2793                           
  2794                           ;incstack = 0
  2795                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2796  03FB  3080               	movlw	128
  2797  03FC  06CE               	xorwf	___flsub@a+3,f
  2798  03FD  0852               	movf	___flsub@b+3,w
  2799  03FE  00BA               	movwf	___fladd@b+3
  2800  03FF  0851               	movf	___flsub@b+2,w
  2801  0400  00B9               	movwf	___fladd@b+2
  2802  0401  0850               	movf	___flsub@b+1,w
  2803  0402  00B8               	movwf	___fladd@b+1
  2804  0403  084F               	movf	___flsub@b,w
  2805  0404  00B7               	movwf	___fladd@b
  2806  0405  084E               	movf	___flsub@a+3,w
  2807  0406  00BE               	movwf	___fladd@a+3
  2808  0407  084D               	movf	___flsub@a+2,w
  2809  0408  00BD               	movwf	___fladd@a+2
  2810  0409  084C               	movf	___flsub@a+1,w
  2811  040A  00BC               	movwf	___fladd@a+1
  2812  040B  084B               	movf	___flsub@a,w
  2813  040C  00BB               	movwf	___fladd@a
  2814  040D  2417               	fcall	___fladd
  2815  040E  083A               	movf	?___fladd+3,w
  2816  040F  00CE               	movwf	?___flsub+3
  2817  0410  0839               	movf	?___fladd+2,w
  2818  0411  00CD               	movwf	?___flsub+2
  2819  0412  0838               	movf	?___fladd+1,w
  2820  0413  00CC               	movwf	?___flsub+1
  2821  0414  0837               	movf	?___fladd,w
  2822  0415  00CB               	movwf	?___flsub
  2823  0416  0008               	return
  2824  0417                     __end_of___flsub:	
  2825  0417                     __ptext3:	
  2826 ;; *************** function ___fladd *****************
  2827 ;; Defined at:
  2828 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  b               4   23[BANK0 ] void 
  2831 ;;  a               4   27[BANK0 ] void 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  grs             1   42[BANK0 ] unsigned char 
  2834 ;;  bexp            1   41[BANK0 ] unsigned char 
  2835 ;;  aexp            1   40[BANK0 ] unsigned char 
  2836 ;;  signs           1   39[BANK0 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  4   23[BANK0 ] unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, btemp+1
  2841 ;; Tracked objects:
  2842 ;;		On entry : 300/0
  2843 ;;		On exit  : 300/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       8       0       0       0
  2847 ;;      Locals:         0       4       0       0       0
  2848 ;;      Temps:          0       8       0       0       0
  2849 ;;      Totals:         0      20       0       0       0
  2850 ;;Total ram usage:       20 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_mediaLeituraPt100Umidadde
  2857 ;;		___flsub
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function ___fladd
  2863  0417                     ___fladd:	
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2867  0417  083A               	movf	___fladd@b+3,w
  2868  0418  00C7               	movwf	___fladd@signs
  2869  0419  3080               	movlw	128
  2870  041A  05C7               	andwf	___fladd@signs,f
  2871  041B  1003               	clrc
  2872  041C  0D3A               	rlf	___fladd@b+3,w
  2873  041D  00C9               	movwf	___fladd@bexp
  2874  041E  1BB9               	btfsc	___fladd@b+2,7
  2875  041F  1449               	bsf	___fladd@bexp,0
  2876  0420  0849               	movf	___fladd@bexp,w
  2877  0421  1903               	btfsc	3,2
  2878  0422  2C2B               	goto	l1266
  2879  0423  0F49               	incfsz	___fladd@bexp,w
  2880  0424  2C29               	goto	l1267
  2881  0425  01B7               	clrf	___fladd@b
  2882  0426  01B8               	clrf	___fladd@b+1
  2883  0427  01B9               	clrf	___fladd@b+2
  2884  0428  01BA               	clrf	___fladd@b+3
  2885  0429                     l1267:	
  2886  0429  17B9               	bsf	___fladd@b+2,7
  2887  042A  2C2E               	goto	L2
  2888  042B                     l1266:	
  2889  042B  01B7               	clrf	___fladd@b
  2890  042C  01B8               	clrf	___fladd@b+1
  2891  042D  01B9               	clrf	___fladd@b+2
  2892  042E                     L2:	
  2893  042E  01BA               	clrf	___fladd@b+3
  2894  042F  083E               	movf	___fladd@a+3,w
  2895  0430  00C8               	movwf	___fladd@aexp
  2896  0431  3080               	movlw	128
  2897  0432  05C8               	andwf	___fladd@aexp,f
  2898  0433  0848               	movf	___fladd@aexp,w
  2899  0434  0647               	xorwf	___fladd@signs,w
  2900  0435  1D03               	btfss	3,2
  2901  0436  1747               	bsf	___fladd@signs,6
  2902  0437  1003               	clrc
  2903  0438  0D3E               	rlf	___fladd@a+3,w
  2904  0439  00C8               	movwf	___fladd@aexp
  2905  043A  1BBD               	btfsc	___fladd@a+2,7
  2906  043B  1448               	bsf	___fladd@aexp,0
  2907  043C  0848               	movf	___fladd@aexp,w
  2908  043D  1903               	btfsc	3,2
  2909  043E  2C47               	goto	l1271
  2910  043F  0F48               	incfsz	___fladd@aexp,w
  2911  0440  2C45               	goto	l1272
  2912  0441  01BB               	clrf	___fladd@a
  2913  0442  01BC               	clrf	___fladd@a+1
  2914  0443  01BD               	clrf	___fladd@a+2
  2915  0444  01BE               	clrf	___fladd@a+3
  2916  0445                     l1272:	
  2917  0445  17BD               	bsf	___fladd@a+2,7
  2918  0446  2C4A               	goto	L3
  2919  0447                     l1271:	
  2920  0447  01BB               	clrf	___fladd@a
  2921  0448  01BC               	clrf	___fladd@a+1
  2922  0449  01BD               	clrf	___fladd@a+2
  2923  044A                     L3:	
  2924  044A  01BE               	clrf	___fladd@a+3
  2925  044B  0849               	movf	___fladd@bexp,w
  2926  044C  0248               	subwf	___fladd@aexp,w
  2927  044D  1803               	skipnc
  2928  044E  2C71               	goto	l4029
  2929  044F  1F47               	btfss	___fladd@signs,6
  2930  0450  2C53               	goto	l3999
  2931  0451  3080               	movlw	128
  2932  0452  06C7               	xorwf	___fladd@signs,f
  2933  0453                     l3999:	
  2934  0453  0849               	movf	___fladd@bexp,w
  2935  0454  00CA               	movwf	___fladd@grs
  2936  0455  0848               	movf	___fladd@aexp,w
  2937  0456  00C9               	movwf	___fladd@bexp
  2938  0457  084A               	movf	___fladd@grs,w
  2939  0458  00C8               	movwf	___fladd@aexp
  2940  0459  0837               	movf	___fladd@b,w
  2941  045A  00CA               	movwf	___fladd@grs
  2942  045B  083B               	movf	___fladd@a,w
  2943  045C  00B7               	movwf	___fladd@b
  2944  045D  084A               	movf	___fladd@grs,w
  2945  045E  00BB               	movwf	___fladd@a
  2946  045F  0838               	movf	___fladd@b+1,w
  2947  0460  00CA               	movwf	___fladd@grs
  2948  0461  083C               	movf	___fladd@a+1,w
  2949  0462  00B8               	movwf	___fladd@b+1
  2950  0463  084A               	movf	___fladd@grs,w
  2951  0464  00BC               	movwf	___fladd@a+1
  2952  0465  0839               	movf	___fladd@b+2,w
  2953  0466  00CA               	movwf	___fladd@grs
  2954  0467  083D               	movf	___fladd@a+2,w
  2955  0468  00B9               	movwf	___fladd@b+2
  2956  0469  084A               	movf	___fladd@grs,w
  2957  046A  00BD               	movwf	___fladd@a+2
  2958  046B  083A               	movf	___fladd@b+3,w
  2959  046C  00CA               	movwf	___fladd@grs
  2960  046D  083E               	movf	___fladd@a+3,w
  2961  046E  00BA               	movwf	___fladd@b+3
  2962  046F  084A               	movf	___fladd@grs,w
  2963  0470  00BE               	movwf	___fladd@a+3
  2964  0471                     l4029:	
  2965  0471  01CA               	clrf	___fladd@grs
  2966  0472  0848               	movf	___fladd@aexp,w
  2967  0473  00BF               	movwf	??___fladd
  2968  0474  01C0               	clrf	??___fladd+1
  2969  0475  0840               	movf	??___fladd+1,w
  2970  0476  00C2               	movwf	??___fladd+3
  2971  0477  0849               	movf	___fladd@bexp,w
  2972  0478  023F               	subwf	??___fladd,w
  2973  0479  00C1               	movwf	??___fladd+2
  2974  047A  1C03               	skipc
  2975  047B  03C2               	decf	??___fladd+3,f
  2976  047C  0842               	movf	??___fladd+3,w
  2977  047D  3A80               	xorlw	128
  2978  047E  00FF               	movwf	127
  2979  047F  3080               	movlw	128
  2980  0480  027F               	subwf	127,w
  2981  0481  1D03               	skipz
  2982  0482  2C85               	goto	u2715
  2983  0483  301A               	movlw	26
  2984  0484  0241               	subwf	??___fladd+2,w
  2985  0485                     u2715:	
  2986  0485  1C03               	skipc
  2987  0486  2CA6               	goto	l4045
  2988  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0489  083A               	movf	___fladd@b+3,w
  2991  048A  0439               	iorwf	___fladd@b+2,w
  2992  048B  0438               	iorwf	___fladd@b+1,w
  2993  048C  0437               	iorwf	___fladd@b,w
  2994  048D  1903               	btfsc	3,2
  2995  048E  2C91               	goto	u2720
  2996  048F  3001               	movlw	1
  2997  0490  2C92               	goto	u2730
  2998  0491                     u2720:	
  2999  0491  3000               	movlw	0
  3000  0492                     u2730:	
  3001  0492  00CA               	movwf	___fladd@grs
  3002  0493  01B7               	clrf	___fladd@b
  3003  0494  01B8               	clrf	___fladd@b+1
  3004  0495  01B9               	clrf	___fladd@b+2
  3005  0496  01BA               	clrf	___fladd@b+3
  3006  0497  0848               	movf	___fladd@aexp,w
  3007  0498  00C9               	movwf	___fladd@bexp
  3008  0499  2CAC               	goto	l1277
  3009  049A                     l1279:	
  3010  049A  1C4A               	btfss	___fladd@grs,0
  3011  049B  2CA1               	goto	l1280
  3012  049C  1003               	clrc
  3013  049D  0C4A               	rrf	___fladd@grs,w
  3014  049E  3801               	iorlw	1
  3015  049F  00CA               	movwf	___fladd@grs
  3016  04A0  2CA3               	goto	l1281
  3017  04A1                     l1280:	
  3018  04A1  1003               	clrc
  3019  04A2  0CCA               	rrf	___fladd@grs,f
  3020  04A3                     l1281:	
  3021  04A3  2586  120A  118A   	fcall	PL26	;call to abstracted procedure
  3022  04A6                     l4045:	
  3023  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3024  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3025  04A8  0848               	movf	___fladd@aexp,w
  3026  04A9  0249               	subwf	___fladd@bexp,w
  3027  04AA  1C03               	skipc
  3028  04AB  2C9A               	goto	l1279
  3029  04AC                     l1277:	
  3030  04AC  1B47               	btfsc	___fladd@signs,6
  3031  04AD  2CD5               	goto	l4065
  3032  04AE  0849               	movf	___fladd@bexp,w
  3033  04AF  1D03               	btfss	3,2
  3034  04B0  2CB2               	goto	l4051
  3035  04B1  2D8F               	ljmp	PL50	;call to abstracted procedure
  3036  04B2                     l4051:	
  3037  04B2  083B               	movf	___fladd@a,w
  3038  04B3  07B7               	addwf	___fladd@b,f
  3039  04B4  083C               	movf	___fladd@a+1,w
  3040  04B5  1103               	clrz
  3041  04B6  1803               	skipnc
  3042  04B7  3E01               	addlw	1
  3043  04B8  1D03               	btfss	3,2
  3044  04B9  07B8               	addwf	___fladd@b+1,f
  3045  04BA  083D               	movf	___fladd@a+2,w
  3046  04BB  1103               	clrz
  3047  04BC  1803               	skipnc
  3048  04BD  3E01               	addlw	1
  3049  04BE  1D03               	btfss	3,2
  3050  04BF  07B9               	addwf	___fladd@b+2,f
  3051  04C0  083E               	movf	___fladd@a+3,w
  3052  04C1  1103               	clrz
  3053  04C2  1803               	skipnc
  3054  04C3  3E01               	addlw	1
  3055  04C4  1D03               	btfss	3,2
  3056  04C5  07BA               	addwf	___fladd@b+3,f
  3057  04C6  1C3A               	btfss	___fladd@b+3,0
  3058  04C7  2D51               	goto	l4095
  3059  04C8  1C4A               	btfss	___fladd@grs,0
  3060  04C9  2CCF               	goto	l1288
  3061  04CA  1003               	clrc
  3062  04CB  0C4A               	rrf	___fladd@grs,w
  3063  04CC  3801               	iorlw	1
  3064  04CD  00CA               	movwf	___fladd@grs
  3065  04CE  2CD1               	goto	l1289
  3066  04CF                     l1288:	
  3067  04CF  1003               	clrc
  3068  04D0  0CCA               	rrf	___fladd@grs,f
  3069  04D1                     l1289:	
  3070  04D1  2586  120A  118A   	fcall	PL26	;call to abstracted procedure
  3071  04D4  2D51               	goto	l4095
  3072  04D5                     l4065:	
  3073  04D5  083A               	movf	___fladd@b+3,w
  3074  04D6  3A80               	xorlw	128
  3075  04D7  00FF               	movwf	127
  3076  04D8  083E               	movf	___fladd@a+3,w
  3077  04D9  3A80               	xorlw	128
  3078  04DA  027F               	subwf	127,w
  3079  04DB  1D03               	skipz
  3080  04DC  2CE7               	goto	u2833
  3081  04DD  083D               	movf	___fladd@a+2,w
  3082  04DE  0239               	subwf	___fladd@b+2,w
  3083  04DF  1D03               	skipz
  3084  04E0  2CE7               	goto	u2833
  3085  04E1  083C               	movf	___fladd@a+1,w
  3086  04E2  0238               	subwf	___fladd@b+1,w
  3087  04E3  1D03               	skipz
  3088  04E4  2CE7               	goto	u2833
  3089  04E5  083B               	movf	___fladd@a,w
  3090  04E6  0237               	subwf	___fladd@b,w
  3091  04E7                     u2833:	
  3092  04E7  1803               	skipnc
  3093  04E8  2D27               	goto	l4075
  3094  04E9  30FF               	movlw	255
  3095  04EA  00BF               	movwf	??___fladd
  3096  04EB  00C0               	movwf	??___fladd+1
  3097  04EC  00C1               	movwf	??___fladd+2
  3098  04ED  00C2               	movwf	??___fladd+3
  3099  04EE  083B               	movf	___fladd@a,w
  3100  04EF  00C3               	movwf	??___fladd+4
  3101  04F0  083C               	movf	___fladd@a+1,w
  3102  04F1  00C4               	movwf	??___fladd+5
  3103  04F2  083D               	movf	___fladd@a+2,w
  3104  04F3  00C5               	movwf	??___fladd+6
  3105  04F4  083E               	movf	___fladd@a+3,w
  3106  04F5  00C6               	movwf	??___fladd+7
  3107  04F6  0837               	movf	___fladd@b,w
  3108  04F7  02C3               	subwf	??___fladd+4,f
  3109  04F8  0838               	movf	___fladd@b+1,w
  3110  04F9  1C03               	skipc
  3111  04FA  0F38               	incfsz	___fladd@b+1,w
  3112  04FB  02C4               	subwf	??___fladd+5,f
  3113  04FC  0839               	movf	___fladd@b+2,w
  3114  04FD  1C03               	skipc
  3115  04FE  0F39               	incfsz	___fladd@b+2,w
  3116  04FF  02C5               	subwf	??___fladd+6,f
  3117  0500  083A               	movf	___fladd@b+3,w
  3118  0501  1C03               	skipc
  3119  0502  0F3A               	incfsz	___fladd@b+3,w
  3120  0503  02C6               	subwf	??___fladd+7,f
  3121  0504  0843               	movf	??___fladd+4,w
  3122  0505  07BF               	addwf	??___fladd,f
  3123  0506  0844               	movf	??___fladd+5,w
  3124  0507  1803               	skipnc
  3125  0508  0F44               	incfsz	??___fladd+5,w
  3126  0509  07C0               	addwf	??___fladd+1,f
  3127  050A  0845               	movf	??___fladd+6,w
  3128  050B  1803               	skipnc
  3129  050C  0F45               	incfsz	??___fladd+6,w
  3130  050D  07C1               	addwf	??___fladd+2,f
  3131  050E  0846               	movf	??___fladd+7,w
  3132  050F  1803               	skipnc
  3133  0510  0A46               	incf	??___fladd+7,w
  3134  0511  07C2               	addwf	??___fladd+3,f
  3135  0512  0842               	movf	??___fladd+3,w
  3136  0513  00BA               	movwf	___fladd@b+3
  3137  0514  0841               	movf	??___fladd+2,w
  3138  0515  00B9               	movwf	___fladd@b+2
  3139  0516  0840               	movf	??___fladd+1,w
  3140  0517  00B8               	movwf	___fladd@b+1
  3141  0518  083F               	movf	??___fladd,w
  3142  0519  00B7               	movwf	___fladd@b
  3143  051A  3080               	movlw	128
  3144  051B  06C7               	xorwf	___fladd@signs,f
  3145  051C  09CA               	comf	___fladd@grs,f
  3146  051D  0FCA               	incfsz	___fladd@grs,f
  3147  051E  2D35               	goto	l1294
  3148  051F  0AB7               	incf	___fladd@b,f
  3149  0520  1903               	skipnz
  3150  0521  0AB8               	incf	___fladd@b+1,f
  3151  0522  1903               	skipnz
  3152  0523  0AB9               	incf	___fladd@b+2,f
  3153  0524  1903               	skipnz
  3154  0525  0ABA               	incf	___fladd@b+3,f
  3155  0526  2D35               	goto	l1294
  3156  0527                     l4075:	
  3157  0527  083B               	movf	___fladd@a,w
  3158  0528  02B7               	subwf	___fladd@b,f
  3159  0529  083C               	movf	___fladd@a+1,w
  3160  052A  1C03               	skipc
  3161  052B  0F3C               	incfsz	___fladd@a+1,w
  3162  052C  02B8               	subwf	___fladd@b+1,f
  3163  052D  083D               	movf	___fladd@a+2,w
  3164  052E  1C03               	skipc
  3165  052F  0F3D               	incfsz	___fladd@a+2,w
  3166  0530  02B9               	subwf	___fladd@b+2,f
  3167  0531  083E               	movf	___fladd@a+3,w
  3168  0532  1C03               	skipc
  3169  0533  0F3E               	incfsz	___fladd@a+3,w
  3170  0534  02BA               	subwf	___fladd@b+3,f
  3171  0535                     l1294:	
  3172  0535  083A               	movf	___fladd@b+3,w
  3173  0536  0439               	iorwf	___fladd@b+2,w
  3174  0537  0438               	iorwf	___fladd@b+1,w
  3175  0538  0437               	iorwf	___fladd@b,w
  3176  0539  1D03               	skipz
  3177  053A  2D4F               	goto	l4093
  3178  053B  084A               	movf	___fladd@grs,w
  3179  053C  1D03               	btfss	3,2
  3180  053D  2D4F               	goto	l4093
  3181  053E  2D8F               	ljmp	PL50	;call to abstracted procedure
  3182  053F                     l4081:	
  3183  053F  1003               	clrc
  3184  0540  0DB7               	rlf	___fladd@b,f
  3185  0541  0DB8               	rlf	___fladd@b+1,f
  3186  0542  0DB9               	rlf	___fladd@b+2,f
  3187  0543  0DBA               	rlf	___fladd@b+3,f
  3188  0544  1BCA               	btfsc	___fladd@grs,7
  3189  0545  1437               	bsf	___fladd@b,0
  3190  0546  1C4A               	btfss	___fladd@grs,0
  3191  0547  2D4A               	goto	l1299
  3192  0548  1403               	setc
  3193  0549  2D4B               	goto	L4
  3194  054A                     l1299:	
  3195  054A  1003               	clrc
  3196  054B                     L4:	
  3197  054B  0DCA               	rlf	___fladd@grs,f
  3198  054C  0849               	movf	___fladd@bexp,w
  3199  054D  1D03               	btfss	3,2
  3200  054E  03C9               	decf	___fladd@bexp,f
  3201  054F                     l4093:	
  3202  054F  1FB9               	btfss	___fladd@b+2,7
  3203  0550  2D3F               	goto	l4081
  3204  0551                     l4095:	
  3205  0551  01C8               	clrf	___fladd@aexp
  3206  0552  1FCA               	btfss	___fladd@grs,7
  3207  0553  2D5C               	goto	l4105
  3208  0554  084A               	movf	___fladd@grs,w
  3209  0555  397F               	andlw	127
  3210  0556  1903               	btfsc	3,2
  3211  0557  1837               	btfsc	___fladd@b,0
  3212  0558  2D5A               	goto	l4101
  3213  0559  2D5C               	goto	l4105
  3214  055A                     l4101:	
  3215  055A  01C8               	clrf	___fladd@aexp
  3216  055B  0AC8               	incf	___fladd@aexp,f
  3217  055C                     l4105:	
  3218  055C  0848               	movf	___fladd@aexp,w
  3219  055D  1903               	btfsc	3,2
  3220  055E  2D6F               	goto	l4117
  3221  055F  0AB7               	incf	___fladd@b,f
  3222  0560  1903               	skipnz
  3223  0561  0AB8               	incf	___fladd@b+1,f
  3224  0562  1903               	skipnz
  3225  0563  0AB9               	incf	___fladd@b+2,f
  3226  0564  1903               	skipnz
  3227  0565  0ABA               	incf	___fladd@b+3,f
  3228  0566  1C3A               	btfss	___fladd@b+3,0
  3229  0567  2D6F               	goto	l4117
  3230  0568  0D3A               	rlf	___fladd@b+3,w
  3231  0569  0CBA               	rrf	___fladd@b+3,f
  3232  056A  0CB9               	rrf	___fladd@b+2,f
  3233  056B  0CB8               	rrf	___fladd@b+1,f
  3234  056C  0CB7               	rrf	___fladd@b,f
  3235  056D  0F49               	incfsz	___fladd@bexp,w
  3236  056E  0AC9               	incf	___fladd@bexp,f
  3237  056F                     l4117:	
  3238  056F  0A49               	incf	___fladd@bexp,w
  3239  0570  1D03               	btfss	3,2
  3240  0571  0849               	movf	___fladd@bexp,w
  3241  0572  1D03               	btfss	3,2
  3242  0573  2D7B               	goto	l4125
  3243  0574  01B7               	clrf	___fladd@b
  3244  0575  01B8               	clrf	___fladd@b+1
  3245  0576  01B9               	clrf	___fladd@b+2
  3246  0577  01BA               	clrf	___fladd@b+3
  3247  0578  0849               	movf	___fladd@bexp,w
  3248  0579  1903               	btfsc	3,2
  3249  057A  01C7               	clrf	___fladd@signs
  3250  057B                     l4125:	
  3251  057B  1C49               	btfss	___fladd@bexp,0
  3252  057C  2D7F               	goto	l1314
  3253  057D  17B9               	bsf	___fladd@b+2,7
  3254  057E  2D80               	goto	l4129
  3255  057F                     l1314:	
  3256  057F  13B9               	bcf	___fladd@b+2,7
  3257  0580                     l4129:	
  3258  0580  1003               	clrc
  3259  0581  0C49               	rrf	___fladd@bexp,w
  3260  0582  00BA               	movwf	___fladd@b+3
  3261  0583  1BC7               	btfsc	___fladd@signs,7
  3262  0584  17BA               	bsf	___fladd@b+3,7
  3263  0585  0008               	return
  3264  0586                     __end_of___fladd:	
  3265  0586                     PL26:	
  3266  0586  1837               	btfsc	___fladd@b,0
  3267  0587  17CA               	bsf	___fladd@grs,7
  3268  0588  0D3A               	rlf	___fladd@b+3,w
  3269  0589  0CBA               	rrf	___fladd@b+3,f
  3270  058A  0CB9               	rrf	___fladd@b+2,f
  3271  058B  0CB8               	rrf	___fladd@b+1,f
  3272  058C  0CB7               	rrf	___fladd@b,f
  3273  058D  0AC9               	incf	___fladd@bexp,f
  3274  058E  0008               	return
  3275  058F                     __end_ofPL26:	
  3276  058F                     PL50:	
  3277  058F  01B7               	clrf	?___fladd
  3278  0590  01B8               	clrf	?___fladd+1
  3279  0591  01B9               	clrf	?___fladd+2
  3280  0592  01BA               	clrf	?___fladd+3
  3281  0593  0008               	return
  3282  0594                     __end_ofPL50:	
  3283                           
  3284                           	psect	text4
  3285  0594                     __ptext4:	
  3286 ;; *************** function ___fldiv *****************
  3287 ;; Defined at:
  3288 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  a               4   14[BANK0 ] unsigned char 
  3291 ;;  b               4   18[BANK0 ] unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  grs             4   33[BANK0 ] unsigned long 
  3294 ;;  rem             4   26[BANK0 ] unsigned long 
  3295 ;;  new_exp         2   31[BANK0 ] int 
  3296 ;;  aexp            1   38[BANK0 ] unsigned char 
  3297 ;;  bexp            1   37[BANK0 ] unsigned char 
  3298 ;;  sign            1   30[BANK0 ] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  4   14[BANK0 ] unsigned char 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, btemp+1
  3303 ;; Tracked objects:
  3304 ;;		On entry : 300/0
  3305 ;;		On exit  : 300/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       8       0       0       0
  3309 ;;      Locals:         0      13       0       0       0
  3310 ;;      Temps:          0       4       0       0       0
  3311 ;;      Totals:         0      25       0       0       0
  3312 ;;Total ram usage:       25 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_mediaLeituraPt100Umidadde
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function ___fldiv
  3324  0594                     ___fldiv:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3328  0594  0835               	movf	___fldiv@b+3,w
  3329  0595  00BE               	movwf	___fldiv@sign
  3330  0596  3080               	movlw	128
  3331  0597  05BE               	andwf	___fldiv@sign,f
  3332  0598  1003               	clrc
  3333  0599  0D35               	rlf	___fldiv@b+3,w
  3334  059A  00C5               	movwf	___fldiv@bexp
  3335  059B  1BB4               	btfsc	___fldiv@b+2,7
  3336  059C  1445               	bsf	___fldiv@bexp,0
  3337  059D  0845               	movf	___fldiv@bexp,w
  3338  059E  1903               	btfsc	3,2
  3339  059F  2DA8               	goto	l1323
  3340  05A0  0F45               	incfsz	___fldiv@bexp,w
  3341  05A1  2DA6               	goto	l1324
  3342  05A2  01B2               	clrf	___fldiv@b
  3343  05A3  01B3               	clrf	___fldiv@b+1
  3344  05A4  01B4               	clrf	___fldiv@b+2
  3345  05A5  01B5               	clrf	___fldiv@b+3
  3346  05A6                     l1324:	
  3347  05A6  17B4               	bsf	___fldiv@b+2,7
  3348  05A7  2DAB               	goto	L5
  3349  05A8                     l1323:	
  3350  05A8  01B2               	clrf	___fldiv@b
  3351  05A9  01B3               	clrf	___fldiv@b+1
  3352  05AA  01B4               	clrf	___fldiv@b+2
  3353  05AB                     L5:	
  3354  05AB  01B5               	clrf	___fldiv@b+3
  3355  05AC  0831               	movf	___fldiv@a+3,w
  3356  05AD  3980               	andlw	128
  3357  05AE  06BE               	xorwf	___fldiv@sign,f
  3358  05AF  1003               	clrc
  3359  05B0  0D31               	rlf	___fldiv@a+3,w
  3360  05B1  00C6               	movwf	___fldiv@aexp
  3361  05B2  1BB0               	btfsc	___fldiv@a+2,7
  3362  05B3  1446               	bsf	___fldiv@aexp,0
  3363  05B4  0846               	movf	___fldiv@aexp,w
  3364  05B5  1903               	btfsc	3,2
  3365  05B6  2DBF               	goto	l1327
  3366  05B7  0F46               	incfsz	___fldiv@aexp,w
  3367  05B8  2DBD               	goto	l1328
  3368  05B9  01AE               	clrf	___fldiv@a
  3369  05BA  01AF               	clrf	___fldiv@a+1
  3370  05BB  01B0               	clrf	___fldiv@a+2
  3371  05BC  01B1               	clrf	___fldiv@a+3
  3372  05BD                     l1328:	
  3373  05BD  17B0               	bsf	___fldiv@a+2,7
  3374  05BE  2DC2               	goto	L6
  3375  05BF                     l1327:	
  3376  05BF  01AE               	clrf	___fldiv@a
  3377  05C0  01AF               	clrf	___fldiv@a+1
  3378  05C1  01B0               	clrf	___fldiv@a+2
  3379  05C2                     L6:	
  3380  05C2  01B1               	clrf	___fldiv@a+3
  3381  05C3  0831               	movf	___fldiv@a+3,w
  3382  05C4  0430               	iorwf	___fldiv@a+2,w
  3383  05C5  042F               	iorwf	___fldiv@a+1,w
  3384  05C6  042E               	iorwf	___fldiv@a,w
  3385  05C7  1D03               	skipz
  3386  05C8  2DDC               	goto	l4679
  3387  05C9  3080               	movlw	128
  3388  05CA  01B2               	clrf	___fldiv@b
  3389  05CB  01B3               	clrf	___fldiv@b+1
  3390  05CC  01B4               	clrf	___fldiv@b+2
  3391  05CD  01B5               	clrf	___fldiv@b+3
  3392  05CE  04B4               	iorwf	___fldiv@b+2,f
  3393  05CF  307F               	movlw	127
  3394  05D0  04B5               	iorwf	___fldiv@b+3,f
  3395  05D1                     L7:	
  3396  05D1  083E               	movf	___fldiv@sign,w
  3397  05D2  04B5               	iorwf	___fldiv@b+3,f
  3398  05D3  0835               	movf	___fldiv@b+3,w
  3399  05D4  00B1               	movwf	?___fldiv+3
  3400  05D5  0834               	movf	___fldiv@b+2,w
  3401  05D6  00B0               	movwf	?___fldiv+2
  3402  05D7  0833               	movf	___fldiv@b+1,w
  3403  05D8  00AF               	movwf	?___fldiv+1
  3404  05D9  0832               	movf	___fldiv@b,w
  3405  05DA  00AE               	movwf	?___fldiv
  3406  05DB  0008               	return
  3407  05DC                     l4679:	
  3408  05DC  0845               	movf	___fldiv@bexp,w
  3409  05DD  1D03               	btfss	3,2
  3410  05DE  2DE4               	goto	l4687
  3411  05DF  01AE               	clrf	?___fldiv
  3412  05E0  01AF               	clrf	?___fldiv+1
  3413  05E1  01B0               	clrf	?___fldiv+2
  3414  05E2  01B1               	clrf	?___fldiv+3
  3415  05E3  0008               	return
  3416  05E4                     l4687:	
  3417  05E4  0845               	movf	___fldiv@bexp,w
  3418  05E5  00BF               	movwf	___fldiv@new_exp
  3419  05E6  01C0               	clrf	___fldiv@new_exp+1
  3420  05E7  0846               	movf	___fldiv@aexp,w
  3421  05E8  02BF               	subwf	___fldiv@new_exp,f
  3422  05E9  1C03               	skipc
  3423  05EA  03C0               	decf	___fldiv@new_exp+1,f
  3424  05EB  307F               	movlw	127
  3425  05EC  07BF               	addwf	___fldiv@new_exp,f
  3426  05ED  1803               	skipnc
  3427  05EE  0AC0               	incf	___fldiv@new_exp+1,f
  3428  05EF  0835               	movf	___fldiv@b+3,w
  3429  05F0  00BD               	movwf	___fldiv@rem+3
  3430  05F1  0834               	movf	___fldiv@b+2,w
  3431  05F2  00BC               	movwf	___fldiv@rem+2
  3432  05F3  0833               	movf	___fldiv@b+1,w
  3433  05F4  00BB               	movwf	___fldiv@rem+1
  3434  05F5  0832               	movf	___fldiv@b,w
  3435  05F6  00BA               	movwf	___fldiv@rem
  3436  05F7  01B2               	clrf	___fldiv@b
  3437  05F8  01B3               	clrf	___fldiv@b+1
  3438  05F9  01B4               	clrf	___fldiv@b+2
  3439  05FA  01B5               	clrf	___fldiv@b+3
  3440  05FB  01C1               	clrf	___fldiv@grs
  3441  05FC  01C2               	clrf	___fldiv@grs+1
  3442  05FD  01C3               	clrf	___fldiv@grs+2
  3443  05FE  01C4               	clrf	___fldiv@grs+3
  3444  05FF  01C6               	clrf	___fldiv@aexp
  3445  0600                     l4713:	
  3446  0600  301A               	movlw	26
  3447  0601  0246               	subwf	___fldiv@aexp,w
  3448  0602  1803               	btfsc	3,0
  3449  0603  2E39               	goto	l4715
  3450  0604  0846               	movf	___fldiv@aexp,w
  3451  0605  1903               	btfsc	3,2
  3452  0606  2E18               	goto	l4705
  3453  0607  1003               	clrc
  3454  0608  0DBA               	rlf	___fldiv@rem,f
  3455  0609  0DBB               	rlf	___fldiv@rem+1,f
  3456  060A  0DBC               	rlf	___fldiv@rem+2,f
  3457  060B  0DBD               	rlf	___fldiv@rem+3,f
  3458  060C  1003               	clrc
  3459  060D  0DB2               	rlf	___fldiv@b,f
  3460  060E  0DB3               	rlf	___fldiv@b+1,f
  3461  060F  0DB4               	rlf	___fldiv@b+2,f
  3462  0610  0DB5               	rlf	___fldiv@b+3,f
  3463  0611  1BC4               	btfsc	___fldiv@grs+3,7
  3464  0612  1432               	bsf	___fldiv@b,0
  3465  0613  1003               	clrc
  3466  0614  0DC1               	rlf	___fldiv@grs,f
  3467  0615  0DC2               	rlf	___fldiv@grs+1,f
  3468  0616  0DC3               	rlf	___fldiv@grs+2,f
  3469  0617  0DC4               	rlf	___fldiv@grs+3,f
  3470  0618                     l4705:	
  3471  0618  0831               	movf	___fldiv@a+3,w
  3472  0619  023D               	subwf	___fldiv@rem+3,w
  3473  061A  1D03               	skipz
  3474  061B  2E26               	goto	u3615
  3475  061C  0830               	movf	___fldiv@a+2,w
  3476  061D  023C               	subwf	___fldiv@rem+2,w
  3477  061E  1D03               	skipz
  3478  061F  2E26               	goto	u3615
  3479  0620  082F               	movf	___fldiv@a+1,w
  3480  0621  023B               	subwf	___fldiv@rem+1,w
  3481  0622  1D03               	skipz
  3482  0623  2E26               	goto	u3615
  3483  0624  082E               	movf	___fldiv@a,w
  3484  0625  023A               	subwf	___fldiv@rem,w
  3485  0626                     u3615:	
  3486  0626  1C03               	skipc
  3487  0627  2E37               	goto	l4711
  3488  0628  1744               	bsf	___fldiv@grs+3,6
  3489  0629  082E               	movf	___fldiv@a,w
  3490  062A  02BA               	subwf	___fldiv@rem,f
  3491  062B  082F               	movf	___fldiv@a+1,w
  3492  062C  1C03               	skipc
  3493  062D  0F2F               	incfsz	___fldiv@a+1,w
  3494  062E  02BB               	subwf	___fldiv@rem+1,f
  3495  062F  0830               	movf	___fldiv@a+2,w
  3496  0630  1C03               	skipc
  3497  0631  0F30               	incfsz	___fldiv@a+2,w
  3498  0632  02BC               	subwf	___fldiv@rem+2,f
  3499  0633  0831               	movf	___fldiv@a+3,w
  3500  0634  1C03               	skipc
  3501  0635  0F31               	incfsz	___fldiv@a+3,w
  3502  0636  02BD               	subwf	___fldiv@rem+3,f
  3503  0637                     l4711:	
  3504  0637  0AC6               	incf	___fldiv@aexp,f
  3505  0638  2E00               	goto	l4713
  3506  0639                     l4715:	
  3507  0639  083D               	movf	___fldiv@rem+3,w
  3508  063A  043C               	iorwf	___fldiv@rem+2,w
  3509  063B  043B               	iorwf	___fldiv@rem+1,w
  3510  063C  043A               	iorwf	___fldiv@rem,w
  3511  063D  1D03               	btfss	3,2
  3512  063E  1441               	bsf	___fldiv@grs,0
  3513  063F                     l4729:	
  3514  063F  1BB4               	btfsc	___fldiv@b+2,7
  3515  0640  2E52               	goto	l4731
  3516  0641  1003               	clrc
  3517  0642  0DB2               	rlf	___fldiv@b,f
  3518  0643  0DB3               	rlf	___fldiv@b+1,f
  3519  0644  0DB4               	rlf	___fldiv@b+2,f
  3520  0645  0DB5               	rlf	___fldiv@b+3,f
  3521  0646  1BC4               	btfsc	___fldiv@grs+3,7
  3522  0647  1432               	bsf	___fldiv@b,0
  3523  0648  30FF               	movlw	-1
  3524  0649  1003               	clrc
  3525  064A  0DC1               	rlf	___fldiv@grs,f
  3526  064B  0DC2               	rlf	___fldiv@grs+1,f
  3527  064C  0DC3               	rlf	___fldiv@grs+2,f
  3528  064D  0DC4               	rlf	___fldiv@grs+3,f
  3529  064E  07BF               	addwf	___fldiv@new_exp,f
  3530  064F  1C03               	skipc
  3531  0650  03C0               	decf	___fldiv@new_exp+1,f
  3532  0651  2E3F               	goto	l4729
  3533  0652                     l4731:	
  3534  0652  01C6               	clrf	___fldiv@aexp
  3535  0653  1FC4               	btfss	___fldiv@grs+3,7
  3536  0654  2E67               	goto	l4741
  3537  0655  0841               	movf	___fldiv@grs,w
  3538  0656  00B6               	movwf	??___fldiv
  3539  0657  0842               	movf	___fldiv@grs+1,w
  3540  0658  00B7               	movwf	??___fldiv+1
  3541  0659  0843               	movf	___fldiv@grs+2,w
  3542  065A  00B8               	movwf	??___fldiv+2
  3543  065B  307F               	movlw	127
  3544  065C  0544               	andwf	___fldiv@grs+3,w
  3545  065D  00B9               	movwf	??___fldiv+3
  3546  065E  0438               	iorwf	??___fldiv+2,w
  3547  065F  0437               	iorwf	??___fldiv+1,w
  3548  0660  0436               	iorwf	??___fldiv,w
  3549  0661  1903               	skipnz
  3550  0662  1832               	btfsc	___fldiv@b,0
  3551  0663  2E65               	goto	l4737
  3552  0664  2E67               	goto	l4741
  3553  0665                     l4737:	
  3554  0665  01C6               	clrf	___fldiv@aexp
  3555  0666  0AC6               	incf	___fldiv@aexp,f
  3556  0667                     l4741:	
  3557  0667  0846               	movf	___fldiv@aexp,w
  3558  0668  1903               	btfsc	3,2
  3559  0669  2E7B               	goto	l4751
  3560  066A  0AB2               	incf	___fldiv@b,f
  3561  066B  1903               	skipnz
  3562  066C  0AB3               	incf	___fldiv@b+1,f
  3563  066D  1903               	skipnz
  3564  066E  0AB4               	incf	___fldiv@b+2,f
  3565  066F  1903               	skipnz
  3566  0670  0AB5               	incf	___fldiv@b+3,f
  3567  0671  1C35               	btfss	___fldiv@b+3,0
  3568  0672  2E7B               	goto	l4751
  3569  0673  0D35               	rlf	___fldiv@b+3,w
  3570  0674  0CB5               	rrf	___fldiv@b+3,f
  3571  0675  0CB4               	rrf	___fldiv@b+2,f
  3572  0676  0CB3               	rrf	___fldiv@b+1,f
  3573  0677  0CB2               	rrf	___fldiv@b,f
  3574  0678  0ABF               	incf	___fldiv@new_exp,f
  3575  0679  1903               	skipnz
  3576  067A  0AC0               	incf	___fldiv@new_exp+1,f
  3577  067B                     l4751:	
  3578  067B  0840               	movf	___fldiv@new_exp+1,w
  3579  067C  3A80               	xorlw	128
  3580  067D  00FF               	movwf	127
  3581  067E  3080               	movlw	128
  3582  067F  027F               	subwf	127,w
  3583  0680  1D03               	skipz
  3584  0681  2E84               	goto	u3715
  3585  0682  30FF               	movlw	255
  3586  0683  023F               	subwf	___fldiv@new_exp,w
  3587  0684                     u3715:	
  3588  0684  1C03               	skipc
  3589  0685  2E8F               	goto	l4757
  3590  0686  30FF               	movlw	255
  3591  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0689  00BF               	movwf	___fldiv@new_exp
  3594  068A  01C0               	clrf	___fldiv@new_exp+1
  3595  068B  01B2               	clrf	___fldiv@b
  3596  068C  01B3               	clrf	___fldiv@b+1
  3597  068D  01B4               	clrf	___fldiv@b+2
  3598  068E  01B5               	clrf	___fldiv@b+3
  3599  068F                     l4757:	
  3600  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0691  0840               	movf	___fldiv@new_exp+1,w
  3603  0692  3A80               	xorlw	128
  3604  0693  00FF               	movwf	127
  3605  0694  3080               	movlw	128
  3606  0695  027F               	subwf	127,w
  3607  0696  1D03               	skipz
  3608  0697  2E9A               	goto	u3725
  3609  0698  3001               	movlw	1
  3610  0699  023F               	subwf	___fldiv@new_exp,w
  3611  069A                     u3725:	
  3612  069A  1803               	skipnc
  3613  069B  2EA5               	goto	l4763
  3614  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3615  069D  1303               	bcf	3,6	;RP1=0, select bank0
  3616  069E  01BF               	clrf	___fldiv@new_exp
  3617  069F  01C0               	clrf	___fldiv@new_exp+1
  3618  06A0  01B2               	clrf	___fldiv@b
  3619  06A1  01B3               	clrf	___fldiv@b+1
  3620  06A2  01B4               	clrf	___fldiv@b+2
  3621  06A3  01B5               	clrf	___fldiv@b+3
  3622  06A4  01BE               	clrf	___fldiv@sign
  3623  06A5                     l4763:	
  3624  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3625  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3626  06A7  083F               	movf	___fldiv@new_exp,w
  3627  06A8  00C5               	movwf	___fldiv@bexp
  3628  06A9  1C45               	btfss	___fldiv@bexp,0
  3629  06AA  2EAD               	goto	l1352
  3630  06AB  17B4               	bsf	___fldiv@b+2,7
  3631  06AC  2EAE               	goto	l4769
  3632  06AD                     l1352:	
  3633  06AD  13B4               	bcf	___fldiv@b+2,7
  3634  06AE                     l4769:	
  3635  06AE  1003               	clrc
  3636  06AF  0C45               	rrf	___fldiv@bexp,w
  3637  06B0  00B5               	movwf	___fldiv@b+3
  3638  06B1  2DD1               	goto	L7
  3639  06B2                     __end_of___fldiv:	
  3640                           
  3641                           	psect	text6
  3642  0037                     __ptext6:	
  3643 ;; *************** function _ADC_Media_10bits *****************
  3644 ;; Defined at:
  3645 ;;		line 20 in file "adc.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  canal           1    wreg     unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  canal           1   19[BANK0 ] unsigned char 
  3650 ;;  value           2   20[BANK0 ] unsigned int 
  3651 ;;  i               1   22[BANK0 ] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  4   14[BANK0 ] float 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 300/0
  3658 ;;		On exit  : 300/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       4       0       0       0
  3662 ;;      Locals:         0       4       0       0       0
  3663 ;;      Temps:          0       1       0       0       0
  3664 ;;      Totals:         0       9       0       0       0
  3665 ;;Total ram usage:        9 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    2
  3668 ;; This function calls:
  3669 ;;		___lwdiv
  3670 ;;		___xxtofl
  3671 ;;		_captura
  3672 ;;		_my_delay_ms
  3673 ;; This function is called by:
  3674 ;;		_mediaLeituraPt100Umidadde
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           
  3679                           ;psect for function _ADC_Media_10bits
  3680  0037                     _ADC_Media_10bits:	
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3684                           ;ADC_Media_10bits@canal stored from wreg
  3685  0037  00B3               	movwf	ADC_Media_10bits@canal
  3686                           
  3687                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  3688  0038  00B2               	movwf	??_ADC_Media_10bits
  3689  0039  0DB2               	rlf	??_ADC_Media_10bits,f
  3690  003A  0DB2               	rlf	??_ADC_Media_10bits,f
  3691  003B  081F               	movf	31,w	;volatile
  3692  003C  0632               	xorwf	??_ADC_Media_10bits,w
  3693  003D  39C3               	andlw	-61
  3694  003E  0632               	xorwf	??_ADC_Media_10bits,w
  3695                           
  3696                           ;adc.c: 24:       my_delay_ms(1);
  3697  003F  23C9  120A  118A   	fcall	PL36	;call to abstracted procedure
  3698  0042  2333  120A  118A   	fcall	_my_delay_ms
  3699                           
  3700                           ;adc.c: 26:       value=0;
  3701  0045  01B4               	clrf	ADC_Media_10bits@value
  3702  0046  01B5               	clrf	ADC_Media_10bits@value+1
  3703                           
  3704                           ;adc.c: 27:       for(i=1;i<=50;i++)
  3705  0047  01B6               	clrf	ADC_Media_10bits@i
  3706  0048  0AB6               	incf	ADC_Media_10bits@i,f
  3707  0049                     l6149:	
  3708                           
  3709                           ;adc.c: 28:           value+=captura();
  3710  0049  23D6  120A  118A   	fcall	_captura
  3711  004C  0820               	movf	?_captura,w
  3712  004D  07B4               	addwf	ADC_Media_10bits@value,f
  3713  004E  1803               	skipnc
  3714  004F  0AB5               	incf	ADC_Media_10bits@value+1,f
  3715  0050  0821               	movf	?_captura+1,w
  3716  0051  07B5               	addwf	ADC_Media_10bits@value+1,f
  3717  0052  3033               	movlw	51
  3718  0053  0AB6               	incf	ADC_Media_10bits@i,f
  3719  0054  0236               	subwf	ADC_Media_10bits@i,w
  3720  0055  1C03               	skipc
  3721  0056  2849               	goto	l6149
  3722                           
  3723                           ;adc.c: 29:       value/=(i-1);
  3724  0057  0836               	movf	ADC_Media_10bits@i,w
  3725  0058  00A0               	movwf	___lwdiv@divisor
  3726  0059  30FF               	movlw	255
  3727  005A  01A1               	clrf	___lwdiv@divisor+1
  3728  005B  07A0               	addwf	___lwdiv@divisor,f
  3729  005C  1803               	skipnc
  3730  005D  0AA1               	incf	___lwdiv@divisor+1,f
  3731  005E  07A1               	addwf	___lwdiv@divisor+1,f
  3732  005F  0835               	movf	ADC_Media_10bits@value+1,w
  3733  0060  00A3               	movwf	___lwdiv@dividend+1
  3734  0061  0834               	movf	ADC_Media_10bits@value,w
  3735  0062  00A2               	movwf	___lwdiv@dividend
  3736  0063  160A  118A  261A  120A  118A  	fcall	___lwdiv
  3737  0068  0821               	movf	?___lwdiv+1,w
  3738  0069  00B5               	movwf	ADC_Media_10bits@value+1
  3739  006A  0820               	movf	?___lwdiv,w
  3740  006B  00B4               	movwf	ADC_Media_10bits@value
  3741                           
  3742                           ;adc.c: 30:       return value;
  3743  006C  00A0               	movwf	___xxtofl@val
  3744  006D  0835               	movf	ADC_Media_10bits@value+1,w
  3745  006E  00A1               	movwf	___xxtofl@val+1
  3746  006F  3000               	movlw	0
  3747  0070  01A2               	clrf	___xxtofl@val+2
  3748  0071  01A3               	clrf	___xxtofl@val+3
  3749  0072  22C5               	fcall	___xxtofl
  3750  0073  0823               	movf	?___xxtofl+3,w
  3751  0074  00B1               	movwf	?_ADC_Media_10bits+3
  3752  0075  0822               	movf	?___xxtofl+2,w
  3753  0076  00B0               	movwf	?_ADC_Media_10bits+2
  3754  0077  0821               	movf	?___xxtofl+1,w
  3755  0078  00AF               	movwf	?_ADC_Media_10bits+1
  3756  0079  0820               	movf	?___xxtofl,w
  3757  007A  00AE               	movwf	?_ADC_Media_10bits
  3758  007B  0008               	return
  3759  007C                     __end_of_ADC_Media_10bits:	
  3760  007C                     __ptext1:	
  3761 ;; *************** function _mediaLeituraPt100Umidadde *****************
  3762 ;; Defined at:
  3763 ;;		line 733 in file "SlaveLiofilizadorVer1.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  canal           1    wreg     unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  canal           1   56[BANK0 ] unsigned char 
  3768 ;;  Temp            4   58[BANK0 ] float 
  3769 ;;  tensao          4   52[BANK0 ] float 
  3770 ;;  i               1   57[BANK0 ] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 300/0
  3777 ;;		On exit  : 200/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3780 ;;      Params:         0       0       0       0       0
  3781 ;;      Locals:         0      10       0       0       0
  3782 ;;      Temps:          0       1       0       0       0
  3783 ;;      Totals:         0      11       0       0       0
  3784 ;;Total ram usage:       11 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    3
  3787 ;; This function calls:
  3788 ;;		_ADC_Media_10bits
  3789 ;;		_Package_Usart_is_for_me
  3790 ;;		___fladd
  3791 ;;		___fldiv
  3792 ;;		___flmul
  3793 ;;		___flsub
  3794 ;;		___xxtofl
  3795 ;;		_my_delay_ms
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _mediaLeituraPt100Umidadde
  3803  007C                     _mediaLeituraPt100Umidadde:	
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3807                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  3808  007C  00D8               	movwf	mediaLeituraPt100Umidadde@canal
  3809                           
  3810                           ;SlaveLiofilizadorVer1.c: 733: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 734:      {;SlaveLiofilizadorVer1.c: 735:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 736:      float tensao;;SlaveLiofilizadorVer1.c: 737:      char i;;Slave
      +                          LiofilizadorVer1.c: 739:      ADCON0bits.CHS=canal;
  3811  007D  00D3               	movwf	??_mediaLeituraPt100Umidadde
  3812  007E  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  3813  007F  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  3814  0080  081F               	movf	31,w	;volatile
  3815  0081  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  3816  0082  39C3               	andlw	-61
  3817  0083  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  3818                           
  3819                           ;SlaveLiofilizadorVer1.c: 740:      my_delay_ms(1);
  3820  0084  23C9  120A  118A   	fcall	PL36	;call to abstracted procedure
  3821  0087  2333  120A  118A   	fcall	_my_delay_ms
  3822                           
  3823                           ;SlaveLiofilizadorVer1.c: 741:      Temp=0;
  3824  008A  01DA               	clrf	mediaLeituraPt100Umidadde@Temp
  3825  008B  01DB               	clrf	mediaLeituraPt100Umidadde@Temp+1
  3826  008C  01DC               	clrf	mediaLeituraPt100Umidadde@Temp+2
  3827  008D  01DD               	clrf	mediaLeituraPt100Umidadde@Temp+3
  3828                           
  3829                           ;SlaveLiofilizadorVer1.c: 743:      for(i=1;i<15;i++)
  3830  008E  01D9               	clrf	mediaLeituraPt100Umidadde@i
  3831  008F  0AD9               	incf	mediaLeituraPt100Umidadde@i,f
  3832  0090                     l6395:	
  3833                           
  3834                           ;SlaveLiofilizadorVer1.c: 744:         {;SlaveLiofilizadorVer1.c: 745:         Temp+=ADC
      +                          _Media_10bits(canal);
  3835  0090  0858               	movf	mediaLeituraPt100Umidadde@canal,w
  3836  0091  2037               	fcall	_ADC_Media_10bits
  3837  0092  0831               	movf	?_ADC_Media_10bits+3,w
  3838  0093  00BA               	movwf	___fladd@b+3
  3839  0094  0830               	movf	?_ADC_Media_10bits+2,w
  3840  0095  00B9               	movwf	___fladd@b+2
  3841  0096  082F               	movf	?_ADC_Media_10bits+1,w
  3842  0097  00B8               	movwf	___fladd@b+1
  3843  0098  082E               	movf	?_ADC_Media_10bits,w
  3844  0099  00B7               	movwf	___fladd@b
  3845  009A  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3846  009B  00BE               	movwf	___fladd@a+3
  3847  009C  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3848  009D  00BD               	movwf	___fladd@a+2
  3849  009E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3850  009F  00BC               	movwf	___fladd@a+1
  3851  00A0  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3852  00A1  00BB               	movwf	___fladd@a
  3853  00A2  120A  118A  2417  120A  118A  	fcall	___fladd
  3854  00A7  083A               	movf	?___fladd+3,w
  3855  00A8  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3856  00A9  0839               	movf	?___fladd+2,w
  3857  00AA  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3858  00AB  0838               	movf	?___fladd+1,w
  3859  00AC  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3860  00AD  0837               	movf	?___fladd,w
  3861  00AE  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3862                           
  3863                           ;SlaveLiofilizadorVer1.c: 746:         if(Package_Usart_is_for_me()==1) break;
  3864  00AF  23E3  120A  118A   	fcall	_Package_Usart_is_for_me
  3865  00B2  3A01               	xorlw	1
  3866  00B3  1903               	btfsc	3,2
  3867  00B4  28BA               	goto	l6405
  3868  00B5  300F               	movlw	15
  3869                           
  3870                           ;SlaveLiofilizadorVer1.c: 747:         }
  3871  00B6  0AD9               	incf	mediaLeituraPt100Umidadde@i,f
  3872  00B7  0259               	subwf	mediaLeituraPt100Umidadde@i,w
  3873  00B8  1C03               	skipc
  3874  00B9  2890               	goto	l6395
  3875  00BA                     l6405:	
  3876                           
  3877                           ;SlaveLiofilizadorVer1.c: 748:      if(i<10)
  3878  00BA  300A               	movlw	10
  3879  00BB  0259               	subwf	mediaLeituraPt100Umidadde@i,w
  3880  00BC  1C03               	btfss	3,0
  3881  00BD  0008               	return
  3882                           
  3883                           ;SlaveLiofilizadorVer1.c: 755:      if(i==15)
  3884  00BE  300F               	movlw	15
  3885  00BF  0659               	xorwf	mediaLeituraPt100Umidadde@i,w
  3886  00C0  1D03               	btfss	3,2
  3887  00C1  28D0               	goto	l6413
  3888                           
  3889                           ;SlaveLiofilizadorVer1.c: 756:        Temp/=(i-1);
  3890  00C2  0859               	movf	mediaLeituraPt100Umidadde@i,w
  3891  00C3  3EFF               	addlw	255
  3892  00C4  00A0               	movwf	___xxtofl@val
  3893  00C5  30FF               	movlw	255
  3894  00C6  1803               	skipnc
  3895  00C7  3000               	movlw	0
  3896  00C8  00A1               	movwf	___xxtofl@val+1
  3897  00C9  01A2               	clrf	___xxtofl@val+2
  3898  00CA  1BA1               	btfsc	___xxtofl@val+1,7
  3899  00CB  03A2               	decf	___xxtofl@val+2,f
  3900  00CC  0822               	movf	___xxtofl@val+2,w
  3901  00CD  00A3               	movwf	___xxtofl@val+3
  3902  00CE  3001               	movlw	1
  3903  00CF  28D6               	goto	L1
  3904  00D0                     l6413:	
  3905                           
  3906                           ;SlaveLiofilizadorVer1.c: 758:        Temp/=(i);
  3907  00D0  0859               	movf	mediaLeituraPt100Umidadde@i,w
  3908  00D1  00A0               	movwf	___xxtofl@val
  3909  00D2  3001               	movlw	1
  3910  00D3  01A1               	clrf	___xxtofl@val+1
  3911  00D4  01A2               	clrf	___xxtofl@val+2
  3912  00D5  01A3               	clrf	___xxtofl@val+3
  3913  00D6                     L1:	
  3914  00D6  22C5               	fcall	___xxtofl
  3915  00D7  0823               	movf	?___xxtofl+3,w
  3916  00D8  00B1               	movwf	___fldiv@a+3
  3917  00D9  0822               	movf	?___xxtofl+2,w
  3918  00DA  00B0               	movwf	___fldiv@a+2
  3919  00DB  0821               	movf	?___xxtofl+1,w
  3920  00DC  00AF               	movwf	___fldiv@a+1
  3921  00DD  0820               	movf	?___xxtofl,w
  3922  00DE  00AE               	movwf	___fldiv@a
  3923  00DF  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3924  00E0  00B5               	movwf	___fldiv@b+3
  3925  00E1  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3926  00E2  00B4               	movwf	___fldiv@b+2
  3927  00E3  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3928  00E4  00B3               	movwf	___fldiv@b+1
  3929  00E5  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3930  00E6  00B2               	movwf	___fldiv@b
  3931  00E7  120A  118A  2594  120A  118A  	fcall	___fldiv
  3932  00EC  0831               	movf	?___fldiv+3,w
  3933  00ED  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3934  00EE  0830               	movf	?___fldiv+2,w
  3935  00EF  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3936  00F0  082F               	movf	?___fldiv+1,w
  3937  00F1  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3938  00F2  082E               	movf	?___fldiv,w
  3939  00F3  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3940                           
  3941                           ;SlaveLiofilizadorVer1.c: 764:      tensao=(5.0/1023.0);
  3942  00F4  303B               	movlw	59
  3943  00F5  00D7               	movwf	mediaLeituraPt100Umidadde@tensao+3
  3944  00F6  30A0               	movlw	160
  3945  00F7  00D6               	movwf	mediaLeituraPt100Umidadde@tensao+2
  3946  00F8  3028               	movlw	40
  3947  00F9  00D5               	movwf	mediaLeituraPt100Umidadde@tensao+1
  3948  00FA  300A               	movlw	10
  3949  00FB  00D4               	movwf	mediaLeituraPt100Umidadde@tensao
  3950                           
  3951                           ;SlaveLiofilizadorVer1.c: 765:      Temp*=tensao;
  3952  00FC  0857               	movf	mediaLeituraPt100Umidadde@tensao+3,w
  3953  00FD  00AB               	movwf	___flmul@b+3
  3954  00FE  0856               	movf	mediaLeituraPt100Umidadde@tensao+2,w
  3955  00FF  00AA               	movwf	___flmul@b+2
  3956  0100  0855               	movf	mediaLeituraPt100Umidadde@tensao+1,w
  3957  0101  00A9               	movwf	___flmul@b+1
  3958  0102  0854               	movf	mediaLeituraPt100Umidadde@tensao,w
  3959  0103  00A8               	movwf	___flmul@b
  3960  0104  23B9  120A  118A   	fcall	PL24	;call to abstracted procedure
  3961  0107  2156  120A  118A   	fcall	___flmul
  3962                           
  3963                           ;SlaveLiofilizadorVer1.c: 766:      Temp*=40.0;
  3964  010A  23B0  120A  118A   	fcall	PL14	;call to abstracted procedure
  3965  010D  00AB               	movwf	___flmul@b+3
  3966  010E  3020               	movlw	32
  3967  010F  00AA               	movwf	___flmul@b+2
  3968  0110  01A9               	clrf	___flmul@b+1
  3969  0111  01A8               	clrf	___flmul@b
  3970  0112  23B9  120A  118A   	fcall	PL24	;call to abstracted procedure
  3971  0115  2156  120A  118A   	fcall	___flmul
  3972                           
  3973                           ;SlaveLiofilizadorVer1.c: 767:      Temp-=110.0;
  3974  0118  23B0               	fcall	PL14	;call to abstracted procedure
  3975  0119  00CE               	movwf	___flsub@a+3
  3976  011A  30DC               	movlw	220
  3977  011B  00CD               	movwf	___flsub@a+2
  3978  011C  01CC               	clrf	___flsub@a+1
  3979  011D  01CB               	clrf	___flsub@a
  3980  011E  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3981  011F  00D2               	movwf	___flsub@b+3
  3982  0120  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3983  0121  00D1               	movwf	___flsub@b+2
  3984  0122  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3985  0123  00D0               	movwf	___flsub@b+1
  3986  0124  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3987  0125  00CF               	movwf	___flsub@b
  3988  0126  120A  118A  23FB  120A  118A  	fcall	___flsub
  3989  012B  084E               	movf	?___flsub+3,w
  3990  012C  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3991  012D  084D               	movf	?___flsub+2,w
  3992  012E  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3993  012F  084C               	movf	?___flsub+1,w
  3994  0130  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3995  0131  084B               	movf	?___flsub,w
  3996  0132  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3997                           
  3998                           ;SlaveLiofilizadorVer1.c: 770:      if(canal==0)
  3999  0133  0858               	movf	mediaLeituraPt100Umidadde@canal,w
  4000  0134  1D03               	btfss	3,2
  4001  0135  2946               	goto	l6427
  4002                           
  4003                           ;SlaveLiofilizadorVer1.c: 771:         {;SlaveLiofilizadorVer1.c: 772:         Temperatu
      +                          ra0=Temp;
  4004  0136  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  4005  0137  1683               	bsf	3,5	;RP0=1, select bank1
  4006  0138  00D4               	movwf	(_Temperatura0+3)^(0+128)
  4007  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4008  013A  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4009  013B  1683               	bsf	3,5	;RP0=1, select bank1
  4010  013C  00D3               	movwf	(_Temperatura0+2)^(0+128)
  4011  013D  1283               	bcf	3,5	;RP0=0, select bank0
  4012  013E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4013  013F  1683               	bsf	3,5	;RP0=1, select bank1
  4014  0140  00D2               	movwf	(_Temperatura0+1)^(0+128)
  4015  0141  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0142  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4017  0143  1683               	bsf	3,5	;RP0=1, select bank1
  4018  0144  00D1               	movwf	_Temperatura0^(0+128)
  4019                           
  4020                           ;SlaveLiofilizadorVer1.c: 773:         }
  4021  0145  0008               	return
  4022  0146                     l6427:	
  4023                           
  4024                           ;SlaveLiofilizadorVer1.c: 775:         {;SlaveLiofilizadorVer1.c: 776:         Umidade1=
      +                          Temp;
  4025  0146  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  4026  0147  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0148  00D0               	movwf	(_Umidade1+3)^(0+128)
  4028  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4029  014A  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4030  014B  1683               	bsf	3,5	;RP0=1, select bank1
  4031  014C  00CF               	movwf	(_Umidade1+2)^(0+128)
  4032  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4033  014E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4034  014F  1683               	bsf	3,5	;RP0=1, select bank1
  4035  0150  00CE               	movwf	(_Umidade1+1)^(0+128)
  4036  0151  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0152  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4038  0153  1683               	bsf	3,5	;RP0=1, select bank1
  4039  0154  00CD               	movwf	_Umidade1^(0+128)
  4040  0155  0008               	return
  4041  0156                     __end_of_mediaLeituraPt100Umidadde:	
  4042  0156                     __ptext19:	
  4043 ;; *************** function ___flmul *****************
  4044 ;; Defined at:
  4045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  b               4    8[BANK0 ] unsigned int 
  4048 ;;  a               4   12[BANK0 ] unsigned int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  prod            4   27[BANK0 ] struct .
  4051 ;;  grs             4   23[BANK0 ] unsigned long 
  4052 ;;  temp            2   31[BANK0 ] struct .
  4053 ;;  bexp            1   22[BANK0 ] unsigned char 
  4054 ;;  aexp            1   21[BANK0 ] unsigned char 
  4055 ;;  sign            1   20[BANK0 ] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  4    8[BANK0 ] unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 300/0
  4062 ;;		On exit  : 300/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       8       0       0       0
  4066 ;;      Locals:         0      13       0       0       0
  4067 ;;      Temps:          0       4       0       0       0
  4068 ;;      Totals:         0      25       0       0       0
  4069 ;;Total ram usage:       25 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    2
  4072 ;; This function calls:
  4073 ;;		__Umul8_16
  4074 ;; This function is called by:
  4075 ;;		_Decodify_Command
  4076 ;;		_mediaLeituraPt100Umidadde
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function ___flmul
  4082  0156                     ___flmul:	
  4083                           
  4084                           ;incstack = 0
  4085                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4086  0156  082B               	movf	___flmul@b+3,w
  4087  0157  00B4               	movwf	___flmul@sign
  4088  0158  3080               	movlw	128
  4089  0159  05B4               	andwf	___flmul@sign,f
  4090  015A  1003               	clrc
  4091  015B  0D2B               	rlf	___flmul@b+3,w
  4092  015C  00B6               	movwf	___flmul@bexp
  4093  015D  1BAA               	btfsc	___flmul@b+2,7
  4094  015E  1436               	bsf	___flmul@bexp,0
  4095  015F  0836               	movf	___flmul@bexp,w
  4096  0160  1903               	btfsc	3,2
  4097  0161  296A               	goto	l1359
  4098  0162  0F36               	incfsz	___flmul@bexp,w
  4099  0163  2968               	goto	l1360
  4100  0164  01A8               	clrf	___flmul@b
  4101  0165  01A9               	clrf	___flmul@b+1
  4102  0166  01AA               	clrf	___flmul@b+2
  4103  0167  01AB               	clrf	___flmul@b+3
  4104  0168                     l1360:	
  4105  0168  17AA               	bsf	___flmul@b+2,7
  4106  0169  296E               	goto	l6207
  4107  016A                     l1359:	
  4108  016A  01A8               	clrf	___flmul@b
  4109  016B  01A9               	clrf	___flmul@b+1
  4110  016C  01AA               	clrf	___flmul@b+2
  4111  016D  01AB               	clrf	___flmul@b+3
  4112  016E                     l6207:	
  4113  016E  082F               	movf	___flmul@a+3,w
  4114  016F  3980               	andlw	128
  4115  0170  06B4               	xorwf	___flmul@sign,f
  4116  0171  1003               	clrc
  4117  0172  0D2F               	rlf	___flmul@a+3,w
  4118  0173  00B5               	movwf	___flmul@aexp
  4119  0174  1BAE               	btfsc	___flmul@a+2,7
  4120  0175  1435               	bsf	___flmul@aexp,0
  4121  0176  0835               	movf	___flmul@aexp,w
  4122  0177  1903               	btfsc	3,2
  4123  0178  2981               	goto	l1363
  4124  0179  0F35               	incfsz	___flmul@aexp,w
  4125  017A  297F               	goto	l1364
  4126  017B  01AC               	clrf	___flmul@a
  4127  017C  01AD               	clrf	___flmul@a+1
  4128  017D  01AE               	clrf	___flmul@a+2
  4129  017E  01AF               	clrf	___flmul@a+3
  4130  017F                     l1364:	
  4131  017F  17AE               	bsf	___flmul@a+2,7
  4132  0180  2985               	goto	l6219
  4133  0181                     l1363:	
  4134  0181  01AC               	clrf	___flmul@a
  4135  0182  01AD               	clrf	___flmul@a+1
  4136  0183  01AE               	clrf	___flmul@a+2
  4137  0184  01AF               	clrf	___flmul@a+3
  4138  0185                     l6219:	
  4139  0185  0835               	movf	___flmul@aexp,w
  4140  0186  1D03               	btfss	3,2
  4141  0187  0836               	movf	___flmul@bexp,w
  4142  0188  1D03               	btfss	3,2
  4143  0189  298F               	goto	l6223
  4144  018A  01A8               	clrf	?___flmul
  4145  018B  01A9               	clrf	?___flmul+1
  4146  018C  01AA               	clrf	?___flmul+2
  4147  018D  01AB               	clrf	?___flmul+3
  4148  018E  0008               	return
  4149  018F                     l6223:	
  4150  018F  0828               	movf	___flmul@b,w
  4151  0190  00A0               	movwf	__Umul8_16@multiplicand
  4152  0191  082E               	movf	___flmul@a+2,w
  4153  0192  22AA  120A  118A   	fcall	__Umul8_16
  4154  0195  0821               	movf	?__Umul8_16+1,w
  4155  0196  00C0               	movwf	___flmul@temp+1
  4156  0197  0820               	movf	?__Umul8_16,w
  4157  0198  00BF               	movwf	___flmul@temp
  4158  0199  00B7               	movwf	___flmul@grs
  4159  019A  01B8               	clrf	___flmul@grs+1
  4160  019B  01B9               	clrf	___flmul@grs+2
  4161  019C  01BA               	clrf	___flmul@grs+3
  4162  019D  0840               	movf	___flmul@temp+1,w
  4163  019E  00BB               	movwf	___flmul@prod
  4164  019F  01BC               	clrf	___flmul@prod+1
  4165  01A0  01BD               	clrf	___flmul@prod+2
  4166  01A1  01BE               	clrf	___flmul@prod+3
  4167  01A2  0829               	movf	___flmul@b+1,w
  4168  01A3  00A0               	movwf	__Umul8_16@multiplicand
  4169  01A4  082D               	movf	___flmul@a+1,w
  4170  01A5  22AA  120A  118A   	fcall	__Umul8_16
  4171  01A8  2393  120A  118A   	fcall	PL8	;call to abstracted procedure
  4172  01AB  1803               	skipnc
  4173  01AC  07BC               	addwf	___flmul@prod+1,f
  4174  01AD  1803               	skipnc
  4175  01AE  07BD               	addwf	___flmul@prod+2,f
  4176  01AF  1803               	skipnc
  4177  01B0  07BE               	addwf	___flmul@prod+3,f
  4178  01B1  082A               	movf	___flmul@b+2,w
  4179  01B2  00A0               	movwf	__Umul8_16@multiplicand
  4180  01B3  082C               	movf	___flmul@a,w
  4181  01B4  22AA  120A  118A   	fcall	__Umul8_16
  4182  01B7  2393  120A  118A   	fcall	PL8	;call to abstracted procedure
  4183  01BA  23A2  120A  118A   	fcall	PL10	;call to abstracted procedure
  4184  01BD  0829               	movf	___flmul@b+1,w
  4185  01BE  00A0               	movwf	__Umul8_16@multiplicand
  4186  01BF  082C               	movf	___flmul@a,w
  4187  01C0  22AA  120A  118A   	fcall	__Umul8_16
  4188  01C3  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4189  01C6  1803               	skipnc
  4190  01C7  3E01               	addlw	1
  4191  01C8  1D03               	btfss	3,2
  4192  01C9  07BA               	addwf	___flmul@grs+3,f
  4193  01CA  0828               	movf	___flmul@b,w
  4194  01CB  00A0               	movwf	__Umul8_16@multiplicand
  4195  01CC  082D               	movf	___flmul@a+1,w
  4196  01CD  22AA  120A  118A   	fcall	__Umul8_16
  4197  01D0  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4198  01D3  1803               	skipnc
  4199  01D4  3E01               	addlw	1
  4200  01D5  1D03               	btfss	3,2
  4201  01D6  07BA               	addwf	___flmul@grs+3,f
  4202  01D7  0839               	movf	___flmul@grs+2,w
  4203  01D8  00BA               	movwf	___flmul@grs+3
  4204  01D9  0838               	movf	___flmul@grs+1,w
  4205  01DA  00B9               	movwf	___flmul@grs+2
  4206  01DB  0837               	movf	___flmul@grs,w
  4207  01DC  00B8               	movwf	___flmul@grs+1
  4208  01DD  01B7               	clrf	___flmul@grs
  4209  01DE  0828               	movf	___flmul@b,w
  4210  01DF  00A0               	movwf	__Umul8_16@multiplicand
  4211  01E0  082C               	movf	___flmul@a,w
  4212  01E1  22AA  120A  118A   	fcall	__Umul8_16
  4213  01E4  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4214  01E7  1803               	skipnc
  4215  01E8  3E01               	addlw	1
  4216  01E9  1D03               	btfss	3,2
  4217  01EA  07BA               	addwf	___flmul@grs+3,f
  4218  01EB  0829               	movf	___flmul@b+1,w
  4219  01EC  00A0               	movwf	__Umul8_16@multiplicand
  4220  01ED  082E               	movf	___flmul@a+2,w
  4221  01EE  22AA  120A  118A   	fcall	__Umul8_16
  4222  01F1  0821               	movf	?__Umul8_16+1,w
  4223  01F2  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4224  01F5  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4225  01F8  23C2  120A  118A   	fcall	PL34	;call to abstracted procedure
  4226  01FB  082D               	movf	___flmul@a+1,w
  4227  01FC  22AA  120A  118A   	fcall	__Umul8_16
  4228  01FF  0821               	movf	?__Umul8_16+1,w
  4229  0200  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4230  0203  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4231  0206  23C2  120A  118A   	fcall	PL34	;call to abstracted procedure
  4232  0209  082E               	movf	___flmul@a+2,w
  4233  020A  22AA  120A  118A   	fcall	__Umul8_16
  4234  020D  0821               	movf	?__Umul8_16+1,w
  4235  020E  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4236  0211  0832               	movf	??___flmul+2,w
  4237  0212  00B3               	movwf	??___flmul+3
  4238  0213  0831               	movf	??___flmul+1,w
  4239  0214  00B2               	movwf	??___flmul+2
  4240  0215  0830               	movf	??___flmul,w
  4241  0216  00B1               	movwf	??___flmul+1
  4242  0217  01B0               	clrf	??___flmul
  4243  0218  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4244  021B  1803               	skipnc
  4245  021C  3E01               	addlw	1
  4246  021D  1D03               	btfss	3,2
  4247  021E  07BE               	addwf	___flmul@prod+3,f
  4248  021F  083A               	movf	___flmul@grs+3,w
  4249  0220  07BB               	addwf	___flmul@prod,f
  4250  0221  3001               	movlw	1
  4251  0222  23A2  120A  118A   	fcall	PL10	;call to abstracted procedure
  4252  0225  0836               	movf	___flmul@bexp,w
  4253  0226  00BF               	movwf	___flmul@temp
  4254  0227  01C0               	clrf	___flmul@temp+1
  4255  0228  0835               	movf	___flmul@aexp,w
  4256  0229  07BF               	addwf	___flmul@temp,f
  4257  022A  1803               	skipnc
  4258  022B  0AC0               	incf	___flmul@temp+1,f
  4259  022C  3082               	movlw	-126
  4260  022D                     L17:	
  4261  022D  07BF               	addwf	___flmul@temp,f
  4262  022E  1C03               	skipc
  4263  022F  03C0               	decf	___flmul@temp+1,f
  4264  0230  1BBD               	btfsc	___flmul@prod+2,7
  4265  0231  2A40               	goto	l6271
  4266  0232  1003               	clrc
  4267  0233  0DBB               	rlf	___flmul@prod,f
  4268  0234  0DBC               	rlf	___flmul@prod+1,f
  4269  0235  0DBD               	rlf	___flmul@prod+2,f
  4270  0236  0DBE               	rlf	___flmul@prod+3,f
  4271  0237  1BBA               	btfsc	___flmul@grs+3,7
  4272  0238  143B               	bsf	___flmul@prod,0
  4273  0239  30FF               	movlw	-1
  4274  023A  1003               	clrc
  4275  023B  0DB7               	rlf	___flmul@grs,f
  4276  023C  0DB8               	rlf	___flmul@grs+1,f
  4277  023D  0DB9               	rlf	___flmul@grs+2,f
  4278  023E  0DBA               	rlf	___flmul@grs+3,f
  4279  023F  2A2D               	goto	L17
  4280  0240                     l6271:	
  4281  0240  01B5               	clrf	___flmul@aexp
  4282  0241  1FBA               	btfss	___flmul@grs+3,7
  4283  0242  2A55               	goto	l6281
  4284  0243  0837               	movf	___flmul@grs,w
  4285  0244  00B0               	movwf	??___flmul
  4286  0245  0838               	movf	___flmul@grs+1,w
  4287  0246  00B1               	movwf	??___flmul+1
  4288  0247  0839               	movf	___flmul@grs+2,w
  4289  0248  00B2               	movwf	??___flmul+2
  4290  0249  307F               	movlw	127
  4291  024A  053A               	andwf	___flmul@grs+3,w
  4292  024B  00B3               	movwf	??___flmul+3
  4293  024C  0432               	iorwf	??___flmul+2,w
  4294  024D  0431               	iorwf	??___flmul+1,w
  4295  024E  0430               	iorwf	??___flmul,w
  4296  024F  1903               	skipnz
  4297  0250  183B               	btfsc	___flmul@prod,0
  4298  0251  2A53               	goto	l6277
  4299  0252  2A55               	goto	l6281
  4300  0253                     l6277:	
  4301  0253  01B5               	clrf	___flmul@aexp
  4302  0254  0AB5               	incf	___flmul@aexp,f
  4303  0255                     l6281:	
  4304  0255  0835               	movf	___flmul@aexp,w
  4305  0256  1903               	btfsc	3,2
  4306  0257  2A69               	goto	l6291
  4307  0258  0ABB               	incf	___flmul@prod,f
  4308  0259  1903               	skipnz
  4309  025A  0ABC               	incf	___flmul@prod+1,f
  4310  025B  1903               	skipnz
  4311  025C  0ABD               	incf	___flmul@prod+2,f
  4312  025D  1903               	skipnz
  4313  025E  0ABE               	incf	___flmul@prod+3,f
  4314  025F  1C3E               	btfss	___flmul@prod+3,0
  4315  0260  2A69               	goto	l6291
  4316  0261  0D3E               	rlf	___flmul@prod+3,w
  4317  0262  0CBE               	rrf	___flmul@prod+3,f
  4318  0263  0CBD               	rrf	___flmul@prod+2,f
  4319  0264  0CBC               	rrf	___flmul@prod+1,f
  4320  0265  0CBB               	rrf	___flmul@prod,f
  4321  0266  0ABF               	incf	___flmul@temp,f
  4322  0267  1903               	skipnz
  4323  0268  0AC0               	incf	___flmul@temp+1,f
  4324  0269                     l6291:	
  4325  0269  0840               	movf	___flmul@temp+1,w
  4326  026A  3A80               	xorlw	128
  4327  026B  00FF               	movwf	127
  4328  026C  3080               	movlw	128
  4329  026D  027F               	subwf	127,w
  4330  026E  1D03               	skipz
  4331  026F  2A72               	goto	u5175
  4332  0270  30FF               	movlw	255
  4333  0271  023F               	subwf	___flmul@temp,w
  4334  0272                     u5175:	
  4335  0272  1C03               	skipc
  4336  0273  2A7D               	goto	l6295
  4337  0274  307F               	movlw	127
  4338  0275  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0276  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0277  00BE               	movwf	___flmul@prod+3
  4341  0278  3080               	movlw	128
  4342  0279  00BD               	movwf	___flmul@prod+2
  4343  027A  01BC               	clrf	___flmul@prod+1
  4344  027B  01BB               	clrf	___flmul@prod
  4345  027C  2A9F               	goto	l1381
  4346  027D                     l6295:	
  4347  027D  1283               	bcf	3,5	;RP0=0, select bank0
  4348  027E  1303               	bcf	3,6	;RP1=0, select bank0
  4349  027F  0840               	movf	___flmul@temp+1,w
  4350  0280  3A80               	xorlw	128
  4351  0281  00FF               	movwf	127
  4352  0282  3080               	movlw	128
  4353  0283  027F               	subwf	127,w
  4354  0284  1D03               	skipz
  4355  0285  2A88               	goto	u5185
  4356  0286  3001               	movlw	1
  4357  0287  023F               	subwf	___flmul@temp,w
  4358  0288                     u5185:	
  4359  0288  1803               	skipnc
  4360  0289  2A92               	goto	l6301
  4361  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4362  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4363  028C  01BB               	clrf	___flmul@prod
  4364  028D  01BC               	clrf	___flmul@prod+1
  4365  028E  01BD               	clrf	___flmul@prod+2
  4366  028F  01BE               	clrf	___flmul@prod+3
  4367  0290  01B4               	clrf	___flmul@sign
  4368  0291  2A9F               	goto	l1381
  4369  0292                     l6301:	
  4370  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0294  083F               	movf	___flmul@temp,w
  4373  0295  00B6               	movwf	___flmul@bexp
  4374  0296  307F               	movlw	127
  4375  0297  05BD               	andwf	___flmul@prod+2,f
  4376  0298  3000               	movlw	0
  4377  0299  01BE               	clrf	___flmul@prod+3
  4378  029A  1836               	btfsc	___flmul@bexp,0
  4379  029B  17BD               	bsf	___flmul@prod+2,7
  4380  029C  1003               	clrc
  4381  029D  0C36               	rrf	___flmul@bexp,w
  4382  029E  00BE               	movwf	___flmul@prod+3
  4383  029F                     l1381:	
  4384  029F  0834               	movf	___flmul@sign,w
  4385  02A0  04BE               	iorwf	___flmul@prod+3,f
  4386  02A1  083E               	movf	___flmul@prod+3,w
  4387  02A2  00AB               	movwf	?___flmul+3
  4388  02A3  083D               	movf	___flmul@prod+2,w
  4389  02A4  00AA               	movwf	?___flmul+2
  4390  02A5  083C               	movf	___flmul@prod+1,w
  4391  02A6  00A9               	movwf	?___flmul+1
  4392  02A7  083B               	movf	___flmul@prod,w
  4393  02A8  00A8               	movwf	?___flmul
  4394  02A9  0008               	return
  4395  02AA                     __end_of___flmul:	
  4396  02AA                     __ptext20:	
  4397 ;; *************** function __Umul8_16 *****************
  4398 ;; Defined at:
  4399 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  multiplier      1    wreg     unsigned char 
  4402 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4405 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  4406 ;;  product         2    3[BANK0 ] unsigned int 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  2    0[BANK0 ] unsigned int 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 300/0
  4413 ;;		On exit  : 300/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4416 ;;      Params:         0       3       0       0       0
  4417 ;;      Locals:         0       5       0       0       0
  4418 ;;      Temps:          0       0       0       0       0
  4419 ;;      Totals:         0       8       0       0       0
  4420 ;;Total ram usage:        8 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		___flmul
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function __Umul8_16
  4432  02AA                     __Umul8_16:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4436                           ;__Umul8_16@multiplier stored from wreg
  4437  02AA  00A7               	movwf	__Umul8_16@multiplier
  4438  02AB  01A3               	clrf	__Umul8_16@product
  4439  02AC  01A4               	clrf	__Umul8_16@product+1
  4440  02AD  0820               	movf	__Umul8_16@multiplicand,w
  4441  02AE  00A5               	movwf	__Umul8_16@word_mpld
  4442  02AF  01A6               	clrf	__Umul8_16@word_mpld+1
  4443  02B0                     l5817:	
  4444  02B0  1C27               	btfss	__Umul8_16@multiplier,0
  4445  02B1  2AB8               	goto	l5821
  4446  02B2  0825               	movf	__Umul8_16@word_mpld,w
  4447  02B3  07A3               	addwf	__Umul8_16@product,f
  4448  02B4  1803               	skipnc
  4449  02B5  0AA4               	incf	__Umul8_16@product+1,f
  4450  02B6  0826               	movf	__Umul8_16@word_mpld+1,w
  4451  02B7  07A4               	addwf	__Umul8_16@product+1,f
  4452  02B8                     l5821:	
  4453  02B8  1003               	clrc
  4454  02B9  0DA5               	rlf	__Umul8_16@word_mpld,f
  4455  02BA  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  4456  02BB  1003               	clrc
  4457  02BC  0CA7               	rrf	__Umul8_16@multiplier,f
  4458  02BD  0827               	movf	__Umul8_16@multiplier,w
  4459  02BE  1D03               	btfss	3,2
  4460  02BF  2AB0               	goto	l5817
  4461  02C0  0824               	movf	__Umul8_16@product+1,w
  4462  02C1  00A1               	movwf	?__Umul8_16+1
  4463  02C2  0823               	movf	__Umul8_16@product,w
  4464  02C3  00A0               	movwf	?__Umul8_16
  4465  02C4  0008               	return
  4466  02C5                     __end_of__Umul8_16:	
  4467  02C5                     __ptext9:	
  4468 ;; *************** function ___xxtofl *****************
  4469 ;; Defined at:
  4470 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  sign            1    wreg     unsigned char 
  4473 ;;  val             4    0[BANK0 ] long 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  sign            1    8[BANK0 ] unsigned char 
  4476 ;;  arg             4   10[BANK0 ] unsigned long 
  4477 ;;  exp             1    9[BANK0 ] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  4    0[BANK0 ] unsigned char 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 300/0
  4484 ;;		On exit  : 300/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       4       0       0       0
  4488 ;;      Locals:         0       6       0       0       0
  4489 ;;      Temps:          0       4       0       0       0
  4490 ;;      Totals:         0      14       0       0       0
  4491 ;;Total ram usage:       14 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_mediaLeituraPt100Umidadde
  4498 ;;		_ADC_Media_10bits
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function ___xxtofl
  4504  02C5                     ___xxtofl:	
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4508                           ;___xxtofl@sign stored from wreg
  4509  02C5  00A8               	movwf	___xxtofl@sign
  4510  02C6  0828               	movf	___xxtofl@sign,w
  4511  02C7  1D03               	btfss	3,2
  4512  02C8  1FA3               	btfss	___xxtofl@val+3,7
  4513  02C9  2ADA               	goto	l4157
  4514  02CA  0920               	comf	___xxtofl@val,w
  4515  02CB  00AA               	movwf	___xxtofl@arg
  4516  02CC  0921               	comf	___xxtofl@val+1,w
  4517  02CD  00AB               	movwf	___xxtofl@arg+1
  4518  02CE  0922               	comf	___xxtofl@val+2,w
  4519  02CF  00AC               	movwf	___xxtofl@arg+2
  4520  02D0  0923               	comf	___xxtofl@val+3,w
  4521  02D1  00AD               	movwf	___xxtofl@arg+3
  4522  02D2  0AAA               	incf	___xxtofl@arg,f
  4523  02D3  1903               	skipnz
  4524  02D4  0AAB               	incf	___xxtofl@arg+1,f
  4525  02D5  1903               	skipnz
  4526  02D6  0AAC               	incf	___xxtofl@arg+2,f
  4527  02D7  1903               	skipnz
  4528  02D8  0AAD               	incf	___xxtofl@arg+3,f
  4529  02D9  2AE2               	goto	l1407
  4530  02DA                     l4157:	
  4531  02DA  0823               	movf	___xxtofl@val+3,w
  4532  02DB  00AD               	movwf	___xxtofl@arg+3
  4533  02DC  0822               	movf	___xxtofl@val+2,w
  4534  02DD  00AC               	movwf	___xxtofl@arg+2
  4535  02DE  0821               	movf	___xxtofl@val+1,w
  4536  02DF  00AB               	movwf	___xxtofl@arg+1
  4537  02E0  0820               	movf	___xxtofl@val,w
  4538  02E1  00AA               	movwf	___xxtofl@arg
  4539  02E2                     l1407:	
  4540  02E2  0823               	movf	___xxtofl@val+3,w
  4541  02E3  0422               	iorwf	___xxtofl@val+2,w
  4542  02E4  0421               	iorwf	___xxtofl@val+1,w
  4543  02E5  0420               	iorwf	___xxtofl@val,w
  4544  02E6  1D03               	skipz
  4545  02E7  2AED               	goto	l4161
  4546  02E8  01A0               	clrf	?___xxtofl
  4547  02E9  01A1               	clrf	?___xxtofl+1
  4548  02EA  01A2               	clrf	?___xxtofl+2
  4549  02EB  01A3               	clrf	?___xxtofl+3
  4550  02EC  0008               	return
  4551  02ED                     l4161:	
  4552  02ED  3096               	movlw	150
  4553  02EE  00A9               	movwf	___xxtofl@exp
  4554  02EF                     l4165:	
  4555  02EF  30FE               	movlw	254
  4556  02F0  052D               	andwf	___xxtofl@arg+3,w
  4557  02F1  1903               	btfsc	3,2
  4558  02F2  2B03               	goto	l4169
  4559  02F3  0AA9               	incf	___xxtofl@exp,f
  4560  02F4  23D0  120A  118A   	fcall	PL48	;call to abstracted procedure
  4561  02F7  2AEF               	goto	l4165
  4562  02F8                     l4167:	
  4563  02F8  0AA9               	incf	___xxtofl@exp,f
  4564  02F9  0AAA               	incf	___xxtofl@arg,f
  4565  02FA  1903               	skipnz
  4566  02FB  0AAB               	incf	___xxtofl@arg+1,f
  4567  02FC  1903               	skipnz
  4568  02FD  0AAC               	incf	___xxtofl@arg+2,f
  4569  02FE  1903               	skipnz
  4570  02FF  0AAD               	incf	___xxtofl@arg+3,f
  4571  0300  23D0  120A  118A   	fcall	PL48	;call to abstracted procedure
  4572  0303                     l4169:	
  4573  0303  30FF               	movlw	255
  4574  0304  052D               	andwf	___xxtofl@arg+3,w
  4575  0305  1903               	btfsc	3,2
  4576  0306  2B12               	goto	l4173
  4577  0307  2AF8               	goto	l4167
  4578  0308                     l4175:	
  4579  0308  3002               	movlw	2
  4580  0309  0229               	subwf	___xxtofl@exp,w
  4581  030A  1C03               	btfss	3,0
  4582  030B  2B14               	goto	l1420
  4583  030C  03A9               	decf	___xxtofl@exp,f
  4584  030D  1003               	clrc
  4585  030E  0DAA               	rlf	___xxtofl@arg,f
  4586  030F  0DAB               	rlf	___xxtofl@arg+1,f
  4587  0310  0DAC               	rlf	___xxtofl@arg+2,f
  4588  0311  0DAD               	rlf	___xxtofl@arg+3,f
  4589  0312                     l4173:	
  4590  0312  1FAC               	btfss	___xxtofl@arg+2,7
  4591  0313  2B08               	goto	l4175
  4592  0314                     l1420:	
  4593  0314  1C29               	btfss	___xxtofl@exp,0
  4594  0315  13AC               	bcf	___xxtofl@arg+2,7
  4595  0316  1003               	clrc
  4596  0317  0CA9               	rrf	___xxtofl@exp,f
  4597  0318  0829               	movf	___xxtofl@exp,w
  4598  0319  00A7               	movwf	??___xxtofl+3
  4599  031A  01A6               	clrf	??___xxtofl+2
  4600  031B  01A5               	clrf	??___xxtofl+1
  4601  031C  01A4               	clrf	??___xxtofl
  4602  031D  0824               	movf	??___xxtofl,w
  4603  031E  04AA               	iorwf	___xxtofl@arg,f
  4604  031F  0825               	movf	??___xxtofl+1,w
  4605  0320  04AB               	iorwf	___xxtofl@arg+1,f
  4606  0321  0826               	movf	??___xxtofl+2,w
  4607  0322  04AC               	iorwf	___xxtofl@arg+2,f
  4608  0323  0827               	movf	??___xxtofl+3,w
  4609  0324  04AD               	iorwf	___xxtofl@arg+3,f
  4610  0325  0828               	movf	___xxtofl@sign,w
  4611  0326  1D03               	btfss	3,2
  4612  0327  1FA3               	btfss	___xxtofl@val+3,7
  4613  0328  2B2A               	goto	l4187
  4614  0329  17AD               	bsf	___xxtofl@arg+3,7
  4615  032A                     l4187:	
  4616  032A  082D               	movf	___xxtofl@arg+3,w
  4617  032B  00A3               	movwf	?___xxtofl+3
  4618  032C  082C               	movf	___xxtofl@arg+2,w
  4619  032D  00A2               	movwf	?___xxtofl+2
  4620  032E  082B               	movf	___xxtofl@arg+1,w
  4621  032F  00A1               	movwf	?___xxtofl+1
  4622  0330  082A               	movf	___xxtofl@arg,w
  4623  0331  00A0               	movwf	?___xxtofl
  4624  0332  0008               	return
  4625  0333                     __end_of___xxtofl:	
  4626  0333                     __ptext7:	
  4627 ;; *************** function _my_delay_ms *****************
  4628 ;; Defined at:
  4629 ;;		line 5 in file "my_delay.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  time            4    0[BANK0 ] long 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  i               4    6[BANK0 ] long 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, btemp+1
  4638 ;; Tracked objects:
  4639 ;;		On entry : 300/0
  4640 ;;		On exit  : 300/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       4       0       0       0
  4644 ;;      Locals:         0       4       0       0       0
  4645 ;;      Temps:          0       2       0       0       0
  4646 ;;      Totals:         0      10       0       0       0
  4647 ;;Total ram usage:       10 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_mediaLeituraPt100Umidadde
  4654 ;;		_ADC_Media_10bits
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _my_delay_ms
  4660  0333                     _my_delay_ms:	
  4661                           
  4662                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  4666  0333  01A6               	clrf	my_delay_ms@i
  4667  0334  01A7               	clrf	my_delay_ms@i+1
  4668  0335  01A8               	clrf	my_delay_ms@i+2
  4669  0336  01A9               	clrf	my_delay_ms@i+3
  4670  0337                     l3863:	
  4671  0337  0829               	movf	my_delay_ms@i+3,w
  4672  0338  3A80               	xorlw	128
  4673  0339  00FF               	movwf	127
  4674  033A  0823               	movf	my_delay_ms@time+3,w
  4675  033B  3A80               	xorlw	128
  4676  033C  027F               	subwf	127,w
  4677  033D  1D03               	skipz
  4678  033E  2B49               	goto	u2483
  4679  033F  0822               	movf	my_delay_ms@time+2,w
  4680  0340  0228               	subwf	my_delay_ms@i+2,w
  4681  0341  1D03               	skipz
  4682  0342  2B49               	goto	u2483
  4683  0343  0821               	movf	my_delay_ms@time+1,w
  4684  0344  0227               	subwf	my_delay_ms@i+1,w
  4685  0345  1D03               	skipz
  4686  0346  2B49               	goto	u2483
  4687  0347  0820               	movf	my_delay_ms@time,w
  4688  0348  0226               	subwf	my_delay_ms@i,w
  4689  0349                     u2483:	
  4690  0349  1803               	btfsc	3,0
  4691  034A  0008               	return
  4692                           
  4693                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4694  034B  3003               	movlw	3
  4695  034C  1283               	bcf	3,5	;RP0=0, select bank0
  4696  034D  1303               	bcf	3,6	;RP1=0, select bank0
  4697  034E  00A5               	movwf	??_my_delay_ms+1
  4698  034F  3097               	movlw	151
  4699  0350  00A4               	movwf	??_my_delay_ms
  4700  0351                     u5447:	
  4701  0351  0BA4               	decfsz	??_my_delay_ms,f
  4702  0352  2B51               	goto	u5447
  4703  0353  0BA5               	decfsz	??_my_delay_ms+1,f
  4704  0354  2B51               	goto	u5447
  4705                           
  4706                           ;my_delay.c: 10:             }
  4707  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4709  0357  0AA6               	incf	my_delay_ms@i,f
  4710  0358  1903               	skipnz
  4711  0359  0AA7               	incf	my_delay_ms@i+1,f
  4712  035A  1903               	skipnz
  4713  035B  0AA8               	incf	my_delay_ms@i+2,f
  4714  035C  1903               	skipnz
  4715  035D  0AA9               	incf	my_delay_ms@i+3,f
  4716  035E  2B37               	goto	l3863
  4717  035F                     __end_of_my_delay_ms:	
  4718  035F                     PL2:	
  4719  035F  0821               	movf	?__Umul8_16+1,w
  4720  0360  00C0               	movwf	___flmul@temp+1
  4721  0361  0820               	movf	?__Umul8_16,w
  4722  0362  00BF               	movwf	___flmul@temp
  4723  0363  00B0               	movwf	??___flmul
  4724  0364  0840               	movf	___flmul@temp+1,w
  4725  0365  00B1               	movwf	??___flmul+1
  4726  0366  01B2               	clrf	??___flmul+2
  4727  0367  01B3               	clrf	??___flmul+3
  4728  0368  0830               	movf	??___flmul,w
  4729  0369  07B7               	addwf	___flmul@grs,f
  4730  036A  0831               	movf	??___flmul+1,w
  4731  036B  1103               	clrz
  4732  036C  1803               	skipnc
  4733  036D  3E01               	addlw	1
  4734  036E  1D03               	btfss	3,2
  4735  036F  07B8               	addwf	___flmul@grs+1,f
  4736  0370  0832               	movf	??___flmul+2,w
  4737  0371  1103               	clrz
  4738  0372  1803               	skipnc
  4739  0373  3E01               	addlw	1
  4740  0374  1D03               	btfss	3,2
  4741  0375  07B9               	addwf	___flmul@grs+2,f
  4742  0376  0833               	movf	??___flmul+3,w
  4743  0377  1103               	clrz
  4744  0378  0008               	return
  4745  0379                     __end_ofPL2:	
  4746  0379                     PL4:	
  4747  0379  00C0               	movwf	___flmul@temp+1
  4748  037A  0820               	movf	?__Umul8_16,w
  4749  037B  00BF               	movwf	___flmul@temp
  4750  037C  00B0               	movwf	??___flmul
  4751  037D  0840               	movf	___flmul@temp+1,w
  4752  037E  00B1               	movwf	??___flmul+1
  4753  037F  01B2               	clrf	??___flmul+2
  4754  0380  01B3               	clrf	??___flmul+3
  4755  0381  0008               	return
  4756  0382                     __end_ofPL4:	
  4757  0382                     PL6:	
  4758  0382  0830               	movf	??___flmul,w
  4759  0383  07BB               	addwf	___flmul@prod,f
  4760  0384  0831               	movf	??___flmul+1,w
  4761  0385  1103               	clrz
  4762  0386  1803               	skipnc
  4763  0387  3E01               	addlw	1
  4764  0388  1D03               	btfss	3,2
  4765  0389  07BC               	addwf	___flmul@prod+1,f
  4766  038A  0832               	movf	??___flmul+2,w
  4767  038B  1103               	clrz
  4768  038C  1803               	skipnc
  4769  038D  3E01               	addlw	1
  4770  038E  1D03               	btfss	3,2
  4771  038F  07BD               	addwf	___flmul@prod+2,f
  4772  0390  0833               	movf	??___flmul+3,w
  4773  0391  1103               	clrz
  4774  0392  0008               	return
  4775  0393                     __end_ofPL6:	
  4776  0393                     PL8:	
  4777  0393  0821               	movf	?__Umul8_16+1,w
  4778  0394  00C0               	movwf	___flmul@temp+1
  4779  0395  0820               	movf	?__Umul8_16,w
  4780  0396  00BF               	movwf	___flmul@temp
  4781  0397  07B7               	addwf	___flmul@grs,f
  4782  0398  3001               	movlw	1
  4783  0399  1803               	skipnc
  4784  039A  07B8               	addwf	___flmul@grs+1,f
  4785  039B  1803               	skipnc
  4786  039C  07B9               	addwf	___flmul@grs+2,f
  4787  039D  1803               	skipnc
  4788  039E  07BA               	addwf	___flmul@grs+3,f
  4789  039F  0840               	movf	___flmul@temp+1,w
  4790  03A0  07BB               	addwf	___flmul@prod,f
  4791  03A1  3401               	retlw	1
  4792  03A2                     __end_ofPL8:	
  4793  03A2                     PL10:	
  4794  03A2  1803               	skipnc
  4795  03A3  07BC               	addwf	___flmul@prod+1,f
  4796  03A4  1803               	skipnc
  4797  03A5  07BD               	addwf	___flmul@prod+2,f
  4798  03A6  1803               	skipnc
  4799  03A7  07BE               	addwf	___flmul@prod+3,f
  4800  03A8  0839               	movf	___flmul@grs+2,w
  4801  03A9  00BA               	movwf	___flmul@grs+3
  4802  03AA  0838               	movf	___flmul@grs+1,w
  4803  03AB  00B9               	movwf	___flmul@grs+2
  4804  03AC  0837               	movf	___flmul@grs,w
  4805  03AD  00B8               	movwf	___flmul@grs+1
  4806  03AE  01B7               	clrf	___flmul@grs
  4807  03AF  0008               	return
  4808  03B0                     __end_ofPL10:	
  4809  03B0                     PL14:	
  4810  03B0  082B               	movf	?___flmul+3,w
  4811  03B1  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  4812  03B2  082A               	movf	?___flmul+2,w
  4813  03B3  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  4814  03B4  0829               	movf	?___flmul+1,w
  4815  03B5  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  4816  03B6  0828               	movf	?___flmul,w
  4817  03B7  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  4818  03B8  3442               	retlw	66
  4819  03B9                     __end_ofPL14:	
  4820  03B9                     PL24:	
  4821  03B9  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  4822  03BA  00AF               	movwf	___flmul@a+3
  4823  03BB  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4824  03BC  00AE               	movwf	___flmul@a+2
  4825  03BD  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4826  03BE  00AD               	movwf	___flmul@a+1
  4827  03BF  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4828  03C0  00AC               	movwf	___flmul@a
  4829  03C1  0008               	return
  4830  03C2                     __end_ofPL24:	
  4831  03C2                     PL34:	
  4832  03C2  1803               	skipnc
  4833  03C3  3E01               	addlw	1
  4834  03C4  1D03               	btfss	3,2
  4835  03C5  07BE               	addwf	___flmul@prod+3,f
  4836  03C6  082A               	movf	___flmul@b+2,w
  4837  03C7  00A0               	movwf	__Umul8_16@multiplicand
  4838  03C8  0008               	return
  4839  03C9                     __end_ofPL34:	
  4840  03C9                     PL36:	
  4841  03C9  009F               	movwf	31	;volatile
  4842  03CA  01A0               	clrf	my_delay_ms@time
  4843  03CB  0AA0               	incf	my_delay_ms@time,f
  4844  03CC  01A1               	clrf	my_delay_ms@time+1
  4845  03CD  01A2               	clrf	my_delay_ms@time+2
  4846  03CE  01A3               	clrf	my_delay_ms@time+3
  4847  03CF  0008               	return
  4848  03D0                     __end_ofPL36:	
  4849  03D0                     PL48:	
  4850  03D0  1003               	clrc
  4851  03D1  0CAD               	rrf	___xxtofl@arg+3,f
  4852  03D2  0CAC               	rrf	___xxtofl@arg+2,f
  4853  03D3  0CAB               	rrf	___xxtofl@arg+1,f
  4854  03D4  0CAA               	rrf	___xxtofl@arg,f
  4855  03D5  0008               	return
  4856  03D6                     __end_ofPL48:	
  4857  03D6                     __ptext8:	
  4858 ;; *************** function _captura *****************
  4859 ;; Defined at:
  4860 ;;		line 123 in file "adc.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  2    0[BANK0 ] unsigned int 
  4867 ;; Registers used:
  4868 ;;		wreg
  4869 ;; Tracked objects:
  4870 ;;		On entry : 300/0
  4871 ;;		On exit  : 300/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4874 ;;      Params:         0       2       0       0       0
  4875 ;;      Locals:         0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0
  4877 ;;      Totals:         0       2       0       0       0
  4878 ;;Total ram usage:        2 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_ADC_Media_10bits
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _captura
  4890  03D6                     _captura:	
  4891                           
  4892                           ;adc.c: 124:     ADCON0bits.GO=1;
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _captura: [wreg]
  4896  03D6  149F               	bsf	31,1	;volatile
  4897  03D7                     l478:	
  4898                           ;adc.c: 128:           }
  4899                           
  4900                           
  4901                           ;adc.c: 125:     while(ADCON0bits.GO)
  4902  03D7  189F               	btfsc	31,1	;volatile
  4903  03D8  2BD7               	goto	l478
  4904                           
  4905                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  4906  03D9  081E               	movf	30,w	;volatile
  4907  03DA  00A1               	movwf	?_captura+1
  4908  03DB  01A0               	clrf	?_captura
  4909  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  4910  03DD  081E               	movf	30,w	;volatile
  4911  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  4912  03DF  07A0               	addwf	?_captura,f
  4913  03E0  1803               	skipnc
  4914  03E1  0AA1               	incf	?_captura+1,f
  4915  03E2  0008               	return
  4916  03E3                     __end_of_captura:	
  4917  03E3                     __ptext5:	
  4918 ;; *************** function _Package_Usart_is_for_me *****************
  4919 ;; Defined at:
  4920 ;;		line 8 in file "protocolo.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  retorno         1    0[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 300/0
  4931 ;;		On exit  : 300/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       0       0       0       0
  4935 ;;      Locals:         0       1       0       0       0
  4936 ;;      Temps:          0       0       0       0       0
  4937 ;;      Totals:         0       1       0       0       0
  4938 ;;Total ram usage:        1 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_mediaLeituraPt100Umidadde
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _Package_Usart_is_for_me
  4950  03E3                     _Package_Usart_is_for_me:	
  4951                           
  4952                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4956  03E3  1C6B               	btfss	_generic_status,0
  4957  03E4  2BF6               	goto	l4595
  4958                           
  4959                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4960  03E5  1683               	bsf	3,5	;RP0=1, select bank3
  4961  03E6  1703               	bsf	3,6	;RP1=1, select bank3
  4962  03E7  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  4963  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  4964  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  4965  03EA  0669               	xorwf	_Board_Number,w
  4966  03EB  1903               	skipnz
  4967  03EC  2BF1               	goto	l800
  4968  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  4969  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  4970  03EF  0F13               	incfsz	(_usart_buffer^(0+384)+3),w	;volatile
  4971  03F0  2BF6               	goto	l4595
  4972  03F1                     l800:	
  4973                           
  4974                           ;protocolo.c: 13:             retorno=1;
  4975  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4976  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4977  03F3  01A0               	clrf	Package_Usart_is_for_me@retorno
  4978  03F4  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4979  03F5  2BF9               	goto	l4599
  4980  03F6                     l4595:	
  4981                           
  4982                           ;protocolo.c: 15:             retorno=0;
  4983  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4984  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4985  03F8  01A0               	clrf	Package_Usart_is_for_me@retorno
  4986  03F9                     l4599:	
  4987                           
  4988                           ;protocolo.c: 21:      return retorno;
  4989  03F9  0820               	movf	Package_Usart_is_for_me@retorno,w
  4990  03FA  0008               	return
  4991  03FB                     __end_of_Package_Usart_is_for_me:	
  4992                           
  4993                           	psect	text10
  4994  143B                     __ptext10:	
  4995 ;; *************** function _USART_init *****************
  4996 ;; Defined at:
  4997 ;;		line 18 in file "usart.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  i               1    4[BANK0 ] unsigned char 
  5002 ;;  erro            1    0        unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 300/0
  5009 ;;		On exit  : 300/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5012 ;;      Params:         0       4       0       0       0
  5013 ;;      Locals:         0       1       0       0       0
  5014 ;;      Temps:          0       0       0       0       0
  5015 ;;      Totals:         0       5       0       0       0
  5016 ;;Total ram usage:        5 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_main
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function _USART_init
  5028  143B                     _USART_init:	
  5029                           
  5030                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5034  143B  304B               	movlw	75
  5035  143C  0621               	xorwf	USART_init@baudrate+1,w
  5036  143D  0420               	iorwf	USART_init@baudrate,w
  5037  143E  0422               	iorwf	USART_init@baudrate+2,w
  5038  143F  0423               	iorwf	USART_init@baudrate+3,w
  5039  1440  1D03               	btfss	3,2
  5040  1441  2C4C               	goto	l6343
  5041                           
  5042                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5043  1442  1798               	bsf	24,7	;volatile
  5044                           
  5045                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5046  1443  1618               	bsf	24,4	;volatile
  5047                           
  5048                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5049  1444  1683               	bsf	3,5	;RP0=1, select bank1
  5050  1445  1518               	bsf	24,2	;volatile
  5051                           
  5052                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5053  1446  1218               	bcf	24,4	;volatile
  5054                           
  5055                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5056  1447  1318               	bcf	24,6	;volatile
  5057                           
  5058                           ;usart.c: 32:           SPBRG =12;
  5059  1448  300C               	movlw	12
  5060  1449  0099               	movwf	25	;volatile
  5061                           
  5062                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5063  144A  170B               	bsf	11,6	;volatile
  5064  144B  2C65               	goto	L8
  5065  144C                     l6343:	
  5066                           ;usart.c: 35:           }
  5067                           
  5068                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5069                           
  5070  144C  30C2               	movlw	194
  5071  144D  0621               	xorwf	USART_init@baudrate+1,w
  5072  144E  1D03               	skipz
  5073  144F  2C66               	goto	l6363
  5074  1450  0322               	decf	USART_init@baudrate+2,w
  5075  1451  0420               	iorwf	USART_init@baudrate,w
  5076  1452  0423               	iorwf	USART_init@baudrate+3,w
  5077  1453  1D03               	btfss	3,2
  5078  1454  2C66               	goto	l6363
  5079                           
  5080                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5081  1455  3010               	movlw	16
  5082  1456  1683               	bsf	3,5	;RP0=1, select bank1
  5083  1457  0099               	movwf	25	;volatile
  5084                           
  5085                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5086  1458  1703               	bsf	3,6	;RP1=1, select bank3
  5087  1459  1587               	bsf	7,3	;volatile
  5088                           
  5089                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5090  145A  1303               	bcf	3,6	;RP1=0, select bank1
  5091  145B  1518               	bsf	24,2	;volatile
  5092                           
  5093                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5094  145C  1283               	bcf	3,5	;RP0=0, select bank0
  5095  145D  1798               	bsf	24,7	;volatile
  5096                           
  5097                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5098  145E  1683               	bsf	3,5	;RP0=1, select bank1
  5099  145F  1218               	bcf	24,4	;volatile
  5100                           
  5101                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5102  1460  1318               	bcf	24,6	;volatile
  5103                           
  5104                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5105  1461  1283               	bcf	3,5	;RP0=0, select bank0
  5106  1462  1618               	bsf	24,4	;volatile
  5107                           
  5108                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5109  1463  170B               	bsf	11,6	;volatile
  5110                           
  5111                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5112  1464  1683               	bsf	3,5	;RP0=1, select bank1
  5113  1465                     L8:	
  5114  1465  168C               	bsf	12,5	;volatile
  5115  1466                     l6363:	
  5116                           
  5117                           ;usart.c: 68:      TRISC6= 1;
  5118  1466  1683               	bsf	3,5	;RP0=1, select bank1
  5119  1467  1707               	bsf	7,6	;volatile
  5120                           
  5121                           ;usart.c: 69:      TRISC7= 1;
  5122  1468  1787               	bsf	7,7	;volatile
  5123                           
  5124                           ;usart.c: 71:      CREN=0;
  5125  1469  1283               	bcf	3,5	;RP0=0, select bank0
  5126  146A  1218               	bcf	24,4	;volatile
  5127                           
  5128                           ;usart.c: 72:      CREN=1;
  5129  146B  1618               	bsf	24,4	;volatile
  5130                           
  5131                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5132  146C  01A4               	clrf	USART_init@i
  5133  146D                     l6377:	
  5134  146D  081A               	movf	26,w	;volatile
  5135  146E  300F               	movlw	15
  5136  146F  0AA4               	incf	USART_init@i,f
  5137  1470  0224               	subwf	USART_init@i,w
  5138  1471  1803               	btfsc	3,0
  5139  1472  0008               	return
  5140  1473  2C6D               	goto	l6377
  5141  1474                     __end_of_USART_init:	
  5142                           
  5143                           	psect	text11
  5144  14C8                     __ptext11:	
  5145 ;; *************** function _I2C_Master_Init *****************
  5146 ;; Defined at:
  5147 ;;		line 7 in file "I2C.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  c               4   13[BANK0 ] const unsigned long 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, pclath, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 300/0
  5158 ;;		On exit  : 300/100
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       4       0       0       0
  5162 ;;      Locals:         0       0       0       0       0
  5163 ;;      Temps:          0       4       0       0       0
  5164 ;;      Totals:         0       8       0       0       0
  5165 ;;Total ram usage:        8 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    2
  5168 ;; This function calls:
  5169 ;;		___lldiv
  5170 ;; This function is called by:
  5171 ;;		_main
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _I2C_Master_Init
  5177  14C8                     _I2C_Master_Init:	
  5178                           
  5179                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5180                           
  5181                           ;incstack = 0
  5182                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5183  14C8  3028               	movlw	40
  5184  14C9  0094               	movwf	20	;volatile
  5185                           
  5186                           ;I2C.c: 11:   SSPCON2 = 0;
  5187  14CA  1683               	bsf	3,5	;RP0=1, select bank1
  5188  14CB  0191               	clrf	17	;volatile
  5189                           
  5190                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5191  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  5192  14CD  082D               	movf	I2C_Master_Init@c,w
  5193  14CE  00B1               	movwf	??_I2C_Master_Init
  5194  14CF  082E               	movf	I2C_Master_Init@c+1,w
  5195  14D0  00B2               	movwf	??_I2C_Master_Init+1
  5196  14D1  082F               	movf	I2C_Master_Init@c+2,w
  5197  14D2  00B3               	movwf	??_I2C_Master_Init+2
  5198  14D3  0830               	movf	I2C_Master_Init@c+3,w
  5199  14D4  00B4               	movwf	??_I2C_Master_Init+3
  5200  14D5  3002               	movlw	2
  5201  14D6                     u5205:	
  5202  14D6  1003               	clrc
  5203  14D7  0DB1               	rlf	??_I2C_Master_Init,f
  5204  14D8  0DB2               	rlf	??_I2C_Master_Init+1,f
  5205  14D9  0DB3               	rlf	??_I2C_Master_Init+2,f
  5206  14DA  0DB4               	rlf	??_I2C_Master_Init+3,f
  5207  14DB  3EFF               	addlw	-1
  5208  14DC  1D03               	skipz
  5209  14DD  2CD6               	goto	u5205
  5210  14DE  0834               	movf	??_I2C_Master_Init+3,w
  5211  14DF  00A3               	movwf	___lldiv@divisor+3
  5212  14E0  0833               	movf	??_I2C_Master_Init+2,w
  5213  14E1  00A2               	movwf	___lldiv@divisor+2
  5214  14E2  0832               	movf	??_I2C_Master_Init+1,w
  5215  14E3  00A1               	movwf	___lldiv@divisor+1
  5216  14E4  0831               	movf	??_I2C_Master_Init,w
  5217  14E5  00A0               	movwf	___lldiv@divisor
  5218  14E6  307A               	movlw	122
  5219  14E7  01A7               	clrf	___lldiv@dividend+3
  5220  14E8  00A6               	movwf	___lldiv@dividend+2
  5221  14E9  3012               	movlw	18
  5222  14EA  00A5               	movwf	___lldiv@dividend+1
  5223  14EB  01A4               	clrf	___lldiv@dividend
  5224  14EC  24F5               	fcall	___lldiv
  5225  14ED  0820               	movf	?___lldiv,w
  5226  14EE  3EFF               	addlw	255
  5227  14EF  1683               	bsf	3,5	;RP0=1, select bank1
  5228  14F0  0093               	movwf	19	;volatile
  5229                           
  5230                           ;I2C.c: 13:   SSPSTAT = 0;
  5231  14F1  0194               	clrf	20	;volatile
  5232                           
  5233                           ;I2C.c: 14:   TRISC3 = 1;
  5234  14F2  1587               	bsf	7,3	;volatile
  5235                           
  5236                           ;I2C.c: 15:   TRISC4 = 1;
  5237  14F3  1607               	bsf	7,4	;volatile
  5238  14F4  0008               	return
  5239  14F5                     __end_of_I2C_Master_Init:	
  5240  14F5                     __ptext12:	
  5241 ;; *************** function ___lldiv *****************
  5242 ;; Defined at:
  5243 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  divisor         4    0[BANK0 ] unsigned long 
  5246 ;;  dividend        4    4[BANK0 ] unsigned long 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  quotient        4    8[BANK0 ] unsigned long 
  5249 ;;  counter         1   12[BANK0 ] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4    0[BANK0 ] unsigned long 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 300/0
  5256 ;;		On exit  : 300/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         0       8       0       0       0
  5260 ;;      Locals:         0       5       0       0       0
  5261 ;;      Temps:          0       0       0       0       0
  5262 ;;      Totals:         0      13       0       0       0
  5263 ;;Total ram usage:       13 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_I2C_Master_Init
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function ___lldiv
  5275  14F5                     ___lldiv:	
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5279  14F5  01A8               	clrf	___lldiv@quotient
  5280  14F6  01A9               	clrf	___lldiv@quotient+1
  5281  14F7  01AA               	clrf	___lldiv@quotient+2
  5282  14F8  01AB               	clrf	___lldiv@quotient+3
  5283  14F9  0823               	movf	___lldiv@divisor+3,w
  5284  14FA  0422               	iorwf	___lldiv@divisor+2,w
  5285  14FB  0421               	iorwf	___lldiv@divisor+1,w
  5286  14FC  0420               	iorwf	___lldiv@divisor,w
  5287  14FD  1903               	skipnz
  5288  14FE  2D34               	goto	l6181
  5289  14FF  01AC               	clrf	___lldiv@counter
  5290  1500                     L9:	
  5291  1500  0AAC               	incf	___lldiv@counter,f
  5292  1501  1BA3               	btfsc	___lldiv@divisor+3,7
  5293  1502  2D09               	goto	l6169
  5294  1503  1003               	clrc
  5295  1504  0DA0               	rlf	___lldiv@divisor,f
  5296  1505  0DA1               	rlf	___lldiv@divisor+1,f
  5297  1506  0DA2               	rlf	___lldiv@divisor+2,f
  5298  1507  0DA3               	rlf	___lldiv@divisor+3,f
  5299  1508  2D00               	goto	L9
  5300  1509                     l6169:	
  5301  1509  1003               	clrc
  5302  150A  0DA8               	rlf	___lldiv@quotient,f
  5303  150B  0DA9               	rlf	___lldiv@quotient+1,f
  5304  150C  0DAA               	rlf	___lldiv@quotient+2,f
  5305  150D  0DAB               	rlf	___lldiv@quotient+3,f
  5306  150E  0823               	movf	___lldiv@divisor+3,w
  5307  150F  0227               	subwf	___lldiv@dividend+3,w
  5308  1510  1D03               	skipz
  5309  1511  2D1C               	goto	u4945
  5310  1512  0822               	movf	___lldiv@divisor+2,w
  5311  1513  0226               	subwf	___lldiv@dividend+2,w
  5312  1514  1D03               	skipz
  5313  1515  2D1C               	goto	u4945
  5314  1516  0821               	movf	___lldiv@divisor+1,w
  5315  1517  0225               	subwf	___lldiv@dividend+1,w
  5316  1518  1D03               	skipz
  5317  1519  2D1C               	goto	u4945
  5318  151A  0820               	movf	___lldiv@divisor,w
  5319  151B  0224               	subwf	___lldiv@dividend,w
  5320  151C                     u4945:	
  5321  151C  1C03               	skipc
  5322  151D  2D2E               	goto	L10
  5323  151E  0820               	movf	___lldiv@divisor,w
  5324  151F  02A4               	subwf	___lldiv@dividend,f
  5325  1520  0821               	movf	___lldiv@divisor+1,w
  5326  1521  1C03               	skipc
  5327  1522  0F21               	incfsz	___lldiv@divisor+1,w
  5328  1523  02A5               	subwf	___lldiv@dividend+1,f
  5329  1524  0822               	movf	___lldiv@divisor+2,w
  5330  1525  1C03               	skipc
  5331  1526  0F22               	incfsz	___lldiv@divisor+2,w
  5332  1527  02A6               	subwf	___lldiv@dividend+2,f
  5333  1528  0823               	movf	___lldiv@divisor+3,w
  5334  1529  1C03               	skipc
  5335  152A  0F23               	incfsz	___lldiv@divisor+3,w
  5336  152B  02A7               	subwf	___lldiv@dividend+3,f
  5337  152C  1428               	bsf	___lldiv@quotient,0
  5338  152D  1003               	clrc
  5339  152E                     L10:	
  5340  152E  0CA3               	rrf	___lldiv@divisor+3,f
  5341  152F  0CA2               	rrf	___lldiv@divisor+2,f
  5342  1530  0CA1               	rrf	___lldiv@divisor+1,f
  5343  1531  0CA0               	rrf	___lldiv@divisor,f
  5344  1532  0BAC               	decfsz	___lldiv@counter,f
  5345  1533  2D09               	goto	l6169
  5346  1534                     l6181:	
  5347  1534  082B               	movf	___lldiv@quotient+3,w
  5348  1535  00A3               	movwf	?___lldiv+3
  5349  1536  082A               	movf	___lldiv@quotient+2,w
  5350  1537  00A2               	movwf	?___lldiv+2
  5351  1538  0829               	movf	___lldiv@quotient+1,w
  5352  1539  00A1               	movwf	?___lldiv+1
  5353  153A  0828               	movf	___lldiv@quotient,w
  5354  153B  00A0               	movwf	?___lldiv
  5355  153C  0008               	return
  5356  153D                     __end_of___lldiv:	
  5357                           
  5358                           	psect	text14
  5359  1363                     __ptext14:	
  5360 ;; *************** function _strcpy *****************
  5361 ;; Defined at:
  5362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  to              1    wreg     PTR unsigned char 
  5365 ;;		 -> texto(16), 
  5366 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5367 ;;		 -> STR_2(1), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  to              1    2[BANK0 ] PTR unsigned char 
  5370 ;;		 -> texto(16), 
  5371 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  5372 ;;		 -> texto(16), 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      PTR unsigned char 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5377 ;; Tracked objects:
  5378 ;;		On entry : B00/0
  5379 ;;		On exit  : B00/800
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5382 ;;      Params:         0       1       0       0       0
  5383 ;;      Locals:         0       2       0       0       0
  5384 ;;      Temps:          0       1       0       0       0
  5385 ;;      Totals:         0       4       0       0       0
  5386 ;;Total ram usage:        4 bytes
  5387 ;; Hardware stack levels used:    2
  5388 ;; Hardware stack levels required when called:    1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_Decodify_Command
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _strcpy
  5398  1363                     _strcpy:	
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  5402                           ;strcpy@to stored from wreg
  5403  1363  00A2               	movwf	strcpy@to
  5404  1364  00A3               	movwf	strcpy@cp
  5405  1365                     l4539:	
  5406  1365  0820               	movf	strcpy@from,w
  5407  1366  0084               	movwf	4
  5408  1367  160A  118A  200A  160A  118A  	fcall	stringdir
  5409  136C  00A1               	movwf	??_strcpy
  5410  136D  0823               	movf	strcpy@cp,w
  5411  136E  0084               	movwf	4
  5412  136F  0821               	movf	??_strcpy,w
  5413  1370  1783               	bsf	3,7	;select IRP bank2
  5414  1371  0080               	movwf	0
  5415  1372  0800               	movf	0,w
  5416  1373  1903               	btfsc	3,2
  5417  1374  0008               	return
  5418  1375  0AA3               	incf	strcpy@cp,f
  5419  1376  0AA0               	incf	strcpy@from,f
  5420  1377  2B65               	goto	l4539
  5421  1378                     __end_of_strcpy:	
  5422                           
  5423                           	psect	text21
  5424  1474                     __ptext21:	
  5425 ;; *************** function _USART_to_Protocol *****************
  5426 ;; Defined at:
  5427 ;;		line 77 in file "usart.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  usart_protoc    1    wreg     PTR struct .
  5430 ;;		 -> usart_protocol(16), 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  5433 ;;		 -> usart_protocol(16), 
  5434 ;;  i               2    2[BANK0 ] int 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 300/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       0       0       0       0
  5445 ;;      Locals:         0       3       0       0       0
  5446 ;;      Temps:          0       2       0       0       0
  5447 ;;      Totals:         0       5       0       0       0
  5448 ;;Total ram usage:        5 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_Decodify_Command
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function _USART_to_Protocol
  5460  1474                     _USART_to_Protocol:	
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  5464                           ;USART_to_Protocol@usart_protocol stored from wreg
  5465  1474  00A4               	movwf	USART_to_Protocol@usart_protocol
  5466                           
  5467                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  5468  1475  0084               	movwf	4
  5469  1476  1683               	bsf	3,5	;RP0=1, select bank3
  5470  1477  1703               	bsf	3,6	;RP1=1, select bank3
  5471  1478  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  5472  1479  1383               	bcf	3,7	;select IRP bank0
  5473  147A  0080               	movwf	0
  5474  147B  0A84               	incf	4,f
  5475  147C  0810               	movf	_usart_buffer^(0+384),w	;volatile
  5476  147D  0080               	movwf	0
  5477                           
  5478                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  5479  147E  1283               	bcf	3,5	;RP0=0, select bank0
  5480  147F  1303               	bcf	3,6	;RP1=0, select bank0
  5481  1480  0824               	movf	USART_to_Protocol@usart_protocol,w
  5482  1481  3E02               	addlw	2
  5483  1482  0084               	movwf	4
  5484  1483  1683               	bsf	3,5	;RP0=1, select bank3
  5485  1484  1703               	bsf	3,6	;RP1=1, select bank3
  5486  1485  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  5487  1486  0080               	movwf	0
  5488                           
  5489                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  5490  1487  1283               	bcf	3,5	;RP0=0, select bank0
  5491  1488  1303               	bcf	3,6	;RP1=0, select bank0
  5492  1489  0824               	movf	USART_to_Protocol@usart_protocol,w
  5493  148A  3E03               	addlw	3
  5494  148B  0084               	movwf	4
  5495  148C  1683               	bsf	3,5	;RP0=1, select bank3
  5496  148D  1703               	bsf	3,6	;RP1=1, select bank3
  5497  148E  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5498  148F  0080               	movwf	0
  5499                           
  5500                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  5501  1490  1283               	bcf	3,5	;RP0=0, select bank0
  5502  1491  1303               	bcf	3,6	;RP1=0, select bank0
  5503  1492  0824               	movf	USART_to_Protocol@usart_protocol,w
  5504  1493  3E04               	addlw	4
  5505  1494  0084               	movwf	4
  5506  1495  1683               	bsf	3,5	;RP0=1, select bank3
  5507  1496  1703               	bsf	3,6	;RP1=1, select bank3
  5508  1497  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  5509  1498  0080               	movwf	0
  5510                           
  5511                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  5512  1499  1283               	bcf	3,5	;RP0=0, select bank0
  5513  149A  1303               	bcf	3,6	;RP1=0, select bank0
  5514  149B  0824               	movf	USART_to_Protocol@usart_protocol,w
  5515  149C  3E05               	addlw	5
  5516  149D  0084               	movwf	4
  5517  149E  1683               	bsf	3,5	;RP0=1, select bank3
  5518  149F  1703               	bsf	3,6	;RP1=1, select bank3
  5519  14A0  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  5520  14A1  0080               	movwf	0
  5521                           
  5522                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  5523  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5524  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5525  14A4  01A2               	clrf	USART_to_Protocol@i
  5526  14A5  01A3               	clrf	USART_to_Protocol@i+1
  5527  14A6                     l4479:	
  5528  14A6  0824               	movf	USART_to_Protocol@usart_protocol,w
  5529  14A7  3E05               	addlw	5
  5530  14A8  0084               	movwf	4
  5531  14A9  0823               	movf	USART_to_Protocol@i+1,w
  5532  14AA  3A80               	xorlw	128
  5533  14AB  00A0               	movwf	??_USART_to_Protocol
  5534  14AC  3080               	movlw	128
  5535  14AD  0220               	subwf	??_USART_to_Protocol,w
  5536  14AE  1D03               	skipz
  5537  14AF  2CB2               	goto	u3355
  5538  14B0  0800               	movf	0,w
  5539  14B1  0222               	subwf	USART_to_Protocol@i,w
  5540  14B2                     u3355:	
  5541  14B2  1803               	btfsc	3,0
  5542  14B3  0008               	return
  5543                           
  5544                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  5545  14B4  1283               	bcf	3,5	;RP0=0, select bank0
  5546  14B5  1303               	bcf	3,6	;RP1=0, select bank0
  5547  14B6  0822               	movf	USART_to_Protocol@i,w
  5548  14B7  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  5549  14B8  0084               	movwf	4
  5550  14B9  1783               	bsf	3,7	;select IRP bank3
  5551  14BA  0800               	movf	0,w
  5552  14BB  00A0               	movwf	??_USART_to_Protocol
  5553  14BC  0822               	movf	USART_to_Protocol@i,w
  5554  14BD  0724               	addwf	USART_to_Protocol@usart_protocol,w
  5555  14BE  00A1               	movwf	??_USART_to_Protocol+1
  5556  14BF  3E06               	addlw	6
  5557  14C0  0084               	movwf	4
  5558  14C1  0820               	movf	??_USART_to_Protocol,w
  5559  14C2  1383               	bcf	3,7	;select IRP bank0
  5560  14C3  0080               	movwf	0
  5561  14C4  0AA2               	incf	USART_to_Protocol@i,f
  5562  14C5  1903               	skipnz
  5563  14C6  0AA3               	incf	USART_to_Protocol@i+1,f
  5564  14C7  2CA6               	goto	l4479
  5565  14C8                     __end_of_USART_to_Protocol:	
  5566                           
  5567                           	psect	text22
  5568  13C3                     __ptext22:	
  5569 ;; *************** function _USART_put_buffer *****************
  5570 ;; Defined at:
  5571 ;;		line 99 in file "usart.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  vetor           1    wreg     PTR unsigned char 
  5574 ;;		 -> buffer(32), 
  5575 ;;  size            2    1[BANK0 ] unsigned int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  5578 ;;		 -> buffer(32), 
  5579 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  5580 ;;		 -> USART_put_buffer@vetor(1), 
  5581 ;;  loop            1    5[BANK0 ] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 300/0
  5588 ;;		On exit  : 300/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5591 ;;      Params:         0       2       0       0       0
  5592 ;;      Locals:         0       3       0       0       0
  5593 ;;      Temps:          0       2       0       0       0
  5594 ;;      Totals:         0       7       0       0       0
  5595 ;;Total ram usage:        7 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    2
  5598 ;; This function calls:
  5599 ;;		_USART_putc
  5600 ;; This function is called by:
  5601 ;;		_Decodify_Command
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _USART_put_buffer
  5607  13C3                     _USART_put_buffer:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5611                           ;USART_put_buffer@vetor stored from wreg
  5612  13C3  00A7               	movwf	USART_put_buffer@vetor
  5613  13C4  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  5614                           
  5615                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  5616  13C5  01A5               	clrf	USART_put_buffer@loop
  5617                           
  5618                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  5619  13C6  00A6               	movwf	USART_put_buffer@ptr
  5620  13C7                     l4519:	
  5621                           ;usart.c: 105:     while(loop<size)
  5622                           
  5623                           
  5624                           ;usart.c: 105:     while(loop<size)
  5625  13C7  0825               	movf	USART_put_buffer@loop,w
  5626  13C8  00A3               	movwf	??_USART_put_buffer
  5627  13C9  01A4               	clrf	??_USART_put_buffer+1
  5628  13CA  0822               	movf	USART_put_buffer@size+1,w
  5629  13CB  0224               	subwf	??_USART_put_buffer+1,w
  5630  13CC  1D03               	skipz
  5631  13CD  2BD0               	goto	u3385
  5632  13CE  0821               	movf	USART_put_buffer@size,w
  5633  13CF  0223               	subwf	??_USART_put_buffer,w
  5634  13D0                     u3385:	
  5635  13D0  1803               	btfsc	3,0
  5636  13D1  0008               	return
  5637                           
  5638                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  5639  13D2  0826               	movf	USART_put_buffer@ptr,w
  5640  13D3  0084               	movwf	4
  5641  13D4  1383               	bcf	3,7	;select IRP bank0
  5642  13D5  0800               	movf	0,w
  5643  13D6  120A  158A  23D3  160A  118A  	fcall	_USART_putc
  5644                           
  5645                           ;usart.c: 108:         ptr++;
  5646  13DB  1283               	bcf	3,5	;RP0=0, select bank0
  5647  13DC  0AA6               	incf	USART_put_buffer@ptr,f
  5648                           
  5649                           ;usart.c: 109:         loop++;
  5650  13DD  0AA5               	incf	USART_put_buffer@loop,f
  5651  13DE  2BC7               	goto	l4519
  5652  13DF                     __end_of_USART_put_buffer:	
  5653                           
  5654                           	psect	text24
  5655  1408                     __ptext24:	
  5656 ;; *************** function _Send_Reply_OK *****************
  5657 ;; Defined at:
  5658 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 200/100
  5669 ;;		On exit  : 300/100
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5672 ;;      Params:         0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0
  5675 ;;      Totals:         0       0       0       0       0
  5676 ;;Total ram usage:        0 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    3
  5679 ;; This function calls:
  5680 ;;		_USART_put_string
  5681 ;; This function is called by:
  5682 ;;		_Decodify_Command
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function _Send_Reply_OK
  5688  1408                     _Send_Reply_OK:	
  5689  1408                     l6085:	
  5690                           ;incstack = 0
  5691                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5692                           
  5693                           
  5694                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  5695  1408  3035               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5696  1409  1283               	bcf	3,5	;RP0=0, select bank0
  5697  140A  00A1               	movwf	USART_put_string@vetor
  5698  140B  3080               	movlw	128
  5699  140C  00A2               	movwf	USART_put_string@vetor+1
  5700  140D  2C0E               	ljmp	l5739
  5701  140E                     __end_of_Send_Reply_OK:	
  5702  140E                     __ptext25:	
  5703 ;; *************** function _USART_put_string *****************
  5704 ;; Defined at:
  5705 ;;		line 168 in file "usart.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  5708 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  5711 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 300/0
  5718 ;;		On exit  : 300/100
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         0       2       0       0       0
  5722 ;;      Locals:         0       2       0       0       0
  5723 ;;      Temps:          0       0       0       0       0
  5724 ;;      Totals:         0       4       0       0       0
  5725 ;;Total ram usage:        4 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    2
  5728 ;; This function calls:
  5729 ;;		_USART_putc
  5730 ;; This function is called by:
  5731 ;;		_Decodify_Command
  5732 ;;		_Send_Reply_OK
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _USART_put_string
  5738  140E                     _USART_put_string:	
  5739  140E                     l5739:	
  5740                           ;incstack = 0
  5741                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5742                           
  5743                           
  5744                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  5745  140E  0821               	movf	USART_put_string@vetor,w
  5746  140F  00A3               	movwf	USART_put_string@ptr
  5747  1410  0822               	movf	USART_put_string@vetor+1,w
  5748  1411  00A4               	movwf	USART_put_string@ptr+1
  5749  1412                     l5745:	
  5750                           ;usart.c: 172:     while(*(ptr)){
  5751                           
  5752                           
  5753                           ;usart.c: 172:     while(*(ptr)){
  5754  1412  0824               	movf	USART_put_string@ptr+1,w
  5755  1413  00FF               	movwf	127
  5756  1414  0823               	movf	USART_put_string@ptr,w
  5757  1415  0084               	movwf	4
  5758  1416  160A  118A  2000  160A  118A  	fcall	stringtab
  5759  141B  3A00               	xorlw	0
  5760  141C  1903               	btfsc	3,2
  5761  141D  2C31               	goto	l5747
  5762                           
  5763                           ;usart.c: 173:         USART_putc(*(ptr));
  5764  141E  0824               	movf	USART_put_string@ptr+1,w
  5765  141F  00FF               	movwf	127
  5766  1420  0823               	movf	USART_put_string@ptr,w
  5767  1421  0084               	movwf	4
  5768  1422  160A  118A  2000  160A  118A  	fcall	stringtab
  5769  1427  120A  158A  23D3  160A  118A  	fcall	_USART_putc
  5770                           
  5771                           ;usart.c: 174:         ptr++;
  5772  142C  1283               	bcf	3,5	;RP0=0, select bank0
  5773  142D  0AA3               	incf	USART_put_string@ptr,f
  5774  142E  1903               	skipnz
  5775  142F  0AA4               	incf	USART_put_string@ptr+1,f
  5776  1430  2C12               	goto	l5745
  5777  1431                     l5747:	
  5778                           
  5779                           ;usart.c: 176:     USART_putc(*(ptr));
  5780  1431  0824               	movf	USART_put_string@ptr+1,w
  5781  1432  00FF               	movwf	127
  5782  1433  0823               	movf	USART_put_string@ptr,w
  5783  1434  0084               	movwf	4
  5784  1435  160A  118A  2000   	fcall	stringtab
  5785  1438  120A  158A  2BD3   	ljmp	_USART_putc
  5786  143B                     __end_of_USART_put_string:	
  5787                           
  5788                           	psect	text29
  5789  13DF                     __ptext29:	
  5790 ;; *************** function _PROCULUS_VP_Write_String *****************
  5791 ;; Defined at:
  5792 ;;		line 205 in file "proculus.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  vp              2   19[BANK0 ] unsigned int 
  5795 ;;  text            1   21[BANK0 ] PTR unsigned char 
  5796 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 300/0
  5805 ;;		On exit  : 300/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         0       3       0       0       0
  5809 ;;      Locals:         0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0
  5811 ;;      Totals:         0       3       0       0       0
  5812 ;;Total ram usage:        3 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    4
  5815 ;; This function calls:
  5816 ;;		_PROCULUS_VP_Write
  5817 ;;		_strlen
  5818 ;; This function is called by:
  5819 ;;		_Decodify_Command
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           
  5824                           ;psect for function _PROCULUS_VP_Write_String
  5825  13DF                     _PROCULUS_VP_Write_String:	
  5826                           
  5827                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  5828                           
  5829                           ;incstack = 0
  5830                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5831  13DF  0834               	movf	PROCULUS_VP_Write_String@vp+1,w
  5832  13E0  00AE               	movwf	PROCULUS_VP_Write@vp+1
  5833  13E1  0833               	movf	PROCULUS_VP_Write_String@vp,w
  5834  13E2  00AD               	movwf	PROCULUS_VP_Write@vp
  5835  13E3  0835               	movf	PROCULUS_VP_Write_String@text,w
  5836  13E4  00AF               	movwf	PROCULUS_VP_Write@vetor
  5837  13E5  0835               	movf	PROCULUS_VP_Write_String@text,w
  5838  13E6  00A0               	movwf	strlen@s
  5839  13E7  01A1               	clrf	strlen@s+1
  5840  13E8  23EF               	fcall	_strlen
  5841  13E9  0820               	movf	?_strlen,w
  5842  13EA  3E01               	addlw	1
  5843  13EB  00B0               	movwf	PROCULUS_VP_Write@size
  5844  13EC  120A  158A  2833   	ljmp	l5781
  5845  13EF                     __end_of_PROCULUS_VP_Write_String:	
  5846  13EF                     __ptext30:	
  5847 ;; *************** function _strlen *****************
  5848 ;; Defined at:
  5849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5852 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  5855 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  2    0[BANK0 ] unsigned int 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 300/0
  5862 ;;		On exit  : 300/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       2       0       0       0
  5866 ;;      Locals:         0       2       0       0       0
  5867 ;;      Temps:          0       0       0       0       0
  5868 ;;      Totals:         0       4       0       0       0
  5869 ;;Total ram usage:        4 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_Decodify_Command
  5876 ;;		_PROCULUS_VP_Write_String
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _strlen
  5882  13EF                     _strlen:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5886  13EF  0820               	movf	strlen@s,w
  5887  13F0  00A2               	movwf	strlen@cp
  5888  13F1  0821               	movf	strlen@s+1,w
  5889  13F2  00A3               	movwf	strlen@cp+1
  5890  13F3                     l5753:	
  5891  13F3  0822               	movf	strlen@cp,w
  5892  13F4  0084               	movwf	4
  5893  13F5  1783               	bsf	3,7
  5894  13F6  1C23               	btfss	strlen@cp+1,0
  5895  13F7  1383               	bcf	3,7
  5896  13F8  0800               	movf	0,w
  5897  13F9  1903               	btfsc	3,2
  5898  13FA  2BFF               	goto	l5755
  5899  13FB  0AA2               	incf	strlen@cp,f
  5900  13FC  1903               	skipnz
  5901  13FD  0AA3               	incf	strlen@cp+1,f
  5902  13FE  2BF3               	goto	l5753
  5903  13FF                     l5755:	
  5904  13FF  0820               	movf	strlen@s,w
  5905  1400  0222               	subwf	strlen@cp,w
  5906  1401  00A0               	movwf	?_strlen
  5907  1402  0821               	movf	strlen@s+1,w
  5908  1403  1C03               	skipc
  5909  1404  0A21               	incf	strlen@s+1,w
  5910  1405  0223               	subwf	strlen@cp+1,w
  5911  1406  00A1               	movwf	?_strlen+1
  5912  1407  0008               	return
  5913  1408                     __end_of_strlen:	
  5914                           
  5915                           	psect	text33
  5916  15B7                     __ptext33:	
  5917 ;; *************** function _PROCULUS_Buzzer *****************
  5918 ;; Defined at:
  5919 ;;		line 223 in file "proculus.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  time_ms_x_10    2   17[BANK0 ] unsigned int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  vetor           2   19[BANK0 ] unsigned char [2]
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 300/0
  5930 ;;		On exit  : 300/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5933 ;;      Params:         0       2       0       0       0
  5934 ;;      Locals:         0       2       0       0       0
  5935 ;;      Temps:          0       0       0       0       0
  5936 ;;      Totals:         0       4       0       0       0
  5937 ;;Total ram usage:        4 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    4
  5940 ;; This function calls:
  5941 ;;		_PROCULUS_Control_Register_Write
  5942 ;;		___lwdiv
  5943 ;; This function is called by:
  5944 ;;		_Decodify_Command
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           
  5949                           ;psect for function _PROCULUS_Buzzer
  5950  15B7                     _PROCULUS_Buzzer:	
  5951                           
  5952                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5956  15B7  300A               	movlw	10
  5957  15B8  00A0               	movwf	___lwdiv@divisor
  5958  15B9  01A1               	clrf	___lwdiv@divisor+1
  5959  15BA  0832               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  5960  15BB  00A3               	movwf	___lwdiv@dividend+1
  5961  15BC  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  5962  15BD  00A2               	movwf	___lwdiv@dividend
  5963  15BE  261A               	fcall	___lwdiv
  5964  15BF  0821               	movf	?___lwdiv+1,w
  5965  15C0  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  5966  15C1  0820               	movf	?___lwdiv,w
  5967  15C2  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  5968                           
  5969                           ;proculus.c: 226:      vetor[0]=0x02;
  5970  15C3  3002               	movlw	2
  5971  15C4  00B3               	movwf	PROCULUS_Buzzer@vetor
  5972                           
  5973                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  5974  15C5  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  5975  15C6  00B4               	movwf	PROCULUS_Buzzer@vetor+1
  5976                           
  5977                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  5978  15C7  3002               	movlw	2
  5979  15C8  00AD               	movwf	PROCULUS_Control_Register_Write@size
  5980  15C9  3033               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  5981  15CA  120A  158A  2809   	ljmp	_PROCULUS_Control_Register_Write
  5982  15CD                     __end_of_PROCULUS_Buzzer:	
  5983  15CD                     __ptext17:	
  5984 ;; *************** function _utoa *****************
  5985 ;; Defined at:
  5986 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  buf             1    wreg     PTR unsigned char 
  5989 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  5990 ;;  val             2    7[BANK0 ] unsigned int 
  5991 ;;  base            2    9[BANK0 ] int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  5994 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  5995 ;;  v               2   11[BANK0 ] unsigned int 
  5996 ;;  c               1   13[BANK0 ] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      PTR unsigned char 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 300/0
  6003 ;;		On exit  : B00/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6006 ;;      Params:         0       4       0       0       0
  6007 ;;      Locals:         0       4       0       0       0
  6008 ;;      Temps:          0       0       0       0       0
  6009 ;;      Totals:         0       8       0       0       0
  6010 ;;Total ram usage:        8 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    2
  6013 ;; This function calls:
  6014 ;;		___lwdiv
  6015 ;;		___lwmod
  6016 ;; This function is called by:
  6017 ;;		_itoa
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _utoa
  6023  15CD                     _utoa:	
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6027                           ;utoa@buf stored from wreg
  6028  15CD  00AE               	movwf	utoa@buf
  6029  15CE  0828               	movf	utoa@val+1,w
  6030  15CF  00AC               	movwf	utoa@v+1
  6031  15D0  0827               	movf	utoa@val,w
  6032  15D1  00AB               	movwf	utoa@v
  6033  15D2                     l5831:	
  6034  15D2  082A               	movf	utoa@base+1,w
  6035  15D3  00A1               	movwf	___lwdiv@divisor+1
  6036  15D4  0829               	movf	utoa@base,w
  6037  15D5  00A0               	movwf	___lwdiv@divisor
  6038  15D6  082C               	movf	utoa@v+1,w
  6039  15D7  00A3               	movwf	___lwdiv@dividend+1
  6040  15D8  082B               	movf	utoa@v,w
  6041  15D9  00A2               	movwf	___lwdiv@dividend
  6042  15DA  261A  160A  118A   	fcall	___lwdiv
  6043  15DD  0821               	movf	?___lwdiv+1,w
  6044  15DE  00AC               	movwf	utoa@v+1
  6045  15DF  0820               	movf	?___lwdiv,w
  6046  15E0  00AB               	movwf	utoa@v
  6047  15E1  0AAE               	incf	utoa@buf,f
  6048  15E2  042C               	iorwf	utoa@v+1,w
  6049  15E3  1D03               	btfss	3,2
  6050  15E4  2DD2               	goto	l5831
  6051  15E5  082E               	movf	utoa@buf,w
  6052  15E6  0084               	movwf	4
  6053  15E7  1383               	bcf	3,7	;select IRP bank0
  6054  15E8  0180               	clrf	0
  6055  15E9  03AE               	decf	utoa@buf,f
  6056  15EA                     l5841:	
  6057  15EA  082A               	movf	utoa@base+1,w
  6058  15EB  00A1               	movwf	___lwmod@divisor+1
  6059  15EC  0829               	movf	utoa@base,w
  6060  15ED  00A0               	movwf	___lwmod@divisor
  6061  15EE  0828               	movf	utoa@val+1,w
  6062  15EF  00A3               	movwf	___lwmod@dividend+1
  6063  15F0  0827               	movf	utoa@val,w
  6064  15F1  00A2               	movwf	___lwmod@dividend
  6065  15F2  2644  160A  118A   	fcall	___lwmod
  6066  15F5  0820               	movf	?___lwmod,w
  6067  15F6  00AD               	movwf	utoa@c
  6068  15F7  082A               	movf	utoa@base+1,w
  6069  15F8  00A1               	movwf	___lwdiv@divisor+1
  6070  15F9  0829               	movf	utoa@base,w
  6071  15FA  00A0               	movwf	___lwdiv@divisor
  6072  15FB  0828               	movf	utoa@val+1,w
  6073  15FC  00A3               	movwf	___lwdiv@dividend+1
  6074  15FD  0827               	movf	utoa@val,w
  6075  15FE  00A2               	movwf	___lwdiv@dividend
  6076  15FF  261A  160A  118A   	fcall	___lwdiv
  6077  1602  0821               	movf	?___lwdiv+1,w
  6078  1603  00A8               	movwf	utoa@val+1
  6079  1604  0820               	movf	?___lwdiv,w
  6080  1605  00A7               	movwf	utoa@val
  6081  1606  300A               	movlw	10
  6082  1607  022D               	subwf	utoa@c,w
  6083  1608  1C03               	skipc
  6084  1609  2E0C               	goto	l1434
  6085  160A  3007               	movlw	7
  6086  160B  07AD               	addwf	utoa@c,f
  6087  160C                     l1434:	
  6088  160C  3030               	movlw	48
  6089  160D  07AD               	addwf	utoa@c,f
  6090  160E  082E               	movf	utoa@buf,w
  6091  160F  0084               	movwf	4
  6092  1610  082D               	movf	utoa@c,w
  6093  1611  1383               	bcf	3,7	;select IRP bank0
  6094  1612  0080               	movwf	0
  6095  1613  03AE               	decf	utoa@buf,f
  6096  1614  0827               	movf	utoa@val,w
  6097  1615  0428               	iorwf	utoa@val+1,w
  6098  1616  1D03               	btfss	3,2
  6099  1617  2DEA               	goto	l5841
  6100                           
  6101                           ;	Return value of _utoa is never used
  6102  1618  0AAE               	incf	utoa@buf,f
  6103  1619  0008               	return
  6104  161A                     __end_of_utoa:	
  6105  161A                     __ptext34:	
  6106 ;; *************** function ___lwdiv *****************
  6107 ;; Defined at:
  6108 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  divisor         2    0[BANK0 ] unsigned int 
  6111 ;;  dividend        2    2[BANK0 ] unsigned int 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  quotient        2    5[BANK0 ] unsigned int 
  6114 ;;  counter         1    4[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2    0[BANK0 ] unsigned int 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 300/0
  6121 ;;		On exit  : 300/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6124 ;;      Params:         0       4       0       0       0
  6125 ;;      Locals:         0       3       0       0       0
  6126 ;;      Temps:          0       0       0       0       0
  6127 ;;      Totals:         0       7       0       0       0
  6128 ;;Total ram usage:        7 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_ADC_Media_10bits
  6135 ;;		_PROCULUS_Buzzer
  6136 ;;		_utoa
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function ___lwdiv
  6142  161A                     ___lwdiv:	
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6146  161A  01A5               	clrf	___lwdiv@quotient
  6147  161B  01A6               	clrf	___lwdiv@quotient+1
  6148  161C  0820               	movf	___lwdiv@divisor,w
  6149  161D  0421               	iorwf	___lwdiv@divisor+1,w
  6150  161E  1903               	btfsc	3,2
  6151  161F  2E3F               	goto	l5615
  6152  1620  01A4               	clrf	___lwdiv@counter
  6153  1621                     L18:	
  6154  1621  0AA4               	incf	___lwdiv@counter,f
  6155  1622  1BA1               	btfsc	___lwdiv@divisor+1,7
  6156  1623  2E28               	goto	l5603
  6157  1624  1003               	clrc
  6158  1625  0DA0               	rlf	___lwdiv@divisor,f
  6159  1626  0DA1               	rlf	___lwdiv@divisor+1,f
  6160  1627  2E21               	goto	L18
  6161  1628                     l5603:	
  6162  1628  1003               	clrc
  6163  1629  0DA5               	rlf	___lwdiv@quotient,f
  6164  162A  0DA6               	rlf	___lwdiv@quotient+1,f
  6165  162B  0821               	movf	___lwdiv@divisor+1,w
  6166  162C  0223               	subwf	___lwdiv@dividend+1,w
  6167  162D  1D03               	skipz
  6168  162E  2E31               	goto	u4495
  6169  162F  0820               	movf	___lwdiv@divisor,w
  6170  1630  0222               	subwf	___lwdiv@dividend,w
  6171  1631                     u4495:	
  6172  1631  1C03               	skipc
  6173  1632  2E3B               	goto	L19
  6174  1633  0820               	movf	___lwdiv@divisor,w
  6175  1634  02A2               	subwf	___lwdiv@dividend,f
  6176  1635  0821               	movf	___lwdiv@divisor+1,w
  6177  1636  1C03               	skipc
  6178  1637  03A3               	decf	___lwdiv@dividend+1,f
  6179  1638  02A3               	subwf	___lwdiv@dividend+1,f
  6180  1639  1425               	bsf	___lwdiv@quotient,0
  6181  163A  1003               	clrc
  6182  163B                     L19:	
  6183  163B  0CA1               	rrf	___lwdiv@divisor+1,f
  6184  163C  0CA0               	rrf	___lwdiv@divisor,f
  6185  163D  0BA4               	decfsz	___lwdiv@counter,f
  6186  163E  2E28               	goto	l5603
  6187  163F                     l5615:	
  6188  163F  0826               	movf	___lwdiv@quotient+1,w
  6189  1640  00A1               	movwf	?___lwdiv+1
  6190  1641  0825               	movf	___lwdiv@quotient,w
  6191  1642  00A0               	movwf	?___lwdiv
  6192  1643  0008               	return
  6193  1644                     __end_of___lwdiv:	
  6194  1644                     __ptext18:	
  6195 ;; *************** function ___lwmod *****************
  6196 ;; Defined at:
  6197 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  divisor         2    0[BANK0 ] unsigned int 
  6200 ;;  dividend        2    2[BANK0 ] unsigned int 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  counter         1    4[BANK0 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  2    0[BANK0 ] unsigned int 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 300/0
  6209 ;;		On exit  : 300/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6212 ;;      Params:         0       4       0       0       0
  6213 ;;      Locals:         0       1       0       0       0
  6214 ;;      Temps:          0       0       0       0       0
  6215 ;;      Totals:         0       5       0       0       0
  6216 ;;Total ram usage:        5 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_utoa
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function ___lwmod
  6228  1644                     ___lwmod:	
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6232  1644  0820               	movf	___lwmod@divisor,w
  6233  1645  0421               	iorwf	___lwmod@divisor+1,w
  6234  1646  1903               	btfsc	3,2
  6235  1647  2E63               	goto	l5635
  6236  1648  01A4               	clrf	___lwmod@counter
  6237  1649                     L15:	
  6238  1649  0AA4               	incf	___lwmod@counter,f
  6239  164A  1BA1               	btfsc	___lwmod@divisor+1,7
  6240  164B  2E50               	goto	l5627
  6241  164C  1003               	clrc
  6242  164D  0DA0               	rlf	___lwmod@divisor,f
  6243  164E  0DA1               	rlf	___lwmod@divisor+1,f
  6244  164F  2E49               	goto	L15
  6245  1650                     l5627:	
  6246  1650  0821               	movf	___lwmod@divisor+1,w
  6247  1651  0223               	subwf	___lwmod@dividend+1,w
  6248  1652  1D03               	skipz
  6249  1653  2E56               	goto	u4535
  6250  1654  0820               	movf	___lwmod@divisor,w
  6251  1655  0222               	subwf	___lwmod@dividend,w
  6252  1656                     u4535:	
  6253  1656  1C03               	skipc
  6254  1657  2E5F               	goto	L16
  6255  1658  0820               	movf	___lwmod@divisor,w
  6256  1659  02A2               	subwf	___lwmod@dividend,f
  6257  165A  0821               	movf	___lwmod@divisor+1,w
  6258  165B  1C03               	skipc
  6259  165C  03A3               	decf	___lwmod@dividend+1,f
  6260  165D  02A3               	subwf	___lwmod@dividend+1,f
  6261  165E  1003               	clrc
  6262  165F                     L16:	
  6263  165F  0CA1               	rrf	___lwmod@divisor+1,f
  6264  1660  0CA0               	rrf	___lwmod@divisor,f
  6265  1661  0BA4               	decfsz	___lwmod@counter,f
  6266  1662  2E50               	goto	l5627
  6267  1663                     l5635:	
  6268  1663  0823               	movf	___lwmod@dividend+1,w
  6269  1664  00A1               	movwf	?___lwmod+1
  6270  1665  0822               	movf	___lwmod@dividend,w
  6271  1666  00A0               	movwf	?___lwmod
  6272  1667  0008               	return
  6273  1668                     __end_of___lwmod:	
  6274                           
  6275                           	psect	text35
  6276  0809                     __ptext35:	
  6277 ;; *************** function _PROCULUS_Control_Register_Write *****************
  6278 ;; Defined at:
  6279 ;;		line 13 in file "proculus.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  vetor           1    wreg     PTR unsigned char 
  6282 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6283 ;;  size            1   13[BANK0 ] unsigned char 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  vetor           1   15[BANK0 ] PTR unsigned char 
  6286 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6287 ;;  i               1   16[BANK0 ] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 300/0
  6294 ;;		On exit  : 300/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6297 ;;      Params:         0       1       0       0       0
  6298 ;;      Locals:         0       2       0       0       0
  6299 ;;      Temps:          0       1       0       0       0
  6300 ;;      Totals:         0       4       0       0       0
  6301 ;;Total ram usage:        4 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    3
  6304 ;; This function calls:
  6305 ;;		_PROCULUS_Delay
  6306 ;;		_USART_put_int
  6307 ;;		_USART_putc
  6308 ;; This function is called by:
  6309 ;;		_PROCULUS_Buzzer
  6310 ;;		_PROCULUS_Show_Screen
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           
  6315                           ;psect for function _PROCULUS_Control_Register_Write
  6316  0809                     _PROCULUS_Control_Register_Write:	
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  6320                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  6321  0809  00AF               	movwf	PROCULUS_Control_Register_Write@vetor
  6322                           
  6323                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  6324  080A  30A5               	movlw	165
  6325  080B  00AA               	movwf	USART_put_int@value
  6326  080C  305A               	movlw	90
  6327  080D  00AB               	movwf	USART_put_int@value+1
  6328  080E  2782  120A  158A   	fcall	_USART_put_int
  6329                           
  6330                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  6331  0811  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0812  082D               	movf	PROCULUS_Control_Register_Write@size,w
  6333  0813  3E01               	addlw	1
  6334  0814  23D3  120A  158A   	fcall	_USART_putc
  6335                           
  6336                           ;proculus.c: 16:      USART_putc(0x80);
  6337  0817  3080               	movlw	128
  6338  0818  23D3  120A  158A   	fcall	_USART_putc
  6339                           
  6340                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  6341  081B  1283               	bcf	3,5	;RP0=0, select bank0
  6342  081C  01B0               	clrf	PROCULUS_Control_Register_Write@i
  6343  081D                     l5777:	
  6344  081D  082D               	movf	PROCULUS_Control_Register_Write@size,w
  6345  081E  0230               	subwf	PROCULUS_Control_Register_Write@i,w
  6346  081F  1803               	btfsc	3,0
  6347  0820  282D               	goto	l5779
  6348                           
  6349                           ;proculus.c: 18:          USART_putc(vetor[i]);
  6350  0821  0830               	movf	PROCULUS_Control_Register_Write@i,w
  6351  0822  072F               	addwf	PROCULUS_Control_Register_Write@vetor,w
  6352  0823  00AE               	movwf	??_PROCULUS_Control_Register_Write
  6353  0824  0084               	movwf	4
  6354  0825  1383               	bcf	3,7	;select IRP bank0
  6355  0826  0800               	movf	0,w
  6356  0827  23D3  120A  158A   	fcall	_USART_putc
  6357  082A  1283               	bcf	3,5	;RP0=0, select bank0
  6358  082B  0AB0               	incf	PROCULUS_Control_Register_Write@i,f
  6359  082C  281D               	goto	l5777
  6360  082D                     l5779:	
  6361                           
  6362                           ;proculus.c: 19:      PROCULUS_Delay(1);
  6363  082D  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6364  082E  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6365  082F  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6366  0830  160A  118A  2BA9   	ljmp	l3645
  6367  0833                     __end_of_PROCULUS_Control_Register_Write:	
  6368  0833                     __ptext31:	
  6369 ;; *************** function _PROCULUS_VP_Write *****************
  6370 ;; Defined at:
  6371 ;;		line 40 in file "proculus.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  vp              2   13[BANK0 ] unsigned int 
  6374 ;;  vetor           1   15[BANK0 ] PTR unsigned char 
  6375 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6376 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6377 ;;  size            1   16[BANK0 ] unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  i               1   18[BANK0 ] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 300/0
  6386 ;;		On exit  : 300/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6389 ;;      Params:         0       4       0       0       0
  6390 ;;      Locals:         0       1       0       0       0
  6391 ;;      Temps:          0       1       0       0       0
  6392 ;;      Totals:         0       6       0       0       0
  6393 ;;Total ram usage:        6 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    3
  6396 ;; This function calls:
  6397 ;;		_PROCULUS_Delay
  6398 ;;		_USART_put_int
  6399 ;;		_USART_putc
  6400 ;; This function is called by:
  6401 ;;		_PROCULUS_VP_Write_String
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _PROCULUS_VP_Write
  6407  0833                     _PROCULUS_VP_Write:	
  6408  0833                     l5781:	
  6409                           ;incstack = 0
  6410                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6411                           
  6412                           
  6413                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6414  0833  30A5               	movlw	165
  6415  0834  00AA               	movwf	USART_put_int@value
  6416  0835  305A               	movlw	90
  6417  0836  00AB               	movwf	USART_put_int@value+1
  6418  0837  2782  120A  158A   	fcall	_USART_put_int
  6419                           
  6420                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6421  083A  1283               	bcf	3,5	;RP0=0, select bank0
  6422  083B  0830               	movf	PROCULUS_VP_Write@size,w
  6423  083C  3E03               	addlw	3
  6424  083D  23D3  120A  158A   	fcall	_USART_putc
  6425                           
  6426                           ;proculus.c: 43:      USART_putc(0x82);
  6427  0840  3082               	movlw	130
  6428  0841  23D3  120A  158A   	fcall	_USART_putc
  6429                           
  6430                           ;proculus.c: 44:      USART_put_int(vp);
  6431  0844  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0845  082E               	movf	PROCULUS_VP_Write@vp+1,w
  6433  0846  00AB               	movwf	USART_put_int@value+1
  6434  0847  082D               	movf	PROCULUS_VP_Write@vp,w
  6435  0848  00AA               	movwf	USART_put_int@value
  6436  0849  2782  120A  158A   	fcall	_USART_put_int
  6437                           
  6438                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6439  084C  1283               	bcf	3,5	;RP0=0, select bank0
  6440  084D  01B2               	clrf	PROCULUS_VP_Write@i
  6441  084E                     l5793:	
  6442  084E  0830               	movf	PROCULUS_VP_Write@size,w
  6443  084F  0232               	subwf	PROCULUS_VP_Write@i,w
  6444  0850  1803               	btfsc	3,0
  6445  0851  285E               	goto	l5795
  6446                           
  6447                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6448  0852  0832               	movf	PROCULUS_VP_Write@i,w
  6449  0853  072F               	addwf	PROCULUS_VP_Write@vetor,w
  6450  0854  00B1               	movwf	??_PROCULUS_VP_Write
  6451  0855  0084               	movwf	4
  6452  0856  1383               	bcf	3,7	;select IRP bank0
  6453  0857  0800               	movf	0,w
  6454  0858  23D3  120A  158A   	fcall	_USART_putc
  6455  085B  1283               	bcf	3,5	;RP0=0, select bank0
  6456  085C  0AB2               	incf	PROCULUS_VP_Write@i,f
  6457  085D  284E               	goto	l5793
  6458  085E                     l5795:	
  6459                           
  6460                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6461  085E  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6462  085F  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6463  0860  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6464  0861  160A  118A  2BA9   	ljmp	l3645
  6465  0864                     __end_of_PROCULUS_VP_Write:	
  6466  0864                     __ptext13:	
  6467 ;; *************** function _Decodify_Command *****************
  6468 ;; Defined at:
  6469 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6474 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6475 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6476 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6477 ;;  add             1   32[BANK1 ] unsigned char 
  6478 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6479 ;;  OutPut          4   35[BANK1 ] float 
  6480 ;;  tempint         2   33[BANK1 ] int 
  6481 ;;  dados           2   30[BANK1 ] int 
  6482 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 300/0
  6489 ;;		On exit  : 200/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6492 ;;      Params:         0       0       0       0       0
  6493 ;;      Locals:         0       0      45       0       0
  6494 ;;      Temps:          0       2       0       0       0
  6495 ;;      Totals:         0       2      45       0       0
  6496 ;;Total ram usage:       47 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    6
  6499 ;; This function calls:
  6500 ;;		_EEPROM_24C1025_Fill_All
  6501 ;;		_EEPROM_24C1025_Read_Buffer
  6502 ;;		_EEPROM_24C1025_Read_Byte
  6503 ;;		_EEPROM_24C1025_Read_Int
  6504 ;;		_EEPROM_24C1025_Read_Str
  6505 ;;		_EEPROM_24C1025_Write_Buffer
  6506 ;;		_EEPROM_24C1025_Write_Byte
  6507 ;;		_EEPROM_24C1025_Write_Int
  6508 ;;		_EEPROM_24C1025_Write_Str
  6509 ;;		_EEPROM_Read_Byte
  6510 ;;		_EEPROM_Read_Integer
  6511 ;;		_EEPROM_Read_String
  6512 ;;		_EEPROM_Write_Byte
  6513 ;;		_EEPROM_Write_Integer
  6514 ;;		_EEPROM_Write_String
  6515 ;;		_PROCULUS_Buzzer
  6516 ;;		_PROCULUS_Show_Screen
  6517 ;;		_PROCULUS_VP_Write_String
  6518 ;;		_Save_Log
  6519 ;;		_Send_Reply_OK
  6520 ;;		_Send_To_MB
  6521 ;;		_USART_put_buffer
  6522 ;;		_USART_put_int
  6523 ;;		_USART_put_string
  6524 ;;		_USART_putc
  6525 ;;		_USART_to_Protocol
  6526 ;;		___flmul
  6527 ;;		___fltol
  6528 ;;		_itoa
  6529 ;;		_strcat
  6530 ;;		_strcpy
  6531 ;;		_strlen
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function _Decodify_Command
  6539  0864                     _Decodify_Command:	
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6545  0864  30DC               	movlw	(low (_usart_protocol| 0))& (0+255)
  6546  0865  160A  118A  2474  120A  158A  	fcall	_USART_to_Protocol
  6547                           
  6548                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6549  086A  1683               	bsf	3,5	;RP0=1, select bank1
  6550  086B  1303               	bcf	3,6	;RP1=0, select bank1
  6551  086C  0863               	movf	(_usart_protocol^(0+128)+7),w
  6552  086D  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6553                           
  6554                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6555  086E  0864               	movf	(_usart_protocol^(0+128)+8),w
  6556  086F  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6557                           
  6558                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6559  0870  0865               	movf	(_usart_protocol^(0+128)+9),w
  6560  0871  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6561                           
  6562                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6563  0872  0866               	movf	(_usart_protocol^(0+128)+10),w
  6564  0873  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6565                           
  6566                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6567  0874  2B41               	goto	l6641
  6568  0875                     l6439:	
  6569                           
  6570                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6571  0875  300B               	movlw	11
  6572  0876  2398               	fcall	_Send_To_MB
  6573                           
  6574                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.10");
  6575  0877  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6576  0878  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0879  00A1               	movwf	USART_put_string@vetor
  6578  087A  3080               	movlw	128
  6579  087B  00A2               	movwf	USART_put_string@vetor+1
  6580  087C  160A  118A  2C0E   	ljmp	l5739
  6581  087F                     l6443:	
  6582                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6583                           
  6584                           
  6585                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  6586  087F  1683               	bsf	3,5	;RP0=1, select bank1
  6587  0880  0862               	movf	(_usart_protocol^(0+128)+6),w
  6588  0881  1D03               	btfss	3,2
  6589  0882  288B               	goto	l6447
  6590                           
  6591                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  6592  0883  0854               	movf	(_Temperatura0+3)^(0+128),w
  6593  0884  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6594  0885  0853               	movf	(_Temperatura0+2)^(0+128),w
  6595  0886  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6596  0887  0852               	movf	(_Temperatura0+1)^(0+128),w
  6597  0888  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6598  0889  0851               	movf	_Temperatura0^(0+128),w
  6599  088A  2892               	goto	L11
  6600  088B                     l6447:	
  6601                           
  6602                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  6603  088B  0850               	movf	(_Umidade1+3)^(0+128),w
  6604  088C  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6605  088D  084F               	movf	(_Umidade1+2)^(0+128),w
  6606  088E  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6607  088F  084E               	movf	(_Umidade1+1)^(0+128),w
  6608  0890  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6609  0891  084D               	movf	_Umidade1^(0+128),w
  6610  0892                     L11:	
  6611  0892  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6612                           
  6613                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6614  0893  3041               	movlw	65
  6615  0894  1283               	bcf	3,5	;RP0=0, select bank0
  6616  0895  00AB               	movwf	___flmul@b+3
  6617  0896  3020               	movlw	32
  6618  0897  00AA               	movwf	___flmul@b+2
  6619  0898  01A9               	clrf	___flmul@b+1
  6620  0899  01A8               	clrf	___flmul@b
  6621  089A  1683               	bsf	3,5	;RP0=1, select bank1
  6622  089B  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6623  089C  1283               	bcf	3,5	;RP0=0, select bank0
  6624  089D  00AF               	movwf	___flmul@a+3
  6625  089E  1683               	bsf	3,5	;RP0=1, select bank1
  6626  089F  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6627  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  6628  08A1  00AE               	movwf	___flmul@a+2
  6629  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  6630  08A3  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6631  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  6632  08A5  00AD               	movwf	___flmul@a+1
  6633  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  6634  08A7  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6635  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  6636  08A9  00AC               	movwf	___flmul@a
  6637  08AA  120A  118A  2156  120A  158A  	fcall	___flmul
  6638  08AF  082B               	movf	?___flmul+3,w
  6639  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  6640  08B1  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6641  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  6642  08B3  082A               	movf	?___flmul+2,w
  6643  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  6644  08B5  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6645  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  6646  08B7  0829               	movf	?___flmul+1,w
  6647  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  6648  08B9  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6649  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  6650  08BB  0828               	movf	?___flmul,w
  6651  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  6652  08BD  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6653                           
  6654                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6655  08BE  138B               	bcf	11,7	;volatile
  6656                           
  6657                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6658  08BF  3002               	movlw	2
  6659  08C0  2398               	fcall	_Send_To_MB
  6660                           
  6661                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6662  08C1  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6663  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  6664  08C3  00A3               	movwf	___fltol@f1+3
  6665  08C4  1683               	bsf	3,5	;RP0=1, select bank1
  6666  08C5  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6667  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  6668  08C7  00A2               	movwf	___fltol@f1+2
  6669  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  6670  08C9  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6671  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  6672  08CB  00A1               	movwf	___fltol@f1+1
  6673  08CC  1683               	bsf	3,5	;RP0=1, select bank1
  6674  08CD  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6675  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  6676  08CF  00A0               	movwf	___fltol@f1
  6677  08D0  120A  118A  273B  120A  158A  	fcall	___fltol
  6678  08D5  0821               	movf	?___fltol+1,w
  6679  08D6  00AB               	movwf	USART_put_int@value+1
  6680  08D7  0820               	movf	?___fltol,w
  6681  08D8  00AA               	movwf	USART_put_int@value
  6682  08D9  2782               	fcall	_USART_put_int
  6683                           
  6684                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6685  08DA  178B               	bsf	11,7	;volatile
  6686                           
  6687                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6688  08DB  0008               	return
  6689  08DC                     l6459:	
  6690                           
  6691                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6692  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  6693  08DD  0862               	movf	(_usart_protocol^(0+128)+6),w
  6694  08DE  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6695                           
  6696                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6697  08DF  0863               	movf	(_usart_protocol^(0+128)+7),w
  6698  08E0  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6699                           
  6700                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6701  08E1  0864               	movf	(_usart_protocol^(0+128)+8),w
  6702  08E2  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6703                           
  6704                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6705  08E3  0865               	movf	(_usart_protocol^(0+128)+9),w
  6706  08E4  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6707                           
  6708                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6709  08E5  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6710  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  6711  08E7  00C2               	movwf	Save_Log@add_datalog+3
  6712  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  6713  08E9  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6714  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  6715  08EB  00C1               	movwf	Save_Log@add_datalog+2
  6716  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  6717  08ED  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6718  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  6719  08EF  00C0               	movwf	Save_Log@add_datalog+1
  6720  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  6721  08F1  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6722  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  6723  08F3  00BF               	movwf	Save_Log@add_datalog
  6724  08F4  120A  118A  26E3   	fcall	_Save_Log
  6725                           
  6726                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6727  08F7  01F2               	clrf	_Delay_Led_Tmr0	;volatile
  6728  08F8  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
  6729                           
  6730                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6731  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  6732  08FA  01D7               	clrf	_milisegundo^(0+128)	;volatile
  6733  08FB  01D8               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6734                           
  6735                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6736  08FC  0008               	return
  6737  08FD                     l6467:	
  6738                           
  6739                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6740  08FD  3002               	movlw	2
  6741  08FE  2398  120A  158A   	fcall	_Send_To_MB
  6742                           
  6743                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  6744  0901  3002               	movlw	2
  6745  0902  1283               	bcf	3,5	;RP0=0, select bank0
  6746  0903  00AA               	movwf	USART_put_int@value
  6747  0904  01AB               	clrf	USART_put_int@value+1
  6748  0905  2F82               	ljmp	l5587
  6749  0906                     l6471:	
  6750                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6751                           
  6752                           
  6753                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6754  0906  1683               	bsf	3,5	;RP0=1, select bank1
  6755  0907  0863               	movf	(_usart_protocol^(0+128)+7),w
  6756  0908  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0909  00A0               	movwf	EEPROM_Write_Byte@dado
  6758  090A  1683               	bsf	3,5	;RP0=1, select bank1
  6759  090B  0862               	movf	(_usart_protocol^(0+128)+6),w
  6760  090C  160A  118A  2577  120A  158A  	fcall	_EEPROM_Write_Byte
  6761  0911                     L12:	
  6762                           
  6763                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6764  0911  3003               	movlw	3
  6765  0912  2398               	fcall	_Send_To_MB
  6766                           
  6767                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6768  0913  160A  118A  2C08   	ljmp	l6085
  6769  0916                     l6475:	
  6770                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6771                           
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6774  0916  1683               	bsf	3,5	;RP0=1, select bank1
  6775  0917  0862               	movf	(_usart_protocol^(0+128)+6),w
  6776  0918  120A  118A  27DA  120A  158A  	fcall	_EEPROM_Read_Byte
  6777  091D  1683               	bsf	3,5	;RP0=1, select bank1
  6778  091E  1303               	bcf	3,6	;RP1=0, select bank1
  6779  091F  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6780                           
  6781                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6782  0920  3001               	movlw	1
  6783  0921  2398  120A  158A   	fcall	_Send_To_MB
  6784                           
  6785                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6786  0924  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6787  0925  2BD3               	ljmp	_USART_putc
  6788  0926                     l6481:	
  6789                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6790                           
  6791                           
  6792                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6793  0926  1683               	bsf	3,5	;RP0=1, select bank1
  6794  0927  0862               	movf	(_usart_protocol^(0+128)+6),w
  6795  0928  00C0               	movwf	Decodify_Command@add^(0+128)
  6796                           
  6797                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6798  0929  0863               	movf	(_usart_protocol^(0+128)+7),w
  6799  092A  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6800  092B  0864               	movf	(_usart_protocol^(0+128)+8),w
  6801  092C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6802                           
  6803                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6804  092D  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6805  092E  1283               	bcf	3,5	;RP0=0, select bank0
  6806  092F  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6807  0930  1683               	bsf	3,5	;RP0=1, select bank1
  6808  0931  083E               	movf	Decodify_Command@dados^(0+128),w
  6809  0932  1283               	bcf	3,5	;RP0=0, select bank0
  6810  0933  00A5               	movwf	EEPROM_Write_Integer@dado
  6811  0934  1683               	bsf	3,5	;RP0=1, select bank1
  6812  0935  0840               	movf	Decodify_Command@add^(0+128),w
  6813  0936  160A  118A  253D  120A  158A  	fcall	_EEPROM_Write_Integer
  6814  093B  2911               	goto	L12
  6815  093C                     l6489:	
  6816                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6817                           
  6818                           
  6819                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6820  093C  1683               	bsf	3,5	;RP0=1, select bank1
  6821  093D  0862               	movf	(_usart_protocol^(0+128)+6),w
  6822  093E  120A  118A  27C0  120A  158A  	fcall	_EEPROM_Read_Integer
  6823  0943  0824               	movf	?_EEPROM_Read_Integer+1,w
  6824  0944  1683               	bsf	3,5	;RP0=1, select bank1
  6825  0945  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6826  0946  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0947  0823               	movf	?_EEPROM_Read_Integer,w
  6828  0948                     L13:	
  6829  0948  1683               	bsf	3,5	;RP0=1, select bank1
  6830  0949  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6831                           
  6832                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6833  094A  3002               	movlw	2
  6834  094B  2398  120A  158A   	fcall	_Send_To_MB
  6835                           
  6836                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6837  094E  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6838  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0950  00AB               	movwf	USART_put_int@value+1
  6840  0951  1683               	bsf	3,5	;RP0=1, select bank1
  6841  0952  0841               	movf	Decodify_Command@tempint^(0+128),w
  6842  0953  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0954  00AA               	movwf	USART_put_int@value
  6844  0955  2F82               	ljmp	l5587
  6845  0956                     l6495:	
  6846                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6847                           
  6848                           
  6849                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6850  0956  30E3               	movlw	(low ((_usart_protocol| 0+7)))& (0+255)
  6851  0957  00A5               	movwf	EEPROM_Write_String@dado
  6852  0958  1683               	bsf	3,5	;RP0=1, select bank1
  6853  0959  0862               	movf	(_usart_protocol^(0+128)+6),w
  6854  095A  160A  118A  2560  120A  158A  	fcall	_EEPROM_Write_String
  6855  095F  2911               	goto	L12
  6856  0960                     l6501:	
  6857                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6858                           
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6861  0960  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  6862  0961  00A3               	movwf	EEPROM_Read_String@dado
  6863  0962  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0963  0862               	movf	(_usart_protocol^(0+128)+6),w
  6865  0964  120A  118A  27AD  120A  158A  	fcall	_EEPROM_Read_String
  6866                           
  6867                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6868  0969  3010               	movlw	16
  6869  096A                     L14:	
  6870  096A  2398  120A  158A   	fcall	_Send_To_MB
  6871                           
  6872                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6873  096D  27EA               	fcall	PL44	;call to abstracted procedure
  6874  096E  160A  118A  2C0E   	ljmp	l5739
  6875  0971                     l6507:	
  6876                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6877                           
  6878                           
  6879                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6880  0971  1683               	bsf	3,5	;RP0=1, select bank1
  6881  0972  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6882  0973  1283               	bcf	3,5	;RP0=0, select bank0
  6883  0974  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6884  0975  1683               	bsf	3,5	;RP0=1, select bank1
  6885  0976  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6886  0977  1283               	bcf	3,5	;RP0=0, select bank0
  6887  0978  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6888  0979  1683               	bsf	3,5	;RP0=1, select bank1
  6889  097A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6890  097B  1283               	bcf	3,5	;RP0=0, select bank0
  6891  097C  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6892  097D  1683               	bsf	3,5	;RP0=1, select bank1
  6893  097E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6894  097F  1283               	bcf	3,5	;RP0=0, select bank0
  6895  0980  00B6               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6896  0981  1683               	bsf	3,5	;RP0=1, select bank1
  6897  0982  0867               	movf	(_usart_protocol^(0+128)+11),w
  6898  0983  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0984  00BA               	movwf	EEPROM_24C1025_Write_Byte@data
  6900  0985  1683               	bsf	3,5	;RP0=1, select bank1
  6901  0986  0862               	movf	(_usart_protocol^(0+128)+6),w
  6902  0987  2791  120A  158A   	fcall	_EEPROM_24C1025_Write_Byte
  6903  098A  2911               	goto	L12
  6904  098B                     l6513:	
  6905                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6906                           
  6907                           
  6908                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6909  098B  1683               	bsf	3,5	;RP0=1, select bank1
  6910  098C  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6911  098D  1283               	bcf	3,5	;RP0=0, select bank0
  6912  098E  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6913  098F  1683               	bsf	3,5	;RP0=1, select bank1
  6914  0990  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6915  0991  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0992  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6917  0993  1683               	bsf	3,5	;RP0=1, select bank1
  6918  0994  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6919  0995  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0996  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6921  0997  1683               	bsf	3,5	;RP0=1, select bank1
  6922  0998  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6923  0999  1283               	bcf	3,5	;RP0=0, select bank0
  6924  099A  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6925  099B  1683               	bsf	3,5	;RP0=1, select bank1
  6926  099C  0862               	movf	(_usart_protocol^(0+128)+6),w
  6927  099D  160A  118A  2378  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  6928  09A2  1683               	bsf	3,5	;RP0=1, select bank1
  6929  09A3  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6930                           
  6931                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6932  09A4  3001               	movlw	1
  6933  09A5  2398  120A  158A   	fcall	_Send_To_MB
  6934                           
  6935                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6936  09A8  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6937  09A9  2BD3               	ljmp	_USART_putc
  6938  09AA                     l6519:	
  6939                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6940                           
  6941                           
  6942                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6943  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  6944  09AB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6945  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  6946  09AD  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6947  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  6948  09AF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6949  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  6950  09B1  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6951  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  6952  09B3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6953  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6954  09B5  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6955  09B6  1683               	bsf	3,5	;RP0=1, select bank1
  6956  09B7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6957  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  6958  09B9  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6959  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  6960  09BB  0867               	movf	(_usart_protocol^(0+128)+11),w
  6961  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  6962  09BD  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
  6963  09BE  1683               	bsf	3,5	;RP0=1, select bank1
  6964  09BF  0868               	movf	(_usart_protocol^(0+128)+12),w
  6965  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  6966  09C1  00BA               	movwf	EEPROM_24C1025_Write_Int@data
  6967  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  6968  09C3  0862               	movf	(_usart_protocol^(0+128)+6),w
  6969  09C4  120A  118A  2725  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  6970  09C9  2911               	goto	L12
  6971  09CA                     l6525:	
  6972                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6973                           
  6974                           
  6975                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6976  09CA  1683               	bsf	3,5	;RP0=1, select bank1
  6977  09CB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6978  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6979  09CD  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6980  09CE  1683               	bsf	3,5	;RP0=1, select bank1
  6981  09CF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6982  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6983  09D1  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6984  09D2  1683               	bsf	3,5	;RP0=1, select bank1
  6985  09D3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6986  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  6987  09D5  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6988  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  6989  09D7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6990  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  6991  09D9  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6992  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  6993  09DB  0862               	movf	(_usart_protocol^(0+128)+6),w
  6994  09DC  160A  118A  238F  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  6995  09E1  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6996  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  6997  09E3  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6998  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  6999  09E5  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  7000  09E6  2948               	goto	L13
  7001  09E7                     l6531:	
  7002                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7003                           
  7004                           
  7005                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7006  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  7007  09E8  0867               	movf	(_usart_protocol^(0+128)+11),w
  7008  09E9  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  7009                           
  7010                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7011  09EA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7012  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  7013  09EC  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7014  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  7015  09EE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7016  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  7017  09F0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7018  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  7019  09F2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7020  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  7021  09F4  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7022  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  7023  09F6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7024  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  7025  09F8  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7026  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  7027  09FA  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7028  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  7029  09FC  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7030  09FD  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  7031  09FE  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  7032  09FF  3001               	movlw	1
  7033  0A00  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7034  0A01  1683               	bsf	3,5	;RP0=1, select bank1
  7035  0A02  0862               	movf	(_usart_protocol^(0+128)+6),w
  7036  0A03  2556  120A  158A   	fcall	_EEPROM_24C1025_Read_Buffer
  7037                           
  7038                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7039  0A06  1683               	bsf	3,5	;RP0=1, select bank1
  7040  0A07  1303               	bcf	3,6	;RP1=0, select bank1
  7041  0A08  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7042  0A09  2398               	fcall	_Send_To_MB
  7043                           
  7044                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7045  0A0A  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7046  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  7047  0A0C  00A1               	movwf	USART_put_buffer@size
  7048  0A0D  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  7049  0A0E  01A2               	clrf	USART_put_buffer@size+1
  7050  0A0F  160A  118A  2BC3   	ljmp	_USART_put_buffer
  7051  0A12                     l6539:	
  7052                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7053                           
  7054                           
  7055                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7056  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  7057  0A13  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7058  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7059  0A15  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7060  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7061  0A17  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7062  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7063  0A19  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7064  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7065  0A1B  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7066  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7067  0A1D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7068  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7069  0A1F  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7070  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0A21  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7072  0A22  1683               	bsf	3,5	;RP0=1, select bank1
  7073  0A23  0867               	movf	(_usart_protocol^(0+128)+11),w
  7074  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0A25  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7076  0A26  30E8               	movlw	(low ((_usart_protocol| 0+12)))& (0+255)
  7077  0A27  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7078  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  7079  0A29  0862               	movf	(_usart_protocol^(0+128)+6),w
  7080  0A2A  2635  120A  158A   	fcall	_EEPROM_24C1025_Write_Buffer
  7081  0A2D  2911               	goto	L12
  7082  0A2E                     l6545:	
  7083                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7084                           
  7085                           
  7086                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7087  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  7088  0A2F  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7089  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0A31  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7091  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  7092  0A33  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7093  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0A35  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7095  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  7096  0A37  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7097  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7098  0A39  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7099  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7100  0A3B  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7101  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7102  0A3D  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7103  0A3E  30E7               	movlw	(low ((_usart_protocol| 0+11)))& (0+255)
  7104  0A3F  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  7105  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  7106  0A41  0862               	movf	(_usart_protocol^(0+128)+6),w
  7107  0A42  23E1  120A  158A   	fcall	_EEPROM_24C1025_Write_Str
  7108  0A45  2911               	goto	L12
  7109  0A46                     l6551:	
  7110                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7111                           
  7112                           
  7113                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7114  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7115  0A47  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7116  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7117  0A49  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7118  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  7119  0A4B  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7120  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  7121  0A4D  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7122  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  7123  0A4F  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7124  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  7125  0A51  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7126  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  7127  0A53  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7128  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  7129  0A55  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7130  0A56  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7131  0A57  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  7132  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  7133  0A59  0862               	movf	(_usart_protocol^(0+128)+6),w
  7134  0A5A  2475               	fcall	_EEPROM_24C1025_Read_Str
  7135                           
  7136                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7137  0A5B  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7138  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  7139  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  7140  0A5E  00A0               	movwf	strlen@s
  7141  0A5F  3001               	movlw	1
  7142  0A60  00A1               	movwf	strlen@s+1
  7143  0A61  160A  118A  23EF  120A  158A  	fcall	_strlen
  7144  0A66  0820               	movf	?_strlen,w
  7145  0A67  296A               	goto	L14
  7146  0A68                     l6557:	
  7147                           
  7148                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7149  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  7150  0A69  0863               	movf	(_usart_protocol^(0+128)+7),w
  7151  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  7152  0A6B  00BF               	movwf	EEPROM_24C1025_Fill_All@value
  7153  0A6C  01C0               	clrf	EEPROM_24C1025_Fill_All@value+1
  7154  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  7155  0A6E  0862               	movf	(_usart_protocol^(0+128)+6),w
  7156  0A6F  120A  118A  26B2  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7157  0A74  2911               	goto	L12
  7158  0A75                     l6563:	
  7159                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7160                           
  7161                           
  7162                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7163  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  7164  0A76  085A               	movf	_hora^(0+128),w	;volatile
  7165  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7166  0A78  00AF               	movwf	itoa@val
  7167  0A79  300A               	movlw	10
  7168  0A7A  01B0               	clrf	itoa@val+1
  7169  0A7B  00B1               	movwf	itoa@base
  7170  0A7C  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7171  0A7D  01B2               	clrf	itoa@base+1
  7172  0A7E  2768  120A  158A   	fcall	_itoa
  7173                           
  7174                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7175  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  7176  0A82  0859               	movf	_minuto^(0+128),w	;volatile
  7177  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  7178  0A84  00AF               	movwf	itoa@val
  7179  0A85  300A               	movlw	10
  7180  0A86  01B0               	clrf	itoa@val+1
  7181  0A87  00B1               	movwf	itoa@base
  7182  0A88  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7183  0A89  01B2               	clrf	itoa@base+1
  7184  0A8A  2768  120A  158A   	fcall	_itoa
  7185                           
  7186                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7187  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  7188  0A8E  085B               	movf	_segundo^(0+128),w	;volatile
  7189  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  7190  0A90  00AF               	movwf	itoa@val
  7191  0A91  300A               	movlw	10
  7192  0A92  01B0               	clrf	itoa@val+1
  7193  0A93  00B1               	movwf	itoa@base
  7194  0A94  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7195  0A95  01B2               	clrf	itoa@base+1
  7196  0A96  2768               	fcall	_itoa
  7197                           
  7198                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7199  0A97  3034               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  7200  0A98  00A0               	movwf	strcpy@from
  7201  0A99  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7202  0A9A  160A  118A  2363  120A  158A  	fcall	_strcpy
  7203                           
  7204                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7205  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  7206  0AA0  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7207  0AA1  1D03               	btfss	3,2
  7208  0AA2  2AAB               	goto	l6571
  7209                           
  7210                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7211  0AA3  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7212  0AA6  23B3  120A  158A   	fcall	_strcat
  7213                           
  7214                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7215  0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  7216  0AAA  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7217  0AAB                     l6571:	
  7218                           
  7219                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7220  0AAB  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7221  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  7222  0AAD  00A0               	movwf	strcat@from
  7223  0AAE  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7224  0AAF  01A1               	clrf	strcat@from+1
  7225  0AB0  23B3  120A  158A   	fcall	_strcat
  7226                           
  7227                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7228  0AB3  27DF  120A  158A   	fcall	PL40	;call to abstracted procedure
  7229  0AB6  23B3  120A  158A   	fcall	_strcat
  7230                           
  7231                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7232  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  7233  0ABA  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7234  0ABB  1D03               	btfss	3,2
  7235  0ABC  2AC5               	goto	l6581
  7236                           
  7237                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7238  0ABD  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7239  0AC0  23B3  120A  158A   	fcall	_strcat
  7240                           
  7241                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7242  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  7243  0AC4  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7244  0AC5                     l6581:	
  7245                           
  7246                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7247  0AC5  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7248  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  7249  0AC7  00A0               	movwf	strcat@from
  7250  0AC8  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7251  0AC9  01A1               	clrf	strcat@from+1
  7252  0ACA  23B3  120A  158A   	fcall	_strcat
  7253                           
  7254                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7255  0ACD  27DF  120A  158A   	fcall	PL40	;call to abstracted procedure
  7256  0AD0  23B3  120A  158A   	fcall	_strcat
  7257                           
  7258                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7259  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  7260  0AD4  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7261  0AD5  1D03               	btfss	3,2
  7262  0AD6  2ADF               	goto	l6591
  7263                           
  7264                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7265  0AD7  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7266  0ADA  23B3  120A  158A   	fcall	_strcat
  7267                           
  7268                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7269  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  7270  0ADE  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7271  0ADF                     l6591:	
  7272                           
  7273                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7274  0ADF  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7275  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  7276  0AE1  00A0               	movwf	strcat@from
  7277  0AE2  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7278  0AE3  01A1               	clrf	strcat@from+1
  7279  0AE4  23B3               	fcall	_strcat
  7280                           
  7281                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7282  0AE5  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7283  0AE6  00A0               	movwf	strlen@s
  7284  0AE7  3001               	movlw	1
  7285  0AE8  00A1               	movwf	strlen@s+1
  7286  0AE9  160A  118A  23EF  120A  158A  	fcall	_strlen
  7287  0AEE  0820               	movf	?_strlen,w
  7288  0AEF  2398  120A  158A   	fcall	_Send_To_MB
  7289                           
  7290                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7291  0AF2  27EA               	fcall	PL44	;call to abstracted procedure
  7292  0AF3  160A  118A  240E  120A  158A  	fcall	_USART_put_string
  7293                           
  7294                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7295  0AF8  3000               	movlw	0
  7296  0AF9  2BD3               	ljmp	_USART_putc
  7297  0AFA                     l6599:	
  7298                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7299                           
  7300                           
  7301                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7302  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  7303  0AFB  0862               	movf	(_usart_protocol^(0+128)+6),w
  7304  0AFC  00DA               	movwf	_hora^(0+128)	;volatile
  7305                           
  7306                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7307  0AFD  0863               	movf	(_usart_protocol^(0+128)+7),w
  7308  0AFE  00D9               	movwf	_minuto^(0+128)	;volatile
  7309                           
  7310                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7311  0AFF  0864               	movf	(_usart_protocol^(0+128)+8),w
  7312  0B00  00DB               	movwf	_segundo^(0+128)	;volatile
  7313  0B01  2911               	goto	L12
  7314  0B02                     l6605:	
  7315                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7316                           
  7317                           
  7318                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7319  0B02  1683               	bsf	3,5	;RP0=1, select bank1
  7320  0B03  0862               	movf	(_usart_protocol^(0+128)+6),w
  7321  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  7322  0B05  00B1               	movwf	PROCULUS_Show_Screen@screen
  7323  0B06  01B2               	clrf	PROCULUS_Show_Screen@screen+1
  7324  0B07  27F6  120A  158A   	fcall	_PROCULUS_Show_Screen
  7325  0B0A  2911               	goto	L12
  7326  0B0B                     l6611:	
  7327                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7328                           
  7329                           
  7330                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7331  0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  7332  0B0C  0862               	movf	(_usart_protocol^(0+128)+6),w
  7333  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  7334  0B0E  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7335  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  7336  0B10  0863               	movf	(_usart_protocol^(0+128)+7),w
  7337  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7338  0B12  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7339  0B13  160A  118A  25B7  120A  158A  	fcall	_PROCULUS_Buzzer
  7340  0B18  2911               	goto	L12
  7341  0B19                     l6617:	
  7342                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7343                           
  7344                           
  7345                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7346  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  7347  0B1A  0862               	movf	(_usart_protocol^(0+128)+6),w
  7348  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7349  0B1C  00B4               	movwf	PROCULUS_VP_Write_String@vp+1
  7350  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  7351  0B1E  0863               	movf	(_usart_protocol^(0+128)+7),w
  7352  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  7353  0B20  00B3               	movwf	PROCULUS_VP_Write_String@vp
  7354  0B21  30E4               	movlw	(low ((_usart_protocol| 0+8)))& (0+255)
  7355  0B22  00B5               	movwf	PROCULUS_VP_Write_String@text
  7356  0B23  160A  118A  23DF  120A  158A  	fcall	_PROCULUS_VP_Write_String
  7357  0B28  2911               	goto	L12
  7358  0B29                     l6623:	
  7359                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7360                           
  7361                           
  7362                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7363  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  7364  0B2A  0862               	movf	(_usart_protocol^(0+128)+6),w
  7365  0B2B  1D03               	btfss	3,2
  7366  0B2C  2B36               	goto	l6629
  7367                           
  7368                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7369  0B2D  0863               	movf	(_usart_protocol^(0+128)+7),w
  7370  0B2E  1D03               	btfss	3,2
  7371  0B2F  2B33               	goto	l417
  7372                           
  7373                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7374  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  7375  0B31  1007               	bcf	7,0	;volatile
  7376  0B32  2911               	goto	L12
  7377  0B33                     l417:	
  7378                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7379                           
  7380                           
  7381                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7382  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  7383  0B34  1407               	bsf	7,0	;volatile
  7384  0B35  2911               	goto	L12
  7385  0B36                     l6629:	
  7386  0B36  0B62               	decfsz	(_usart_protocol^(0+128)+6),w
  7387  0B37  2911               	goto	L12
  7388                           
  7389                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7390  0B38  0863               	movf	(_usart_protocol^(0+128)+7),w
  7391  0B39  1D03               	btfss	3,2
  7392  0B3A  2B3E               	goto	l421
  7393                           
  7394                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7395  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7396  0B3C  1087               	bcf	7,1	;volatile
  7397  0B3D  2911               	goto	L12
  7398  0B3E                     l421:	
  7399                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7400                           
  7401                           
  7402                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7403  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0B3F  1487               	bsf	7,1	;volatile
  7405  0B40  2911               	goto	L12
  7406  0B41                     l6641:	
  7407                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7408                           
  7409  0B41  0860               	movf	(_usart_protocol^(0+128)+4),w
  7410  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  7411  0B43  00C6               	movwf	??_Decodify_Command
  7412  0B44  01C7               	clrf	??_Decodify_Command+1
  7413                           
  7414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7415                           ; Switch size 1, requested type "space"
  7416                           ; Number of cases is 1, Range of values is 0 to 0
  7417                           ; switch strategies available:
  7418                           ; Name         Instructions Cycles
  7419                           ; simple_byte            4     3 (average)
  7420                           ; direct_byte           11     8 (fixed)
  7421                           ; jumptable            260     6 (fixed)
  7422                           ;	Chosen strategy is simple_byte
  7423  0B45  0847               	movf	??_Decodify_Command+1,w
  7424  0B46  3A00               	xorlw	0	; case 0
  7425  0B47  1903               	skipnz
  7426  0B48  2B4A               	goto	l6785
  7427  0B49  2B97               	goto	l423
  7428  0B4A                     l6785:	
  7429                           
  7430                           ; Switch size 1, requested type "space"
  7431                           ; Number of cases is 25, Range of values is 2 to 43
  7432                           ; switch strategies available:
  7433                           ; Name         Instructions Cycles
  7434                           ; simple_byte           76    39 (average)
  7435                           ; direct_byte          137    11 (fixed)
  7436                           ; jumptable            263     9 (fixed)
  7437                           ;	Chosen strategy is simple_byte
  7438  0B4A  0846               	movf	??_Decodify_Command,w
  7439  0B4B  3A02               	xorlw	2	; case 2
  7440  0B4C  1903               	skipnz
  7441  0B4D  28DC               	goto	l6459
  7442  0B4E  3A01               	xorlw	1	; case 3
  7443  0B4F  1903               	skipnz
  7444  0B50  28FD               	goto	l6467
  7445  0B51  3A0B               	xorlw	11	; case 8
  7446  0B52  1903               	skipnz
  7447  0B53  2906               	goto	l6471
  7448  0B54  3A01               	xorlw	1	; case 9
  7449  0B55  1903               	skipnz
  7450  0B56  2916               	goto	l6475
  7451  0B57  3A03               	xorlw	3	; case 10
  7452  0B58  1903               	skipnz
  7453  0B59  2926               	goto	l6481
  7454  0B5A  3A01               	xorlw	1	; case 11
  7455  0B5B  1903               	skipnz
  7456  0B5C  293C               	goto	l6489
  7457  0B5D  3A07               	xorlw	7	; case 12
  7458  0B5E  1903               	skipnz
  7459  0B5F  2956               	goto	l6495
  7460  0B60  3A01               	xorlw	1	; case 13
  7461  0B61  1903               	skipnz
  7462  0B62  2960               	goto	l6501
  7463  0B63  3A1C               	xorlw	28	; case 17
  7464  0B64  1903               	skipnz
  7465  0B65  2971               	goto	l6507
  7466  0B66  3A03               	xorlw	3	; case 18
  7467  0B67  1903               	skipnz
  7468  0B68  298B               	goto	l6513
  7469  0B69  3A01               	xorlw	1	; case 19
  7470  0B6A  1903               	skipnz
  7471  0B6B  29AA               	goto	l6519
  7472  0B6C  3A07               	xorlw	7	; case 20
  7473  0B6D  1903               	skipnz
  7474  0B6E  29CA               	goto	l6525
  7475  0B6F  3A01               	xorlw	1	; case 21
  7476  0B70  1903               	skipnz
  7477  0B71  2A2E               	goto	l6545
  7478  0B72  3A03               	xorlw	3	; case 22
  7479  0B73  1903               	skipnz
  7480  0B74  2A46               	goto	l6551
  7481  0B75  3A01               	xorlw	1	; case 23
  7482  0B76  1903               	skipnz
  7483  0B77  2A12               	goto	l6539
  7484  0B78  3A0F               	xorlw	15	; case 24
  7485  0B79  1903               	skipnz
  7486  0B7A  29E7               	goto	l6531
  7487  0B7B  3A01               	xorlw	1	; case 25
  7488  0B7C  1903               	skipnz
  7489  0B7D  2A68               	goto	l6557
  7490  0B7E  3A03               	xorlw	3	; case 26
  7491  0B7F  1903               	skipnz
  7492  0B80  287F               	goto	l6443
  7493  0B81  3A04               	xorlw	4	; case 30
  7494  0B82  1903               	skipnz
  7495  0B83  2AFA               	goto	l6599
  7496  0B84  3A01               	xorlw	1	; case 31
  7497  0B85  1903               	skipnz
  7498  0B86  2A75               	goto	l6563
  7499  0B87  3A3F               	xorlw	63	; case 32
  7500  0B88  1903               	skipnz
  7501  0B89  2B02               	goto	l6605
  7502  0B8A  3A01               	xorlw	1	; case 33
  7503  0B8B  1903               	skipnz
  7504  0B8C  2B0B               	goto	l6611
  7505  0B8D  3A05               	xorlw	5	; case 36
  7506  0B8E  1903               	skipnz
  7507  0B8F  2B19               	goto	l6617
  7508  0B90  3A02               	xorlw	2	; case 38
  7509  0B91  1903               	skipnz
  7510  0B92  2B29               	goto	l6623
  7511  0B93  3A0D               	xorlw	13	; case 43
  7512  0B94  1903               	skipnz
  7513  0B95  2875               	goto	l6439
  7514  0B96  2B97               	goto	l423
  7515  0B97                     l423:	
  7516  0B97  0008               	return
  7517  0B98                     __end_of_Decodify_Command:	
  7518  0B98                     __ptext23:	
  7519 ;; *************** function _Send_To_MB *****************
  7520 ;; Defined at:
  7521 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  size            1    wreg     unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  size            1    1[BANK0 ] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0, pclath, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 300/100
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         0       0       0       0       0
  7536 ;;      Locals:         0       1       0       0       0
  7537 ;;      Temps:          0       0       0       0       0
  7538 ;;      Totals:         0       1       0       0       0
  7539 ;;Total ram usage:        1 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    2
  7542 ;; This function calls:
  7543 ;;		_USART_putc
  7544 ;; This function is called by:
  7545 ;;		_Decodify_Command
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _Send_To_MB
  7551  0B98                     _Send_To_MB:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7555                           ;Send_To_MB@size stored from wreg
  7556  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0B9A  00A1               	movwf	Send_To_MB@size
  7559                           
  7560                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  7561  0B9B  30AA               	movlw	170
  7562  0B9C  23D3  120A  158A   	fcall	_USART_putc
  7563                           
  7564                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  7565  0B9F  30BB               	movlw	187
  7566  0BA0  23D3  120A  158A   	fcall	_USART_putc
  7567                           
  7568                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  7569  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7570  0BA4  0869               	movf	_Board_Number,w
  7571  0BA5  23D3  120A  158A   	fcall	_USART_putc
  7572                           
  7573                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  7574  0BA8  3000               	movlw	0
  7575  0BA9  23D3  120A  158A   	fcall	_USART_putc
  7576                           
  7577                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  7578  0BAC  0860               	movf	(_usart_protocol^(0+128)+4),w
  7579  0BAD  23D3  120A  158A   	fcall	_USART_putc
  7580                           
  7581                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  7582  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  7583  0BB1  0821               	movf	Send_To_MB@size,w
  7584  0BB2  2BD3               	ljmp	_USART_putc
  7585  0BB3                     __end_of_Send_To_MB:	
  7586  0BB3                     __ptext15:	
  7587 ;; *************** function _strcat *****************
  7588 ;; Defined at:
  7589 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  to              1    wreg     PTR unsigned char 
  7592 ;;		 -> texto(16), 
  7593 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7594 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7595 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7598 ;;		 -> texto(16), 
  7599 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7600 ;;		 -> texto(16), 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      PTR unsigned char 
  7603 ;; Registers used:
  7604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7605 ;; Tracked objects:
  7606 ;;		On entry : B00/800
  7607 ;;		On exit  : B00/800
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7610 ;;      Params:         0       2       0       0       0
  7611 ;;      Locals:         0       2       0       0       0
  7612 ;;      Temps:          0       1       0       0       0
  7613 ;;      Totals:         0       5       0       0       0
  7614 ;;Total ram usage:        5 bytes
  7615 ;; Hardware stack levels used:    2
  7616 ;; Hardware stack levels required when called:    1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_Decodify_Command
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function _strcat
  7626  0BB3                     _strcat:	
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7630                           ;strcat@to stored from wreg
  7631  0BB3  00A4               	movwf	strcat@to
  7632  0BB4  00A3               	movwf	strcat@cp
  7633  0BB5                     l4545:	
  7634  0BB5  0823               	movf	strcat@cp,w
  7635  0BB6  0084               	movwf	4
  7636  0BB7  0800               	movf	0,w
  7637  0BB8  1903               	btfsc	3,2
  7638  0BB9  2BC0               	goto	l4549
  7639  0BBA  0AA3               	incf	strcat@cp,f
  7640  0BBB  2BB5               	goto	l4545
  7641  0BBC                     l4547:	
  7642  0BBC  0AA3               	incf	strcat@cp,f
  7643  0BBD  0AA0               	incf	strcat@from,f
  7644  0BBE  1903               	skipnz
  7645  0BBF  0AA1               	incf	strcat@from+1,f
  7646  0BC0                     l4549:	
  7647  0BC0  0821               	movf	strcat@from+1,w
  7648  0BC1  00FF               	movwf	127
  7649  0BC2  0820               	movf	strcat@from,w
  7650  0BC3  0084               	movwf	4
  7651  0BC4  160A  118A  2000  120A  158A  	fcall	stringtab
  7652  0BC9  00A2               	movwf	??_strcat
  7653  0BCA  0823               	movf	strcat@cp,w
  7654  0BCB  0084               	movwf	4
  7655  0BCC  0822               	movf	??_strcat,w
  7656  0BCD  1783               	bsf	3,7	;select IRP bank2
  7657  0BCE  0080               	movwf	0
  7658  0BCF  0800               	movf	0,w
  7659  0BD0  1903               	btfsc	3,2
  7660  0BD1  0008               	return
  7661  0BD2  2BBC               	goto	l4547
  7662  0BD3                     __end_of_strcat:	
  7663  0BD3                     __ptext37:	
  7664 ;; *************** function _USART_putc *****************
  7665 ;; Defined at:
  7666 ;;		line 89 in file "usart.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  value           1    wreg     unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  value           1    0[BANK0 ] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg
  7675 ;; Tracked objects:
  7676 ;;		On entry : 200/100
  7677 ;;		On exit  : 300/100
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         0       0       0       0       0
  7681 ;;      Locals:         0       1       0       0       0
  7682 ;;      Temps:          0       0       0       0       0
  7683 ;;      Totals:         0       1       0       0       0
  7684 ;;Total ram usage:        1 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    1
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_Decodify_Command
  7691 ;;		_Send_To_MB
  7692 ;;		_PROCULUS_Control_Register_Write
  7693 ;;		_PROCULUS_VP_Write
  7694 ;;		_USART_put_buffer
  7695 ;;		_USART_put_int
  7696 ;;		_USART_put_string
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function _USART_putc
  7702  0BD3                     _USART_putc:	
  7703                           
  7704                           ;incstack = 0
  7705                           ; Regs used in _USART_putc: [wreg]
  7706                           ;USART_putc@value stored from wreg
  7707  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  7708  0BD4  00A0               	movwf	USART_putc@value
  7709                           
  7710                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  7711  0BD5  3014               	movlw	20
  7712  0BD6  00F0               	movwf	_Delay_Led_Usart	;volatile
  7713  0BD7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  7714  0BD8                     l863:	
  7715                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  7716                           
  7717  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  7718  0BD9  1C98               	btfss	24,1	;volatile
  7719  0BDA  2BD8               	goto	l863
  7720                           
  7721                           ;usart.c: 93:     TXREG=value;
  7722  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  7723  0BDC  0820               	movf	USART_putc@value,w
  7724  0BDD  0099               	movwf	25	;volatile
  7725                           
  7726                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  7727  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  7728  0BDF  1698               	bsf	24,5	;volatile
  7729  0BE0  0008               	return
  7730  0BE1                     __end_of_USART_putc:	
  7731  0BE1                     __ptext45:	
  7732 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  7733 ;; Defined at:
  7734 ;;		line 146 in file "EEPROM_24C1025.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  chip_add        1    wreg     unsigned char 
  7737 ;;  mem_add         4   10[BANK0 ] unsigned long 
  7738 ;;  data            1   14[BANK0 ] PTR unsigned char 
  7739 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  chip_add        1   15[BANK0 ] unsigned char 
  7742 ;;  ctrl            1   17[BANK0 ] unsigned char 
  7743 ;;  range           1   16[BANK0 ] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 300/100
  7750 ;;		On exit  : 300/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7753 ;;      Params:         0       5       0       0       0
  7754 ;;      Locals:         0       3       0       0       0
  7755 ;;      Temps:          0       0       0       0       0
  7756 ;;      Totals:         0       8       0       0       0
  7757 ;;Total ram usage:        8 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    3
  7760 ;; This function calls:
  7761 ;;		_I2C_Master_Start
  7762 ;;		_I2C_Master_Stop
  7763 ;;		_I2C_Master_Write
  7764 ;;		_my_delay_ms_WDT
  7765 ;; This function is called by:
  7766 ;;		_Decodify_Command
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function _EEPROM_24C1025_Write_Str
  7772  0BE1                     _EEPROM_24C1025_Write_Str:	
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  7776                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  7777  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  7778  0BE2  00AF               	movwf	EEPROM_24C1025_Write_Str@chip_add
  7779                           
  7780                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
  7781  0BE3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7782  0BE4  1D03               	btfss	3,2
  7783  0BE5  0008               	return
  7784  0BE6  3002               	movlw	2
  7785  0BE7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7786  0BE8  1D03               	skipz
  7787  0BE9  2BF0               	goto	u4733
  7788  0BEA  3000               	movlw	0
  7789  0BEB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7790  0BEC  1D03               	skipz
  7791  0BED  2BF0               	goto	u4733
  7792  0BEE  3000               	movlw	0
  7793  0BEF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7794  0BF0                     u4733:	
  7795  0BF0  1803               	btfsc	3,0
  7796  0BF1  0008               	return
  7797  0BF2                     L20:	
  7798                           
  7799                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  7800  0BF2  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7801  0BF3  1D03               	btfss	3,2
  7802  0BF4  2C01               	goto	l5867
  7803  0BF5  3001               	movlw	1
  7804  0BF6  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7805  0BF7  1D03               	skipz
  7806  0BF8  2BFF               	goto	u4743
  7807  0BF9  3000               	movlw	0
  7808  0BFA  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7809  0BFB  1D03               	skipz
  7810  0BFC  2BFF               	goto	u4743
  7811  0BFD  3000               	movlw	0
  7812  0BFE  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7813  0BFF                     u4743:	
  7814  0BFF  1C03               	btfss	3,0
  7815  0C00  2C04               	goto	l5869
  7816  0C01                     l5867:	
  7817  0C01  3008               	movlw	8
  7818  0C02  00B0               	movwf	EEPROM_24C1025_Write_Str@range
  7819  0C03  2C05               	goto	l5871
  7820  0C04                     l5869:	
  7821  0C04  01B0               	clrf	EEPROM_24C1025_Write_Str@range
  7822  0C05                     l5871:	
  7823                           
  7824                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
  7825  0C05  082F               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  7826  0C06  00B1               	movwf	EEPROM_24C1025_Write_Str@ctrl
  7827  0C07  30A0               	movlw	160
  7828                           
  7829                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
  7830  0C08  1003               	clrc
  7831  0C09  0DB1               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  7832                           
  7833                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
  7834  0C0A  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  7835                           
  7836                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
  7837  0C0B  0830               	movf	EEPROM_24C1025_Write_Str@range,w
  7838  0C0C  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  7839                           
  7840                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
  7841  0C0D  2705  120A  158A   	fcall	_I2C_Master_Start
  7842                           
  7843                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
  7844  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  7845  0C11  0831               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  7846  0C12  00A0               	movwf	I2C_Master_Write@d
  7847  0C13  01A1               	clrf	I2C_Master_Write@d+1
  7848  0C14  26FF  120A  158A   	fcall	_I2C_Master_Write
  7849                           
  7850                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
  7851  0C17  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7852  0C18  00A0               	movwf	I2C_Master_Write@d
  7853  0C19  01A1               	clrf	I2C_Master_Write@d+1
  7854  0C1A  26FF  120A  158A   	fcall	_I2C_Master_Write
  7855                           
  7856                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
  7857  0C1D  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  7858  0C1E  00A0               	movwf	I2C_Master_Write@d
  7859  0C1F  01A1               	clrf	I2C_Master_Write@d+1
  7860  0C20  26FF  120A  158A   	fcall	_I2C_Master_Write
  7861  0C23                     l5931:	
  7862                           ;EEPROM_24C1025.c: 162:      while(*data)
  7863                           
  7864                           
  7865                           ;EEPROM_24C1025.c: 162:      while(*data)
  7866  0C23  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7867  0C24  0084               	movwf	4
  7868  0C25  1383               	bcf	3,7	;select IRP bank0
  7869  0C26  0800               	movf	0,w
  7870  0C27  1903               	btfsc	3,2
  7871  0C28  2C69               	goto	l5933
  7872  0C29  0064               	clrwdt	;# 
  7873                           
  7874                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
  7875  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  7876  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0C2C  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7878  0C2D  1D03               	btfss	3,2
  7879  0C2E  0008               	return
  7880  0C2F  3002               	movlw	2
  7881  0C30  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7882  0C31  1D03               	skipz
  7883  0C32  2C39               	goto	u4753
  7884  0C33  3000               	movlw	0
  7885  0C34  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7886  0C35  1D03               	skipz
  7887  0C36  2C39               	goto	u4753
  7888  0C37  3000               	movlw	0
  7889  0C38  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7890  0C39                     u4753:	
  7891  0C39  1803               	btfsc	3,0
  7892  0C3A  0008               	return
  7893                           
  7894                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
  7895  0C3B  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  7896  0C3C  3E01               	addlw	1
  7897  0C3D  397F               	andlw	127
  7898  0C3E  1D03               	btfss	3,2
  7899  0C3F  2C59               	goto	l5925
  7900                           
  7901                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
  7902  0C40  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7903  0C41  27D2  120A  158A   	fcall	PL32	;call to abstracted procedure
  7904  0C44  26FF  120A  158A   	fcall	_I2C_Master_Write
  7905                           
  7906                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
  7907  0C47  270B  120A  158A   	fcall	_I2C_Master_Stop
  7908                           
  7909                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
  7910  0C4A  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  7911  0C4D  2730  120A  158A   	fcall	_my_delay_ms_WDT
  7912                           
  7913                           ;EEPROM_24C1025.c: 172:             mem_add++;
  7914  0C50  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  7915  0C51  1903               	skipnz
  7916  0C52  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  7917  0C53  1903               	skipnz
  7918  0C54  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  7919  0C55  1903               	skipnz
  7920  0C56  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  7921                           
  7922                           ;EEPROM_24C1025.c: 173:             data++;
  7923  0C57  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  7924  0C58  2BF2               	goto	L20
  7925  0C59                     l5925:	
  7926                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  7927                           
  7928                           
  7929                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
  7930  0C59  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7931  0C5A  27D2  120A  158A   	fcall	PL32	;call to abstracted procedure
  7932  0C5D  26FF  120A  158A   	fcall	_I2C_Master_Write
  7933                           
  7934                           ;EEPROM_24C1025.c: 188:             data++;
  7935  0C60  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  7936                           
  7937                           ;EEPROM_24C1025.c: 189:             mem_add++;
  7938  0C61  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  7939  0C62  1903               	skipnz
  7940  0C63  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  7941  0C64  1903               	skipnz
  7942  0C65  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  7943  0C66  1903               	skipnz
  7944  0C67  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  7945  0C68  2C23               	goto	l5931
  7946  0C69                     l5933:	
  7947                           
  7948                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
  7949  0C69  01A0               	clrf	I2C_Master_Write@d
  7950  0C6A  01A1               	clrf	I2C_Master_Write@d+1
  7951  0C6B  26FF  120A  158A   	fcall	_I2C_Master_Write
  7952                           
  7953                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
  7954  0C6E  270B  120A  158A   	fcall	_I2C_Master_Stop
  7955                           
  7956                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
  7957  0C71  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  7958  0C74  2F30               	ljmp	l3517
  7959  0C75                     __end_of_EEPROM_24C1025_Write_Str:	
  7960  0C75                     __ptext47:	
  7961 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  7962 ;; Defined at:
  7963 ;;		line 201 in file "EEPROM_24C1025.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  chip_add        1    wreg     unsigned char 
  7966 ;;  mem_add         4   10[BANK0 ] unsigned long 
  7967 ;;  texto           1   14[BANK0 ] PTR unsigned char 
  7968 ;;		 -> texto(16), 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  chip_add        1   17[BANK0 ] unsigned char 
  7971 ;;  ctrl            1   19[BANK0 ] unsigned char 
  7972 ;;  range           1   18[BANK0 ] unsigned char 
  7973 ;;  cnt             1   16[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 300/100
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7983 ;;      Params:         0       5       0       0       0
  7984 ;;      Locals:         0       4       0       0       0
  7985 ;;      Temps:          0       1       0       0       0
  7986 ;;      Totals:         0      10       0       0       0
  7987 ;;Total ram usage:       10 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    3
  7990 ;; This function calls:
  7991 ;;		_I2C_Master_Read
  7992 ;;		_I2C_Master_RepeatedStart
  7993 ;;		_I2C_Master_Start
  7994 ;;		_I2C_Master_Stop
  7995 ;;		_I2C_Master_Write
  7996 ;;		_my_delay_ms_WDT
  7997 ;; This function is called by:
  7998 ;;		_Decodify_Command
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function _EEPROM_24C1025_Read_Str
  8004  0C75                     _EEPROM_24C1025_Read_Str:	
  8005                           
  8006                           ;incstack = 0
  8007                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  8008                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  8009  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  8010  0C76  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
  8011                           
  8012                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
  8013  0C77  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8014                           
  8015                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
  8016  0C78  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8017  0C79  1D03               	btfss	3,2
  8018  0C7A  0008               	return
  8019  0C7B  3002               	movlw	2
  8020  0C7C  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8021  0C7D  1D03               	skipz
  8022  0C7E  2C85               	goto	u4793
  8023  0C7F  3000               	movlw	0
  8024  0C80  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8025  0C81  1D03               	skipz
  8026  0C82  2C85               	goto	u4793
  8027  0C83  3000               	movlw	0
  8028  0C84  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8029  0C85                     u4793:	
  8030  0C85  1803               	btfsc	3,0
  8031  0C86  0008               	return
  8032                           
  8033                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8034  0C87  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8035  0C88  1D03               	btfss	3,2
  8036  0C89  2C96               	goto	l5945
  8037  0C8A  3001               	movlw	1
  8038  0C8B  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8039  0C8C  1D03               	skipz
  8040  0C8D  2C94               	goto	u4803
  8041  0C8E  3000               	movlw	0
  8042  0C8F  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8043  0C90  1D03               	skipz
  8044  0C91  2C94               	goto	u4803
  8045  0C92  3000               	movlw	0
  8046  0C93  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8047  0C94                     u4803:	
  8048  0C94  1C03               	btfss	3,0
  8049  0C95  2C99               	goto	l5947
  8050  0C96                     l5945:	
  8051  0C96  3008               	movlw	8
  8052  0C97  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  8053  0C98  2C9A               	goto	l5949
  8054  0C99                     l5947:	
  8055  0C99  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8056  0C9A                     l5949:	
  8057                           
  8058                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
  8059                           
  8060                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
  8061                           
  8062                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
  8063                           
  8064                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
  8065                           
  8066                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
  8067  0C9A  27A8  120A  158A   	fcall	PL16	;call to abstracted procedure
  8068                           
  8069                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
  8070  0C9D  2705  120A  158A   	fcall	_I2C_Master_Start
  8071                           
  8072                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
  8073  0CA0  27F0  120A  158A   	fcall	PL46	;call to abstracted procedure
  8074  0CA3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8075                           
  8076                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
  8077  0CA6  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8078  0CA7  00A0               	movwf	I2C_Master_Write@d
  8079  0CA8  01A1               	clrf	I2C_Master_Write@d+1
  8080  0CA9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8081                           
  8082                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
  8083  0CAC  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8084  0CAD  00A0               	movwf	I2C_Master_Write@d
  8085  0CAE  01A1               	clrf	I2C_Master_Write@d+1
  8086  0CAF  26FF  120A  158A   	fcall	_I2C_Master_Write
  8087                           
  8088                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
  8089  0CB2  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8090                           
  8091                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
  8092  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  8093  0CB6  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8094  0CB7  00A0               	movwf	I2C_Master_Write@d
  8095  0CB8  01A1               	clrf	I2C_Master_Write@d+1
  8096  0CB9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8097                           
  8098                           ;EEPROM_24C1025.c: 222:      cnt=0;
  8099  0CBC  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
  8100  0CBD                     l69:	
  8101                           ;EEPROM_24C1025.c: 223:      do{
  8102                           
  8103  0CBD  0064               	clrwdt	;# 
  8104                           
  8105                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
  8106  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  8107  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  8108  0CC0  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8109  0CC1  1D03               	btfss	3,2
  8110  0CC2  2D44               	goto	l6027
  8111  0CC3  3002               	movlw	2
  8112  0CC4  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8113  0CC5  1D03               	skipz
  8114  0CC6  2CCD               	goto	u4813
  8115  0CC7  3000               	movlw	0
  8116  0CC8  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8117  0CC9  1D03               	skipz
  8118  0CCA  2CCD               	goto	u4813
  8119  0CCB  3000               	movlw	0
  8120  0CCC  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8121  0CCD                     u4813:	
  8122  0CCD  1803               	btfsc	3,0
  8123  0CCE  2D44               	goto	l6027
  8124                           
  8125                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
  8126  0CCF  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8127  0CD0  3E01               	addlw	1
  8128  0CD1  397F               	andlw	127
  8129  0CD2  1D03               	btfss	3,2
  8130  0CD3  2D25               	goto	l6017
  8131                           
  8132                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
  8133  0CD4  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8134  0CD5  0084               	movwf	4
  8135  0CD6  01A0               	clrf	I2C_Master_Read@a
  8136  0CD7  01A1               	clrf	I2C_Master_Read@a+1
  8137  0CD8  270E  120A  158A   	fcall	_I2C_Master_Read
  8138  0CDB  0820               	movf	?_I2C_Master_Read,w
  8139  0CDC  1783               	bsf	3,7	;select IRP bank2
  8140  0CDD  0080               	movwf	0
  8141                           
  8142                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
  8143  0CDE  270B  120A  158A   	fcall	_I2C_Master_Stop
  8144                           
  8145                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
  8146  0CE1  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8147  0CE4  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8148                           
  8149                           ;EEPROM_24C1025.c: 232:              mem_add++;
  8150  0CE7  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8151  0CE8  1903               	skipnz
  8152  0CE9  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8153  0CEA  1903               	skipnz
  8154  0CEB  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8155  0CEC  1903               	skipnz
  8156  0CED  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8157                           
  8158                           ;EEPROM_24C1025.c: 233:              texto++;
  8159  0CEE  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
  8160                           
  8161                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8162  0CEF  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8163  0CF0  1D03               	btfss	3,2
  8164  0CF1  2CFE               	goto	l5991
  8165  0CF2  3001               	movlw	1
  8166  0CF3  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8167  0CF4  1D03               	skipz
  8168  0CF5  2CFC               	goto	u4833
  8169  0CF6  3000               	movlw	0
  8170  0CF7  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8171  0CF8  1D03               	skipz
  8172  0CF9  2CFC               	goto	u4833
  8173  0CFA  3000               	movlw	0
  8174  0CFB  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8175  0CFC                     u4833:	
  8176  0CFC  1C03               	btfss	3,0
  8177  0CFD  2D01               	goto	l5993
  8178  0CFE                     l5991:	
  8179  0CFE  3008               	movlw	8
  8180  0CFF  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  8181  0D00  2D02               	goto	l5995
  8182  0D01                     l5993:	
  8183  0D01  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8184  0D02                     l5995:	
  8185                           
  8186                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
  8187                           
  8188                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
  8189                           
  8190                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
  8191                           
  8192                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
  8193                           
  8194                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
  8195  0D02  27A8  120A  158A   	fcall	PL16	;call to abstracted procedure
  8196                           
  8197                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
  8198  0D05  2705  120A  158A   	fcall	_I2C_Master_Start
  8199                           
  8200                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
  8201  0D08  27F0  120A  158A   	fcall	PL46	;call to abstracted procedure
  8202  0D0B  26FF  120A  158A   	fcall	_I2C_Master_Write
  8203                           
  8204                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
  8205  0D0E  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8206  0D0F  00A0               	movwf	I2C_Master_Write@d
  8207  0D10  01A1               	clrf	I2C_Master_Write@d+1
  8208  0D11  26FF  120A  158A   	fcall	_I2C_Master_Write
  8209                           
  8210                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
  8211  0D14  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8212  0D15  00A0               	movwf	I2C_Master_Write@d
  8213  0D16  01A1               	clrf	I2C_Master_Write@d+1
  8214  0D17  26FF  120A  158A   	fcall	_I2C_Master_Write
  8215                           
  8216                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
  8217  0D1A  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8218                           
  8219                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
  8220  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  8221  0D1E  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8222  0D1F  00A0               	movwf	I2C_Master_Write@d
  8223  0D20  01A1               	clrf	I2C_Master_Write@d+1
  8224  0D21  26FF  120A  158A   	fcall	_I2C_Master_Write
  8225                           
  8226                           ;EEPROM_24C1025.c: 247:              }
  8227  0D24  2D3D               	goto	l6025
  8228  0D25                     l6017:	
  8229                           
  8230                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
  8231  0D25  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8232  0D26  0084               	movwf	4
  8233  0D27  01A0               	clrf	I2C_Master_Read@a
  8234  0D28  0AA0               	incf	I2C_Master_Read@a,f
  8235  0D29  01A1               	clrf	I2C_Master_Read@a+1
  8236  0D2A  270E  120A  158A   	fcall	_I2C_Master_Read
  8237  0D2D  0820               	movf	?_I2C_Master_Read,w
  8238  0D2E  1783               	bsf	3,7	;select IRP bank2
  8239  0D2F  0080               	movwf	0
  8240                           
  8241                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
  8242  0D30  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8243  0D31  0084               	movwf	4
  8244  0D32  0800               	movf	0,w
  8245  0D33  1903               	btfsc	3,2
  8246  0D34  2D44               	goto	l6027
  8247                           
  8248                           ;EEPROM_24C1025.c: 252:              texto++;
  8249  0D35  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
  8250                           
  8251                           ;EEPROM_24C1025.c: 253:              mem_add++;
  8252  0D36  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8253  0D37  1903               	skipnz
  8254  0D38  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8255  0D39  1903               	skipnz
  8256  0D3A  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8257  0D3B  1903               	skipnz
  8258  0D3C  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8259  0D3D                     l6025:	
  8260                           
  8261                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
  8262  0D3D  0830               	movf	EEPROM_24C1025_Read_Str@cnt,w
  8263  0D3E  0AB0               	incf	EEPROM_24C1025_Read_Str@cnt,f
  8264  0D3F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
  8265  0D40  3040               	movlw	64
  8266  0D41  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
  8267  0D42  1C03               	skipc
  8268  0D43  2CBD               	goto	l69
  8269  0D44                     l6027:	
  8270                           
  8271                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
  8272  0D44  01A0               	clrf	I2C_Master_Read@a
  8273  0D45  01A1               	clrf	I2C_Master_Read@a+1
  8274  0D46  270E  120A  158A   	fcall	_I2C_Master_Read
  8275                           
  8276                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
  8277  0D49  270B  120A  158A   	fcall	_I2C_Master_Stop
  8278                           
  8279                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  8280  0D4C  30B9               	movlw	185
  8281  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  8282  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  8283  0D4F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
  8284  0D50                     u5497:	
  8285  0D50  2D51               	nop2
  8286  0D51  2D52               	nop2
  8287  0D52  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8288  0D53  2D50               	goto	u5497
  8289  0D54  2D55               	nop2
  8290  0D55  0008               	return
  8291  0D56                     __end_of_EEPROM_24C1025_Read_Str:	
  8292  0D56                     __ptext50:	
  8293 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
  8294 ;; Defined at:
  8295 ;;		line 77 in file "EEPROM_24C1025.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  chip_add        1    wreg     unsigned char 
  8298 ;;  mem_add         4   10[BANK0 ] unsigned long 
  8299 ;;  sizedata        1   14[BANK0 ] unsigned char 
  8300 ;;  data            2   15[BANK0 ] PTR unsigned char 
  8301 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  chip_add        1   19[BANK0 ] unsigned char 
  8304 ;;  cnt             1   18[BANK0 ] unsigned char 
  8305 ;;  ctrl            1   21[BANK0 ] unsigned char 
  8306 ;;  range           1   20[BANK0 ] unsigned char 
  8307 ;;  cnt             1    0        unsigned char 
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8312 ;; Tracked objects:
  8313 ;;		On entry : 200/100
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8317 ;;      Params:         0       7       0       0       0
  8318 ;;      Locals:         0       4       0       0       0
  8319 ;;      Temps:          0       1       0       0       0
  8320 ;;      Totals:         0      12       0       0       0
  8321 ;;Total ram usage:       12 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    3
  8324 ;; This function calls:
  8325 ;;		_I2C_Master_Read
  8326 ;;		_I2C_Master_RepeatedStart
  8327 ;;		_I2C_Master_Start
  8328 ;;		_I2C_Master_Stop
  8329 ;;		_I2C_Master_Write
  8330 ;;		_my_delay_ms_WDT
  8331 ;; This function is called by:
  8332 ;;		_EEPROM_24C1025_Read_Byte
  8333 ;;		_EEPROM_24C1025_Read_Int
  8334 ;;		_Decodify_Command
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _EEPROM_24C1025_Read_Buffer
  8340  0D56                     _EEPROM_24C1025_Read_Buffer:	
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  8344                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
  8345  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  8346  0D57  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
  8347                           
  8348                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
  8349  0D58  3014               	movlw	20
  8350  0D59  00F4               	movwf	_Delay_Led_Memory	;volatile
  8351  0D5A  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  8352                           
  8353                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
  8354  0D5B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8355  0D5C  1D03               	btfss	3,2
  8356  0D5D  0008               	return
  8357  0D5E  3002               	movlw	2
  8358  0D5F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8359  0D60  1D03               	skipz
  8360  0D61  2D68               	goto	u4553
  8361  0D62  3000               	movlw	0
  8362  0D63  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8363  0D64  1D03               	skipz
  8364  0D65  2D68               	goto	u4553
  8365  0D66  3000               	movlw	0
  8366  0D67  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8367  0D68                     u4553:	
  8368  0D68  1803               	btfsc	3,0
  8369  0D69  0008               	return
  8370                           
  8371                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8372  0D6A  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8373  0D6B  1D03               	btfss	3,2
  8374  0D6C  2D79               	goto	l5649
  8375  0D6D  3001               	movlw	1
  8376  0D6E  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8377  0D6F  1D03               	skipz
  8378  0D70  2D77               	goto	u4563
  8379  0D71  3000               	movlw	0
  8380  0D72  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8381  0D73  1D03               	skipz
  8382  0D74  2D77               	goto	u4563
  8383  0D75  3000               	movlw	0
  8384  0D76  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8385  0D77                     u4563:	
  8386  0D77  1C03               	btfss	3,0
  8387  0D78  2D7C               	goto	l5651
  8388  0D79                     l5649:	
  8389  0D79  3008               	movlw	8
  8390  0D7A  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
  8391  0D7B  2D7D               	goto	l5653
  8392  0D7C                     l5651:	
  8393  0D7C  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
  8394  0D7D                     l5653:	
  8395                           
  8396                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
  8397                           
  8398                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
  8399                           
  8400                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
  8401                           
  8402                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
  8403                           
  8404                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
  8405  0D7D  27B2  120A  158A   	fcall	PL20	;call to abstracted procedure
  8406                           
  8407                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
  8408  0D80  2705  120A  158A   	fcall	_I2C_Master_Start
  8409                           
  8410                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
  8411  0D83  27E4  120A  158A   	fcall	PL42	;call to abstracted procedure
  8412  0D86  26FF  120A  158A   	fcall	_I2C_Master_Write
  8413                           
  8414                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
  8415  0D89  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8416  0D8A  00A0               	movwf	I2C_Master_Write@d
  8417  0D8B  01A1               	clrf	I2C_Master_Write@d+1
  8418  0D8C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8419                           
  8420                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
  8421  0D8F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8422  0D90  00A0               	movwf	I2C_Master_Write@d
  8423  0D91  01A1               	clrf	I2C_Master_Write@d+1
  8424  0D92  26FF  120A  158A   	fcall	_I2C_Master_Write
  8425                           
  8426                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
  8427  0D95  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8428                           
  8429                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
  8430  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  8431  0D99  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  8432  0D9A  00A0               	movwf	I2C_Master_Write@d
  8433  0D9B  01A1               	clrf	I2C_Master_Write@d+1
  8434  0D9C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8435                           
  8436                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
  8437  0D9F  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
  8438  0DA0                     l5729:	
  8439  0DA0  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
  8440  0DA1  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
  8441  0DA2  1803               	btfsc	3,0
  8442  0DA3  2E23               	goto	l5731
  8443  0DA4  0064               	clrwdt	;# 
  8444                           
  8445                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
  8446  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8447  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8448  0DA7  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8449  0DA8  1D03               	btfss	3,2
  8450  0DA9  2E23               	goto	l5731
  8451  0DAA  3002               	movlw	2
  8452  0DAB  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8453  0DAC  1D03               	skipz
  8454  0DAD  2DB4               	goto	u4573
  8455  0DAE  3000               	movlw	0
  8456  0DAF  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8457  0DB0  1D03               	skipz
  8458  0DB1  2DB4               	goto	u4573
  8459  0DB2  3000               	movlw	0
  8460  0DB3  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8461  0DB4                     u4573:	
  8462  0DB4  1803               	btfsc	3,0
  8463  0DB5  2E23               	goto	l5731
  8464                           
  8465                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
  8466  0DB6  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8467  0DB7  3E01               	addlw	1
  8468  0DB8  397F               	andlw	127
  8469  0DB9  1D03               	btfss	3,2
  8470  0DBA  2E0D               	goto	l5721
  8471                           
  8472                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
  8473  0DBB  27D8  120A  158A   	fcall	PL38	;call to abstracted procedure
  8474  0DBE  01A1               	clrf	I2C_Master_Read@a+1
  8475  0DBF  270E  120A  158A   	fcall	_I2C_Master_Read
  8476  0DC2  0820               	movf	?_I2C_Master_Read,w
  8477  0DC3  0080               	movwf	0
  8478                           
  8479                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
  8480  0DC4  270B  120A  158A   	fcall	_I2C_Master_Stop
  8481                           
  8482                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
  8483  0DC7  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8484  0DCA  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8485                           
  8486                           ;EEPROM_24C1025.c: 114:              mem_add++;
  8487  0DCD  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  8488  0DCE  1903               	skipnz
  8489  0DCF  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  8490  0DD0  1903               	skipnz
  8491  0DD1  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  8492  0DD2  1903               	skipnz
  8493  0DD3  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  8494                           
  8495                           ;EEPROM_24C1025.c: 115:              data++;
  8496  0DD4  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
  8497  0DD5  1903               	skipnz
  8498  0DD6  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  8499                           
  8500                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8501  0DD7  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8502  0DD8  1D03               	btfss	3,2
  8503  0DD9  2DE6               	goto	l5695
  8504  0DDA  3001               	movlw	1
  8505  0DDB  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8506  0DDC  1D03               	skipz
  8507  0DDD  2DE4               	goto	u4593
  8508  0DDE  3000               	movlw	0
  8509  0DDF  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8510  0DE0  1D03               	skipz
  8511  0DE1  2DE4               	goto	u4593
  8512  0DE2  3000               	movlw	0
  8513  0DE3  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8514  0DE4                     u4593:	
  8515  0DE4  1C03               	btfss	3,0
  8516  0DE5  2DE9               	goto	l5697
  8517  0DE6                     l5695:	
  8518  0DE6  3008               	movlw	8
  8519  0DE7  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
  8520  0DE8  2DEA               	goto	l5699
  8521  0DE9                     l5697:	
  8522  0DE9  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
  8523  0DEA                     l5699:	
  8524                           
  8525                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
  8526                           
  8527                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
  8528                           
  8529                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
  8530                           
  8531                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
  8532                           
  8533                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
  8534  0DEA  27B2  120A  158A   	fcall	PL20	;call to abstracted procedure
  8535                           
  8536                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
  8537  0DED  2705  120A  158A   	fcall	_I2C_Master_Start
  8538                           
  8539                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
  8540  0DF0  27E4  120A  158A   	fcall	PL42	;call to abstracted procedure
  8541  0DF3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8542                           
  8543                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
  8544  0DF6  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8545  0DF7  00A0               	movwf	I2C_Master_Write@d
  8546  0DF8  01A1               	clrf	I2C_Master_Write@d+1
  8547  0DF9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8548                           
  8549                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
  8550  0DFC  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8551  0DFD  00A0               	movwf	I2C_Master_Write@d
  8552  0DFE  01A1               	clrf	I2C_Master_Write@d+1
  8553  0DFF  26FF  120A  158A   	fcall	_I2C_Master_Write
  8554                           
  8555                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
  8556  0E02  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8557                           
  8558                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
  8559  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  8560  0E06  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  8561  0E07  00A0               	movwf	I2C_Master_Write@d
  8562  0E08  01A1               	clrf	I2C_Master_Write@d+1
  8563  0E09  26FF  120A  158A   	fcall	_I2C_Master_Write
  8564                           
  8565                           ;EEPROM_24C1025.c: 129:              }
  8566  0E0C  2E21               	goto	l5727
  8567  0E0D                     l5721:	
  8568                           
  8569                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
  8570  0E0D  27D8  120A  158A   	fcall	PL38	;call to abstracted procedure
  8571  0E10  0AA0               	incf	I2C_Master_Read@a,f
  8572  0E11  01A1               	clrf	I2C_Master_Read@a+1
  8573  0E12  270E  120A  158A   	fcall	_I2C_Master_Read
  8574  0E15  0820               	movf	?_I2C_Master_Read,w
  8575  0E16  0080               	movwf	0
  8576                           
  8577                           ;EEPROM_24C1025.c: 133:              data++;
  8578  0E17  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
  8579  0E18  1903               	skipnz
  8580  0E19  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  8581                           
  8582                           ;EEPROM_24C1025.c: 134:              mem_add++;
  8583  0E1A  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  8584  0E1B  1903               	skipnz
  8585  0E1C  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  8586  0E1D  1903               	skipnz
  8587  0E1E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  8588  0E1F  1903               	skipnz
  8589  0E20  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  8590  0E21                     l5727:	
  8591                           
  8592                           ;EEPROM_24C1025.c: 136:         }
  8593  0E21  0AB2               	incf	EEPROM_24C1025_Read_Buffer@cnt_103,f
  8594  0E22  2DA0               	goto	l5729
  8595  0E23                     l5731:	
  8596                           
  8597                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
  8598  0E23  01A0               	clrf	I2C_Master_Read@a
  8599  0E24  01A1               	clrf	I2C_Master_Read@a+1
  8600  0E25  270E  120A  158A   	fcall	_I2C_Master_Read
  8601                           
  8602                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
  8603  0E28  270B  120A  158A   	fcall	_I2C_Master_Stop
  8604                           
  8605                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
  8606  0E2B  30B9               	movlw	185
  8607  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  8608  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  8609  0E2E  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
  8610  0E2F                     u5507:	
  8611  0E2F  2E30               	nop2
  8612  0E30  2E31               	nop2
  8613  0E31  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  8614  0E32  2E2F               	goto	u5507
  8615  0E33  2E34               	nop2
  8616  0E34  0008               	return
  8617  0E35                     __end_of_EEPROM_24C1025_Read_Buffer:	
  8618  0E35                     __ptext55:	
  8619 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
  8620 ;; Defined at:
  8621 ;;		line 14 in file "EEPROM_24C1025.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  chip_add        1    wreg     unsigned char 
  8624 ;;  mem_add         4   10[BANK0 ] unsigned long 
  8625 ;;  sizedata        1   14[BANK0 ] unsigned char 
  8626 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8627 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  chip_add        1   19[BANK0 ] unsigned char 
  8630 ;;  ctrl            1   21[BANK0 ] unsigned char 
  8631 ;;  range           1   20[BANK0 ] unsigned char 
  8632 ;;  count           1   18[BANK0 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      void 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 200/100
  8639 ;;		On exit  : 300/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8642 ;;      Params:         0       6       0       0       0
  8643 ;;      Locals:         0       4       0       0       0
  8644 ;;      Temps:          0       2       0       0       0
  8645 ;;      Totals:         0      12       0       0       0
  8646 ;;Total ram usage:       12 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    3
  8649 ;; This function calls:
  8650 ;;		_I2C_Master_Start
  8651 ;;		_I2C_Master_Stop
  8652 ;;		_I2C_Master_Write
  8653 ;;		_my_delay_ms_WDT
  8654 ;; This function is called by:
  8655 ;;		_EEPROM_24C1025_Write_Byte
  8656 ;;		_EEPROM_24C1025_Write_Int
  8657 ;;		_Decodify_Command
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _EEPROM_24C1025_Write_Buffer
  8663  0E35                     _EEPROM_24C1025_Write_Buffer:	
  8664                           
  8665                           ;incstack = 0
  8666                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  8667                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
  8668  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  8669  0E36  00B3               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
  8670                           
  8671                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
  8672  0E37  3014               	movlw	20
  8673  0E38  00F4               	movwf	_Delay_Led_Memory	;volatile
  8674  0E39  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  8675                           
  8676                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
  8677  0E3A  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8678  0E3B  1D03               	btfss	3,2
  8679  0E3C  0008               	return
  8680  0E3D  3002               	movlw	2
  8681  0E3E  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8682  0E3F  1D03               	skipz
  8683  0E40  2E47               	goto	u4393
  8684  0E41  3000               	movlw	0
  8685  0E42  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8686  0E43  1D03               	skipz
  8687  0E44  2E47               	goto	u4393
  8688  0E45  3000               	movlw	0
  8689  0E46  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8690  0E47                     u4393:	
  8691  0E47  1803               	btfsc	3,0
  8692  0E48  0008               	return
  8693                           
  8694                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8695  0E49  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8696  0E4A  1D03               	btfss	3,2
  8697  0E4B  2E58               	goto	l5489
  8698  0E4C  3001               	movlw	1
  8699  0E4D  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8700  0E4E  1D03               	skipz
  8701  0E4F  2E56               	goto	u4403
  8702  0E50  3000               	movlw	0
  8703  0E51  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8704  0E52  1D03               	skipz
  8705  0E53  2E56               	goto	u4403
  8706  0E54  3000               	movlw	0
  8707  0E55  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8708  0E56                     u4403:	
  8709  0E56  1C03               	btfss	3,0
  8710  0E57  2E5B               	goto	l5491
  8711  0E58                     l5489:	
  8712  0E58  3008               	movlw	8
  8713  0E59  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
  8714  0E5A  2E5C               	goto	l5493
  8715  0E5B                     l5491:	
  8716  0E5B  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
  8717  0E5C                     l5493:	
  8718                           
  8719                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
  8720                           
  8721                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
  8722                           
  8723                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
  8724                           
  8725                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
  8726  0E5C  27BC  120A  158A   	fcall	PL22	;call to abstracted procedure
  8727                           
  8728                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
  8729  0E5F  2705  120A  158A   	fcall	_I2C_Master_Start
  8730                           
  8731                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
  8732  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0E63  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  8734  0E64  00A0               	movwf	I2C_Master_Write@d
  8735  0E65  01A1               	clrf	I2C_Master_Write@d+1
  8736  0E66  26FF  120A  158A   	fcall	_I2C_Master_Write
  8737                           
  8738                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
  8739  0E69  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8740  0E6A  00A0               	movwf	I2C_Master_Write@d
  8741  0E6B  01A1               	clrf	I2C_Master_Write@d+1
  8742  0E6C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8743                           
  8744                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
  8745  0E6F  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8746  0E70  00A0               	movwf	I2C_Master_Write@d
  8747  0E71  01A1               	clrf	I2C_Master_Write@d+1
  8748  0E72  26FF  120A  158A   	fcall	_I2C_Master_Write
  8749                           
  8750                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
  8751  0E75  01B2               	clrf	EEPROM_24C1025_Write_Buffer@count
  8752  0E76                     l5557:	
  8753  0E76  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
  8754  0E77  3EFF               	addlw	255
  8755  0E78  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
  8756  0E79  30FF               	movlw	255
  8757  0E7A  1803               	skipnc
  8758  0E7B  3000               	movlw	0
  8759  0E7C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  8760  0E7D  3A80               	xorlw	128
  8761  0E7E  3C80               	sublw	128
  8762  0E7F  1D03               	skipz
  8763  0E80  2E83               	goto	u4445
  8764  0E81  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
  8765  0E82  0232               	subwf	EEPROM_24C1025_Write_Buffer@count,w
  8766  0E83                     u4445:	
  8767  0E83  1803               	btfsc	3,0
  8768  0E84  2EF0               	goto	l5559
  8769  0E85  0064               	clrwdt	;# 
  8770                           
  8771                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
  8772  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  8773  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  8774  0E88  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8775  0E89  1D03               	btfss	3,2
  8776  0E8A  0008               	return
  8777  0E8B  3002               	movlw	2
  8778  0E8C  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8779  0E8D  1D03               	skipz
  8780  0E8E  2E95               	goto	u4413
  8781  0E8F  3000               	movlw	0
  8782  0E90  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8783  0E91  1D03               	skipz
  8784  0E92  2E95               	goto	u4413
  8785  0E93  3000               	movlw	0
  8786  0E94  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8787  0E95                     u4413:	
  8788  0E95  1803               	btfsc	3,0
  8789  0E96  0008               	return
  8790                           
  8791                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
  8792  0E97  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8793  0E98  3E01               	addlw	1
  8794  0E99  397F               	andlw	127
  8795  0E9A  1D03               	btfss	3,2
  8796  0E9B  2EE0               	goto	l5549
  8797                           
  8798                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
  8799  0E9C  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8800  0E9F  26FF  120A  158A   	fcall	_I2C_Master_Write
  8801                           
  8802                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
  8803  0EA2  270B  120A  158A   	fcall	_I2C_Master_Stop
  8804                           
  8805                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
  8806  0EA5  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8807  0EA8  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8808                           
  8809                           ;EEPROM_24C1025.c: 47:             mem_add++;
  8810  0EAB  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  8811  0EAC  1903               	skipnz
  8812  0EAD  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  8813  0EAE  1903               	skipnz
  8814  0EAF  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  8815  0EB0  1903               	skipnz
  8816  0EB1  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  8817                           
  8818                           ;EEPROM_24C1025.c: 48:             data++;
  8819  0EB2  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
  8820                           
  8821                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8822  0EB3  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8823  0EB4  1D03               	btfss	3,2
  8824  0EB5  2EC2               	goto	l5529
  8825  0EB6  3001               	movlw	1
  8826  0EB7  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8827  0EB8  1D03               	skipz
  8828  0EB9  2EC0               	goto	u4433
  8829  0EBA  3000               	movlw	0
  8830  0EBB  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8831  0EBC  1D03               	skipz
  8832  0EBD  2EC0               	goto	u4433
  8833  0EBE  3000               	movlw	0
  8834  0EBF  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8835  0EC0                     u4433:	
  8836  0EC0  1C03               	btfss	3,0
  8837  0EC1  2EC5               	goto	l5531
  8838  0EC2                     l5529:	
  8839  0EC2  3008               	movlw	8
  8840  0EC3  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
  8841  0EC4  2EC6               	goto	l5533
  8842  0EC5                     l5531:	
  8843  0EC5  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
  8844  0EC6                     l5533:	
  8845                           
  8846                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
  8847                           
  8848                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
  8849                           
  8850                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
  8851                           
  8852                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
  8853  0EC6  27BC  120A  158A   	fcall	PL22	;call to abstracted procedure
  8854                           
  8855                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
  8856  0EC9  2705  120A  158A   	fcall	_I2C_Master_Start
  8857                           
  8858                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
  8859  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  8860  0ECD  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  8861  0ECE  00A0               	movwf	I2C_Master_Write@d
  8862  0ECF  01A1               	clrf	I2C_Master_Write@d+1
  8863  0ED0  26FF  120A  158A   	fcall	_I2C_Master_Write
  8864                           
  8865                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
  8866  0ED3  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8867  0ED4  00A0               	movwf	I2C_Master_Write@d
  8868  0ED5  01A1               	clrf	I2C_Master_Write@d+1
  8869  0ED6  26FF  120A  158A   	fcall	_I2C_Master_Write
  8870                           
  8871                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
  8872  0ED9  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8873  0EDA  00A0               	movwf	I2C_Master_Write@d
  8874  0EDB  01A1               	clrf	I2C_Master_Write@d+1
  8875  0EDC  26FF  120A  158A   	fcall	_I2C_Master_Write
  8876                           
  8877                           ;EEPROM_24C1025.c: 59:             }
  8878  0EDF  2EEE               	goto	l5555
  8879  0EE0                     l5549:	
  8880                           
  8881                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
  8882  0EE0  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8883  0EE3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8884                           
  8885                           ;EEPROM_24C1025.c: 63:             data++;
  8886  0EE6  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
  8887                           
  8888                           ;EEPROM_24C1025.c: 64:             mem_add++;
  8889  0EE7  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  8890  0EE8  1903               	skipnz
  8891  0EE9  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  8892  0EEA  1903               	skipnz
  8893  0EEB  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  8894  0EEC  1903               	skipnz
  8895  0EED  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  8896  0EEE                     l5555:	
  8897                           
  8898                           ;EEPROM_24C1025.c: 66:      }
  8899  0EEE  0AB2               	incf	EEPROM_24C1025_Write_Buffer@count,f
  8900  0EEF  2E76               	goto	l5557
  8901  0EF0                     l5559:	
  8902                           
  8903                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
  8904  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  8905  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  8906  0EF2  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8907  0EF5  26FF  120A  158A   	fcall	_I2C_Master_Write
  8908                           
  8909                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
  8910  0EF8  270B  120A  158A   	fcall	_I2C_Master_Stop
  8911                           
  8912                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
  8913  0EFB  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8914  0EFE  2F30               	ljmp	l3517
  8915  0EFF                     __end_of_EEPROM_24C1025_Write_Buffer:	
  8916  0EFF                     __ptext57:	
  8917 ;; *************** function _I2C_Master_Write *****************
  8918 ;; Defined at:
  8919 ;;		line 64 in file "I2C.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  d               2    0[BANK0 ] unsigned int 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0, pclath, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 300/0
  8930 ;;		On exit  : 300/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8933 ;;      Params:         0       2       0       0       0
  8934 ;;      Locals:         0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0
  8936 ;;      Totals:         0       2       0       0       0
  8937 ;;Total ram usage:        2 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    2
  8940 ;; This function calls:
  8941 ;;		_I2C_Master_Wait
  8942 ;; This function is called by:
  8943 ;;		_EEPROM_24C1025_Write_Buffer
  8944 ;;		_EEPROM_24C1025_Read_Buffer
  8945 ;;		_EEPROM_24C1025_Write_Str
  8946 ;;		_EEPROM_24C1025_Read_Str
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function _I2C_Master_Write
  8952  0EFF                     _I2C_Master_Write:	
  8953                           
  8954                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
  8955                           
  8956                           ;incstack = 0
  8957                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8958  0EFF  17EB               	bsf	_generic_status,7
  8959                           
  8960                           ;I2C.c: 67:   I2C_Master_Wait();
  8961  0F00  275D               	fcall	_I2C_Master_Wait
  8962                           
  8963                           ;I2C.c: 68:   SSPBUF = d;
  8964  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  8965  0F02  0820               	movf	I2C_Master_Write@d,w
  8966  0F03  0093               	movwf	19	;volatile
  8967  0F04  0008               	return
  8968  0F05                     __end_of_I2C_Master_Write:	
  8969  0F05                     __ptext59:	
  8970 ;; *************** function _I2C_Master_Start *****************
  8971 ;; Defined at:
  8972 ;;		line 45 in file "I2C.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0, pclath, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 300/0
  8983 ;;		On exit  : 300/100
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8986 ;;      Params:         0       0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0
  8989 ;;      Totals:         0       0       0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    2
  8993 ;; This function calls:
  8994 ;;		_I2C_Master_Wait
  8995 ;; This function is called by:
  8996 ;;		_EEPROM_24C1025_Write_Buffer
  8997 ;;		_EEPROM_24C1025_Read_Buffer
  8998 ;;		_EEPROM_24C1025_Write_Str
  8999 ;;		_EEPROM_24C1025_Read_Str
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _I2C_Master_Start
  9005  0F05                     _I2C_Master_Start:	
  9006                           
  9007                           ;I2C.c: 47:   Delay_Led_Memory=20;
  9008                           
  9009                           ;incstack = 0
  9010                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9011  0F05  3014               	movlw	20
  9012  0F06  00F4               	movwf	_Delay_Led_Memory	;volatile
  9013  0F07  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  9014                           
  9015                           ;I2C.c: 48:   I2C_Master_Wait();
  9016  0F08  275D               	fcall	_I2C_Master_Wait
  9017                           
  9018                           ;I2C.c: 49:   SEN = 1;
  9019  0F09  1411               	bsf	17,0	;volatile
  9020  0F0A  0008               	return
  9021  0F0B                     __end_of_I2C_Master_Start:	
  9022  0F0B                     __ptext58:	
  9023 ;; *************** function _I2C_Master_Stop *****************
  9024 ;; Defined at:
  9025 ;;		line 58 in file "I2C.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0, pclath, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 300/0
  9036 ;;		On exit  : 300/100
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    2
  9046 ;; This function calls:
  9047 ;;		_I2C_Master_Wait
  9048 ;; This function is called by:
  9049 ;;		_EEPROM_24C1025_Write_Buffer
  9050 ;;		_EEPROM_24C1025_Read_Buffer
  9051 ;;		_EEPROM_24C1025_Write_Str
  9052 ;;		_EEPROM_24C1025_Read_Str
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           
  9057                           ;psect for function _I2C_Master_Stop
  9058  0F0B                     _I2C_Master_Stop:	
  9059                           
  9060                           ;I2C.c: 60:   I2C_Master_Wait();
  9061                           
  9062                           ;incstack = 0
  9063                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9064  0F0B  275D               	fcall	_I2C_Master_Wait
  9065                           
  9066                           ;I2C.c: 61:   PEN = 1;
  9067  0F0C  1511               	bsf	17,2	;volatile
  9068  0F0D  0008               	return
  9069  0F0E                     __end_of_I2C_Master_Stop:	
  9070  0F0E                     __ptext52:	
  9071 ;; *************** function _I2C_Master_Read *****************
  9072 ;; Defined at:
  9073 ;;		line 71 in file "I2C.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  a               2    0[BANK0 ] unsigned short 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  temp            2    2[BANK0 ] unsigned short 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  2    0[BANK0 ] unsigned short 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0, pclath, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 300/0
  9084 ;;		On exit  : 300/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9087 ;;      Params:         0       2       0       0       0
  9088 ;;      Locals:         0       2       0       0       0
  9089 ;;      Temps:          0       0       0       0       0
  9090 ;;      Totals:         0       4       0       0       0
  9091 ;;Total ram usage:        4 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    2
  9094 ;; This function calls:
  9095 ;;		_I2C_Master_Wait
  9096 ;; This function is called by:
  9097 ;;		_EEPROM_24C1025_Read_Buffer
  9098 ;;		_EEPROM_24C1025_Read_Str
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function _I2C_Master_Read
  9104  0F0E                     _I2C_Master_Read:	
  9105                           
  9106                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9110  0F0E  17EB               	bsf	_generic_status,7
  9111                           
  9112                           ;I2C.c: 75:   I2C_Master_Wait();
  9113  0F0F  275D  120A  158A   	fcall	_I2C_Master_Wait
  9114                           
  9115                           ;I2C.c: 76:   RCEN = 1;
  9116  0F12  1591               	bsf	17,3	;volatile
  9117                           
  9118                           ;I2C.c: 77:   I2C_Master_Wait();
  9119  0F13  275D  120A  158A   	fcall	_I2C_Master_Wait
  9120                           
  9121                           ;I2C.c: 78:   temp = SSPBUF;
  9122  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  9123  0F17  0813               	movf	19,w	;volatile
  9124  0F18  00A2               	movwf	I2C_Master_Read@temp
  9125  0F19  01A3               	clrf	I2C_Master_Read@temp+1
  9126                           
  9127                           ;I2C.c: 79:   I2C_Master_Wait();
  9128  0F1A  275D  120A  158A   	fcall	_I2C_Master_Wait
  9129                           
  9130                           ;I2C.c: 80:   ACKDT = (a)?0:1;
  9131  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  9132  0F1E  0820               	movf	I2C_Master_Read@a,w
  9133  0F1F  0421               	iorwf	I2C_Master_Read@a+1,w
  9134  0F20  1D03               	btfss	3,2
  9135  0F21  2F26               	goto	u4450
  9136  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  9137  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  9138  0F24  1691               	bsf	17,5	;volatile
  9139  0F25  2F29               	goto	l5581
  9140  0F26                     u4450:	
  9141  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  9142  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  9143  0F28  1291               	bcf	17,5	;volatile
  9144  0F29                     l5581:	
  9145                           
  9146                           ;I2C.c: 81:   ACKEN = 1;
  9147  0F29  1611               	bsf	17,4	;volatile
  9148                           
  9149                           ;I2C.c: 82:   return temp;
  9150  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  9151  0F2B  0823               	movf	I2C_Master_Read@temp+1,w
  9152  0F2C  00A1               	movwf	?_I2C_Master_Read+1
  9153  0F2D  0822               	movf	I2C_Master_Read@temp,w
  9154  0F2E  00A0               	movwf	?_I2C_Master_Read
  9155  0F2F  0008               	return
  9156  0F30                     __end_of_I2C_Master_Read:	
  9157  0F30                     __ptext56:	
  9158 ;; *************** function _my_delay_ms_WDT *****************
  9159 ;; Defined at:
  9160 ;;		line 13 in file "my_delay.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  time            4    0[BANK0 ] long 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  i               4    6[BANK0 ] long 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0, btemp+1
  9169 ;; Tracked objects:
  9170 ;;		On entry : 300/0
  9171 ;;		On exit  : 300/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9174 ;;      Params:         0       4       0       0       0
  9175 ;;      Locals:         0       4       0       0       0
  9176 ;;      Temps:          0       2       0       0       0
  9177 ;;      Totals:         0      10       0       0       0
  9178 ;;Total ram usage:       10 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    1
  9181 ;; This function calls:
  9182 ;;		Nothing
  9183 ;; This function is called by:
  9184 ;;		_EEPROM_24C1025_Write_Buffer
  9185 ;;		_EEPROM_24C1025_Read_Buffer
  9186 ;;		_EEPROM_24C1025_Write_Str
  9187 ;;		_EEPROM_24C1025_Read_Str
  9188 ;;		_main
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _my_delay_ms_WDT
  9194  0F30                     _my_delay_ms_WDT:	
  9195  0F30                     l3517:	
  9196                           ;incstack = 0
  9197                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  9198                           
  9199                           
  9200                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  9201  0F30  01A6               	clrf	my_delay_ms_WDT@i
  9202  0F31  01A7               	clrf	my_delay_ms_WDT@i+1
  9203  0F32  01A8               	clrf	my_delay_ms_WDT@i+2
  9204  0F33  01A9               	clrf	my_delay_ms_WDT@i+3
  9205  0F34                     l3523:	
  9206  0F34  0829               	movf	my_delay_ms_WDT@i+3,w
  9207  0F35  3A80               	xorlw	128
  9208  0F36  00FF               	movwf	127
  9209  0F37  0823               	movf	my_delay_ms_WDT@time+3,w
  9210  0F38  3A80               	xorlw	128
  9211  0F39  027F               	subwf	127,w
  9212  0F3A  1D03               	skipz
  9213  0F3B  2F46               	goto	u2173
  9214  0F3C  0822               	movf	my_delay_ms_WDT@time+2,w
  9215  0F3D  0228               	subwf	my_delay_ms_WDT@i+2,w
  9216  0F3E  1D03               	skipz
  9217  0F3F  2F46               	goto	u2173
  9218  0F40  0821               	movf	my_delay_ms_WDT@time+1,w
  9219  0F41  0227               	subwf	my_delay_ms_WDT@i+1,w
  9220  0F42  1D03               	skipz
  9221  0F43  2F46               	goto	u2173
  9222  0F44  0820               	movf	my_delay_ms_WDT@time,w
  9223  0F45  0226               	subwf	my_delay_ms_WDT@i,w
  9224  0F46                     u2173:	
  9225  0F46  1803               	btfsc	3,0
  9226  0F47  0008               	return
  9227  0F48  0064               	clrwdt	;# 
  9228                           
  9229                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  9230  0F49  3003               	movlw	3
  9231  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  9232  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  9233  0F4C  00A5               	movwf	??_my_delay_ms_WDT+1
  9234  0F4D  3097               	movlw	151
  9235  0F4E  00A4               	movwf	??_my_delay_ms_WDT
  9236  0F4F                     u5517:	
  9237  0F4F  0BA4               	decfsz	??_my_delay_ms_WDT,f
  9238  0F50  2F4F               	goto	u5517
  9239  0F51  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  9240  0F52  2F4F               	goto	u5517
  9241                           
  9242                           ;my_delay.c: 19:             }
  9243  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  9244  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  9245  0F55  0AA6               	incf	my_delay_ms_WDT@i,f
  9246  0F56  1903               	skipnz
  9247  0F57  0AA7               	incf	my_delay_ms_WDT@i+1,f
  9248  0F58  1903               	skipnz
  9249  0F59  0AA8               	incf	my_delay_ms_WDT@i+2,f
  9250  0F5A  1903               	skipnz
  9251  0F5B  0AA9               	incf	my_delay_ms_WDT@i+3,f
  9252  0F5C  2F34               	goto	l3523
  9253  0F5D                     __end_of_my_delay_ms_WDT:	
  9254  0F5D                     __ptext60:	
  9255 ;; *************** function _I2C_Master_Wait *****************
  9256 ;; Defined at:
  9257 ;;		line 40 in file "I2C.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2
  9266 ;; Tracked objects:
  9267 ;;		On entry : 200/0
  9268 ;;		On exit  : 300/100
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9271 ;;      Params:         0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    1
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_I2C_Master_Start
  9282 ;;		_I2C_Master_RepeatedStart
  9283 ;;		_I2C_Master_Stop
  9284 ;;		_I2C_Master_Write
  9285 ;;		_I2C_Master_Read
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           
  9290                           ;psect for function _I2C_Master_Wait
  9291  0F5D                     _I2C_Master_Wait:	
  9292  0F5D                     l182:	
  9293                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9294                           
  9295                           ;incstack = 0
  9296                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9297                           
  9298  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  9299  0F5E  1914               	btfsc	20,2	;volatile
  9300  0F5F  2F5D               	goto	l182
  9301  0F60  0811               	movf	17,w	;volatile
  9302  0F61  391F               	andlw	31
  9303  0F62  1903               	btfsc	3,2
  9304  0F63  0008               	return
  9305  0F64  2F5D               	goto	l182
  9306  0F65                     __end_of_I2C_Master_Wait:	
  9307  0F65                     __ptext51:	
  9308 ;; *************** function _I2C_Master_RepeatedStart *****************
  9309 ;; Defined at:
  9310 ;;		line 52 in file "I2C.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0, pclath, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 300/0
  9321 ;;		On exit  : 300/100
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9324 ;;      Params:         0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0
  9327 ;;      Totals:         0       0       0       0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    2
  9331 ;; This function calls:
  9332 ;;		_I2C_Master_Wait
  9333 ;; This function is called by:
  9334 ;;		_EEPROM_24C1025_Read_Buffer
  9335 ;;		_EEPROM_24C1025_Read_Str
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           
  9340                           ;psect for function _I2C_Master_RepeatedStart
  9341  0F65                     _I2C_Master_RepeatedStart:	
  9342                           
  9343                           ;I2C.c: 54:   I2C_Master_Wait();
  9344                           
  9345                           ;incstack = 0
  9346                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  9347  0F65  275D               	fcall	_I2C_Master_Wait
  9348                           
  9349                           ;I2C.c: 55:   RSEN = 1;
  9350  0F66  1491               	bsf	17,1	;volatile
  9351  0F67  0008               	return
  9352  0F68                     __end_of_I2C_Master_RepeatedStart:	
  9353  0F68                     __ptext16:	
  9354 ;; *************** function _itoa *****************
  9355 ;; Defined at:
  9356 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  buf             1    wreg     PTR unsigned char 
  9359 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9360 ;;  val             2   15[BANK0 ] int 
  9361 ;;  base            2   17[BANK0 ] int 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  9364 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9365 ;;  cp              1    0        PTR unsigned char 
  9366 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      PTR unsigned char 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 300/0
  9373 ;;		On exit  : B00/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9376 ;;      Params:         0       4       0       0       0
  9377 ;;      Locals:         0       2       0       0       0
  9378 ;;      Temps:          0       0       0       0       0
  9379 ;;      Totals:         0       6       0       0       0
  9380 ;;Total ram usage:        6 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    3
  9383 ;; This function calls:
  9384 ;;		_utoa
  9385 ;; This function is called by:
  9386 ;;		_Decodify_Command
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function _itoa
  9392  0F68                     _itoa:	
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9396                           ;itoa@buf stored from wreg
  9397  0F68  00B4               	movwf	itoa@buf
  9398  0F69  1FB0               	btfss	itoa@val+1,7
  9399  0F6A  2F76               	goto	l6119
  9400  0F6B  0834               	movf	itoa@buf,w
  9401  0F6C  0084               	movwf	4
  9402  0F6D  302D               	movlw	45
  9403  0F6E  1383               	bcf	3,7	;select IRP bank0
  9404  0F6F  0080               	movwf	0
  9405  0F70  0AB4               	incf	itoa@buf,f
  9406  0F71  09AF               	comf	itoa@val,f
  9407  0F72  09B0               	comf	itoa@val+1,f
  9408  0F73  0AAF               	incf	itoa@val,f
  9409  0F74  1903               	skipnz
  9410  0F75  0AB0               	incf	itoa@val+1,f
  9411  0F76                     l6119:	
  9412  0F76  0830               	movf	itoa@val+1,w
  9413  0F77  00A8               	movwf	utoa@val+1
  9414  0F78  082F               	movf	itoa@val,w
  9415  0F79  00A7               	movwf	utoa@val
  9416  0F7A  0832               	movf	itoa@base+1,w
  9417  0F7B  00AA               	movwf	utoa@base+1
  9418  0F7C  0831               	movf	itoa@base,w
  9419  0F7D  00A9               	movwf	utoa@base
  9420  0F7E  0834               	movf	itoa@buf,w
  9421  0F7F  160A  118A  2DCD   	ljmp	_utoa
  9422  0F82                     __end_of_itoa:	
  9423  0F82                     __ptext36:	
  9424 ;; *************** function _USART_put_int *****************
  9425 ;; Defined at:
  9426 ;;		line 138 in file "usart.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  value           2   10[BANK0 ] int 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;  dado            1   12[BANK0 ] PTR unsigned char 
  9431 ;;		 -> USART_put_int@value(2), 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 300/0
  9438 ;;		On exit  : 300/100
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9441 ;;      Params:         0       2       0       0       0
  9442 ;;      Locals:         0       1       0       0       0
  9443 ;;      Temps:          0       0       0       0       0
  9444 ;;      Totals:         0       3       0       0       0
  9445 ;;Total ram usage:        3 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    2
  9448 ;; This function calls:
  9449 ;;		_USART_putc
  9450 ;; This function is called by:
  9451 ;;		_Decodify_Command
  9452 ;;		_PROCULUS_Control_Register_Write
  9453 ;;		_PROCULUS_VP_Write
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function _USART_put_int
  9459  0F82                     _USART_put_int:	
  9460  0F82                     l5587:	
  9461                           ;incstack = 0
  9462                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9463                           
  9464                           
  9465                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9466  0F82  302A               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9467  0F83  00AC               	movwf	USART_put_int@dado
  9468                           
  9469                           ;usart.c: 141:      USART_putc(*(dado+1));
  9470  0F84  0A2C               	incf	USART_put_int@dado,w
  9471  0F85  0084               	movwf	4
  9472  0F86  1383               	bcf	3,7	;select IRP bank0
  9473  0F87  0800               	movf	0,w
  9474  0F88  23D3  120A  158A   	fcall	_USART_putc
  9475                           
  9476                           ;usart.c: 142:      USART_putc(*dado);
  9477  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  9478  0F8C  082C               	movf	USART_put_int@dado,w
  9479  0F8D  0084               	movwf	4
  9480  0F8E  1383               	bcf	3,7	;select IRP bank0
  9481  0F8F  0800               	movf	0,w
  9482  0F90  2BD3               	ljmp	_USART_putc
  9483  0F91                     __end_of_USART_put_int:	
  9484  0F91                     __ptext46:	
  9485 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  9486 ;; Defined at:
  9487 ;;		line 268 in file "EEPROM_24C1025.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  chip_add        1    wreg     unsigned char 
  9490 ;;  mem_add         4   22[BANK0 ] unsigned long 
  9491 ;;  data            1   26[BANK0 ] unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  chip_add        1   27[BANK0 ] unsigned char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 300/100
  9500 ;;		On exit  : 300/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9503 ;;      Params:         0       5       0       0       0
  9504 ;;      Locals:         0       1       0       0       0
  9505 ;;      Temps:          0       0       0       0       0
  9506 ;;      Totals:         0       6       0       0       0
  9507 ;;Total ram usage:        6 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    4
  9510 ;; This function calls:
  9511 ;;		_EEPROM_24C1025_Write_Buffer
  9512 ;; This function is called by:
  9513 ;;		_Decodify_Command
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _EEPROM_24C1025_Write_Byte
  9519  0F91                     _EEPROM_24C1025_Write_Byte:	
  9520                           
  9521                           ;incstack = 0
  9522                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9523                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  9524  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  9525  0F92  00BB               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  9526                           
  9527                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  9528  0F93  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  9529  0F94  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9530  0F95  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  9531  0F96  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9532  0F97  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  9533  0F98  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9534  0F99  0836               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  9535  0F9A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9536  0F9B  303A               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  9537  0F9C  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  9538  0F9D  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  9539  0F9E  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  9540  0F9F  083B               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  9541  0FA0  2E35               	ljmp	_EEPROM_24C1025_Write_Buffer
  9542  0FA1                     __end_of_EEPROM_24C1025_Write_Byte:	
  9543  0FA1                     PL12:	
  9544  0FA1  3005               	movlw	5
  9545  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  9546  0FA3  00A0               	movwf	my_delay_ms_WDT@time
  9547  0FA4  01A1               	clrf	my_delay_ms_WDT@time+1
  9548  0FA5  01A2               	clrf	my_delay_ms_WDT@time+2
  9549  0FA6  01A3               	clrf	my_delay_ms_WDT@time+3
  9550  0FA7  0008               	return
  9551  0FA8                     __end_ofPL12:	
  9552  0FA8                     PL16:	
  9553  0FA8  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
  9554  0FA9  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
  9555  0FAA  30A0               	movlw	160
  9556  0FAB  1003               	clrc
  9557  0FAC  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
  9558  0FAD  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9559  0FAE  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
  9560  0FAF  0832               	movf	EEPROM_24C1025_Read_Str@range,w
  9561  0FB0  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9562  0FB1  0008               	return
  9563  0FB2                     __end_ofPL16:	
  9564  0FB2                     PL20:	
  9565  0FB2  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
  9566  0FB3  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
  9567  0FB4  30A0               	movlw	160
  9568  0FB5  1003               	clrc
  9569  0FB6  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9570  0FB7  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9571  0FB8  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
  9572  0FB9  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
  9573  0FBA  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9574  0FBB  0008               	return
  9575  0FBC                     __end_ofPL20:	
  9576  0FBC                     PL22:	
  9577  0FBC  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
  9578  0FBD  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
  9579  0FBE  30A0               	movlw	160
  9580  0FBF  1003               	clrc
  9581  0FC0  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9582  0FC1  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9583  0FC2  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
  9584  0FC3  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9585  0FC4  0008               	return
  9586  0FC5                     __end_ofPL22:	
  9587  0FC5                     PL28:	
  9588  0FC5  3033               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  9589  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  9590  0FC7  00A0               	movwf	strcat@from
  9591  0FC8  3080               	movlw	128
  9592  0FC9  00A1               	movwf	strcat@from+1
  9593  0FCA  34DA               	retlw	(low (_texto| (0+256)))& (0+255)
  9594  0FCB                     __end_ofPL28:	
  9595  0FCB                     PL30:	
  9596  0FCB  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
  9597  0FCC  0084               	movwf	4
  9598  0FCD  1383               	bcf	3,7	;select IRP bank0
  9599  0FCE  0800               	movf	0,w
  9600  0FCF  00A0               	movwf	I2C_Master_Write@d
  9601  0FD0  01A1               	clrf	I2C_Master_Write@d+1
  9602  0FD1  0008               	return
  9603  0FD2                     __end_ofPL30:	
  9604  0FD2                     PL32:	
  9605  0FD2  0084               	movwf	4
  9606  0FD3  1383               	bcf	3,7	;select IRP bank0
  9607  0FD4  0800               	movf	0,w
  9608  0FD5  00A0               	movwf	I2C_Master_Write@d
  9609  0FD6  01A1               	clrf	I2C_Master_Write@d+1
  9610  0FD7  0008               	return
  9611  0FD8                     __end_ofPL32:	
  9612  0FD8                     PL38:	
  9613  0FD8  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
  9614  0FD9  0084               	movwf	4
  9615  0FDA  1783               	bsf	3,7
  9616  0FDB  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
  9617  0FDC  1383               	bcf	3,7
  9618  0FDD  01A0               	clrf	I2C_Master_Read@a
  9619  0FDE  0008               	return
  9620  0FDF                     __end_ofPL38:	
  9621  0FDF                     PL40:	
  9622  0FDF  3038               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  9623  0FE0  00A0               	movwf	strcat@from
  9624  0FE1  3080               	movlw	128
  9625  0FE2  00A1               	movwf	strcat@from+1
  9626  0FE3  34DA               	retlw	(low (_texto| (0+256)))& (0+255)
  9627  0FE4                     __end_ofPL40:	
  9628  0FE4                     PL42:	
  9629  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  9630  0FE5  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9631  0FE6  39FE               	andlw	254
  9632  0FE7  00A0               	movwf	I2C_Master_Write@d
  9633  0FE8  01A1               	clrf	I2C_Master_Write@d+1
  9634  0FE9  0008               	return
  9635  0FEA                     __end_ofPL42:	
  9636  0FEA                     PL44:	
  9637  0FEA  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  9638  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  9639  0FEC  00A1               	movwf	USART_put_string@vetor
  9640  0FED  3001               	movlw	1
  9641  0FEE  00A2               	movwf	USART_put_string@vetor+1
  9642  0FEF  0008               	return
  9643  0FF0                     __end_ofPL44:	
  9644  0FF0                     PL46:	
  9645  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  9646  0FF1  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9647  0FF2  39FE               	andlw	254
  9648  0FF3  00A0               	movwf	I2C_Master_Write@d
  9649  0FF4  01A1               	clrf	I2C_Master_Write@d+1
  9650  0FF5  0008               	return
  9651  0FF6                     __end_ofPL46:	
  9652  0FF6                     __ptext32:	
  9653 ;; *************** function _PROCULUS_Show_Screen *****************
  9654 ;; Defined at:
  9655 ;;		line 243 in file "proculus.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  screen          2   17[BANK0 ] unsigned int 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  vetor           3   19[BANK0 ] unsigned char [3]
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9664 ;; Tracked objects:
  9665 ;;		On entry : 300/0
  9666 ;;		On exit  : 300/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9669 ;;      Params:         0       2       0       0       0
  9670 ;;      Locals:         0       3       0       0       0
  9671 ;;      Temps:          0       0       0       0       0
  9672 ;;      Totals:         0       5       0       0       0
  9673 ;;Total ram usage:        5 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    4
  9676 ;; This function calls:
  9677 ;;		_PROCULUS_Control_Register_Write
  9678 ;; This function is called by:
  9679 ;;		_Decodify_Command
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _PROCULUS_Show_Screen
  9685  0FF6                     _PROCULUS_Show_Screen:	
  9686                           
  9687                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9691  0FF6  3003               	movlw	3
  9692  0FF7  00B3               	movwf	PROCULUS_Show_Screen@vetor
  9693                           
  9694                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9695  0FF8  0832               	movf	PROCULUS_Show_Screen@screen+1,w
  9696  0FF9  00B4               	movwf	PROCULUS_Show_Screen@vetor+1
  9697                           
  9698                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9699  0FFA  0831               	movf	PROCULUS_Show_Screen@screen,w
  9700  0FFB  00B5               	movwf	PROCULUS_Show_Screen@vetor+2
  9701                           
  9702                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9703  0FFC  3003               	movlw	3
  9704  0FFD  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9705  0FFE  3033               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9706  0FFF  2809               	ljmp	_PROCULUS_Control_Register_Write
  9707  1000                     __end_of_PROCULUS_Show_Screen:	
  9708                           
  9709                           	psect	text38
  9710  13A9                     __ptext38:	
  9711 ;; *************** function _PROCULUS_Delay *****************
  9712 ;; Defined at:
  9713 ;;		line 267 in file "proculus.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  i               2    4[BANK0 ] unsigned int 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0
  9722 ;; Tracked objects:
  9723 ;;		On entry : 300/0
  9724 ;;		On exit  : 300/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9727 ;;      Params:         0       2       0       0       0
  9728 ;;      Locals:         0       2       0       0       0
  9729 ;;      Temps:          0       2       0       0       0
  9730 ;;      Totals:         0       6       0       0       0
  9731 ;;Total ram usage:        6 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    1
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_PROCULUS_Control_Register_Write
  9738 ;;		_PROCULUS_VP_Write
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function _PROCULUS_Delay
  9744  13A9                     _PROCULUS_Delay:	
  9745  13A9                     l3645:	
  9746                           ;incstack = 0
  9747                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9748                           
  9749                           
  9750                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9751  13A9  01A4               	clrf	PROCULUS_Delay@i
  9752  13AA  01A5               	clrf	PROCULUS_Delay@i+1
  9753  13AB                     l3651:	
  9754  13AB  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9755  13AC  0225               	subwf	PROCULUS_Delay@i+1,w
  9756  13AD  1D03               	skipz
  9757  13AE  2BB1               	goto	u2275
  9758  13AF  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9759  13B0  0224               	subwf	PROCULUS_Delay@i,w
  9760  13B1                     u2275:	
  9761  13B1  1803               	btfsc	3,0
  9762  13B2  0008               	return
  9763                           
  9764                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9765  13B3  3003               	movlw	3
  9766  13B4  1283               	bcf	3,5	;RP0=0, select bank0
  9767  13B5  1303               	bcf	3,6	;RP1=0, select bank0
  9768  13B6  00A3               	movwf	??_PROCULUS_Delay+1
  9769  13B7  3097               	movlw	151
  9770  13B8  00A2               	movwf	??_PROCULUS_Delay
  9771  13B9                     u5457:	
  9772  13B9  0BA2               	decfsz	??_PROCULUS_Delay,f
  9773  13BA  2BB9               	goto	u5457
  9774  13BB  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9775  13BC  2BB9               	goto	u5457
  9776                           
  9777                           ;proculus.c: 270:     }
  9778  13BD  1283               	bcf	3,5	;RP0=0, select bank0
  9779  13BE  1303               	bcf	3,6	;RP1=0, select bank0
  9780  13BF  0AA4               	incf	PROCULUS_Delay@i,f
  9781  13C0  1903               	skipnz
  9782  13C1  0AA5               	incf	PROCULUS_Delay@i+1,f
  9783  13C2  2BAB               	goto	l3651
  9784  13C3                     __end_of_PROCULUS_Delay:	
  9785                           
  9786                           	psect	text40
  9787  153D                     __ptext40:	
  9788 ;; *************** function _EEPROM_Write_Integer *****************
  9789 ;; Defined at:
  9790 ;;		line 68 in file "eeprom.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  addr            1    wreg     unsigned char 
  9793 ;;  dado            2    5[BANK0 ] unsigned int 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  addr            1    9[BANK0 ] unsigned char 
  9796 ;;  i               1   11[BANK0 ] unsigned char 
  9797 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9798 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9799 ;;  addr_memo       1    0        unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 200/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9809 ;;      Params:         0       2       0       0       0
  9810 ;;      Locals:         0       3       0       0       0
  9811 ;;      Temps:          0       2       0       0       0
  9812 ;;      Totals:         0       7       0       0       0
  9813 ;;Total ram usage:        7 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    2
  9816 ;; This function calls:
  9817 ;;		_EEPROM_Write_Byte
  9818 ;; This function is called by:
  9819 ;;		_main
  9820 ;;		_Decodify_Command
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           
  9825                           ;psect for function _EEPROM_Write_Integer
  9826  153D                     _EEPROM_Write_Integer:	
  9827                           
  9828                           ;incstack = 0
  9829                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9830                           ;EEPROM_Write_Integer@addr stored from wreg
  9831  153D  1283               	bcf	3,5	;RP0=0, select bank0
  9832  153E  00A9               	movwf	EEPROM_Write_Integer@addr
  9833                           
  9834                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9835  153F  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9836  1540  00AA               	movwf	EEPROM_Write_Integer@ptr
  9837                           
  9838                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9839  1541  01AB               	clrf	EEPROM_Write_Integer@i
  9840  1542                     l4451:	
  9841                           
  9842                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9843  1542  082A               	movf	EEPROM_Write_Integer@ptr,w
  9844  1543  0084               	movwf	4
  9845  1544  1383               	bcf	3,7	;select IRP bank0
  9846  1545  0800               	movf	0,w
  9847  1546  00A0               	movwf	EEPROM_Write_Byte@dado
  9848  1547  0829               	movf	EEPROM_Write_Integer@addr,w
  9849  1548  2577  160A  118A   	fcall	_EEPROM_Write_Byte
  9850  154B  1283               	bcf	3,5	;RP0=0, select bank0
  9851  154C  1303               	bcf	3,6	;RP1=0, select bank0
  9852  154D  3002               	movlw	2
  9853  154E  0AAA               	incf	EEPROM_Write_Integer@ptr,f
  9854  154F  0AA9               	incf	EEPROM_Write_Integer@addr,f
  9855  1550  0AAB               	incf	EEPROM_Write_Integer@i,f
  9856  1551  022B               	subwf	EEPROM_Write_Integer@i,w
  9857  1552  1C03               	skipc
  9858  1553  2D42               	goto	l4451
  9859                           
  9860                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9861  1554  304E               	movlw	78
  9862  1555  1283               	bcf	3,5	;RP0=0, select bank0
  9863  1556  1303               	bcf	3,6	;RP1=0, select bank0
  9864  1557  00A8               	movwf	??_EEPROM_Write_Integer+1
  9865  1558  30EA               	movlw	234
  9866  1559  00A7               	movwf	??_EEPROM_Write_Integer
  9867  155A                     u5467:	
  9868  155A  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9869  155B  2D5A               	goto	u5467
  9870  155C  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9871  155D  2D5A               	goto	u5467
  9872  155E  0000               	nop
  9873  155F  0008               	return
  9874  1560                     __end_of_EEPROM_Write_Integer:	
  9875  1560                     __ptext39:	
  9876 ;; *************** function _EEPROM_Write_String *****************
  9877 ;; Defined at:
  9878 ;;		line 97 in file "eeprom.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  addr            1    wreg     unsigned char 
  9881 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9882 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  addr            1    6[BANK0 ] unsigned char 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9889 ;; Tracked objects:
  9890 ;;		On entry : 300/100
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9894 ;;      Params:         0       1       0       0       0
  9895 ;;      Locals:         0       1       0       0       0
  9896 ;;      Temps:          0       0       0       0       0
  9897 ;;      Totals:         0       2       0       0       0
  9898 ;;Total ram usage:        2 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    2
  9901 ;; This function calls:
  9902 ;;		_EEPROM_Write_Byte
  9903 ;; This function is called by:
  9904 ;;		_Decodify_Command
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           
  9909                           ;psect for function _EEPROM_Write_String
  9910  1560                     _EEPROM_Write_String:	
  9911                           
  9912                           ;incstack = 0
  9913                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9914                           ;EEPROM_Write_String@addr stored from wreg
  9915  1560  1283               	bcf	3,5	;RP0=0, select bank0
  9916  1561  00A6               	movwf	EEPROM_Write_String@addr
  9917  1562                     l6095:	
  9918                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9919                           
  9920                           
  9921                           ;eeprom.c: 99:     while(*dado)
  9922  1562  0825               	movf	EEPROM_Write_String@dado,w
  9923  1563  0084               	movwf	4
  9924  1564  1383               	bcf	3,7	;select IRP bank0
  9925  1565  0800               	movf	0,w
  9926  1566  1903               	btfsc	3,2
  9927  1567  2D73               	goto	l6097
  9928                           
  9929                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9930  1568  25B1  160A  118A   	fcall	PL52	;call to abstracted procedure
  9931  156B  2577  160A  118A   	fcall	_EEPROM_Write_Byte
  9932                           
  9933                           ;eeprom.c: 102:      addr++;
  9934  156E  1283               	bcf	3,5	;RP0=0, select bank0
  9935  156F  1303               	bcf	3,6	;RP1=0, select bank0
  9936  1570  0AA6               	incf	EEPROM_Write_String@addr,f
  9937                           
  9938                           ;eeprom.c: 103:      dado++;
  9939  1571  0AA5               	incf	EEPROM_Write_String@dado,f
  9940  1572  2D62               	goto	l6095
  9941  1573                     l6097:	
  9942                           
  9943                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9944  1573  25B1  160A  118A   	fcall	PL52	;call to abstracted procedure
  9945  1576  2D77               	ljmp	_EEPROM_Write_Byte
  9946  1577                     __end_of_EEPROM_Write_String:	
  9947  1577                     __ptext41:	
  9948 ;; *************** function _EEPROM_Write_Byte *****************
  9949 ;; Defined at:
  9950 ;;		line 21 in file "eeprom.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  addr            1    wreg     unsigned char 
  9953 ;;  dado            1    0[BANK0 ] unsigned char 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  addr            1    3[BANK0 ] unsigned char 
  9956 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  1    wreg      void 
  9959 ;; Registers used:
  9960 ;;		wreg, status,2, status,0
  9961 ;; Tracked objects:
  9962 ;;		On entry : 200/100
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9966 ;;      Params:         0       1       0       0       0
  9967 ;;      Locals:         0       2       0       0       0
  9968 ;;      Temps:          0       2       0       0       0
  9969 ;;      Totals:         0       5       0       0       0
  9970 ;;Total ram usage:        5 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:    1
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_Decodify_Command
  9977 ;;		_EEPROM_Write_Integer
  9978 ;;		_EEPROM_Write_String
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function _EEPROM_Write_Byte
  9984  1577                     _EEPROM_Write_Byte:	
  9985                           
  9986                           ;incstack = 0
  9987                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9988                           ;EEPROM_Write_Byte@addr stored from wreg
  9989  1577  1283               	bcf	3,5	;RP0=0, select bank0
  9990  1578  00A3               	movwf	EEPROM_Write_Byte@addr
  9991                           
  9992                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9993  1579  3014               	movlw	20
  9994  157A  00F4               	movwf	_Delay_Led_Memory	;volatile
  9995  157B  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  9996  157C                     l502:	
  9997                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9998                           
  9999  157C  1683               	bsf	3,5	;RP0=1, select bank3
 10000  157D  1703               	bsf	3,6	;RP1=1, select bank3
 10001  157E  188C               	btfsc	12,1	;volsfr
 10002  157F  2D7C               	goto	l502
 10003                           
 10004                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10005  1580  1F8B               	btfss	11,7	;volatile
 10006  1581  2D87               	goto	l3813
 10007                           
 10008                           ;eeprom.c: 28:           last_GIE=1;
 10009  1582  1283               	bcf	3,5	;RP0=0, select bank0
 10010  1583  1303               	bcf	3,6	;RP1=0, select bank0
 10011  1584  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10012  1585  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10013  1586  2D8A               	goto	l3815
 10014  1587                     l3813:	
 10015                           
 10016                           ;eeprom.c: 30:           last_GIE=0;
 10017  1587  1283               	bcf	3,5	;RP0=0, select bank0
 10018  1588  1303               	bcf	3,6	;RP1=0, select bank0
 10019  1589  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10020  158A                     l3815:	
 10021                           
 10022                           ;eeprom.c: 32:        EEADR=addr;
 10023  158A  0823               	movf	EEPROM_Write_Byte@addr,w
 10024  158B  1703               	bsf	3,6	;RP1=1, select bank2
 10025  158C  008D               	movwf	13	;volatile
 10026                           
 10027                           ;eeprom.c: 33:        EEDATA=dado;
 10028  158D  1303               	bcf	3,6	;RP1=0, select bank0
 10029  158E  0820               	movf	EEPROM_Write_Byte@dado,w
 10030  158F  1703               	bsf	3,6	;RP1=1, select bank2
 10031  1590  008C               	movwf	12	;volatile
 10032                           
 10033                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10034  1591  1683               	bsf	3,5	;RP0=1, select bank3
 10035  1592  138C               	bcf	12,7	;volsfr
 10036                           
 10037                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10038  1593  150C               	bsf	12,2	;volsfr
 10039                           
 10040                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10041  1594  138B               	bcf	11,7	;volatile
 10042                           
 10043                           ;eeprom.c: 37:        EECON2=0x55;
 10044  1595  3055               	movlw	85
 10045  1596  008D               	movwf	13	;volsfr
 10046                           
 10047                           ;eeprom.c: 38:        EECON2=0xAA;
 10048  1597  30AA               	movlw	170
 10049  1598  008D               	movwf	13	;volsfr
 10050                           
 10051                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10052  1599  148C               	bsf	12,1	;volsfr
 10053                           
 10054                           ;eeprom.c: 41:        if(last_GIE==1)
 10055  159A  1283               	bcf	3,5	;RP0=0, select bank0
 10056  159B  1303               	bcf	3,6	;RP1=0, select bank0
 10057  159C  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10058  159D  1D03               	btfss	3,2
 10059  159E  2DA1               	goto	l507
 10060                           
 10061                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10062  159F  178B               	bsf	11,7	;volatile
 10063  15A0  2DA2               	goto	l508
 10064  15A1                     l507:	
 10065                           ;eeprom.c: 43:        else
 10066                           
 10067                           
 10068                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10069  15A1  138B               	bcf	11,7	;volatile
 10070  15A2                     l508:	
 10071                           
 10072                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10073  15A2  1683               	bsf	3,5	;RP0=1, select bank3
 10074  15A3  1703               	bsf	3,6	;RP1=1, select bank3
 10075  15A4  110C               	bcf	12,2	;volsfr
 10076                           
 10077                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10078  15A5  304E               	movlw	78
 10079  15A6  1283               	bcf	3,5	;RP0=0, select bank0
 10080  15A7  1303               	bcf	3,6	;RP1=0, select bank0
 10081  15A8  00A2               	movwf	??_EEPROM_Write_Byte+1
 10082  15A9  30EA               	movlw	234
 10083  15AA  00A1               	movwf	??_EEPROM_Write_Byte
 10084  15AB                     u5477:	
 10085  15AB  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10086  15AC  2DAB               	goto	u5477
 10087  15AD  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10088  15AE  2DAB               	goto	u5477
 10089  15AF  0000               	nop
 10090  15B0  0008               	return
 10091  15B1                     __end_of_EEPROM_Write_Byte:	
 10092  15B1                     PL52:	
 10093  15B1  0825               	movf	EEPROM_Write_String@dado,w
 10094  15B2  0084               	movwf	4
 10095  15B3  0800               	movf	0,w
 10096  15B4  00A0               	movwf	EEPROM_Write_Byte@dado
 10097  15B5  0826               	movf	EEPROM_Write_String@addr,w
 10098  15B6  0008               	return
 10099  15B7                     __end_ofPL52:	
 10100                           
 10101                           	psect	text42
 10102  07AD                     __ptext42:	
 10103 ;; *************** function _EEPROM_Read_String *****************
 10104 ;; Defined at:
 10105 ;;		line 109 in file "eeprom.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  addr            1    wreg     unsigned char 
 10108 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10109 ;;		 -> texto(16), 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  addr            1    4[BANK0 ] unsigned char 
 10112 ;;  c               1    5[BANK0 ] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 300/100
 10119 ;;		On exit  : B00/800
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10122 ;;      Params:         0       1       0       0       0
 10123 ;;      Locals:         0       2       0       0       0
 10124 ;;      Temps:          0       0       0       0       0
 10125 ;;      Totals:         0       3       0       0       0
 10126 ;;Total ram usage:        3 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    2
 10129 ;; This function calls:
 10130 ;;		_EEPROM_Read_Byte
 10131 ;; This function is called by:
 10132 ;;		_Decodify_Command
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           
 10137                           ;psect for function _EEPROM_Read_String
 10138  07AD                     _EEPROM_Read_String:	
 10139                           
 10140                           ;incstack = 0
 10141                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10142                           ;EEPROM_Read_String@addr stored from wreg
 10143  07AD  1283               	bcf	3,5	;RP0=0, select bank0
 10144  07AE  00A4               	movwf	EEPROM_Read_String@addr
 10145  07AF                     l534:	
 10146                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10147                           
 10148                           
 10149                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10150  07AF  0824               	movf	EEPROM_Read_String@addr,w
 10151  07B0  27DA  120A  118A   	fcall	_EEPROM_Read_Byte
 10152  07B3  1303               	bcf	3,6	;RP1=0, select bank0
 10153  07B4  00A5               	movwf	EEPROM_Read_String@c
 10154  07B5  0AA4               	incf	EEPROM_Read_String@addr,f
 10155                           
 10156                           ;eeprom.c: 114:         *(dado++)=c;
 10157  07B6  0823               	movf	EEPROM_Read_String@dado,w
 10158  07B7  0084               	movwf	4
 10159  07B8  0825               	movf	EEPROM_Read_String@c,w
 10160  07B9  1783               	bsf	3,7	;select IRP bank2
 10161  07BA  0080               	movwf	0
 10162  07BB  0AA3               	incf	EEPROM_Read_String@dado,f
 10163                           
 10164                           ;eeprom.c: 116:       }while(c);
 10165  07BC  0825               	movf	EEPROM_Read_String@c,w
 10166  07BD  1903               	btfsc	3,2
 10167  07BE  0008               	return
 10168  07BF  2FAF               	goto	l534
 10169  07C0                     __end_of_EEPROM_Read_String:	
 10170  07C0                     __ptext43:	
 10171 ;; *************** function _EEPROM_Read_Integer *****************
 10172 ;; Defined at:
 10173 ;;		line 81 in file "eeprom.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  addr            1    wreg     unsigned char 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  addr            1    6[BANK0 ] unsigned char 
 10178 ;;  result          2    8[BANK0 ] unsigned int 
 10179 ;;  i               1   10[BANK0 ] unsigned char 
 10180 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10181 ;;		 -> EEPROM_Read_Integer@result(2), 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  2    3[BANK0 ] unsigned int 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10186 ;; Tracked objects:
 10187 ;;		On entry : 200/0
 10188 ;;		On exit  : B00/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10191 ;;      Params:         0       3       0       0       0
 10192 ;;      Locals:         0       5       0       0       0
 10193 ;;      Temps:          0       0       0       0       0
 10194 ;;      Totals:         0       8       0       0       0
 10195 ;;Total ram usage:        8 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    2
 10198 ;; This function calls:
 10199 ;;		_EEPROM_Read_Byte
 10200 ;; This function is called by:
 10201 ;;		_main
 10202 ;;		_Decodify_Command
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           
 10207                           ;psect for function _EEPROM_Read_Integer
 10208  07C0                     _EEPROM_Read_Integer:	
 10209                           
 10210                           ;incstack = 0
 10211                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10212                           ;EEPROM_Read_Integer@addr stored from wreg
 10213  07C0  1283               	bcf	3,5	;RP0=0, select bank0
 10214  07C1  00A6               	movwf	EEPROM_Read_Integer@addr
 10215                           
 10216                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10217  07C2  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10218  07C3  00A7               	movwf	EEPROM_Read_Integer@ptr
 10219                           
 10220                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10221  07C4  01AA               	clrf	EEPROM_Read_Integer@i
 10222  07C5                     l6065:	
 10223                           
 10224                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10225  07C5  0827               	movf	EEPROM_Read_Integer@ptr,w
 10226  07C6  0084               	movwf	4
 10227  07C7  0826               	movf	EEPROM_Read_Integer@addr,w
 10228  07C8  27DA  120A  118A   	fcall	_EEPROM_Read_Byte
 10229  07CB  1383               	bcf	3,7	;select IRP bank0
 10230  07CC  0080               	movwf	0
 10231  07CD  1303               	bcf	3,6	;RP1=0, select bank0
 10232  07CE  3002               	movlw	2
 10233  07CF  0AA6               	incf	EEPROM_Read_Integer@addr,f
 10234  07D0  0AA7               	incf	EEPROM_Read_Integer@ptr,f
 10235  07D1  0AAA               	incf	EEPROM_Read_Integer@i,f
 10236  07D2  022A               	subwf	EEPROM_Read_Integer@i,w
 10237  07D3  1C03               	skipc
 10238  07D4  2FC5               	goto	l6065
 10239                           
 10240                           ;eeprom.c: 89:       return result;
 10241  07D5  0829               	movf	EEPROM_Read_Integer@result+1,w
 10242  07D6  00A4               	movwf	?_EEPROM_Read_Integer+1
 10243  07D7  0828               	movf	EEPROM_Read_Integer@result,w
 10244  07D8  00A3               	movwf	?_EEPROM_Read_Integer
 10245  07D9  0008               	return
 10246  07DA                     __end_of_EEPROM_Read_Integer:	
 10247  07DA                     __ptext44:	
 10248 ;; *************** function _EEPROM_Read_Byte *****************
 10249 ;; Defined at:
 10250 ;;		line 52 in file "eeprom.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  addr            1    wreg     unsigned char 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;  addr            1    2[BANK0 ] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      unsigned char 
 10257 ;; Registers used:
 10258 ;;		wreg
 10259 ;; Tracked objects:
 10260 ;;		On entry : 200/100
 10261 ;;		On exit  : 300/200
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10264 ;;      Params:         0       0       0       0       0
 10265 ;;      Locals:         0       1       0       0       0
 10266 ;;      Temps:          0       2       0       0       0
 10267 ;;      Totals:         0       3       0       0       0
 10268 ;;Total ram usage:        3 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    1
 10271 ;; This function calls:
 10272 ;;		Nothing
 10273 ;; This function is called by:
 10274 ;;		_Decodify_Command
 10275 ;;		_EEPROM_Read_Integer
 10276 ;;		_EEPROM_Read_String
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _EEPROM_Read_Byte
 10282  07DA                     _EEPROM_Read_Byte:	
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10286                           ;EEPROM_Read_Byte@addr stored from wreg
 10287  07DA  1283               	bcf	3,5	;RP0=0, select bank0
 10288  07DB  00A2               	movwf	EEPROM_Read_Byte@addr
 10289                           
 10290                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10291  07DC  3014               	movlw	20
 10292  07DD  00F4               	movwf	_Delay_Led_Memory	;volatile
 10293  07DE  01F5               	clrf	_Delay_Led_Memory+1	;volatile
 10294  07DF                     l512:	
 10295                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10296                           
 10297  07DF  1683               	bsf	3,5	;RP0=1, select bank3
 10298  07E0  1703               	bsf	3,6	;RP1=1, select bank3
 10299  07E1  188C               	btfsc	12,1	;volsfr
 10300  07E2  2FDF               	goto	l512
 10301                           
 10302                           ;eeprom.c: 57:    EEADR=addr;
 10303  07E3  1283               	bcf	3,5	;RP0=0, select bank0
 10304  07E4  1303               	bcf	3,6	;RP1=0, select bank0
 10305  07E5  0822               	movf	EEPROM_Read_Byte@addr,w
 10306  07E6  1703               	bsf	3,6	;RP1=1, select bank2
 10307  07E7  008D               	movwf	13	;volatile
 10308                           
 10309                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10310  07E8  1683               	bsf	3,5	;RP0=1, select bank3
 10311  07E9  138C               	bcf	12,7	;volsfr
 10312                           
 10313                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10314  07EA  140C               	bsf	12,0	;volsfr
 10315                           
 10316                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10317  07EB  304E               	movlw	78
 10318  07EC  1283               	bcf	3,5	;RP0=0, select bank0
 10319  07ED  1303               	bcf	3,6	;RP1=0, select bank0
 10320  07EE  00A1               	movwf	??_EEPROM_Read_Byte+1
 10321  07EF  30EA               	movlw	234
 10322  07F0  00A0               	movwf	??_EEPROM_Read_Byte
 10323  07F1                     u5487:	
 10324  07F1  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10325  07F2  2FF1               	goto	u5487
 10326  07F3  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10327  07F4  2FF1               	goto	u5487
 10328  07F5  0000               	nop
 10329                           
 10330                           ;eeprom.c: 61:    return EEDATA;
 10331  07F6  1283               	bcf	3,5	;RP0=0, select bank2
 10332  07F7  1703               	bsf	3,6	;RP1=1, select bank2
 10333  07F8  080C               	movf	12,w	;volatile
 10334  07F9  0008               	return
 10335  07FA                     __end_of_EEPROM_Read_Byte:	
 10336                           
 10337                           	psect	text48
 10338  138F                     __ptext48:	
 10339 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10340 ;; Defined at:
 10341 ;;		line 287 in file "EEPROM_24C1025.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  chip_add        1    wreg     unsigned char 
 10344 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  chip_add        1   26[BANK0 ] unsigned char 
 10347 ;;  data            2   27[BANK0 ] unsigned char [2]
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  2   22[BANK0 ] unsigned int 
 10350 ;; Registers used:
 10351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 300/100
 10354 ;;		On exit  : 300/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10357 ;;      Params:         0       4       0       0       0
 10358 ;;      Locals:         0       3       0       0       0
 10359 ;;      Temps:          0       0       0       0       0
 10360 ;;      Totals:         0       7       0       0       0
 10361 ;;Total ram usage:        7 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    4
 10364 ;; This function calls:
 10365 ;;		_EEPROM_24C1025_Read_Buffer
 10366 ;; This function is called by:
 10367 ;;		_Decodify_Command
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _EEPROM_24C1025_Read_Int
 10373  138F                     _EEPROM_24C1025_Read_Int:	
 10374                           
 10375                           ;incstack = 0
 10376                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10377                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10378  138F  1283               	bcf	3,5	;RP0=0, select bank0
 10379  1390  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10380                           
 10381                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10382  1391  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10383  1392  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10384  1393  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10385  1394  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10386  1395  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10387  1396  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10388  1397  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10389  1398  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10390  1399  3002               	movlw	2
 10391  139A  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10392  139B  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10393  139C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10394  139D  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10395  139E  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10396  139F  120A  158A  2556   	fcall	_EEPROM_24C1025_Read_Buffer
 10397                           
 10398                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 10399  13A2  1283               	bcf	3,5	;RP0=0, select bank0
 10400  13A3  1303               	bcf	3,6	;RP1=0, select bank0
 10401  13A4  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 10402  13A5  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10403  13A6  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10404  13A7  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10405  13A8  0008               	return
 10406  13A9                     __end_of_EEPROM_24C1025_Read_Int:	
 10407                           
 10408                           	psect	text49
 10409  1378                     __ptext49:	
 10410 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10411 ;; Defined at:
 10412 ;;		line 273 in file "EEPROM_24C1025.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  chip_add        1    wreg     unsigned char 
 10415 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  chip_add        1   26[BANK0 ] unsigned char 
 10418 ;;  data            1   27[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 300/100
 10425 ;;		On exit  : 300/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10428 ;;      Params:         0       4       0       0       0
 10429 ;;      Locals:         0       2       0       0       0
 10430 ;;      Temps:          0       0       0       0       0
 10431 ;;      Totals:         0       6       0       0       0
 10432 ;;Total ram usage:        6 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    4
 10435 ;; This function calls:
 10436 ;;		_EEPROM_24C1025_Read_Buffer
 10437 ;; This function is called by:
 10438 ;;		_Decodify_Command
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _EEPROM_24C1025_Read_Byte
 10444  1378                     _EEPROM_24C1025_Read_Byte:	
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10448                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10449  1378  1283               	bcf	3,5	;RP0=0, select bank0
 10450  1379  00BA               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10451                           
 10452                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10453  137A  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10454  137B  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10455  137C  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10456  137D  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10457  137E  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10458  137F  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10459  1380  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10460  1381  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10461  1382  303B               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10462  1383  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10463  1384  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10464  1385  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10465  1386  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10466  1387  083A               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10467  1388  120A  158A  2556   	fcall	_EEPROM_24C1025_Read_Buffer
 10468                           
 10469                           ;EEPROM_24C1025.c: 276:     return data;
 10470  138B  1283               	bcf	3,5	;RP0=0, select bank0
 10471  138C  1303               	bcf	3,6	;RP1=0, select bank0
 10472  138D  083B               	movf	EEPROM_24C1025_Read_Byte@data,w
 10473  138E  0008               	return
 10474  138F                     __end_of_EEPROM_24C1025_Read_Byte:	
 10475                           
 10476                           	psect	text53
 10477  06B2                     __ptext53:	
 10478 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 10479 ;; Defined at:
 10480 ;;		line 294 in file "EEPROM_24C1025.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  chip_add        1    wreg     unsigned char 
 10483 ;;  value           2   31[BANK0 ] unsigned int 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  chip_add        1   33[BANK0 ] unsigned char 
 10486 ;;  mem_add         4   34[BANK0 ] unsigned long 
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  1    wreg      void 
 10489 ;; Registers used:
 10490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10491 ;; Tracked objects:
 10492 ;;		On entry : 300/100
 10493 ;;		On exit  : 300/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10496 ;;      Params:         0       2       0       0       0
 10497 ;;      Locals:         0       5       0       0       0
 10498 ;;      Temps:          0       0       0       0       0
 10499 ;;      Totals:         0       7       0       0       0
 10500 ;;Total ram usage:        7 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; Hardware stack levels required when called:    5
 10503 ;; This function calls:
 10504 ;;		_EEPROM_24C1025_Write_Int
 10505 ;; This function is called by:
 10506 ;;		_Decodify_Command
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           
 10511                           ;psect for function _EEPROM_24C1025_Fill_All
 10512  06B2                     _EEPROM_24C1025_Fill_All:	
 10513                           
 10514                           ;incstack = 0
 10515                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10516                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 10517  06B2  1283               	bcf	3,5	;RP0=0, select bank0
 10518  06B3  00C1               	movwf	EEPROM_24C1025_Fill_All@chip_add
 10519                           
 10520                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 10521  06B4  01C2               	clrf	EEPROM_24C1025_Fill_All@mem_add
 10522  06B5  01C3               	clrf	EEPROM_24C1025_Fill_All@mem_add+1
 10523  06B6  01C4               	clrf	EEPROM_24C1025_Fill_All@mem_add+2
 10524  06B7  01C5               	clrf	EEPROM_24C1025_Fill_All@mem_add+3
 10525  06B8                     l6051:	
 10526                           
 10527                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 10528  06B8  0845               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 10529  06B9  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 10530  06BA  0844               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 10531  06BB  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 10532  06BC  0843               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 10533  06BD  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 10534  06BE  0842               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 10535  06BF  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
 10536  06C0  0840               	movf	EEPROM_24C1025_Fill_All@value+1,w
 10537  06C1  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
 10538  06C2  083F               	movf	EEPROM_24C1025_Fill_All@value,w
 10539  06C3  00BA               	movwf	EEPROM_24C1025_Write_Int@data
 10540  06C4  0841               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 10541  06C5  2725  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 10542  06C8  0064               	clrwdt	;# 
 10543                           
 10544                           ;EEPROM_24C1025.c: 300:         }
 10545  06C9  3002               	movlw	2
 10546  06CA  1283               	bcf	3,5	;RP0=0, select bank0
 10547  06CB  1303               	bcf	3,6	;RP1=0, select bank0
 10548  06CC  07C2               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 10549  06CD  3001               	movlw	1
 10550  06CE  1803               	skipnc
 10551  06CF  07C3               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 10552  06D0  1803               	skipnc
 10553  06D1  07C4               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 10554  06D2  1803               	skipnc
 10555  06D3  07C5               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 10556  06D4  0845               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 10557  06D5  1D03               	btfss	3,2
 10558  06D6  0008               	return
 10559  06D7  0844               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 10560  06D8  1D03               	btfss	3,2
 10561  06D9  0008               	return
 10562  06DA  3004               	movlw	4
 10563  06DB  0243               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 10564  06DC  1D03               	skipz
 10565  06DD  2EE0               	goto	u4863
 10566  06DE  3000               	movlw	0
 10567  06DF  0242               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 10568  06E0                     u4863:	
 10569  06E0  1803               	btfsc	3,0
 10570  06E1  0008               	return
 10571  06E2  2EB8               	goto	l6051
 10572  06E3                     __end_of_EEPROM_24C1025_Fill_All:	
 10573  06E3                     __ptext26:	
 10574 ;; *************** function _Save_Log *****************
 10575 ;; Defined at:
 10576 ;;		line 1028 in file "SlaveLiofilizadorVer1.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  add_datalog     4   31[BANK0 ] unsigned long 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 300/0
 10587 ;;		On exit  : 300/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10590 ;;      Params:         0       4       0       0       0
 10591 ;;      Locals:         0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0
 10593 ;;      Totals:         0       4       0       0       0
 10594 ;;Total ram usage:        4 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    5
 10597 ;; This function calls:
 10598 ;;		_EEPROM_24C1025_Write_Int
 10599 ;;		___fltol
 10600 ;;		___wmul
 10601 ;; This function is called by:
 10602 ;;		_Decodify_Command
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _Save_Log
 10608  06E3                     _Save_Log:	
 10609                           
 10610                           ;SlaveLiofilizadorVer1.c: 1029:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) T
      +                          emperatura0*10);
 10611                           
 10612                           ;incstack = 0
 10613                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10614  06E3  27A3  120A  118A   	fcall	PL18	;call to abstracted procedure
 10615  06E6  0854               	movf	(_Temperatura0+3)^(0+128),w
 10616  06E7  1283               	bcf	3,5	;RP0=0, select bank0
 10617  06E8  00A3               	movwf	___fltol@f1+3
 10618  06E9  1683               	bsf	3,5	;RP0=1, select bank1
 10619  06EA  0853               	movf	(_Temperatura0+2)^(0+128),w
 10620  06EB  1283               	bcf	3,5	;RP0=0, select bank0
 10621  06EC  00A2               	movwf	___fltol@f1+2
 10622  06ED  1683               	bsf	3,5	;RP0=1, select bank1
 10623  06EE  0852               	movf	(_Temperatura0+1)^(0+128),w
 10624  06EF  1283               	bcf	3,5	;RP0=0, select bank0
 10625  06F0  00A1               	movwf	___fltol@f1+1
 10626  06F1  1683               	bsf	3,5	;RP0=1, select bank1
 10627  06F2  0851               	movf	_Temperatura0^(0+128),w
 10628  06F3  1283               	bcf	3,5	;RP0=0, select bank0
 10629  06F4  00A0               	movwf	___fltol@f1
 10630  06F5  273B  120A  118A   	fcall	___fltol
 10631  06F8  0821               	movf	?___fltol+1,w
 10632  06F9  00AB               	movwf	___wmul@multiplier+1
 10633  06FA  0820               	movf	?___fltol,w
 10634  06FB  00AA               	movwf	___wmul@multiplier
 10635  06FC  300A               	movlw	10
 10636  06FD  00AC               	movwf	___wmul@multiplicand
 10637  06FE  01AD               	clrf	___wmul@multiplicand+1
 10638  06FF  278A  120A  118A   	fcall	___wmul
 10639  0702  082B               	movf	?___wmul+1,w
 10640  0703  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
 10641  0704  082A               	movf	?___wmul,w
 10642  0705  00BA               	movwf	EEPROM_24C1025_Write_Int@data
 10643  0706  3000               	movlw	0
 10644  0707  2725  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 10645                           
 10646                           ;SlaveLiofilizadorVer1.c: 1030:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) U
      +                          midade1);
 10647  070A  27A3  120A  118A   	fcall	PL18	;call to abstracted procedure
 10648  070D  0850               	movf	(_Umidade1+3)^(0+128),w
 10649  070E  1283               	bcf	3,5	;RP0=0, select bank0
 10650  070F  00A3               	movwf	___fltol@f1+3
 10651  0710  1683               	bsf	3,5	;RP0=1, select bank1
 10652  0711  084F               	movf	(_Umidade1+2)^(0+128),w
 10653  0712  1283               	bcf	3,5	;RP0=0, select bank0
 10654  0713  00A2               	movwf	___fltol@f1+2
 10655  0714  1683               	bsf	3,5	;RP0=1, select bank1
 10656  0715  084E               	movf	(_Umidade1+1)^(0+128),w
 10657  0716  1283               	bcf	3,5	;RP0=0, select bank0
 10658  0717  00A1               	movwf	___fltol@f1+1
 10659  0718  1683               	bsf	3,5	;RP0=1, select bank1
 10660  0719  084D               	movf	_Umidade1^(0+128),w
 10661  071A  1283               	bcf	3,5	;RP0=0, select bank0
 10662  071B  00A0               	movwf	___fltol@f1
 10663  071C  273B  120A  118A   	fcall	___fltol
 10664  071F  0821               	movf	?___fltol+1,w
 10665  0720  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
 10666  0721  0820               	movf	?___fltol,w
 10667  0722  00BA               	movwf	EEPROM_24C1025_Write_Int@data
 10668  0723  3001               	movlw	1
 10669  0724  2F25               	ljmp	_EEPROM_24C1025_Write_Int
 10670  0725                     __end_of_Save_Log:	
 10671  0725                     __ptext54:	
 10672 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 10673 ;; Defined at:
 10674 ;;		line 279 in file "EEPROM_24C1025.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  chip_add        1    wreg     unsigned char 
 10677 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10678 ;;  data            2   26[BANK0 ] int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10681 ;;  local           2   29[BANK0 ] unsigned char [2]
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10686 ;; Tracked objects:
 10687 ;;		On entry : 200/100
 10688 ;;		On exit  : 300/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10691 ;;      Params:         0       6       0       0       0
 10692 ;;      Locals:         0       3       0       0       0
 10693 ;;      Temps:          0       0       0       0       0
 10694 ;;      Totals:         0       9       0       0       0
 10695 ;;Total ram usage:        9 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    4
 10698 ;; This function calls:
 10699 ;;		_EEPROM_24C1025_Write_Buffer
 10700 ;; This function is called by:
 10701 ;;		_EEPROM_24C1025_Fill_All
 10702 ;;		_Decodify_Command
 10703 ;;		_Save_Log
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _EEPROM_24C1025_Write_Int
 10709  0725                     _EEPROM_24C1025_Write_Int:	
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10713                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 10714  0725  1283               	bcf	3,5	;RP0=0, select bank0
 10715  0726  00BC               	movwf	EEPROM_24C1025_Write_Int@chip_add
 10716                           
 10717                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 10718  0727  083B               	movf	EEPROM_24C1025_Write_Int@data+1,w
 10719  0728  00BD               	movwf	EEPROM_24C1025_Write_Int@local
 10720                           
 10721                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 10722  0729  083A               	movf	EEPROM_24C1025_Write_Int@data,w
 10723  072A  00BE               	movwf	EEPROM_24C1025_Write_Int@local+1
 10724                           
 10725                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 10726  072B  0839               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 10727  072C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10728  072D  0838               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 10729  072E  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10730  072F  0837               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 10731  0730  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10732  0731  0836               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 10733  0732  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10734  0733  3002               	movlw	2
 10735  0734  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 10736  0735  303D               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 10737  0736  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10738  0737  083C               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 10739  0738  120A  158A  2E35   	ljmp	_EEPROM_24C1025_Write_Buffer
 10740  073B                     __end_of_EEPROM_24C1025_Write_Int:	
 10741  073B                     __ptext28:	
 10742 ;; *************** function ___fltol *****************
 10743 ;; Defined at:
 10744 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  f1              4    0[BANK0 ] unsigned int 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  exp1            1    9[BANK0 ] unsigned char 
 10749 ;;  sign1           1    8[BANK0 ] unsigned char 
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  4    0[BANK0 ] long 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0
 10754 ;; Tracked objects:
 10755 ;;		On entry : 300/0
 10756 ;;		On exit  : 300/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10759 ;;      Params:         0       4       0       0       0
 10760 ;;      Locals:         0       2       0       0       0
 10761 ;;      Temps:          0       4       0       0       0
 10762 ;;      Totals:         0      10       0       0       0
 10763 ;;Total ram usage:       10 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    1
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_Decodify_Command
 10770 ;;		_Save_Log
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function ___fltol
 10776  073B                     ___fltol:	
 10777                           
 10778                           ;incstack = 0
 10779                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10780  073B  1003               	clrc
 10781  073C  0D22               	rlf	___fltol@f1+2,w
 10782  073D  0D23               	rlf	___fltol@f1+3,w
 10783  073E  00A9               	movwf	___fltol@exp1
 10784  073F  0829               	movf	___fltol@exp1,w
 10785  0740  1D03               	btfss	3,2
 10786  0741  2F47               	goto	l3923
 10787  0742                     l3921:	
 10788  0742  01A0               	clrf	?___fltol
 10789  0743  01A1               	clrf	?___fltol+1
 10790  0744  01A2               	clrf	?___fltol+2
 10791  0745  01A3               	clrf	?___fltol+3
 10792  0746  0008               	return
 10793  0747                     l3923:	
 10794  0747  0820               	movf	___fltol@f1,w
 10795  0748  00A4               	movwf	??___fltol
 10796  0749  0821               	movf	___fltol@f1+1,w
 10797  074A  00A5               	movwf	??___fltol+1
 10798  074B  0822               	movf	___fltol@f1+2,w
 10799  074C  00A6               	movwf	??___fltol+2
 10800  074D  0823               	movf	___fltol@f1+3,w
 10801  074E  00A7               	movwf	??___fltol+3
 10802  074F  301F               	movlw	31
 10803  0750                     u2555:	
 10804  0750  1003               	clrc
 10805  0751  0CA7               	rrf	??___fltol+3,f
 10806  0752  0CA6               	rrf	??___fltol+2,f
 10807  0753  0CA5               	rrf	??___fltol+1,f
 10808  0754  0CA4               	rrf	??___fltol,f
 10809  0755  3EFF               	addlw	-1
 10810  0756  1D03               	skipz
 10811  0757  2F50               	goto	u2555
 10812  0758  0824               	movf	??___fltol,w
 10813  0759  00A8               	movwf	___fltol@sign1
 10814  075A  3096               	movlw	150
 10815  075B  17A2               	bsf	___fltol@f1+2,7
 10816  075C  01A3               	clrf	___fltol@f1+3
 10817  075D  02A9               	subwf	___fltol@exp1,f
 10818  075E  1FA9               	btfss	___fltol@exp1,7
 10819  075F  2F6D               	goto	l3941
 10820  0760  0829               	movf	___fltol@exp1,w
 10821  0761  3A80               	xorlw	128
 10822  0762  3E97               	addlw	151
 10823  0763  1C03               	btfss	3,0
 10824  0764  2F42               	goto	l3921
 10825  0765                     l3937:	
 10826  0765  1003               	clrc
 10827  0766  0CA3               	rrf	___fltol@f1+3,f
 10828  0767  0CA2               	rrf	___fltol@f1+2,f
 10829  0768  0CA1               	rrf	___fltol@f1+1,f
 10830  0769  0CA0               	rrf	___fltol@f1,f
 10831  076A  0FA9               	incfsz	___fltol@exp1,f
 10832  076B  2F65               	goto	l3937
 10833  076C  2F7B               	goto	l3949
 10834  076D                     l3941:	
 10835  076D  3020               	movlw	32
 10836  076E  0229               	subwf	___fltol@exp1,w
 10837  076F  1803               	btfsc	3,0
 10838  0770  2F42               	goto	l3921
 10839  0771                     l3947:	
 10840  0771  0829               	movf	___fltol@exp1,w
 10841  0772  1903               	btfsc	3,2
 10842  0773  2F7B               	goto	l3949
 10843  0774  1003               	clrc
 10844  0775  0DA0               	rlf	___fltol@f1,f
 10845  0776  0DA1               	rlf	___fltol@f1+1,f
 10846  0777  0DA2               	rlf	___fltol@f1+2,f
 10847  0778  0DA3               	rlf	___fltol@f1+3,f
 10848  0779  03A9               	decf	___fltol@exp1,f
 10849  077A  2F71               	goto	l3947
 10850  077B                     l3949:	
 10851  077B  0828               	movf	___fltol@sign1,w
 10852  077C  1903               	btfsc	3,2
 10853  077D  0008               	return
 10854  077E  09A0               	comf	___fltol@f1,f
 10855  077F  09A1               	comf	___fltol@f1+1,f
 10856  0780  09A2               	comf	___fltol@f1+2,f
 10857  0781  09A3               	comf	___fltol@f1+3,f
 10858  0782  0AA0               	incf	___fltol@f1,f
 10859  0783  1903               	skipnz
 10860  0784  0AA1               	incf	___fltol@f1+1,f
 10861  0785  1903               	skipnz
 10862  0786  0AA2               	incf	___fltol@f1+2,f
 10863  0787  1903               	skipnz
 10864  0788  0AA3               	incf	___fltol@f1+3,f
 10865  0789  0008               	return
 10866  078A                     __end_of___fltol:	
 10867  078A                     __ptext27:	
 10868 ;; *************** function ___wmul *****************
 10869 ;; Defined at:
 10870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  multiplier      2   10[BANK0 ] unsigned int 
 10873 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  product         2   14[BANK0 ] unsigned int 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  2   10[BANK0 ] unsigned int 
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0
 10880 ;; Tracked objects:
 10881 ;;		On entry : 300/0
 10882 ;;		On exit  : 300/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10885 ;;      Params:         0       4       0       0       0
 10886 ;;      Locals:         0       2       0       0       0
 10887 ;;      Temps:          0       0       0       0       0
 10888 ;;      Totals:         0       6       0       0       0
 10889 ;;Total ram usage:        6 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    1
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_Save_Log
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function ___wmul
 10901  078A                     ___wmul:	
 10902                           
 10903                           ;incstack = 0
 10904                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10905  078A  01AE               	clrf	___wmul@product
 10906  078B  01AF               	clrf	___wmul@product+1
 10907  078C                     l5799:	
 10908  078C  1C2A               	btfss	___wmul@multiplier,0
 10909  078D  2F94               	goto	l5803
 10910  078E  082C               	movf	___wmul@multiplicand,w
 10911  078F  07AE               	addwf	___wmul@product,f
 10912  0790  1803               	skipnc
 10913  0791  0AAF               	incf	___wmul@product+1,f
 10914  0792  082D               	movf	___wmul@multiplicand+1,w
 10915  0793  07AF               	addwf	___wmul@product+1,f
 10916  0794                     l5803:	
 10917  0794  1003               	clrc
 10918  0795  0DAC               	rlf	___wmul@multiplicand,f
 10919  0796  0DAD               	rlf	___wmul@multiplicand+1,f
 10920  0797  1003               	clrc
 10921  0798  0CAB               	rrf	___wmul@multiplier+1,f
 10922  0799  0CAA               	rrf	___wmul@multiplier,f
 10923  079A  082A               	movf	___wmul@multiplier,w
 10924  079B  042B               	iorwf	___wmul@multiplier+1,w
 10925  079C  1D03               	btfss	3,2
 10926  079D  2F8C               	goto	l5799
 10927  079E  082F               	movf	___wmul@product+1,w
 10928  079F  00AB               	movwf	?___wmul+1
 10929  07A0  082E               	movf	___wmul@product,w
 10930  07A1  00AA               	movwf	?___wmul
 10931  07A2  0008               	return
 10932  07A3                     __end_of___wmul:	
 10933  07A3                     PL18:	
 10934  07A3  0842               	movf	Save_Log@add_datalog+3,w
 10935  07A4  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 10936  07A5  0841               	movf	Save_Log@add_datalog+2,w
 10937  07A6  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 10938  07A7  0840               	movf	Save_Log@add_datalog+1,w
 10939  07A8  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 10940  07A9  083F               	movf	Save_Log@add_datalog,w
 10941  07AA  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
 10942  07AB  1683               	bsf	3,5	;RP0=1, select bank1
 10943  07AC  0008               	return
 10944  07AD                     __end_ofPL18:	
 10945                           
 10946                           	psect	text61
 10947  1358                     __ptext61:	
 10948 ;; *************** function _ADC_init *****************
 10949 ;; Defined at:
 10950 ;;		line 10 in file "adc.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/100
 10961 ;;		On exit  : 300/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10964 ;;      Params:         0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0
 10967 ;;      Totals:         0       0       0       0       0
 10968 ;;Total ram usage:        0 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    1
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_main
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           
 10979                           ;psect for function _ADC_init
 10980  1358                     _ADC_init:	
 10981                           
 10982                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 10986  1358  30C0               	movlw	192
 10987  1359  1283               	bcf	3,5	;RP0=0, select bank0
 10988  135A  1303               	bcf	3,6	;RP1=0, select bank0
 10989  135B  049F               	iorwf	31,f	;volatile
 10990                           
 10991                           ;adc.c: 12:      ADCON1=0b10000000;
 10992  135C  3080               	movlw	128
 10993  135D  1683               	bsf	3,5	;RP0=1, select bank1
 10994  135E  009F               	movwf	31	;volatile
 10995                           
 10996                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 10997  135F  179F               	bsf	31,7	;volatile
 10998                           
 10999                           ;adc.c: 14:      ADCON0bits.ADON=1;
 11000  1360  1283               	bcf	3,5	;RP0=0, select bank0
 11001  1361  141F               	bsf	31,0	;volatile
 11002  1362  0008               	return
 11003  1363                     __end_of_ADC_init:	
 11004                           
 11005                           	psect	text62
 11006  1668                     __ptext62:	
 11007 ;; *************** function _isr *****************
 11008 ;; Defined at:
 11009 ;;		line 29 in file "isr.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;		None
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  tempo           2    4[COMMON] unsigned int 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 300/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11023 ;;      Params:         0       0       0       0       0
 11024 ;;      Locals:         2       0       0       0       0
 11025 ;;      Temps:          4       0       0       0       0
 11026 ;;      Totals:         6       0       0       0       0
 11027 ;;Total ram usage:        6 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		Interrupt level 1
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           
 11037                           ;psect for function _isr
 11038  1668                     _isr:	
 11039                           
 11040                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 11041  1668  188B               	btfsc	11,1	;volatile
 11042                           
 11043                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 11044  1669  108B               	bcf	11,1	;volatile
 11045                           
 11046                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 11047                           
 11048                           ;isr.c: 37:       }
 11049  166A  1C0C               	btfss	12,0	;volatile
 11050  166B  2ECC               	goto	i1l5405
 11051                           
 11052                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 11053  166C  30B1               	movlw	177
 11054  166D  008F               	movwf	15	;volatile
 11055                           
 11056                           ;isr.c: 42:                 TMR1L=0xF3;
 11057  166E  30F3               	movlw	243
 11058  166F  008E               	movwf	14	;volatile
 11059                           
 11060                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 11061  1670  100C               	bcf	12,0	;volatile
 11062                           
 11063                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 11064  1671  1FEB               	btfss	_generic_status,7
 11065  1672  2E75               	goto	i1l5361
 11066                           
 11067                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 11068  1673  13EB               	bcf	_generic_status,7
 11069  1674  0064               	clrwdt	;# 
 11070  1675                     i1l5361:	
 11071                           
 11072                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 11073  1675  300A               	movlw	10
 11074  1676  07F2               	addwf	_Delay_Led_Tmr0,f	;volatile
 11075  1677  1803               	skipnc
 11076  1678  0AF3               	incf	_Delay_Led_Tmr0+1,f	;volatile
 11077                           
 11078                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 11079  1679  3003               	movlw	3
 11080  167A  0273               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 11081  167B  30E8               	movlw	232
 11082  167C  1903               	skipnz
 11083  167D  0272               	subwf	_Delay_Led_Tmr0,w	;volatile
 11084  167E  1C03               	skipc
 11085  167F  2E82               	goto	i1l5365
 11086                           
 11087                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 11088  1680  01F2               	clrf	_Delay_Led_Tmr0	;volatile
 11089  1681  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
 11090  1682                     i1l5365:	
 11091                           
 11092                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 11093  1682  3001               	movlw	1
 11094  1683  0273               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 11095  1684  30F4               	movlw	244
 11096  1685  1903               	skipnz
 11097  1686  0272               	subwf	_Delay_Led_Tmr0,w	;volatile
 11098  1687  1803               	skipnc
 11099  1688  2E8D               	goto	i1l627
 11100                           
 11101                           ;isr.c: 55:                    PORTBbits.RB7=1;
 11102  1689  1283               	bcf	3,5	;RP0=0, select bank0
 11103  168A  1303               	bcf	3,6	;RP1=0, select bank0
 11104  168B  1786               	bsf	6,7	;volatile
 11105  168C  2E90               	goto	i1l5369
 11106  168D                     i1l627:	
 11107                           ;isr.c: 56:                 else
 11108                           
 11109                           
 11110                           ;isr.c: 57:                    PORTBbits.RB7=0;
 11111  168D  1283               	bcf	3,5	;RP0=0, select bank0
 11112  168E  1303               	bcf	3,6	;RP1=0, select bank0
 11113  168F  1386               	bcf	6,7	;volatile
 11114  1690                     i1l5369:	
 11115                           
 11116                           ;isr.c: 60:                 if(Delay_Led_Usart){
 11117  1690  0870               	movf	_Delay_Led_Usart,w	;volatile
 11118  1691  0471               	iorwf	_Delay_Led_Usart+1,w	;volatile
 11119  1692  1903               	btfsc	3,2
 11120  1693  2E9C               	goto	i1l629
 11121                           
 11122                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 11123  1694  300A               	movlw	10
 11124  1695  02F0               	subwf	_Delay_Led_Usart,f	;volatile
 11125  1696  3000               	movlw	0
 11126  1697  1C03               	skipc
 11127  1698  03F1               	decf	_Delay_Led_Usart+1,f	;volatile
 11128  1699  02F1               	subwf	_Delay_Led_Usart+1,f	;volatile
 11129                           
 11130                           ;isr.c: 62:                    PORTBbits.RB6=1;
 11131  169A  1706               	bsf	6,6	;volatile
 11132                           
 11133                           ;isr.c: 63:                    }
 11134  169B  2E9D               	goto	i1l5375
 11135  169C                     i1l629:	
 11136                           ;isr.c: 64:                 else{
 11137                           
 11138                           
 11139                           ;isr.c: 65:                    PORTBbits.RB6=0;
 11140  169C  1306               	bcf	6,6	;volatile
 11141  169D                     i1l5375:	
 11142                           
 11143                           ;isr.c: 68:                 if(Delay_Led_Memory){
 11144  169D  0874               	movf	_Delay_Led_Memory,w	;volatile
 11145  169E  0475               	iorwf	_Delay_Led_Memory+1,w	;volatile
 11146  169F  1903               	btfsc	3,2
 11147  16A0  2EA9               	goto	i1l631
 11148                           
 11149                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 11150  16A1  300A               	movlw	10
 11151  16A2  02F4               	subwf	_Delay_Led_Memory,f	;volatile
 11152  16A3  3000               	movlw	0
 11153  16A4  1C03               	skipc
 11154  16A5  03F5               	decf	_Delay_Led_Memory+1,f	;volatile
 11155  16A6  02F5               	subwf	_Delay_Led_Memory+1,f	;volatile
 11156                           
 11157                           ;isr.c: 70:                    PORTBbits.RB5=1;
 11158  16A7  1686               	bsf	6,5	;volatile
 11159                           
 11160                           ;isr.c: 71:                    }
 11161  16A8  2EAA               	goto	i1l5381
 11162  16A9                     i1l631:	
 11163                           ;isr.c: 72:                 else{
 11164                           
 11165                           
 11166                           ;isr.c: 73:                    PORTBbits.RB5=0;
 11167  16A9  1286               	bcf	6,5	;volatile
 11168  16AA                     i1l5381:	
 11169                           
 11170                           ;isr.c: 77:                 tempodecorrido+=10;
 11171  16AA  300A               	movlw	10
 11172  16AB  1683               	bsf	3,5	;RP0=1, select bank1
 11173  16AC  07D5               	addwf	_tempodecorrido^(0+128),f	;volatile
 11174  16AD  1803               	skipnc
 11175  16AE  0AD6               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 11176                           
 11177                           ;isr.c: 78:                 milisegundo+=10;
 11178  16AF  07D7               	addwf	_milisegundo^(0+128),f	;volatile
 11179  16B0  1803               	skipnc
 11180  16B1  0AD8               	incf	(_milisegundo+1)^(0+128),f	;volatile
 11181                           
 11182                           ;isr.c: 79:                 if(milisegundo==1000){
 11183  16B2  30E8               	movlw	232
 11184  16B3  0657               	xorwf	_milisegundo^(0+128),w	;volatile
 11185  16B4  3003               	movlw	3
 11186  16B5  1903               	skipnz
 11187  16B6  0658               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 11188  16B7  1D03               	btfss	3,2
 11189  16B8  2ECC               	goto	i1l5405
 11190                           
 11191                           ;isr.c: 80:                    milisegundo=0;
 11192  16B9  01D7               	clrf	_milisegundo^(0+128)	;volatile
 11193  16BA  01D8               	clrf	(_milisegundo+1)^(0+128)	;volatile
 11194                           
 11195                           ;isr.c: 81:                    segundo++;
 11196  16BB  0ADB               	incf	_segundo^(0+128),f	;volatile
 11197                           
 11198                           ;isr.c: 88:                    if(segundo==60){
 11199  16BC  303C               	movlw	60
 11200  16BD  065B               	xorwf	_segundo^(0+128),w	;volatile
 11201  16BE  1D03               	btfss	3,2
 11202  16BF  2ECC               	goto	i1l5405
 11203                           
 11204                           ;isr.c: 89:                       segundo=0;
 11205  16C0  01DB               	clrf	_segundo^(0+128)	;volatile
 11206                           
 11207                           ;isr.c: 90:                       minuto++;
 11208  16C1  0AD9               	incf	_minuto^(0+128),f	;volatile
 11209                           
 11210                           ;isr.c: 91:                       if(minuto==60){
 11211  16C2  303C               	movlw	60
 11212  16C3  0659               	xorwf	_minuto^(0+128),w	;volatile
 11213  16C4  1D03               	btfss	3,2
 11214  16C5  2ECC               	goto	i1l5405
 11215                           
 11216                           ;isr.c: 92:                          minuto=0;
 11217  16C6  01D9               	clrf	_minuto^(0+128)	;volatile
 11218                           
 11219                           ;isr.c: 93:                          hora++;
 11220  16C7  0ADA               	incf	_hora^(0+128),f	;volatile
 11221                           
 11222                           ;isr.c: 94:                          if(hora==24){
 11223  16C8  3018               	movlw	24
 11224  16C9  065A               	xorwf	_hora^(0+128),w	;volatile
 11225  16CA  1903               	btfsc	3,2
 11226                           
 11227                           ;isr.c: 95:                             hora=0;
 11228  16CB  01DA               	clrf	_hora^(0+128)	;volatile
 11229  16CC                     i1l5405:	
 11230                           ;isr.c: 99:                 }
 11231                           
 11232                           
 11233                           ;isr.c: 104:     if(PIR1bits.RCIF)
 11234  16CC  1283               	bcf	3,5	;RP0=0, select bank0
 11235  16CD  1E8C               	btfss	12,5	;volatile
 11236  16CE  2F19               	goto	i1l645
 11237  16CF  301E               	movlw	30
 11238                           
 11239                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 11240  16D0  146B               	bsf	_generic_status,0
 11241                           
 11242                           ;isr.c: 109:         tempo=30;
 11243  16D1  00FA               	movwf	isr@tempo
 11244  16D2  01FB               	clrf	isr@tempo+1
 11245                           
 11246                           ;isr.c: 110:         count=0;
 11247  16D3  01E3               	clrf	_count	;volatile
 11248  16D4  01E4               	clrf	_count+1	;volatile
 11249                           
 11250                           ;isr.c: 111:         pointer=usart_buffer;
 11251  16D5  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 11252  16D6  00E7               	movwf	_pointer
 11253  16D7                     i1l5425:	
 11254                           ;isr.c: 112:         while(tempo)
 11255                           
 11256                           
 11257                           ;isr.c: 112:         while(tempo)
 11258  16D7  087A               	movf	isr@tempo,w
 11259  16D8  047B               	iorwf	isr@tempo+1,w
 11260  16D9  1903               	btfsc	3,2
 11261  16DA  2F00               	goto	i1l5427
 11262                           
 11263                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 11264  16DB  1283               	bcf	3,5	;RP0=0, select bank0
 11265  16DC  1303               	bcf	3,6	;RP1=0, select bank0
 11266  16DD  1E8C               	btfss	12,5	;volatile
 11267  16DE  2EF9               	goto	i1l5423
 11268                           
 11269                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 11270  16DF  0867               	movf	_pointer,w
 11271  16E0  0084               	movwf	4
 11272  16E1  081A               	movf	26,w	;volatile
 11273  16E2  1783               	bsf	3,7	;select IRP bank2
 11274  16E3  0080               	movwf	0
 11275                           
 11276                           ;isr.c: 118:                 if(count<32+10 -1)
 11277  16E4  0864               	movf	_count+1,w	;volatile
 11278  16E5  3A80               	xorlw	128
 11279  16E6  00FF               	movwf	127
 11280  16E7  3080               	movlw	128
 11281  16E8  027F               	subwf	127,w
 11282  16E9  1D03               	skipz
 11283  16EA  2EED               	goto	u434_25
 11284  16EB  3029               	movlw	41
 11285  16EC  0263               	subwf	_count,w	;volatile
 11286  16ED                     u434_25:	
 11287  16ED  1803               	skipnc
 11288  16EE  2EF5               	goto	i1l5421
 11289                           
 11290                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 11291  16EF  1283               	bcf	3,5	;RP0=0, select bank0
 11292  16F0  1303               	bcf	3,6	;RP1=0, select bank0
 11293  16F1  0AE3               	incf	_count,f	;volatile
 11294  16F2  1903               	skipnz
 11295  16F3  0AE4               	incf	_count+1,f	;volatile
 11296                           
 11297                           ;isr.c: 121:                    pointer++;
 11298  16F4  0AE7               	incf	_pointer,f
 11299  16F5                     i1l5421:	
 11300                           
 11301                           ;isr.c: 123:                 tempo=30;
 11302  16F5  301E               	movlw	30
 11303  16F6  00FA               	movwf	isr@tempo
 11304  16F7  01FB               	clrf	isr@tempo+1
 11305                           
 11306                           ;isr.c: 124:             }
 11307  16F8  2ED7               	goto	i1l5425
 11308  16F9                     i1l5423:	
 11309                           
 11310                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 11311  16F9  3001               	movlw	1
 11312  16FA  02FA               	subwf	isr@tempo,f
 11313  16FB  3000               	movlw	0
 11314  16FC  1C03               	skipc
 11315  16FD  03FB               	decf	isr@tempo+1,f
 11316  16FE  02FB               	subwf	isr@tempo+1,f
 11317  16FF  2ED7               	goto	i1l5425
 11318  1700                     i1l5427:	
 11319                           
 11320                           ;isr.c: 131:         (*pointer)=0;
 11321  1700  1283               	bcf	3,5	;RP0=0, select bank0
 11322  1701  1303               	bcf	3,6	;RP1=0, select bank0
 11323  1702  0867               	movf	_pointer,w
 11324  1703  0084               	movwf	4
 11325  1704  1783               	bsf	3,7	;select IRP bank2
 11326  1705  0180               	clrf	0
 11327                           
 11328                           ;isr.c: 133:         if(RCSTAbits.OERR){
 11329  1706  1C98               	btfss	24,1	;volatile
 11330  1707  2F19               	goto	i1l645
 11331                           
 11332                           ;isr.c: 134:            CREN=0;
 11333  1708  1218               	bcf	24,4	;volatile
 11334                           
 11335                           ;isr.c: 135:            CREN=1;
 11336  1709  1618               	bsf	24,4	;volatile
 11337                           
 11338                           ;isr.c: 136:            tempo=RCREG;
 11339  170A  081A               	movf	26,w	;volatile
 11340  170B  00FA               	movwf	isr@tempo
 11341  170C  01FB               	clrf	isr@tempo+1
 11342                           
 11343                           ;isr.c: 137:            tempo=RCREG;
 11344  170D  081A               	movf	26,w	;volatile
 11345  170E  00FA               	movwf	isr@tempo
 11346  170F  01FB               	clrf	isr@tempo+1
 11347                           
 11348                           ;isr.c: 138:            tempo=RCREG;
 11349  1710  081A               	movf	26,w	;volatile
 11350  1711  00FA               	movwf	isr@tempo
 11351  1712  01FB               	clrf	isr@tempo+1
 11352                           
 11353                           ;isr.c: 139:            usart_buffer[0]=0;
 11354  1713  1683               	bsf	3,5	;RP0=1, select bank3
 11355  1714  1703               	bsf	3,6	;RP1=1, select bank3
 11356  1715  0190               	clrf	_usart_buffer^(0+384)	;volatile
 11357                           
 11358                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 11359  1716  1283               	bcf	3,5	;RP0=0, select bank0
 11360  1717  1303               	bcf	3,6	;RP1=0, select bank0
 11361  1718  14EB               	bsf	_generic_status,1
 11362  1719                     i1l645:	
 11363  1719  0879               	movf	??_isr+3,w
 11364  171A  00FF               	movwf	127
 11365  171B  0878               	movf	??_isr+2,w
 11366  171C  008A               	movwf	10
 11367  171D  0877               	movf	??_isr+1,w
 11368  171E  0084               	movwf	4
 11369  171F  0E76               	swapf	??_isr^(0+4294967168),w
 11370  1720  0083               	movwf	3
 11371  1721  0EFE               	swapf	126,f
 11372  1722  0E7E               	swapf	126,w
 11373  1723  0009               	retfie
 11374  1724                     __end_of_isr:	
 11375  007E                     btemp	set	126	;btemp
 11376  007E                     wtemp0	set	126
 11377                           
 11378                           	psect	intentry
 11379  0004                     __pintentry:	
 11380                           ;incstack = 0
 11381                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 11382                           
 11383  0004                     interrupt_function:	
 11384  007E                     saved_w	set	btemp
 11385  0004  00FE               	movwf	btemp
 11386  0005  0E03               	swapf	3,w
 11387  0006  00F6               	movwf	??_isr
 11388  0007  0804               	movf	4,w
 11389  0008  00F7               	movwf	??_isr+1
 11390  0009  080A               	movf	10,w
 11391  000A  00F8               	movwf	??_isr+2
 11392  000B  1283               	bcf	3,5	;RP0=0, select bank0
 11393  000C  1303               	bcf	3,6	;RP1=0, select bank0
 11394  000D  087F               	movf	btemp+1,w
 11395  000E  00F9               	movwf	??_isr+3
 11396  000F  160A  118A  2E68   	ljmp	_isr


Data Sizes:
    Strings     13
    Constant    44
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     67      76
    BANK1            80     45      76
    BANK3            96      0      90
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK3[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(1) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK3[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mediaLeituraPt100Umidadde
    _mediaLeituraPt100Umidadde->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _itoa->_utoa
    _utoa->___lwdiv
    ___flmul->__Umul8_16
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___wmul->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  122677
                                             62 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           11    11      0   17594
                                             51 BANK0     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3773
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3528
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1784
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2067
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0  102467
                                             38 BANK0      2     2      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    4954
                                              8 BANK0     25    17      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     602
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     602
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4    8834
                                             31 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3345
                                             19 BANK0      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     250
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    6     2      4    2822
                                             13 BANK0      6     2      4
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             17 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3050
                                             17 BANK0      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             13 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                             10 BANK0      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     875
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     979
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     5      3     229
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                             8     3      5    6284
                                             10 BANK0      8     3      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7264
                                             22 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             10     5      5    7344
                                             10 BANK0     10     5      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    8234
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    8200
                                             22 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     6      7    7974
                                             10 BANK0     12     5      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     955
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8160
                                             31 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    7909
                                             22 BANK0      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         12     6      6    6982
                                             10 BANK0     12     6      6
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     578
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4911
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
       ___fltol
       ___wmul
         ___fltol (ARG)
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      FE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5A       9       93.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      FE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 21 14:39:13 2020

                              _USART_putc 0BD3                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 0046                              ___fldiv@bexp 0045  
                                       pc 0002                              ___fldiv@sign 003E  
                                      PL2 035F                                        PL4 0379  
                                      PL6 0382                                        PL8 0393  
                                      l69 0CBD           EEPROM_24C1025_Read_Buffer@range 0034  
        EEPROM_24C1025_Write_Str@chip_add 002F                                        fsr 0004  
                     ___wmul@multiplicand 002C                             _USART_put_int 0F82  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0025  
                                     PL10 03A2                                       PL20 0FB2  
                                     PL12 0FA1                                       PL30 0FCB  
                                     PL22 0FBC                                       PL14 03B0  
                                     PL40 0FDF                                       PL32 0FD2  
                                     PL24 03B9                                       PL16 0FA8  
                                     PL50 058F                                       PL42 0FE4  
                                     PL34 03C2                                       PL26 0586  
                                     PL18 07A3                                       PL52 15B1  
                                     PL44 0FEA                                       PL36 03C9  
                                     PL28 0FC5                                       PL46 0FF0  
                                     PL38 0FD8                                       PL48 03D0  
            PROCULUS_VP_Write_String@text 0035                                       l421 0B3E  
                                     l182 0F5D                                       l502 157C  
                                     l423 0B97                                       l512 07DF  
                                     l417 0B33                                       l507 15A1  
                                     l508 15A2                                       l534 07AF  
                                     l800 03F1                                       l478 03D7  
                                     l863 0BD8                                       _PEN 048A  
                            __CFG_CPD$OFF 0000                                       _SEN 0488  
      EEPROM_24C1025_Read_Buffer@chip_add 0033                  Decodify_Command@sizedata 00C8  
                                     _isr 1668                                       fsr0 0004  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 15B1  
                        _ADC_Media_10bits 0037                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0035                              ___flmul@bexp 0036  
                  PROCULUS_VP_Write@vetor 002F              ?_EEPROM_24C1025_Write_Buffer 002A  
                            ___flmul@sign 0034                              ___flmul@temp 003F  
                            ___flmul@prod 003B   __end_of_PROCULUS_Control_Register_Write 0833  
__size_of_PROCULUS_Control_Register_Write 002A         ??_PROCULUS_Control_Register_Write 002E  
        ?_PROCULUS_Control_Register_Write 002D           _PROCULUS_Control_Register_Write 0809  
                            __CFG_LVP$OFF 0000                              ___fltol@exp1 0029  
                                    l1314 057F                                      l1323 05A8  
                                    l1420 0314                                      l1324 05A6  
                                    l1407 02E2                                      l1327 05BF  
                                    l1271 0447                                      l1360 0168  
                                    l1352 06AD                                      l1328 05BD  
                                    l1280 04A1                                      l1272 0445  
                                    l1281 04A3                                      l1434 160C  
                                    l1266 042B                                      l1363 0181  
                                    l1267 0429                                      l1364 017F  
                                    l1381 029F                                      l4101 055A  
                                    l1277 04AC                                      l1294 0535  
                                    l1359 016A                                      l1279 049A  
                                    l1288 04CF                                      l4105 055C  
                                    l1289 04D1                                      l1299 054A  
                                    l4051 04B2                                      l4125 057B  
                                    l4117 056F                                      l4045 04A6  
                                    l4029 0471                                      l4161 02ED  
                                    l4129 0580                                      l4081 053F  
                                    l4065 04D5                                      l3523 0F34  
                                    l4075 0527                                      l3517 0F30  
                                    l4173 0312                                      l4165 02EF  
                                    l4157 02DA                                      l4093 054F  
                                    l4175 0308                                      l4167 02F8  
                                    l4095 0551                                      l6025 0D3D  
                                    l6017 0D25                                      l4169 0303  
                                    l6051 06B8                                      l6027 0D44  
                                    l4451 1542                                      l3651 13AB  
                                    l4187 032A                                      l3813 1587  
                                    l3645 13A9                                      l6301 0292  
                                    l3815 158A                                      l4519 13C7  
                                    l6223 018F                                      l6207 016E  
                                    l6119 0F76                                      l4711 0637  
                                    l6065 07C5                                      l3921 0742  
                                    l4545 0BB5                                      l4705 0618  
                                    l4713 0600                                      l5531 0EC5  
                                    l5603 1628                                      l3923 0747  
                                    l6219 0185                                      l4547 0BBC  
                                    l4539 1365                                      l4731 0652  
                                    l4715 0639                                      l5533 0EC6  
                                    l3941 076D                                      l6085 1408  
                                    l4549 0BC0                                      l6501 0960  
                                    l6181 1534                                      l6149 0049  
                                    l4741 0667                                      l6413 00D0  
                                    l6405 00BA                                      l6095 1562  
                                    l5615 163F                                      l4479 14A6  
                                    l6271 0240                                      l6343 144C  
                                    l3863 0337                                      l4751 067B  
                                    l5529 0EC2                                      l5721 0E0D  
                                    l6097 1573                                      l3937 0765  
                                    l6281 0255                                      l6513 098B  
                                    l6169 1509                                      l4737 0665  
                                    l4729 063F                                      l5555 0EEE  
                                    l5491 0E5B                                      l5731 0E23  
                                    l5651 0D7C                                      l3947 0771  
                                    l5803 0794                                      l6291 0269  
                                    l5627 1650                                      l5635 1663  
                                    l6611 0B0B                                      l6531 09E7  
                                    l6507 0971                                      l6443 087F  
                                    l6363 1466                                      l4595 03F6  
                                    l4763 06A5                                      l6427 0146  
                                    l5549 0EE0                                      l5557 0E76  
                                    l5493 0E5C                                      l5581 0F29  
                                    l5653 0D7D                                      l3949 077B  
                                    l5821 02B8                                      l6277 0253  
                                    l6605 0B02                                      l6525 09CA  
                                    l4757 068F                                      l5559 0EF0  
                                    l5727 0E21                                      l6295 027D  
                                    l5831 15D2                                      l6623 0B29  
                                    l6551 0A46                                      l6519 09AA  
                                    l6471 0906                                      l6447 088B  
                                    l6439 0875                                      l4599 03F9  
                                    l4687 05E4                                      l4679 05DC  
                                    l5489 0E58                                      l5729 0DA0  
                                    l5649 0D79                                      l5753 13F3  
                                    l5745 1412                                      l5817 02B0  
                                    l5841 15EA                                      l6617 0B19  
                                    l6545 0A2E                                      l6481 0926  
                                    l6641 0B41                                      l6377 146D  
                                    l4769 06AE                                      l5931 0C23  
                                    l5587 0F82                                      l5755 13FF  
                                    l5747 1431                                      l5739 140E  
                                    l6571 0AAB                                      l6563 0A75  
                                    l6539 0A12                                      l6475 0916  
                                    l6467 08FD                                      l6459 08DC  
                                    l6395 0090                                      ?_isr 0076  
                                    l5933 0C69                                      l5925 0C59  
                                    l5781 0833                                      l6629 0B36  
                                    l6581 0AC5                                      l6557 0A68  
                                    l6717 17A5                                      l5695 0DE6  
                                    l5871 0C05                                      l6591 0ADF  
                                    l6495 0956                                      l3999 0453  
                                    l6743 17C9                                      l6647 1724  
                                    l5697 0DE9                                      l5945 0C96  
                                    l5777 081D                                      l5793 084E  
                                    l6489 093C                                      l5699 0DEA  
                                    l5947 0C99                                      l5867 0C01  
                                    l5779 082D                                      l5795 085E  
                                    l5949 0C9A                                      l5869 0C04  
                                    l5991 0CFE                                      l5799 078C  
                                    l6599 0AFA                                      l6759 17F5  
                                    l5993 0D01                                      l6785 0B4A  
                                    l5995 0D02                                      _BETA 1034  
                                    STR_1 103C                              __CFG_WDTE$ON 0000  
                                    STR_2 1043                                      STR_3 1042  
                                    STR_4 1047                                      STR_5 1042  
                                    STR_6 1047                                      STR_7 1042  
                                    STR_8 1044                                      _CREN 00C4  
                                    u2173 0F46                                      u2275 13B1  
                                    u2720 0491                                      u2730 0492  
                                    u4403 0E56                                      u2555 0750  
                                    u3355 14B2                                      u2483 0349  
                                    u2715 0485                                      u4413 0E95  
                                    u5205 14D6                                      u3615 0626  
                                    u4433 0EC0                                      u3385 13D0  
                                    u2833 04E7                                      u4450 0F26  
                                    u3715 0684                                      u4445 0E83  
                                    u3725 069A                                      u5175 0272  
                                    u4535 1656                                      u4393 0E47  
                                    u4553 0D68                                      u5185 0288  
                                    u5507 0E2F                                      u4563 0D77  
                                    u4803 0C94                                      _RCEN 048B  
                                    u5517 0F4F                                      u4573 0DB4  
                                    u4813 0CCD                                      u4733 0BF0  
                                    u5437 172C                                      u4743 0BFF  
                                    u4495 1631                                      u5447 0351  
                                    u4593 0DE4                                      u4833 0CFC  
                                    u4753 0C39                                      u5457 13B9  
                                    u5467 155A                                      u5477 15AB  
                                    u4863 06E0                                      u5487 07F1  
                                    u5497 0D50                                      u4793 0C85  
                                    u4945 151C                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0033  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 0F68                                      _main 1724  
                                    _hora 00DA                                      _itoa 0F68  
       __size_of_EEPROM_24C1025_Write_Int 0016                                      btemp 007E  
                                    _utoa 15CD         __size_of_EEPROM_24C1025_Write_Str 0094  
               ?_EEPROM_24C1025_Write_Int 0036                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 002A               __size_of_EEPROM_Read_String 0013  
                                    start 0012                          __end_of_ADC_init 1363  
                        _BALANCE_RESISTOR 1038                           ___fldiv@new_exp 003F  
      EEPROM_24C1025_Read_Buffer@sizedata 002E                                     ??_isr 0076  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0076                          ?_I2C_Master_Stop 0076  
                          ?_USART_put_int 002A                             ___fltol@sign1 0028  
                         __end_of___fladd 0586                                     ?_main 0076  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 06B2                                     ?_itoa 002F  
                                   _EEADR 010D                           __end_of___flmul 02AA  
                         __end_of___flsub 0417                           __end_of___fltol 078A  
                                   _ANSEL 0188                           __end_of___lldiv 153D  
                                   ?_utoa 0027                                     _T1CON 0010  
                         __end_of___lwdiv 1644                           __end_of___lwmod 1668  
                                   i1l631 16A9                                     i1l627 168D  
                                   i1l645 1719                                     i1l629 169C  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0033                           __end_of_captura 03E3  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0034                 EEPROM_Read_Integer@result 0028  
                                   _canal 006A              __size_of_EEPROM_Read_Integer 001A  
                                   _count 0063             ??_EEPROM_24C1025_Write_Buffer 0030  
      __size_of_EEPROM_24C1025_Write_Byte 0010                                     _texto 01DA  
              ?_EEPROM_24C1025_Write_Byte 0036                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
         EEPROM_24C1025_Read_Byte@mem_add 0036                              __end_of_BETA 1038  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0010                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 0033  
                             ?_USART_putc 0076                              __end_of_main 1800  
                            __end_of_itoa 0F82                              __end_of_utoa 161A  
                          Send_To_MB@size 0021                          _USART_put_buffer 13C3  
                __end_of_EEPROM_Read_Byte 07FA                                    ??_main 005E  
                                  ??_itoa 0033                          __end_of_Save_Log 0725  
                                  ??_utoa 002B                          _USART_put_string 140E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003A                         ?_I2C_Master_Start 0076  
               EEPROM_Write_Byte@last_GIE 0024                         ?_I2C_Master_Write 0020  
                      ??_I2C_Master_Start 0020                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0022                 PROCULUS_Show_Screen@vetor 0033  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0B98                     EEPROM_Write_Integer@i 002B  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1000  
              mediaLeituraPt100Umidadde@i 0059                                    i1l5421 16F5  
                                  i1l5405 16CC                                    i1l5423 16F9  
                                  i1l5425 16D7                                    i1l5361 1675  
                                  i1l5427 1700                                    i1l5381 16AA  
                                  i1l5365 1682                                    i1l5375 169D  
                                  i1l5369 1690                                    u434_25 16ED  
       __end_of_EEPROM_24C1025_Write_Byte 0FA1                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 003F                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 0042                          __end_of___xxtofl 0333  
                      PROCULUS_VP_Write@i 0032                  __end_of_Decodify_Command 0B98  
                ?_EEPROM_24C1025_Read_Int 0036                  ?_EEPROM_24C1025_Read_Str 002A  
                _I2C_Master_RepeatedStart 0F65                ?_mediaLeituraPt100Umidadde 0076  
    __size_of_EEPROM_24C1025_Write_Buffer 00CA                                 ??___fladd 003F  
                                  ___wmul 078A                                 ??___fldiv 0036  
                               ??___flmul 0030                                 ??___flsub 0053  
                               ??___fltol 0024                           ??_USART_put_int 002C  
                               ??___lldiv 0028                                    _header 0065  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 01BA                         _USART_to_Protocol 1474  
                         USART_putc@value 0020         EEPROM_24C1025_Read_Buffer@cnt_103 0032  
                                  _minuto 00D9                                 ??_captura 0022  
                      ?_USART_to_Protocol 0076              Decodify_Command@add_24LCxxxx 00C9  
                                  _strcat 0BB3                                    _strcpy 1363  
                                  _strlen 13EF         EEPROM_24C1025_Read_Buffer@mem_add 002A  
        __end_of_EEPROM_24C1025_Read_Byte 138F                        __size_of__Umul8_16 001B  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 003B  
                               ?_ADC_init 0076            mediaLeituraPt100Umidadde@canal 0058  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                     __size_of_USART_putc 000E                              ___xxtofl@arg 002A  
                            ___xxtofl@exp 0029                              ___xxtofl@val 0020  
                        __end_oflog@coeff 1034                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 002D                                ___fltol@f1 0020  
                            _Board_Number 0069                  __end_of_ADC_Media_10bits 007C  
                          __pcstackCOMMON 0076                  __size_of_PROCULUS_Buzzer 0016  
               __end_of_USART_to_Protocol 14C8                     USART_put_string@vetor 0021  
                              __end_ofPL2 0379                                __end_ofPL4 0382  
                              __end_ofPL6 0393                                __end_ofPL8 03A2  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0023  
                __size_of_my_delay_ms_WDT 002D                            _OPTION_REGbits 0081  
                __end_of_BALANCE_RESISTOR 103C          __end_of_EEPROM_24C1025_Write_Int 073B  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 0C75                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0025                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1577  
         __end_of_EEPROM_24C1025_Fill_All 06E3                               ?_Send_To_MB 0076  
                  __size_of_Send_Reply_OK 0006                                __pbssBANK0 0063  
                              __pbssBANK1 00CD                                __pbssBANK3 0190  
         __end_of_EEPROM_24C1025_Read_Int 13A9           __end_of_EEPROM_24C1025_Read_Str 0D56  
                ?_Package_Usart_is_for_me 0076                                 ?_Save_Log 003F  
                          _PROCULUS_Delay 13A9                         __end_of__Umul8_16 02C5  
                              __pmaintext 1724                       Save_Log@add_datalog 003F  
                     _EEPROM_Read_Integer 07C0                                   ?___wmul 002A  
              PROCULUS_Show_Screen@screen 0031                                __pintentry 0004  
                    _PROCULUS_Show_Screen 0FF6                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                               ?___xxtofl 0020                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00BE               EEPROM_24C1025_Read_Int@data 003B  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 13EF  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 1378                                __stringtab 1000  
                     PROCULUS_VP_Write@vp 002D               ??_EEPROM_24C1025_Write_Byte 003B  
                __end_of_USART_put_buffer 13DF                __end_of_EEPROM_Read_String 07C0  
                  __end_of_PROCULUS_Delay 13C3                  __end_of_USART_put_string 143B  
                    __size_of_my_delay_ms 002C                                ??_Save_Log 0043  
                         PROCULUS_Delay@i 0024                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 0033                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 0054               PROCULUS_Buzzer@time_ms_x_10 0031  
                                 ___fladd 0417                                   ___fldiv 0594  
                EEPROM_Write_Integer@addr 0029                                   ___flmul 0156  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 03FB  
                                 ___fltol 073B                                   ___lldiv 14F5  
                         __size_of___wmul 0019                                   ___lwdiv 161A  
                                 ___lwmod 1644                             _Send_Reply_OK 1408  
                     __size_of_Send_To_MB 001B                     ?_PROCULUS_Show_Screen 0031  
                                 _captura 03D6                                   __ptext1 007C  
                                 __ptext2 03FB                                   __ptext3 0417  
                                 __ptext4 0594                                   __ptext5 03E3  
                                 __ptext6 0037                                   __ptext7 0333  
                                 __ptext8 03D6                                   __ptext9 02C5  
                       ??_PROCULUS_Buzzer 0033                                   _destino 0068  
                       ?_EEPROM_Read_Byte 0076                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0019  
                            __size_of_isr 00BC                                ??___xxtofl 0024  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 00DB  
                __size_of_I2C_Master_Init 002D                  __size_of_I2C_Master_Read 0022  
                          _usart_protocol 00DC                     ??_EEPROM_Read_Integer 0026  
                __size_of_I2C_Master_Wait 0008                  __size_of_I2C_Master_Stop 0003  
           EEPROM_24C1025_Write_Int@local 003D                                   _pointer 0067  
           EEPROM_24C1025_Write_Byte@data 003A                                   clrloop0 0802  
                      __end_of_USART_init 1474           __end_of_Package_Usart_is_for_me 03FB  
                      __end_of_USART_putc 0BE1                         ADC_Media_10bits@i 0036  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 0725  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 0BE1  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0035                 __size_of_I2C_Master_Start 0006  
               __size_of_I2C_Master_Write 0006                         ?_Decodify_Command 0076  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002C  
                      ??_Decodify_Command 0046                                 _RCSTAbits 0018  
             ??_mediaLeituraPt100Umidadde 0053                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0076  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 0F91  
                                 utoa@val 0027           mediaLeituraPt100Umidadde@tensao 0054  
        __size_of_EEPROM_24C1025_Fill_All 0031                                   strlen@s 0020  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 0074              ??_EEPROM_24C1025_Read_Buffer 0031  
           EEPROM_24C1025_Write_Str@range 0030                               ___fladd@grs 004A  
        __size_of_EEPROM_24C1025_Read_Int 001A          __size_of_EEPROM_24C1025_Read_Str 00E1  
                           ___xxtofl@sign 0028       __end_of_EEPROM_24C1025_Write_Buffer 0EFF  
             _EEPROM_24C1025_Write_Buffer 0E35                               ___fldiv@grs 0041  
                             ___fldiv@rem 003A      PROCULUS_Control_Register_Write@vetor 002F  
        EEPROM_24C1025_Write_Buffer@count 0032           EEPROM_24C1025_Write_Int@mem_add 0036  
        EEPROM_24C1025_Write_Buffer@range 0034                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00C1                     PROCULUS_VP_Write@size 0030  
         EEPROM_24C1025_Read_Str@chip_add 0031                               ___flmul@grs 0037  
                _PROCULUS_VP_Write_String 13DF                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00DF                         ?_ADC_Media_10bits 002E  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0033  
                      ??_ADC_Media_10bits 0032                            __end_of___wmul 07A3  
                   __end_of_USART_put_int 0F91                               _BAUDCTLbits 0187  
                          __end_of_strcat 0BD3                            __end_of_strcpy 1378  
                          __end_of_strlen 1408                               __end_ofPL10 03B0  
                             __end_ofPL20 0FBC                               __end_ofPL12 0FA8  
                             __end_ofPL30 0FD2                               __end_ofPL22 0FC5  
                             __end_ofPL14 03B9                               __end_ofPL40 0FE4  
                             __end_ofPL32 0FD8                               __end_ofPL24 03C2  
                             __end_ofPL16 0FB2                               __end_ofPL50 0594  
                             __end_ofPL42 0FEA                               __end_ofPL34 03C9  
                             __end_ofPL26 058F                               __end_ofPL18 07AD  
                             __end_ofPL52 15B7                               __end_ofPL44 0FF0  
                             __end_ofPL36 03D0                               __end_ofPL28 0FCB  
                             __end_ofPL46 0FF6                               __end_ofPL38 0FDF  
                             __end_ofPL48 03D6                       start_initialization 0015  
               _mediaLeituraPt100Umidadde 007C                               __end_of_isr 1724  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                       ??_I2C_Master_Init 0031                         ??_I2C_Master_Read 0022  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0020  
            __end_of_EEPROM_Write_Integer 1560          EEPROM_24C1025_Write_Int@chip_add 003C  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00C0  
                   USART_put_buffer@vetor 0027                           ??_Send_Reply_OK 0025  
                       __size_of_Save_Log 0042                                  ??___wmul 002E  
                               __Umul8_16 02AA             mediaLeituraPt100Umidadde@Temp 005A  
                      __end_of_Send_To_MB 0BB3          __size_of_Package_Usart_is_for_me 0018  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 003A  
      EEPROM_24C1025_Write_Buffer@mem_add 002A                                 ___fladd@a 003B  
                               ___fladd@b 0037          EEPROM_24C1025_Write_Byte@mem_add 0036  
                               ___fldiv@a 002E                                 ___fldiv@b 0032  
                               ___flmul@a 002C                                 ___flmul@b 0028  
                             __pbssCOMMON 0070                                 ___flsub@a 004B  
                               ___flsub@b 004F                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                       _PROCULUS_VP_Write 0833                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 002D                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0017  
                        _I2C_Master_Start 0F05                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0EFF                       ??_PROCULUS_VP_Write 0031  
                          _tempodecorrido 00D5                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 15B7                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 0037                                  ?___fldiv 002E  
                 _EEPROM_24C1025_Fill_All 06B2                                  ?___flmul 0028  
                                ?___flsub 004B                                  ?___fltol 0020  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 07AD                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 0E35  
              _EEPROM_24C1025_Read_Buffer 0D56                                  ?_captura 0020  
                               __pstrings 1000                           _my_delay_ms_WDT 0F30  
                 _EEPROM_24C1025_Read_Int 138F                   _EEPROM_24C1025_Read_Str 0C75  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 003C  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 0864                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 1358                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0035  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0020  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                          ___wmul@product 002E                      ??_EEPROM_Read_String 0024  
                               clear_ram0 0801                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0030  
                  Decodify_Command@OutPut 00C3                           _Delay_Led_Usart 0070  
            EEPROM_24C1025_Read_Byte@data 003B               __end_of_EEPROM_Read_Integer 07DA  
                              _ADCON0bits 001F                               __stringbase 100F  
                              _ADCON1bits 009F                         ___wmul@multiplier 002A  
               __size_of_Decodify_Command 0334                      _EEPROM_Write_Integer 153D  
          EEPROM_24C1025_Read_Int@mem_add 0036                                 main@reset 0061  
              ??_PROCULUS_VP_Write_String 0036                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 15CD        __size_of_mediaLeituraPt100Umidadde 00DA  
                          _generic_status 006B                                _EECON1bits 018C  
                                _Save_Log 06E3                 ??_EEPROM_24C1025_Fill_All 0041  
                     __end_of_my_delay_ms 035F              EEPROM_24C1025_Read_Str@range 0032  
            EEPROM_24C1025_Read_Str@texto 002E                                  _Umidade1 00CD  
                 __end_of_my_delay_ms_WDT 0F5D                              my_delay_ms@i 0026  
                             ??__Umul8_16 0023         __size_of_I2C_Master_RepeatedStart 0003  
                        __size_of___fladd 016F                 ??_EEPROM_24C1025_Read_Int 003A  
                 _Package_Usart_is_for_me 03E3                          __size_of___fldiv 011E  
               ??_EEPROM_24C1025_Read_Str 002F                          __size_of___flmul 0154  
               ?_I2C_Master_RepeatedStart 0076                          __size_of___flsub 001C  
                        __size_of___fltol 004F                          __size_of___lldiv 0048  
                        __size_of___lwdiv 002A                          __size_of___lwmod 0024  
                      __end_of__stringtab 1010       EEPROM_24C1025_Write_Buffer@chip_add 0033  
                     USART_put_string@ptr 0023                          __size_of_captura 000D  
                   ?_EEPROM_Write_Integer 0025                              _Temperatura0 00D1  
                         _I2C_Master_Init 14C8                           _I2C_Master_Read 0F0E  
                                ___xxtofl 02C5                __size_of_PROCULUS_VP_Write 0031  
                         _I2C_Master_Wait 0F5D                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 003A                           _I2C_Master_Stop 0F0B  
               __size_of_ADC_Media_10bits 0045                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0024                                  __ptext10 143B  
                                __ptext11 14C8                                  __ptext20 02AA  
                                __ptext12 14F5                                  __ptext21 1474  
                                __ptext13 0864                                  __ptext30 13EF  
                                __ptext22 13C3                                  __ptext14 1363  
                                __ptext31 0833                                  __ptext23 0B98  
                                __ptext15 0BB3                                  __ptext40 153D  
                                __ptext32 0FF6                                  __ptext24 1408  
                                __ptext16 0F68                                  __ptext41 1577  
                                __ptext33 15B7                                  __ptext25 140E  
                                __ptext17 15CD                                  __ptext50 0D56  
                                __ptext42 07AD                                  __ptext34 161A  
                                __ptext26 06E3                                  __ptext18 1644  
                                __ptext51 0F65                                  __ptext43 07C0  
                                __ptext35 0809                                  __ptext27 078A  
                                __ptext19 0156                                  __ptext60 0F5D  
                                __ptext52 0F0E                                  __ptext44 07DA  
                                __ptext36 0F82                                  __ptext28 073B  
                                __ptext61 1358                                  __ptext53 06B2  
                                __ptext45 0BE1                                  __ptext37 0BD3  
                                __ptext29 13DF                                  __ptext62 1668  
                                __ptext54 0725                                  __ptext46 0F91  
                                __ptext38 13A9                                  __ptext55 0E35  
                                __ptext47 0C75                                  __ptext39 1560  
                                __ptext56 0F30                                  __ptext48 138F  
                                __ptext57 0EFF                                  __ptext49 1378  
                                __ptext58 0F0B                                  __ptext59 0F05  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 002A  
                              strcpy@from 0020                             __size_of_main 00DC  
                           __size_of_itoa 001A                             __size_of_utoa 004D  
            EEPROM_24C1025_Fill_All@value 003F                PROCULUS_VP_Write_String@vp 0033  
     EEPROM_24C1025_Write_Buffer@sizedata 002E                               _milisegundo 00D7  
       __end_of_mediaLeituraPt100Umidadde 0156                            _Delay_Led_Tmr0 0072  
           __size_of_PROCULUS_Show_Screen 000A                       _EEPROM_Write_String 1560  
                                log@coeff 1010                  __end_of_I2C_Master_Start 0F0B  
                __end_of_I2C_Master_Write 0F05                                _INTCONbits 000B  
                                isr@tempo 007A                                  itoa@base 0031  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0024  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0031  
                       USART_put_int@dado 002C                          _EEPROM_Read_Byte 07DA  
                             _my_delay_ms 0333                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 000F              EEPROM_24C1025_Write_Int@data 003A  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0026  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
                               stringcode 100A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 140E                   __end_of_I2C_Master_Init 14F5  
                 __end_of_I2C_Master_Read 0F30                   __end_of_I2C_Master_Wait 0F65  
                 __end_of_I2C_Master_Stop 0F0E              EEPROM_24C1025_Write_Str@data 002E  
            EEPROM_24C1025_Write_Str@ctrl 0031                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 002A           EEPROM_24C1025_Fill_All@chip_add 0041  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0864                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002D  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0022                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 100A  
                                stringtab 1000                         _EEPROM_Write_Byte 1577  
          EEPROM_24C1025_Read_Str@mem_add 002A                             ___fladd@signs 0047  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                            ___fladd@aexp 0048                              ___fladd@bexp 0049  
       __size_of_EEPROM_24C1025_Read_Byte 0017                 ?_EEPROM_24C1025_Read_Byte 0036  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0023  
                              _USART_init 143B  
