

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 12:23:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1000                     __pstrings:	
  1178  1000                     stringtab:	
  1179  1000                     __stringtab:	
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1000  1BFF               	btfsc	btemp+1,7
  1183  1001  280A               	ljmp	stringcode
  1184  1002  1383               	bcf	3,7
  1185  1003  187F               	btfsc	btemp+1,0
  1186  1004  1783               	bsf	3,7
  1187  1005  0800               	movf	0,w
  1188  1006  0A84               	incf	4,f
  1189  1007  1903               	skipnz
  1190  1008  0AFF               	incf	btemp+1,f
  1191  1009  0008               	return
  1192  100A                     stringcode:	
  1193  100A                     stringdir:	
  1194  100A  3010               	movlw	high stringdir
  1195  100B  008A               	movwf	10
  1196  100C  0804               	movf	4,w
  1197  100D  0A84               	incf	4,f
  1198  100E  0782               	addwf	2,f
  1199  100F                     __stringbase:	
  1200  100F  3400               	retlw	0
  1201  1010                     __end_of__stringtab:	
  1202  1010                     _PT100_TRANSLADA:	
  1203  1010  3466               	retlw	102
  1204  1011  3466               	retlw	102
  1205  1012  34A6               	retlw	166
  1206  1013  34BF               	retlw	191
  1207  1014                     __end_of_PT100_TRANSLADA:	
  1208  1014                     _PT100_CONSTANT:	
  1209  1014  3414               	retlw	20
  1210  1015  34AE               	retlw	174
  1211  1016  342B               	retlw	43
  1212  1017  34C1               	retlw	193
  1213  1018                     __end_of_PT100_CONSTANT:	
  1214  1018                     _RESISTOR_ROOM_TEMP:	
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1018  3400               	retlw	0
  1218  1019  3440               	retlw	64
  1219  101A  341C               	retlw	28
  1220  101B  3446               	retlw	70
  1221  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1222  101C                     _ROOM_TEMP:	
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  101C  3466               	retlw	102
  1226  101D  3486               	retlw	134
  1227  101E  3496               	retlw	150
  1228  101F  3443               	retlw	67
  1229  1020                     __end_of_ROOM_TEMP:	
  1230  1020                     _MAX_ADC:	
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1020  3400               	retlw	0
  1234  1021  34C0               	retlw	192
  1235  1022  347F               	retlw	127
  1236  1023  3444               	retlw	68
  1237  1024                     __end_of_MAX_ADC:	
  1238  1024                     log@coeff:	
  1239  1024  3400               	retlw	0
  1240  1025  3400               	retlw	0
  1241  1026  3400               	retlw	0
  1242  1027  3400               	retlw	0
  1243  1028  34C4               	retlw	196
  1244  1029  34FF               	retlw	255
  1245  102A  347F               	retlw	127
  1246  102B  343F               	retlw	63
  1247  102C  3480               	retlw	128
  1248  102D  34EF               	retlw	239
  1249  102E  34FF               	retlw	255
  1250  102F  34BE               	retlw	190
  1251  1030  3490               	retlw	144
  1252  1031  34E1               	retlw	225
  1253  1032  34A9               	retlw	169
  1254  1033  343E               	retlw	62
  1255  1034  34EC               	retlw	236
  1256  1035  3482               	retlw	130
  1257  1036  3476               	retlw	118
  1258  1037  34BE               	retlw	190
  1259  1038  3482               	retlw	130
  1260  1039  34AD               	retlw	173
  1261  103A  342B               	retlw	43
  1262  103B  343E               	retlw	62
  1263  103C  340E               	retlw	14
  1264  103D  343C               	retlw	60
  1265  103E  34C3               	retlw	195
  1266  103F  34BD               	retlw	189
  1267  1040  3487               	retlw	135
  1268  1041  34D1               	retlw	209
  1269  1042  3413               	retlw	19
  1270  1043  343D               	retlw	61
  1271  1044  3441               	retlw	65
  1272  1045  3478               	retlw	120
  1273  1046  34D3               	retlw	211
  1274  1047  34BB               	retlw	187
  1275  1048                     __end_oflog@coeff:	
  1276  1048                     _BETA:	
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1048  3400               	retlw	0
  1280  1049  3460               	retlw	96
  1281  104A  3478               	retlw	120
  1282  104B  3445               	retlw	69
  1283  104C                     __end_of_BETA:	
  1284  104C                     _BALANCE_RESISTOR:	
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  104C  3400               	retlw	0
  1288  104D  3440               	retlw	64
  1289  104E  341C               	retlw	28
  1290  104F  3446               	retlw	70
  1291  1050                     __end_of_BALANCE_RESISTOR:	
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1050                     STR_1:	
  1345  1050  3476               	retlw	118	;'v'
  1346  1051  3431               	retlw	49	;'1'
  1347  1052  342E               	retlw	46	;'.'
  1348  1053  3430               	retlw	48	;'0'
  1349  1054  342E               	retlw	46	;'.'
  1350  1055  3431               	retlw	49	;'1'
  1351  1056  3434               	retlw	52	;'4'
  1352  1057  3400               	retlw	0
  1353  1058                     STR_2:	
  1354  1058  344F               	retlw	79	;'O'
  1355  1059  344B               	retlw	75	;'K'
  1356  105A  3400               	retlw	0
  1357                           
  1358                           ; #config settings
  1359  0000                     
  1360                           	psect	cinit
  1361  0015                     start_initialization:	
  1362  0015                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30A0               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30DD               	movlw	low (__pbssBANK1+61)
  1377  001F  160A  158A  2257  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30CA               	movlw	low (__pbssBANK3+58)
  1384  0028  160A  158A  2257  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  2257   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:	
  1395  0033  0183               	clrf	3
  1396  0034  120A  118A  2EC9   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:	
  1400  0078                     _Delay_Led_Tmr0:	
  1401  0078                     	ds	2
  1402  007A                     _minuto:	
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:	
  1405  007B                     	ds	1
  1406  007C                     _hora:	
  1407  007C                     	ds	1
  1408  007D                     _segundo:	
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00A0                     __pbssBANK1:	
  1413  00A0                     _Tensao1:	
  1414  00A0                     	ds	4
  1415  00A4                     _Vaccum0:	
  1416  00A4                     	ds	4
  1417  00A8                     _errno:	
  1418  00A8                     	ds	2
  1419  00AA                     _tempodecorrido:	
  1420  00AA                     	ds	2
  1421  00AC                     _count:	
  1422  00AC                     	ds	2
  1423  00AE                     _header:	
  1424  00AE                     	ds	2
  1425  00B0                     _milisegundo:	
  1426  00B0                     	ds	2
  1427  00B2                     _Delay_Led_Usart:	
  1428  00B2                     	ds	2
  1429  00B4                     _Delay_Led_Memory:	
  1430  00B4                     	ds	2
  1431  00B6                     _pointer:	
  1432  00B6                     	ds	1
  1433  00B7                     _destino:	
  1434  00B7                     	ds	1
  1435  00B8                     _Board_Number:	
  1436  00B8                     	ds	1
  1437  00B9                     _canal:	
  1438  00B9                     	ds	1
  1439  00BA                     _statuspower:	
  1440  00BA                     	ds	1
  1441  00BB                     _generic_status:	
  1442  00BB                     	ds	1
  1443  00BC                     _buffer:	
  1444  00BC                     	ds	33
  1445                           
  1446                           	psect	bssBANK3
  1447  0190                     __pbssBANK3:	
  1448  0190                     _usart_protocol:	
  1449  0190                     	ds	58
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:	
  1453  0110                     _usart_buffer:	
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  1A57                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  1A57  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  1A58                     clrloop0:	
  1463  1A58  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  1A59  0A84               	incf	4,f	;increment pointer
  1465  1A5A  0604               	xorwf	4,w	;XOR with final address
  1466  1A5B  1903               	btfsc	3,2	;have we reached the end yet?
  1467  1A5C  3400               	retlw	0	;all done for this memory range, return
  1468  1A5D  0604               	xorwf	4,w	;XOR again to restore value
  1469  1A5E  2A58               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00DD                     __pcstackBANK1:	
  1473  00DD                     Decodify_Command@dados:	
  1474  00DD                     MediaPlacaVaccum@Valor:	
  1475                           ; 2 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x0
  1479  00DD                     	ds	2
  1480  00DF                     Decodify_Command@add:	
  1481                           
  1482                           ; 1 bytes @ 0x2
  1483  00DF                     	ds	1
  1484  00E0                     Decodify_Command@sizedata:	
  1485                           
  1486                           ; 1 bytes @ 0x3
  1487  00E0                     	ds	1
  1488  00E1                     MediaPlacaVaccum@canal:	
  1489  00E1                     Decodify_Command@tempint:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0x4
  1494  00E1                     	ds	1
  1495  00E2                     MediaPlacaVaccum@Temp:	
  1496                           
  1497                           ; 4 bytes @ 0x5
  1498  00E2                     	ds	1
  1499  00E3                     Decodify_Command@OutPut:	
  1500                           
  1501                           ; 4 bytes @ 0x6
  1502  00E3                     	ds	3
  1503  00E6                     MediaPlacaVaccum@i:	
  1504                           
  1505                           ; 2 bytes @ 0x9
  1506  00E6                     	ds	1
  1507  00E7                     Decodify_Command@tempchar:	
  1508                           
  1509                           ; 1 bytes @ 0xA
  1510  00E7                     	ds	1
  1511  00E8                     Decodify_Command@add_24LCxxxx:	
  1512                           
  1513                           ; 4 bytes @ 0xB
  1514  00E8                     	ds	4
  1515                           
  1516                           	psect	cstackCOMMON
  1517  0070                     __pcstackCOMMON:	
  1518  0070                     ?_I2C_Master_Start:	
  1519  0070                     ?_I2C_Master_Stop:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_I2C_Master_RepeatedStart:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_ADC_init:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_MediaPlacaVaccum:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_Decodify_Command:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_USART_to_Protocol:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_Send_To_MB:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_Send_Reply_OK:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_EEPROM_Read_Byte:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_USART_putc:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_Package_Usart_is_for_me:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_I2C_Master_Wait:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_main:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_isr:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ??_isr:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564                           
  1565                           ; 1 bytes @ 0x0
  1566  0070                     	ds	6
  1567  0076                     isr@tempo:	
  1568                           
  1569                           ; 2 bytes @ 0x6
  1570  0076                     	ds	2
  1571                           
  1572                           	psect	cstackBANK0
  1573  0020                     __pcstackBANK0:	
  1574  0020                     ?___flge:	
  1575  0020                     ?_my_delay_ms_WDT:	
  1576                           ; 1 bit 
  1577                           
  1578  0020                     ??_ADC_init:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ?_USART_init:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     ??_USART_to_Protocol:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     ?_strcpy:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     ?_EEPROM_Write_Byte:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     ??_EEPROM_Read_Byte:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     ??_USART_putc:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0020                     ?_my_delay_ms:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0020                     ??_Package_Usart_is_for_me:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     ?_PROCULUS_Delay:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     ??_I2C_Master_Wait:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0020                     ?_strlen:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0020                     ?_captura:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     ?__Umul8_16:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     ?___lwdiv:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     ?___lldiv:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0020                     EEPROM_Write_Byte@dado:	
  1627                           ; 4 bytes @ 0x0
  1628                           
  1629  0020                     Package_Usart_is_for_me@retorno:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0020                     USART_putc@value:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0020                     strcpy@from:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0020                     __Umul8_16@multiplicand:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0020                     PROCULUS_Delay@tempo_ms:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0020                     ___lwdiv@divisor:	
  1645                           ; 2 bytes @ 0x0
  1646                           
  1647  0020                     strlen@s:	
  1648                           ; 2 bytes @ 0x0
  1649                           
  1650  0020                     my_delay_ms@time:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653  0020                     my_delay_ms_WDT@time:	
  1654                           ; 4 bytes @ 0x0
  1655                           
  1656  0020                     USART_init@baudrate:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659  0020                     ___lldiv@divisor:	
  1660                           ; 4 bytes @ 0x0
  1661                           
  1662  0020                     ___flge@ff1:	
  1663                           ; 4 bytes @ 0x0
  1664                           
  1665                           
  1666                           ; 4 bytes @ 0x0
  1667  0020                     	ds	1
  1668  0021                     ??_strcpy:	
  1669  0021                     ??_Send_To_MB:	
  1670                           ; 1 bytes @ 0x1
  1671                           
  1672  0021                     ?_USART_put_string:	
  1673                           ; 1 bytes @ 0x1
  1674                           
  1675  0021                     ??_EEPROM_Write_Byte:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0021                     ?_USART_put_buffer:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0021                     Send_To_MB@size:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684  0021                     USART_put_buffer@size:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687  0021                     USART_put_string@vetor:	
  1688                           ; 1 bytes @ 0x1
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x1
  1692  0021                     	ds	1
  1693  0022                     ??_USART_put_buffer:	
  1694  0022                     ??_strlen:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     ??_captura:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     ??_PROCULUS_Delay:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     ??__Umul8_16:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     I2C_Master_Wait@tempo:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0022                     EEPROM_Read_Byte@addr:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712  0022                     strcpy@to:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715  0022                     USART_to_Protocol@i:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718  0022                     ___lwdiv@dividend:	
  1719                           ; 2 bytes @ 0x2
  1720                           
  1721  0022                     strlen@cp:	
  1722                           ; 2 bytes @ 0x2
  1723                           
  1724                           
  1725                           ; 2 bytes @ 0x2
  1726  0022                     	ds	1
  1727  0023                     ??_I2C_Master_Start:	
  1728  0023                     ?_I2C_Master_Write:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ??_I2C_Master_Stop:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     ??_I2C_Master_RepeatedStart:	
  1735                           ; 1 bytes @ 0x3
  1736                           
  1737  0023                     ??_USART_put_string:	
  1738                           ; 1 bytes @ 0x3
  1739                           
  1740  0023                     ?_EEPROM_Read_String:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0023                     ?_I2C_Master_Read:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0023                     ?_EEPROM_Read_Integer:	
  1747                           ; 2 bytes @ 0x3
  1748                           
  1749  0023                     EEPROM_Write_Byte@addr:	
  1750                           ; 2 bytes @ 0x3
  1751                           
  1752  0023                     EEPROM_Read_String@dado:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755  0023                     USART_put_buffer@vetor:	
  1756                           ; 1 bytes @ 0x3
  1757                           
  1758  0023                     strcpy@cp:	
  1759                           ; 1 bytes @ 0x3
  1760                           
  1761  0023                     I2C_Master_Write@d:	
  1762                           ; 1 bytes @ 0x3
  1763                           
  1764  0023                     I2C_Master_Read@a:	
  1765                           ; 2 bytes @ 0x3
  1766                           
  1767  0023                     USART_put_string@ptr:	
  1768                           ; 2 bytes @ 0x3
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0x3
  1772  0023                     	ds	1
  1773  0024                     ??_my_delay_ms_WDT:	
  1774  0024                     ??_USART_init:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     ??_EEPROM_Read_String:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     ??_my_delay_ms:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     ??___lwdiv:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786  0024                     EEPROM_Write_Byte@last_GIE:	
  1787                           ; 1 bytes @ 0x4
  1788                           
  1789  0024                     USART_to_Protocol@usart_protocol:	
  1790                           ; 1 bytes @ 0x4
  1791                           
  1792  0024                     USART_put_buffer@loop:	
  1793                           ; 1 bytes @ 0x4
  1794                           
  1795  0024                     PROCULUS_Delay@i:	
  1796                           ; 1 bytes @ 0x4
  1797                           
  1798  0024                     __Umul8_16@product:	
  1799                           ; 2 bytes @ 0x4
  1800                           
  1801  0024                     ___lldiv@dividend:	
  1802                           ; 2 bytes @ 0x4
  1803                           
  1804  0024                     ___flge@ff2:	
  1805                           ; 4 bytes @ 0x4
  1806                           
  1807                           
  1808                           ; 4 bytes @ 0x4
  1809  0024                     	ds	1
  1810  0025                     ??_I2C_Master_Write:	
  1811  0025                     ??_I2C_Master_Read:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     ??_EEPROM_Read_Integer:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     ?_EEPROM_Write_Integer:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     ??_Send_Reply_OK:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823  0025                     ?_EEPROM_Write_String:	
  1824                           ; 1 bytes @ 0x5
  1825                           
  1826  0025                     EEPROM_Write_String@dado:	
  1827                           ; 1 bytes @ 0x5
  1828                           
  1829  0025                     EEPROM_Read_String@addr:	
  1830                           ; 1 bytes @ 0x5
  1831                           
  1832  0025                     USART_put_buffer@ptr:	
  1833                           ; 1 bytes @ 0x5
  1834                           
  1835  0025                     ___lwdiv@counter:	
  1836                           ; 1 bytes @ 0x5
  1837                           
  1838  0025                     EEPROM_Write_Integer@dado:	
  1839                           ; 1 bytes @ 0x5
  1840                           
  1841                           
  1842                           ; 2 bytes @ 0x5
  1843  0025                     	ds	1
  1844  0026                     ??_EEPROM_Write_String:	
  1845  0026                     EEPROM_Read_Integer@addr:	
  1846                           ; 1 bytes @ 0x6
  1847                           
  1848  0026                     EEPROM_Read_String@c:	
  1849                           ; 1 bytes @ 0x6
  1850                           
  1851  0026                     USART_init@i:	
  1852                           ; 1 bytes @ 0x6
  1853                           
  1854  0026                     ___lwdiv@quotient:	
  1855                           ; 1 bytes @ 0x6
  1856                           
  1857  0026                     __Umul8_16@word_mpld:	
  1858                           ; 2 bytes @ 0x6
  1859                           
  1860  0026                     my_delay_ms@i:	
  1861                           ; 2 bytes @ 0x6
  1862                           
  1863  0026                     my_delay_ms_WDT@i:	
  1864                           ; 4 bytes @ 0x6
  1865                           
  1866                           
  1867                           ; 4 bytes @ 0x6
  1868  0026                     	ds	1
  1869  0027                     ??_EEPROM_Write_Integer:	
  1870  0027                     EEPROM_Read_Integer@ptr:	
  1871                           ; 1 bytes @ 0x7
  1872                           
  1873  0027                     EEPROM_Write_String@addr:	
  1874                           ; 1 bytes @ 0x7
  1875                           
  1876  0027                     I2C_Master_Read@temp:	
  1877                           ; 1 bytes @ 0x7
  1878                           
  1879                           
  1880                           ; 2 bytes @ 0x7
  1881  0027                     	ds	1
  1882  0028                     ??___lldiv:	
  1883  0028                     ??___flge:	
  1884                           ; 1 bytes @ 0x8
  1885                           
  1886  0028                     __Umul8_16@multiplier:	
  1887                           ; 1 bytes @ 0x8
  1888                           
  1889  0028                     EEPROM_Read_Integer@result:	
  1890                           ; 1 bytes @ 0x8
  1891                           
  1892                           
  1893                           ; 2 bytes @ 0x8
  1894  0028                     	ds	1
  1895  0029                     ?_EEPROM_24C1025_Read_Str:	
  1896  0029                     ?___flmul:	
  1897                           ; 1 bytes @ 0x9
  1898                           
  1899  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1900                           ; 4 bytes @ 0x9
  1901                           
  1902  0029                     ___lldiv@quotient:	
  1903                           ; 4 bytes @ 0x9
  1904                           
  1905  0029                     ___flmul@b:	
  1906                           ; 4 bytes @ 0x9
  1907                           
  1908                           
  1909                           ; 4 bytes @ 0x9
  1910  0029                     	ds	1
  1911  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1912  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1913                           ; 1 bytes @ 0xA
  1914                           
  1915  002A                     ?_EEPROM_24C1025_Write_Str:	
  1916                           ; 1 bytes @ 0xA
  1917                           
  1918  002A                     ?_ADC_Max_10Bits:	
  1919                           ; 1 bytes @ 0xA
  1920                           
  1921  002A                     EEPROM_Write_Integer@ptr:	
  1922                           ; 2 bytes @ 0xA
  1923                           
  1924  002A                     EEPROM_Read_Integer@i:	
  1925                           ; 1 bytes @ 0xA
  1926                           
  1927  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1928                           ; 1 bytes @ 0xA
  1929                           
  1930  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1931                           ; 4 bytes @ 0xA
  1932                           
  1933  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1934                           ; 4 bytes @ 0xA
  1935                           
  1936                           
  1937                           ; 4 bytes @ 0xA
  1938  002A                     	ds	1
  1939  002B                     EEPROM_Write_Integer@addr:	
  1940                           
  1941                           ; 1 bytes @ 0xB
  1942  002B                     	ds	1
  1943  002C                     ??_ADC_Max_10Bits:	
  1944  002C                     EEPROM_Write_Integer@i:	
  1945                           ; 1 bytes @ 0xC
  1946                           
  1947                           
  1948                           ; 1 bytes @ 0xC
  1949  002C                     	ds	1
  1950  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1951  002D                     ADC_Max_10Bits@canal:	
  1952                           ; 1 bytes @ 0xD
  1953                           
  1954  002D                     ___lldiv@counter:	
  1955                           ; 1 bytes @ 0xD
  1956                           
  1957  002D                     ___flmul@a:	
  1958                           ; 1 bytes @ 0xD
  1959                           
  1960                           
  1961                           ; 4 bytes @ 0xD
  1962  002D                     	ds	1
  1963  002E                     ??_EEPROM_24C1025_Read_Str:	
  1964  002E                     ?_I2C_Master_Init:	
  1965                           ; 1 bytes @ 0xE
  1966                           
  1967  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1968                           ; 1 bytes @ 0xE
  1969                           
  1970  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1971                           ; 1 bytes @ 0xE
  1972                           
  1973  002E                     EEPROM_24C1025_Write_Str@data:	
  1974                           ; 1 bytes @ 0xE
  1975                           
  1976  002E                     ADC_Max_10Bits@Temp:	
  1977                           ; 1 bytes @ 0xE
  1978                           
  1979  002E                     I2C_Master_Init@c:	
  1980                           ; 2 bytes @ 0xE
  1981                           
  1982                           
  1983                           ; 4 bytes @ 0xE
  1984  002E                     	ds	1
  1985  002F                     ??_EEPROM_24C1025_Write_Str:	
  1986  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1987                           ; 1 bytes @ 0xF
  1988                           
  1989  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1990                           ; 1 bytes @ 0xF
  1991                           
  1992                           
  1993                           ; 2 bytes @ 0xF
  1994  002F                     	ds	1
  1995  0030                     ??_EEPROM_24C1025_Read_Buffer:	
  1996  0030                     EEPROM_24C1025_Read_Str@cnt:	
  1997                           ; 1 bytes @ 0x10
  1998                           
  1999  0030                     ADC_Max_10Bits@value:	
  2000                           ; 1 bytes @ 0x10
  2001                           
  2002                           
  2003                           ; 2 bytes @ 0x10
  2004  0030                     	ds	1
  2005  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2006  0031                     ??___flmul:	
  2007                           ; 1 bytes @ 0x11
  2008                           
  2009  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2010                           ; 1 bytes @ 0x11
  2011                           
  2012  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2013                           ; 1 bytes @ 0x11
  2014                           
  2015                           
  2016                           ; 1 bytes @ 0x11
  2017  0031                     	ds	1
  2018  0032                     ??_I2C_Master_Init:	
  2019  0032                     EEPROM_24C1025_Write_Str@range:	
  2020                           ; 1 bytes @ 0x12
  2021                           
  2022  0032                     EEPROM_24C1025_Read_Str@range:	
  2023                           ; 1 bytes @ 0x12
  2024                           
  2025  0032                     ADC_Max_10Bits@i:	
  2026                           ; 1 bytes @ 0x12
  2027                           
  2028                           
  2029                           ; 1 bytes @ 0x12
  2030  0032                     	ds	1
  2031  0033                     ?___xxtofl:	
  2032  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2033                           ; 4 bytes @ 0x13
  2034                           
  2035  0033                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2036                           ; 1 bytes @ 0x13
  2037                           
  2038  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2039                           ; 1 bytes @ 0x13
  2040                           
  2041  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2042                           ; 1 bytes @ 0x13
  2043                           
  2044  0033                     ___xxtofl@val:	
  2045                           ; 1 bytes @ 0x13
  2046                           
  2047                           
  2048                           ; 4 bytes @ 0x13
  2049  0033                     	ds	1
  2050  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2051  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2052                           ; 1 bytes @ 0x14
  2053                           
  2054                           
  2055                           ; 1 bytes @ 0x14
  2056  0034                     	ds	1
  2057  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2058  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2059                           ; 1 bytes @ 0x15
  2060                           
  2061                           
  2062                           ; 1 bytes @ 0x15
  2063  0035                     	ds	1
  2064  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2065  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2066                           ; 1 bytes @ 0x16
  2067                           
  2068  0036                     ___flmul@sign:	
  2069                           ; 1 bytes @ 0x16
  2070                           
  2071                           
  2072                           ; 1 bytes @ 0x16
  2073  0036                     	ds	1
  2074  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2075  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2076                           ; 1 bytes @ 0x17
  2077                           
  2078  0037                     ??___xxtofl:	
  2079                           ; 1 bytes @ 0x17
  2080                           
  2081  0037                     ?_EEPROM_24C1025_Read_Int:	
  2082                           ; 1 bytes @ 0x17
  2083                           
  2084  0037                     ___flmul@aexp:	
  2085                           ; 2 bytes @ 0x17
  2086                           
  2087  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2088                           ; 1 bytes @ 0x17
  2089                           
  2090  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2091                           ; 4 bytes @ 0x17
  2092                           
  2093  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2094                           ; 4 bytes @ 0x17
  2095                           
  2096                           
  2097                           ; 4 bytes @ 0x17
  2098  0037                     	ds	1
  2099  0038                     ___flmul@bexp:	
  2100                           
  2101                           ; 1 bytes @ 0x18
  2102  0038                     	ds	1
  2103  0039                     ___flmul@grs:	
  2104                           
  2105                           ; 4 bytes @ 0x19
  2106  0039                     	ds	2
  2107  003B                     ??_EEPROM_24C1025_Read_Byte:	
  2108  003B                     ??_EEPROM_24C1025_Read_Int:	
  2109                           ; 1 bytes @ 0x1B
  2110                           
  2111  003B                     EEPROM_24C1025_Write_Byte@data:	
  2112                           ; 1 bytes @ 0x1B
  2113                           
  2114  003B                     ___xxtofl@sign:	
  2115                           ; 1 bytes @ 0x1B
  2116                           
  2117                           
  2118                           ; 1 bytes @ 0x1B
  2119  003B                     	ds	1
  2120  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2121  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2122                           ; 1 bytes @ 0x1C
  2123                           
  2124  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2125                           ; 1 bytes @ 0x1C
  2126                           
  2127  003C                     ___xxtofl@exp:	
  2128                           ; 1 bytes @ 0x1C
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x1C
  2132  003C                     	ds	1
  2133  003D                     EEPROM_24C1025_Read_Byte@data:	
  2134  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2135                           ; 1 bytes @ 0x1D
  2136                           
  2137  003D                     ___flmul@prod:	
  2138                           ; 1 bytes @ 0x1D
  2139                           
  2140  003D                     ___xxtofl@arg:	
  2141                           ; 4 bytes @ 0x1D
  2142                           
  2143                           
  2144                           ; 4 bytes @ 0x1D
  2145  003D                     	ds	1
  2146  003E                     EEPROM_24C1025_Read_Int@data:	
  2147                           
  2148                           ; 2 bytes @ 0x1E
  2149  003E                     	ds	3
  2150  0041                     ?_ADC_Media_10bits:	
  2151  0041                     ?___fldiv:	
  2152                           ; 4 bytes @ 0x21
  2153                           
  2154  0041                     ___flmul@temp:	
  2155                           ; 4 bytes @ 0x21
  2156                           
  2157  0041                     ___fldiv@a:	
  2158                           ; 2 bytes @ 0x21
  2159                           
  2160                           
  2161                           ; 4 bytes @ 0x21
  2162  0041                     	ds	2
  2163  0043                     ?___fltol:	
  2164  0043                     ___fltol@f1:	
  2165                           ; 4 bytes @ 0x23
  2166                           
  2167                           
  2168                           ; 4 bytes @ 0x23
  2169  0043                     	ds	2
  2170  0045                     ??_ADC_Media_10bits:	
  2171  0045                     ___fldiv@b:	
  2172                           ; 1 bytes @ 0x25
  2173                           
  2174                           
  2175                           ; 4 bytes @ 0x25
  2176  0045                     	ds	1
  2177  0046                     ADC_Media_10bits@canal:	
  2178                           
  2179                           ; 1 bytes @ 0x26
  2180  0046                     	ds	1
  2181  0047                     ??___fltol:	
  2182  0047                     ADC_Media_10bits@value:	
  2183                           ; 1 bytes @ 0x27
  2184                           
  2185                           
  2186                           ; 2 bytes @ 0x27
  2187  0047                     	ds	2
  2188  0049                     ??___fldiv:	
  2189  0049                     ADC_Media_10bits@i:	
  2190                           ; 1 bytes @ 0x29
  2191                           
  2192                           
  2193                           ; 1 bytes @ 0x29
  2194  0049                     	ds	1
  2195  004A                     ?___fladd:	
  2196  004A                     ___fladd@b:	
  2197                           ; 4 bytes @ 0x2A
  2198                           
  2199                           
  2200                           ; 4 bytes @ 0x2A
  2201  004A                     	ds	2
  2202  004C                     ___fltol@sign1:	
  2203                           
  2204                           ; 1 bytes @ 0x2C
  2205  004C                     	ds	1
  2206  004D                     ___fltol@exp1:	
  2207                           
  2208                           ; 1 bytes @ 0x2D
  2209  004D                     	ds	1
  2210  004E                     ?_USART_put_int:	
  2211  004E                     ?_EEPROM_24C1025_Write_Int:	
  2212                           ; 1 bytes @ 0x2E
  2213                           
  2214  004E                     USART_put_int@value:	
  2215                           ; 1 bytes @ 0x2E
  2216                           
  2217  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2218                           ; 2 bytes @ 0x2E
  2219                           
  2220  004E                     ___fladd@a:	
  2221                           ; 4 bytes @ 0x2E
  2222                           
  2223  004E                     ___fldiv@rem:	
  2224                           ; 4 bytes @ 0x2E
  2225                           
  2226                           
  2227                           ; 4 bytes @ 0x2E
  2228  004E                     	ds	2
  2229  0050                     ??_USART_put_int:	
  2230                           
  2231                           ; 1 bytes @ 0x30
  2232  0050                     	ds	1
  2233  0051                     USART_put_int@dado:	
  2234                           
  2235                           ; 1 bytes @ 0x31
  2236  0051                     	ds	1
  2237  0052                     ?_PROCULUS_Control_Register_Write:	
  2238  0052                     ?_PROCULUS_VP_Write:	
  2239                           ; 1 bytes @ 0x32
  2240                           
  2241  0052                     ??___fladd:	
  2242                           ; 1 bytes @ 0x32
  2243                           
  2244  0052                     PROCULUS_Control_Register_Write@size:	
  2245                           ; 1 bytes @ 0x32
  2246                           
  2247  0052                     ___fldiv@sign:	
  2248                           ; 1 bytes @ 0x32
  2249                           
  2250  0052                     EEPROM_24C1025_Write_Int@data:	
  2251                           ; 1 bytes @ 0x32
  2252                           
  2253  0052                     PROCULUS_VP_Write@vp:	
  2254                           ; 2 bytes @ 0x32
  2255                           
  2256                           
  2257                           ; 2 bytes @ 0x32
  2258  0052                     	ds	1
  2259  0053                     ??_PROCULUS_Control_Register_Write:	
  2260  0053                     ___fldiv@new_exp:	
  2261                           ; 1 bytes @ 0x33
  2262                           
  2263                           
  2264                           ; 2 bytes @ 0x33
  2265  0053                     	ds	1
  2266  0054                     ??_EEPROM_24C1025_Write_Int:	
  2267  0054                     PROCULUS_Control_Register_Write@vetor:	
  2268                           ; 1 bytes @ 0x34
  2269                           
  2270  0054                     PROCULUS_VP_Write@vetor:	
  2271                           ; 1 bytes @ 0x34
  2272                           
  2273                           
  2274                           ; 2 bytes @ 0x34
  2275  0054                     	ds	1
  2276  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2277  0055                     PROCULUS_Control_Register_Write@i:	
  2278                           ; 1 bytes @ 0x35
  2279                           
  2280  0055                     ___fldiv@grs:	
  2281                           ; 1 bytes @ 0x35
  2282                           
  2283                           
  2284                           ; 4 bytes @ 0x35
  2285  0055                     	ds	1
  2286  0056                     ?_PROCULUS_Show_Screen:	
  2287  0056                     ?_PROCULUS_Buzzer:	
  2288                           ; 1 bytes @ 0x36
  2289                           
  2290  0056                     PROCULUS_VP_Write@size:	
  2291                           ; 1 bytes @ 0x36
  2292                           
  2293  0056                     EEPROM_24C1025_Write_Int@local:	
  2294                           ; 1 bytes @ 0x36
  2295                           
  2296  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2297                           ; 2 bytes @ 0x36
  2298                           
  2299  0056                     PROCULUS_Show_Screen@screen:	
  2300                           ; 2 bytes @ 0x36
  2301                           
  2302                           
  2303                           ; 2 bytes @ 0x36
  2304  0056                     	ds	1
  2305  0057                     ??_PROCULUS_VP_Write:	
  2306                           
  2307                           ; 1 bytes @ 0x37
  2308  0057                     	ds	1
  2309  0058                     ?_Save_Log:	
  2310  0058                     ??_PROCULUS_Show_Screen:	
  2311                           ; 1 bytes @ 0x38
  2312                           
  2313  0058                     ??_PROCULUS_Buzzer:	
  2314                           ; 1 bytes @ 0x38
  2315                           
  2316  0058                     ?_EEPROM_24C1025_Fill_All:	
  2317                           ; 1 bytes @ 0x38
  2318                           
  2319  0058                     EEPROM_24C1025_Fill_All@value:	
  2320                           ; 1 bytes @ 0x38
  2321                           
  2322  0058                     Save_Log@add_datalog:	
  2323                           ; 2 bytes @ 0x38
  2324                           
  2325                           
  2326                           ; 4 bytes @ 0x38
  2327  0058                     	ds	1
  2328  0059                     PROCULUS_VP_Write@i:	
  2329  0059                     ___fldiv@bexp:	
  2330                           ; 1 bytes @ 0x39
  2331                           
  2332  0059                     PROCULUS_Buzzer@vetor:	
  2333                           ; 1 bytes @ 0x39
  2334                           
  2335  0059                     PROCULUS_Show_Screen@vetor:	
  2336                           ; 2 bytes @ 0x39
  2337                           
  2338                           
  2339                           ; 3 bytes @ 0x39
  2340  0059                     	ds	1
  2341  005A                     ?_PROCULUS_VP_Write_String:	
  2342  005A                     ??_EEPROM_24C1025_Fill_All:	
  2343                           ; 1 bytes @ 0x3A
  2344                           
  2345  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2346                           ; 1 bytes @ 0x3A
  2347                           
  2348  005A                     ___fladd@signs:	
  2349                           ; 1 bytes @ 0x3A
  2350                           
  2351  005A                     ___fldiv@aexp:	
  2352                           ; 1 bytes @ 0x3A
  2353                           
  2354  005A                     PROCULUS_VP_Write_String@vp:	
  2355                           ; 1 bytes @ 0x3A
  2356                           
  2357                           
  2358                           ; 2 bytes @ 0x3A
  2359  005A                     	ds	1
  2360  005B                     ___fladd@aexp:	
  2361  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2362                           ; 1 bytes @ 0x3B
  2363                           
  2364                           
  2365                           ; 4 bytes @ 0x3B
  2366  005B                     	ds	1
  2367  005C                     ??_Save_Log:	
  2368  005C                     PROCULUS_VP_Write_String@text:	
  2369                           ; 1 bytes @ 0x3C
  2370                           
  2371  005C                     ___fladd@bexp:	
  2372                           ; 1 bytes @ 0x3C
  2373                           
  2374                           
  2375                           ; 1 bytes @ 0x3C
  2376  005C                     	ds	1
  2377  005D                     ??_PROCULUS_VP_Write_String:	
  2378  005D                     ___fladd@grs:	
  2379                           ; 1 bytes @ 0x3D
  2380                           
  2381                           
  2382                           ; 1 bytes @ 0x3D
  2383  005D                     	ds	1
  2384  005E                     ?___flsub:	
  2385  005E                     ___flsub@a:	
  2386                           ; 4 bytes @ 0x3E
  2387                           
  2388                           
  2389                           ; 4 bytes @ 0x3E
  2390  005E                     	ds	1
  2391  005F                     ??_Decodify_Command:	
  2392                           
  2393                           ; 1 bytes @ 0x3F
  2394  005F                     	ds	3
  2395  0062                     ___flsub@b:	
  2396                           
  2397                           ; 4 bytes @ 0x42
  2398  0062                     	ds	4
  2399  0066                     ??_MediaPlacaVaccum:	
  2400  0066                     ??___flsub:	
  2401                           ; 1 bytes @ 0x46
  2402                           
  2403                           
  2404                           ; 1 bytes @ 0x46
  2405  0066                     	ds	4
  2406  006A                     ??_main:	
  2407                           
  2408                           ; 1 bytes @ 0x4A
  2409  006A                     	ds	3
  2410  006D                     main@reset:	
  2411                           
  2412                           ; 2 bytes @ 0x4D
  2413  006D                     	ds	2
  2414                           
  2415                           	psect	maintext
  2416  06C9                     __pmaintext:	
  2417 ;;
  2418 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2419 ;;
  2420 ;; *************** function _main *****************
  2421 ;; Defined at:
  2422 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  reset           2   77[BANK0 ] unsigned int 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : B00/0
  2433 ;;		On exit  : 300/100
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       2       0       0       0
  2438 ;;      Temps:          0       3       0       0       0
  2439 ;;      Totals:         0       5       0       0       0
  2440 ;;Total ram usage:        5 bytes
  2441 ;; Hardware stack levels required when called:    7
  2442 ;; This function calls:
  2443 ;;		_ADC_init
  2444 ;;		_Decodify_Command
  2445 ;;		_EEPROM_Read_Integer
  2446 ;;		_EEPROM_Write_Integer
  2447 ;;		_I2C_Master_Init
  2448 ;;		_MediaPlacaVaccum
  2449 ;;		_USART_init
  2450 ;;		_my_delay_ms_WDT
  2451 ;; This function is called by:
  2452 ;;		Startup code after reset
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _main
  2458  06C9                     _main:	
  2459                           
  2460                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2464  06C9  3002               	movlw	2
  2465  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2466  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2467  06CC  00EC               	movwf	??_main+2
  2468  06CD  3004               	movlw	4
  2469  06CE  00EB               	movwf	??_main+1
  2470  06CF  30B9               	movlw	185
  2471  06D0  00EA               	movwf	??_main
  2472  06D1                     u7737:	
  2473  06D1  0BEA               	decfsz	??_main,f
  2474  06D2  2ED1               	goto	u7737
  2475  06D3  0BEB               	decfsz	??_main+1,f
  2476  06D4  2ED1               	goto	u7737
  2477  06D5  0BEC               	decfsz	??_main+2,f
  2478  06D6  2ED1               	goto	u7737
  2479  06D7  2ED8               	nop2
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2482  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2483  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  2484  06DA  160F               	bsf	15,4	;volatile
  2485                           
  2486                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2487  06DB  168F               	bsf	15,5	;volatile
  2488                           
  2489                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2490  06DC  170F               	bsf	15,6	;volatile
  2491                           
  2492                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2493  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2494  06DE  0185               	clrf	5	;volatile
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2497  06DF  0186               	clrf	6	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2500  06E0  0187               	clrf	7	;volatile
  2501                           
  2502                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2503  06E1  0189               	clrf	9	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2506  06E2  30EF               	movlw	239
  2507  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  2508  06E4  0085               	movwf	5	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2511  06E5  300F               	movlw	15
  2512  06E6  0086               	movwf	6	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2515  06E7  30F0               	movlw	240
  2516  06E8  0087               	movwf	7	;volatile
  2517                           
  2518                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2519  06E9  30FF               	movlw	255
  2520  06EA  0089               	movwf	9	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2523  06EB  3011               	movlw	17
  2524  06EC  1703               	bsf	3,6	;RP1=1, select bank3
  2525  06ED  0088               	movwf	8	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2528  06EE  0189               	clrf	9	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2531  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2532  06F0  1381               	bcf	1,7	;volatile
  2533                           
  2534                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2535  06F1  300F               	movlw	15
  2536  06F2  0095               	movwf	21	;volatile
  2537                           
  2538                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2539  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2540  06F4  1786               	bsf	6,7	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2543  06F5  1706               	bsf	6,6	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2546  06F6  1686               	bsf	6,5	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2549  06F7  3000               	movlw	0
  2550  06F8  00A3               	movwf	my_delay_ms_WDT@time+3
  2551  06F9  3000               	movlw	0
  2552  06FA  00A2               	movwf	my_delay_ms_WDT@time+2
  2553  06FB  3003               	movlw	3
  2554  06FC  00A1               	movwf	my_delay_ms_WDT@time+1
  2555  06FD  30E8               	movlw	232
  2556  06FE  00A0               	movwf	my_delay_ms_WDT@time
  2557  06FF  160A  158A  2602  120A  118A  	fcall	_my_delay_ms_WDT
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2560  0704  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0705  1281               	bcf	1,5	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2564  0706  1581               	bsf	1,3	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2567  0707  1401               	bsf	1,0	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2570  0708  1481               	bsf	1,1	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2573  0709  1501               	bsf	1,2	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2576  070A  128B               	bcf	11,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2579  070B  120B               	bcf	11,4	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2582  070C  178B               	bsf	11,7	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2585  070D  170B               	bsf	11,6	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2588  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2589  070F  1610               	bsf	16,4	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2592  0710  1690               	bsf	16,5	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2595  0711  1090               	bcf	16,1	;volatile
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2598  0712  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0713  140C               	bsf	12,0	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2602  0714  3001               	movlw	1
  2603  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0716  0090               	movwf	16	;volatile
  2605  0717  0064               	clrwdt	;# 
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2608  0718  160A  158A  227B  120A  118A  	fcall	_ADC_init
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2611  071D  3000               	movlw	0
  2612  071E  00B1               	movwf	I2C_Master_Init@c+3
  2613  071F  3001               	movlw	1
  2614  0720  00B0               	movwf	I2C_Master_Init@c+2
  2615  0721  3086               	movlw	134
  2616  0722  00AF               	movwf	I2C_Master_Init@c+1
  2617  0723  30A0               	movlw	160
  2618  0724  00AE               	movwf	I2C_Master_Init@c
  2619  0725  160A  158A  2500  120A  118A  	fcall	_I2C_Master_Init
  2620                           
  2621                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2622  072A  3000               	movlw	0
  2623  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2624  072C  00A3               	movwf	USART_init@baudrate+3
  2625  072D  3001               	movlw	1
  2626  072E  00A2               	movwf	USART_init@baudrate+2
  2627  072F  30C2               	movlw	194
  2628  0730  00A1               	movwf	USART_init@baudrate+1
  2629  0731  3000               	movlw	0
  2630  0732  00A0               	movwf	USART_init@baudrate
  2631  0733  160A  158A  26EA  120A  118A  	fcall	_USART_init
  2632                           
  2633                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2634  0738  3010               	movlw	16
  2635  0739  160A  158A  24AB  120A  118A  	fcall	_EEPROM_Read_Integer
  2636  073E  0824               	movf	?_EEPROM_Read_Integer+1,w
  2637  073F  00EE               	movwf	main@reset+1
  2638  0740  0823               	movf	?_EEPROM_Read_Integer,w
  2639  0741  00ED               	movwf	main@reset
  2640                           
  2641                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2642  0742  0A6D               	incf	main@reset,w
  2643  0743  1D03               	skipz
  2644  0744  2F51               	goto	l7232
  2645  0745  0A6E               	incf	main@reset+1,w
  2646  0746  1D03               	btfss	3,2
  2647  0747  2F51               	goto	l7232
  2648  0748  3000               	movlw	0
  2649  0749  00A5               	movwf	EEPROM_Write_Integer@dado
  2650  074A  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2651  074B  3010               	movlw	16
  2652  074C  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  2653  0751                     l7232:	
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2656  0751  3001               	movlw	1
  2657  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0754  07ED               	addwf	main@reset,f
  2660  0755  1803               	skipnc
  2661  0756  0AEE               	incf	main@reset+1,f
  2662  0757  3000               	movlw	0
  2663  0758  07EE               	addwf	main@reset+1,f
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2666  0759  086E               	movf	main@reset+1,w
  2667  075A  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2668  075B  086D               	movf	main@reset,w
  2669  075C  00A5               	movwf	EEPROM_Write_Integer@dado
  2670  075D  3010               	movlw	16
  2671  075E  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2674  0763  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2675  0764  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2678  0765  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0766  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0767  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2681  0768  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2684  0769  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2685  076A  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2688  076B  01FD               	clrf	_segundo	;volatile
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2691  076C  01FC               	clrf	_hora	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2694  076D  1283               	bcf	3,5	;RP0=0, select bank0
  2695  076E  1007               	bcf	7,0	;volatile
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2698  076F  1087               	bcf	7,1	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2701  0770  1105               	bcf	5,2	;volatile
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2704  0771  1185               	bcf	5,3	;volatile
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2707  0772  0906               	comf	6,w	;volatile
  2708  0773  390F               	andlw	15
  2709  0774  00EA               	movwf	??_main
  2710  0775  086A               	movf	??_main,w
  2711  0776  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0777  00B8               	movwf	_Board_Number^(0+128)
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2715  0778  01B9               	clrf	_canal^(0+128)
  2716  0779  0AB9               	incf	_canal^(0+128),f
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2719  077A  113A               	bcf	_statuspower^(0+128),2
  2720  077B                     l7258:	
  2721                           
  2722                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2723  077B  17BB               	bsf	_generic_status^(0+128),7
  2724                           
  2725                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2726  077C  3001               	movlw	1
  2727  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2728  077E  00EA               	movwf	??_main
  2729  077F  086A               	movf	??_main,w
  2730  0780  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0781  07B9               	addwf	_canal^(0+128),f
  2732  0782  3002               	movlw	2
  2733  0783  0639               	xorwf	_canal^(0+128),w
  2734  0784  1903               	btfsc	3,2
  2735  0785  01B9               	clrf	_canal^(0+128)
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2738  0786  0839               	movf	_canal^(0+128),w
  2739  0787  120A  158A  2569  120A  118A  	fcall	_MediaPlacaVaccum
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2742  078C  1683               	bsf	3,5	;RP0=1, select bank1
  2743  078D  1C3B               	btfss	_generic_status^(0+128),0
  2744  078E  2F7B               	goto	l7258
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2747  078F  1283               	bcf	3,5	;RP0=0, select bank2
  2748  0790  1703               	bsf	3,6	;RP1=1, select bank2
  2749  0791  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2750  0792  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0793  1303               	bcf	3,6	;RP1=0, select bank1
  2752  0794  00AF               	movwf	(_header+1)^(0+128)
  2753  0795  1283               	bcf	3,5	;RP0=0, select bank2
  2754  0796  1703               	bsf	3,6	;RP1=1, select bank2
  2755  0797  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2756  0798  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0799  1303               	bcf	3,6	;RP1=0, select bank1
  2758  079A  00AE               	movwf	_header^(0+128)
  2759                           
  2760                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2761  079B  30BB               	movlw	187
  2762  079C  062E               	xorwf	_header^(0+128),w
  2763  079D  30AA               	movlw	170
  2764  079E  1903               	skipnz
  2765  079F  062F               	xorwf	(_header+1)^(0+128),w
  2766  07A0  1D03               	btfss	3,2
  2767  07A1  2F7B               	goto	l7258
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2770  07A2  1283               	bcf	3,5	;RP0=0, select bank2
  2771  07A3  1703               	bsf	3,6	;RP1=1, select bank2
  2772  07A4  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2773  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  2774  07A6  00EA               	movwf	??_main
  2775  07A7  086A               	movf	??_main,w
  2776  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  2777  07A9  00B7               	movwf	_destino^(0+128)
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2780  07AA  0837               	movf	_destino^(0+128),w
  2781  07AB  0638               	xorwf	_Board_Number^(0+128),w
  2782  07AC  1D03               	btfss	3,2
  2783  07AD  0A37               	incf	_destino^(0+128),w
  2784  07AE  1D03               	btfss	3,2
  2785  07AF  2F7B               	goto	l7258
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2788  07B0  3014               	movlw	20
  2789  07B1  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2790  07B2  3000               	movlw	0
  2791  07B3  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2794  07B4  120A  118A  2037  120A  118A  	fcall	_Decodify_Command
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2797  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  2798  07BA  103B               	bcf	_generic_status^(0+128),0
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 296:             }
  2801  07BB  2F7B               	goto	l7258
  2802  07BC                     __end_of_main:	
  2803                           
  2804                           	psect	text1
  2805  1EEA                     __ptext1:	
  2806 ;; *************** function _USART_init *****************
  2807 ;; Defined at:
  2808 ;;		line 18 in file "usart.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  i               1    6[BANK0 ] unsigned char 
  2813 ;;  erro            1    0        unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 300/0
  2820 ;;		On exit  : 300/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       4       0       0       0
  2824 ;;      Locals:         0       2       0       0       0
  2825 ;;      Temps:          0       1       0       0       0
  2826 ;;      Totals:         0       7       0       0       0
  2827 ;;Total ram usage:        7 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _USART_init
  2839  1EEA                     _USART_init:	
  2840                           
  2841                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2845  1EEA  304B               	movlw	75
  2846  1EEB  0621               	xorwf	USART_init@baudrate+1,w
  2847  1EEC  0420               	iorwf	USART_init@baudrate,w
  2848  1EED  0422               	iorwf	USART_init@baudrate+2,w
  2849  1EEE  0423               	iorwf	USART_init@baudrate+3,w
  2850  1EEF  1D03               	btfss	3,2
  2851  1EF0  2EFB               	goto	l6870
  2852                           
  2853                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2854  1EF1  1798               	bsf	24,7	;volatile
  2855                           
  2856                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2857  1EF2  1618               	bsf	24,4	;volatile
  2858                           
  2859                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2860  1EF3  1683               	bsf	3,5	;RP0=1, select bank1
  2861  1EF4  1518               	bsf	24,2	;volatile
  2862                           
  2863                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2864  1EF5  1218               	bcf	24,4	;volatile
  2865                           
  2866                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2867  1EF6  1318               	bcf	24,6	;volatile
  2868                           
  2869                           ;usart.c: 32:           SPBRG =12;
  2870  1EF7  300C               	movlw	12
  2871  1EF8  0099               	movwf	25	;volatile
  2872                           
  2873                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2874  1EF9  170B               	bsf	11,6	;volatile
  2875  1EFA  2F14               	goto	L1
  2876  1EFB                     l6870:	
  2877                           ;usart.c: 35:           }
  2878                           
  2879                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2880                           
  2881  1EFB  30C2               	movlw	194
  2882  1EFC  0621               	xorwf	USART_init@baudrate+1,w
  2883  1EFD  1D03               	skipz
  2884  1EFE  2F15               	goto	l6890
  2885  1EFF  0322               	decf	USART_init@baudrate+2,w
  2886  1F00  0420               	iorwf	USART_init@baudrate,w
  2887  1F01  0423               	iorwf	USART_init@baudrate+3,w
  2888  1F02  1D03               	btfss	3,2
  2889  1F03  2F15               	goto	l6890
  2890                           
  2891                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2892  1F04  3010               	movlw	16
  2893  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  2894  1F06  0099               	movwf	25	;volatile
  2895                           
  2896                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2897  1F07  1703               	bsf	3,6	;RP1=1, select bank3
  2898  1F08  1587               	bsf	7,3	;volatile
  2899                           
  2900                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2901  1F09  1303               	bcf	3,6	;RP1=0, select bank1
  2902  1F0A  1518               	bsf	24,2	;volatile
  2903                           
  2904                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2905  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2906  1F0C  1798               	bsf	24,7	;volatile
  2907                           
  2908                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2909  1F0D  1683               	bsf	3,5	;RP0=1, select bank1
  2910  1F0E  1218               	bcf	24,4	;volatile
  2911                           
  2912                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2913  1F0F  1318               	bcf	24,6	;volatile
  2914                           
  2915                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2916  1F10  1283               	bcf	3,5	;RP0=0, select bank0
  2917  1F11  1618               	bsf	24,4	;volatile
  2918                           
  2919                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2920  1F12  170B               	bsf	11,6	;volatile
  2921                           
  2922                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2923  1F13  1683               	bsf	3,5	;RP0=1, select bank1
  2924  1F14                     L1:	
  2925  1F14  168C               	bsf	12,5	;volatile
  2926  1F15                     l6890:	
  2927                           
  2928                           ;usart.c: 68:      TRISC6= 1;
  2929  1F15  1683               	bsf	3,5	;RP0=1, select bank1
  2930  1F16  1707               	bsf	7,6	;volatile
  2931                           
  2932                           ;usart.c: 69:      TRISC7= 1;
  2933  1F17  1787               	bsf	7,7	;volatile
  2934                           
  2935                           ;usart.c: 71:      CREN=0;
  2936  1F18  1283               	bcf	3,5	;RP0=0, select bank0
  2937  1F19  1218               	bcf	24,4	;volatile
  2938                           
  2939                           ;usart.c: 72:      CREN=1;
  2940  1F1A  1618               	bsf	24,4	;volatile
  2941                           
  2942                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2943  1F1B  01A6               	clrf	USART_init@i
  2944  1F1C                     l6904:	
  2945  1F1C  081A               	movf	26,w	;volatile
  2946  1F1D  3001               	movlw	1
  2947  1F1E  00A4               	movwf	??_USART_init
  2948  1F1F  0824               	movf	??_USART_init,w
  2949  1F20  07A6               	addwf	USART_init@i,f
  2950  1F21  300F               	movlw	15
  2951  1F22  0226               	subwf	USART_init@i,w
  2952  1F23  1803               	btfsc	3,0
  2953  1F24  0008               	return
  2954  1F25  2F1C               	goto	l6904
  2955  1F26                     __end_of_USART_init:	
  2956                           
  2957                           	psect	text2
  2958  0D69                     __ptext2:	
  2959 ;; *************** function _MediaPlacaVaccum *****************
  2960 ;; Defined at:
  2961 ;;		line 741 in file "SlaveLiofilizadorVer1.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  canal           1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  canal           1    4[BANK1 ] unsigned char 
  2966 ;;  Temp            4    5[BANK1 ] float 
  2967 ;;  Valor           4    0[BANK1 ] float 
  2968 ;;  i               2    9[BANK1 ] unsigned int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 300/100
  2975 ;;		On exit  : 200/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0      11       0       0
  2980 ;;      Temps:          0       4       0       0       0
  2981 ;;      Totals:         0       4      11       0       0
  2982 ;;Total ram usage:       15 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    3
  2985 ;; This function calls:
  2986 ;;		_ADC_Max_10Bits
  2987 ;;		_ADC_Media_10bits
  2988 ;;		_Package_Usart_is_for_me
  2989 ;;		___fladd
  2990 ;;		___fldiv
  2991 ;;		___flge
  2992 ;;		___flmul
  2993 ;;		___flsub
  2994 ;;		___xxtofl
  2995 ;;		_my_delay_ms
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _MediaPlacaVaccum
  3003  0D69                     _MediaPlacaVaccum:	
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3007                           ;MediaPlacaVaccum@canal stored from wreg
  3008  0D69  00E1               	movwf	MediaPlacaVaccum@canal^(0+128)
  3009                           
  3010                           ;SlaveLiofilizadorVer1.c: 742:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 743:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 747:      if(canal==0)
  3011  0D6A  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3012  0D6B  1D03               	btfss	3,2
  3013  0D6C  2F0F               	goto	l427
  3014                           
  3015                           ;SlaveLiofilizadorVer1.c: 748:        {;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.
      +                          VCFG0=1;
  3016  0D6D  161F               	bsf	31,4	;volatile
  3017                           
  3018                           ;SlaveLiofilizadorVer1.c: 750:        ADCON1bits.VCFG1=1;
  3019  0D6E  169F               	bsf	31,5	;volatile
  3020                           
  3021                           ;SlaveLiofilizadorVer1.c: 751:        ADCON0bits.CHS=canal;
  3022  0D6F  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3023  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3025  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3026  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3027  0D74  081F               	movf	31,w	;volatile
  3028  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3029  0D76  39C3               	andlw	-61
  3030  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3031  0D78  009F               	movwf	31	;volatile
  3032                           
  3033                           ;SlaveLiofilizadorVer1.c: 752:        my_delay_ms(1);
  3034  0D79  3000               	movlw	0
  3035  0D7A  00A3               	movwf	my_delay_ms@time+3
  3036  0D7B  3000               	movlw	0
  3037  0D7C  00A2               	movwf	my_delay_ms@time+2
  3038  0D7D  3000               	movlw	0
  3039  0D7E  00A1               	movwf	my_delay_ms@time+1
  3040  0D7F  3001               	movlw	1
  3041  0D80  00A0               	movwf	my_delay_ms@time
  3042  0D81  160A  158A  25CB  120A  158A  	fcall	_my_delay_ms
  3043                           
  3044                           ;SlaveLiofilizadorVer1.c: 753:        Temp=0;
  3045  0D86  3000               	movlw	0
  3046  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0D88  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3048  0D89  3000               	movlw	0
  3049  0D8A  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3050  0D8B  3000               	movlw	0
  3051  0D8C  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3052  0D8D  3000               	movlw	0
  3053  0D8E  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3054                           
  3055                           ;SlaveLiofilizadorVer1.c: 755:        for(i=1;i<15;i++)
  3056  0D8F  3001               	movlw	1
  3057  0D90  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3058  0D91  3000               	movlw	0
  3059  0D92  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3060  0D93                     l6926:	
  3061                           
  3062                           ;SlaveLiofilizadorVer1.c: 756:            {;SlaveLiofilizadorVer1.c: 757:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3063  0D93  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3064  0D94  160A  118A  207D  120A  158A  	fcall	_ADC_Media_10bits
  3065  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3066  0D9A  00CD               	movwf	___fladd@b+3
  3067  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3068  0D9C  00CC               	movwf	___fladd@b+2
  3069  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3070  0D9E  00CB               	movwf	___fladd@b+1
  3071  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3072  0DA0  00CA               	movwf	___fladd@b
  3073  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3074  0DA2  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3075  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0DA4  00D1               	movwf	___fladd@a+3
  3077  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3078  0DA6  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3079  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0DA8  00D0               	movwf	___fladd@a+2
  3081  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3082  0DAA  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3083  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3084  0DAC  00CF               	movwf	___fladd@a+1
  3085  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0DAE  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3087  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0DB0  00CE               	movwf	___fladd@a
  3089  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3090  0DB6  084D               	movf	?___fladd+3,w
  3091  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0DB8  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3093  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0DBA  084C               	movf	?___fladd+2,w
  3095  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0DBC  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3097  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0DBE  084B               	movf	?___fladd+1,w
  3099  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0DC0  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3101  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0DC2  084A               	movf	?___fladd,w
  3103  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0DC4  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3105                           
  3106                           ;SlaveLiofilizadorVer1.c: 758:            if(Package_Usart_is_for_me()==1) break;
  3107  0DC5  160A  158A  2331  120A  158A  	fcall	_Package_Usart_is_for_me
  3108  0DCA  3A01               	xorlw	1
  3109  0DCB  1903               	btfsc	3,2
  3110  0DCC  2DDB               	goto	l6934
  3111                           
  3112                           ;SlaveLiofilizadorVer1.c: 759:            }
  3113  0DCD  3001               	movlw	1
  3114  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0DCF  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3116  0DD0  1803               	skipnc
  3117  0DD1  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3118  0DD2  3000               	movlw	0
  3119  0DD3  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3120  0DD4  3000               	movlw	0
  3121  0DD5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3122  0DD6  300F               	movlw	15
  3123  0DD7  1903               	skipnz
  3124  0DD8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3125  0DD9  1C03               	skipc
  3126  0DDA  2D93               	goto	l6926
  3127  0DDB                     l6934:	
  3128                           
  3129                           ;SlaveLiofilizadorVer1.c: 760:        if(i<10)
  3130  0DDB  3000               	movlw	0
  3131  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0DDD  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3133  0DDE  300A               	movlw	10
  3134  0DDF  1903               	skipnz
  3135  0DE0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3136  0DE1  1C03               	btfss	3,0
  3137  0DE2  0008               	return
  3138                           
  3139                           ;SlaveLiofilizadorVer1.c: 766:        if(i==15)
  3140  0DE3  300F               	movlw	15
  3141  0DE4  0666               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3142  0DE5  0467               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3143  0DE6  1D03               	btfss	3,2
  3144  0DE7  2DF2               	goto	l6942
  3145                           
  3146                           ;SlaveLiofilizadorVer1.c: 767:          Temp/=(i-1);
  3147  0DE8  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3148  0DE9  3EFF               	addlw	255
  3149  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0DEB  00B3               	movwf	___xxtofl@val
  3151  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3152  0DED  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3153  0DEE  1803               	skipnc
  3154  0DEF  3E01               	addlw	1
  3155  0DF0  3EFF               	addlw	255
  3156  0DF1  2DF7               	goto	L2
  3157  0DF2                     l6942:	
  3158                           
  3159                           ;SlaveLiofilizadorVer1.c: 769:          Temp/=(i);
  3160  0DF2  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3161  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0DF4  00B3               	movwf	___xxtofl@val
  3163  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3164  0DF6  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3165  0DF7                     L2:	
  3166  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0DF8  00B4               	movwf	___xxtofl@val+1
  3168  0DF9  01B5               	clrf	___xxtofl@val+2
  3169  0DFA  01B6               	clrf	___xxtofl@val+3
  3170  0DFB  3000               	movlw	0
  3171  0DFC  160A  118A  22A6  120A  158A  	fcall	___xxtofl
  3172  0E01  0836               	movf	?___xxtofl+3,w
  3173  0E02  00C4               	movwf	___fldiv@a+3
  3174  0E03  0835               	movf	?___xxtofl+2,w
  3175  0E04  00C3               	movwf	___fldiv@a+2
  3176  0E05  0834               	movf	?___xxtofl+1,w
  3177  0E06  00C2               	movwf	___fldiv@a+1
  3178  0E07  0833               	movf	?___xxtofl,w
  3179  0E08  00C1               	movwf	___fldiv@a
  3180  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3181  0E0A  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3182  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0E0C  00C8               	movwf	___fldiv@b+3
  3184  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0E0E  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3186  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0E10  00C7               	movwf	___fldiv@b+2
  3188  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0E12  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3190  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0E14  00C6               	movwf	___fldiv@b+1
  3192  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0E16  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3194  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0E18  00C5               	movwf	___fldiv@b
  3196  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3197  0E1E  0844               	movf	?___fldiv+3,w
  3198  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0E20  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3200  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0E22  0843               	movf	?___fldiv+2,w
  3202  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0E24  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3204  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0E26  0842               	movf	?___fldiv+1,w
  3206  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0E28  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3208  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0E2A  0841               	movf	?___fldiv,w
  3210  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0E2C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3212                           
  3213                           ;SlaveLiofilizadorVer1.c: 771:        Vaccum0 =1023.0-Temp;
  3214  0E2D  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3215  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0E2F  00E1               	movwf	___flsub@a+3
  3217  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0E31  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3219  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0E33  00E0               	movwf	___flsub@a+2
  3221  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0E35  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3223  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0E37  00DF               	movwf	___flsub@a+1
  3225  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0E39  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3227  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0E3B  00DE               	movwf	___flsub@a
  3229  0E3C  3044               	movlw	68
  3230  0E3D  00E5               	movwf	___flsub@b+3
  3231  0E3E  307F               	movlw	127
  3232  0E3F  00E4               	movwf	___flsub@b+2
  3233  0E40  30C0               	movlw	192
  3234  0E41  00E3               	movwf	___flsub@b+1
  3235  0E42  3000               	movlw	0
  3236  0E43  00E2               	movwf	___flsub@b
  3237  0E44  160A  158A  23BF  120A  158A  	fcall	___flsub
  3238  0E49  0861               	movf	?___flsub+3,w
  3239  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3240  0E4B  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3241  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0E4D  0860               	movf	?___flsub+2,w
  3243  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0E4F  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3245  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0E51  085F               	movf	?___flsub+1,w
  3247  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0E53  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3249  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0E55  085E               	movf	?___flsub,w
  3251  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3252  0E57  00A4               	movwf	_Vaccum0^(0+128)
  3253                           
  3254                           ;SlaveLiofilizadorVer1.c: 772:        Vaccum0*=Vaccum0;
  3255  0E58  0827               	movf	(_Vaccum0+3)^(0+128),w
  3256  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0E5A  00AC               	movwf	___flmul@b+3
  3258  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0E5C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3260  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0E5E  00AB               	movwf	___flmul@b+2
  3262  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0E60  0825               	movf	(_Vaccum0+1)^(0+128),w
  3264  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0E62  00AA               	movwf	___flmul@b+1
  3266  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0E64  0824               	movf	_Vaccum0^(0+128),w
  3268  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0E66  00A9               	movwf	___flmul@b
  3270  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3271  0E68  0827               	movf	(_Vaccum0+3)^(0+128),w
  3272  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0E6A  00B0               	movwf	___flmul@a+3
  3274  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0E6C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3276  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0E6E  00AF               	movwf	___flmul@a+2
  3278  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0E70  0825               	movf	(_Vaccum0+1)^(0+128),w
  3280  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0E72  00AE               	movwf	___flmul@a+1
  3282  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3283  0E74  0824               	movf	_Vaccum0^(0+128),w
  3284  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0E76  00AD               	movwf	___flmul@a
  3286  0E77  120A  118A  23D4  120A  158A  	fcall	___flmul
  3287  0E7C  082C               	movf	?___flmul+3,w
  3288  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3289  0E7E  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3290  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0E80  082B               	movf	?___flmul+2,w
  3292  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0E82  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3294  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0E84  082A               	movf	?___flmul+1,w
  3296  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0E86  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3298  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0E88  0829               	movf	?___flmul,w
  3300  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0E8A  00A4               	movwf	_Vaccum0^(0+128)
  3302                           
  3303                           ;SlaveLiofilizadorVer1.c: 773:        Vaccum0*=0.00222;
  3304  0E8B  303B               	movlw	59
  3305  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0E8D  00AC               	movwf	___flmul@b+3
  3307  0E8E  3011               	movlw	17
  3308  0E8F  00AB               	movwf	___flmul@b+2
  3309  0E90  307D               	movlw	125
  3310  0E91  00AA               	movwf	___flmul@b+1
  3311  0E92  306B               	movlw	107
  3312  0E93  00A9               	movwf	___flmul@b
  3313  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3314  0E95  0827               	movf	(_Vaccum0+3)^(0+128),w
  3315  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0E97  00B0               	movwf	___flmul@a+3
  3317  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0E99  0826               	movf	(_Vaccum0+2)^(0+128),w
  3319  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0E9B  00AF               	movwf	___flmul@a+2
  3321  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3322  0E9D  0825               	movf	(_Vaccum0+1)^(0+128),w
  3323  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0E9F  00AE               	movwf	___flmul@a+1
  3325  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0EA1  0824               	movf	_Vaccum0^(0+128),w
  3327  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0EA3  00AD               	movwf	___flmul@a
  3329  0EA4  120A  118A  23D4  120A  158A  	fcall	___flmul
  3330  0EA9  082C               	movf	?___flmul+3,w
  3331  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0EAB  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3333  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0EAD  082B               	movf	?___flmul+2,w
  3335  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0EAF  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3337  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0EB1  082A               	movf	?___flmul+1,w
  3339  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0EB3  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3341  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0EB5  0829               	movf	?___flmul,w
  3343  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0EB7  00A4               	movwf	_Vaccum0^(0+128)
  3345                           
  3346                           ;SlaveLiofilizadorVer1.c: 774:        Vaccum0+=150;
  3347  0EB8  3043               	movlw	67
  3348  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0EBA  00CD               	movwf	___fladd@b+3
  3350  0EBB  3016               	movlw	22
  3351  0EBC  00CC               	movwf	___fladd@b+2
  3352  0EBD  3000               	movlw	0
  3353  0EBE  00CB               	movwf	___fladd@b+1
  3354  0EBF  3000               	movlw	0
  3355  0EC0  00CA               	movwf	___fladd@b
  3356  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0EC2  0827               	movf	(_Vaccum0+3)^(0+128),w
  3358  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0EC4  00D1               	movwf	___fladd@a+3
  3360  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0EC6  0826               	movf	(_Vaccum0+2)^(0+128),w
  3362  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0EC8  00D0               	movwf	___fladd@a+2
  3364  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0ECA  0825               	movf	(_Vaccum0+1)^(0+128),w
  3366  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0ECC  00CF               	movwf	___fladd@a+1
  3368  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3369  0ECE  0824               	movf	_Vaccum0^(0+128),w
  3370  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0ED0  00CE               	movwf	___fladd@a
  3372  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3373  0ED6  084D               	movf	?___fladd+3,w
  3374  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0ED8  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3376  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0EDA  084C               	movf	?___fladd+2,w
  3378  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0EDC  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3380  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0EDE  084B               	movf	?___fladd+1,w
  3382  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0EE0  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3384  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0EE2  084A               	movf	?___fladd,w
  3386  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3387  0EE4  00A4               	movwf	_Vaccum0^(0+128)
  3388                           
  3389                           ;SlaveLiofilizadorVer1.c: 776:        if(Vaccum0>2000)Vaccum0=2000;
  3390  0EE5  3044               	movlw	68
  3391  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0EE7  00A3               	movwf	___flge@ff1+3
  3393  0EE8  30FA               	movlw	250
  3394  0EE9  00A2               	movwf	___flge@ff1+2
  3395  0EEA  3000               	movlw	0
  3396  0EEB  00A1               	movwf	___flge@ff1+1
  3397  0EEC  3000               	movlw	0
  3398  0EED  00A0               	movwf	___flge@ff1
  3399  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3400  0EEF  0827               	movf	(_Vaccum0+3)^(0+128),w
  3401  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0EF1  00A7               	movwf	___flge@ff2+3
  3403  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0EF3  0826               	movf	(_Vaccum0+2)^(0+128),w
  3405  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0EF5  00A6               	movwf	___flge@ff2+2
  3407  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0EF7  0825               	movf	(_Vaccum0+1)^(0+128),w
  3409  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0EF9  00A5               	movwf	___flge@ff2+1
  3411  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0EFB  0824               	movf	_Vaccum0^(0+128),w
  3413  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0EFD  00A4               	movwf	___flge@ff2
  3415  0EFE  160A  118A  2213  120A  158A  	fcall	___flge
  3416  0F03  1803               	btfsc	3,0
  3417  0F04  0008               	return
  3418  0F05  3044               	movlw	68
  3419  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3420  0F07  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3421  0F08  30FA               	movlw	250
  3422  0F09  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3423  0F0A  3000               	movlw	0
  3424  0F0B  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3425  0F0C  3000               	movlw	0
  3426  0F0D  00A4               	movwf	_Vaccum0^(0+128)
  3427  0F0E  0008               	return
  3428  0F0F                     l427:	
  3429                           ;SlaveLiofilizadorVer1.c: 779:      else
  3430                           
  3431                           
  3432                           ;SlaveLiofilizadorVer1.c: 780:        {;SlaveLiofilizadorVer1.c: 781:        ADCON1bits.
      +                          VCFG0=0;
  3433  0F0F  121F               	bcf	31,4	;volatile
  3434                           
  3435                           ;SlaveLiofilizadorVer1.c: 782:        ADCON1bits.VCFG1=0;
  3436  0F10  129F               	bcf	31,5	;volatile
  3437                           
  3438                           ;SlaveLiofilizadorVer1.c: 783:        ADCON0bits.CHS=canal;
  3439  0F11  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3440  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3442  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3443  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3444  0F16  081F               	movf	31,w	;volatile
  3445  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3446  0F18  39C3               	andlw	-61
  3447  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3448  0F1A  009F               	movwf	31	;volatile
  3449                           
  3450                           ;SlaveLiofilizadorVer1.c: 784:        my_delay_ms(1);
  3451  0F1B  3000               	movlw	0
  3452  0F1C  00A3               	movwf	my_delay_ms@time+3
  3453  0F1D  3000               	movlw	0
  3454  0F1E  00A2               	movwf	my_delay_ms@time+2
  3455  0F1F  3000               	movlw	0
  3456  0F20  00A1               	movwf	my_delay_ms@time+1
  3457  0F21  3001               	movlw	1
  3458  0F22  00A0               	movwf	my_delay_ms@time
  3459  0F23  160A  158A  25CB  120A  158A  	fcall	_my_delay_ms
  3460                           
  3461                           ;SlaveLiofilizadorVer1.c: 785:        Temp=0;
  3462  0F28  3000               	movlw	0
  3463  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0F2A  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3465  0F2B  3000               	movlw	0
  3466  0F2C  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3467  0F2D  3000               	movlw	0
  3468  0F2E  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3469  0F2F  3000               	movlw	0
  3470  0F30  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3471                           
  3472                           ;SlaveLiofilizadorVer1.c: 787:        for(i=1;i<15;i++)
  3473  0F31  3001               	movlw	1
  3474  0F32  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3475  0F33  3000               	movlw	0
  3476  0F34  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3477  0F35                     l6960:	
  3478                           
  3479                           ;SlaveLiofilizadorVer1.c: 788:            {;SlaveLiofilizadorVer1.c: 789:            Val
      +                          or=ADC_Max_10Bits(canal);
  3480  0F35  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3481  0F36  160A  158A  2726  120A  158A  	fcall	_ADC_Max_10Bits
  3482  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3483  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3484  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3485  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3486  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3487  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3488  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3489  0F42  00B6               	movwf	___xxtofl@val+3
  3490  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3491  0F44  00B5               	movwf	___xxtofl@val+2
  3492  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3493  0F46  00B4               	movwf	___xxtofl@val+1
  3494  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3495  0F48  00B3               	movwf	___xxtofl@val
  3496  0F49  3000               	movlw	0
  3497  0F4A  160A  118A  22A6  120A  158A  	fcall	___xxtofl
  3498  0F4F  0836               	movf	?___xxtofl+3,w
  3499  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3500  0F51  00E0               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3501  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0F53  0835               	movf	?___xxtofl+2,w
  3503  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0F55  00DF               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3505  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0F57  0834               	movf	?___xxtofl+1,w
  3507  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3508  0F59  00DE               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3509  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0F5B  0833               	movf	?___xxtofl,w
  3511  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0F5D  00DD               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3513                           
  3514                           ;SlaveLiofilizadorVer1.c: 790:            if(Valor>Temp) Temp=Valor;
  3515  0F5E  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3516  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0F60  00A3               	movwf	___flge@ff1+3
  3518  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0F62  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3520  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0F64  00A2               	movwf	___flge@ff1+2
  3522  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0F66  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3524  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0F68  00A1               	movwf	___flge@ff1+1
  3526  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3527  0F6A  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3528  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0F6C  00A0               	movwf	___flge@ff1
  3530  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0F6E  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3532  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0F70  00A7               	movwf	___flge@ff2+3
  3534  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0F72  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3536  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0F74  00A6               	movwf	___flge@ff2+2
  3538  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0F76  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3540  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0F78  00A5               	movwf	___flge@ff2+1
  3542  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0F7A  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3544  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0F7C  00A4               	movwf	___flge@ff2
  3546  0F7D  160A  118A  2213  120A  158A  	fcall	___flge
  3547  0F82  1803               	btfsc	3,0
  3548  0F83  2F8D               	goto	l6966
  3549  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0F85  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3551  0F86  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3552  0F87  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3553  0F88  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3554  0F89  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3555  0F8A  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3556  0F8B  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3557  0F8C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3558  0F8D                     l6966:	
  3559                           
  3560                           ;SlaveLiofilizadorVer1.c: 791:            if(Package_Usart_is_for_me()==1) break;
  3561  0F8D  160A  158A  2331  120A  158A  	fcall	_Package_Usart_is_for_me
  3562  0F92  3A01               	xorlw	1
  3563  0F93  1903               	btfsc	3,2
  3564  0F94  2FA3               	goto	l6972
  3565                           
  3566                           ;SlaveLiofilizadorVer1.c: 792:            }
  3567  0F95  3001               	movlw	1
  3568  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0F97  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3570  0F98  1803               	skipnc
  3571  0F99  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3572  0F9A  3000               	movlw	0
  3573  0F9B  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3574  0F9C  3000               	movlw	0
  3575  0F9D  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3576  0F9E  300F               	movlw	15
  3577  0F9F  1903               	skipnz
  3578  0FA0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3579  0FA1  1C03               	skipc
  3580  0FA2  2F35               	goto	l6960
  3581  0FA3                     l6972:	
  3582                           
  3583                           ;SlaveLiofilizadorVer1.c: 793:         if(i<10)
  3584  0FA3  3000               	movlw	0
  3585  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0FA5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3587  0FA6  300A               	movlw	10
  3588  0FA7  1903               	skipnz
  3589  0FA8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3590  0FA9  1C03               	btfss	3,0
  3591  0FAA  0008               	return
  3592                           
  3593                           ;SlaveLiofilizadorVer1.c: 798:         Tensao1 =Temp*0.318296;
  3594  0FAB  303E               	movlw	62
  3595  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0FAD  00AC               	movwf	___flmul@b+3
  3597  0FAE  30A2               	movlw	162
  3598  0FAF  00AB               	movwf	___flmul@b+2
  3599  0FB0  30F7               	movlw	247
  3600  0FB1  00AA               	movwf	___flmul@b+1
  3601  0FB2  30B1               	movlw	177
  3602  0FB3  00A9               	movwf	___flmul@b
  3603  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0FB5  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3605  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0FB7  00B0               	movwf	___flmul@a+3
  3607  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0FB9  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3609  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0FBB  00AF               	movwf	___flmul@a+2
  3611  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0FBD  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3613  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0FBF  00AE               	movwf	___flmul@a+1
  3615  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0FC1  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3617  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0FC3  00AD               	movwf	___flmul@a
  3619  0FC4  120A  118A  23D4  120A  158A  	fcall	___flmul
  3620  0FC9  082C               	movf	?___flmul+3,w
  3621  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0FCB  00A3               	movwf	(_Tensao1+3)^(0+128)
  3623  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FCD  082B               	movf	?___flmul+2,w
  3625  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0FCF  00A2               	movwf	(_Tensao1+2)^(0+128)
  3627  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0FD1  082A               	movf	?___flmul+1,w
  3629  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0FD3  00A1               	movwf	(_Tensao1+1)^(0+128)
  3631  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0FD5  0829               	movf	?___flmul,w
  3633  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0FD7  00A0               	movwf	_Tensao1^(0+128)
  3635                           
  3636                           ;SlaveLiofilizadorVer1.c: 799:         if(Tensao1<15) Tensao1=0;
  3637  0FD8  0823               	movf	(_Tensao1+3)^(0+128),w
  3638  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0FDA  00A3               	movwf	___flge@ff1+3
  3640  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0FDC  0822               	movf	(_Tensao1+2)^(0+128),w
  3642  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0FDE  00A2               	movwf	___flge@ff1+2
  3644  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0FE0  0821               	movf	(_Tensao1+1)^(0+128),w
  3646  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0FE2  00A1               	movwf	___flge@ff1+1
  3648  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0FE4  0820               	movf	_Tensao1^(0+128),w
  3650  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0FE6  00A0               	movwf	___flge@ff1
  3652  0FE7  3041               	movlw	65
  3653  0FE8  00A7               	movwf	___flge@ff2+3
  3654  0FE9  3070               	movlw	112
  3655  0FEA  00A6               	movwf	___flge@ff2+2
  3656  0FEB  3000               	movlw	0
  3657  0FEC  00A5               	movwf	___flge@ff2+1
  3658  0FED  3000               	movlw	0
  3659  0FEE  00A4               	movwf	___flge@ff2
  3660  0FEF  160A  118A  2213  120A  158A  	fcall	___flge
  3661  0FF4  1803               	btfsc	3,0
  3662  0FF5  0008               	return
  3663  0FF6  3000               	movlw	0
  3664  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0FF8  00A3               	movwf	(_Tensao1+3)^(0+128)
  3666  0FF9  3000               	movlw	0
  3667  0FFA  00A2               	movwf	(_Tensao1+2)^(0+128)
  3668  0FFB  3000               	movlw	0
  3669  0FFC  00A1               	movwf	(_Tensao1+1)^(0+128)
  3670  0FFD  3000               	movlw	0
  3671  0FFE  00A0               	movwf	_Tensao1^(0+128)
  3672  0FFF  0008               	return
  3673  1000                     __end_of_MediaPlacaVaccum:	
  3674                           
  3675                           	psect	text3
  3676  1BBF                     __ptext3:	
  3677 ;; *************** function ___flsub *****************
  3678 ;; Defined at:
  3679 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  a               4   62[BANK0 ] void 
  3682 ;;  b               4   66[BANK0 ] void 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  4   62[BANK0 ] void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 300/0
  3691 ;;		On exit  : 300/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       8       0       0       0
  3695 ;;      Locals:         0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0
  3697 ;;      Totals:         0       8       0       0       0
  3698 ;;Total ram usage:        8 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		___fladd
  3703 ;; This function is called by:
  3704 ;;		_MediaPlacaVaccum
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function ___flsub
  3710  1BBF                     ___flsub:	
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3714  1BBF  3080               	movlw	128
  3715  1BC0  06E1               	xorwf	___flsub@a+3,f
  3716  1BC1  0865               	movf	___flsub@b+3,w
  3717  1BC2  00CD               	movwf	___fladd@b+3
  3718  1BC3  0864               	movf	___flsub@b+2,w
  3719  1BC4  00CC               	movwf	___fladd@b+2
  3720  1BC5  0863               	movf	___flsub@b+1,w
  3721  1BC6  00CB               	movwf	___fladd@b+1
  3722  1BC7  0862               	movf	___flsub@b,w
  3723  1BC8  00CA               	movwf	___fladd@b
  3724  1BC9  0861               	movf	___flsub@a+3,w
  3725  1BCA  00D1               	movwf	___fladd@a+3
  3726  1BCB  0860               	movf	___flsub@a+2,w
  3727  1BCC  00D0               	movwf	___fladd@a+2
  3728  1BCD  085F               	movf	___flsub@a+1,w
  3729  1BCE  00CF               	movwf	___fladd@a+1
  3730  1BCF  085E               	movf	___flsub@a,w
  3731  1BD0  00CE               	movwf	___fladd@a
  3732  1BD1  120A  158A  233C   	fcall	___fladd
  3733  1BD4  084D               	movf	?___fladd+3,w
  3734  1BD5  00E1               	movwf	?___flsub+3
  3735  1BD6  084C               	movf	?___fladd+2,w
  3736  1BD7  00E0               	movwf	?___flsub+2
  3737  1BD8  084B               	movf	?___fladd+1,w
  3738  1BD9  00DF               	movwf	?___flsub+1
  3739  1BDA  084A               	movf	?___fladd,w
  3740  1BDB  00DE               	movwf	?___flsub
  3741  1BDC  0008               	return
  3742  1BDD                     __end_of___flsub:	
  3743                           
  3744                           	psect	text4
  3745  0B3C                     __ptext4:	
  3746 ;; *************** function ___fladd *****************
  3747 ;; Defined at:
  3748 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  b               4   42[BANK0 ] void 
  3751 ;;  a               4   46[BANK0 ] void 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  grs             1   61[BANK0 ] unsigned char 
  3754 ;;  bexp            1   60[BANK0 ] unsigned char 
  3755 ;;  aexp            1   59[BANK0 ] unsigned char 
  3756 ;;  signs           1   58[BANK0 ] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  4   42[BANK0 ] unsigned char 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, btemp+1
  3761 ;; Tracked objects:
  3762 ;;		On entry : 300/0
  3763 ;;		On exit  : 300/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         0       8       0       0       0
  3767 ;;      Locals:         0       4       0       0       0
  3768 ;;      Temps:          0       8       0       0       0
  3769 ;;      Totals:         0      20       0       0       0
  3770 ;;Total ram usage:       20 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_MediaPlacaVaccum
  3777 ;;		___flsub
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function ___fladd
  3783  0B3C                     ___fladd:	
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3787  0B3C  084D               	movf	___fladd@b+3,w
  3788  0B3D  3980               	andlw	128
  3789  0B3E  00D2               	movwf	??___fladd
  3790  0B3F  0852               	movf	??___fladd,w
  3791  0B40  00DA               	movwf	___fladd@signs
  3792  0B41  084D               	movf	___fladd@b+3,w
  3793  0B42  00D2               	movwf	??___fladd
  3794  0B43  0752               	addwf	??___fladd,w
  3795  0B44  00D3               	movwf	??___fladd+1
  3796  0B45  0853               	movf	??___fladd+1,w
  3797  0B46  00DC               	movwf	___fladd@bexp
  3798  0B47  1BCC               	btfsc	___fladd@b+2,7
  3799  0B48  145C               	bsf	___fladd@bexp,0
  3800  0B49  085C               	movf	___fladd@bexp,w
  3801  0B4A  1903               	btfsc	3,2
  3802  0B4B  2B5A               	goto	l5902
  3803  0B4C  0A5C               	incf	___fladd@bexp,w
  3804  0B4D  1D03               	btfss	3,2
  3805  0B4E  2B57               	goto	l5898
  3806  0B4F  3000               	movlw	0
  3807  0B50  00CD               	movwf	___fladd@b+3
  3808  0B51  3000               	movlw	0
  3809  0B52  00CC               	movwf	___fladd@b+2
  3810  0B53  3000               	movlw	0
  3811  0B54  00CB               	movwf	___fladd@b+1
  3812  0B55  3000               	movlw	0
  3813  0B56  00CA               	movwf	___fladd@b
  3814  0B57                     l5898:	
  3815  0B57  17CC               	bsf	___fladd@b+2,7
  3816  0B58  01CD               	clrf	___fladd@b+3
  3817  0B59  2B62               	goto	l5904
  3818  0B5A                     l5902:	
  3819  0B5A  3000               	movlw	0
  3820  0B5B  00CD               	movwf	___fladd@b+3
  3821  0B5C  3000               	movlw	0
  3822  0B5D  00CC               	movwf	___fladd@b+2
  3823  0B5E  3000               	movlw	0
  3824  0B5F  00CB               	movwf	___fladd@b+1
  3825  0B60  3000               	movlw	0
  3826  0B61  00CA               	movwf	___fladd@b
  3827  0B62                     l5904:	
  3828  0B62  0851               	movf	___fladd@a+3,w
  3829  0B63  3980               	andlw	128
  3830  0B64  00D2               	movwf	??___fladd
  3831  0B65  0852               	movf	??___fladd,w
  3832  0B66  00DB               	movwf	___fladd@aexp
  3833  0B67  085B               	movf	___fladd@aexp,w
  3834  0B68  065A               	xorwf	___fladd@signs,w
  3835  0B69  1D03               	btfss	3,2
  3836  0B6A  175A               	bsf	___fladd@signs,6
  3837  0B6B  0851               	movf	___fladd@a+3,w
  3838  0B6C  00D2               	movwf	??___fladd
  3839  0B6D  0752               	addwf	??___fladd,w
  3840  0B6E  00D3               	movwf	??___fladd+1
  3841  0B6F  0853               	movf	??___fladd+1,w
  3842  0B70  00DB               	movwf	___fladd@aexp
  3843  0B71  1BD0               	btfsc	___fladd@a+2,7
  3844  0B72  145B               	bsf	___fladd@aexp,0
  3845  0B73  085B               	movf	___fladd@aexp,w
  3846  0B74  1903               	btfsc	3,2
  3847  0B75  2B84               	goto	l5926
  3848  0B76  0A5B               	incf	___fladd@aexp,w
  3849  0B77  1D03               	btfss	3,2
  3850  0B78  2B81               	goto	l5922
  3851  0B79  3000               	movlw	0
  3852  0B7A  00D1               	movwf	___fladd@a+3
  3853  0B7B  3000               	movlw	0
  3854  0B7C  00D0               	movwf	___fladd@a+2
  3855  0B7D  3000               	movlw	0
  3856  0B7E  00CF               	movwf	___fladd@a+1
  3857  0B7F  3000               	movlw	0
  3858  0B80  00CE               	movwf	___fladd@a
  3859  0B81                     l5922:	
  3860  0B81  17D0               	bsf	___fladd@a+2,7
  3861  0B82  01D1               	clrf	___fladd@a+3
  3862  0B83  2B8C               	goto	l1275
  3863  0B84                     l5926:	
  3864  0B84  3000               	movlw	0
  3865  0B85  00D1               	movwf	___fladd@a+3
  3866  0B86  3000               	movlw	0
  3867  0B87  00D0               	movwf	___fladd@a+2
  3868  0B88  3000               	movlw	0
  3869  0B89  00CF               	movwf	___fladd@a+1
  3870  0B8A  3000               	movlw	0
  3871  0B8B  00CE               	movwf	___fladd@a
  3872  0B8C                     l1275:	
  3873  0B8C  085C               	movf	___fladd@bexp,w
  3874  0B8D  025B               	subwf	___fladd@aexp,w
  3875  0B8E  1803               	skipnc
  3876  0B8F  2BD2               	goto	l5962
  3877  0B90  1F5A               	btfss	___fladd@signs,6
  3878  0B91  2B96               	goto	l5932
  3879  0B92  3080               	movlw	128
  3880  0B93  00D2               	movwf	??___fladd
  3881  0B94  0852               	movf	??___fladd,w
  3882  0B95  06DA               	xorwf	___fladd@signs,f
  3883  0B96                     l5932:	
  3884  0B96  085C               	movf	___fladd@bexp,w
  3885  0B97  00D2               	movwf	??___fladd
  3886  0B98  0852               	movf	??___fladd,w
  3887  0B99  00DD               	movwf	___fladd@grs
  3888  0B9A  085B               	movf	___fladd@aexp,w
  3889  0B9B  00D2               	movwf	??___fladd
  3890  0B9C  0852               	movf	??___fladd,w
  3891  0B9D  00DC               	movwf	___fladd@bexp
  3892  0B9E  085D               	movf	___fladd@grs,w
  3893  0B9F  00D2               	movwf	??___fladd
  3894  0BA0  0852               	movf	??___fladd,w
  3895  0BA1  00DB               	movwf	___fladd@aexp
  3896  0BA2  084A               	movf	___fladd@b,w
  3897  0BA3  00D2               	movwf	??___fladd
  3898  0BA4  0852               	movf	??___fladd,w
  3899  0BA5  00DD               	movwf	___fladd@grs
  3900  0BA6  084E               	movf	___fladd@a,w
  3901  0BA7  00D2               	movwf	??___fladd
  3902  0BA8  0852               	movf	??___fladd,w
  3903  0BA9  00CA               	movwf	___fladd@b
  3904  0BAA  085D               	movf	___fladd@grs,w
  3905  0BAB  00D2               	movwf	??___fladd
  3906  0BAC  0852               	movf	??___fladd,w
  3907  0BAD  00CE               	movwf	___fladd@a
  3908  0BAE  084B               	movf	___fladd@b+1,w
  3909  0BAF  00D2               	movwf	??___fladd
  3910  0BB0  0852               	movf	??___fladd,w
  3911  0BB1  00DD               	movwf	___fladd@grs
  3912  0BB2  084F               	movf	___fladd@a+1,w
  3913  0BB3  00D2               	movwf	??___fladd
  3914  0BB4  0852               	movf	??___fladd,w
  3915  0BB5  00CB               	movwf	___fladd@b+1
  3916  0BB6  085D               	movf	___fladd@grs,w
  3917  0BB7  00D2               	movwf	??___fladd
  3918  0BB8  0852               	movf	??___fladd,w
  3919  0BB9  00CF               	movwf	___fladd@a+1
  3920  0BBA  084C               	movf	___fladd@b+2,w
  3921  0BBB  00D2               	movwf	??___fladd
  3922  0BBC  0852               	movf	??___fladd,w
  3923  0BBD  00DD               	movwf	___fladd@grs
  3924  0BBE  0850               	movf	___fladd@a+2,w
  3925  0BBF  00D2               	movwf	??___fladd
  3926  0BC0  0852               	movf	??___fladd,w
  3927  0BC1  00CC               	movwf	___fladd@b+2
  3928  0BC2  085D               	movf	___fladd@grs,w
  3929  0BC3  00D2               	movwf	??___fladd
  3930  0BC4  0852               	movf	??___fladd,w
  3931  0BC5  00D0               	movwf	___fladd@a+2
  3932  0BC6  084D               	movf	___fladd@b+3,w
  3933  0BC7  00D2               	movwf	??___fladd
  3934  0BC8  0852               	movf	??___fladd,w
  3935  0BC9  00DD               	movwf	___fladd@grs
  3936  0BCA  0851               	movf	___fladd@a+3,w
  3937  0BCB  00D2               	movwf	??___fladd
  3938  0BCC  0852               	movf	??___fladd,w
  3939  0BCD  00CD               	movwf	___fladd@b+3
  3940  0BCE  085D               	movf	___fladd@grs,w
  3941  0BCF  00D2               	movwf	??___fladd
  3942  0BD0  0852               	movf	??___fladd,w
  3943  0BD1  00D1               	movwf	___fladd@a+3
  3944  0BD2                     l5962:	
  3945  0BD2  01DD               	clrf	___fladd@grs
  3946  0BD3  085B               	movf	___fladd@aexp,w
  3947  0BD4  00D2               	movwf	??___fladd
  3948  0BD5  01D3               	clrf	??___fladd+1
  3949  0BD6  0853               	movf	??___fladd+1,w
  3950  0BD7  00D5               	movwf	??___fladd+3
  3951  0BD8  085C               	movf	___fladd@bexp,w
  3952  0BD9  0252               	subwf	??___fladd,w
  3953  0BDA  00D4               	movwf	??___fladd+2
  3954  0BDB  1C03               	skipc
  3955  0BDC  03D5               	decf	??___fladd+3,f
  3956  0BDD  0855               	movf	??___fladd+3,w
  3957  0BDE  3A80               	xorlw	128
  3958  0BDF  00FF               	movwf	127
  3959  0BE0  3080               	movlw	128
  3960  0BE1  027F               	subwf	127,w
  3961  0BE2  1D03               	skipz
  3962  0BE3  2BE6               	goto	u5905
  3963  0BE4  301A               	movlw	26
  3964  0BE5  0254               	subwf	??___fladd+2,w
  3965  0BE6                     u5905:	
  3966  0BE6  1C03               	skipc
  3967  0BE7  2C1F               	goto	l5980
  3968  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0BEA  084D               	movf	___fladd@b+3,w
  3971  0BEB  044C               	iorwf	___fladd@b+2,w
  3972  0BEC  044B               	iorwf	___fladd@b+1,w
  3973  0BED  044A               	iorwf	___fladd@b,w
  3974  0BEE  1903               	btfsc	3,2
  3975  0BEF  2BF2               	goto	u5910
  3976  0BF0  3001               	movlw	1
  3977  0BF1  2BF3               	goto	u5920
  3978  0BF2                     u5910:	
  3979  0BF2  3000               	movlw	0
  3980  0BF3                     u5920:	
  3981  0BF3  00D2               	movwf	??___fladd
  3982  0BF4  0852               	movf	??___fladd,w
  3983  0BF5  00DD               	movwf	___fladd@grs
  3984  0BF6  3000               	movlw	0
  3985  0BF7  00CD               	movwf	___fladd@b+3
  3986  0BF8  3000               	movlw	0
  3987  0BF9  00CC               	movwf	___fladd@b+2
  3988  0BFA  3000               	movlw	0
  3989  0BFB  00CB               	movwf	___fladd@b+1
  3990  0BFC  3000               	movlw	0
  3991  0BFD  00CA               	movwf	___fladd@b
  3992  0BFE  085B               	movf	___fladd@aexp,w
  3993  0BFF  00D2               	movwf	??___fladd
  3994  0C00  0852               	movf	??___fladd,w
  3995  0C01  00DC               	movwf	___fladd@bexp
  3996  0C02  2C25               	goto	l1279
  3997  0C03                     l1281:	
  3998  0C03  1C5D               	btfss	___fladd@grs,0
  3999  0C04  2C0E               	goto	l5970
  4000  0C05  085D               	movf	___fladd@grs,w
  4001  0C06  00D2               	movwf	??___fladd
  4002  0C07  1003               	clrc
  4003  0C08  0C52               	rrf	??___fladd,w
  4004  0C09  3801               	iorlw	1
  4005  0C0A  00D3               	movwf	??___fladd+1
  4006  0C0B  0853               	movf	??___fladd+1,w
  4007  0C0C  00DD               	movwf	___fladd@grs
  4008  0C0D  2C10               	goto	l5972
  4009  0C0E                     l5970:	
  4010  0C0E  1003               	clrc
  4011  0C0F  0CDD               	rrf	___fladd@grs,f
  4012  0C10                     l5972:	
  4013  0C10  184A               	btfsc	___fladd@b,0
  4014  0C11  17DD               	bsf	___fladd@grs,7
  4015  0C12  3001               	movlw	1
  4016  0C13  00D2               	movwf	??___fladd
  4017  0C14                     u5955:	
  4018  0C14  0D4D               	rlf	___fladd@b+3,w
  4019  0C15  0CCD               	rrf	___fladd@b+3,f
  4020  0C16  0CCC               	rrf	___fladd@b+2,f
  4021  0C17  0CCB               	rrf	___fladd@b+1,f
  4022  0C18  0CCA               	rrf	___fladd@b,f
  4023  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4024  0C1A  2C14               	goto	u5955
  4025  0C1B  3001               	movlw	1
  4026  0C1C  00D2               	movwf	??___fladd
  4027  0C1D  0852               	movf	??___fladd,w
  4028  0C1E  07DC               	addwf	___fladd@bexp,f
  4029  0C1F                     l5980:	
  4030  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0C21  085B               	movf	___fladd@aexp,w
  4033  0C22  025C               	subwf	___fladd@bexp,w
  4034  0C23  1C03               	skipc
  4035  0C24  2C03               	goto	l1281
  4036  0C25                     l1279:	
  4037  0C25  1B5A               	btfsc	___fladd@signs,6
  4038  0C26  2C66               	goto	l6006
  4039  0C27  085C               	movf	___fladd@bexp,w
  4040  0C28  1D03               	btfss	3,2
  4041  0C29  2C33               	goto	l5988
  4042  0C2A  3000               	movlw	0
  4043  0C2B  00CD               	movwf	?___fladd+3
  4044  0C2C  3000               	movlw	0
  4045  0C2D  00CC               	movwf	?___fladd+2
  4046  0C2E  3000               	movlw	0
  4047  0C2F  00CB               	movwf	?___fladd+1
  4048  0C30  3000               	movlw	0
  4049  0C31  00CA               	movwf	?___fladd
  4050  0C32  0008               	return
  4051  0C33                     l5988:	
  4052  0C33  084E               	movf	___fladd@a,w
  4053  0C34  07CA               	addwf	___fladd@b,f
  4054  0C35  084F               	movf	___fladd@a+1,w
  4055  0C36  1103               	clrz
  4056  0C37  1803               	skipnc
  4057  0C38  3E01               	addlw	1
  4058  0C39  1D03               	btfss	3,2
  4059  0C3A  07CB               	addwf	___fladd@b+1,f
  4060  0C3B  0850               	movf	___fladd@a+2,w
  4061  0C3C  1103               	clrz
  4062  0C3D  1803               	skipnc
  4063  0C3E  3E01               	addlw	1
  4064  0C3F  1D03               	btfss	3,2
  4065  0C40  07CC               	addwf	___fladd@b+2,f
  4066  0C41  0851               	movf	___fladd@a+3,w
  4067  0C42  1103               	clrz
  4068  0C43  1803               	skipnc
  4069  0C44  3E01               	addlw	1
  4070  0C45  1D03               	btfss	3,2
  4071  0C46  07CD               	addwf	___fladd@b+3,f
  4072  0C47  1C4D               	btfss	___fladd@b+3,0
  4073  0C48  2D08               	goto	l6040
  4074  0C49  1C5D               	btfss	___fladd@grs,0
  4075  0C4A  2C54               	goto	l5996
  4076  0C4B  085D               	movf	___fladd@grs,w
  4077  0C4C  00D2               	movwf	??___fladd
  4078  0C4D  1003               	clrc
  4079  0C4E  0C52               	rrf	??___fladd,w
  4080  0C4F  3801               	iorlw	1
  4081  0C50  00D3               	movwf	??___fladd+1
  4082  0C51  0853               	movf	??___fladd+1,w
  4083  0C52  00DD               	movwf	___fladd@grs
  4084  0C53  2C56               	goto	l5998
  4085  0C54                     l5996:	
  4086  0C54  1003               	clrc
  4087  0C55  0CDD               	rrf	___fladd@grs,f
  4088  0C56                     l5998:	
  4089  0C56  184A               	btfsc	___fladd@b,0
  4090  0C57  17DD               	bsf	___fladd@grs,7
  4091  0C58  3001               	movlw	1
  4092  0C59  00D2               	movwf	??___fladd
  4093  0C5A                     u6035:	
  4094  0C5A  0D4D               	rlf	___fladd@b+3,w
  4095  0C5B  0CCD               	rrf	___fladd@b+3,f
  4096  0C5C  0CCC               	rrf	___fladd@b+2,f
  4097  0C5D  0CCB               	rrf	___fladd@b+1,f
  4098  0C5E  0CCA               	rrf	___fladd@b,f
  4099  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4100  0C60  2C5A               	goto	u6035
  4101  0C61  3001               	movlw	1
  4102  0C62  00D2               	movwf	??___fladd
  4103  0C63  0852               	movf	??___fladd,w
  4104  0C64  07DC               	addwf	___fladd@bexp,f
  4105  0C65  2D08               	goto	l6040
  4106  0C66                     l6006:	
  4107  0C66  084D               	movf	___fladd@b+3,w
  4108  0C67  3A80               	xorlw	128
  4109  0C68  00FF               	movwf	127
  4110  0C69  0851               	movf	___fladd@a+3,w
  4111  0C6A  3A80               	xorlw	128
  4112  0C6B  027F               	subwf	127,w
  4113  0C6C  1D03               	skipz
  4114  0C6D  2C78               	goto	u6043
  4115  0C6E  0850               	movf	___fladd@a+2,w
  4116  0C6F  024C               	subwf	___fladd@b+2,w
  4117  0C70  1D03               	skipz
  4118  0C71  2C78               	goto	u6043
  4119  0C72  084F               	movf	___fladd@a+1,w
  4120  0C73  024B               	subwf	___fladd@b+1,w
  4121  0C74  1D03               	skipz
  4122  0C75  2C78               	goto	u6043
  4123  0C76  084E               	movf	___fladd@a,w
  4124  0C77  024A               	subwf	___fladd@b,w
  4125  0C78                     u6043:	
  4126  0C78  1803               	skipnc
  4127  0C79  2CD0               	goto	l6016
  4128  0C7A  30FF               	movlw	255
  4129  0C7B  00D2               	movwf	??___fladd
  4130  0C7C  30FF               	movlw	255
  4131  0C7D  00D3               	movwf	??___fladd+1
  4132  0C7E  30FF               	movlw	255
  4133  0C7F  00D4               	movwf	??___fladd+2
  4134  0C80  30FF               	movlw	255
  4135  0C81  00D5               	movwf	??___fladd+3
  4136  0C82  084E               	movf	___fladd@a,w
  4137  0C83  00D6               	movwf	??___fladd+4
  4138  0C84  084F               	movf	___fladd@a+1,w
  4139  0C85  00D7               	movwf	??___fladd+5
  4140  0C86  0850               	movf	___fladd@a+2,w
  4141  0C87  00D8               	movwf	??___fladd+6
  4142  0C88  0851               	movf	___fladd@a+3,w
  4143  0C89  00D9               	movwf	??___fladd+7
  4144  0C8A  084A               	movf	___fladd@b,w
  4145  0C8B  02D6               	subwf	??___fladd+4,f
  4146  0C8C  084B               	movf	___fladd@b+1,w
  4147  0C8D  1C03               	skipc
  4148  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4149  0C8F  2C91               	goto	u6051
  4150  0C90  2C92               	goto	u6052
  4151  0C91                     u6051:	
  4152  0C91  02D7               	subwf	??___fladd+5,f
  4153  0C92                     u6052:	
  4154  0C92  084C               	movf	___fladd@b+2,w
  4155  0C93  1C03               	skipc
  4156  0C94  0F4C               	incfsz	___fladd@b+2,w
  4157  0C95  2C97               	goto	u6053
  4158  0C96  2C98               	goto	u6054
  4159  0C97                     u6053:	
  4160  0C97  02D8               	subwf	??___fladd+6,f
  4161  0C98                     u6054:	
  4162  0C98  084D               	movf	___fladd@b+3,w
  4163  0C99  1C03               	skipc
  4164  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4165  0C9B  2C9D               	goto	u6055
  4166  0C9C  2C9E               	goto	u6056
  4167  0C9D                     u6055:	
  4168  0C9D  02D9               	subwf	??___fladd+7,f
  4169  0C9E                     u6056:	
  4170  0C9E  0856               	movf	??___fladd+4,w
  4171  0C9F  07D2               	addwf	??___fladd,f
  4172  0CA0  0857               	movf	??___fladd+5,w
  4173  0CA1  1803               	skipnc
  4174  0CA2  0F57               	incfsz	??___fladd+5,w
  4175  0CA3  2CA5               	goto	u6060
  4176  0CA4  2CA6               	goto	u6061
  4177  0CA5                     u6060:	
  4178  0CA5  07D3               	addwf	??___fladd+1,f
  4179  0CA6                     u6061:	
  4180  0CA6  0858               	movf	??___fladd+6,w
  4181  0CA7  1803               	skipnc
  4182  0CA8  0F58               	incfsz	??___fladd+6,w
  4183  0CA9  2CAB               	goto	u6062
  4184  0CAA  2CAC               	goto	u6063
  4185  0CAB                     u6062:	
  4186  0CAB  07D4               	addwf	??___fladd+2,f
  4187  0CAC                     u6063:	
  4188  0CAC  0859               	movf	??___fladd+7,w
  4189  0CAD  1803               	skipnc
  4190  0CAE  0A59               	incf	??___fladd+7,w
  4191  0CAF  07D5               	addwf	??___fladd+3,f
  4192  0CB0  0855               	movf	??___fladd+3,w
  4193  0CB1  00CD               	movwf	___fladd@b+3
  4194  0CB2  0854               	movf	??___fladd+2,w
  4195  0CB3  00CC               	movwf	___fladd@b+2
  4196  0CB4  0853               	movf	??___fladd+1,w
  4197  0CB5  00CB               	movwf	___fladd@b+1
  4198  0CB6  0852               	movf	??___fladd,w
  4199  0CB7  00CA               	movwf	___fladd@b
  4200  0CB8  3080               	movlw	128
  4201  0CB9  00D2               	movwf	??___fladd
  4202  0CBA  0852               	movf	??___fladd,w
  4203  0CBB  06DA               	xorwf	___fladd@signs,f
  4204  0CBC  09DD               	comf	___fladd@grs,f
  4205  0CBD  0ADD               	incf	___fladd@grs,f
  4206  0CBE  085D               	movf	___fladd@grs,w
  4207  0CBF  1D03               	btfss	3,2
  4208  0CC0  2CDE               	goto	l1296
  4209  0CC1  3001               	movlw	1
  4210  0CC2  07CA               	addwf	___fladd@b,f
  4211  0CC3  3000               	movlw	0
  4212  0CC4  1803               	skipnc
  4213  0CC5  3001               	movlw	1
  4214  0CC6  07CB               	addwf	___fladd@b+1,f
  4215  0CC7  3000               	movlw	0
  4216  0CC8  1803               	skipnc
  4217  0CC9  3001               	movlw	1
  4218  0CCA  07CC               	addwf	___fladd@b+2,f
  4219  0CCB  3000               	movlw	0
  4220  0CCC  1803               	skipnc
  4221  0CCD  3001               	movlw	1
  4222  0CCE  07CD               	addwf	___fladd@b+3,f
  4223  0CCF  2CDE               	goto	l1296
  4224  0CD0                     l6016:	
  4225  0CD0  084E               	movf	___fladd@a,w
  4226  0CD1  02CA               	subwf	___fladd@b,f
  4227  0CD2  084F               	movf	___fladd@a+1,w
  4228  0CD3  1C03               	skipc
  4229  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4230  0CD5  02CB               	subwf	___fladd@b+1,f
  4231  0CD6  0850               	movf	___fladd@a+2,w
  4232  0CD7  1C03               	skipc
  4233  0CD8  0F50               	incfsz	___fladd@a+2,w
  4234  0CD9  02CC               	subwf	___fladd@b+2,f
  4235  0CDA  0851               	movf	___fladd@a+3,w
  4236  0CDB  1C03               	skipc
  4237  0CDC  0F51               	incfsz	___fladd@a+3,w
  4238  0CDD  02CD               	subwf	___fladd@b+3,f
  4239  0CDE                     l1296:	
  4240  0CDE  084D               	movf	___fladd@b+3,w
  4241  0CDF  044C               	iorwf	___fladd@b+2,w
  4242  0CE0  044B               	iorwf	___fladd@b+1,w
  4243  0CE1  044A               	iorwf	___fladd@b,w
  4244  0CE2  1D03               	skipz
  4245  0CE3  2D06               	goto	l6038
  4246  0CE4  085D               	movf	___fladd@grs,w
  4247  0CE5  1D03               	btfss	3,2
  4248  0CE6  2D06               	goto	l6038
  4249  0CE7  3000               	movlw	0
  4250  0CE8  00CD               	movwf	?___fladd+3
  4251  0CE9  3000               	movlw	0
  4252  0CEA  00CC               	movwf	?___fladd+2
  4253  0CEB  3000               	movlw	0
  4254  0CEC  00CB               	movwf	?___fladd+1
  4255  0CED  3000               	movlw	0
  4256  0CEE  00CA               	movwf	?___fladd
  4257  0CEF  0008               	return
  4258  0CF0                     l6024:	
  4259  0CF0  3001               	movlw	1
  4260  0CF1  00D2               	movwf	??___fladd
  4261  0CF2                     u6105:	
  4262  0CF2  1003               	clrc
  4263  0CF3  0DCA               	rlf	___fladd@b,f
  4264  0CF4  0DCB               	rlf	___fladd@b+1,f
  4265  0CF5  0DCC               	rlf	___fladd@b+2,f
  4266  0CF6  0DCD               	rlf	___fladd@b+3,f
  4267  0CF7  0BD2               	decfsz	??___fladd,f
  4268  0CF8  2CF2               	goto	u6105
  4269  0CF9  1BDD               	btfsc	___fladd@grs,7
  4270  0CFA  144A               	bsf	___fladd@b,0
  4271  0CFB  1C5D               	btfss	___fladd@grs,0
  4272  0CFC  2CFF               	goto	l6032
  4273  0CFD  1403               	setc
  4274  0CFE  2D00               	goto	L3
  4275  0CFF                     l6032:	
  4276  0CFF  1003               	clrc
  4277  0D00                     L3:	
  4278  0D00  0DDD               	rlf	___fladd@grs,f
  4279  0D01  085C               	movf	___fladd@bexp,w
  4280  0D02  1903               	btfsc	3,2
  4281  0D03  2D06               	goto	l6038
  4282  0D04  3001               	movlw	1
  4283  0D05  02DC               	subwf	___fladd@bexp,f
  4284  0D06                     l6038:	
  4285  0D06  1FCC               	btfss	___fladd@b+2,7
  4286  0D07  2CF0               	goto	l6024
  4287  0D08                     l6040:	
  4288  0D08  01DB               	clrf	___fladd@aexp
  4289  0D09  1FDD               	btfss	___fladd@grs,7
  4290  0D0A  2D13               	goto	l6050
  4291  0D0B  085D               	movf	___fladd@grs,w
  4292  0D0C  397F               	andlw	127
  4293  0D0D  1903               	btfsc	3,2
  4294  0D0E  184A               	btfsc	___fladd@b,0
  4295  0D0F  2D11               	goto	l6046
  4296  0D10  2D13               	goto	l6050
  4297  0D11                     l6046:	
  4298  0D11  01DB               	clrf	___fladd@aexp
  4299  0D12  0ADB               	incf	___fladd@aexp,f
  4300  0D13                     l6050:	
  4301  0D13  085B               	movf	___fladd@aexp,w
  4302  0D14  1903               	btfsc	3,2
  4303  0D15  2D46               	goto	l1309
  4304  0D16  3001               	movlw	1
  4305  0D17  07CA               	addwf	___fladd@b,f
  4306  0D18  3000               	movlw	0
  4307  0D19  1803               	skipnc
  4308  0D1A  3001               	movlw	1
  4309  0D1B  07CB               	addwf	___fladd@b+1,f
  4310  0D1C  3000               	movlw	0
  4311  0D1D  1803               	skipnc
  4312  0D1E  3001               	movlw	1
  4313  0D1F  07CC               	addwf	___fladd@b+2,f
  4314  0D20  3000               	movlw	0
  4315  0D21  1803               	skipnc
  4316  0D22  3001               	movlw	1
  4317  0D23  07CD               	addwf	___fladd@b+3,f
  4318  0D24  1C4D               	btfss	___fladd@b+3,0
  4319  0D25  2D46               	goto	l1309
  4320  0D26  084A               	movf	___fladd@b,w
  4321  0D27  00D2               	movwf	??___fladd
  4322  0D28  084B               	movf	___fladd@b+1,w
  4323  0D29  00D3               	movwf	??___fladd+1
  4324  0D2A  084C               	movf	___fladd@b+2,w
  4325  0D2B  00D4               	movwf	??___fladd+2
  4326  0D2C  084D               	movf	___fladd@b+3,w
  4327  0D2D  00D5               	movwf	??___fladd+3
  4328  0D2E  3001               	movlw	1
  4329  0D2F  00D6               	movwf	??___fladd+4
  4330  0D30                     u6205:	
  4331  0D30  0D55               	rlf	??___fladd+3,w
  4332  0D31  0CD5               	rrf	??___fladd+3,f
  4333  0D32  0CD4               	rrf	??___fladd+2,f
  4334  0D33  0CD3               	rrf	??___fladd+1,f
  4335  0D34  0CD2               	rrf	??___fladd,f
  4336  0D35  0BD6               	decfsz	??___fladd+4,f
  4337  0D36  2D30               	goto	u6205
  4338  0D37  0855               	movf	??___fladd+3,w
  4339  0D38  00CD               	movwf	___fladd@b+3
  4340  0D39  0854               	movf	??___fladd+2,w
  4341  0D3A  00CC               	movwf	___fladd@b+2
  4342  0D3B  0853               	movf	??___fladd+1,w
  4343  0D3C  00CB               	movwf	___fladd@b+1
  4344  0D3D  0852               	movf	??___fladd,w
  4345  0D3E  00CA               	movwf	___fladd@b
  4346  0D3F  0A5C               	incf	___fladd@bexp,w
  4347  0D40  1903               	btfsc	3,2
  4348  0D41  2D46               	goto	l1309
  4349  0D42  3001               	movlw	1
  4350  0D43  00D2               	movwf	??___fladd
  4351  0D44  0852               	movf	??___fladd,w
  4352  0D45  07DC               	addwf	___fladd@bexp,f
  4353  0D46                     l1309:	
  4354  0D46  0A5C               	incf	___fladd@bexp,w
  4355  0D47  1D03               	btfss	3,2
  4356  0D48  085C               	movf	___fladd@bexp,w
  4357  0D49  1D03               	btfss	3,2
  4358  0D4A  2D56               	goto	l6068
  4359  0D4B  3000               	movlw	0
  4360  0D4C  00CD               	movwf	___fladd@b+3
  4361  0D4D  3000               	movlw	0
  4362  0D4E  00CC               	movwf	___fladd@b+2
  4363  0D4F  3000               	movlw	0
  4364  0D50  00CB               	movwf	___fladd@b+1
  4365  0D51  3000               	movlw	0
  4366  0D52  00CA               	movwf	___fladd@b
  4367  0D53  085C               	movf	___fladd@bexp,w
  4368  0D54  1903               	btfsc	3,2
  4369  0D55  01DA               	clrf	___fladd@signs
  4370  0D56                     l6068:	
  4371  0D56  1C5C               	btfss	___fladd@bexp,0
  4372  0D57  2D5A               	goto	l6072
  4373  0D58  17CC               	bsf	___fladd@b+2,7
  4374  0D59  2D5E               	goto	l1317
  4375  0D5A                     l6072:	
  4376  0D5A  307F               	movlw	127
  4377  0D5B  00D2               	movwf	??___fladd
  4378  0D5C  0852               	movf	??___fladd,w
  4379  0D5D  05CC               	andwf	___fladd@b+2,f
  4380  0D5E                     l1317:	
  4381  0D5E  085C               	movf	___fladd@bexp,w
  4382  0D5F  00D2               	movwf	??___fladd
  4383  0D60  1003               	clrc
  4384  0D61  0C52               	rrf	??___fladd,w
  4385  0D62  00D3               	movwf	??___fladd+1
  4386  0D63  0853               	movf	??___fladd+1,w
  4387  0D64  00CD               	movwf	___fladd@b+3
  4388  0D65  1FDA               	btfss	___fladd@signs,7
  4389  0D66  0008               	return
  4390  0D67  17CD               	bsf	___fladd@b+3,7
  4391  0D68  0008               	return
  4392  0D69                     __end_of___fladd:	
  4393                           
  4394                           	psect	text5
  4395  1213                     __ptext5:	
  4396 ;; *************** function ___flge *****************
  4397 ;; Defined at:
  4398 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  ff1             4    0[BANK0 ] unsigned char 
  4401 ;;  ff2             4    4[BANK0 ] unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 300/0
  4410 ;;		On exit  : 300/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       8       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       4       0       0       0
  4416 ;;      Totals:         0      12       0       0       0
  4417 ;;Total ram usage:       12 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_MediaPlacaVaccum
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function ___flge
  4429  1213                     ___flge:	
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4433  1213  3000               	movlw	0
  4434  1214  0520               	andwf	___flge@ff1,w
  4435  1215  00A8               	movwf	??___flge
  4436  1216  3000               	movlw	0
  4437  1217  0521               	andwf	___flge@ff1+1,w
  4438  1218  00A9               	movwf	??___flge+1
  4439  1219  3080               	movlw	128
  4440  121A  0522               	andwf	___flge@ff1+2,w
  4441  121B  00AA               	movwf	??___flge+2
  4442  121C  307F               	movlw	127
  4443  121D  0523               	andwf	___flge@ff1+3,w
  4444  121E  00AB               	movwf	??___flge+3
  4445  121F  082B               	movf	??___flge+3,w
  4446  1220  042A               	iorwf	??___flge+2,w
  4447  1221  0429               	iorwf	??___flge+1,w
  4448  1222  0428               	iorwf	??___flge,w
  4449  1223  1D03               	skipz
  4450  1224  2A2D               	goto	l1156
  4451  1225  3000               	movlw	0
  4452  1226  00A3               	movwf	___flge@ff1+3
  4453  1227  3000               	movlw	0
  4454  1228  00A2               	movwf	___flge@ff1+2
  4455  1229  3000               	movlw	0
  4456  122A  00A1               	movwf	___flge@ff1+1
  4457  122B  3000               	movlw	0
  4458  122C  00A0               	movwf	___flge@ff1
  4459  122D                     l1156:	
  4460  122D  3000               	movlw	0
  4461  122E  0524               	andwf	___flge@ff2,w
  4462  122F  00A8               	movwf	??___flge
  4463  1230  3000               	movlw	0
  4464  1231  0525               	andwf	___flge@ff2+1,w
  4465  1232  00A9               	movwf	??___flge+1
  4466  1233  3080               	movlw	128
  4467  1234  0526               	andwf	___flge@ff2+2,w
  4468  1235  00AA               	movwf	??___flge+2
  4469  1236  307F               	movlw	127
  4470  1237  0527               	andwf	___flge@ff2+3,w
  4471  1238  00AB               	movwf	??___flge+3
  4472  1239  082B               	movf	??___flge+3,w
  4473  123A  042A               	iorwf	??___flge+2,w
  4474  123B  0429               	iorwf	??___flge+1,w
  4475  123C  0428               	iorwf	??___flge,w
  4476  123D  1D03               	skipz
  4477  123E  2A47               	goto	l6678
  4478  123F  3000               	movlw	0
  4479  1240  00A7               	movwf	___flge@ff2+3
  4480  1241  3000               	movlw	0
  4481  1242  00A6               	movwf	___flge@ff2+2
  4482  1243  3000               	movlw	0
  4483  1244  00A5               	movwf	___flge@ff2+1
  4484  1245  3000               	movlw	0
  4485  1246  00A4               	movwf	___flge@ff2
  4486  1247                     l6678:	
  4487  1247  1FA3               	btfss	___flge@ff1+3,7
  4488  1248  2A6D               	goto	l6682
  4489  1249  3000               	movlw	0
  4490  124A  00A8               	movwf	??___flge
  4491  124B  3000               	movlw	0
  4492  124C  00A9               	movwf	??___flge+1
  4493  124D  3000               	movlw	0
  4494  124E  00AA               	movwf	??___flge+2
  4495  124F  3080               	movlw	128
  4496  1250  00AB               	movwf	??___flge+3
  4497  1251  0820               	movf	___flge@ff1,w
  4498  1252  02A8               	subwf	??___flge,f
  4499  1253  0821               	movf	___flge@ff1+1,w
  4500  1254  1C03               	skipc
  4501  1255  0F21               	incfsz	___flge@ff1+1,w
  4502  1256  2A58               	goto	u7141
  4503  1257  2A59               	goto	u7142
  4504  1258                     u7141:	
  4505  1258  02A9               	subwf	??___flge+1,f
  4506  1259                     u7142:	
  4507  1259  0822               	movf	___flge@ff1+2,w
  4508  125A  1C03               	skipc
  4509  125B  0F22               	incfsz	___flge@ff1+2,w
  4510  125C  2A5E               	goto	u7143
  4511  125D  2A5F               	goto	u7144
  4512  125E                     u7143:	
  4513  125E  02AA               	subwf	??___flge+2,f
  4514  125F                     u7144:	
  4515  125F  0823               	movf	___flge@ff1+3,w
  4516  1260  1C03               	skipc
  4517  1261  0F23               	incfsz	___flge@ff1+3,w
  4518  1262  2A64               	goto	u7145
  4519  1263  2A65               	goto	u7146
  4520  1264                     u7145:	
  4521  1264  02AB               	subwf	??___flge+3,f
  4522  1265                     u7146:	
  4523  1265  082B               	movf	??___flge+3,w
  4524  1266  00A3               	movwf	___flge@ff1+3
  4525  1267  082A               	movf	??___flge+2,w
  4526  1268  00A2               	movwf	___flge@ff1+2
  4527  1269  0829               	movf	??___flge+1,w
  4528  126A  00A1               	movwf	___flge@ff1+1
  4529  126B  0828               	movf	??___flge,w
  4530  126C  00A0               	movwf	___flge@ff1
  4531  126D                     l6682:	
  4532  126D  1FA7               	btfss	___flge@ff2+3,7
  4533  126E  2A93               	goto	l1159
  4534  126F  3000               	movlw	0
  4535  1270  00A8               	movwf	??___flge
  4536  1271  3000               	movlw	0
  4537  1272  00A9               	movwf	??___flge+1
  4538  1273  3000               	movlw	0
  4539  1274  00AA               	movwf	??___flge+2
  4540  1275  3080               	movlw	128
  4541  1276  00AB               	movwf	??___flge+3
  4542  1277  0824               	movf	___flge@ff2,w
  4543  1278  02A8               	subwf	??___flge,f
  4544  1279  0825               	movf	___flge@ff2+1,w
  4545  127A  1C03               	skipc
  4546  127B  0F25               	incfsz	___flge@ff2+1,w
  4547  127C  2A7E               	goto	u7161
  4548  127D  2A7F               	goto	u7162
  4549  127E                     u7161:	
  4550  127E  02A9               	subwf	??___flge+1,f
  4551  127F                     u7162:	
  4552  127F  0826               	movf	___flge@ff2+2,w
  4553  1280  1C03               	skipc
  4554  1281  0F26               	incfsz	___flge@ff2+2,w
  4555  1282  2A84               	goto	u7163
  4556  1283  2A85               	goto	u7164
  4557  1284                     u7163:	
  4558  1284  02AA               	subwf	??___flge+2,f
  4559  1285                     u7164:	
  4560  1285  0827               	movf	___flge@ff2+3,w
  4561  1286  1C03               	skipc
  4562  1287  0F27               	incfsz	___flge@ff2+3,w
  4563  1288  2A8A               	goto	u7165
  4564  1289  2A8B               	goto	u7166
  4565  128A                     u7165:	
  4566  128A  02AB               	subwf	??___flge+3,f
  4567  128B                     u7166:	
  4568  128B  082B               	movf	??___flge+3,w
  4569  128C  00A7               	movwf	___flge@ff2+3
  4570  128D  082A               	movf	??___flge+2,w
  4571  128E  00A6               	movwf	___flge@ff2+2
  4572  128F  0829               	movf	??___flge+1,w
  4573  1290  00A5               	movwf	___flge@ff2+1
  4574  1291  0828               	movf	??___flge,w
  4575  1292  00A4               	movwf	___flge@ff2
  4576  1293                     l1159:	
  4577  1293  3080               	movlw	128
  4578  1294  06A3               	xorwf	___flge@ff1+3,f
  4579  1295  3080               	movlw	128
  4580  1296  06A7               	xorwf	___flge@ff2+3,f
  4581  1297  0827               	movf	___flge@ff2+3,w
  4582  1298  0223               	subwf	___flge@ff1+3,w
  4583  1299  1D03               	skipz
  4584  129A  0008               	return
  4585  129B  0826               	movf	___flge@ff2+2,w
  4586  129C  0222               	subwf	___flge@ff1+2,w
  4587  129D  1D03               	skipz
  4588  129E  0008               	return
  4589  129F  0825               	movf	___flge@ff2+1,w
  4590  12A0  0221               	subwf	___flge@ff1+1,w
  4591  12A1  1D03               	skipz
  4592  12A2  0008               	return
  4593  12A3  0824               	movf	___flge@ff2,w
  4594  12A4  0220               	subwf	___flge@ff1,w
  4595  12A5  0008               	return
  4596  12A6                     __end_of___flge:	
  4597                           
  4598                           	psect	text6
  4599  099B                     __ptext6:	
  4600 ;; *************** function ___fldiv *****************
  4601 ;; Defined at:
  4602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  a               4   33[BANK0 ] unsigned char 
  4605 ;;  b               4   37[BANK0 ] unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  grs             4   53[BANK0 ] unsigned long 
  4608 ;;  rem             4   46[BANK0 ] unsigned long 
  4609 ;;  new_exp         2   51[BANK0 ] int 
  4610 ;;  aexp            1   58[BANK0 ] unsigned char 
  4611 ;;  bexp            1   57[BANK0 ] unsigned char 
  4612 ;;  sign            1   50[BANK0 ] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  4   33[BANK0 ] unsigned char 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, btemp+1
  4617 ;; Tracked objects:
  4618 ;;		On entry : 300/0
  4619 ;;		On exit  : 300/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       8       0       0       0
  4623 ;;      Locals:         0      13       0       0       0
  4624 ;;      Temps:          0       5       0       0       0
  4625 ;;      Totals:         0      26       0       0       0
  4626 ;;Total ram usage:       26 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_MediaPlacaVaccum
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           
  4637                           ;psect for function ___fldiv
  4638  099B                     ___fldiv:	
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4642  099B  0848               	movf	___fldiv@b+3,w
  4643  099C  3980               	andlw	128
  4644  099D  00C9               	movwf	??___fldiv
  4645  099E  0849               	movf	??___fldiv,w
  4646  099F  00D2               	movwf	___fldiv@sign
  4647  09A0  0848               	movf	___fldiv@b+3,w
  4648  09A1  00C9               	movwf	??___fldiv
  4649  09A2  0749               	addwf	??___fldiv,w
  4650  09A3  00CA               	movwf	??___fldiv+1
  4651  09A4  084A               	movf	??___fldiv+1,w
  4652  09A5  00D9               	movwf	___fldiv@bexp
  4653  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4654  09A7  1459               	bsf	___fldiv@bexp,0
  4655  09A8  0859               	movf	___fldiv@bexp,w
  4656  09A9  1903               	btfsc	3,2
  4657  09AA  29B9               	goto	l6716
  4658  09AB  0A59               	incf	___fldiv@bexp,w
  4659  09AC  1D03               	btfss	3,2
  4660  09AD  29B6               	goto	l6712
  4661  09AE  3000               	movlw	0
  4662  09AF  00C8               	movwf	___fldiv@b+3
  4663  09B0  3000               	movlw	0
  4664  09B1  00C7               	movwf	___fldiv@b+2
  4665  09B2  3000               	movlw	0
  4666  09B3  00C6               	movwf	___fldiv@b+1
  4667  09B4  3000               	movlw	0
  4668  09B5  00C5               	movwf	___fldiv@b
  4669  09B6                     l6712:	
  4670  09B6  17C7               	bsf	___fldiv@b+2,7
  4671  09B7  01C8               	clrf	___fldiv@b+3
  4672  09B8  29C1               	goto	l6718
  4673  09B9                     l6716:	
  4674  09B9  3000               	movlw	0
  4675  09BA  00C8               	movwf	___fldiv@b+3
  4676  09BB  3000               	movlw	0
  4677  09BC  00C7               	movwf	___fldiv@b+2
  4678  09BD  3000               	movlw	0
  4679  09BE  00C6               	movwf	___fldiv@b+1
  4680  09BF  3000               	movlw	0
  4681  09C0  00C5               	movwf	___fldiv@b
  4682  09C1                     l6718:	
  4683  09C1  0844               	movf	___fldiv@a+3,w
  4684  09C2  3980               	andlw	128
  4685  09C3  00C9               	movwf	??___fldiv
  4686  09C4  0849               	movf	??___fldiv,w
  4687  09C5  06D2               	xorwf	___fldiv@sign,f
  4688  09C6  0844               	movf	___fldiv@a+3,w
  4689  09C7  00C9               	movwf	??___fldiv
  4690  09C8  0749               	addwf	??___fldiv,w
  4691  09C9  00CA               	movwf	??___fldiv+1
  4692  09CA  084A               	movf	??___fldiv+1,w
  4693  09CB  00DA               	movwf	___fldiv@aexp
  4694  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4695  09CD  145A               	bsf	___fldiv@aexp,0
  4696  09CE  085A               	movf	___fldiv@aexp,w
  4697  09CF  1903               	btfsc	3,2
  4698  09D0  29DF               	goto	l6736
  4699  09D1  0A5A               	incf	___fldiv@aexp,w
  4700  09D2  1D03               	btfss	3,2
  4701  09D3  29DC               	goto	l6732
  4702  09D4  3000               	movlw	0
  4703  09D5  00C4               	movwf	___fldiv@a+3
  4704  09D6  3000               	movlw	0
  4705  09D7  00C3               	movwf	___fldiv@a+2
  4706  09D8  3000               	movlw	0
  4707  09D9  00C2               	movwf	___fldiv@a+1
  4708  09DA  3000               	movlw	0
  4709  09DB  00C1               	movwf	___fldiv@a
  4710  09DC                     l6732:	
  4711  09DC  17C3               	bsf	___fldiv@a+2,7
  4712  09DD  01C4               	clrf	___fldiv@a+3
  4713  09DE  29E7               	goto	l1331
  4714  09DF                     l6736:	
  4715  09DF  3000               	movlw	0
  4716  09E0  00C4               	movwf	___fldiv@a+3
  4717  09E1  3000               	movlw	0
  4718  09E2  00C3               	movwf	___fldiv@a+2
  4719  09E3  3000               	movlw	0
  4720  09E4  00C2               	movwf	___fldiv@a+1
  4721  09E5  3000               	movlw	0
  4722  09E6  00C1               	movwf	___fldiv@a
  4723  09E7                     l1331:	
  4724  09E7  0844               	movf	___fldiv@a+3,w
  4725  09E8  0443               	iorwf	___fldiv@a+2,w
  4726  09E9  0442               	iorwf	___fldiv@a+1,w
  4727  09EA  0441               	iorwf	___fldiv@a,w
  4728  09EB  1D03               	skipz
  4729  09EC  2A06               	goto	l6746
  4730  09ED  3000               	movlw	0
  4731  09EE  00C8               	movwf	___fldiv@b+3
  4732  09EF  3000               	movlw	0
  4733  09F0  00C7               	movwf	___fldiv@b+2
  4734  09F1  3000               	movlw	0
  4735  09F2  00C6               	movwf	___fldiv@b+1
  4736  09F3  3000               	movlw	0
  4737  09F4  00C5               	movwf	___fldiv@b
  4738  09F5  3080               	movlw	128
  4739  09F6  04C7               	iorwf	___fldiv@b+2,f
  4740  09F7  307F               	movlw	127
  4741  09F8  04C8               	iorwf	___fldiv@b+3,f
  4742  09F9                     L5:	
  4743  09F9  0852               	movf	___fldiv@sign,w
  4744  09FA  00C9               	movwf	??___fldiv
  4745  09FB  0849               	movf	??___fldiv,w
  4746  09FC  04C8               	iorwf	___fldiv@b+3,f
  4747  09FD  0848               	movf	___fldiv@b+3,w
  4748  09FE  00C4               	movwf	?___fldiv+3
  4749  09FF  0847               	movf	___fldiv@b+2,w
  4750  0A00  00C3               	movwf	?___fldiv+2
  4751  0A01  0846               	movf	___fldiv@b+1,w
  4752  0A02  00C2               	movwf	?___fldiv+1
  4753  0A03  0845               	movf	___fldiv@b,w
  4754  0A04  00C1               	movwf	?___fldiv
  4755  0A05  0008               	return
  4756  0A06                     l6746:	
  4757  0A06  0859               	movf	___fldiv@bexp,w
  4758  0A07  1D03               	btfss	3,2
  4759  0A08  2A12               	goto	l6752
  4760  0A09  3000               	movlw	0
  4761  0A0A  00C4               	movwf	?___fldiv+3
  4762  0A0B  3000               	movlw	0
  4763  0A0C  00C3               	movwf	?___fldiv+2
  4764  0A0D  3000               	movlw	0
  4765  0A0E  00C2               	movwf	?___fldiv+1
  4766  0A0F  3000               	movlw	0
  4767  0A10  00C1               	movwf	?___fldiv
  4768  0A11  0008               	return
  4769  0A12                     l6752:	
  4770  0A12  0859               	movf	___fldiv@bexp,w
  4771  0A13  00C9               	movwf	??___fldiv
  4772  0A14  01CA               	clrf	??___fldiv+1
  4773  0A15  084A               	movf	??___fldiv+1,w
  4774  0A16  00CC               	movwf	??___fldiv+3
  4775  0A17  085A               	movf	___fldiv@aexp,w
  4776  0A18  0249               	subwf	??___fldiv,w
  4777  0A19  00CB               	movwf	??___fldiv+2
  4778  0A1A  1C03               	skipc
  4779  0A1B  03CC               	decf	??___fldiv+3,f
  4780  0A1C  084B               	movf	??___fldiv+2,w
  4781  0A1D  3E7F               	addlw	127
  4782  0A1E  00D3               	movwf	___fldiv@new_exp
  4783  0A1F  084C               	movf	??___fldiv+3,w
  4784  0A20  1803               	skipnc
  4785  0A21  3E01               	addlw	1
  4786  0A22  3E00               	addlw	0
  4787  0A23  00D4               	movwf	___fldiv@new_exp+1
  4788  0A24  0848               	movf	___fldiv@b+3,w
  4789  0A25  00D1               	movwf	___fldiv@rem+3
  4790  0A26  0847               	movf	___fldiv@b+2,w
  4791  0A27  00D0               	movwf	___fldiv@rem+2
  4792  0A28  0846               	movf	___fldiv@b+1,w
  4793  0A29  00CF               	movwf	___fldiv@rem+1
  4794  0A2A  0845               	movf	___fldiv@b,w
  4795  0A2B  00CE               	movwf	___fldiv@rem
  4796  0A2C  3000               	movlw	0
  4797  0A2D  00C8               	movwf	___fldiv@b+3
  4798  0A2E  3000               	movlw	0
  4799  0A2F  00C7               	movwf	___fldiv@b+2
  4800  0A30  3000               	movlw	0
  4801  0A31  00C6               	movwf	___fldiv@b+1
  4802  0A32  3000               	movlw	0
  4803  0A33  00C5               	movwf	___fldiv@b
  4804  0A34  3000               	movlw	0
  4805  0A35  00D8               	movwf	___fldiv@grs+3
  4806  0A36  3000               	movlw	0
  4807  0A37  00D7               	movwf	___fldiv@grs+2
  4808  0A38  3000               	movlw	0
  4809  0A39  00D6               	movwf	___fldiv@grs+1
  4810  0A3A  3000               	movlw	0
  4811  0A3B  00D5               	movwf	___fldiv@grs
  4812  0A3C  01DA               	clrf	___fldiv@aexp
  4813  0A3D                     l6780:	
  4814  0A3D  301A               	movlw	26
  4815  0A3E  025A               	subwf	___fldiv@aexp,w
  4816  0A3F  1803               	btfsc	3,0
  4817  0A40  2A85               	goto	l6782
  4818  0A41  085A               	movf	___fldiv@aexp,w
  4819  0A42  1903               	btfsc	3,2
  4820  0A43  2A61               	goto	l6772
  4821  0A44  3001               	movlw	1
  4822  0A45  00C9               	movwf	??___fldiv
  4823  0A46                     u7275:	
  4824  0A46  1003               	clrc
  4825  0A47  0DCE               	rlf	___fldiv@rem,f
  4826  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4827  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4828  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4829  0A4B  0BC9               	decfsz	??___fldiv,f
  4830  0A4C  2A46               	goto	u7275
  4831  0A4D  3001               	movlw	1
  4832  0A4E  00C9               	movwf	??___fldiv
  4833  0A4F                     u7285:	
  4834  0A4F  1003               	clrc
  4835  0A50  0DC5               	rlf	___fldiv@b,f
  4836  0A51  0DC6               	rlf	___fldiv@b+1,f
  4837  0A52  0DC7               	rlf	___fldiv@b+2,f
  4838  0A53  0DC8               	rlf	___fldiv@b+3,f
  4839  0A54  0BC9               	decfsz	??___fldiv,f
  4840  0A55  2A4F               	goto	u7285
  4841  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4842  0A57  1445               	bsf	___fldiv@b,0
  4843  0A58  3001               	movlw	1
  4844  0A59  00C9               	movwf	??___fldiv
  4845  0A5A                     u7305:	
  4846  0A5A  1003               	clrc
  4847  0A5B  0DD5               	rlf	___fldiv@grs,f
  4848  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4849  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4850  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4851  0A5F  0BC9               	decfsz	??___fldiv,f
  4852  0A60  2A5A               	goto	u7305
  4853  0A61                     l6772:	
  4854  0A61  0844               	movf	___fldiv@a+3,w
  4855  0A62  0251               	subwf	___fldiv@rem+3,w
  4856  0A63  1D03               	skipz
  4857  0A64  2A6F               	goto	u7315
  4858  0A65  0843               	movf	___fldiv@a+2,w
  4859  0A66  0250               	subwf	___fldiv@rem+2,w
  4860  0A67  1D03               	skipz
  4861  0A68  2A6F               	goto	u7315
  4862  0A69  0842               	movf	___fldiv@a+1,w
  4863  0A6A  024F               	subwf	___fldiv@rem+1,w
  4864  0A6B  1D03               	skipz
  4865  0A6C  2A6F               	goto	u7315
  4866  0A6D  0841               	movf	___fldiv@a,w
  4867  0A6E  024E               	subwf	___fldiv@rem,w
  4868  0A6F                     u7315:	
  4869  0A6F  1C03               	skipc
  4870  0A70  2A80               	goto	l6778
  4871  0A71  1758               	bsf	___fldiv@grs+3,6
  4872  0A72  0841               	movf	___fldiv@a,w
  4873  0A73  02CE               	subwf	___fldiv@rem,f
  4874  0A74  0842               	movf	___fldiv@a+1,w
  4875  0A75  1C03               	skipc
  4876  0A76  0F42               	incfsz	___fldiv@a+1,w
  4877  0A77  02CF               	subwf	___fldiv@rem+1,f
  4878  0A78  0843               	movf	___fldiv@a+2,w
  4879  0A79  1C03               	skipc
  4880  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4881  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4882  0A7C  0844               	movf	___fldiv@a+3,w
  4883  0A7D  1C03               	skipc
  4884  0A7E  0F44               	incfsz	___fldiv@a+3,w
  4885  0A7F  02D1               	subwf	___fldiv@rem+3,f
  4886  0A80                     l6778:	
  4887  0A80  3001               	movlw	1
  4888  0A81  00C9               	movwf	??___fldiv
  4889  0A82  0849               	movf	??___fldiv,w
  4890  0A83  07DA               	addwf	___fldiv@aexp,f
  4891  0A84  2A3D               	goto	l6780
  4892  0A85                     l6782:	
  4893  0A85  0851               	movf	___fldiv@rem+3,w
  4894  0A86  0450               	iorwf	___fldiv@rem+2,w
  4895  0A87  044F               	iorwf	___fldiv@rem+1,w
  4896  0A88  044E               	iorwf	___fldiv@rem,w
  4897  0A89  1D03               	btfss	3,2
  4898  0A8A  1455               	bsf	___fldiv@grs,0
  4899  0A8B                     l6796:	
  4900  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  4901  0A8C  2AA8               	goto	l6798
  4902  0A8D  3001               	movlw	1
  4903  0A8E  00C9               	movwf	??___fldiv
  4904  0A8F                     u7345:	
  4905  0A8F  1003               	clrc
  4906  0A90  0DC5               	rlf	___fldiv@b,f
  4907  0A91  0DC6               	rlf	___fldiv@b+1,f
  4908  0A92  0DC7               	rlf	___fldiv@b+2,f
  4909  0A93  0DC8               	rlf	___fldiv@b+3,f
  4910  0A94  0BC9               	decfsz	??___fldiv,f
  4911  0A95  2A8F               	goto	u7345
  4912  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  4913  0A97  1445               	bsf	___fldiv@b,0
  4914  0A98  3001               	movlw	1
  4915  0A99  00C9               	movwf	??___fldiv
  4916  0A9A                     u7365:	
  4917  0A9A  1003               	clrc
  4918  0A9B  0DD5               	rlf	___fldiv@grs,f
  4919  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  4920  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  4921  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  4922  0A9F  0BC9               	decfsz	??___fldiv,f
  4923  0AA0  2A9A               	goto	u7365
  4924  0AA1  30FF               	movlw	255
  4925  0AA2  07D3               	addwf	___fldiv@new_exp,f
  4926  0AA3  1803               	skipnc
  4927  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  4928  0AA5  30FF               	movlw	255
  4929  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  4930  0AA7  2A8B               	goto	l6796
  4931  0AA8                     l6798:	
  4932  0AA8  01DA               	clrf	___fldiv@aexp
  4933  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  4934  0AAA  2AC1               	goto	l6808
  4935  0AAB  30FF               	movlw	255
  4936  0AAC  0555               	andwf	___fldiv@grs,w
  4937  0AAD  00C9               	movwf	??___fldiv
  4938  0AAE  30FF               	movlw	255
  4939  0AAF  0556               	andwf	___fldiv@grs+1,w
  4940  0AB0  00CA               	movwf	??___fldiv+1
  4941  0AB1  30FF               	movlw	255
  4942  0AB2  0557               	andwf	___fldiv@grs+2,w
  4943  0AB3  00CB               	movwf	??___fldiv+2
  4944  0AB4  307F               	movlw	127
  4945  0AB5  0558               	andwf	___fldiv@grs+3,w
  4946  0AB6  00CC               	movwf	??___fldiv+3
  4947  0AB7  084C               	movf	??___fldiv+3,w
  4948  0AB8  044B               	iorwf	??___fldiv+2,w
  4949  0AB9  044A               	iorwf	??___fldiv+1,w
  4950  0ABA  0449               	iorwf	??___fldiv,w
  4951  0ABB  1903               	skipnz
  4952  0ABC  1845               	btfsc	___fldiv@b,0
  4953  0ABD  2ABF               	goto	l6804
  4954  0ABE  2AC1               	goto	l6808
  4955  0ABF                     l6804:	
  4956  0ABF  01DA               	clrf	___fldiv@aexp
  4957  0AC0  0ADA               	incf	___fldiv@aexp,f
  4958  0AC1                     l6808:	
  4959  0AC1  085A               	movf	___fldiv@aexp,w
  4960  0AC2  1903               	btfsc	3,2
  4961  0AC3  2AF3               	goto	l6818
  4962  0AC4  3001               	movlw	1
  4963  0AC5  07C5               	addwf	___fldiv@b,f
  4964  0AC6  3000               	movlw	0
  4965  0AC7  1803               	skipnc
  4966  0AC8  3001               	movlw	1
  4967  0AC9  07C6               	addwf	___fldiv@b+1,f
  4968  0ACA  3000               	movlw	0
  4969  0ACB  1803               	skipnc
  4970  0ACC  3001               	movlw	1
  4971  0ACD  07C7               	addwf	___fldiv@b+2,f
  4972  0ACE  3000               	movlw	0
  4973  0ACF  1803               	skipnc
  4974  0AD0  3001               	movlw	1
  4975  0AD1  07C8               	addwf	___fldiv@b+3,f
  4976  0AD2  1C48               	btfss	___fldiv@b+3,0
  4977  0AD3  2AF3               	goto	l6818
  4978  0AD4  0845               	movf	___fldiv@b,w
  4979  0AD5  00C9               	movwf	??___fldiv
  4980  0AD6  0846               	movf	___fldiv@b+1,w
  4981  0AD7  00CA               	movwf	??___fldiv+1
  4982  0AD8  0847               	movf	___fldiv@b+2,w
  4983  0AD9  00CB               	movwf	??___fldiv+2
  4984  0ADA  0848               	movf	___fldiv@b+3,w
  4985  0ADB  00CC               	movwf	??___fldiv+3
  4986  0ADC  3001               	movlw	1
  4987  0ADD  00CD               	movwf	??___fldiv+4
  4988  0ADE                     u7435:	
  4989  0ADE  0D4C               	rlf	??___fldiv+3,w
  4990  0ADF  0CCC               	rrf	??___fldiv+3,f
  4991  0AE0  0CCB               	rrf	??___fldiv+2,f
  4992  0AE1  0CCA               	rrf	??___fldiv+1,f
  4993  0AE2  0CC9               	rrf	??___fldiv,f
  4994  0AE3  0BCD               	decfsz	??___fldiv+4,f
  4995  0AE4  2ADE               	goto	u7435
  4996  0AE5  084C               	movf	??___fldiv+3,w
  4997  0AE6  00C8               	movwf	___fldiv@b+3
  4998  0AE7  084B               	movf	??___fldiv+2,w
  4999  0AE8  00C7               	movwf	___fldiv@b+2
  5000  0AE9  084A               	movf	??___fldiv+1,w
  5001  0AEA  00C6               	movwf	___fldiv@b+1
  5002  0AEB  0849               	movf	??___fldiv,w
  5003  0AEC  00C5               	movwf	___fldiv@b
  5004  0AED  3001               	movlw	1
  5005  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5006  0AEF  1803               	skipnc
  5007  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5008  0AF1  3000               	movlw	0
  5009  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5010  0AF3                     l6818:	
  5011  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5012  0AF4  3A80               	xorlw	128
  5013  0AF5  00FF               	movwf	127
  5014  0AF6  3080               	movlw	128
  5015  0AF7  027F               	subwf	127,w
  5016  0AF8  1D03               	skipz
  5017  0AF9  2AFC               	goto	u7445
  5018  0AFA  30FF               	movlw	255
  5019  0AFB  0253               	subwf	___fldiv@new_exp,w
  5020  0AFC                     u7445:	
  5021  0AFC  1C03               	skipc
  5022  0AFD  2B0C               	goto	l6822
  5023  0AFE  30FF               	movlw	255
  5024  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0B01  00D3               	movwf	___fldiv@new_exp
  5027  0B02  3000               	movlw	0
  5028  0B03  00D4               	movwf	___fldiv@new_exp+1
  5029  0B04  3000               	movlw	0
  5030  0B05  00C8               	movwf	___fldiv@b+3
  5031  0B06  3000               	movlw	0
  5032  0B07  00C7               	movwf	___fldiv@b+2
  5033  0B08  3000               	movlw	0
  5034  0B09  00C6               	movwf	___fldiv@b+1
  5035  0B0A  3000               	movlw	0
  5036  0B0B  00C5               	movwf	___fldiv@b
  5037  0B0C                     l6822:	
  5038  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5041  0B0F  3A80               	xorlw	128
  5042  0B10  00FF               	movwf	127
  5043  0B11  3080               	movlw	128
  5044  0B12  027F               	subwf	127,w
  5045  0B13  1D03               	skipz
  5046  0B14  2B17               	goto	u7455
  5047  0B15  3001               	movlw	1
  5048  0B16  0253               	subwf	___fldiv@new_exp,w
  5049  0B17                     u7455:	
  5050  0B17  1803               	skipnc
  5051  0B18  2B26               	goto	l1353
  5052  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5053  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5054  0B1B  01D3               	clrf	___fldiv@new_exp
  5055  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5056  0B1D  3000               	movlw	0
  5057  0B1E  00C8               	movwf	___fldiv@b+3
  5058  0B1F  3000               	movlw	0
  5059  0B20  00C7               	movwf	___fldiv@b+2
  5060  0B21  3000               	movlw	0
  5061  0B22  00C6               	movwf	___fldiv@b+1
  5062  0B23  3000               	movlw	0
  5063  0B24  00C5               	movwf	___fldiv@b
  5064  0B25  01D2               	clrf	___fldiv@sign
  5065  0B26                     l1353:	
  5066  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5068  0B28  0853               	movf	___fldiv@new_exp,w
  5069  0B29  00C9               	movwf	??___fldiv
  5070  0B2A  0849               	movf	??___fldiv,w
  5071  0B2B  00D9               	movwf	___fldiv@bexp
  5072  0B2C  1C59               	btfss	___fldiv@bexp,0
  5073  0B2D  2B30               	goto	l6834
  5074  0B2E  17C7               	bsf	___fldiv@b+2,7
  5075  0B2F  2B34               	goto	l1355
  5076  0B30                     l6834:	
  5077  0B30  307F               	movlw	127
  5078  0B31  00C9               	movwf	??___fldiv
  5079  0B32  0849               	movf	??___fldiv,w
  5080  0B33  05C7               	andwf	___fldiv@b+2,f
  5081  0B34                     l1355:	
  5082  0B34  0859               	movf	___fldiv@bexp,w
  5083  0B35  00C9               	movwf	??___fldiv
  5084  0B36  1003               	clrc
  5085  0B37  0C49               	rrf	??___fldiv,w
  5086  0B38  00CA               	movwf	??___fldiv+1
  5087  0B39  084A               	movf	??___fldiv+1,w
  5088  0B3A  00C8               	movwf	___fldiv@b+3
  5089  0B3B  29F9               	goto	L5
  5090  0B3C                     __end_of___fldiv:	
  5091                           
  5092                           	psect	text7
  5093  1B31                     __ptext7:	
  5094 ;; *************** function _Package_Usart_is_for_me *****************
  5095 ;; Defined at:
  5096 ;;		line 8 in file "protocolo.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  retorno         1    0[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      unsigned char 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0
  5105 ;; Tracked objects:
  5106 ;;		On entry : 200/100
  5107 ;;		On exit  : 300/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       0       0       0       0
  5111 ;;      Locals:         0       1       0       0       0
  5112 ;;      Temps:          0       0       0       0       0
  5113 ;;      Totals:         0       1       0       0       0
  5114 ;;Total ram usage:        1 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_MediaPlacaVaccum
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function _Package_Usart_is_for_me
  5126  1B31                     _Package_Usart_is_for_me:	
  5127                           
  5128                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5132  1B31  1683               	bsf	3,5	;RP0=1, select bank1
  5133  1B32  1C3B               	btfss	_generic_status^(0+128),0
  5134  1B33  2B46               	goto	l6612
  5135                           
  5136                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5137  1B34  1283               	bcf	3,5	;RP0=0, select bank2
  5138  1B35  1703               	bsf	3,6	;RP1=1, select bank2
  5139  1B36  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5140  1B37  1683               	bsf	3,5	;RP0=1, select bank1
  5141  1B38  1303               	bcf	3,6	;RP1=0, select bank1
  5142  1B39  0638               	xorwf	_Board_Number^(0+128),w
  5143  1B3A  1903               	skipnz
  5144  1B3B  2B41               	goto	l802
  5145  1B3C  1283               	bcf	3,5	;RP0=0, select bank2
  5146  1B3D  1703               	bsf	3,6	;RP1=1, select bank2
  5147  1B3E  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5148  1B3F  1D03               	btfss	3,2
  5149  1B40  2B46               	goto	l6612
  5150  1B41                     l802:	
  5151                           
  5152                           ;protocolo.c: 13:             retorno=1;
  5153  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  5154  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  5155  1B43  01A0               	clrf	Package_Usart_is_for_me@retorno
  5156  1B44  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5157  1B45  2B49               	goto	l6616
  5158  1B46                     l6612:	
  5159                           
  5160                           ;protocolo.c: 15:             retorno=0;
  5161  1B46  1283               	bcf	3,5	;RP0=0, select bank0
  5162  1B47  1303               	bcf	3,6	;RP1=0, select bank0
  5163  1B48  01A0               	clrf	Package_Usart_is_for_me@retorno
  5164  1B49                     l6616:	
  5165                           
  5166                           ;protocolo.c: 21:      return retorno;
  5167  1B49  0820               	movf	Package_Usart_is_for_me@retorno,w
  5168  1B4A  0008               	return
  5169  1B4B                     __end_of_Package_Usart_is_for_me:	
  5170                           
  5171                           	psect	text8
  5172  107D                     __ptext8:	
  5173 ;; *************** function _ADC_Media_10bits *****************
  5174 ;; Defined at:
  5175 ;;		line 20 in file "adc.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  canal           1    wreg     unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  canal           1   38[BANK0 ] unsigned char 
  5180 ;;  value           2   39[BANK0 ] unsigned int 
  5181 ;;  i               1   41[BANK0 ] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  4   33[BANK0 ] float 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 300/100
  5188 ;;		On exit  : 300/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       4       0       0       0
  5192 ;;      Locals:         0       4       0       0       0
  5193 ;;      Temps:          0       1       0       0       0
  5194 ;;      Totals:         0       9       0       0       0
  5195 ;;Total ram usage:        9 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    2
  5198 ;; This function calls:
  5199 ;;		___lwdiv
  5200 ;;		___xxtofl
  5201 ;;		_captura
  5202 ;;		_my_delay_ms
  5203 ;; This function is called by:
  5204 ;;		_MediaPlacaVaccum
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _ADC_Media_10bits
  5210  107D                     _ADC_Media_10bits:	
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5214                           ;ADC_Media_10bits@canal stored from wreg
  5215  107D  1283               	bcf	3,5	;RP0=0, select bank0
  5216  107E  00C6               	movwf	ADC_Media_10bits@canal
  5217                           
  5218                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5219  107F  0846               	movf	ADC_Media_10bits@canal,w
  5220  1080  00C5               	movwf	??_ADC_Media_10bits
  5221  1081  0DC5               	rlf	??_ADC_Media_10bits,f
  5222  1082  0DC5               	rlf	??_ADC_Media_10bits,f
  5223  1083  081F               	movf	31,w	;volatile
  5224  1084  0645               	xorwf	??_ADC_Media_10bits,w
  5225  1085  39C3               	andlw	-61
  5226  1086  0645               	xorwf	??_ADC_Media_10bits,w
  5227  1087  009F               	movwf	31	;volatile
  5228                           
  5229                           ;adc.c: 24:       my_delay_ms(1);
  5230  1088  3000               	movlw	0
  5231  1089  00A3               	movwf	my_delay_ms@time+3
  5232  108A  3000               	movlw	0
  5233  108B  00A2               	movwf	my_delay_ms@time+2
  5234  108C  3000               	movlw	0
  5235  108D  00A1               	movwf	my_delay_ms@time+1
  5236  108E  3001               	movlw	1
  5237  108F  00A0               	movwf	my_delay_ms@time
  5238  1090  160A  158A  25CB  160A  118A  	fcall	_my_delay_ms
  5239                           
  5240                           ;adc.c: 26:       value=0;
  5241  1095  01C7               	clrf	ADC_Media_10bits@value
  5242  1096  01C8               	clrf	ADC_Media_10bits@value+1
  5243                           
  5244                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5245  1097  01C9               	clrf	ADC_Media_10bits@i
  5246  1098  0AC9               	incf	ADC_Media_10bits@i,f
  5247  1099                     l6594:	
  5248                           
  5249                           ;adc.c: 28:           value+=captura();
  5250  1099  160A  158A  2271  160A  118A  	fcall	_captura
  5251  109E  0820               	movf	?_captura,w
  5252  109F  07C7               	addwf	ADC_Media_10bits@value,f
  5253  10A0  1803               	skipnc
  5254  10A1  0AC8               	incf	ADC_Media_10bits@value+1,f
  5255  10A2  0821               	movf	?_captura+1,w
  5256  10A3  07C8               	addwf	ADC_Media_10bits@value+1,f
  5257  10A4  3001               	movlw	1
  5258  10A5  00C5               	movwf	??_ADC_Media_10bits
  5259  10A6  0845               	movf	??_ADC_Media_10bits,w
  5260  10A7  07C9               	addwf	ADC_Media_10bits@i,f
  5261  10A8  3033               	movlw	51
  5262  10A9  0249               	subwf	ADC_Media_10bits@i,w
  5263  10AA  1C03               	skipc
  5264  10AB  2899               	goto	l6594
  5265                           
  5266                           ;adc.c: 29:       value/=(i-1);
  5267  10AC  0849               	movf	ADC_Media_10bits@i,w
  5268  10AD  3EFF               	addlw	255
  5269  10AE  00A0               	movwf	___lwdiv@divisor
  5270  10AF  30FF               	movlw	255
  5271  10B0  1803               	skipnc
  5272  10B1  3000               	movlw	0
  5273  10B2  00A1               	movwf	___lwdiv@divisor+1
  5274  10B3  0848               	movf	ADC_Media_10bits@value+1,w
  5275  10B4  00A3               	movwf	___lwdiv@dividend+1
  5276  10B5  0847               	movf	ADC_Media_10bits@value,w
  5277  10B6  00A2               	movwf	___lwdiv@dividend
  5278  10B7  160A  158A  26AE  160A  118A  	fcall	___lwdiv
  5279  10BC  0821               	movf	?___lwdiv+1,w
  5280  10BD  00C8               	movwf	ADC_Media_10bits@value+1
  5281  10BE  0820               	movf	?___lwdiv,w
  5282  10BF  00C7               	movwf	ADC_Media_10bits@value
  5283                           
  5284                           ;adc.c: 30:       return value;
  5285  10C0  0847               	movf	ADC_Media_10bits@value,w
  5286  10C1  00B3               	movwf	___xxtofl@val
  5287  10C2  0848               	movf	ADC_Media_10bits@value+1,w
  5288  10C3  00B4               	movwf	___xxtofl@val+1
  5289  10C4  01B5               	clrf	___xxtofl@val+2
  5290  10C5  01B6               	clrf	___xxtofl@val+3
  5291  10C6  3000               	movlw	0
  5292  10C7  160A  118A  22A6   	fcall	___xxtofl
  5293  10CA  0836               	movf	?___xxtofl+3,w
  5294  10CB  00C4               	movwf	?_ADC_Media_10bits+3
  5295  10CC  0835               	movf	?___xxtofl+2,w
  5296  10CD  00C3               	movwf	?_ADC_Media_10bits+2
  5297  10CE  0834               	movf	?___xxtofl+1,w
  5298  10CF  00C2               	movwf	?_ADC_Media_10bits+1
  5299  10D0  0833               	movf	?___xxtofl,w
  5300  10D1  00C1               	movwf	?_ADC_Media_10bits
  5301  10D2  0008               	return
  5302  10D3                     __end_of_ADC_Media_10bits:	
  5303                           
  5304                           	psect	text9
  5305  12A6                     __ptext9:	
  5306 ;; *************** function ___xxtofl *****************
  5307 ;; Defined at:
  5308 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  sign            1    wreg     unsigned char 
  5311 ;;  val             4   19[BANK0 ] long 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  sign            1   27[BANK0 ] unsigned char 
  5314 ;;  arg             4   29[BANK0 ] unsigned long 
  5315 ;;  exp             1   28[BANK0 ] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  4   19[BANK0 ] unsigned char 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 300/0
  5322 ;;		On exit  : 300/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5325 ;;      Params:         0       4       0       0       0
  5326 ;;      Locals:         0       6       0       0       0
  5327 ;;      Temps:          0       4       0       0       0
  5328 ;;      Totals:         0      14       0       0       0
  5329 ;;Total ram usage:       14 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_MediaPlacaVaccum
  5336 ;;		_ADC_Media_10bits
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function ___xxtofl
  5342  12A6                     ___xxtofl:	
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5346                           ;___xxtofl@sign stored from wreg
  5347  12A6  00BB               	movwf	___xxtofl@sign
  5348  12A7  083B               	movf	___xxtofl@sign,w
  5349  12A8  1D03               	btfss	3,2
  5350  12A9  1FB6               	btfss	___xxtofl@val+3,7
  5351  12AA  2ABB               	goto	l6224
  5352  12AB  0933               	comf	___xxtofl@val,w
  5353  12AC  00BD               	movwf	___xxtofl@arg
  5354  12AD  0934               	comf	___xxtofl@val+1,w
  5355  12AE  00BE               	movwf	___xxtofl@arg+1
  5356  12AF  0935               	comf	___xxtofl@val+2,w
  5357  12B0  00BF               	movwf	___xxtofl@arg+2
  5358  12B1  0936               	comf	___xxtofl@val+3,w
  5359  12B2  00C0               	movwf	___xxtofl@arg+3
  5360  12B3  0ABD               	incf	___xxtofl@arg,f
  5361  12B4  1903               	skipnz
  5362  12B5  0ABE               	incf	___xxtofl@arg+1,f
  5363  12B6  1903               	skipnz
  5364  12B7  0ABF               	incf	___xxtofl@arg+2,f
  5365  12B8  1903               	skipnz
  5366  12B9  0AC0               	incf	___xxtofl@arg+3,f
  5367  12BA  2AC3               	goto	l1409
  5368  12BB                     l6224:	
  5369  12BB  0836               	movf	___xxtofl@val+3,w
  5370  12BC  00C0               	movwf	___xxtofl@arg+3
  5371  12BD  0835               	movf	___xxtofl@val+2,w
  5372  12BE  00BF               	movwf	___xxtofl@arg+2
  5373  12BF  0834               	movf	___xxtofl@val+1,w
  5374  12C0  00BE               	movwf	___xxtofl@arg+1
  5375  12C1  0833               	movf	___xxtofl@val,w
  5376  12C2  00BD               	movwf	___xxtofl@arg
  5377  12C3                     l1409:	
  5378  12C3  0836               	movf	___xxtofl@val+3,w
  5379  12C4  0435               	iorwf	___xxtofl@val+2,w
  5380  12C5  0434               	iorwf	___xxtofl@val+1,w
  5381  12C6  0433               	iorwf	___xxtofl@val,w
  5382  12C7  1D03               	skipz
  5383  12C8  2AD2               	goto	l6230
  5384  12C9  3000               	movlw	0
  5385  12CA  00B6               	movwf	?___xxtofl+3
  5386  12CB  3000               	movlw	0
  5387  12CC  00B5               	movwf	?___xxtofl+2
  5388  12CD  3000               	movlw	0
  5389  12CE  00B4               	movwf	?___xxtofl+1
  5390  12CF  3000               	movlw	0
  5391  12D0  00B3               	movwf	?___xxtofl
  5392  12D1  0008               	return
  5393  12D2                     l6230:	
  5394  12D2  3096               	movlw	150
  5395  12D3  00B7               	movwf	??___xxtofl
  5396  12D4  0837               	movf	??___xxtofl,w
  5397  12D5  00BC               	movwf	___xxtofl@exp
  5398  12D6                     l6234:	
  5399  12D6  30FE               	movlw	254
  5400  12D7  0540               	andwf	___xxtofl@arg+3,w
  5401  12D8  1903               	btfsc	3,2
  5402  12D9  2B03               	goto	l1415
  5403  12DA  3001               	movlw	1
  5404  12DB  00B7               	movwf	??___xxtofl
  5405  12DC  0837               	movf	??___xxtofl,w
  5406  12DD  07BC               	addwf	___xxtofl@exp,f
  5407  12DE  3001               	movlw	1
  5408  12DF                     u6665:	
  5409  12DF  1003               	clrc
  5410  12E0  0CC0               	rrf	___xxtofl@arg+3,f
  5411  12E1  0CBF               	rrf	___xxtofl@arg+2,f
  5412  12E2  0CBE               	rrf	___xxtofl@arg+1,f
  5413  12E3  0CBD               	rrf	___xxtofl@arg,f
  5414  12E4  3EFF               	addlw	-1
  5415  12E5  1D03               	skipz
  5416  12E6  2ADF               	goto	u6665
  5417  12E7  2AD6               	goto	l6234
  5418  12E8                     l6236:	
  5419  12E8  3001               	movlw	1
  5420  12E9  00B7               	movwf	??___xxtofl
  5421  12EA  0837               	movf	??___xxtofl,w
  5422  12EB  07BC               	addwf	___xxtofl@exp,f
  5423  12EC  3001               	movlw	1
  5424  12ED  07BD               	addwf	___xxtofl@arg,f
  5425  12EE  3000               	movlw	0
  5426  12EF  1803               	skipnc
  5427  12F0  3001               	movlw	1
  5428  12F1  07BE               	addwf	___xxtofl@arg+1,f
  5429  12F2  3000               	movlw	0
  5430  12F3  1803               	skipnc
  5431  12F4  3001               	movlw	1
  5432  12F5  07BF               	addwf	___xxtofl@arg+2,f
  5433  12F6  3000               	movlw	0
  5434  12F7  1803               	skipnc
  5435  12F8  3001               	movlw	1
  5436  12F9  07C0               	addwf	___xxtofl@arg+3,f
  5437  12FA  3001               	movlw	1
  5438  12FB                     u6685:	
  5439  12FB  1003               	clrc
  5440  12FC  0CC0               	rrf	___xxtofl@arg+3,f
  5441  12FD  0CBF               	rrf	___xxtofl@arg+2,f
  5442  12FE  0CBE               	rrf	___xxtofl@arg+1,f
  5443  12FF  0CBD               	rrf	___xxtofl@arg,f
  5444  1300  3EFF               	addlw	-1
  5445  1301  1D03               	skipz
  5446  1302  2AFB               	goto	u6685
  5447  1303                     l1415:	
  5448  1303  30FF               	movlw	255
  5449  1304  0540               	andwf	___xxtofl@arg+3,w
  5450  1305  1903               	btfsc	3,2
  5451  1306  2B17               	goto	l6244
  5452  1307  2AE8               	goto	l6236
  5453  1308                     l6246:	
  5454  1308  3002               	movlw	2
  5455  1309  023C               	subwf	___xxtofl@exp,w
  5456  130A  1C03               	btfss	3,0
  5457  130B  2B19               	goto	l1422
  5458  130C  3001               	movlw	1
  5459  130D  02BC               	subwf	___xxtofl@exp,f
  5460  130E  3001               	movlw	1
  5461  130F  00B7               	movwf	??___xxtofl
  5462  1310                     u6705:	
  5463  1310  1003               	clrc
  5464  1311  0DBD               	rlf	___xxtofl@arg,f
  5465  1312  0DBE               	rlf	___xxtofl@arg+1,f
  5466  1313  0DBF               	rlf	___xxtofl@arg+2,f
  5467  1314  0DC0               	rlf	___xxtofl@arg+3,f
  5468  1315  0BB7               	decfsz	??___xxtofl,f
  5469  1316  2B10               	goto	u6705
  5470  1317                     l6244:	
  5471  1317  1FBF               	btfss	___xxtofl@arg+2,7
  5472  1318  2B08               	goto	l6246
  5473  1319                     l1422:	
  5474  1319  183C               	btfsc	___xxtofl@exp,0
  5475  131A  2B23               	goto	l1423
  5476  131B  30FF               	movlw	255
  5477  131C  05BD               	andwf	___xxtofl@arg,f
  5478  131D  30FF               	movlw	255
  5479  131E  05BE               	andwf	___xxtofl@arg+1,f
  5480  131F  307F               	movlw	127
  5481  1320  05BF               	andwf	___xxtofl@arg+2,f
  5482  1321  30FF               	movlw	255
  5483  1322  05C0               	andwf	___xxtofl@arg+3,f
  5484  1323                     l1423:	
  5485  1323  1003               	clrc
  5486  1324  0CBC               	rrf	___xxtofl@exp,f
  5487  1325  083C               	movf	___xxtofl@exp,w
  5488  1326  00B7               	movwf	??___xxtofl
  5489  1327  01B8               	clrf	??___xxtofl+1
  5490  1328  01B9               	clrf	??___xxtofl+2
  5491  1329  01BA               	clrf	??___xxtofl+3
  5492  132A  3018               	movlw	24
  5493  132B                     u6745:	
  5494  132B  1003               	clrc
  5495  132C  0DB7               	rlf	??___xxtofl,f
  5496  132D  0DB8               	rlf	??___xxtofl+1,f
  5497  132E  0DB9               	rlf	??___xxtofl+2,f
  5498  132F  0DBA               	rlf	??___xxtofl+3,f
  5499  1330  3EFF               	addlw	-1
  5500  1331  1D03               	skipz
  5501  1332  2B2B               	goto	u6745
  5502  1333  0837               	movf	??___xxtofl,w
  5503  1334  04BD               	iorwf	___xxtofl@arg,f
  5504  1335  0838               	movf	??___xxtofl+1,w
  5505  1336  04BE               	iorwf	___xxtofl@arg+1,f
  5506  1337  0839               	movf	??___xxtofl+2,w
  5507  1338  04BF               	iorwf	___xxtofl@arg+2,f
  5508  1339  083A               	movf	??___xxtofl+3,w
  5509  133A  04C0               	iorwf	___xxtofl@arg+3,f
  5510  133B  083B               	movf	___xxtofl@sign,w
  5511  133C  1D03               	btfss	3,2
  5512  133D  1FB6               	btfss	___xxtofl@val+3,7
  5513  133E  2B40               	goto	l6258
  5514  133F  17C0               	bsf	___xxtofl@arg+3,7
  5515  1340                     l6258:	
  5516  1340  0840               	movf	___xxtofl@arg+3,w
  5517  1341  00B6               	movwf	?___xxtofl+3
  5518  1342  083F               	movf	___xxtofl@arg+2,w
  5519  1343  00B5               	movwf	?___xxtofl+2
  5520  1344  083E               	movf	___xxtofl@arg+1,w
  5521  1345  00B4               	movwf	?___xxtofl+1
  5522  1346  083D               	movf	___xxtofl@arg,w
  5523  1347  00B3               	movwf	?___xxtofl
  5524  1348  0008               	return
  5525  1349                     __end_of___xxtofl:	
  5526                           
  5527                           	psect	text10
  5528  1F26                     __ptext10:	
  5529 ;; *************** function _ADC_Max_10Bits *****************
  5530 ;; Defined at:
  5531 ;;		line 34 in file "adc.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  canal           1    wreg     unsigned char 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  canal           1   13[BANK0 ] unsigned char 
  5536 ;;  value           2   16[BANK0 ] unsigned int 
  5537 ;;  Temp            2   14[BANK0 ] unsigned int 
  5538 ;;  i               1   18[BANK0 ] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2   10[BANK0 ] unsigned int 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 300/100
  5545 ;;		On exit  : 300/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       2       0       0       0
  5549 ;;      Locals:         0       6       0       0       0
  5550 ;;      Temps:          0       1       0       0       0
  5551 ;;      Totals:         0       9       0       0       0
  5552 ;;Total ram usage:        9 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    2
  5555 ;; This function calls:
  5556 ;;		_captura
  5557 ;;		_my_delay_ms
  5558 ;; This function is called by:
  5559 ;;		_MediaPlacaVaccum
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           
  5564                           ;psect for function _ADC_Max_10Bits
  5565  1F26                     _ADC_Max_10Bits:	
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5569                           ;ADC_Max_10Bits@canal stored from wreg
  5570  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  5571  1F27  00AD               	movwf	ADC_Max_10Bits@canal
  5572                           
  5573                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5574  1F28  082D               	movf	ADC_Max_10Bits@canal,w
  5575  1F29  00AC               	movwf	??_ADC_Max_10Bits
  5576  1F2A  0DAC               	rlf	??_ADC_Max_10Bits,f
  5577  1F2B  0DAC               	rlf	??_ADC_Max_10Bits,f
  5578  1F2C  081F               	movf	31,w	;volatile
  5579  1F2D  062C               	xorwf	??_ADC_Max_10Bits,w
  5580  1F2E  39C3               	andlw	-61
  5581  1F2F  062C               	xorwf	??_ADC_Max_10Bits,w
  5582  1F30  009F               	movwf	31	;volatile
  5583                           
  5584                           ;adc.c: 39:       my_delay_ms(1);
  5585  1F31  3000               	movlw	0
  5586  1F32  00A3               	movwf	my_delay_ms@time+3
  5587  1F33  3000               	movlw	0
  5588  1F34  00A2               	movwf	my_delay_ms@time+2
  5589  1F35  3000               	movlw	0
  5590  1F36  00A1               	movwf	my_delay_ms@time+1
  5591  1F37  3001               	movlw	1
  5592  1F38  00A0               	movwf	my_delay_ms@time
  5593  1F39  160A  158A  25CB  160A  158A  	fcall	_my_delay_ms
  5594                           
  5595                           ;adc.c: 41:       value=0;
  5596  1F3E  01B0               	clrf	ADC_Max_10Bits@value
  5597  1F3F  01B1               	clrf	ADC_Max_10Bits@value+1
  5598                           
  5599                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5600  1F40  01B2               	clrf	ADC_Max_10Bits@i
  5601  1F41  0AB2               	incf	ADC_Max_10Bits@i,f
  5602  1F42                     l6634:	
  5603                           
  5604                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5605  1F42  160A  158A  2271  160A  158A  	fcall	_captura
  5606  1F47  0821               	movf	?_captura+1,w
  5607  1F48  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5608  1F49  0820               	movf	?_captura,w
  5609  1F4A  00AE               	movwf	ADC_Max_10Bits@Temp
  5610                           
  5611                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5612  1F4B  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5613  1F4C  0231               	subwf	ADC_Max_10Bits@value+1,w
  5614  1F4D  1D03               	skipz
  5615  1F4E  2F51               	goto	u7025
  5616  1F4F  082E               	movf	ADC_Max_10Bits@Temp,w
  5617  1F50  0230               	subwf	ADC_Max_10Bits@value,w
  5618  1F51                     u7025:	
  5619  1F51  1803               	skipnc
  5620  1F52  2F57               	goto	l6640
  5621  1F53  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5622  1F54  00B1               	movwf	ADC_Max_10Bits@value+1
  5623  1F55  082E               	movf	ADC_Max_10Bits@Temp,w
  5624  1F56  00B0               	movwf	ADC_Max_10Bits@value
  5625  1F57                     l6640:	
  5626                           
  5627                           ;adc.c: 46:           }
  5628  1F57  3001               	movlw	1
  5629  1F58  00AC               	movwf	??_ADC_Max_10Bits
  5630  1F59  082C               	movf	??_ADC_Max_10Bits,w
  5631  1F5A  07B2               	addwf	ADC_Max_10Bits@i,f
  5632  1F5B  3033               	movlw	51
  5633  1F5C  0232               	subwf	ADC_Max_10Bits@i,w
  5634  1F5D  1C03               	skipc
  5635  1F5E  2F42               	goto	l6634
  5636                           
  5637                           ;adc.c: 47:       return value;
  5638  1F5F  0831               	movf	ADC_Max_10Bits@value+1,w
  5639  1F60  00AB               	movwf	?_ADC_Max_10Bits+1
  5640  1F61  0830               	movf	ADC_Max_10Bits@value,w
  5641  1F62  00AA               	movwf	?_ADC_Max_10Bits
  5642  1F63  0008               	return
  5643  1F64                     __end_of_ADC_Max_10Bits:	
  5644                           
  5645                           	psect	text11
  5646  1DCB                     __ptext11:	
  5647 ;; *************** function _my_delay_ms *****************
  5648 ;; Defined at:
  5649 ;;		line 5 in file "my_delay.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  time            4    0[BANK0 ] long 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  i               4    6[BANK0 ] long 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, btemp+1
  5658 ;; Tracked objects:
  5659 ;;		On entry : 300/0
  5660 ;;		On exit  : 300/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       4       0       0       0
  5664 ;;      Locals:         0       4       0       0       0
  5665 ;;      Temps:          0       2       0       0       0
  5666 ;;      Totals:         0      10       0       0       0
  5667 ;;Total ram usage:       10 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_MediaPlacaVaccum
  5674 ;;		_ADC_Media_10bits
  5675 ;;		_ADC_Max_10Bits
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function _my_delay_ms
  5681  1DCB                     _my_delay_ms:	
  5682                           
  5683                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5684                           
  5685                           ;incstack = 0
  5686                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5687  1DCB  3000               	movlw	0
  5688  1DCC  00A9               	movwf	my_delay_ms@i+3
  5689  1DCD  3000               	movlw	0
  5690  1DCE  00A8               	movwf	my_delay_ms@i+2
  5691  1DCF  3000               	movlw	0
  5692  1DD0  00A7               	movwf	my_delay_ms@i+1
  5693  1DD1  3000               	movlw	0
  5694  1DD2  00A6               	movwf	my_delay_ms@i
  5695  1DD3                     l5782:	
  5696  1DD3  0829               	movf	my_delay_ms@i+3,w
  5697  1DD4  3A80               	xorlw	128
  5698  1DD5  00FF               	movwf	127
  5699  1DD6  0823               	movf	my_delay_ms@time+3,w
  5700  1DD7  3A80               	xorlw	128
  5701  1DD8  027F               	subwf	127,w
  5702  1DD9  1D03               	skipz
  5703  1DDA  2DE5               	goto	u5603
  5704  1DDB  0822               	movf	my_delay_ms@time+2,w
  5705  1DDC  0228               	subwf	my_delay_ms@i+2,w
  5706  1DDD  1D03               	skipz
  5707  1DDE  2DE5               	goto	u5603
  5708  1DDF  0821               	movf	my_delay_ms@time+1,w
  5709  1DE0  0227               	subwf	my_delay_ms@i+1,w
  5710  1DE1  1D03               	skipz
  5711  1DE2  2DE5               	goto	u5603
  5712  1DE3  0820               	movf	my_delay_ms@time,w
  5713  1DE4  0226               	subwf	my_delay_ms@i,w
  5714  1DE5                     u5603:	
  5715  1DE5  1803               	btfsc	3,0
  5716  1DE6  0008               	return
  5717                           
  5718                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5719  1DE7  3003               	movlw	3
  5720  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5721  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5722  1DEA  00A5               	movwf	??_my_delay_ms+1
  5723  1DEB  3097               	movlw	151
  5724  1DEC  00A4               	movwf	??_my_delay_ms
  5725  1DED                     u7747:	
  5726  1DED  0BA4               	decfsz	??_my_delay_ms,f
  5727  1DEE  2DED               	goto	u7747
  5728  1DEF  0BA5               	decfsz	??_my_delay_ms+1,f
  5729  1DF0  2DED               	goto	u7747
  5730                           
  5731                           ;my_delay.c: 10:             }
  5732  1DF1  3001               	movlw	1
  5733  1DF2  1283               	bcf	3,5	;RP0=0, select bank0
  5734  1DF3  1303               	bcf	3,6	;RP1=0, select bank0
  5735  1DF4  07A6               	addwf	my_delay_ms@i,f
  5736  1DF5  3000               	movlw	0
  5737  1DF6  1803               	skipnc
  5738  1DF7  3001               	movlw	1
  5739  1DF8  07A7               	addwf	my_delay_ms@i+1,f
  5740  1DF9  3000               	movlw	0
  5741  1DFA  1803               	skipnc
  5742  1DFB  3001               	movlw	1
  5743  1DFC  07A8               	addwf	my_delay_ms@i+2,f
  5744  1DFD  3000               	movlw	0
  5745  1DFE  1803               	skipnc
  5746  1DFF  3001               	movlw	1
  5747  1E00  07A9               	addwf	my_delay_ms@i+3,f
  5748  1E01  2DD3               	goto	l5782
  5749  1E02                     __end_of_my_delay_ms:	
  5750                           
  5751                           	psect	text12
  5752  1A71                     __ptext12:	
  5753 ;; *************** function _captura *****************
  5754 ;; Defined at:
  5755 ;;		line 140 in file "adc.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  2    0[BANK0 ] unsigned int 
  5762 ;; Registers used:
  5763 ;;		wreg
  5764 ;; Tracked objects:
  5765 ;;		On entry : 300/0
  5766 ;;		On exit  : 300/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5769 ;;      Params:         0       2       0       0       0
  5770 ;;      Locals:         0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0
  5772 ;;      Totals:         0       2       0       0       0
  5773 ;;Total ram usage:        2 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_ADC_Media_10bits
  5780 ;;		_ADC_Max_10Bits
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _captura
  5786  1A71                     _captura:	
  5787                           
  5788                           ;adc.c: 141:     ADCON0bits.GO=1;
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _captura: [wreg]
  5792  1A71  149F               	bsf	31,1	;volatile
  5793  1A72                     l480:	
  5794                           ;adc.c: 145:           }
  5795                           
  5796                           
  5797                           ;adc.c: 142:     while(ADCON0bits.GO)
  5798  1A72  189F               	btfsc	31,1	;volatile
  5799  1A73  2A72               	goto	l480
  5800                           
  5801                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5802  1A74  081E               	movf	30,w	;volatile
  5803  1A75  00A1               	movwf	?_captura+1
  5804  1A76  1683               	bsf	3,5	;RP0=1, select bank1
  5805  1A77  081E               	movf	30,w	;volatile
  5806  1A78  1283               	bcf	3,5	;RP0=0, select bank0
  5807  1A79  00A0               	movwf	?_captura
  5808  1A7A  0008               	return
  5809  1A7B                     __end_of_captura:	
  5810                           
  5811                           	psect	text13
  5812  1D00                     __ptext13:	
  5813 ;; *************** function _I2C_Master_Init *****************
  5814 ;; Defined at:
  5815 ;;		line 7 in file "I2C.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  c               4   14[BANK0 ] const unsigned long 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0, pclath, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 300/0
  5826 ;;		On exit  : 300/100
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5829 ;;      Params:         0       4       0       0       0
  5830 ;;      Locals:         0       0       0       0       0
  5831 ;;      Temps:          0       4       0       0       0
  5832 ;;      Totals:         0       8       0       0       0
  5833 ;;Total ram usage:        8 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    2
  5836 ;; This function calls:
  5837 ;;		___lldiv
  5838 ;; This function is called by:
  5839 ;;		_main
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function _I2C_Master_Init
  5845  1D00                     _I2C_Master_Init:	
  5846                           
  5847                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5851  1D00  3028               	movlw	40
  5852  1D01  0094               	movwf	20	;volatile
  5853                           
  5854                           ;I2C.c: 11:   SSPCON2 = 0;
  5855  1D02  1683               	bsf	3,5	;RP0=1, select bank1
  5856  1D03  0191               	clrf	17	;volatile
  5857                           
  5858                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5859  1D04  1283               	bcf	3,5	;RP0=0, select bank0
  5860  1D05  082E               	movf	I2C_Master_Init@c,w
  5861  1D06  00B2               	movwf	??_I2C_Master_Init
  5862  1D07  082F               	movf	I2C_Master_Init@c+1,w
  5863  1D08  00B3               	movwf	??_I2C_Master_Init+1
  5864  1D09  0830               	movf	I2C_Master_Init@c+2,w
  5865  1D0A  00B4               	movwf	??_I2C_Master_Init+2
  5866  1D0B  0831               	movf	I2C_Master_Init@c+3,w
  5867  1D0C  00B5               	movwf	??_I2C_Master_Init+3
  5868  1D0D  3002               	movlw	2
  5869  1D0E                     u7475:	
  5870  1D0E  1003               	clrc
  5871  1D0F  0DB2               	rlf	??_I2C_Master_Init,f
  5872  1D10  0DB3               	rlf	??_I2C_Master_Init+1,f
  5873  1D11  0DB4               	rlf	??_I2C_Master_Init+2,f
  5874  1D12  0DB5               	rlf	??_I2C_Master_Init+3,f
  5875  1D13  3EFF               	addlw	-1
  5876  1D14  1D03               	skipz
  5877  1D15  2D0E               	goto	u7475
  5878  1D16  0835               	movf	??_I2C_Master_Init+3,w
  5879  1D17  00A3               	movwf	___lldiv@divisor+3
  5880  1D18  0834               	movf	??_I2C_Master_Init+2,w
  5881  1D19  00A2               	movwf	___lldiv@divisor+2
  5882  1D1A  0833               	movf	??_I2C_Master_Init+1,w
  5883  1D1B  00A1               	movwf	___lldiv@divisor+1
  5884  1D1C  0832               	movf	??_I2C_Master_Init,w
  5885  1D1D  00A0               	movwf	___lldiv@divisor
  5886  1D1E  3000               	movlw	0
  5887  1D1F  00A7               	movwf	___lldiv@dividend+3
  5888  1D20  307A               	movlw	122
  5889  1D21  00A6               	movwf	___lldiv@dividend+2
  5890  1D22  3012               	movlw	18
  5891  1D23  00A5               	movwf	___lldiv@dividend+1
  5892  1D24  3000               	movlw	0
  5893  1D25  00A4               	movwf	___lldiv@dividend
  5894  1D26  160A  118A  20D3   	fcall	___lldiv
  5895  1D29  0820               	movf	?___lldiv,w
  5896  1D2A  3EFF               	addlw	255
  5897  1D2B  1683               	bsf	3,5	;RP0=1, select bank1
  5898  1D2C  0093               	movwf	19	;volatile
  5899                           
  5900                           ;I2C.c: 13:   SSPSTAT = 0;
  5901  1D2D  0194               	clrf	20	;volatile
  5902                           
  5903                           ;I2C.c: 14:   TRISC3 = 1;
  5904  1D2E  1587               	bsf	7,3	;volatile
  5905                           
  5906                           ;I2C.c: 15:   TRISC4 = 1;
  5907  1D2F  1607               	bsf	7,4	;volatile
  5908  1D30  0008               	return
  5909  1D31                     __end_of_I2C_Master_Init:	
  5910                           
  5911                           	psect	text14
  5912  10D3                     __ptext14:	
  5913 ;; *************** function ___lldiv *****************
  5914 ;; Defined at:
  5915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  divisor         4    0[BANK0 ] unsigned long 
  5918 ;;  dividend        4    4[BANK0 ] unsigned long 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  quotient        4    9[BANK0 ] unsigned long 
  5921 ;;  counter         1   13[BANK0 ] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  4    0[BANK0 ] unsigned long 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0
  5926 ;; Tracked objects:
  5927 ;;		On entry : 300/0
  5928 ;;		On exit  : 300/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5931 ;;      Params:         0       8       0       0       0
  5932 ;;      Locals:         0       5       0       0       0
  5933 ;;      Temps:          0       1       0       0       0
  5934 ;;      Totals:         0      14       0       0       0
  5935 ;;Total ram usage:       14 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_I2C_Master_Init
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function ___lldiv
  5947  10D3                     ___lldiv:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5951  10D3  3000               	movlw	0
  5952  10D4  00AC               	movwf	___lldiv@quotient+3
  5953  10D5  3000               	movlw	0
  5954  10D6  00AB               	movwf	___lldiv@quotient+2
  5955  10D7  3000               	movlw	0
  5956  10D8  00AA               	movwf	___lldiv@quotient+1
  5957  10D9  3000               	movlw	0
  5958  10DA  00A9               	movwf	___lldiv@quotient
  5959  10DB  0823               	movf	___lldiv@divisor+3,w
  5960  10DC  0422               	iorwf	___lldiv@divisor+2,w
  5961  10DD  0421               	iorwf	___lldiv@divisor+1,w
  5962  10DE  0420               	iorwf	___lldiv@divisor,w
  5963  10DF  1903               	skipnz
  5964  10E0  2928               	goto	l6668
  5965  10E1  01AD               	clrf	___lldiv@counter
  5966  10E2  0AAD               	incf	___lldiv@counter,f
  5967  10E3                     l6654:	
  5968  10E3  1BA3               	btfsc	___lldiv@divisor+3,7
  5969  10E4  28F3               	goto	l6656
  5970  10E5  3001               	movlw	1
  5971  10E6  00A8               	movwf	??___lldiv
  5972  10E7                     u7055:	
  5973  10E7  1003               	clrc
  5974  10E8  0DA0               	rlf	___lldiv@divisor,f
  5975  10E9  0DA1               	rlf	___lldiv@divisor+1,f
  5976  10EA  0DA2               	rlf	___lldiv@divisor+2,f
  5977  10EB  0DA3               	rlf	___lldiv@divisor+3,f
  5978  10EC  0BA8               	decfsz	??___lldiv,f
  5979  10ED  28E7               	goto	u7055
  5980  10EE  3001               	movlw	1
  5981  10EF  00A8               	movwf	??___lldiv
  5982  10F0  0828               	movf	??___lldiv,w
  5983  10F1  07AD               	addwf	___lldiv@counter,f
  5984  10F2  28E3               	goto	l6654
  5985  10F3                     l6656:	
  5986  10F3  3001               	movlw	1
  5987  10F4  00A8               	movwf	??___lldiv
  5988  10F5                     u7075:	
  5989  10F5  1003               	clrc
  5990  10F6  0DA9               	rlf	___lldiv@quotient,f
  5991  10F7  0DAA               	rlf	___lldiv@quotient+1,f
  5992  10F8  0DAB               	rlf	___lldiv@quotient+2,f
  5993  10F9  0DAC               	rlf	___lldiv@quotient+3,f
  5994  10FA  0BA8               	decfsz	??___lldiv,f
  5995  10FB  28F5               	goto	u7075
  5996  10FC  0823               	movf	___lldiv@divisor+3,w
  5997  10FD  0227               	subwf	___lldiv@dividend+3,w
  5998  10FE  1D03               	skipz
  5999  10FF  290A               	goto	u7085
  6000  1100  0822               	movf	___lldiv@divisor+2,w
  6001  1101  0226               	subwf	___lldiv@dividend+2,w
  6002  1102  1D03               	skipz
  6003  1103  290A               	goto	u7085
  6004  1104  0821               	movf	___lldiv@divisor+1,w
  6005  1105  0225               	subwf	___lldiv@dividend+1,w
  6006  1106  1D03               	skipz
  6007  1107  290A               	goto	u7085
  6008  1108  0820               	movf	___lldiv@divisor,w
  6009  1109  0224               	subwf	___lldiv@dividend,w
  6010  110A                     u7085:	
  6011  110A  1C03               	skipc
  6012  110B  291B               	goto	l6664
  6013  110C  0820               	movf	___lldiv@divisor,w
  6014  110D  02A4               	subwf	___lldiv@dividend,f
  6015  110E  0821               	movf	___lldiv@divisor+1,w
  6016  110F  1C03               	skipc
  6017  1110  0F21               	incfsz	___lldiv@divisor+1,w
  6018  1111  02A5               	subwf	___lldiv@dividend+1,f
  6019  1112  0822               	movf	___lldiv@divisor+2,w
  6020  1113  1C03               	skipc
  6021  1114  0F22               	incfsz	___lldiv@divisor+2,w
  6022  1115  02A6               	subwf	___lldiv@dividend+2,f
  6023  1116  0823               	movf	___lldiv@divisor+3,w
  6024  1117  1C03               	skipc
  6025  1118  0F23               	incfsz	___lldiv@divisor+3,w
  6026  1119  02A7               	subwf	___lldiv@dividend+3,f
  6027  111A  1429               	bsf	___lldiv@quotient,0
  6028  111B                     l6664:	
  6029  111B  3001               	movlw	1
  6030  111C                     u7095:	
  6031  111C  1003               	clrc
  6032  111D  0CA3               	rrf	___lldiv@divisor+3,f
  6033  111E  0CA2               	rrf	___lldiv@divisor+2,f
  6034  111F  0CA1               	rrf	___lldiv@divisor+1,f
  6035  1120  0CA0               	rrf	___lldiv@divisor,f
  6036  1121  3EFF               	addlw	-1
  6037  1122  1D03               	skipz
  6038  1123  291C               	goto	u7095
  6039  1124  3001               	movlw	1
  6040  1125  02AD               	subwf	___lldiv@counter,f
  6041  1126  1D03               	btfss	3,2
  6042  1127  28F3               	goto	l6656
  6043  1128                     l6668:	
  6044  1128  082C               	movf	___lldiv@quotient+3,w
  6045  1129  00A3               	movwf	?___lldiv+3
  6046  112A  082B               	movf	___lldiv@quotient+2,w
  6047  112B  00A2               	movwf	?___lldiv+2
  6048  112C  082A               	movf	___lldiv@quotient+1,w
  6049  112D  00A1               	movwf	?___lldiv+1
  6050  112E  0829               	movf	___lldiv@quotient,w
  6051  112F  00A0               	movwf	?___lldiv
  6052  1130  0008               	return
  6053  1131                     __end_of___lldiv:	
  6054                           
  6055                           	psect	text15
  6056  0037                     __ptext15:	
  6057 ;; *************** function _Decodify_Command *****************
  6058 ;; Defined at:
  6059 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  sizedata        1    3[BANK1 ] unsigned char 
  6064 ;;  add             1    2[BANK1 ] unsigned char 
  6065 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  6066 ;;  OutPut          4    6[BANK1 ] float 
  6067 ;;  tempint         2    4[BANK1 ] int 
  6068 ;;  dados           2    0[BANK1 ] int 
  6069 ;;  tempchar        1   10[BANK1 ] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 300/100
  6076 ;;		On exit  : 200/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6079 ;;      Params:         0       0       0       0       0
  6080 ;;      Locals:         0       0      15       0       0
  6081 ;;      Temps:          0       4       0       0       0
  6082 ;;      Totals:         0       4      15       0       0
  6083 ;;Total ram usage:       19 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    6
  6086 ;; This function calls:
  6087 ;;		_EEPROM_24C1025_Fill_All
  6088 ;;		_EEPROM_24C1025_Read_Buffer
  6089 ;;		_EEPROM_24C1025_Read_Byte
  6090 ;;		_EEPROM_24C1025_Read_Int
  6091 ;;		_EEPROM_24C1025_Read_Str
  6092 ;;		_EEPROM_24C1025_Write_Buffer
  6093 ;;		_EEPROM_24C1025_Write_Byte
  6094 ;;		_EEPROM_24C1025_Write_Int
  6095 ;;		_EEPROM_24C1025_Write_Str
  6096 ;;		_EEPROM_Read_Byte
  6097 ;;		_EEPROM_Read_Integer
  6098 ;;		_EEPROM_Read_String
  6099 ;;		_EEPROM_Write_Byte
  6100 ;;		_EEPROM_Write_Integer
  6101 ;;		_EEPROM_Write_String
  6102 ;;		_PROCULUS_Buzzer
  6103 ;;		_PROCULUS_Show_Screen
  6104 ;;		_PROCULUS_VP_Write_String
  6105 ;;		_Save_Log
  6106 ;;		_Send_Reply_OK
  6107 ;;		_Send_To_MB
  6108 ;;		_USART_put_buffer
  6109 ;;		_USART_put_int
  6110 ;;		_USART_put_string
  6111 ;;		_USART_putc
  6112 ;;		_USART_to_Protocol
  6113 ;;		___flmul
  6114 ;;		___fltol
  6115 ;;		_strcpy
  6116 ;;		_strlen
  6117 ;; This function is called by:
  6118 ;;		_main
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _Decodify_Command
  6124  0037                     _Decodify_Command:	
  6125                           
  6126                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6130  0037  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6131  0038  160A  158A  27AB  120A  118A  	fcall	_USART_to_Protocol
  6132                           
  6133                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6134  003D  1683               	bsf	3,5	;RP0=1, select bank3
  6135  003E  1703               	bsf	3,6	;RP1=1, select bank3
  6136  003F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6137  0040  1283               	bcf	3,5	;RP0=0, select bank0
  6138  0041  1303               	bcf	3,6	;RP1=0, select bank0
  6139  0042  00DF               	movwf	??_Decodify_Command
  6140  0043  085F               	movf	??_Decodify_Command,w
  6141  0044  1683               	bsf	3,5	;RP0=1, select bank1
  6142  0045  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6143                           
  6144                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6145  0046  1703               	bsf	3,6	;RP1=1, select bank3
  6146  0047  0818               	movf	(_usart_protocol^(0+384)+8),w
  6147  0048  1283               	bcf	3,5	;RP0=0, select bank0
  6148  0049  1303               	bcf	3,6	;RP1=0, select bank0
  6149  004A  00DF               	movwf	??_Decodify_Command
  6150  004B  085F               	movf	??_Decodify_Command,w
  6151  004C  1683               	bsf	3,5	;RP0=1, select bank1
  6152  004D  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6153                           
  6154                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6155  004E  1703               	bsf	3,6	;RP1=1, select bank3
  6156  004F  0819               	movf	(_usart_protocol^(0+384)+9),w
  6157  0050  1283               	bcf	3,5	;RP0=0, select bank0
  6158  0051  1303               	bcf	3,6	;RP1=0, select bank0
  6159  0052  00DF               	movwf	??_Decodify_Command
  6160  0053  085F               	movf	??_Decodify_Command,w
  6161  0054  1683               	bsf	3,5	;RP0=1, select bank1
  6162  0055  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6163                           
  6164                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6165  0056  1703               	bsf	3,6	;RP1=1, select bank3
  6166  0057  081A               	movf	(_usart_protocol^(0+384)+10),w
  6167  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6169  005A  00DF               	movwf	??_Decodify_Command
  6170  005B  085F               	movf	??_Decodify_Command,w
  6171  005C  1683               	bsf	3,5	;RP0=1, select bank1
  6172  005D  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6173                           
  6174                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6175  005E  2B81               	goto	l7154
  6176  005F                     l6992:	
  6177                           
  6178                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.14");
  6179  005F  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6180  0060  00DF               	movwf	??_Decodify_Command
  6181  0061  085F               	movf	??_Decodify_Command,w
  6182  0062  00A0               	movwf	strcpy@from
  6183  0063  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6184  0064  160A  158A  23A1  120A  118A  	fcall	_strcpy
  6185                           
  6186                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6187  0069  300B               	movlw	11
  6188  006A                     L8:	
  6189  006A  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6190                           
  6191                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6192  006F  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6193  0070  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0071  00A1               	movwf	USART_put_string@vetor
  6195  0072  3000               	movlw	0
  6196  0073  00A2               	movwf	USART_put_string@vetor+1
  6197  0074  160A  158A  2563   	fcall	_USART_put_string
  6198                           
  6199                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6200  0077  0008               	return
  6201  0078                     l6998:	
  6202                           
  6203                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6204  0078  1683               	bsf	3,5	;RP0=1, select bank3
  6205  0079  1703               	bsf	3,6	;RP1=1, select bank3
  6206  007A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6207  007B  1D03               	btfss	3,2
  6208  007C  2886               	goto	l7002
  6209                           
  6210                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6211  007D  1303               	bcf	3,6	;RP1=0, select bank1
  6212  007E  0823               	movf	(_Tensao1+3)^(0+128),w
  6213  007F  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6214  0080  0822               	movf	(_Tensao1+2)^(0+128),w
  6215  0081  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6216  0082  0821               	movf	(_Tensao1+1)^(0+128),w
  6217  0083  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6218  0084  0820               	movf	_Tensao1^(0+128),w
  6219  0085  288E               	goto	L6
  6220  0086                     l7002:	
  6221                           
  6222                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6223  0086  1303               	bcf	3,6	;RP1=0, select bank1
  6224  0087  0827               	movf	(_Vaccum0+3)^(0+128),w
  6225  0088  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6226  0089  0826               	movf	(_Vaccum0+2)^(0+128),w
  6227  008A  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6228  008B  0825               	movf	(_Vaccum0+1)^(0+128),w
  6229  008C  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6230  008D  0824               	movf	_Vaccum0^(0+128),w
  6231  008E                     L6:	
  6232  008E  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6233                           
  6234                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6235  008F  3041               	movlw	65
  6236  0090  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0091  00AC               	movwf	___flmul@b+3
  6238  0092  3020               	movlw	32
  6239  0093  00AB               	movwf	___flmul@b+2
  6240  0094  3000               	movlw	0
  6241  0095  00AA               	movwf	___flmul@b+1
  6242  0096  3000               	movlw	0
  6243  0097  00A9               	movwf	___flmul@b
  6244  0098  1683               	bsf	3,5	;RP0=1, select bank1
  6245  0099  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6246  009A  1283               	bcf	3,5	;RP0=0, select bank0
  6247  009B  00B0               	movwf	___flmul@a+3
  6248  009C  1683               	bsf	3,5	;RP0=1, select bank1
  6249  009D  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6250  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6251  009F  00AF               	movwf	___flmul@a+2
  6252  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  6253  00A1  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6254  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  6255  00A3  00AE               	movwf	___flmul@a+1
  6256  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  6257  00A5  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6258  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  6259  00A7  00AD               	movwf	___flmul@a
  6260  00A8  120A  118A  23D4  120A  118A  	fcall	___flmul
  6261  00AD  082C               	movf	?___flmul+3,w
  6262  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6263  00AF  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6264  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6265  00B1  082B               	movf	?___flmul+2,w
  6266  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  6267  00B3  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6268  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  6269  00B5  082A               	movf	?___flmul+1,w
  6270  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  6271  00B7  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6272  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  6273  00B9  0829               	movf	?___flmul,w
  6274  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  6275  00BB  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6276                           
  6277                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6278  00BC  138B               	bcf	11,7	;volatile
  6279                           
  6280                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6281  00BD  3002               	movlw	2
  6282  00BE  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6283                           
  6284                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6285  00C3  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6286  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6287  00C5  00C6               	movwf	___fltol@f1+3
  6288  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  6289  00C7  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6290  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6291  00C9  00C5               	movwf	___fltol@f1+2
  6292  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  6293  00CB  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6294  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  6295  00CD  00C4               	movwf	___fltol@f1+1
  6296  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  6297  00CF  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6298  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  6299  00D1  00C3               	movwf	___fltol@f1
  6300  00D2  160A  118A  2131  120A  118A  	fcall	___fltol
  6301  00D7  0844               	movf	?___fltol+1,w
  6302  00D8  00CF               	movwf	USART_put_int@value+1
  6303  00D9  0843               	movf	?___fltol,w
  6304  00DA  00CE               	movwf	USART_put_int@value
  6305  00DB  160A  158A  22E8   	fcall	_USART_put_int
  6306                           
  6307                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6308  00DE  178B               	bsf	11,7	;volatile
  6309                           
  6310                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6311  00DF  0008               	return
  6312  00E0                     l7014:	
  6313                           
  6314                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6315  00E0  1683               	bsf	3,5	;RP0=1, select bank3
  6316  00E1  1703               	bsf	3,6	;RP1=1, select bank3
  6317  00E2  0816               	movf	(_usart_protocol^(0+384)+6),w
  6318  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  6319  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  6320  00E5  00DF               	movwf	??_Decodify_Command
  6321  00E6  085F               	movf	??_Decodify_Command,w
  6322  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  6323  00E8  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6324                           
  6325                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6326  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  6327  00EA  0817               	movf	(_usart_protocol^(0+384)+7),w
  6328  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  6329  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  6330  00ED  00DF               	movwf	??_Decodify_Command
  6331  00EE  085F               	movf	??_Decodify_Command,w
  6332  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  6333  00F0  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6334                           
  6335                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6336  00F1  1703               	bsf	3,6	;RP1=1, select bank3
  6337  00F2  0818               	movf	(_usart_protocol^(0+384)+8),w
  6338  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  6339  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  6340  00F5  00DF               	movwf	??_Decodify_Command
  6341  00F6  085F               	movf	??_Decodify_Command,w
  6342  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  6343  00F8  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6344                           
  6345                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6346  00F9  1703               	bsf	3,6	;RP1=1, select bank3
  6347  00FA  0819               	movf	(_usart_protocol^(0+384)+9),w
  6348  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6349  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  6350  00FD  00DF               	movwf	??_Decodify_Command
  6351  00FE  085F               	movf	??_Decodify_Command,w
  6352  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  6353  0100  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6354                           
  6355                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6356  0101  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6357  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0103  00DB               	movwf	Save_Log@add_datalog+3
  6359  0104  1683               	bsf	3,5	;RP0=1, select bank1
  6360  0105  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6361  0106  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0107  00DA               	movwf	Save_Log@add_datalog+2
  6363  0108  1683               	bsf	3,5	;RP0=1, select bank1
  6364  0109  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6365  010A  1283               	bcf	3,5	;RP0=0, select bank0
  6366  010B  00D9               	movwf	Save_Log@add_datalog+1
  6367  010C  1683               	bsf	3,5	;RP0=1, select bank1
  6368  010D  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6369  010E  1283               	bcf	3,5	;RP0=0, select bank0
  6370  010F  00D8               	movwf	Save_Log@add_datalog
  6371  0110  160A  118A  219C   	fcall	_Save_Log
  6372                           
  6373                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6374  0113  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6375  0114  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6376                           
  6377                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6378  0115  1683               	bsf	3,5	;RP0=1, select bank1
  6379  0116  01B0               	clrf	_milisegundo^(0+128)	;volatile
  6380  0117  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6381                           
  6382                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6383  0118  0008               	return
  6384  0119                     l7022:	
  6385                           
  6386                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6387  0119  3002               	movlw	2
  6388  011A  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6389                           
  6390                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6391  011F  3001               	movlw	1
  6392  0120  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0121  00CE               	movwf	USART_put_int@value
  6394  0122  3000               	movlw	0
  6395  0123  00CF               	movwf	USART_put_int@value+1
  6396  0124  160A  158A  22E8   	fcall	_USART_put_int
  6397                           
  6398                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6399  0127  0008               	return
  6400  0128                     l7026:	
  6401                           
  6402                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6403  0128  1683               	bsf	3,5	;RP0=1, select bank3
  6404  0129  1703               	bsf	3,6	;RP1=1, select bank3
  6405  012A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6406  012B  1283               	bcf	3,5	;RP0=0, select bank0
  6407  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6408  012D  00DF               	movwf	??_Decodify_Command
  6409  012E  085F               	movf	??_Decodify_Command,w
  6410  012F  00A0               	movwf	EEPROM_Write_Byte@dado
  6411  0130  1683               	bsf	3,5	;RP0=1, select bank3
  6412  0131  1703               	bsf	3,6	;RP1=1, select bank3
  6413  0132  0816               	movf	(_usart_protocol^(0+384)+6),w
  6414  0133  160A  158A  2672  120A  118A  	fcall	_EEPROM_Write_Byte
  6415  0138                     L7:	
  6416                           
  6417                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6418  0138  3003               	movlw	3
  6419  0139  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6420                           
  6421                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6422  013E  160A  158A  2268   	fcall	_Send_Reply_OK
  6423                           
  6424                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6425  0141  0008               	return
  6426  0142                     l7030:	
  6427                           
  6428                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6429  0142  1683               	bsf	3,5	;RP0=1, select bank3
  6430  0143  1703               	bsf	3,6	;RP1=1, select bank3
  6431  0144  0816               	movf	(_usart_protocol^(0+384)+6),w
  6432  0145  160A  158A  243E  120A  118A  	fcall	_EEPROM_Read_Byte
  6433  014A  1303               	bcf	3,6	;RP1=0, select bank0
  6434  014B  00DF               	movwf	??_Decodify_Command
  6435  014C  085F               	movf	??_Decodify_Command,w
  6436  014D  1683               	bsf	3,5	;RP0=1, select bank1
  6437  014E  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6438                           
  6439                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6440  014F  3001               	movlw	1
  6441  0150  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6442                           
  6443                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6444  0155  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6445  0156  160A  158A  229C   	fcall	_USART_putc
  6446                           
  6447                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6448  0159  0008               	return
  6449  015A                     l7036:	
  6450                           
  6451                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6452  015A  1683               	bsf	3,5	;RP0=1, select bank3
  6453  015B  1703               	bsf	3,6	;RP1=1, select bank3
  6454  015C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6455  015D  1283               	bcf	3,5	;RP0=0, select bank0
  6456  015E  1303               	bcf	3,6	;RP1=0, select bank0
  6457  015F  00DF               	movwf	??_Decodify_Command
  6458  0160  085F               	movf	??_Decodify_Command,w
  6459  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6460  0162  00DF               	movwf	Decodify_Command@add^(0+128)
  6461                           
  6462                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6463  0163  1703               	bsf	3,6	;RP1=1, select bank3
  6464  0164  0818               	movf	(_usart_protocol^(0+384)+8),w
  6465  0165  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0166  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0167  00DF               	movwf	??_Decodify_Command
  6468  0168  01E0               	clrf	??_Decodify_Command+1
  6469  0169  1683               	bsf	3,5	;RP0=1, select bank3
  6470  016A  1703               	bsf	3,6	;RP1=1, select bank3
  6471  016B  0817               	movf	(_usart_protocol^(0+384)+7),w
  6472  016C  1283               	bcf	3,5	;RP0=0, select bank0
  6473  016D  1303               	bcf	3,6	;RP1=0, select bank0
  6474  016E  00E1               	movwf	??_Decodify_Command+2
  6475  016F  01E2               	clrf	??_Decodify_Command+3
  6476  0170  0861               	movf	??_Decodify_Command+2,w
  6477  0171  00E2               	movwf	??_Decodify_Command+3
  6478  0172  01E1               	clrf	??_Decodify_Command+2
  6479  0173  085F               	movf	??_Decodify_Command,w
  6480  0174  0461               	iorwf	??_Decodify_Command+2,w
  6481  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6482  0176  00DD               	movwf	Decodify_Command@dados^(0+128)
  6483  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0178  0860               	movf	??_Decodify_Command+1,w
  6485  0179  0462               	iorwf	??_Decodify_Command+3,w
  6486  017A  1683               	bsf	3,5	;RP0=1, select bank1
  6487  017B  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  6488                           
  6489                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6490  017C  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  6491  017D  1283               	bcf	3,5	;RP0=0, select bank0
  6492  017E  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6493  017F  1683               	bsf	3,5	;RP0=1, select bank1
  6494  0180  085D               	movf	Decodify_Command@dados^(0+128),w
  6495  0181  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0182  00A5               	movwf	EEPROM_Write_Integer@dado
  6497  0183  1683               	bsf	3,5	;RP0=1, select bank1
  6498  0184  085F               	movf	Decodify_Command@add^(0+128),w
  6499  0185  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  6500  018A  2938               	goto	L7
  6501  018B                     l7046:	
  6502                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6503                           
  6504                           
  6505                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6506  018B  1683               	bsf	3,5	;RP0=1, select bank3
  6507  018C  1703               	bsf	3,6	;RP1=1, select bank3
  6508  018D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6509  018E  160A  158A  24AB  120A  118A  	fcall	_EEPROM_Read_Integer
  6510  0193  0824               	movf	?_EEPROM_Read_Integer+1,w
  6511  0194  1683               	bsf	3,5	;RP0=1, select bank1
  6512  0195  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6513  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0197  0823               	movf	?_EEPROM_Read_Integer,w
  6515  0198                     L9:	
  6516  0198  1683               	bsf	3,5	;RP0=1, select bank1
  6517  0199  00E1               	movwf	Decodify_Command@tempint^(0+128)
  6518                           
  6519                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6520  019A  3002               	movlw	2
  6521  019B  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6522                           
  6523                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6524  01A0  0862               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6525  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  6526  01A2  00CF               	movwf	USART_put_int@value+1
  6527  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  6528  01A4  0861               	movf	Decodify_Command@tempint^(0+128),w
  6529  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6530  01A6  00CE               	movwf	USART_put_int@value
  6531  01A7  160A  158A  22E8   	fcall	_USART_put_int
  6532                           
  6533                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6534  01AA  0008               	return
  6535  01AB                     l7052:	
  6536                           
  6537                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6538  01AB  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6539  01AC  00DF               	movwf	??_Decodify_Command
  6540  01AD  085F               	movf	??_Decodify_Command,w
  6541  01AE  00A5               	movwf	EEPROM_Write_String@dado
  6542  01AF  1683               	bsf	3,5	;RP0=1, select bank3
  6543  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  6544  01B1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6545  01B2  160A  158A  24D5  120A  118A  	fcall	_EEPROM_Write_String
  6546  01B7  2938               	goto	L7
  6547  01B8                     l7058:	
  6548                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6549                           
  6550                           
  6551                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6552  01B8  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6553  01B9  00DF               	movwf	??_Decodify_Command
  6554  01BA  085F               	movf	??_Decodify_Command,w
  6555  01BB  00A3               	movwf	EEPROM_Read_String@dado
  6556  01BC  1683               	bsf	3,5	;RP0=1, select bank3
  6557  01BD  1703               	bsf	3,6	;RP1=1, select bank3
  6558  01BE  0816               	movf	(_usart_protocol^(0+384)+6),w
  6559  01BF  160A  158A  23FD  120A  118A  	fcall	_EEPROM_Read_String
  6560                           
  6561                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6562  01C4  3021               	movlw	33
  6563  01C5  286A               	goto	L8
  6564  01C6                     l7064:	
  6565                           
  6566                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6567  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  6568  01C7  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6569  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6570  01C9  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6571  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  6572  01CB  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6573  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  6574  01CD  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6575  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  6576  01CF  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6577  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  6578  01D1  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6579  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  6580  01D3  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6581  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6582  01D5  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6583  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  6584  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  6585  01D8  081B               	movf	(_usart_protocol^(0+384)+11),w
  6586  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  6587  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  6588  01DB  00DF               	movwf	??_Decodify_Command
  6589  01DC  085F               	movf	??_Decodify_Command,w
  6590  01DD  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6591  01DE  1683               	bsf	3,5	;RP0=1, select bank3
  6592  01DF  1703               	bsf	3,6	;RP1=1, select bank3
  6593  01E0  0816               	movf	(_usart_protocol^(0+384)+6),w
  6594  01E1  160A  158A  22D2  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6595  01E6  2938               	goto	L7
  6596  01E7                     l7070:	
  6597                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6598                           
  6599                           
  6600                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6601  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  6602  01E8  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6603  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  6604  01EA  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6605  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6606  01EC  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6607  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  6608  01EE  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6609  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  6610  01F0  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6611  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  6612  01F2  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6613  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  6614  01F4  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6615  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6616  01F6  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6617  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  6618  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  6619  01F9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6620  01FA  160A  158A  22FE  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6621  01FF  00DF               	movwf	??_Decodify_Command
  6622  0200  085F               	movf	??_Decodify_Command,w
  6623  0201  1683               	bsf	3,5	;RP0=1, select bank1
  6624  0202  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6625                           
  6626                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6627  0203  3001               	movlw	1
  6628  0204  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6629                           
  6630                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6631  0209  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6632  020A  160A  158A  229C   	fcall	_USART_putc
  6633                           
  6634                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6635  020D  0008               	return
  6636  020E                     l7076:	
  6637                           
  6638                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6639  020E  1683               	bsf	3,5	;RP0=1, select bank1
  6640  020F  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6641  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6642  0211  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6643  0212  1683               	bsf	3,5	;RP0=1, select bank1
  6644  0213  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6645  0214  1283               	bcf	3,5	;RP0=0, select bank0
  6646  0215  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6647  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6648  0217  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6649  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6650  0219  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6651  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6652  021B  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6653  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6654  021D  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6655  021E  1683               	bsf	3,5	;RP0=1, select bank3
  6656  021F  1703               	bsf	3,6	;RP1=1, select bank3
  6657  0220  081C               	movf	(_usart_protocol^(0+384)+12),w
  6658  0221  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0222  1303               	bcf	3,6	;RP1=0, select bank0
  6660  0223  00DF               	movwf	??_Decodify_Command
  6661  0224  01E0               	clrf	??_Decodify_Command+1
  6662  0225  1683               	bsf	3,5	;RP0=1, select bank3
  6663  0226  1703               	bsf	3,6	;RP1=1, select bank3
  6664  0227  081B               	movf	(_usart_protocol^(0+384)+11),w
  6665  0228  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0229  1303               	bcf	3,6	;RP1=0, select bank0
  6667  022A  00E1               	movwf	??_Decodify_Command+2
  6668  022B  01E2               	clrf	??_Decodify_Command+3
  6669  022C  0861               	movf	??_Decodify_Command+2,w
  6670  022D  00E2               	movwf	??_Decodify_Command+3
  6671  022E  01E1               	clrf	??_Decodify_Command+2
  6672  022F  085F               	movf	??_Decodify_Command,w
  6673  0230  0461               	iorwf	??_Decodify_Command+2,w
  6674  0231  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6675  0232  0860               	movf	??_Decodify_Command+1,w
  6676  0233  0462               	iorwf	??_Decodify_Command+3,w
  6677  0234  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6678  0235  1683               	bsf	3,5	;RP0=1, select bank3
  6679  0236  1703               	bsf	3,6	;RP1=1, select bank3
  6680  0237  0816               	movf	(_usart_protocol^(0+384)+6),w
  6681  0238  160A  158A  23DD  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6682  023D  2938               	goto	L7
  6683  023E                     l7082:	
  6684                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6685                           
  6686                           
  6687                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6688  023E  1683               	bsf	3,5	;RP0=1, select bank1
  6689  023F  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6690  0240  1283               	bcf	3,5	;RP0=0, select bank0
  6691  0241  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6692  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6693  0243  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6694  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6695  0245  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6696  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6697  0247  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6698  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6699  0249  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6700  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6701  024B  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6702  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6703  024D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6704  024E  1683               	bsf	3,5	;RP0=1, select bank3
  6705  024F  1703               	bsf	3,6	;RP1=1, select bank3
  6706  0250  0816               	movf	(_usart_protocol^(0+384)+6),w
  6707  0251  160A  158A  2483  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6708  0256  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6709  0257  1683               	bsf	3,5	;RP0=1, select bank1
  6710  0258  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6711  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6712  025A  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6713  025B  2998               	goto	L9
  6714  025C                     l7088:	
  6715                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6716                           
  6717                           
  6718                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6719  025C  1683               	bsf	3,5	;RP0=1, select bank3
  6720  025D  1703               	bsf	3,6	;RP1=1, select bank3
  6721  025E  081B               	movf	(_usart_protocol^(0+384)+11),w
  6722  025F  1283               	bcf	3,5	;RP0=0, select bank0
  6723  0260  1303               	bcf	3,6	;RP1=0, select bank0
  6724  0261  00DF               	movwf	??_Decodify_Command
  6725  0262  085F               	movf	??_Decodify_Command,w
  6726  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6727  0264  00E0               	movwf	Decodify_Command@sizedata^(0+128)
  6728                           
  6729                           ;SlaveLiofilizadorVer1.c: 507:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6730  0265  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6731  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0267  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6733  0268  1683               	bsf	3,5	;RP0=1, select bank1
  6734  0269  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6735  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6736  026B  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6737  026C  1683               	bsf	3,5	;RP0=1, select bank1
  6738  026D  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6739  026E  1283               	bcf	3,5	;RP0=0, select bank0
  6740  026F  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6741  0270  1683               	bsf	3,5	;RP0=1, select bank1
  6742  0271  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6743  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0273  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6745  0274  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0275  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6747  0276  1283               	bcf	3,5	;RP0=0, select bank0
  6748  0277  00DF               	movwf	??_Decodify_Command
  6749  0278  085F               	movf	??_Decodify_Command,w
  6750  0279  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6751  027A  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6752  027B  00E0               	movwf	??_Decodify_Command+1
  6753  027C  0860               	movf	??_Decodify_Command+1,w
  6754  027D  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6755  027E  1683               	bsf	3,5	;RP0=1, select bank3
  6756  027F  1703               	bsf	3,6	;RP1=1, select bank3
  6757  0280  0816               	movf	(_usart_protocol^(0+384)+6),w
  6758  0281  120A  158A  2029  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 512:              Send_To_MB(5);
  6761  0286  3005               	movlw	5
  6762  0287  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6763                           
  6764                           ;SlaveLiofilizadorVer1.c: 513:              USART_put_buffer(buffer,sizedata);
  6765  028C  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6766  028D  1283               	bcf	3,5	;RP0=0, select bank0
  6767  028E  00DF               	movwf	??_Decodify_Command
  6768  028F  085F               	movf	??_Decodify_Command,w
  6769  0290  00A1               	movwf	USART_put_buffer@size
  6770  0291  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6771  0292  160A  158A  2384   	fcall	_USART_put_buffer
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 514:              };SlaveLiofilizadorVer1.c: 515:             
      +                           break;
  6774  0295  0008               	return
  6775  0296                     l7096:	
  6776                           
  6777                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6778  0296  1683               	bsf	3,5	;RP0=1, select bank1
  6779  0297  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6780  0298  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0299  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6782  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6783  029B  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6784  029C  1283               	bcf	3,5	;RP0=0, select bank0
  6785  029D  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6786  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6787  029F  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6788  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6789  02A1  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6790  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  6791  02A3  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6792  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6793  02A5  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6794  02A6  1683               	bsf	3,5	;RP0=1, select bank3
  6795  02A7  1703               	bsf	3,6	;RP1=1, select bank3
  6796  02A8  081B               	movf	(_usart_protocol^(0+384)+11),w
  6797  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6798  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6799  02AB  00DF               	movwf	??_Decodify_Command
  6800  02AC  085F               	movf	??_Decodify_Command,w
  6801  02AD  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6802  02AE  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6803  02AF  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6804  02B0  3001               	movlw	1
  6805  02B1  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6806  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  6807  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  6808  02B4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6809  02B5  160A  118A  252A  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6810  02BA  2938               	goto	L7
  6811  02BB                     l7102:	
  6812                           ;SlaveLiofilizadorVer1.c: 523:              Send_To_MB(3);
  6813                           
  6814                           
  6815                           ;SlaveLiofilizadorVer1.c: 528:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6816  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  6817  02BC  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6818  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  6819  02BE  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6820  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  6821  02C0  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6822  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  6823  02C2  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6824  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6825  02C4  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6826  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  6827  02C6  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6828  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  6829  02C8  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6830  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6831  02CA  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6832  02CB  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6833  02CC  00DF               	movwf	??_Decodify_Command
  6834  02CD  085F               	movf	??_Decodify_Command,w
  6835  02CE  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6836  02CF  1683               	bsf	3,5	;RP0=1, select bank3
  6837  02D0  1703               	bsf	3,6	;RP1=1, select bank3
  6838  02D1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6839  02D2  160A  118A  2437  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6840  02D7  2938               	goto	L7
  6841  02D8                     l7108:	
  6842                           ;SlaveLiofilizadorVer1.c: 531:              Send_To_MB(3);
  6843                           
  6844                           
  6845                           ;SlaveLiofilizadorVer1.c: 535:              {;SlaveLiofilizadorVer1.c: 536:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6846  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  6847  02D9  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6848  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6849  02DB  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6850  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  6851  02DD  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6852  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  6853  02DF  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6854  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6855  02E1  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6856  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6857  02E3  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6858  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  6859  02E5  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6860  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6861  02E7  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6862  02E8  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6863  02E9  00DF               	movwf	??_Decodify_Command
  6864  02EA  085F               	movf	??_Decodify_Command,w
  6865  02EB  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6866  02EC  1683               	bsf	3,5	;RP0=1, select bank3
  6867  02ED  1703               	bsf	3,6	;RP1=1, select bank3
  6868  02EE  0816               	movf	(_usart_protocol^(0+384)+6),w
  6869  02EF  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6870                           
  6871                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(strlen(buffer)+1);
  6872  02F4  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6873  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  6874  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  6875  02F7  00A0               	movwf	strlen@s
  6876  02F8  3000               	movlw	0
  6877  02F9  00A1               	movwf	strlen@s+1
  6878  02FA  160A  158A  234B  120A  118A  	fcall	_strlen
  6879  02FF  0820               	movf	?_strlen,w
  6880  0300  3E01               	addlw	1
  6881  0301  286A               	goto	L8
  6882  0302                     l7112:	
  6883                           
  6884                           ;SlaveLiofilizadorVer1.c: 546:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6885  0302  1683               	bsf	3,5	;RP0=1, select bank3
  6886  0303  1703               	bsf	3,6	;RP1=1, select bank3
  6887  0304  0817               	movf	(_usart_protocol^(0+384)+7),w
  6888  0305  1283               	bcf	3,5	;RP0=0, select bank0
  6889  0306  1303               	bcf	3,6	;RP1=0, select bank0
  6890  0307  00DF               	movwf	??_Decodify_Command
  6891  0308  01E0               	clrf	??_Decodify_Command+1
  6892  0309  085F               	movf	??_Decodify_Command,w
  6893  030A  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6894  030B  0860               	movf	??_Decodify_Command+1,w
  6895  030C  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6896  030D  1683               	bsf	3,5	;RP0=1, select bank3
  6897  030E  1703               	bsf	3,6	;RP1=1, select bank3
  6898  030F  0816               	movf	(_usart_protocol^(0+384)+6),w
  6899  0310  120A  118A  27BC  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6900  0315  2938               	goto	L7
  6901  0316                     l7118:	
  6902                           ;SlaveLiofilizadorVer1.c: 548:              Send_To_MB(3);
  6903                           
  6904                           
  6905                           ;SlaveLiofilizadorVer1.c: 553:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6906  0316  1683               	bsf	3,5	;RP0=1, select bank3
  6907  0317  1703               	bsf	3,6	;RP1=1, select bank3
  6908  0318  0816               	movf	(_usart_protocol^(0+384)+6),w
  6909  0319  1283               	bcf	3,5	;RP0=0, select bank0
  6910  031A  1303               	bcf	3,6	;RP1=0, select bank0
  6911  031B  00DF               	movwf	??_Decodify_Command
  6912  031C  01E0               	clrf	??_Decodify_Command+1
  6913  031D  085F               	movf	??_Decodify_Command,w
  6914  031E  00D6               	movwf	PROCULUS_Show_Screen@screen
  6915  031F  0860               	movf	??_Decodify_Command+1,w
  6916  0320  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6917  0321  160A  158A  22BD  120A  118A  	fcall	_PROCULUS_Show_Screen
  6918  0326  2938               	goto	L7
  6919  0327                     l7124:	
  6920                           ;SlaveLiofilizadorVer1.c: 554:              Send_To_MB(3);
  6921                           
  6922                           
  6923                           ;SlaveLiofilizadorVer1.c: 559:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6924  0327  1683               	bsf	3,5	;RP0=1, select bank3
  6925  0328  1703               	bsf	3,6	;RP1=1, select bank3
  6926  0329  0816               	movf	(_usart_protocol^(0+384)+6),w
  6927  032A  1283               	bcf	3,5	;RP0=0, select bank0
  6928  032B  1303               	bcf	3,6	;RP1=0, select bank0
  6929  032C  00DF               	movwf	??_Decodify_Command
  6930  032D  01E0               	clrf	??_Decodify_Command+1
  6931  032E  085F               	movf	??_Decodify_Command,w
  6932  032F  00E0               	movwf	??_Decodify_Command+1
  6933  0330  01DF               	clrf	??_Decodify_Command
  6934  0331  1683               	bsf	3,5	;RP0=1, select bank3
  6935  0332  1703               	bsf	3,6	;RP1=1, select bank3
  6936  0333  0817               	movf	(_usart_protocol^(0+384)+7),w
  6937  0334  1283               	bcf	3,5	;RP0=0, select bank0
  6938  0335  1303               	bcf	3,6	;RP1=0, select bank0
  6939  0336  075F               	addwf	??_Decodify_Command,w
  6940  0337  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6941  0338  3000               	movlw	0
  6942  0339  1803               	skipnc
  6943  033A  3001               	movlw	1
  6944  033B  0760               	addwf	??_Decodify_Command+1,w
  6945  033C  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6946  033D  160A  118A  205B  120A  118A  	fcall	_PROCULUS_Buzzer
  6947  0342  2938               	goto	L7
  6948  0343                     l7130:	
  6949                           ;SlaveLiofilizadorVer1.c: 561:              Send_To_MB(3);
  6950                           
  6951                           
  6952                           ;SlaveLiofilizadorVer1.c: 565:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6953  0343  1683               	bsf	3,5	;RP0=1, select bank3
  6954  0344  1703               	bsf	3,6	;RP1=1, select bank3
  6955  0345  0816               	movf	(_usart_protocol^(0+384)+6),w
  6956  0346  1283               	bcf	3,5	;RP0=0, select bank0
  6957  0347  1303               	bcf	3,6	;RP1=0, select bank0
  6958  0348  00DF               	movwf	??_Decodify_Command
  6959  0349  01E0               	clrf	??_Decodify_Command+1
  6960  034A  085F               	movf	??_Decodify_Command,w
  6961  034B  00E0               	movwf	??_Decodify_Command+1
  6962  034C  01DF               	clrf	??_Decodify_Command
  6963  034D  1683               	bsf	3,5	;RP0=1, select bank3
  6964  034E  1703               	bsf	3,6	;RP1=1, select bank3
  6965  034F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6966  0350  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0351  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0352  075F               	addwf	??_Decodify_Command,w
  6969  0353  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6970  0354  3000               	movlw	0
  6971  0355  1803               	skipnc
  6972  0356  3001               	movlw	1
  6973  0357  0760               	addwf	??_Decodify_Command+1,w
  6974  0358  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6975  0359  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6976  035A  00E1               	movwf	??_Decodify_Command+2
  6977  035B  0861               	movf	??_Decodify_Command+2,w
  6978  035C  00DC               	movwf	PROCULUS_VP_Write_String@text
  6979  035D  160A  158A  2317  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6980  0362  2938               	goto	L7
  6981  0363                     l7136:	
  6982                           ;SlaveLiofilizadorVer1.c: 568:              Send_To_MB(3);
  6983                           
  6984                           
  6985                           ;SlaveLiofilizadorVer1.c: 574:              if(usart_protocol.value[0]==0)
  6986  0363  1683               	bsf	3,5	;RP0=1, select bank3
  6987  0364  1703               	bsf	3,6	;RP1=1, select bank3
  6988  0365  0816               	movf	(_usart_protocol^(0+384)+6),w
  6989  0366  1D03               	btfss	3,2
  6990  0367  2B73               	goto	l7142
  6991                           
  6992                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 if(!usart_protocol.value[1])
  6993  0368  0817               	movf	(_usart_protocol^(0+384)+7),w
  6994  0369  1D03               	btfss	3,2
  6995  036A  2B6F               	goto	l412
  6996                           
  6997                           ;SlaveLiofilizadorVer1.c: 577:                    PORTCbits.RC0=0;
  6998  036B  1283               	bcf	3,5	;RP0=0, select bank0
  6999  036C  1303               	bcf	3,6	;RP1=0, select bank0
  7000  036D  1007               	bcf	7,0	;volatile
  7001  036E  2938               	goto	L7
  7002  036F                     l412:	
  7003                           ;SlaveLiofilizadorVer1.c: 578:                 else
  7004                           
  7005                           
  7006                           ;SlaveLiofilizadorVer1.c: 579:                    PORTCbits.RC0=1;
  7007  036F  1283               	bcf	3,5	;RP0=0, select bank0
  7008  0370  1303               	bcf	3,6	;RP1=0, select bank0
  7009  0371  1407               	bsf	7,0	;volatile
  7010  0372  2938               	goto	L7
  7011  0373                     l7142:	
  7012  0373  0316               	decf	(_usart_protocol^(0+384)+6),w
  7013  0374  1D03               	btfss	3,2
  7014  0375  2938               	goto	L7
  7015                           
  7016                           ;SlaveLiofilizadorVer1.c: 582:                      {;SlaveLiofilizadorVer1.c: 583:     
      +                                            if(!usart_protocol.value[1])
  7017  0376  0817               	movf	(_usart_protocol^(0+384)+7),w
  7018  0377  1D03               	btfss	3,2
  7019  0378  2B7D               	goto	l416
  7020                           
  7021                           ;SlaveLiofilizadorVer1.c: 584:                          PORTCbits.RC1=0;
  7022  0379  1283               	bcf	3,5	;RP0=0, select bank0
  7023  037A  1303               	bcf	3,6	;RP1=0, select bank0
  7024  037B  1087               	bcf	7,1	;volatile
  7025  037C  2938               	goto	L7
  7026  037D                     l416:	
  7027                           ;SlaveLiofilizadorVer1.c: 585:                       else
  7028                           
  7029                           
  7030                           ;SlaveLiofilizadorVer1.c: 586:                          PORTCbits.RC1=1;
  7031  037D  1283               	bcf	3,5	;RP0=0, select bank0
  7032  037E  1303               	bcf	3,6	;RP1=0, select bank0
  7033  037F  1487               	bsf	7,1	;volatile
  7034  0380  2938               	goto	L7
  7035  0381                     l7154:	
  7036                           ;SlaveLiofilizadorVer1.c: 588:              Send_To_MB(3);
  7037                           
  7038  0381  1703               	bsf	3,6	;RP1=1, select bank3
  7039  0382  0814               	movf	(_usart_protocol^(0+384)+4),w
  7040  0383  1283               	bcf	3,5	;RP0=0, select bank0
  7041  0384  1303               	bcf	3,6	;RP1=0, select bank0
  7042  0385  00DF               	movwf	??_Decodify_Command
  7043  0386  01E0               	clrf	??_Decodify_Command+1
  7044                           
  7045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7046                           ; Switch size 1, requested type "simple"
  7047                           ; Number of cases is 1, Range of values is 0 to 0
  7048                           ; switch strategies available:
  7049                           ; Name         Instructions Cycles
  7050                           ; simple_byte            4     3 (average)
  7051                           ; direct_byte           11     8 (fixed)
  7052                           ; jumptable            260     6 (fixed)
  7053                           ;	Chosen strategy is simple_byte
  7054  0387  0860               	movf	??_Decodify_Command+1,w
  7055  0388  3A00               	xorlw	0	; case 0
  7056  0389  1903               	skipnz
  7057  038A  2B8C               	goto	l7312
  7058  038B  2BD3               	goto	l418
  7059  038C                     l7312:	
  7060                           
  7061                           ; Switch size 1, requested type "simple"
  7062                           ; Number of cases is 23, Range of values is 2 to 65
  7063                           ; switch strategies available:
  7064                           ; Name         Instructions Cycles
  7065                           ; simple_byte           70    36 (average)
  7066                           ; direct_byte          203    11 (fixed)
  7067                           ; jumptable            263     9 (fixed)
  7068                           ;	Chosen strategy is simple_byte
  7069  038C  085F               	movf	??_Decodify_Command,w
  7070  038D  3A02               	xorlw	2	; case 2
  7071  038E  1903               	skipnz
  7072  038F  28E0               	goto	l7014
  7073  0390  3A01               	xorlw	1	; case 3
  7074  0391  1903               	skipnz
  7075  0392  2919               	goto	l7022
  7076  0393  3A0B               	xorlw	11	; case 8
  7077  0394  1903               	skipnz
  7078  0395  2928               	goto	l7026
  7079  0396  3A01               	xorlw	1	; case 9
  7080  0397  1903               	skipnz
  7081  0398  2942               	goto	l7030
  7082  0399  3A03               	xorlw	3	; case 10
  7083  039A  1903               	skipnz
  7084  039B  295A               	goto	l7036
  7085  039C  3A01               	xorlw	1	; case 11
  7086  039D  1903               	skipnz
  7087  039E  298B               	goto	l7046
  7088  039F  3A07               	xorlw	7	; case 12
  7089  03A0  1903               	skipnz
  7090  03A1  29AB               	goto	l7052
  7091  03A2  3A01               	xorlw	1	; case 13
  7092  03A3  1903               	skipnz
  7093  03A4  29B8               	goto	l7058
  7094  03A5  3A1C               	xorlw	28	; case 17
  7095  03A6  1903               	skipnz
  7096  03A7  29C6               	goto	l7064
  7097  03A8  3A03               	xorlw	3	; case 18
  7098  03A9  1903               	skipnz
  7099  03AA  29E7               	goto	l7070
  7100  03AB  3A01               	xorlw	1	; case 19
  7101  03AC  1903               	skipnz
  7102  03AD  2A0E               	goto	l7076
  7103  03AE  3A07               	xorlw	7	; case 20
  7104  03AF  1903               	skipnz
  7105  03B0  2A3E               	goto	l7082
  7106  03B1  3A01               	xorlw	1	; case 21
  7107  03B2  1903               	skipnz
  7108  03B3  2ABB               	goto	l7102
  7109  03B4  3A03               	xorlw	3	; case 22
  7110  03B5  1903               	skipnz
  7111  03B6  2AD8               	goto	l7108
  7112  03B7  3A01               	xorlw	1	; case 23
  7113  03B8  1903               	skipnz
  7114  03B9  2A96               	goto	l7096
  7115  03BA  3A0F               	xorlw	15	; case 24
  7116  03BB  1903               	skipnz
  7117  03BC  2A5C               	goto	l7088
  7118  03BD  3A01               	xorlw	1	; case 25
  7119  03BE  1903               	skipnz
  7120  03BF  2B02               	goto	l7112
  7121  03C0  3A03               	xorlw	3	; case 26
  7122  03C1  1903               	skipnz
  7123  03C2  2878               	goto	l6998
  7124  03C3  3A38               	xorlw	56	; case 34
  7125  03C4  1903               	skipnz
  7126  03C5  2B43               	goto	l7130
  7127  03C6  3A06               	xorlw	6	; case 36
  7128  03C7  1903               	skipnz
  7129  03C8  2B27               	goto	l7124
  7130  03C9  3A01               	xorlw	1	; case 37
  7131  03CA  1903               	skipnz
  7132  03CB  2B16               	goto	l7118
  7133  03CC  3A15               	xorlw	21	; case 48
  7134  03CD  1903               	skipnz
  7135  03CE  2B63               	goto	l7136
  7136  03CF  3A71               	xorlw	113	; case 65
  7137  03D0  1903               	skipnz
  7138  03D1  285F               	goto	l6992
  7139  03D2  2BD3               	goto	l418
  7140  03D3                     l418:	
  7141  03D3  0008               	return
  7142  03D4                     __end_of_Decodify_Command:	
  7143                           
  7144                           	psect	text16
  7145  1BA1                     __ptext16:	
  7146 ;; *************** function _strcpy *****************
  7147 ;; Defined at:
  7148 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  to              1    wreg     PTR unsigned char 
  7151 ;;		 -> buffer(33), 
  7152 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7153 ;;		 -> STR_1(8), 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7156 ;;		 -> buffer(33), 
  7157 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7158 ;;		 -> buffer(33), 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      PTR unsigned char 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7163 ;; Tracked objects:
  7164 ;;		On entry : 300/0
  7165 ;;		On exit  : B00/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7168 ;;      Params:         0       1       0       0       0
  7169 ;;      Locals:         0       2       0       0       0
  7170 ;;      Temps:          0       1       0       0       0
  7171 ;;      Totals:         0       4       0       0       0
  7172 ;;Total ram usage:        4 bytes
  7173 ;; Hardware stack levels used:    2
  7174 ;; Hardware stack levels required when called:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_Decodify_Command
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _strcpy
  7184  1BA1                     _strcpy:	
  7185                           
  7186                           ;incstack = 0
  7187                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7188                           ;strcpy@to stored from wreg
  7189  1BA1  00A2               	movwf	strcpy@to
  7190  1BA2  0822               	movf	strcpy@to,w
  7191  1BA3  00A1               	movwf	??_strcpy
  7192  1BA4  0821               	movf	??_strcpy,w
  7193  1BA5  00A3               	movwf	strcpy@cp
  7194  1BA6                     l6526:	
  7195  1BA6  0820               	movf	strcpy@from,w
  7196  1BA7  0084               	movwf	4
  7197  1BA8  160A  118A  200A  160A  158A  	fcall	stringdir
  7198  1BAD  00A1               	movwf	??_strcpy
  7199  1BAE  0823               	movf	strcpy@cp,w
  7200  1BAF  0084               	movwf	4
  7201  1BB0  0821               	movf	??_strcpy,w
  7202  1BB1  1383               	bcf	3,7	;select IRP bank0
  7203  1BB2  0080               	movwf	0
  7204  1BB3  0800               	movf	0,w
  7205  1BB4  1903               	btfsc	3,2
  7206  1BB5  0008               	return
  7207  1BB6  3001               	movlw	1
  7208  1BB7  00A1               	movwf	??_strcpy
  7209  1BB8  0821               	movf	??_strcpy,w
  7210  1BB9  07A3               	addwf	strcpy@cp,f
  7211  1BBA  3001               	movlw	1
  7212  1BBB  00A1               	movwf	??_strcpy
  7213  1BBC  0821               	movf	??_strcpy,w
  7214  1BBD  07A0               	addwf	strcpy@from,f
  7215  1BBE  2BA6               	goto	l6526
  7216  1BBF                     __end_of_strcpy:	
  7217                           
  7218                           	psect	text17
  7219  1FAB                     __ptext17:	
  7220 ;; *************** function _USART_to_Protocol *****************
  7221 ;; Defined at:
  7222 ;;		line 77 in file "usart.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  usart_protoc    1    wreg     PTR struct .
  7225 ;;		 -> usart_protocol(58), 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7228 ;;		 -> usart_protocol(58), 
  7229 ;;  i               2    2[BANK0 ] int 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 300/100
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7239 ;;      Params:         0       0       0       0       0
  7240 ;;      Locals:         0       3       0       0       0
  7241 ;;      Temps:          0       2       0       0       0
  7242 ;;      Totals:         0       5       0       0       0
  7243 ;;Total ram usage:        5 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_Decodify_Command
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _USART_to_Protocol
  7255  1FAB                     _USART_to_Protocol:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7259                           ;USART_to_Protocol@usart_protocol stored from wreg
  7260  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  7261  1FAC  00A4               	movwf	USART_to_Protocol@usart_protocol
  7262                           
  7263                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7264  1FAD  0824               	movf	USART_to_Protocol@usart_protocol,w
  7265  1FAE  0084               	movwf	4
  7266  1FAF  1703               	bsf	3,6	;RP1=1, select bank2
  7267  1FB0  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7268  1FB1  1783               	bsf	3,7	;select IRP bank2
  7269  1FB2  0080               	movwf	0
  7270  1FB3  0A84               	incf	4,f
  7271  1FB4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7272  1FB5  0080               	movwf	0
  7273                           
  7274                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7275  1FB6  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7276  1FB7  1303               	bcf	3,6	;RP1=0, select bank0
  7277  1FB8  00A0               	movwf	??_USART_to_Protocol
  7278  1FB9  0824               	movf	USART_to_Protocol@usart_protocol,w
  7279  1FBA  3E02               	addlw	2
  7280  1FBB  0084               	movwf	4
  7281  1FBC  0820               	movf	??_USART_to_Protocol,w
  7282  1FBD  0080               	movwf	0
  7283                           
  7284                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7285  1FBE  1703               	bsf	3,6	;RP1=1, select bank2
  7286  1FBF  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7287  1FC0  1303               	bcf	3,6	;RP1=0, select bank0
  7288  1FC1  00A0               	movwf	??_USART_to_Protocol
  7289  1FC2  0824               	movf	USART_to_Protocol@usart_protocol,w
  7290  1FC3  3E03               	addlw	3
  7291  1FC4  0084               	movwf	4
  7292  1FC5  0820               	movf	??_USART_to_Protocol,w
  7293  1FC6  0080               	movwf	0
  7294                           
  7295                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7296  1FC7  1703               	bsf	3,6	;RP1=1, select bank2
  7297  1FC8  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7298  1FC9  1303               	bcf	3,6	;RP1=0, select bank0
  7299  1FCA  00A0               	movwf	??_USART_to_Protocol
  7300  1FCB  0824               	movf	USART_to_Protocol@usart_protocol,w
  7301  1FCC  3E04               	addlw	4
  7302  1FCD  0084               	movwf	4
  7303  1FCE  0820               	movf	??_USART_to_Protocol,w
  7304  1FCF  0080               	movwf	0
  7305                           
  7306                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7307  1FD0  1703               	bsf	3,6	;RP1=1, select bank2
  7308  1FD1  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7309  1FD2  1303               	bcf	3,6	;RP1=0, select bank0
  7310  1FD3  00A0               	movwf	??_USART_to_Protocol
  7311  1FD4  0824               	movf	USART_to_Protocol@usart_protocol,w
  7312  1FD5  3E05               	addlw	5
  7313  1FD6  0084               	movwf	4
  7314  1FD7  0820               	movf	??_USART_to_Protocol,w
  7315  1FD8  0080               	movwf	0
  7316                           
  7317                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7318  1FD9  01A2               	clrf	USART_to_Protocol@i
  7319  1FDA  01A3               	clrf	USART_to_Protocol@i+1
  7320  1FDB                     l6520:	
  7321  1FDB  0824               	movf	USART_to_Protocol@usart_protocol,w
  7322  1FDC  3E05               	addlw	5
  7323  1FDD  0084               	movwf	4
  7324  1FDE  0823               	movf	USART_to_Protocol@i+1,w
  7325  1FDF  3A80               	xorlw	128
  7326  1FE0  00A0               	movwf	??_USART_to_Protocol
  7327  1FE1  3080               	movlw	128
  7328  1FE2  0220               	subwf	??_USART_to_Protocol,w
  7329  1FE3  1D03               	skipz
  7330  1FE4  2FE7               	goto	u6935
  7331  1FE5  0800               	movf	0,w
  7332  1FE6  0222               	subwf	USART_to_Protocol@i,w
  7333  1FE7                     u6935:	
  7334  1FE7  1803               	btfsc	3,0
  7335  1FE8  0008               	return
  7336                           
  7337                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7338  1FE9  1283               	bcf	3,5	;RP0=0, select bank0
  7339  1FEA  1303               	bcf	3,6	;RP1=0, select bank0
  7340  1FEB  0822               	movf	USART_to_Protocol@i,w
  7341  1FEC  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7342  1FED  0084               	movwf	4
  7343  1FEE  1783               	bsf	3,7	;select IRP bank2
  7344  1FEF  0800               	movf	0,w
  7345  1FF0  00A0               	movwf	??_USART_to_Protocol
  7346  1FF1  0822               	movf	USART_to_Protocol@i,w
  7347  1FF2  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7348  1FF3  00A1               	movwf	??_USART_to_Protocol+1
  7349  1FF4  0821               	movf	??_USART_to_Protocol+1,w
  7350  1FF5  3E06               	addlw	6
  7351  1FF6  0084               	movwf	4
  7352  1FF7  0820               	movf	??_USART_to_Protocol,w
  7353  1FF8  0080               	movwf	0
  7354  1FF9  3001               	movlw	1
  7355  1FFA  07A2               	addwf	USART_to_Protocol@i,f
  7356  1FFB  1803               	skipnc
  7357  1FFC  0AA3               	incf	USART_to_Protocol@i+1,f
  7358  1FFD  3000               	movlw	0
  7359  1FFE  07A3               	addwf	USART_to_Protocol@i+1,f
  7360  1FFF  2FDB               	goto	l6520
  7361  2000                     __end_of_USART_to_Protocol:	
  7362                           
  7363                           	psect	text18
  7364  1B84                     __ptext18:	
  7365 ;; *************** function _USART_put_buffer *****************
  7366 ;; Defined at:
  7367 ;;		line 99 in file "usart.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  vetor           1    wreg     PTR unsigned char 
  7370 ;;		 -> buffer(33), 
  7371 ;;  size            1    1[BANK0 ] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  vetor           1    3[BANK0 ] PTR unsigned char 
  7374 ;;		 -> buffer(33), 
  7375 ;;  ptr             1    5[BANK0 ] PTR unsigned char 
  7376 ;;		 -> buffer(33), 
  7377 ;;  loop            1    4[BANK0 ] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 300/0
  7384 ;;		On exit  : 300/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7387 ;;      Params:         0       1       0       0       0
  7388 ;;      Locals:         0       3       0       0       0
  7389 ;;      Temps:          0       1       0       0       0
  7390 ;;      Totals:         0       5       0       0       0
  7391 ;;Total ram usage:        5 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    2
  7394 ;; This function calls:
  7395 ;;		_USART_putc
  7396 ;; This function is called by:
  7397 ;;		_Decodify_Command
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           
  7402                           ;psect for function _USART_put_buffer
  7403  1B84                     _USART_put_buffer:	
  7404                           
  7405                           ;incstack = 0
  7406                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7407                           ;USART_put_buffer@vetor stored from wreg
  7408  1B84  00A3               	movwf	USART_put_buffer@vetor
  7409                           
  7410                           ;usart.c: 100:     char loop=0;
  7411  1B85  01A4               	clrf	USART_put_buffer@loop
  7412                           
  7413                           ;usart.c: 101:     char *ptr;;usart.c: 102:     ptr = vetor;
  7414  1B86  0823               	movf	USART_put_buffer@vetor,w
  7415  1B87  00A2               	movwf	??_USART_put_buffer
  7416  1B88  0822               	movf	??_USART_put_buffer,w
  7417  1B89  00A5               	movwf	USART_put_buffer@ptr
  7418  1B8A                     l6566:	
  7419                           ;usart.c: 104:     while(loop<size)
  7420                           
  7421                           
  7422                           ;usart.c: 104:     while(loop<size)
  7423  1B8A  0821               	movf	USART_put_buffer@size,w
  7424  1B8B  0224               	subwf	USART_put_buffer@loop,w
  7425  1B8C  1803               	btfsc	3,0
  7426  1B8D  0008               	return
  7427                           
  7428                           ;usart.c: 105:     {;usart.c: 106:         USART_putc(*ptr);
  7429  1B8E  0825               	movf	USART_put_buffer@ptr,w
  7430  1B8F  0084               	movwf	4
  7431  1B90  1383               	bcf	3,7	;select IRP bank0
  7432  1B91  0800               	movf	0,w
  7433  1B92  160A  158A  229C  160A  158A  	fcall	_USART_putc
  7434                           
  7435                           ;usart.c: 107:         ptr++;
  7436  1B97  3001               	movlw	1
  7437  1B98  1283               	bcf	3,5	;RP0=0, select bank0
  7438  1B99  00A2               	movwf	??_USART_put_buffer
  7439  1B9A  0822               	movf	??_USART_put_buffer,w
  7440  1B9B  07A5               	addwf	USART_put_buffer@ptr,f
  7441                           
  7442                           ;usart.c: 108:         loop++;
  7443  1B9C  3001               	movlw	1
  7444  1B9D  00A2               	movwf	??_USART_put_buffer
  7445  1B9E  0822               	movf	??_USART_put_buffer,w
  7446  1B9F  07A4               	addwf	USART_put_buffer@loop,f
  7447  1BA0  2B8A               	goto	l6566
  7448  1BA1                     __end_of_USART_put_buffer:	
  7449                           
  7450                           	psect	text19
  7451  0801                     __ptext19:	
  7452 ;; *************** function _Send_To_MB *****************
  7453 ;; Defined at:
  7454 ;;		line 598 in file "SlaveLiofilizadorVer1.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  size            1    wreg     unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  size            1    1[BANK0 ] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, pclath, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 300/100
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7468 ;;      Params:         0       0       0       0       0
  7469 ;;      Locals:         0       1       0       0       0
  7470 ;;      Temps:          0       0       0       0       0
  7471 ;;      Totals:         0       1       0       0       0
  7472 ;;Total ram usage:        1 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    2
  7475 ;; This function calls:
  7476 ;;		_USART_putc
  7477 ;; This function is called by:
  7478 ;;		_Decodify_Command
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function _Send_To_MB
  7484  0801                     _Send_To_MB:	
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7488                           ;Send_To_MB@size stored from wreg
  7489  0801  1283               	bcf	3,5	;RP0=0, select bank0
  7490  0802  1303               	bcf	3,6	;RP1=0, select bank0
  7491  0803  00A1               	movwf	Send_To_MB@size
  7492                           
  7493                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xAA);
  7494  0804  30AA               	movlw	170
  7495  0805  160A  158A  229C  120A  158A  	fcall	_USART_putc
  7496                           
  7497                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(0xBB);
  7498  080A  30BB               	movlw	187
  7499  080B  160A  158A  229C  120A  158A  	fcall	_USART_putc
  7500                           
  7501                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(Board_Number);
  7502  0810  0838               	movf	_Board_Number^(0+128),w
  7503  0811  160A  158A  229C  120A  158A  	fcall	_USART_putc
  7504                           
  7505                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(0x00);
  7506  0816  3000               	movlw	0
  7507  0817  160A  158A  229C  120A  158A  	fcall	_USART_putc
  7508                           
  7509                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(usart_protocol.command);
  7510  081C  1703               	bsf	3,6	;RP1=1, select bank3
  7511  081D  0814               	movf	(_usart_protocol^(0+384)+4),w
  7512  081E  160A  158A  229C  120A  158A  	fcall	_USART_putc
  7513                           
  7514                           ;SlaveLiofilizadorVer1.c: 605:      USART_putc(size);
  7515  0823  1283               	bcf	3,5	;RP0=0, select bank0
  7516  0824  0821               	movf	Send_To_MB@size,w
  7517  0825  160A  158A  229C   	fcall	_USART_putc
  7518  0828  0008               	return
  7519  0829                     __end_of_Send_To_MB:	
  7520                           
  7521                           	psect	text20
  7522  1A68                     __ptext20:	
  7523 ;; *************** function _Send_Reply_OK *****************
  7524 ;; Defined at:
  7525 ;;		line 609 in file "SlaveLiofilizadorVer1.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 300/100
  7536 ;;		On exit  : 300/100
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7539 ;;      Params:         0       0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0
  7542 ;;      Totals:         0       0       0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    3
  7546 ;; This function calls:
  7547 ;;		_USART_put_string
  7548 ;; This function is called by:
  7549 ;;		_Decodify_Command
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _Send_Reply_OK
  7555  1A68                     _Send_Reply_OK:	
  7556                           
  7557                           ;SlaveLiofilizadorVer1.c: 610:      USART_put_string("OK");
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7561  1A68  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7562  1A69  1283               	bcf	3,5	;RP0=0, select bank0
  7563  1A6A  00A1               	movwf	USART_put_string@vetor
  7564  1A6B  3080               	movlw	128
  7565  1A6C  00A2               	movwf	USART_put_string@vetor+1
  7566  1A6D  160A  158A  2563   	fcall	_USART_put_string
  7567  1A70  0008               	return
  7568  1A71                     __end_of_Send_Reply_OK:	
  7569                           
  7570                           	psect	text21
  7571  1D63                     __ptext21:	
  7572 ;; *************** function _USART_put_string *****************
  7573 ;; Defined at:
  7574 ;;		line 167 in file "usart.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7577 ;;		 -> STR_2(3), buffer(33), 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7580 ;;		 -> STR_2(3), buffer(33), 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 300/0
  7587 ;;		On exit  : 300/100
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7590 ;;      Params:         0       2       0       0       0
  7591 ;;      Locals:         0       2       0       0       0
  7592 ;;      Temps:          0       0       0       0       0
  7593 ;;      Totals:         0       4       0       0       0
  7594 ;;Total ram usage:        4 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    2
  7597 ;; This function calls:
  7598 ;;		_USART_putc
  7599 ;; This function is called by:
  7600 ;;		_Decodify_Command
  7601 ;;		_Send_Reply_OK
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function _USART_put_string
  7607  1D63                     _USART_put_string:	
  7608                           
  7609                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7613  1D63  0821               	movf	USART_put_string@vetor,w
  7614  1D64  00A3               	movwf	USART_put_string@ptr
  7615  1D65  0822               	movf	USART_put_string@vetor+1,w
  7616  1D66  00A4               	movwf	USART_put_string@ptr+1
  7617  1D67                     l5726:	
  7618                           ;usart.c: 171:     while(*ptr){
  7619                           
  7620                           
  7621                           ;usart.c: 171:     while(*ptr){
  7622  1D67  0824               	movf	USART_put_string@ptr+1,w
  7623  1D68  00FF               	movwf	127
  7624  1D69  0823               	movf	USART_put_string@ptr,w
  7625  1D6A  0084               	movwf	4
  7626  1D6B  160A  118A  2000  160A  158A  	fcall	stringtab
  7627  1D70  3A00               	xorlw	0
  7628  1D71  1903               	btfsc	3,2
  7629  1D72  2D89               	goto	l5728
  7630                           
  7631                           ;usart.c: 172:         USART_putc(*ptr);
  7632  1D73  0824               	movf	USART_put_string@ptr+1,w
  7633  1D74  00FF               	movwf	127
  7634  1D75  0823               	movf	USART_put_string@ptr,w
  7635  1D76  0084               	movwf	4
  7636  1D77  160A  118A  2000  160A  158A  	fcall	stringtab
  7637  1D7C  160A  158A  229C  160A  158A  	fcall	_USART_putc
  7638                           
  7639                           ;usart.c: 173:         ptr++;
  7640  1D81  3001               	movlw	1
  7641  1D82  1283               	bcf	3,5	;RP0=0, select bank0
  7642  1D83  07A3               	addwf	USART_put_string@ptr,f
  7643  1D84  1803               	skipnc
  7644  1D85  0AA4               	incf	USART_put_string@ptr+1,f
  7645  1D86  3000               	movlw	0
  7646  1D87  07A4               	addwf	USART_put_string@ptr+1,f
  7647  1D88  2D67               	goto	l5726
  7648  1D89                     l5728:	
  7649                           
  7650                           ;usart.c: 175:     USART_putc(*ptr);
  7651  1D89  0824               	movf	USART_put_string@ptr+1,w
  7652  1D8A  00FF               	movwf	127
  7653  1D8B  0823               	movf	USART_put_string@ptr,w
  7654  1D8C  0084               	movwf	4
  7655  1D8D  160A  118A  2000  160A  158A  	fcall	stringtab
  7656  1D92  160A  158A  229C   	fcall	_USART_putc
  7657  1D95  0008               	return
  7658  1D96                     __end_of_USART_put_string:	
  7659                           
  7660                           	psect	text22
  7661  119C                     __ptext22:	
  7662 ;; *************** function _Save_Log *****************
  7663 ;; Defined at:
  7664 ;;		line 969 in file "SlaveLiofilizadorVer1.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 300/0
  7675 ;;		On exit  : 300/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7678 ;;      Params:         0       4       0       0       0
  7679 ;;      Locals:         0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0
  7681 ;;      Totals:         0       4       0       0       0
  7682 ;;Total ram usage:        4 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    5
  7685 ;; This function calls:
  7686 ;;		_EEPROM_24C1025_Write_Int
  7687 ;;		___flmul
  7688 ;;		___fltol
  7689 ;; This function is called by:
  7690 ;;		_Decodify_Command
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _Save_Log
  7696  119C                     _Save_Log:	
  7697                           
  7698                           ;SlaveLiofilizadorVer1.c: 970:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (T
      +                          ensao1*10));
  7699                           
  7700                           ;incstack = 0
  7701                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7702  119C  085B               	movf	Save_Log@add_datalog+3,w
  7703  119D  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7704  119E  085A               	movf	Save_Log@add_datalog+2,w
  7705  119F  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7706  11A0  0859               	movf	Save_Log@add_datalog+1,w
  7707  11A1  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7708  11A2  0858               	movf	Save_Log@add_datalog,w
  7709  11A3  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7710  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  7711  11A5  0823               	movf	(_Tensao1+3)^(0+128),w
  7712  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  7713  11A7  00B0               	movwf	___flmul@a+3
  7714  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  7715  11A9  0822               	movf	(_Tensao1+2)^(0+128),w
  7716  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  7717  11AB  00AF               	movwf	___flmul@a+2
  7718  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  7719  11AD  0821               	movf	(_Tensao1+1)^(0+128),w
  7720  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  7721  11AF  00AE               	movwf	___flmul@a+1
  7722  11B0  1683               	bsf	3,5	;RP0=1, select bank1
  7723  11B1  0820               	movf	_Tensao1^(0+128),w
  7724  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  7725  11B3  00AD               	movwf	___flmul@a
  7726  11B4  3041               	movlw	65
  7727  11B5  00AC               	movwf	___flmul@b+3
  7728  11B6  3020               	movlw	32
  7729  11B7  00AB               	movwf	___flmul@b+2
  7730  11B8  3000               	movlw	0
  7731  11B9  00AA               	movwf	___flmul@b+1
  7732  11BA  3000               	movlw	0
  7733  11BB  00A9               	movwf	___flmul@b
  7734  11BC  120A  118A  23D4  160A  118A  	fcall	___flmul
  7735  11C1  082C               	movf	?___flmul+3,w
  7736  11C2  00C6               	movwf	___fltol@f1+3
  7737  11C3  082B               	movf	?___flmul+2,w
  7738  11C4  00C5               	movwf	___fltol@f1+2
  7739  11C5  082A               	movf	?___flmul+1,w
  7740  11C6  00C4               	movwf	___fltol@f1+1
  7741  11C7  0829               	movf	?___flmul,w
  7742  11C8  00C3               	movwf	___fltol@f1
  7743  11C9  160A  118A  2131  160A  118A  	fcall	___fltol
  7744  11CE  0844               	movf	?___fltol+1,w
  7745  11CF  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7746  11D0  0843               	movf	?___fltol,w
  7747  11D1  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7748  11D2  3000               	movlw	0
  7749  11D3  160A  158A  23DD  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7750                           
  7751                           ;SlaveLiofilizadorVer1.c: 971:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (V
      +                          accum0*10));
  7752  11D8  085B               	movf	Save_Log@add_datalog+3,w
  7753  11D9  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7754  11DA  085A               	movf	Save_Log@add_datalog+2,w
  7755  11DB  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7756  11DC  0859               	movf	Save_Log@add_datalog+1,w
  7757  11DD  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7758  11DE  0858               	movf	Save_Log@add_datalog,w
  7759  11DF  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7760  11E0  1683               	bsf	3,5	;RP0=1, select bank1
  7761  11E1  0827               	movf	(_Vaccum0+3)^(0+128),w
  7762  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  7763  11E3  00B0               	movwf	___flmul@a+3
  7764  11E4  1683               	bsf	3,5	;RP0=1, select bank1
  7765  11E5  0826               	movf	(_Vaccum0+2)^(0+128),w
  7766  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  7767  11E7  00AF               	movwf	___flmul@a+2
  7768  11E8  1683               	bsf	3,5	;RP0=1, select bank1
  7769  11E9  0825               	movf	(_Vaccum0+1)^(0+128),w
  7770  11EA  1283               	bcf	3,5	;RP0=0, select bank0
  7771  11EB  00AE               	movwf	___flmul@a+1
  7772  11EC  1683               	bsf	3,5	;RP0=1, select bank1
  7773  11ED  0824               	movf	_Vaccum0^(0+128),w
  7774  11EE  1283               	bcf	3,5	;RP0=0, select bank0
  7775  11EF  00AD               	movwf	___flmul@a
  7776  11F0  3041               	movlw	65
  7777  11F1  00AC               	movwf	___flmul@b+3
  7778  11F2  3020               	movlw	32
  7779  11F3  00AB               	movwf	___flmul@b+2
  7780  11F4  3000               	movlw	0
  7781  11F5  00AA               	movwf	___flmul@b+1
  7782  11F6  3000               	movlw	0
  7783  11F7  00A9               	movwf	___flmul@b
  7784  11F8  120A  118A  23D4  160A  118A  	fcall	___flmul
  7785  11FD  082C               	movf	?___flmul+3,w
  7786  11FE  00C6               	movwf	___fltol@f1+3
  7787  11FF  082B               	movf	?___flmul+2,w
  7788  1200  00C5               	movwf	___fltol@f1+2
  7789  1201  082A               	movf	?___flmul+1,w
  7790  1202  00C4               	movwf	___fltol@f1+1
  7791  1203  0829               	movf	?___flmul,w
  7792  1204  00C3               	movwf	___fltol@f1
  7793  1205  160A  118A  2131  160A  118A  	fcall	___fltol
  7794  120A  0844               	movf	?___fltol+1,w
  7795  120B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7796  120C  0843               	movf	?___fltol,w
  7797  120D  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7798  120E  3001               	movlw	1
  7799  120F  160A  158A  23DD   	fcall	_EEPROM_24C1025_Write_Int
  7800  1212  0008               	return
  7801  1213                     __end_of_Save_Log:	
  7802                           
  7803                           	psect	text23
  7804  1131                     __ptext23:	
  7805 ;; *************** function ___fltol *****************
  7806 ;; Defined at:
  7807 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  f1              4   35[BANK0 ] void 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  exp1            1   45[BANK0 ] unsigned char 
  7812 ;;  sign1           1   44[BANK0 ] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  4   35[BANK0 ] long 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 300/0
  7819 ;;		On exit  : 300/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7822 ;;      Params:         0       4       0       0       0
  7823 ;;      Locals:         0       2       0       0       0
  7824 ;;      Temps:          0       5       0       0       0
  7825 ;;      Totals:         0      11       0       0       0
  7826 ;;Total ram usage:       11 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:    1
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_Decodify_Command
  7833 ;;		_Save_Log
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function ___fltol
  7839  1131                     ___fltol:	
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7843  1131  1003               	clrc
  7844  1132  0D45               	rlf	___fltol@f1+2,w
  7845  1133  0D46               	rlf	___fltol@f1+3,w
  7846  1134  00C7               	movwf	??___fltol
  7847  1135  0847               	movf	??___fltol,w
  7848  1136  00CD               	movwf	___fltol@exp1
  7849  1137  084D               	movf	___fltol@exp1,w
  7850  1138  1D03               	btfss	3,2
  7851  1139  2943               	goto	l5828
  7852  113A                     l5824:	
  7853  113A  3000               	movlw	0
  7854  113B  00C6               	movwf	?___fltol+3
  7855  113C  3000               	movlw	0
  7856  113D  00C5               	movwf	?___fltol+2
  7857  113E  3000               	movlw	0
  7858  113F  00C4               	movwf	?___fltol+1
  7859  1140  3000               	movlw	0
  7860  1141  00C3               	movwf	?___fltol
  7861  1142  0008               	return
  7862  1143                     l5828:	
  7863  1143  0843               	movf	___fltol@f1,w
  7864  1144  00C7               	movwf	??___fltol
  7865  1145  0844               	movf	___fltol@f1+1,w
  7866  1146  00C8               	movwf	??___fltol+1
  7867  1147  0845               	movf	___fltol@f1+2,w
  7868  1148  00C9               	movwf	??___fltol+2
  7869  1149  0846               	movf	___fltol@f1+3,w
  7870  114A  00CA               	movwf	??___fltol+3
  7871  114B  301F               	movlw	31
  7872  114C                     u5655:	
  7873  114C  1003               	clrc
  7874  114D  0CCA               	rrf	??___fltol+3,f
  7875  114E  0CC9               	rrf	??___fltol+2,f
  7876  114F  0CC8               	rrf	??___fltol+1,f
  7877  1150  0CC7               	rrf	??___fltol,f
  7878  1151  3EFF               	addlw	-1
  7879  1152  1D03               	skipz
  7880  1153  294C               	goto	u5655
  7881  1154  0847               	movf	??___fltol,w
  7882  1155  00CB               	movwf	??___fltol+4
  7883  1156  084B               	movf	??___fltol+4,w
  7884  1157  00CC               	movwf	___fltol@sign1
  7885  1158  17C5               	bsf	___fltol@f1+2,7
  7886  1159  30FF               	movlw	255
  7887  115A  05C3               	andwf	___fltol@f1,f
  7888  115B  30FF               	movlw	255
  7889  115C  05C4               	andwf	___fltol@f1+1,f
  7890  115D  30FF               	movlw	255
  7891  115E  05C5               	andwf	___fltol@f1+2,f
  7892  115F  3000               	movlw	0
  7893  1160  05C6               	andwf	___fltol@f1+3,f
  7894  1161  3096               	movlw	150
  7895  1162  02CD               	subwf	___fltol@exp1,f
  7896  1163  1FCD               	btfss	___fltol@exp1,7
  7897  1164  297A               	goto	l5846
  7898  1165  084D               	movf	___fltol@exp1,w
  7899  1166  3A80               	xorlw	128
  7900  1167  3E97               	addlw	151
  7901  1168  1C03               	btfss	3,0
  7902  1169  293A               	goto	l5824
  7903  116A                     l5844:	
  7904  116A  3001               	movlw	1
  7905  116B                     u5685:	
  7906  116B  1003               	clrc
  7907  116C  0CC6               	rrf	___fltol@f1+3,f
  7908  116D  0CC5               	rrf	___fltol@f1+2,f
  7909  116E  0CC4               	rrf	___fltol@f1+1,f
  7910  116F  0CC3               	rrf	___fltol@f1,f
  7911  1170  3EFF               	addlw	-1
  7912  1171  1D03               	skipz
  7913  1172  296B               	goto	u5685
  7914  1173  3001               	movlw	1
  7915  1174  00C7               	movwf	??___fltol
  7916  1175  0847               	movf	??___fltol,w
  7917  1176  07CD               	addwf	___fltol@exp1,f
  7918  1177  1903               	btfsc	3,2
  7919  1178  298D               	goto	l5854
  7920  1179  296A               	goto	l5844
  7921  117A                     l5846:	
  7922  117A  3020               	movlw	32
  7923  117B  024D               	subwf	___fltol@exp1,w
  7924  117C  1803               	btfsc	3,0
  7925  117D  293A               	goto	l5824
  7926  117E                     l1175:	
  7927  117E  084D               	movf	___fltol@exp1,w
  7928  117F  1903               	btfsc	3,2
  7929  1180  298D               	goto	l5854
  7930  1181  3001               	movlw	1
  7931  1182  00C7               	movwf	??___fltol
  7932  1183                     u5715:	
  7933  1183  1003               	clrc
  7934  1184  0DC3               	rlf	___fltol@f1,f
  7935  1185  0DC4               	rlf	___fltol@f1+1,f
  7936  1186  0DC5               	rlf	___fltol@f1+2,f
  7937  1187  0DC6               	rlf	___fltol@f1+3,f
  7938  1188  0BC7               	decfsz	??___fltol,f
  7939  1189  2983               	goto	u5715
  7940  118A  3001               	movlw	1
  7941  118B  02CD               	subwf	___fltol@exp1,f
  7942  118C  297E               	goto	l1175
  7943  118D                     l5854:	
  7944  118D  084C               	movf	___fltol@sign1,w
  7945  118E  1903               	btfsc	3,2
  7946  118F  0008               	return
  7947  1190  09C3               	comf	___fltol@f1,f
  7948  1191  09C4               	comf	___fltol@f1+1,f
  7949  1192  09C5               	comf	___fltol@f1+2,f
  7950  1193  09C6               	comf	___fltol@f1+3,f
  7951  1194  0AC3               	incf	___fltol@f1,f
  7952  1195  1903               	skipnz
  7953  1196  0AC4               	incf	___fltol@f1+1,f
  7954  1197  1903               	skipnz
  7955  1198  0AC5               	incf	___fltol@f1+2,f
  7956  1199  1903               	skipnz
  7957  119A  0AC6               	incf	___fltol@f1+3,f
  7958  119B  0008               	return
  7959  119C                     __end_of___fltol:	
  7960                           
  7961                           	psect	text24
  7962  03D4                     __ptext24:	
  7963 ;; *************** function ___flmul *****************
  7964 ;; Defined at:
  7965 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  b               4    9[BANK0 ] long 
  7968 ;;  a               4   13[BANK0 ] long 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  prod            4   29[BANK0 ] struct .
  7971 ;;  grs             4   25[BANK0 ] unsigned long 
  7972 ;;  temp            2   33[BANK0 ] struct .
  7973 ;;  bexp            1   24[BANK0 ] unsigned char 
  7974 ;;  aexp            1   23[BANK0 ] unsigned char 
  7975 ;;  sign            1   22[BANK0 ] unsigned char 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  4    9[BANK0 ] unsigned char 
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 300/0
  7982 ;;		On exit  : 300/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7985 ;;      Params:         0       8       0       0       0
  7986 ;;      Locals:         0      13       0       0       0
  7987 ;;      Temps:          0       5       0       0       0
  7988 ;;      Totals:         0      26       0       0       0
  7989 ;;Total ram usage:       26 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    2
  7992 ;; This function calls:
  7993 ;;		__Umul8_16
  7994 ;; This function is called by:
  7995 ;;		_Decodify_Command
  7996 ;;		_MediaPlacaVaccum
  7997 ;;		_Save_Log
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function ___flmul
  8003  03D4                     ___flmul:	
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8007  03D4  082C               	movf	___flmul@b+3,w
  8008  03D5  3980               	andlw	128
  8009  03D6  00B1               	movwf	??___flmul
  8010  03D7  0831               	movf	??___flmul,w
  8011  03D8  00B6               	movwf	___flmul@sign
  8012  03D9  082C               	movf	___flmul@b+3,w
  8013  03DA  00B1               	movwf	??___flmul
  8014  03DB  0731               	addwf	??___flmul,w
  8015  03DC  00B2               	movwf	??___flmul+1
  8016  03DD  0832               	movf	??___flmul+1,w
  8017  03DE  00B8               	movwf	___flmul@bexp
  8018  03DF  1BAB               	btfsc	___flmul@b+2,7
  8019  03E0  1438               	bsf	___flmul@bexp,0
  8020  03E1  0838               	movf	___flmul@bexp,w
  8021  03E2  1903               	btfsc	3,2
  8022  03E3  2BF1               	goto	l6094
  8023  03E4  0A38               	incf	___flmul@bexp,w
  8024  03E5  1D03               	btfss	3,2
  8025  03E6  2BEF               	goto	l6092
  8026  03E7  3000               	movlw	0
  8027  03E8  00AC               	movwf	___flmul@b+3
  8028  03E9  3000               	movlw	0
  8029  03EA  00AB               	movwf	___flmul@b+2
  8030  03EB  3000               	movlw	0
  8031  03EC  00AA               	movwf	___flmul@b+1
  8032  03ED  3000               	movlw	0
  8033  03EE  00A9               	movwf	___flmul@b
  8034  03EF                     l6092:	
  8035  03EF  17AB               	bsf	___flmul@b+2,7
  8036  03F0  2BF9               	goto	l6096
  8037  03F1                     l6094:	
  8038  03F1  3000               	movlw	0
  8039  03F2  00AC               	movwf	___flmul@b+3
  8040  03F3  3000               	movlw	0
  8041  03F4  00AB               	movwf	___flmul@b+2
  8042  03F5  3000               	movlw	0
  8043  03F6  00AA               	movwf	___flmul@b+1
  8044  03F7  3000               	movlw	0
  8045  03F8  00A9               	movwf	___flmul@b
  8046  03F9                     l6096:	
  8047  03F9  0830               	movf	___flmul@a+3,w
  8048  03FA  3980               	andlw	128
  8049  03FB  00B1               	movwf	??___flmul
  8050  03FC  0831               	movf	??___flmul,w
  8051  03FD  06B6               	xorwf	___flmul@sign,f
  8052  03FE  0830               	movf	___flmul@a+3,w
  8053  03FF  00B1               	movwf	??___flmul
  8054  0400  0731               	addwf	??___flmul,w
  8055  0401  00B2               	movwf	??___flmul+1
  8056  0402  0832               	movf	??___flmul+1,w
  8057  0403  00B7               	movwf	___flmul@aexp
  8058  0404  1BAF               	btfsc	___flmul@a+2,7
  8059  0405  1437               	bsf	___flmul@aexp,0
  8060  0406  0837               	movf	___flmul@aexp,w
  8061  0407  1903               	btfsc	3,2
  8062  0408  2C16               	goto	l6112
  8063  0409  0A37               	incf	___flmul@aexp,w
  8064  040A  1D03               	btfss	3,2
  8065  040B  2C14               	goto	l6110
  8066  040C  3000               	movlw	0
  8067  040D  00B0               	movwf	___flmul@a+3
  8068  040E  3000               	movlw	0
  8069  040F  00AF               	movwf	___flmul@a+2
  8070  0410  3000               	movlw	0
  8071  0411  00AE               	movwf	___flmul@a+1
  8072  0412  3000               	movlw	0
  8073  0413  00AD               	movwf	___flmul@a
  8074  0414                     l6110:	
  8075  0414  17AF               	bsf	___flmul@a+2,7
  8076  0415  2C1E               	goto	l6114
  8077  0416                     l6112:	
  8078  0416  3000               	movlw	0
  8079  0417  00B0               	movwf	___flmul@a+3
  8080  0418  3000               	movlw	0
  8081  0419  00AF               	movwf	___flmul@a+2
  8082  041A  3000               	movlw	0
  8083  041B  00AE               	movwf	___flmul@a+1
  8084  041C  3000               	movlw	0
  8085  041D  00AD               	movwf	___flmul@a
  8086  041E                     l6114:	
  8087  041E  0837               	movf	___flmul@aexp,w
  8088  041F  1D03               	btfss	3,2
  8089  0420  0838               	movf	___flmul@bexp,w
  8090  0421  1D03               	btfss	3,2
  8091  0422  2C2C               	goto	l6122
  8092  0423  3000               	movlw	0
  8093  0424  00AC               	movwf	?___flmul+3
  8094  0425  3000               	movlw	0
  8095  0426  00AB               	movwf	?___flmul+2
  8096  0427  3000               	movlw	0
  8097  0428  00AA               	movwf	?___flmul+1
  8098  0429  3000               	movlw	0
  8099  042A  00A9               	movwf	?___flmul
  8100  042B  0008               	return
  8101  042C                     l6122:	
  8102  042C  0829               	movf	___flmul@b,w
  8103  042D  00B1               	movwf	??___flmul
  8104  042E  0831               	movf	??___flmul,w
  8105  042F  00A0               	movwf	__Umul8_16@multiplicand
  8106  0430  082F               	movf	___flmul@a+2,w
  8107  0431  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8108  0436  0821               	movf	?__Umul8_16+1,w
  8109  0437  00C2               	movwf	___flmul@temp+1
  8110  0438  0820               	movf	?__Umul8_16,w
  8111  0439  00C1               	movwf	___flmul@temp
  8112  043A  0841               	movf	___flmul@temp,w
  8113  043B  00B1               	movwf	??___flmul
  8114  043C  01B2               	clrf	??___flmul+1
  8115  043D  01B3               	clrf	??___flmul+2
  8116  043E  01B4               	clrf	??___flmul+3
  8117  043F  0834               	movf	??___flmul+3,w
  8118  0440  00BC               	movwf	___flmul@grs+3
  8119  0441  0833               	movf	??___flmul+2,w
  8120  0442  00BB               	movwf	___flmul@grs+2
  8121  0443  0832               	movf	??___flmul+1,w
  8122  0444  00BA               	movwf	___flmul@grs+1
  8123  0445  0831               	movf	??___flmul,w
  8124  0446  00B9               	movwf	___flmul@grs
  8125  0447  0842               	movf	___flmul@temp+1,w
  8126  0448  00B1               	movwf	??___flmul
  8127  0449  01B2               	clrf	??___flmul+1
  8128  044A  01B3               	clrf	??___flmul+2
  8129  044B  01B4               	clrf	??___flmul+3
  8130  044C  0834               	movf	??___flmul+3,w
  8131  044D  00C0               	movwf	___flmul@prod+3
  8132  044E  0833               	movf	??___flmul+2,w
  8133  044F  00BF               	movwf	___flmul@prod+2
  8134  0450  0832               	movf	??___flmul+1,w
  8135  0451  00BE               	movwf	___flmul@prod+1
  8136  0452  0831               	movf	??___flmul,w
  8137  0453  00BD               	movwf	___flmul@prod
  8138  0454  082A               	movf	___flmul@b+1,w
  8139  0455  00B1               	movwf	??___flmul
  8140  0456  0831               	movf	??___flmul,w
  8141  0457  00A0               	movwf	__Umul8_16@multiplicand
  8142  0458  082E               	movf	___flmul@a+1,w
  8143  0459  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8144  045E  0821               	movf	?__Umul8_16+1,w
  8145  045F  00C2               	movwf	___flmul@temp+1
  8146  0460  0820               	movf	?__Umul8_16,w
  8147  0461  00C1               	movwf	___flmul@temp
  8148  0462  0841               	movf	___flmul@temp,w
  8149  0463  00B1               	movwf	??___flmul
  8150  0464  01B2               	clrf	??___flmul+1
  8151  0465  01B3               	clrf	??___flmul+2
  8152  0466  01B4               	clrf	??___flmul+3
  8153  0467  0831               	movf	??___flmul,w
  8154  0468  07B9               	addwf	___flmul@grs,f
  8155  0469  0832               	movf	??___flmul+1,w
  8156  046A  1103               	clrz
  8157  046B  1803               	skipnc
  8158  046C  3E01               	addlw	1
  8159  046D  1D03               	btfss	3,2
  8160  046E  07BA               	addwf	___flmul@grs+1,f
  8161  046F  0833               	movf	??___flmul+2,w
  8162  0470  1103               	clrz
  8163  0471  1803               	skipnc
  8164  0472  3E01               	addlw	1
  8165  0473  1D03               	btfss	3,2
  8166  0474  07BB               	addwf	___flmul@grs+2,f
  8167  0475  0834               	movf	??___flmul+3,w
  8168  0476  1103               	clrz
  8169  0477  1803               	skipnc
  8170  0478  3E01               	addlw	1
  8171  0479  1D03               	btfss	3,2
  8172  047A  07BC               	addwf	___flmul@grs+3,f
  8173  047B  0842               	movf	___flmul@temp+1,w
  8174  047C  00B1               	movwf	??___flmul
  8175  047D  01B2               	clrf	??___flmul+1
  8176  047E  01B3               	clrf	??___flmul+2
  8177  047F  01B4               	clrf	??___flmul+3
  8178  0480  0831               	movf	??___flmul,w
  8179  0481  07BD               	addwf	___flmul@prod,f
  8180  0482  0832               	movf	??___flmul+1,w
  8181  0483  1103               	clrz
  8182  0484  1803               	skipnc
  8183  0485  3E01               	addlw	1
  8184  0486  1D03               	btfss	3,2
  8185  0487  07BE               	addwf	___flmul@prod+1,f
  8186  0488  0833               	movf	??___flmul+2,w
  8187  0489  1103               	clrz
  8188  048A  1803               	skipnc
  8189  048B  3E01               	addlw	1
  8190  048C  1D03               	btfss	3,2
  8191  048D  07BF               	addwf	___flmul@prod+2,f
  8192  048E  0834               	movf	??___flmul+3,w
  8193  048F  1103               	clrz
  8194  0490  1803               	skipnc
  8195  0491  3E01               	addlw	1
  8196  0492  1D03               	btfss	3,2
  8197  0493  07C0               	addwf	___flmul@prod+3,f
  8198  0494  082B               	movf	___flmul@b+2,w
  8199  0495  00B1               	movwf	??___flmul
  8200  0496  0831               	movf	??___flmul,w
  8201  0497  00A0               	movwf	__Umul8_16@multiplicand
  8202  0498  082D               	movf	___flmul@a,w
  8203  0499  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8204  049E  0821               	movf	?__Umul8_16+1,w
  8205  049F  00C2               	movwf	___flmul@temp+1
  8206  04A0  0820               	movf	?__Umul8_16,w
  8207  04A1  00C1               	movwf	___flmul@temp
  8208  04A2  0841               	movf	___flmul@temp,w
  8209  04A3  00B1               	movwf	??___flmul
  8210  04A4  01B2               	clrf	??___flmul+1
  8211  04A5  01B3               	clrf	??___flmul+2
  8212  04A6  01B4               	clrf	??___flmul+3
  8213  04A7  0831               	movf	??___flmul,w
  8214  04A8  07B9               	addwf	___flmul@grs,f
  8215  04A9  0832               	movf	??___flmul+1,w
  8216  04AA  1103               	clrz
  8217  04AB  1803               	skipnc
  8218  04AC  3E01               	addlw	1
  8219  04AD  1D03               	btfss	3,2
  8220  04AE  07BA               	addwf	___flmul@grs+1,f
  8221  04AF  0833               	movf	??___flmul+2,w
  8222  04B0  1103               	clrz
  8223  04B1  1803               	skipnc
  8224  04B2  3E01               	addlw	1
  8225  04B3  1D03               	btfss	3,2
  8226  04B4  07BB               	addwf	___flmul@grs+2,f
  8227  04B5  0834               	movf	??___flmul+3,w
  8228  04B6  1103               	clrz
  8229  04B7  1803               	skipnc
  8230  04B8  3E01               	addlw	1
  8231  04B9  1D03               	btfss	3,2
  8232  04BA  07BC               	addwf	___flmul@grs+3,f
  8233  04BB  0842               	movf	___flmul@temp+1,w
  8234  04BC  00B1               	movwf	??___flmul
  8235  04BD  01B2               	clrf	??___flmul+1
  8236  04BE  01B3               	clrf	??___flmul+2
  8237  04BF  01B4               	clrf	??___flmul+3
  8238  04C0  0831               	movf	??___flmul,w
  8239  04C1  07BD               	addwf	___flmul@prod,f
  8240  04C2  0832               	movf	??___flmul+1,w
  8241  04C3  1103               	clrz
  8242  04C4  1803               	skipnc
  8243  04C5  3E01               	addlw	1
  8244  04C6  1D03               	btfss	3,2
  8245  04C7  07BE               	addwf	___flmul@prod+1,f
  8246  04C8  0833               	movf	??___flmul+2,w
  8247  04C9  1103               	clrz
  8248  04CA  1803               	skipnc
  8249  04CB  3E01               	addlw	1
  8250  04CC  1D03               	btfss	3,2
  8251  04CD  07BF               	addwf	___flmul@prod+2,f
  8252  04CE  0834               	movf	??___flmul+3,w
  8253  04CF  1103               	clrz
  8254  04D0  1803               	skipnc
  8255  04D1  3E01               	addlw	1
  8256  04D2  1D03               	btfss	3,2
  8257  04D3  07C0               	addwf	___flmul@prod+3,f
  8258  04D4  3008               	movlw	8
  8259  04D5  00B1               	movwf	??___flmul
  8260  04D6                     u6395:	
  8261  04D6  1003               	clrc
  8262  04D7  0DB9               	rlf	___flmul@grs,f
  8263  04D8  0DBA               	rlf	___flmul@grs+1,f
  8264  04D9  0DBB               	rlf	___flmul@grs+2,f
  8265  04DA  0DBC               	rlf	___flmul@grs+3,f
  8266  04DB  0BB1               	decfsz	??___flmul,f
  8267  04DC  2CD6               	goto	u6395
  8268  04DD  082A               	movf	___flmul@b+1,w
  8269  04DE  00B1               	movwf	??___flmul
  8270  04DF  0831               	movf	??___flmul,w
  8271  04E0  00A0               	movwf	__Umul8_16@multiplicand
  8272  04E1  082D               	movf	___flmul@a,w
  8273  04E2  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8274  04E7  0821               	movf	?__Umul8_16+1,w
  8275  04E8  00C2               	movwf	___flmul@temp+1
  8276  04E9  0820               	movf	?__Umul8_16,w
  8277  04EA  00C1               	movwf	___flmul@temp
  8278  04EB  0841               	movf	___flmul@temp,w
  8279  04EC  00B1               	movwf	??___flmul
  8280  04ED  0842               	movf	___flmul@temp+1,w
  8281  04EE  00B2               	movwf	??___flmul+1
  8282  04EF  01B3               	clrf	??___flmul+2
  8283  04F0  01B4               	clrf	??___flmul+3
  8284  04F1  0831               	movf	??___flmul,w
  8285  04F2  07B9               	addwf	___flmul@grs,f
  8286  04F3  0832               	movf	??___flmul+1,w
  8287  04F4  1103               	clrz
  8288  04F5  1803               	skipnc
  8289  04F6  3E01               	addlw	1
  8290  04F7  1D03               	btfss	3,2
  8291  04F8  07BA               	addwf	___flmul@grs+1,f
  8292  04F9  0833               	movf	??___flmul+2,w
  8293  04FA  1103               	clrz
  8294  04FB  1803               	skipnc
  8295  04FC  3E01               	addlw	1
  8296  04FD  1D03               	btfss	3,2
  8297  04FE  07BB               	addwf	___flmul@grs+2,f
  8298  04FF  0834               	movf	??___flmul+3,w
  8299  0500  1103               	clrz
  8300  0501  1803               	skipnc
  8301  0502  3E01               	addlw	1
  8302  0503  1D03               	btfss	3,2
  8303  0504  07BC               	addwf	___flmul@grs+3,f
  8304  0505  0829               	movf	___flmul@b,w
  8305  0506  00B1               	movwf	??___flmul
  8306  0507  0831               	movf	??___flmul,w
  8307  0508  00A0               	movwf	__Umul8_16@multiplicand
  8308  0509  082E               	movf	___flmul@a+1,w
  8309  050A  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8310  050F  0821               	movf	?__Umul8_16+1,w
  8311  0510  00C2               	movwf	___flmul@temp+1
  8312  0511  0820               	movf	?__Umul8_16,w
  8313  0512  00C1               	movwf	___flmul@temp
  8314  0513  0841               	movf	___flmul@temp,w
  8315  0514  00B1               	movwf	??___flmul
  8316  0515  0842               	movf	___flmul@temp+1,w
  8317  0516  00B2               	movwf	??___flmul+1
  8318  0517  01B3               	clrf	??___flmul+2
  8319  0518  01B4               	clrf	??___flmul+3
  8320  0519  0831               	movf	??___flmul,w
  8321  051A  07B9               	addwf	___flmul@grs,f
  8322  051B  0832               	movf	??___flmul+1,w
  8323  051C  1103               	clrz
  8324  051D  1803               	skipnc
  8325  051E  3E01               	addlw	1
  8326  051F  1D03               	btfss	3,2
  8327  0520  07BA               	addwf	___flmul@grs+1,f
  8328  0521  0833               	movf	??___flmul+2,w
  8329  0522  1103               	clrz
  8330  0523  1803               	skipnc
  8331  0524  3E01               	addlw	1
  8332  0525  1D03               	btfss	3,2
  8333  0526  07BB               	addwf	___flmul@grs+2,f
  8334  0527  0834               	movf	??___flmul+3,w
  8335  0528  1103               	clrz
  8336  0529  1803               	skipnc
  8337  052A  3E01               	addlw	1
  8338  052B  1D03               	btfss	3,2
  8339  052C  07BC               	addwf	___flmul@grs+3,f
  8340  052D  3008               	movlw	8
  8341  052E  00B1               	movwf	??___flmul
  8342  052F                     u6425:	
  8343  052F  1003               	clrc
  8344  0530  0DB9               	rlf	___flmul@grs,f
  8345  0531  0DBA               	rlf	___flmul@grs+1,f
  8346  0532  0DBB               	rlf	___flmul@grs+2,f
  8347  0533  0DBC               	rlf	___flmul@grs+3,f
  8348  0534  0BB1               	decfsz	??___flmul,f
  8349  0535  2D2F               	goto	u6425
  8350  0536  0829               	movf	___flmul@b,w
  8351  0537  00B1               	movwf	??___flmul
  8352  0538  0831               	movf	??___flmul,w
  8353  0539  00A0               	movwf	__Umul8_16@multiplicand
  8354  053A  082D               	movf	___flmul@a,w
  8355  053B  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8356  0540  0821               	movf	?__Umul8_16+1,w
  8357  0541  00C2               	movwf	___flmul@temp+1
  8358  0542  0820               	movf	?__Umul8_16,w
  8359  0543  00C1               	movwf	___flmul@temp
  8360  0544  0841               	movf	___flmul@temp,w
  8361  0545  00B1               	movwf	??___flmul
  8362  0546  0842               	movf	___flmul@temp+1,w
  8363  0547  00B2               	movwf	??___flmul+1
  8364  0548  01B3               	clrf	??___flmul+2
  8365  0549  01B4               	clrf	??___flmul+3
  8366  054A  0831               	movf	??___flmul,w
  8367  054B  07B9               	addwf	___flmul@grs,f
  8368  054C  0832               	movf	??___flmul+1,w
  8369  054D  1103               	clrz
  8370  054E  1803               	skipnc
  8371  054F  3E01               	addlw	1
  8372  0550  1D03               	btfss	3,2
  8373  0551  07BA               	addwf	___flmul@grs+1,f
  8374  0552  0833               	movf	??___flmul+2,w
  8375  0553  1103               	clrz
  8376  0554  1803               	skipnc
  8377  0555  3E01               	addlw	1
  8378  0556  1D03               	btfss	3,2
  8379  0557  07BB               	addwf	___flmul@grs+2,f
  8380  0558  0834               	movf	??___flmul+3,w
  8381  0559  1103               	clrz
  8382  055A  1803               	skipnc
  8383  055B  3E01               	addlw	1
  8384  055C  1D03               	btfss	3,2
  8385  055D  07BC               	addwf	___flmul@grs+3,f
  8386  055E  082A               	movf	___flmul@b+1,w
  8387  055F  00B1               	movwf	??___flmul
  8388  0560  0831               	movf	??___flmul,w
  8389  0561  00A0               	movwf	__Umul8_16@multiplicand
  8390  0562  082F               	movf	___flmul@a+2,w
  8391  0563  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8392  0568  0821               	movf	?__Umul8_16+1,w
  8393  0569  00C2               	movwf	___flmul@temp+1
  8394  056A  0820               	movf	?__Umul8_16,w
  8395  056B  00C1               	movwf	___flmul@temp
  8396  056C  0841               	movf	___flmul@temp,w
  8397  056D  00B1               	movwf	??___flmul
  8398  056E  0842               	movf	___flmul@temp+1,w
  8399  056F  00B2               	movwf	??___flmul+1
  8400  0570  01B3               	clrf	??___flmul+2
  8401  0571  01B4               	clrf	??___flmul+3
  8402  0572  0831               	movf	??___flmul,w
  8403  0573  07BD               	addwf	___flmul@prod,f
  8404  0574  0832               	movf	??___flmul+1,w
  8405  0575  1103               	clrz
  8406  0576  1803               	skipnc
  8407  0577  3E01               	addlw	1
  8408  0578  1D03               	btfss	3,2
  8409  0579  07BE               	addwf	___flmul@prod+1,f
  8410  057A  0833               	movf	??___flmul+2,w
  8411  057B  1103               	clrz
  8412  057C  1803               	skipnc
  8413  057D  3E01               	addlw	1
  8414  057E  1D03               	btfss	3,2
  8415  057F  07BF               	addwf	___flmul@prod+2,f
  8416  0580  0834               	movf	??___flmul+3,w
  8417  0581  1103               	clrz
  8418  0582  1803               	skipnc
  8419  0583  3E01               	addlw	1
  8420  0584  1D03               	btfss	3,2
  8421  0585  07C0               	addwf	___flmul@prod+3,f
  8422  0586  082B               	movf	___flmul@b+2,w
  8423  0587  00B1               	movwf	??___flmul
  8424  0588  0831               	movf	??___flmul,w
  8425  0589  00A0               	movwf	__Umul8_16@multiplicand
  8426  058A  082E               	movf	___flmul@a+1,w
  8427  058B  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8428  0590  0821               	movf	?__Umul8_16+1,w
  8429  0591  00C2               	movwf	___flmul@temp+1
  8430  0592  0820               	movf	?__Umul8_16,w
  8431  0593  00C1               	movwf	___flmul@temp
  8432  0594  0841               	movf	___flmul@temp,w
  8433  0595  00B1               	movwf	??___flmul
  8434  0596  0842               	movf	___flmul@temp+1,w
  8435  0597  00B2               	movwf	??___flmul+1
  8436  0598  01B3               	clrf	??___flmul+2
  8437  0599  01B4               	clrf	??___flmul+3
  8438  059A  0831               	movf	??___flmul,w
  8439  059B  07BD               	addwf	___flmul@prod,f
  8440  059C  0832               	movf	??___flmul+1,w
  8441  059D  1103               	clrz
  8442  059E  1803               	skipnc
  8443  059F  3E01               	addlw	1
  8444  05A0  1D03               	btfss	3,2
  8445  05A1  07BE               	addwf	___flmul@prod+1,f
  8446  05A2  0833               	movf	??___flmul+2,w
  8447  05A3  1103               	clrz
  8448  05A4  1803               	skipnc
  8449  05A5  3E01               	addlw	1
  8450  05A6  1D03               	btfss	3,2
  8451  05A7  07BF               	addwf	___flmul@prod+2,f
  8452  05A8  0834               	movf	??___flmul+3,w
  8453  05A9  1103               	clrz
  8454  05AA  1803               	skipnc
  8455  05AB  3E01               	addlw	1
  8456  05AC  1D03               	btfss	3,2
  8457  05AD  07C0               	addwf	___flmul@prod+3,f
  8458  05AE  082B               	movf	___flmul@b+2,w
  8459  05AF  00B1               	movwf	??___flmul
  8460  05B0  0831               	movf	??___flmul,w
  8461  05B1  00A0               	movwf	__Umul8_16@multiplicand
  8462  05B2  082F               	movf	___flmul@a+2,w
  8463  05B3  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8464  05B8  0821               	movf	?__Umul8_16+1,w
  8465  05B9  00C2               	movwf	___flmul@temp+1
  8466  05BA  0820               	movf	?__Umul8_16,w
  8467  05BB  00C1               	movwf	___flmul@temp
  8468  05BC  0841               	movf	___flmul@temp,w
  8469  05BD  00B1               	movwf	??___flmul
  8470  05BE  0842               	movf	___flmul@temp+1,w
  8471  05BF  00B2               	movwf	??___flmul+1
  8472  05C0  01B3               	clrf	??___flmul+2
  8473  05C1  01B4               	clrf	??___flmul+3
  8474  05C2  3008               	movlw	8
  8475  05C3                     u6465:	
  8476  05C3  1003               	clrc
  8477  05C4  0DB1               	rlf	??___flmul,f
  8478  05C5  0DB2               	rlf	??___flmul+1,f
  8479  05C6  0DB3               	rlf	??___flmul+2,f
  8480  05C7  0DB4               	rlf	??___flmul+3,f
  8481  05C8  3EFF               	addlw	-1
  8482  05C9  1D03               	skipz
  8483  05CA  2DC3               	goto	u6465
  8484  05CB  0831               	movf	??___flmul,w
  8485  05CC  07BD               	addwf	___flmul@prod,f
  8486  05CD  0832               	movf	??___flmul+1,w
  8487  05CE  1103               	clrz
  8488  05CF  1803               	skipnc
  8489  05D0  3E01               	addlw	1
  8490  05D1  1D03               	btfss	3,2
  8491  05D2  07BE               	addwf	___flmul@prod+1,f
  8492  05D3  0833               	movf	??___flmul+2,w
  8493  05D4  1103               	clrz
  8494  05D5  1803               	skipnc
  8495  05D6  3E01               	addlw	1
  8496  05D7  1D03               	btfss	3,2
  8497  05D8  07BF               	addwf	___flmul@prod+2,f
  8498  05D9  0834               	movf	??___flmul+3,w
  8499  05DA  1103               	clrz
  8500  05DB  1803               	skipnc
  8501  05DC  3E01               	addlw	1
  8502  05DD  1D03               	btfss	3,2
  8503  05DE  07C0               	addwf	___flmul@prod+3,f
  8504  05DF  083C               	movf	___flmul@grs+3,w
  8505  05E0  00B1               	movwf	??___flmul
  8506  05E1  01B2               	clrf	??___flmul+1
  8507  05E2  01B3               	clrf	??___flmul+2
  8508  05E3  01B4               	clrf	??___flmul+3
  8509  05E4  0831               	movf	??___flmul,w
  8510  05E5  07BD               	addwf	___flmul@prod,f
  8511  05E6  0832               	movf	??___flmul+1,w
  8512  05E7  1103               	clrz
  8513  05E8  1803               	skipnc
  8514  05E9  3E01               	addlw	1
  8515  05EA  1D03               	btfss	3,2
  8516  05EB  07BE               	addwf	___flmul@prod+1,f
  8517  05EC  0833               	movf	??___flmul+2,w
  8518  05ED  1103               	clrz
  8519  05EE  1803               	skipnc
  8520  05EF  3E01               	addlw	1
  8521  05F0  1D03               	btfss	3,2
  8522  05F1  07BF               	addwf	___flmul@prod+2,f
  8523  05F2  0834               	movf	??___flmul+3,w
  8524  05F3  1103               	clrz
  8525  05F4  1803               	skipnc
  8526  05F5  3E01               	addlw	1
  8527  05F6  1D03               	btfss	3,2
  8528  05F7  07C0               	addwf	___flmul@prod+3,f
  8529  05F8  3008               	movlw	8
  8530  05F9  00B1               	movwf	??___flmul
  8531  05FA                     u6495:	
  8532  05FA  1003               	clrc
  8533  05FB  0DB9               	rlf	___flmul@grs,f
  8534  05FC  0DBA               	rlf	___flmul@grs+1,f
  8535  05FD  0DBB               	rlf	___flmul@grs+2,f
  8536  05FE  0DBC               	rlf	___flmul@grs+3,f
  8537  05FF  0BB1               	decfsz	??___flmul,f
  8538  0600  2DFA               	goto	u6495
  8539  0601  0838               	movf	___flmul@bexp,w
  8540  0602  0737               	addwf	___flmul@aexp,w
  8541  0603  00B1               	movwf	??___flmul
  8542  0604  01B2               	clrf	??___flmul+1
  8543  0605  0DB2               	rlf	??___flmul+1,f
  8544  0606  0831               	movf	??___flmul,w
  8545  0607  3E82               	addlw	130
  8546  0608  00C1               	movwf	___flmul@temp
  8547  0609  0832               	movf	??___flmul+1,w
  8548  060A  1803               	skipnc
  8549  060B  3E01               	addlw	1
  8550  060C  3EFF               	addlw	255
  8551  060D  00C2               	movwf	___flmul@temp+1
  8552  060E                     l6174:	
  8553  060E  1BBF               	btfsc	___flmul@prod+2,7
  8554  060F  2E2B               	goto	l6176
  8555  0610  3001               	movlw	1
  8556  0611  00B1               	movwf	??___flmul
  8557  0612                     u6505:	
  8558  0612  1003               	clrc
  8559  0613  0DBD               	rlf	___flmul@prod,f
  8560  0614  0DBE               	rlf	___flmul@prod+1,f
  8561  0615  0DBF               	rlf	___flmul@prod+2,f
  8562  0616  0DC0               	rlf	___flmul@prod+3,f
  8563  0617  0BB1               	decfsz	??___flmul,f
  8564  0618  2E12               	goto	u6505
  8565  0619  1BBC               	btfsc	___flmul@grs+3,7
  8566  061A  143D               	bsf	___flmul@prod,0
  8567  061B  3001               	movlw	1
  8568  061C  00B1               	movwf	??___flmul
  8569  061D                     u6525:	
  8570  061D  1003               	clrc
  8571  061E  0DB9               	rlf	___flmul@grs,f
  8572  061F  0DBA               	rlf	___flmul@grs+1,f
  8573  0620  0DBB               	rlf	___flmul@grs+2,f
  8574  0621  0DBC               	rlf	___flmul@grs+3,f
  8575  0622  0BB1               	decfsz	??___flmul,f
  8576  0623  2E1D               	goto	u6525
  8577  0624  30FF               	movlw	255
  8578  0625  07C1               	addwf	___flmul@temp,f
  8579  0626  1803               	skipnc
  8580  0627  0AC2               	incf	___flmul@temp+1,f
  8581  0628  30FF               	movlw	255
  8582  0629  07C2               	addwf	___flmul@temp+1,f
  8583  062A  2E0E               	goto	l6174
  8584  062B                     l6176:	
  8585  062B  01B7               	clrf	___flmul@aexp
  8586  062C  1FBC               	btfss	___flmul@grs+3,7
  8587  062D  2E44               	goto	l6186
  8588  062E  30FF               	movlw	255
  8589  062F  0539               	andwf	___flmul@grs,w
  8590  0630  00B1               	movwf	??___flmul
  8591  0631  30FF               	movlw	255
  8592  0632  053A               	andwf	___flmul@grs+1,w
  8593  0633  00B2               	movwf	??___flmul+1
  8594  0634  30FF               	movlw	255
  8595  0635  053B               	andwf	___flmul@grs+2,w
  8596  0636  00B3               	movwf	??___flmul+2
  8597  0637  307F               	movlw	127
  8598  0638  053C               	andwf	___flmul@grs+3,w
  8599  0639  00B4               	movwf	??___flmul+3
  8600  063A  0834               	movf	??___flmul+3,w
  8601  063B  0433               	iorwf	??___flmul+2,w
  8602  063C  0432               	iorwf	??___flmul+1,w
  8603  063D  0431               	iorwf	??___flmul,w
  8604  063E  1903               	skipnz
  8605  063F  183D               	btfsc	___flmul@prod,0
  8606  0640  2E42               	goto	l6182
  8607  0641  2E44               	goto	l6186
  8608  0642                     l6182:	
  8609  0642  01B7               	clrf	___flmul@aexp
  8610  0643  0AB7               	incf	___flmul@aexp,f
  8611  0644                     l6186:	
  8612  0644  0837               	movf	___flmul@aexp,w
  8613  0645  1903               	btfsc	3,2
  8614  0646  2E76               	goto	l6196
  8615  0647  3001               	movlw	1
  8616  0648  07BD               	addwf	___flmul@prod,f
  8617  0649  3000               	movlw	0
  8618  064A  1803               	skipnc
  8619  064B  3001               	movlw	1
  8620  064C  07BE               	addwf	___flmul@prod+1,f
  8621  064D  3000               	movlw	0
  8622  064E  1803               	skipnc
  8623  064F  3001               	movlw	1
  8624  0650  07BF               	addwf	___flmul@prod+2,f
  8625  0651  3000               	movlw	0
  8626  0652  1803               	skipnc
  8627  0653  3001               	movlw	1
  8628  0654  07C0               	addwf	___flmul@prod+3,f
  8629  0655  1C40               	btfss	___flmul@prod+3,0
  8630  0656  2E76               	goto	l6196
  8631  0657  083D               	movf	___flmul@prod,w
  8632  0658  00B1               	movwf	??___flmul
  8633  0659  083E               	movf	___flmul@prod+1,w
  8634  065A  00B2               	movwf	??___flmul+1
  8635  065B  083F               	movf	___flmul@prod+2,w
  8636  065C  00B3               	movwf	??___flmul+2
  8637  065D  0840               	movf	___flmul@prod+3,w
  8638  065E  00B4               	movwf	??___flmul+3
  8639  065F  3001               	movlw	1
  8640  0660  00B5               	movwf	??___flmul+4
  8641  0661                     u6595:	
  8642  0661  0D34               	rlf	??___flmul+3,w
  8643  0662  0CB4               	rrf	??___flmul+3,f
  8644  0663  0CB3               	rrf	??___flmul+2,f
  8645  0664  0CB2               	rrf	??___flmul+1,f
  8646  0665  0CB1               	rrf	??___flmul,f
  8647  0666  0BB5               	decfsz	??___flmul+4,f
  8648  0667  2E61               	goto	u6595
  8649  0668  0834               	movf	??___flmul+3,w
  8650  0669  00C0               	movwf	___flmul@prod+3
  8651  066A  0833               	movf	??___flmul+2,w
  8652  066B  00BF               	movwf	___flmul@prod+2
  8653  066C  0832               	movf	??___flmul+1,w
  8654  066D  00BE               	movwf	___flmul@prod+1
  8655  066E  0831               	movf	??___flmul,w
  8656  066F  00BD               	movwf	___flmul@prod
  8657  0670  3001               	movlw	1
  8658  0671  07C1               	addwf	___flmul@temp,f
  8659  0672  1803               	skipnc
  8660  0673  0AC2               	incf	___flmul@temp+1,f
  8661  0674  3000               	movlw	0
  8662  0675  07C2               	addwf	___flmul@temp+1,f
  8663  0676                     l6196:	
  8664  0676  0842               	movf	___flmul@temp+1,w
  8665  0677  3A80               	xorlw	128
  8666  0678  00FF               	movwf	127
  8667  0679  3080               	movlw	128
  8668  067A  027F               	subwf	127,w
  8669  067B  1D03               	skipz
  8670  067C  2E7F               	goto	u6605
  8671  067D  30FF               	movlw	255
  8672  067E  0241               	subwf	___flmul@temp,w
  8673  067F                     u6605:	
  8674  067F  1C03               	skipc
  8675  0680  2E8C               	goto	l6200
  8676  0681  307F               	movlw	127
  8677  0682  1283               	bcf	3,5	;RP0=0, select bank0
  8678  0683  1303               	bcf	3,6	;RP1=0, select bank0
  8679  0684  00C0               	movwf	___flmul@prod+3
  8680  0685  3080               	movlw	128
  8681  0686  00BF               	movwf	___flmul@prod+2
  8682  0687  3000               	movlw	0
  8683  0688  00BE               	movwf	___flmul@prod+1
  8684  0689  3000               	movlw	0
  8685  068A  00BD               	movwf	___flmul@prod
  8686  068B  2EBC               	goto	l1383
  8687  068C                     l6200:	
  8688  068C  1283               	bcf	3,5	;RP0=0, select bank0
  8689  068D  1303               	bcf	3,6	;RP1=0, select bank0
  8690  068E  0842               	movf	___flmul@temp+1,w
  8691  068F  3A80               	xorlw	128
  8692  0690  00FF               	movwf	127
  8693  0691  3080               	movlw	128
  8694  0692  027F               	subwf	127,w
  8695  0693  1D03               	skipz
  8696  0694  2E97               	goto	u6615
  8697  0695  3001               	movlw	1
  8698  0696  0241               	subwf	___flmul@temp,w
  8699  0697                     u6615:	
  8700  0697  1803               	skipnc
  8701  0698  2EA5               	goto	l6206
  8702  0699  3000               	movlw	0
  8703  069A  1283               	bcf	3,5	;RP0=0, select bank0
  8704  069B  1303               	bcf	3,6	;RP1=0, select bank0
  8705  069C  00C0               	movwf	___flmul@prod+3
  8706  069D  3000               	movlw	0
  8707  069E  00BF               	movwf	___flmul@prod+2
  8708  069F  3000               	movlw	0
  8709  06A0  00BE               	movwf	___flmul@prod+1
  8710  06A1  3000               	movlw	0
  8711  06A2  00BD               	movwf	___flmul@prod
  8712  06A3  01B6               	clrf	___flmul@sign
  8713  06A4  2EBC               	goto	l1383
  8714  06A5                     l6206:	
  8715  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  8716  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  8717  06A7  0841               	movf	___flmul@temp,w
  8718  06A8  00B1               	movwf	??___flmul
  8719  06A9  0831               	movf	??___flmul,w
  8720  06AA  00B8               	movwf	___flmul@bexp
  8721  06AB  30FF               	movlw	255
  8722  06AC  05BD               	andwf	___flmul@prod,f
  8723  06AD  30FF               	movlw	255
  8724  06AE  05BE               	andwf	___flmul@prod+1,f
  8725  06AF  307F               	movlw	127
  8726  06B0  05BF               	andwf	___flmul@prod+2,f
  8727  06B1  3000               	movlw	0
  8728  06B2  05C0               	andwf	___flmul@prod+3,f
  8729  06B3  1838               	btfsc	___flmul@bexp,0
  8730  06B4  17BF               	bsf	___flmul@prod+2,7
  8731  06B5  0838               	movf	___flmul@bexp,w
  8732  06B6  00B1               	movwf	??___flmul
  8733  06B7  1003               	clrc
  8734  06B8  0C31               	rrf	??___flmul,w
  8735  06B9  00B2               	movwf	??___flmul+1
  8736  06BA  0832               	movf	??___flmul+1,w
  8737  06BB  00C0               	movwf	___flmul@prod+3
  8738  06BC                     l1383:	
  8739  06BC  0836               	movf	___flmul@sign,w
  8740  06BD  00B1               	movwf	??___flmul
  8741  06BE  0831               	movf	??___flmul,w
  8742  06BF  04C0               	iorwf	___flmul@prod+3,f
  8743  06C0  0840               	movf	___flmul@prod+3,w
  8744  06C1  00AC               	movwf	?___flmul+3
  8745  06C2  083F               	movf	___flmul@prod+2,w
  8746  06C3  00AB               	movwf	?___flmul+2
  8747  06C4  083E               	movf	___flmul@prod+1,w
  8748  06C5  00AA               	movwf	?___flmul+1
  8749  06C6  083D               	movf	___flmul@prod,w
  8750  06C7  00A9               	movwf	?___flmul
  8751  06C8  0008               	return
  8752  06C9                     __end_of___flmul:	
  8753                           
  8754                           	psect	text25
  8755  1C60                     __ptext25:	
  8756 ;; *************** function __Umul8_16 *****************
  8757 ;; Defined at:
  8758 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  multiplier      1    wreg     unsigned char 
  8761 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8764 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8765 ;;  product         2    4[BANK0 ] unsigned int 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  2    0[BANK0 ] unsigned int 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0
  8770 ;; Tracked objects:
  8771 ;;		On entry : 300/0
  8772 ;;		On exit  : 300/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8775 ;;      Params:         0       2       0       0       0
  8776 ;;      Locals:         0       5       0       0       0
  8777 ;;      Temps:          0       2       0       0       0
  8778 ;;      Totals:         0       9       0       0       0
  8779 ;;Total ram usage:        9 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    1
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		___flmul
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           
  8790                           ;psect for function __Umul8_16
  8791  1C60                     __Umul8_16:	
  8792                           
  8793                           ;incstack = 0
  8794                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8795                           ;__Umul8_16@multiplier stored from wreg
  8796  1C60  00A8               	movwf	__Umul8_16@multiplier
  8797  1C61  01A4               	clrf	__Umul8_16@product
  8798  1C62  01A5               	clrf	__Umul8_16@product+1
  8799  1C63  0820               	movf	__Umul8_16@multiplicand,w
  8800  1C64  00A2               	movwf	??__Umul8_16
  8801  1C65  01A3               	clrf	??__Umul8_16+1
  8802  1C66  0822               	movf	??__Umul8_16,w
  8803  1C67  00A6               	movwf	__Umul8_16@word_mpld
  8804  1C68  0823               	movf	??__Umul8_16+1,w
  8805  1C69  00A7               	movwf	__Umul8_16@word_mpld+1
  8806  1C6A                     l5612:	
  8807  1C6A  1C28               	btfss	__Umul8_16@multiplier,0
  8808  1C6B  2C72               	goto	l1456
  8809  1C6C  0826               	movf	__Umul8_16@word_mpld,w
  8810  1C6D  07A4               	addwf	__Umul8_16@product,f
  8811  1C6E  1803               	skipnc
  8812  1C6F  0AA5               	incf	__Umul8_16@product+1,f
  8813  1C70  0827               	movf	__Umul8_16@word_mpld+1,w
  8814  1C71  07A5               	addwf	__Umul8_16@product+1,f
  8815  1C72                     l1456:	
  8816  1C72  3001               	movlw	1
  8817  1C73                     u5465:	
  8818  1C73  1003               	clrc
  8819  1C74  0DA6               	rlf	__Umul8_16@word_mpld,f
  8820  1C75  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8821  1C76  3EFF               	addlw	-1
  8822  1C77  1D03               	skipz
  8823  1C78  2C73               	goto	u5465
  8824  1C79  1003               	clrc
  8825  1C7A  0CA8               	rrf	__Umul8_16@multiplier,f
  8826  1C7B  0828               	movf	__Umul8_16@multiplier,w
  8827  1C7C  1D03               	btfss	3,2
  8828  1C7D  2C6A               	goto	l5612
  8829  1C7E  0825               	movf	__Umul8_16@product+1,w
  8830  1C7F  00A1               	movwf	?__Umul8_16+1
  8831  1C80  0824               	movf	__Umul8_16@product,w
  8832  1C81  00A0               	movwf	?__Umul8_16
  8833  1C82  0008               	return
  8834  1C83                     __end_of__Umul8_16:	
  8835                           
  8836                           	psect	text26
  8837  1B17                     __ptext26:	
  8838 ;; *************** function _PROCULUS_VP_Write_String *****************
  8839 ;; Defined at:
  8840 ;;		line 205 in file "proculus.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  vp              2   58[BANK0 ] unsigned int 
  8843 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8844 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 300/0
  8853 ;;		On exit  : 300/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8856 ;;      Params:         0       3       0       0       0
  8857 ;;      Locals:         0       0       0       0       0
  8858 ;;      Temps:          0       1       0       0       0
  8859 ;;      Totals:         0       4       0       0       0
  8860 ;;Total ram usage:        4 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    4
  8863 ;; This function calls:
  8864 ;;		_PROCULUS_VP_Write
  8865 ;;		_strlen
  8866 ;; This function is called by:
  8867 ;;		_Decodify_Command
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           
  8872                           ;psect for function _PROCULUS_VP_Write_String
  8873  1B17                     _PROCULUS_VP_Write_String:	
  8874                           
  8875                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8876                           
  8877                           ;incstack = 0
  8878                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8879  1B17  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8880  1B18  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8881  1B19  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8882  1B1A  00D2               	movwf	PROCULUS_VP_Write@vp
  8883  1B1B  085C               	movf	PROCULUS_VP_Write_String@text,w
  8884  1B1C  00D4               	movwf	PROCULUS_VP_Write@vetor
  8885  1B1D  3001               	movlw	1
  8886  1B1E  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8887  1B1F  085C               	movf	PROCULUS_VP_Write_String@text,w
  8888  1B20  00A0               	movwf	strlen@s
  8889  1B21  3001               	movlw	1
  8890  1B22  00A1               	movwf	strlen@s+1
  8891  1B23  160A  158A  234B  160A  158A  	fcall	_strlen
  8892  1B28  0820               	movf	?_strlen,w
  8893  1B29  3E01               	addlw	1
  8894  1B2A  00DD               	movwf	??_PROCULUS_VP_Write_String
  8895  1B2B  085D               	movf	??_PROCULUS_VP_Write_String,w
  8896  1B2C  00D6               	movwf	PROCULUS_VP_Write@size
  8897  1B2D  160A  158A  2764   	fcall	_PROCULUS_VP_Write
  8898  1B30  0008               	return
  8899  1B31                     __end_of_PROCULUS_VP_Write_String:	
  8900                           
  8901                           	psect	text27
  8902  1B4B                     __ptext27:	
  8903 ;; *************** function _strlen *****************
  8904 ;; Defined at:
  8905 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8908 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8911 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  2    0[BANK0 ] unsigned int 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8916 ;; Tracked objects:
  8917 ;;		On entry : 300/0
  8918 ;;		On exit  : 300/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8921 ;;      Params:         0       2       0       0       0
  8922 ;;      Locals:         0       2       0       0       0
  8923 ;;      Temps:          0       0       0       0       0
  8924 ;;      Totals:         0       4       0       0       0
  8925 ;;Total ram usage:        4 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    1
  8928 ;; This function calls:
  8929 ;;		Nothing
  8930 ;; This function is called by:
  8931 ;;		_Decodify_Command
  8932 ;;		_PROCULUS_VP_Write_String
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           
  8937                           ;psect for function _strlen
  8938  1B4B                     _strlen:	
  8939                           
  8940                           ;incstack = 0
  8941                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8942  1B4B  0820               	movf	strlen@s,w
  8943  1B4C  00A2               	movwf	strlen@cp
  8944  1B4D  0821               	movf	strlen@s+1,w
  8945  1B4E  00A3               	movwf	strlen@cp+1
  8946  1B4F                     l5772:	
  8947  1B4F  0822               	movf	strlen@cp,w
  8948  1B50  0084               	movwf	4
  8949  1B51  1783               	bsf	3,7
  8950  1B52  1C23               	btfss	strlen@cp+1,0
  8951  1B53  1383               	bcf	3,7
  8952  1B54  0800               	movf	0,w
  8953  1B55  1903               	btfsc	3,2
  8954  1B56  2B5E               	goto	l5774
  8955  1B57  3001               	movlw	1
  8956  1B58  07A2               	addwf	strlen@cp,f
  8957  1B59  1803               	skipnc
  8958  1B5A  0AA3               	incf	strlen@cp+1,f
  8959  1B5B  3000               	movlw	0
  8960  1B5C  07A3               	addwf	strlen@cp+1,f
  8961  1B5D  2B4F               	goto	l5772
  8962  1B5E                     l5774:	
  8963  1B5E  0820               	movf	strlen@s,w
  8964  1B5F  0222               	subwf	strlen@cp,w
  8965  1B60  00A0               	movwf	?_strlen
  8966  1B61  0821               	movf	strlen@s+1,w
  8967  1B62  1C03               	skipc
  8968  1B63  0A21               	incf	strlen@s+1,w
  8969  1B64  0223               	subwf	strlen@cp+1,w
  8970  1B65  00A1               	movwf	?_strlen+1
  8971  1B66  0008               	return
  8972  1B67                     __end_of_strlen:	
  8973                           
  8974                           	psect	text28
  8975  1F64                     __ptext28:	
  8976 ;; *************** function _PROCULUS_VP_Write *****************
  8977 ;; Defined at:
  8978 ;;		line 40 in file "proculus.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  vp              2   50[BANK0 ] unsigned int 
  8981 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8982 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8983 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8984 ;;  size            1   54[BANK0 ] unsigned char 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  i               1   57[BANK0 ] unsigned char 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 300/0
  8993 ;;		On exit  : 300/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8996 ;;      Params:         0       5       0       0       0
  8997 ;;      Locals:         0       1       0       0       0
  8998 ;;      Temps:          0       2       0       0       0
  8999 ;;      Totals:         0       8       0       0       0
  9000 ;;Total ram usage:        8 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    3
  9003 ;; This function calls:
  9004 ;;		_PROCULUS_Delay
  9005 ;;		_USART_put_int
  9006 ;;		_USART_putc
  9007 ;; This function is called by:
  9008 ;;		_PROCULUS_VP_Write_String
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           
  9013                           ;psect for function _PROCULUS_VP_Write
  9014  1F64                     _PROCULUS_VP_Write:	
  9015                           
  9016                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9020  1F64  30A5               	movlw	165
  9021  1F65  00CE               	movwf	USART_put_int@value
  9022  1F66  305A               	movlw	90
  9023  1F67  00CF               	movwf	USART_put_int@value+1
  9024  1F68  160A  158A  22E8  160A  158A  	fcall	_USART_put_int
  9025                           
  9026                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9027  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  9028  1F6E  0856               	movf	PROCULUS_VP_Write@size,w
  9029  1F6F  3E03               	addlw	3
  9030  1F70  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9031                           
  9032                           ;proculus.c: 43:      USART_putc(0x82);
  9033  1F75  3082               	movlw	130
  9034  1F76  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9035                           
  9036                           ;proculus.c: 44:      USART_put_int(vp);
  9037  1F7B  1283               	bcf	3,5	;RP0=0, select bank0
  9038  1F7C  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9039  1F7D  00CF               	movwf	USART_put_int@value+1
  9040  1F7E  0852               	movf	PROCULUS_VP_Write@vp,w
  9041  1F7F  00CE               	movwf	USART_put_int@value
  9042  1F80  160A  158A  22E8  160A  158A  	fcall	_USART_put_int
  9043                           
  9044                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9045  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  9046  1F86  01D9               	clrf	PROCULUS_VP_Write@i
  9047  1F87                     l5818:	
  9048  1F87  0856               	movf	PROCULUS_VP_Write@size,w
  9049  1F88  0259               	subwf	PROCULUS_VP_Write@i,w
  9050  1F89  1803               	btfsc	3,0
  9051  1F8A  2FA3               	goto	l5820
  9052                           
  9053                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9054  1F8B  0859               	movf	PROCULUS_VP_Write@i,w
  9055  1F8C  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9056  1F8D  00D7               	movwf	??_PROCULUS_VP_Write
  9057  1F8E  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9058  1F8F  1803               	skipnc
  9059  1F90  3E01               	addlw	1
  9060  1F91  00D8               	movwf	??_PROCULUS_VP_Write+1
  9061  1F92  0857               	movf	??_PROCULUS_VP_Write,w
  9062  1F93  0084               	movwf	4
  9063  1F94  1783               	bsf	3,7
  9064  1F95  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9065  1F96  1383               	bcf	3,7
  9066  1F97  0800               	movf	0,w
  9067  1F98  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9068  1F9D  3001               	movlw	1
  9069  1F9E  1283               	bcf	3,5	;RP0=0, select bank0
  9070  1F9F  00D7               	movwf	??_PROCULUS_VP_Write
  9071  1FA0  0857               	movf	??_PROCULUS_VP_Write,w
  9072  1FA1  07D9               	addwf	PROCULUS_VP_Write@i,f
  9073  1FA2  2F87               	goto	l5818
  9074  1FA3                     l5820:	
  9075                           
  9076                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9077  1FA3  3001               	movlw	1
  9078  1FA4  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9079  1FA5  3000               	movlw	0
  9080  1FA6  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9081  1FA7  160A  158A  2367   	fcall	_PROCULUS_Delay
  9082  1FAA  0008               	return
  9083  1FAB                     __end_of_PROCULUS_VP_Write:	
  9084                           
  9085                           	psect	text29
  9086  1ABD                     __ptext29:	
  9087 ;; *************** function _PROCULUS_Show_Screen *****************
  9088 ;; Defined at:
  9089 ;;		line 243 in file "proculus.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  screen          2   54[BANK0 ] unsigned int 
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  1    wreg      void 
  9096 ;; Registers used:
  9097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9098 ;; Tracked objects:
  9099 ;;		On entry : 300/0
  9100 ;;		On exit  : 300/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9103 ;;      Params:         0       2       0       0       0
  9104 ;;      Locals:         0       3       0       0       0
  9105 ;;      Temps:          0       1       0       0       0
  9106 ;;      Totals:         0       6       0       0       0
  9107 ;;Total ram usage:        6 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    4
  9110 ;; This function calls:
  9111 ;;		_PROCULUS_Control_Register_Write
  9112 ;; This function is called by:
  9113 ;;		_Decodify_Command
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function _PROCULUS_Show_Screen
  9119  1ABD                     _PROCULUS_Show_Screen:	
  9120                           
  9121                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9122                           
  9123                           ;incstack = 0
  9124                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9125  1ABD  3003               	movlw	3
  9126  1ABE  00D8               	movwf	??_PROCULUS_Show_Screen
  9127  1ABF  0858               	movf	??_PROCULUS_Show_Screen,w
  9128  1AC0  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9129                           
  9130                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9131  1AC1  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9132  1AC2  00D8               	movwf	??_PROCULUS_Show_Screen
  9133  1AC3  0858               	movf	??_PROCULUS_Show_Screen,w
  9134  1AC4  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9135                           
  9136                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9137  1AC5  0856               	movf	PROCULUS_Show_Screen@screen,w
  9138  1AC6  00D8               	movwf	??_PROCULUS_Show_Screen
  9139  1AC7  0858               	movf	??_PROCULUS_Show_Screen,w
  9140  1AC8  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9141                           
  9142                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9143  1AC9  3003               	movlw	3
  9144  1ACA  00D8               	movwf	??_PROCULUS_Show_Screen
  9145  1ACB  0858               	movf	??_PROCULUS_Show_Screen,w
  9146  1ACC  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9147  1ACD  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9148  1ACE  160A  158A  263A   	fcall	_PROCULUS_Control_Register_Write
  9149  1AD1  0008               	return
  9150  1AD2                     __end_of_PROCULUS_Show_Screen:	
  9151                           
  9152                           	psect	text30
  9153  105B                     __ptext30:	
  9154 ;; *************** function _PROCULUS_Buzzer *****************
  9155 ;; Defined at:
  9156 ;;		line 223 in file "proculus.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 300/0
  9167 ;;		On exit  : 300/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9170 ;;      Params:         0       2       0       0       0
  9171 ;;      Locals:         0       2       0       0       0
  9172 ;;      Temps:          0       1       0       0       0
  9173 ;;      Totals:         0       5       0       0       0
  9174 ;;Total ram usage:        5 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:    4
  9177 ;; This function calls:
  9178 ;;		_PROCULUS_Control_Register_Write
  9179 ;;		___lwdiv
  9180 ;; This function is called by:
  9181 ;;		_Decodify_Command
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           
  9186                           ;psect for function _PROCULUS_Buzzer
  9187  105B                     _PROCULUS_Buzzer:	
  9188                           
  9189                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9190                           
  9191                           ;incstack = 0
  9192                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9193  105B  300A               	movlw	10
  9194  105C  00A0               	movwf	___lwdiv@divisor
  9195  105D  3000               	movlw	0
  9196  105E  00A1               	movwf	___lwdiv@divisor+1
  9197  105F  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9198  1060  00A3               	movwf	___lwdiv@dividend+1
  9199  1061  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9200  1062  00A2               	movwf	___lwdiv@dividend
  9201  1063  160A  158A  26AE  160A  118A  	fcall	___lwdiv
  9202  1068  0821               	movf	?___lwdiv+1,w
  9203  1069  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9204  106A  0820               	movf	?___lwdiv,w
  9205  106B  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9206                           
  9207                           ;proculus.c: 226:      vetor[0]=0x02;
  9208  106C  3002               	movlw	2
  9209  106D  00D8               	movwf	??_PROCULUS_Buzzer
  9210  106E  0858               	movf	??_PROCULUS_Buzzer,w
  9211  106F  00D9               	movwf	PROCULUS_Buzzer@vetor
  9212                           
  9213                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9214  1070  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9215  1071  00D8               	movwf	??_PROCULUS_Buzzer
  9216  1072  0858               	movf	??_PROCULUS_Buzzer,w
  9217  1073  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  9218                           
  9219                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9220  1074  3002               	movlw	2
  9221  1075  00D8               	movwf	??_PROCULUS_Buzzer
  9222  1076  0858               	movf	??_PROCULUS_Buzzer,w
  9223  1077  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9224  1078  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9225  1079  160A  158A  263A   	fcall	_PROCULUS_Control_Register_Write
  9226  107C  0008               	return
  9227  107D                     __end_of_PROCULUS_Buzzer:	
  9228                           
  9229                           	psect	text31
  9230  1EAE                     __ptext31:	
  9231 ;; *************** function ___lwdiv *****************
  9232 ;; Defined at:
  9233 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  divisor         2    0[BANK0 ] unsigned int 
  9236 ;;  dividend        2    2[BANK0 ] unsigned int 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  quotient        2    6[BANK0 ] unsigned int 
  9239 ;;  counter         1    5[BANK0 ] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  2    0[BANK0 ] unsigned int 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 300/0
  9246 ;;		On exit  : 300/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9249 ;;      Params:         0       4       0       0       0
  9250 ;;      Locals:         0       3       0       0       0
  9251 ;;      Temps:          0       1       0       0       0
  9252 ;;      Totals:         0       8       0       0       0
  9253 ;;Total ram usage:        8 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    1
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_ADC_Media_10bits
  9260 ;;		_PROCULUS_Buzzer
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function ___lwdiv
  9266  1EAE                     ___lwdiv:	
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9270  1EAE  01A6               	clrf	___lwdiv@quotient
  9271  1EAF  01A7               	clrf	___lwdiv@quotient+1
  9272  1EB0  0820               	movf	___lwdiv@divisor,w
  9273  1EB1  0421               	iorwf	___lwdiv@divisor+1,w
  9274  1EB2  1903               	btfsc	3,2
  9275  1EB3  2EE5               	goto	l5880
  9276  1EB4  01A5               	clrf	___lwdiv@counter
  9277  1EB5  0AA5               	incf	___lwdiv@counter,f
  9278  1EB6                     l5868:	
  9279  1EB6  1BA1               	btfsc	___lwdiv@divisor+1,7
  9280  1EB7  2EC4               	goto	l5870
  9281  1EB8  3001               	movlw	1
  9282  1EB9                     u5755:	
  9283  1EB9  1003               	clrc
  9284  1EBA  0DA0               	rlf	___lwdiv@divisor,f
  9285  1EBB  0DA1               	rlf	___lwdiv@divisor+1,f
  9286  1EBC  3EFF               	addlw	-1
  9287  1EBD  1D03               	skipz
  9288  1EBE  2EB9               	goto	u5755
  9289  1EBF  3001               	movlw	1
  9290  1EC0  00A4               	movwf	??___lwdiv
  9291  1EC1  0824               	movf	??___lwdiv,w
  9292  1EC2  07A5               	addwf	___lwdiv@counter,f
  9293  1EC3  2EB6               	goto	l5868
  9294  1EC4                     l5870:	
  9295  1EC4  3001               	movlw	1
  9296  1EC5                     u5775:	
  9297  1EC5  1003               	clrc
  9298  1EC6  0DA6               	rlf	___lwdiv@quotient,f
  9299  1EC7  0DA7               	rlf	___lwdiv@quotient+1,f
  9300  1EC8  3EFF               	addlw	-1
  9301  1EC9  1D03               	skipz
  9302  1ECA  2EC5               	goto	u5775
  9303  1ECB  0821               	movf	___lwdiv@divisor+1,w
  9304  1ECC  0223               	subwf	___lwdiv@dividend+1,w
  9305  1ECD  1D03               	skipz
  9306  1ECE  2ED1               	goto	u5785
  9307  1ECF  0820               	movf	___lwdiv@divisor,w
  9308  1ED0  0222               	subwf	___lwdiv@dividend,w
  9309  1ED1                     u5785:	
  9310  1ED1  1C03               	skipc
  9311  1ED2  2EDA               	goto	l5876
  9312  1ED3  0820               	movf	___lwdiv@divisor,w
  9313  1ED4  02A2               	subwf	___lwdiv@dividend,f
  9314  1ED5  0821               	movf	___lwdiv@divisor+1,w
  9315  1ED6  1C03               	skipc
  9316  1ED7  03A3               	decf	___lwdiv@dividend+1,f
  9317  1ED8  02A3               	subwf	___lwdiv@dividend+1,f
  9318  1ED9  1426               	bsf	___lwdiv@quotient,0
  9319  1EDA                     l5876:	
  9320  1EDA  3001               	movlw	1
  9321  1EDB                     u5795:	
  9322  1EDB  1003               	clrc
  9323  1EDC  0CA1               	rrf	___lwdiv@divisor+1,f
  9324  1EDD  0CA0               	rrf	___lwdiv@divisor,f
  9325  1EDE  3EFF               	addlw	-1
  9326  1EDF  1D03               	skipz
  9327  1EE0  2EDB               	goto	u5795
  9328  1EE1  3001               	movlw	1
  9329  1EE2  02A5               	subwf	___lwdiv@counter,f
  9330  1EE3  1D03               	btfss	3,2
  9331  1EE4  2EC4               	goto	l5870
  9332  1EE5                     l5880:	
  9333  1EE5  0827               	movf	___lwdiv@quotient+1,w
  9334  1EE6  00A1               	movwf	?___lwdiv+1
  9335  1EE7  0826               	movf	___lwdiv@quotient,w
  9336  1EE8  00A0               	movwf	?___lwdiv
  9337  1EE9  0008               	return
  9338  1EEA                     __end_of___lwdiv:	
  9339                           
  9340                           	psect	text32
  9341  1E3A                     __ptext32:	
  9342 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9343 ;; Defined at:
  9344 ;;		line 13 in file "proculus.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  vetor           1    wreg     PTR unsigned char 
  9347 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9348 ;;  size            1   50[BANK0 ] unsigned char 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9351 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9352 ;;  i               1   53[BANK0 ] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 300/0
  9359 ;;		On exit  : 300/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9362 ;;      Params:         0       1       0       0       0
  9363 ;;      Locals:         0       2       0       0       0
  9364 ;;      Temps:          0       1       0       0       0
  9365 ;;      Totals:         0       4       0       0       0
  9366 ;;Total ram usage:        4 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    3
  9369 ;; This function calls:
  9370 ;;		_PROCULUS_Delay
  9371 ;;		_USART_put_int
  9372 ;;		_USART_putc
  9373 ;; This function is called by:
  9374 ;;		_PROCULUS_Buzzer
  9375 ;;		_PROCULUS_Show_Screen
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           
  9380                           ;psect for function _PROCULUS_Control_Register_Write
  9381  1E3A                     _PROCULUS_Control_Register_Write:	
  9382                           
  9383                           ;incstack = 0
  9384                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9385                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9386  1E3A  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9387                           
  9388                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9389  1E3B  30A5               	movlw	165
  9390  1E3C  00CE               	movwf	USART_put_int@value
  9391  1E3D  305A               	movlw	90
  9392  1E3E  00CF               	movwf	USART_put_int@value+1
  9393  1E3F  160A  158A  22E8  160A  158A  	fcall	_USART_put_int
  9394                           
  9395                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9396  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  9397  1E45  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9398  1E46  3E01               	addlw	1
  9399  1E47  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9400                           
  9401                           ;proculus.c: 16:      USART_putc(0x80);
  9402  1E4C  3080               	movlw	128
  9403  1E4D  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9404                           
  9405                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9406  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  9407  1E53  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9408  1E54                     l5802:	
  9409  1E54  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9410  1E55  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9411  1E56  1803               	btfsc	3,0
  9412  1E57  2E6A               	goto	l5804
  9413                           
  9414                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9415  1E58  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9416  1E59  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9417  1E5A  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9418  1E5B  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9419  1E5C  0084               	movwf	4
  9420  1E5D  1383               	bcf	3,7	;select IRP bank0
  9421  1E5E  0800               	movf	0,w
  9422  1E5F  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9423  1E64  3001               	movlw	1
  9424  1E65  1283               	bcf	3,5	;RP0=0, select bank0
  9425  1E66  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9426  1E67  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9427  1E68  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9428  1E69  2E54               	goto	l5802
  9429  1E6A                     l5804:	
  9430                           
  9431                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9432  1E6A  3001               	movlw	1
  9433  1E6B  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9434  1E6C  3000               	movlw	0
  9435  1E6D  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9436  1E6E  160A  158A  2367   	fcall	_PROCULUS_Delay
  9437  1E71  0008               	return
  9438  1E72                     __end_of_PROCULUS_Control_Register_Write:	
  9439                           
  9440                           	psect	text33
  9441  1AE8                     __ptext33:	
  9442 ;; *************** function _USART_put_int *****************
  9443 ;; Defined at:
  9444 ;;		line 137 in file "usart.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  value           2   46[BANK0 ] int 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9449 ;;		 -> USART_put_int@value(2), 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 300/0
  9456 ;;		On exit  : 300/100
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9459 ;;      Params:         0       2       0       0       0
  9460 ;;      Locals:         0       1       0       0       0
  9461 ;;      Temps:          0       1       0       0       0
  9462 ;;      Totals:         0       4       0       0       0
  9463 ;;Total ram usage:        4 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    2
  9466 ;; This function calls:
  9467 ;;		_USART_putc
  9468 ;; This function is called by:
  9469 ;;		_Decodify_Command
  9470 ;;		_PROCULUS_Control_Register_Write
  9471 ;;		_PROCULUS_VP_Write
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           
  9476                           ;psect for function _USART_put_int
  9477  1AE8                     _USART_put_int:	
  9478                           
  9479                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9483  1AE8  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9484  1AE9  00D0               	movwf	??_USART_put_int
  9485  1AEA  0850               	movf	??_USART_put_int,w
  9486  1AEB  00D1               	movwf	USART_put_int@dado
  9487                           
  9488                           ;usart.c: 140:      USART_putc(*(dado+1));
  9489  1AEC  0A51               	incf	USART_put_int@dado,w
  9490  1AED  0084               	movwf	4
  9491  1AEE  1383               	bcf	3,7	;select IRP bank0
  9492  1AEF  0800               	movf	0,w
  9493  1AF0  160A  158A  229C  160A  158A  	fcall	_USART_putc
  9494                           
  9495                           ;usart.c: 141:      USART_putc(*dado);
  9496  1AF5  1283               	bcf	3,5	;RP0=0, select bank0
  9497  1AF6  0851               	movf	USART_put_int@dado,w
  9498  1AF7  0084               	movwf	4
  9499  1AF8  1383               	bcf	3,7	;select IRP bank0
  9500  1AF9  0800               	movf	0,w
  9501  1AFA  160A  158A  229C   	fcall	_USART_putc
  9502  1AFD  0008               	return
  9503  1AFE                     __end_of_USART_put_int:	
  9504                           
  9505                           	psect	text34
  9506  1A9C                     __ptext34:	
  9507 ;; *************** function _USART_putc *****************
  9508 ;; Defined at:
  9509 ;;		line 89 in file "usart.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  value           1    wreg     unsigned char 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  value           1    0[BANK0 ] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/100
  9520 ;;		On exit  : 300/100
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9523 ;;      Params:         0       0       0       0       0
  9524 ;;      Locals:         0       1       0       0       0
  9525 ;;      Temps:          0       0       0       0       0
  9526 ;;      Totals:         0       1       0       0       0
  9527 ;;Total ram usage:        1 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_Decodify_Command
  9534 ;;		_Send_To_MB
  9535 ;;		_PROCULUS_Control_Register_Write
  9536 ;;		_PROCULUS_VP_Write
  9537 ;;		_USART_put_buffer
  9538 ;;		_USART_put_int
  9539 ;;		_USART_put_string
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _USART_putc
  9545  1A9C                     _USART_putc:	
  9546                           
  9547                           ;incstack = 0
  9548                           ; Regs used in _USART_putc: [wreg]
  9549                           ;USART_putc@value stored from wreg
  9550  1A9C  1283               	bcf	3,5	;RP0=0, select bank0
  9551  1A9D  1303               	bcf	3,6	;RP1=0, select bank0
  9552  1A9E  00A0               	movwf	USART_putc@value
  9553                           
  9554                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  9555  1A9F  3014               	movlw	20
  9556  1AA0  1683               	bsf	3,5	;RP0=1, select bank1
  9557  1AA1  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  9558  1AA2  3000               	movlw	0
  9559  1AA3  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  9560  1AA4                     l865:	
  9561                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  9562                           
  9563  1AA4  1C98               	btfss	24,1	;volatile
  9564  1AA5  2AA4               	goto	l865
  9565                           
  9566                           ;usart.c: 93:     TXREG=value;
  9567  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
  9568  1AA7  0820               	movf	USART_putc@value,w
  9569  1AA8  0099               	movwf	25	;volatile
  9570                           
  9571                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  9572  1AA9  1683               	bsf	3,5	;RP0=1, select bank1
  9573  1AAA  1698               	bsf	24,5	;volatile
  9574  1AAB  0008               	return
  9575  1AAC                     __end_of_USART_putc:	
  9576                           
  9577                           	psect	text35
  9578  1B67                     __ptext35:	
  9579 ;; *************** function _PROCULUS_Delay *****************
  9580 ;; Defined at:
  9581 ;;		line 267 in file "proculus.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  i               2    4[BANK0 ] unsigned int 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      void 
  9588 ;; Registers used:
  9589 ;;		wreg, status,2
  9590 ;; Tracked objects:
  9591 ;;		On entry : 300/0
  9592 ;;		On exit  : 300/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9595 ;;      Params:         0       2       0       0       0
  9596 ;;      Locals:         0       2       0       0       0
  9597 ;;      Temps:          0       2       0       0       0
  9598 ;;      Totals:         0       6       0       0       0
  9599 ;;Total ram usage:        6 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    1
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_PROCULUS_Control_Register_Write
  9606 ;;		_PROCULUS_VP_Write
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           
  9611                           ;psect for function _PROCULUS_Delay
  9612  1B67                     _PROCULUS_Delay:	
  9613                           
  9614                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9618  1B67  01A4               	clrf	PROCULUS_Delay@i
  9619  1B68  01A5               	clrf	PROCULUS_Delay@i+1
  9620  1B69                     l785:	
  9621  1B69  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9622  1B6A  0225               	subwf	PROCULUS_Delay@i+1,w
  9623  1B6B  1D03               	skipz
  9624  1B6C  2B6F               	goto	u5445
  9625  1B6D  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9626  1B6E  0224               	subwf	PROCULUS_Delay@i,w
  9627  1B6F                     u5445:	
  9628  1B6F  1803               	btfsc	3,0
  9629  1B70  0008               	return
  9630                           
  9631                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9632  1B71  3003               	movlw	3
  9633  1B72  1283               	bcf	3,5	;RP0=0, select bank0
  9634  1B73  1303               	bcf	3,6	;RP1=0, select bank0
  9635  1B74  00A3               	movwf	??_PROCULUS_Delay+1
  9636  1B75  3097               	movlw	151
  9637  1B76  00A2               	movwf	??_PROCULUS_Delay
  9638  1B77                     u7757:	
  9639  1B77  0BA2               	decfsz	??_PROCULUS_Delay,f
  9640  1B78  2B77               	goto	u7757
  9641  1B79  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9642  1B7A  2B77               	goto	u7757
  9643                           
  9644                           ;proculus.c: 270:     }
  9645  1B7B  3001               	movlw	1
  9646  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  9647  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  9648  1B7E  07A4               	addwf	PROCULUS_Delay@i,f
  9649  1B7F  1803               	skipnc
  9650  1B80  0AA5               	incf	PROCULUS_Delay@i+1,f
  9651  1B81  3000               	movlw	0
  9652  1B82  07A5               	addwf	PROCULUS_Delay@i+1,f
  9653  1B83  2B69               	goto	l785
  9654  1B84                     __end_of_PROCULUS_Delay:	
  9655                           
  9656                           	psect	text36
  9657  1CD5                     __ptext36:	
  9658 ;; *************** function _EEPROM_Write_String *****************
  9659 ;; Defined at:
  9660 ;;		line 97 in file "eeprom.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  addr            1    wreg     unsigned char 
  9663 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9664 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;  addr            1    7[BANK0 ] unsigned char 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 300/300
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9676 ;;      Params:         0       1       0       0       0
  9677 ;;      Locals:         0       1       0       0       0
  9678 ;;      Temps:          0       1       0       0       0
  9679 ;;      Totals:         0       3       0       0       0
  9680 ;;Total ram usage:        3 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    2
  9683 ;; This function calls:
  9684 ;;		_EEPROM_Write_Byte
  9685 ;; This function is called by:
  9686 ;;		_Decodify_Command
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           
  9691                           ;psect for function _EEPROM_Write_String
  9692  1CD5                     _EEPROM_Write_String:	
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9696                           ;EEPROM_Write_String@addr stored from wreg
  9697  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  9698  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  9699  1CD7  00A7               	movwf	EEPROM_Write_String@addr
  9700  1CD8                     l6542:	
  9701                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9702                           
  9703                           
  9704                           ;eeprom.c: 99:     while(*dado)
  9705  1CD8  0825               	movf	EEPROM_Write_String@dado,w
  9706  1CD9  0084               	movwf	4
  9707  1CDA  1783               	bsf	3,7	;select IRP bank2
  9708  1CDB  0800               	movf	0,w
  9709  1CDC  1903               	btfsc	3,2
  9710  1CDD  2CF5               	goto	l6544
  9711                           
  9712                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9713  1CDE  0825               	movf	EEPROM_Write_String@dado,w
  9714  1CDF  0084               	movwf	4
  9715  1CE0  0800               	movf	0,w
  9716  1CE1  00A6               	movwf	??_EEPROM_Write_String
  9717  1CE2  0826               	movf	??_EEPROM_Write_String,w
  9718  1CE3  00A0               	movwf	EEPROM_Write_Byte@dado
  9719  1CE4  0827               	movf	EEPROM_Write_String@addr,w
  9720  1CE5  160A  158A  2672  160A  158A  	fcall	_EEPROM_Write_Byte
  9721                           
  9722                           ;eeprom.c: 102:      addr++;
  9723  1CEA  3001               	movlw	1
  9724  1CEB  1283               	bcf	3,5	;RP0=0, select bank0
  9725  1CEC  1303               	bcf	3,6	;RP1=0, select bank0
  9726  1CED  00A6               	movwf	??_EEPROM_Write_String
  9727  1CEE  0826               	movf	??_EEPROM_Write_String,w
  9728  1CEF  07A7               	addwf	EEPROM_Write_String@addr,f
  9729                           
  9730                           ;eeprom.c: 103:      dado++;
  9731  1CF0  3001               	movlw	1
  9732  1CF1  00A6               	movwf	??_EEPROM_Write_String
  9733  1CF2  0826               	movf	??_EEPROM_Write_String,w
  9734  1CF3  07A5               	addwf	EEPROM_Write_String@dado,f
  9735  1CF4  2CD8               	goto	l6542
  9736  1CF5                     l6544:	
  9737                           
  9738                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9739  1CF5  0825               	movf	EEPROM_Write_String@dado,w
  9740  1CF6  0084               	movwf	4
  9741  1CF7  0800               	movf	0,w
  9742  1CF8  00A6               	movwf	??_EEPROM_Write_String
  9743  1CF9  0826               	movf	??_EEPROM_Write_String,w
  9744  1CFA  00A0               	movwf	EEPROM_Write_Byte@dado
  9745  1CFB  0827               	movf	EEPROM_Write_String@addr,w
  9746  1CFC  160A  158A  2672   	fcall	_EEPROM_Write_Byte
  9747  1CFF  0008               	return
  9748  1D00                     __end_of_EEPROM_Write_String:	
  9749                           
  9750                           	psect	text37
  9751  1D31                     __ptext37:	
  9752 ;; *************** function _EEPROM_Write_Integer *****************
  9753 ;; Defined at:
  9754 ;;		line 68 in file "eeprom.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  addr            1    wreg     unsigned char 
  9757 ;;  dado            2    5[BANK0 ] unsigned int 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  addr            1   11[BANK0 ] unsigned char 
  9760 ;;  i               1   12[BANK0 ] unsigned char 
  9761 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9762 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9763 ;;  addr_memo       1    0        unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1    wreg      void 
  9766 ;; Registers used:
  9767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9768 ;; Tracked objects:
  9769 ;;		On entry : 200/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9773 ;;      Params:         0       2       0       0       0
  9774 ;;      Locals:         0       4       0       0       0
  9775 ;;      Temps:          0       2       0       0       0
  9776 ;;      Totals:         0       8       0       0       0
  9777 ;;Total ram usage:        8 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    2
  9780 ;; This function calls:
  9781 ;;		_EEPROM_Write_Byte
  9782 ;; This function is called by:
  9783 ;;		_main
  9784 ;;		_Decodify_Command
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           
  9789                           ;psect for function _EEPROM_Write_Integer
  9790  1D31                     _EEPROM_Write_Integer:	
  9791                           
  9792                           ;incstack = 0
  9793                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9794                           ;EEPROM_Write_Integer@addr stored from wreg
  9795  1D31  1283               	bcf	3,5	;RP0=0, select bank0
  9796  1D32  00AB               	movwf	EEPROM_Write_Integer@addr
  9797                           
  9798                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9799  1D33  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9800  1D34  00A7               	movwf	??_EEPROM_Write_Integer
  9801  1D35  0827               	movf	??_EEPROM_Write_Integer,w
  9802  1D36  00AA               	movwf	EEPROM_Write_Integer@ptr
  9803                           
  9804                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9805  1D37  01AC               	clrf	EEPROM_Write_Integer@i
  9806  1D38                     l6492:	
  9807                           
  9808                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9809  1D38  082A               	movf	EEPROM_Write_Integer@ptr,w
  9810  1D39  0084               	movwf	4
  9811  1D3A  1383               	bcf	3,7	;select IRP bank0
  9812  1D3B  0800               	movf	0,w
  9813  1D3C  00A7               	movwf	??_EEPROM_Write_Integer
  9814  1D3D  0827               	movf	??_EEPROM_Write_Integer,w
  9815  1D3E  00A0               	movwf	EEPROM_Write_Byte@dado
  9816  1D3F  082B               	movf	EEPROM_Write_Integer@addr,w
  9817  1D40  160A  158A  2672  160A  158A  	fcall	_EEPROM_Write_Byte
  9818  1D45  3001               	movlw	1
  9819  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  9820  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  9821  1D48  00A7               	movwf	??_EEPROM_Write_Integer
  9822  1D49  0827               	movf	??_EEPROM_Write_Integer,w
  9823  1D4A  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9824  1D4B  3001               	movlw	1
  9825  1D4C  00A7               	movwf	??_EEPROM_Write_Integer
  9826  1D4D  0827               	movf	??_EEPROM_Write_Integer,w
  9827  1D4E  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9828  1D4F  3001               	movlw	1
  9829  1D50  00A7               	movwf	??_EEPROM_Write_Integer
  9830  1D51  0827               	movf	??_EEPROM_Write_Integer,w
  9831  1D52  07AC               	addwf	EEPROM_Write_Integer@i,f
  9832  1D53  3002               	movlw	2
  9833  1D54  022C               	subwf	EEPROM_Write_Integer@i,w
  9834  1D55  1C03               	skipc
  9835  1D56  2D38               	goto	l6492
  9836                           
  9837                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9838  1D57  304E               	movlw	78
  9839  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  9840  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  9841  1D5A  00A8               	movwf	??_EEPROM_Write_Integer+1
  9842  1D5B  30EA               	movlw	234
  9843  1D5C  00A7               	movwf	??_EEPROM_Write_Integer
  9844  1D5D                     u7767:	
  9845  1D5D  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9846  1D5E  2D5D               	goto	u7767
  9847  1D5F  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9848  1D60  2D5D               	goto	u7767
  9849  1D61  0000               	nop
  9850  1D62  0008               	return
  9851  1D63                     __end_of_EEPROM_Write_Integer:	
  9852                           
  9853                           	psect	text38
  9854  1E72                     __ptext38:	
  9855 ;; *************** function _EEPROM_Write_Byte *****************
  9856 ;; Defined at:
  9857 ;;		line 21 in file "eeprom.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  addr            1    wreg     unsigned char 
  9860 ;;  dado            1    0[BANK0 ] unsigned char 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  addr            1    3[BANK0 ] unsigned char 
  9863 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/300
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         0       1       0       0       0
  9874 ;;      Locals:         0       2       0       0       0
  9875 ;;      Temps:          0       2       0       0       0
  9876 ;;      Totals:         0       5       0       0       0
  9877 ;;Total ram usage:        5 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    1
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_Decodify_Command
  9884 ;;		_EEPROM_Write_Integer
  9885 ;;		_EEPROM_Write_String
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           
  9890                           ;psect for function _EEPROM_Write_Byte
  9891  1E72                     _EEPROM_Write_Byte:	
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9895                           ;EEPROM_Write_Byte@addr stored from wreg
  9896  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  9897  1E73  1303               	bcf	3,6	;RP1=0, select bank0
  9898  1E74  00A3               	movwf	EEPROM_Write_Byte@addr
  9899                           
  9900                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9901  1E75  3014               	movlw	20
  9902  1E76  1683               	bsf	3,5	;RP0=1, select bank1
  9903  1E77  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9904  1E78  3000               	movlw	0
  9905  1E79  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9906  1E7A                     l504:	
  9907                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9908                           
  9909  1E7A  1703               	bsf	3,6	;RP1=1, select bank3
  9910  1E7B  188C               	btfsc	12,1	;volsfr
  9911  1E7C  2E7A               	goto	l504
  9912                           
  9913                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9914  1E7D  1F8B               	btfss	11,7	;volatile
  9915  1E7E  2E84               	goto	l5734
  9916                           
  9917                           ;eeprom.c: 28:           last_GIE=1;
  9918  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  9919  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  9920  1E81  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9921  1E82  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9922  1E83  2E87               	goto	l5736
  9923  1E84                     l5734:	
  9924                           
  9925                           ;eeprom.c: 30:           last_GIE=0;
  9926  1E84  1283               	bcf	3,5	;RP0=0, select bank0
  9927  1E85  1303               	bcf	3,6	;RP1=0, select bank0
  9928  1E86  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9929  1E87                     l5736:	
  9930                           
  9931                           ;eeprom.c: 32:        EEADR=addr;
  9932  1E87  0823               	movf	EEPROM_Write_Byte@addr,w
  9933  1E88  1703               	bsf	3,6	;RP1=1, select bank2
  9934  1E89  008D               	movwf	13	;volatile
  9935                           
  9936                           ;eeprom.c: 33:        EEDATA=dado;
  9937  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
  9938  1E8B  0820               	movf	EEPROM_Write_Byte@dado,w
  9939  1E8C  1703               	bsf	3,6	;RP1=1, select bank2
  9940  1E8D  008C               	movwf	12	;volatile
  9941                           
  9942                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9943  1E8E  1683               	bsf	3,5	;RP0=1, select bank3
  9944  1E8F  138C               	bcf	12,7	;volsfr
  9945                           
  9946                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9947  1E90  150C               	bsf	12,2	;volsfr
  9948                           
  9949                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9950  1E91  138B               	bcf	11,7	;volatile
  9951                           
  9952                           ;eeprom.c: 37:        EECON2=0x55;
  9953  1E92  3055               	movlw	85
  9954  1E93  008D               	movwf	13	;volsfr
  9955                           
  9956                           ;eeprom.c: 38:        EECON2=0xAA;
  9957  1E94  30AA               	movlw	170
  9958  1E95  008D               	movwf	13	;volsfr
  9959                           
  9960                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9961  1E96  148C               	bsf	12,1	;volsfr
  9962                           
  9963                           ;eeprom.c: 41:        if(last_GIE==1)
  9964  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  9965  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  9966  1E99  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9967  1E9A  1D03               	btfss	3,2
  9968  1E9B  2E9E               	goto	l509
  9969                           
  9970                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9971  1E9C  178B               	bsf	11,7	;volatile
  9972  1E9D  2E9F               	goto	l510
  9973  1E9E                     l509:	
  9974                           ;eeprom.c: 43:        else
  9975                           
  9976                           
  9977                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9978  1E9E  138B               	bcf	11,7	;volatile
  9979  1E9F                     l510:	
  9980                           
  9981                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9982  1E9F  1683               	bsf	3,5	;RP0=1, select bank3
  9983  1EA0  1703               	bsf	3,6	;RP1=1, select bank3
  9984  1EA1  110C               	bcf	12,2	;volsfr
  9985                           
  9986                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9987  1EA2  304E               	movlw	78
  9988  1EA3  1283               	bcf	3,5	;RP0=0, select bank0
  9989  1EA4  1303               	bcf	3,6	;RP1=0, select bank0
  9990  1EA5  00A2               	movwf	??_EEPROM_Write_Byte+1
  9991  1EA6  30EA               	movlw	234
  9992  1EA7  00A1               	movwf	??_EEPROM_Write_Byte
  9993  1EA8                     u7777:	
  9994  1EA8  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9995  1EA9  2EA8               	goto	u7777
  9996  1EAA  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9997  1EAB  2EA8               	goto	u7777
  9998  1EAC  0000               	nop
  9999  1EAD  0008               	return
 10000  1EAE                     __end_of_EEPROM_Write_Byte:	
 10001                           
 10002                           	psect	text39
 10003  1BFD                     __ptext39:	
 10004 ;; *************** function _EEPROM_Read_String *****************
 10005 ;; Defined at:
 10006 ;;		line 109 in file "eeprom.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  addr            1    wreg     unsigned char 
 10009 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10010 ;;		 -> buffer(33), 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  addr            1    5[BANK0 ] unsigned char 
 10013 ;;  c               1    6[BANK0 ] unsigned char 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 300/300
 10020 ;;		On exit  : B00/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10023 ;;      Params:         0       1       0       0       0
 10024 ;;      Locals:         0       2       0       0       0
 10025 ;;      Temps:          0       1       0       0       0
 10026 ;;      Totals:         0       4       0       0       0
 10027 ;;Total ram usage:        4 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    2
 10030 ;; This function calls:
 10031 ;;		_EEPROM_Read_Byte
 10032 ;; This function is called by:
 10033 ;;		_Decodify_Command
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           
 10038                           ;psect for function _EEPROM_Read_String
 10039  1BFD                     _EEPROM_Read_String:	
 10040                           
 10041                           ;incstack = 0
 10042                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10043                           ;EEPROM_Read_String@addr stored from wreg
 10044  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
 10045  1BFE  1303               	bcf	3,6	;RP1=0, select bank0
 10046  1BFF  00A5               	movwf	EEPROM_Read_String@addr
 10047  1C00                     l536:	
 10048                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10049                           
 10050                           
 10051                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10052  1C00  0825               	movf	EEPROM_Read_String@addr,w
 10053  1C01  160A  158A  243E  160A  158A  	fcall	_EEPROM_Read_Byte
 10054  1C06  1303               	bcf	3,6	;RP1=0, select bank0
 10055  1C07  00A4               	movwf	??_EEPROM_Read_String
 10056  1C08  0824               	movf	??_EEPROM_Read_String,w
 10057  1C09  00A6               	movwf	EEPROM_Read_String@c
 10058  1C0A  3001               	movlw	1
 10059  1C0B  00A4               	movwf	??_EEPROM_Read_String
 10060  1C0C  0824               	movf	??_EEPROM_Read_String,w
 10061  1C0D  07A5               	addwf	EEPROM_Read_String@addr,f
 10062                           
 10063                           ;eeprom.c: 114:         *(dado++)=c;
 10064  1C0E  0826               	movf	EEPROM_Read_String@c,w
 10065  1C0F  00A4               	movwf	??_EEPROM_Read_String
 10066  1C10  0823               	movf	EEPROM_Read_String@dado,w
 10067  1C11  0084               	movwf	4
 10068  1C12  0824               	movf	??_EEPROM_Read_String,w
 10069  1C13  1383               	bcf	3,7	;select IRP bank0
 10070  1C14  0080               	movwf	0
 10071  1C15  3001               	movlw	1
 10072  1C16  00A4               	movwf	??_EEPROM_Read_String
 10073  1C17  0824               	movf	??_EEPROM_Read_String,w
 10074  1C18  07A3               	addwf	EEPROM_Read_String@dado,f
 10075                           
 10076                           ;eeprom.c: 116:       }while(c);
 10077  1C19  0826               	movf	EEPROM_Read_String@c,w
 10078  1C1A  1903               	btfsc	3,2
 10079  1C1B  0008               	return
 10080  1C1C  2C00               	goto	l536
 10081  1C1D                     __end_of_EEPROM_Read_String:	
 10082                           
 10083                           	psect	text40
 10084  1CAB                     __ptext40:	
 10085 ;; *************** function _EEPROM_Read_Integer *****************
 10086 ;; Defined at:
 10087 ;;		line 81 in file "eeprom.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  addr            1    wreg     unsigned char 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  addr            1    6[BANK0 ] unsigned char 
 10092 ;;  result          2    8[BANK0 ] unsigned int 
 10093 ;;  i               1   10[BANK0 ] unsigned char 
 10094 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10095 ;;		 -> EEPROM_Read_Integer@result(2), 
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  2    3[BANK0 ] unsigned int 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : B00/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10105 ;;      Params:         0       2       0       0       0
 10106 ;;      Locals:         0       5       0       0       0
 10107 ;;      Temps:          0       1       0       0       0
 10108 ;;      Totals:         0       8       0       0       0
 10109 ;;Total ram usage:        8 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:    2
 10112 ;; This function calls:
 10113 ;;		_EEPROM_Read_Byte
 10114 ;; This function is called by:
 10115 ;;		_main
 10116 ;;		_Decodify_Command
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           
 10121                           ;psect for function _EEPROM_Read_Integer
 10122  1CAB                     _EEPROM_Read_Integer:	
 10123                           
 10124                           ;incstack = 0
 10125                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10126                           ;EEPROM_Read_Integer@addr stored from wreg
 10127  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
 10128  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
 10129  1CAD  00A6               	movwf	EEPROM_Read_Integer@addr
 10130                           
 10131                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10132  1CAE  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10133  1CAF  00A5               	movwf	??_EEPROM_Read_Integer
 10134  1CB0  0825               	movf	??_EEPROM_Read_Integer,w
 10135  1CB1  00A7               	movwf	EEPROM_Read_Integer@ptr
 10136                           
 10137                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10138  1CB2  01AA               	clrf	EEPROM_Read_Integer@i
 10139  1CB3                     l6468:	
 10140                           
 10141                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10142  1CB3  0826               	movf	EEPROM_Read_Integer@addr,w
 10143  1CB4  160A  158A  243E  160A  158A  	fcall	_EEPROM_Read_Byte
 10144  1CB9  1303               	bcf	3,6	;RP1=0, select bank0
 10145  1CBA  00A5               	movwf	??_EEPROM_Read_Integer
 10146  1CBB  0827               	movf	EEPROM_Read_Integer@ptr,w
 10147  1CBC  0084               	movwf	4
 10148  1CBD  0825               	movf	??_EEPROM_Read_Integer,w
 10149  1CBE  1383               	bcf	3,7	;select IRP bank0
 10150  1CBF  0080               	movwf	0
 10151  1CC0  3001               	movlw	1
 10152  1CC1  00A5               	movwf	??_EEPROM_Read_Integer
 10153  1CC2  0825               	movf	??_EEPROM_Read_Integer,w
 10154  1CC3  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10155  1CC4  3001               	movlw	1
 10156  1CC5  00A5               	movwf	??_EEPROM_Read_Integer
 10157  1CC6  0825               	movf	??_EEPROM_Read_Integer,w
 10158  1CC7  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10159  1CC8  3001               	movlw	1
 10160  1CC9  00A5               	movwf	??_EEPROM_Read_Integer
 10161  1CCA  0825               	movf	??_EEPROM_Read_Integer,w
 10162  1CCB  07AA               	addwf	EEPROM_Read_Integer@i,f
 10163  1CCC  3002               	movlw	2
 10164  1CCD  022A               	subwf	EEPROM_Read_Integer@i,w
 10165  1CCE  1C03               	skipc
 10166  1CCF  2CB3               	goto	l6468
 10167                           
 10168                           ;eeprom.c: 89:       return result;
 10169  1CD0  0829               	movf	EEPROM_Read_Integer@result+1,w
 10170  1CD1  00A4               	movwf	?_EEPROM_Read_Integer+1
 10171  1CD2  0828               	movf	EEPROM_Read_Integer@result,w
 10172  1CD3  00A3               	movwf	?_EEPROM_Read_Integer
 10173  1CD4  0008               	return
 10174  1CD5                     __end_of_EEPROM_Read_Integer:	
 10175                           
 10176                           	psect	text41
 10177  1C3E                     __ptext41:	
 10178 ;; *************** function _EEPROM_Read_Byte *****************
 10179 ;; Defined at:
 10180 ;;		line 52 in file "eeprom.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  addr            1    wreg     unsigned char 
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  addr            1    2[BANK0 ] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      unsigned char 
 10187 ;; Registers used:
 10188 ;;		wreg
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/300
 10191 ;;		On exit  : 300/200
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10194 ;;      Params:         0       0       0       0       0
 10195 ;;      Locals:         0       1       0       0       0
 10196 ;;      Temps:          0       2       0       0       0
 10197 ;;      Totals:         0       3       0       0       0
 10198 ;;Total ram usage:        3 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:    1
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_Decodify_Command
 10205 ;;		_EEPROM_Read_Integer
 10206 ;;		_EEPROM_Read_String
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _EEPROM_Read_Byte
 10212  1C3E                     _EEPROM_Read_Byte:	
 10213                           
 10214                           ;incstack = 0
 10215                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10216                           ;EEPROM_Read_Byte@addr stored from wreg
 10217  1C3E  1283               	bcf	3,5	;RP0=0, select bank0
 10218  1C3F  1303               	bcf	3,6	;RP1=0, select bank0
 10219  1C40  00A2               	movwf	EEPROM_Read_Byte@addr
 10220                           
 10221                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10222  1C41  3014               	movlw	20
 10223  1C42  1683               	bsf	3,5	;RP0=1, select bank1
 10224  1C43  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10225  1C44  3000               	movlw	0
 10226  1C45  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10227  1C46                     l514:	
 10228                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10229                           
 10230  1C46  1703               	bsf	3,6	;RP1=1, select bank3
 10231  1C47  188C               	btfsc	12,1	;volsfr
 10232  1C48  2C46               	goto	l514
 10233                           
 10234                           ;eeprom.c: 57:    EEADR=addr;
 10235  1C49  1283               	bcf	3,5	;RP0=0, select bank0
 10236  1C4A  1303               	bcf	3,6	;RP1=0, select bank0
 10237  1C4B  0822               	movf	EEPROM_Read_Byte@addr,w
 10238  1C4C  1703               	bsf	3,6	;RP1=1, select bank2
 10239  1C4D  008D               	movwf	13	;volatile
 10240                           
 10241                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10242  1C4E  1683               	bsf	3,5	;RP0=1, select bank3
 10243  1C4F  138C               	bcf	12,7	;volsfr
 10244                           
 10245                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10246  1C50  140C               	bsf	12,0	;volsfr
 10247                           
 10248                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10249  1C51  304E               	movlw	78
 10250  1C52  1283               	bcf	3,5	;RP0=0, select bank0
 10251  1C53  1303               	bcf	3,6	;RP1=0, select bank0
 10252  1C54  00A1               	movwf	??_EEPROM_Read_Byte+1
 10253  1C55  30EA               	movlw	234
 10254  1C56  00A0               	movwf	??_EEPROM_Read_Byte
 10255  1C57                     u7787:	
 10256  1C57  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10257  1C58  2C57               	goto	u7787
 10258  1C59  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10259  1C5A  2C57               	goto	u7787
 10260  1C5B  0000               	nop
 10261                           
 10262                           ;eeprom.c: 61:    return EEDATA;
 10263  1C5C  1283               	bcf	3,5	;RP0=0, select bank2
 10264  1C5D  1703               	bsf	3,6	;RP1=1, select bank2
 10265  1C5E  080C               	movf	12,w	;volatile
 10266  1C5F  0008               	return
 10267  1C60                     __end_of_EEPROM_Read_Byte:	
 10268                           
 10269                           	psect	text42
 10270  1437                     __ptext42:	
 10271 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10272 ;; Defined at:
 10273 ;;		line 147 in file "EEPROM_24C1025.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  chip_add        1    wreg     unsigned char 
 10276 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10277 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10278 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10281 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10282 ;;  range           1   18[BANK0 ] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 300/300
 10289 ;;		On exit  : 300/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10292 ;;      Params:         0       5       0       0       0
 10293 ;;      Locals:         0       3       0       0       0
 10294 ;;      Temps:          0       2       0       0       0
 10295 ;;      Totals:         0      10       0       0       0
 10296 ;;Total ram usage:       10 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    3
 10299 ;; This function calls:
 10300 ;;		_I2C_Master_Start
 10301 ;;		_I2C_Master_Stop
 10302 ;;		_I2C_Master_Write
 10303 ;;		_my_delay_ms_WDT
 10304 ;; This function is called by:
 10305 ;;		_Decodify_Command
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function _EEPROM_24C1025_Write_Str
 10311  1437                     _EEPROM_24C1025_Write_Str:	
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10315                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10316  1437  1283               	bcf	3,5	;RP0=0, select bank0
 10317  1438  1303               	bcf	3,6	;RP1=0, select bank0
 10318  1439  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10319                           
 10320                           ;EEPROM_24C1025.c: 149:      unsigned char ctrl;;EEPROM_24C1025.c: 151:      if(mem_add>
      +                          0x1FFFF) return;
 10321  143A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10322  143B  1D03               	btfss	3,2
 10323  143C  0008               	return
 10324  143D  3002               	movlw	2
 10325  143E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10326  143F  1D03               	skipz
 10327  1440  2C49               	goto	u6773
 10328  1441  3000               	movlw	0
 10329  1442  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10330  1443  1D03               	skipz
 10331  1444  2C49               	goto	u6773
 10332  1445  3000               	movlw	0
 10333  1446  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10334  1447  1D03               	skipz
 10335  1448  2C49               	goto	u6773
 10336  1449                     u6773:	
 10337  1449  1803               	btfsc	3,0
 10338  144A  0008               	return
 10339  144B                     L10:	
 10340                           
 10341                           ;EEPROM_24C1025.c: 153:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10342  144B  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10343  144C  1D03               	btfss	3,2
 10344  144D  2C5C               	goto	l6270
 10345  144E  3001               	movlw	1
 10346  144F  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10347  1450  1D03               	skipz
 10348  1451  2C5A               	goto	u6783
 10349  1452  3000               	movlw	0
 10350  1453  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10351  1454  1D03               	skipz
 10352  1455  2C5A               	goto	u6783
 10353  1456  3000               	movlw	0
 10354  1457  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10355  1458  1D03               	skipz
 10356  1459  2C5A               	goto	u6783
 10357  145A                     u6783:	
 10358  145A  1C03               	btfss	3,0
 10359  145B  2C61               	goto	l6272
 10360  145C                     l6270:	
 10361  145C  3008               	movlw	8
 10362  145D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10363  145E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10364  145F  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10365  1460  2C62               	goto	l6274
 10366  1461                     l6272:	
 10367  1461  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10368  1462                     l6274:	
 10369                           
 10370                           ;EEPROM_24C1025.c: 154:      ctrl=chip_add;
 10371  1462  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10372  1463  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10373  1464  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10374  1465  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10375                           
 10376                           ;EEPROM_24C1025.c: 155:      ctrl<<=1;
 10377  1466  1003               	clrc
 10378  1467  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10379                           
 10380                           ;EEPROM_24C1025.c: 156:      ctrl |= 0xA0;
 10381  1468  30A0               	movlw	160
 10382  1469  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10383  146A  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10384  146B  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10385                           
 10386                           ;EEPROM_24C1025.c: 157:      ctrl |= range;
 10387  146C  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10388  146D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10389  146E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10390  146F  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10391                           
 10392                           ;EEPROM_24C1025.c: 159:      I2C_Master_Start();
 10393  1470  160A  158A  22AC  160A  118A  	fcall	_I2C_Master_Start
 10394                           
 10395                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(ctrl);
 10396  1475  1283               	bcf	3,5	;RP0=0, select bank0
 10397  1476  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10398  1477  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10399  1478  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10400  1479  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10401  147A  00A3               	movwf	I2C_Master_Write@d
 10402  147B  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10403  147C  00A4               	movwf	I2C_Master_Write@d+1
 10404  147D  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10405                           
 10406                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[1]);
 10407  1482  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10408  1483  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10409  1484  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10410  1485  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10411  1486  00A3               	movwf	I2C_Master_Write@d
 10412  1487  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10413  1488  00A4               	movwf	I2C_Master_Write@d+1
 10414  1489  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10415                           
 10416                           ;EEPROM_24C1025.c: 162:      I2C_Master_Write(((char *)&mem_add)[0]);
 10417  148E  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10418  148F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10419  1490  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10420  1491  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10421  1492  00A3               	movwf	I2C_Master_Write@d
 10422  1493  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10423  1494  00A4               	movwf	I2C_Master_Write@d+1
 10424  1495  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10425  149A                     l6334:	
 10426                           ;EEPROM_24C1025.c: 163:      while(*data)
 10427                           
 10428                           
 10429                           ;EEPROM_24C1025.c: 163:      while(*data)
 10430  149A  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10431  149B  0084               	movwf	4
 10432  149C  1783               	bsf	3,7	;select IRP bank2
 10433  149D  0800               	movf	0,w
 10434  149E  1903               	btfsc	3,2
 10435  149F  2D10               	goto	l6336
 10436  14A0  0064               	clrwdt	;# 
 10437                           
 10438                           ;EEPROM_24C1025.c: 166:           if(mem_add>0x1FFFF) return;
 10439  14A1  1283               	bcf	3,5	;RP0=0, select bank0
 10440  14A2  1303               	bcf	3,6	;RP1=0, select bank0
 10441  14A3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10442  14A4  1D03               	btfss	3,2
 10443  14A5  0008               	return
 10444  14A6  3002               	movlw	2
 10445  14A7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10446  14A8  1D03               	skipz
 10447  14A9  2CB2               	goto	u6793
 10448  14AA  3000               	movlw	0
 10449  14AB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10450  14AC  1D03               	skipz
 10451  14AD  2CB2               	goto	u6793
 10452  14AE  3000               	movlw	0
 10453  14AF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10454  14B0  1D03               	skipz
 10455  14B1  2CB2               	goto	u6793
 10456  14B2                     u6793:	
 10457  14B2  1803               	btfsc	3,0
 10458  14B3  0008               	return
 10459                           
 10460                           ;EEPROM_24C1025.c: 167:           if((mem_add+1)%128==0)
 10461  14B4  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10462  14B5  3E01               	addlw	1
 10463  14B6  397F               	andlw	127
 10464  14B7  1D03               	btfss	3,2
 10465  14B8  2CEE               	goto	l6328
 10466                           
 10467                           ;EEPROM_24C1025.c: 168:             {;EEPROM_24C1025.c: 169:             I2C_Master_Writ
      +                          e(*data);
 10468  14B9  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10469  14BA  0084               	movwf	4
 10470  14BB  1783               	bsf	3,7	;select IRP bank2
 10471  14BC  0800               	movf	0,w
 10472  14BD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10473  14BE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10474  14BF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10475  14C0  00A3               	movwf	I2C_Master_Write@d
 10476  14C1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10477  14C2  00A4               	movwf	I2C_Master_Write@d+1
 10478  14C3  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10479                           
 10480                           ;EEPROM_24C1025.c: 170:             I2C_Master_Stop();
 10481  14C8  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 10482                           
 10483                           ;EEPROM_24C1025.c: 172:             my_delay_ms_WDT(5);
 10484  14CD  3000               	movlw	0
 10485  14CE  1283               	bcf	3,5	;RP0=0, select bank0
 10486  14CF  00A3               	movwf	my_delay_ms_WDT@time+3
 10487  14D0  3000               	movlw	0
 10488  14D1  00A2               	movwf	my_delay_ms_WDT@time+2
 10489  14D2  3000               	movlw	0
 10490  14D3  00A1               	movwf	my_delay_ms_WDT@time+1
 10491  14D4  3005               	movlw	5
 10492  14D5  00A0               	movwf	my_delay_ms_WDT@time
 10493  14D6  160A  158A  2602  160A  118A  	fcall	_my_delay_ms_WDT
 10494                           
 10495                           ;EEPROM_24C1025.c: 173:             mem_add++;
 10496  14DB  3001               	movlw	1
 10497  14DC  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10498  14DD  3000               	movlw	0
 10499  14DE  1803               	skipnc
 10500  14DF  3001               	movlw	1
 10501  14E0  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10502  14E1  3000               	movlw	0
 10503  14E2  1803               	skipnc
 10504  14E3  3001               	movlw	1
 10505  14E4  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10506  14E5  3000               	movlw	0
 10507  14E6  1803               	skipnc
 10508  14E7  3001               	movlw	1
 10509  14E8  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10510                           
 10511                           ;EEPROM_24C1025.c: 174:             data++;
 10512  14E9  3001               	movlw	1
 10513  14EA  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10514  14EB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10515  14EC  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10516  14ED  2C4B               	goto	L10
 10517  14EE                     l6328:	
 10518                           ;EEPROM_24C1025.c: 175:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10519                           
 10520                           
 10521                           ;EEPROM_24C1025.c: 187:             {;EEPROM_24C1025.c: 188:             I2C_Master_Writ
      +                          e(*data);
 10522  14EE  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10523  14EF  0084               	movwf	4
 10524  14F0  1783               	bsf	3,7	;select IRP bank2
 10525  14F1  0800               	movf	0,w
 10526  14F2  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10527  14F3  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10528  14F4  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10529  14F5  00A3               	movwf	I2C_Master_Write@d
 10530  14F6  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10531  14F7  00A4               	movwf	I2C_Master_Write@d+1
 10532  14F8  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10533                           
 10534                           ;EEPROM_24C1025.c: 189:             data++;
 10535  14FD  3001               	movlw	1
 10536  14FE  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10537  14FF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10538  1500  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10539                           
 10540                           ;EEPROM_24C1025.c: 190:             mem_add++;
 10541  1501  3001               	movlw	1
 10542  1502  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10543  1503  3000               	movlw	0
 10544  1504  1803               	skipnc
 10545  1505  3001               	movlw	1
 10546  1506  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10547  1507  3000               	movlw	0
 10548  1508  1803               	skipnc
 10549  1509  3001               	movlw	1
 10550  150A  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10551  150B  3000               	movlw	0
 10552  150C  1803               	skipnc
 10553  150D  3001               	movlw	1
 10554  150E  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10555  150F  2C9A               	goto	l6334
 10556  1510                     l6336:	
 10557                           
 10558                           ;EEPROM_24C1025.c: 193:      I2C_Master_Write(0);
 10559  1510  3000               	movlw	0
 10560  1511  00A3               	movwf	I2C_Master_Write@d
 10561  1512  00A4               	movwf	I2C_Master_Write@d+1
 10562  1513  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10563                           
 10564                           ;EEPROM_24C1025.c: 194:      I2C_Master_Stop();
 10565  1518  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 10566                           
 10567                           ;EEPROM_24C1025.c: 195:      my_delay_ms_WDT(5);
 10568  151D  3000               	movlw	0
 10569  151E  1283               	bcf	3,5	;RP0=0, select bank0
 10570  151F  00A3               	movwf	my_delay_ms_WDT@time+3
 10571  1520  3000               	movlw	0
 10572  1521  00A2               	movwf	my_delay_ms_WDT@time+2
 10573  1522  3000               	movlw	0
 10574  1523  00A1               	movwf	my_delay_ms_WDT@time+1
 10575  1524  3005               	movlw	5
 10576  1525  00A0               	movwf	my_delay_ms_WDT@time
 10577  1526  160A  158A  2602   	fcall	_my_delay_ms_WDT
 10578  1529  0008               	return
 10579  152A                     __end_of_EEPROM_24C1025_Write_Str:	
 10580                           
 10581                           	psect	text43
 10582  1AD2                     __ptext43:	
 10583 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10584 ;; Defined at:
 10585 ;;		line 268 in file "EEPROM_24C1025.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  chip_add        1    wreg     unsigned char 
 10588 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10589 ;;  data            1   27[BANK0 ] unsigned char 
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10596 ;; Tracked objects:
 10597 ;;		On entry : 300/300
 10598 ;;		On exit  : 300/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10601 ;;      Params:         0       5       0       0       0
 10602 ;;      Locals:         0       1       0       0       0
 10603 ;;      Temps:          0       0       0       0       0
 10604 ;;      Totals:         0       6       0       0       0
 10605 ;;Total ram usage:        6 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; Hardware stack levels required when called:    4
 10608 ;; This function calls:
 10609 ;;		_EEPROM_24C1025_Write_Buffer
 10610 ;; This function is called by:
 10611 ;;		_Decodify_Command
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           
 10616                           ;psect for function _EEPROM_24C1025_Write_Byte
 10617  1AD2                     _EEPROM_24C1025_Write_Byte:	
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10621                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10622  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
 10623  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
 10624  1AD4  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10625                           
 10626                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10627  1AD5  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10628  1AD6  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10629  1AD7  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10630  1AD8  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10631  1AD9  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10632  1ADA  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10633  1ADB  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10634  1ADC  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10635  1ADD  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10636  1ADE  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10637  1ADF  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10638  1AE0  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10639  1AE1  3000               	movlw	0
 10640  1AE2  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10641  1AE3  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10642  1AE4  160A  118A  252A   	fcall	_EEPROM_24C1025_Write_Buffer
 10643  1AE7  0008               	return
 10644  1AE8                     __end_of_EEPROM_24C1025_Write_Byte:	
 10645                           
 10646                           	psect	text44
 10647  1694                     __ptext44:	
 10648 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10649 ;; Defined at:
 10650 ;;		line 202 in file "EEPROM_24C1025.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;  chip_add        1    wreg     unsigned char 
 10653 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10654 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10655 ;;		 -> buffer(33), 
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10658 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10659 ;;  range           1   18[BANK0 ] unsigned char 
 10660 ;;  cnt             1   16[BANK0 ] unsigned char 
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 300/300
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10670 ;;      Params:         0       5       0       0       0
 10671 ;;      Locals:         0       4       0       0       0
 10672 ;;      Temps:          0       2       0       0       0
 10673 ;;      Totals:         0      11       0       0       0
 10674 ;;Total ram usage:       11 bytes
 10675 ;; Hardware stack levels used:    1
 10676 ;; Hardware stack levels required when called:    3
 10677 ;; This function calls:
 10678 ;;		_I2C_Master_Read
 10679 ;;		_I2C_Master_RepeatedStart
 10680 ;;		_I2C_Master_Start
 10681 ;;		_I2C_Master_Stop
 10682 ;;		_I2C_Master_Write
 10683 ;; This function is called by:
 10684 ;;		_Decodify_Command
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           
 10689                           ;psect for function _EEPROM_24C1025_Read_Str
 10690  1694                     _EEPROM_24C1025_Read_Str:	
 10691                           
 10692                           ;incstack = 0
 10693                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10694                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10695  1694  1283               	bcf	3,5	;RP0=0, select bank0
 10696  1695  1303               	bcf	3,6	;RP1=0, select bank0
 10697  1696  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10698                           
 10699                           ;EEPROM_24C1025.c: 204:      unsigned char range=0;
 10700  1697  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10701                           
 10702                           ;EEPROM_24C1025.c: 205:      unsigned char ctrl;;EEPROM_24C1025.c: 207:      if(mem_add>
      +                          0x1FFFF) return;
 10703  1698  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10704  1699  1D03               	btfss	3,2
 10705  169A  0008               	return
 10706  169B  3002               	movlw	2
 10707  169C  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10708  169D  1D03               	skipz
 10709  169E  2EA7               	goto	u6833
 10710  169F  3000               	movlw	0
 10711  16A0  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10712  16A1  1D03               	skipz
 10713  16A2  2EA7               	goto	u6833
 10714  16A3  3000               	movlw	0
 10715  16A4  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10716  16A5  1D03               	skipz
 10717  16A6  2EA7               	goto	u6833
 10718  16A7                     u6833:	
 10719  16A7  1803               	btfsc	3,0
 10720  16A8  0008               	return
 10721                           
 10722                           ;EEPROM_24C1025.c: 209:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10723  16A9  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10724  16AA  1D03               	btfss	3,2
 10725  16AB  2EBA               	goto	l6348
 10726  16AC  3001               	movlw	1
 10727  16AD  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10728  16AE  1D03               	skipz
 10729  16AF  2EB8               	goto	u6843
 10730  16B0  3000               	movlw	0
 10731  16B1  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10732  16B2  1D03               	skipz
 10733  16B3  2EB8               	goto	u6843
 10734  16B4  3000               	movlw	0
 10735  16B5  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10736  16B6  1D03               	skipz
 10737  16B7  2EB8               	goto	u6843
 10738  16B8                     u6843:	
 10739  16B8  1C03               	btfss	3,0
 10740  16B9  2EBF               	goto	l6350
 10741  16BA                     l6348:	
 10742  16BA  3008               	movlw	8
 10743  16BB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10744  16BC  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10745  16BD  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10746  16BE  2EC0               	goto	l6352
 10747  16BF                     l6350:	
 10748  16BF  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10749  16C0                     l6352:	
 10750                           
 10751                           ;EEPROM_24C1025.c: 210:      ctrl=chip_add;
 10752  16C0  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10753  16C1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10754  16C2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10755  16C3  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10756                           
 10757                           ;EEPROM_24C1025.c: 211:      ctrl<<=1;
 10758  16C4  1003               	clrc
 10759  16C5  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10760                           
 10761                           ;EEPROM_24C1025.c: 212:      ctrl |= 0xA0;
 10762  16C6  30A0               	movlw	160
 10763  16C7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10764  16C8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10765  16C9  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10766                           
 10767                           ;EEPROM_24C1025.c: 213:      ctrl |= 0b00000001;
 10768  16CA  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10769                           
 10770                           ;EEPROM_24C1025.c: 214:      ctrl |= range;
 10771  16CB  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10772  16CC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10773  16CD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10774  16CE  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10775                           
 10776                           ;EEPROM_24C1025.c: 216:      I2C_Master_Start();
 10777  16CF  160A  158A  22AC  160A  118A  	fcall	_I2C_Master_Start
 10778                           
 10779                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(ctrl & 0xFE);
 10780  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 10781  16D5  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10782  16D6  39FE               	andlw	254
 10783  16D7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10784  16D8  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10785  16D9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10786  16DA  00A3               	movwf	I2C_Master_Write@d
 10787  16DB  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10788  16DC  00A4               	movwf	I2C_Master_Write@d+1
 10789  16DD  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10790                           
 10791                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[1]);
 10792  16E2  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10793  16E3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10794  16E4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10795  16E5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10796  16E6  00A3               	movwf	I2C_Master_Write@d
 10797  16E7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10798  16E8  00A4               	movwf	I2C_Master_Write@d+1
 10799  16E9  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10800                           
 10801                           ;EEPROM_24C1025.c: 219:      I2C_Master_Write(((char *)&mem_add)[0]);
 10802  16EE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10803  16EF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10804  16F0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10805  16F1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10806  16F2  00A3               	movwf	I2C_Master_Write@d
 10807  16F3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10808  16F4  00A4               	movwf	I2C_Master_Write@d+1
 10809  16F5  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10810                           
 10811                           ;EEPROM_24C1025.c: 220:      I2C_Master_RepeatedStart();
 10812  16FA  160A  158A  2291  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10813                           
 10814                           ;EEPROM_24C1025.c: 221:      I2C_Master_Write(ctrl);
 10815  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 10816  1700  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10817  1701  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10818  1702  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10819  1703  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10820  1704  00A3               	movwf	I2C_Master_Write@d
 10821  1705  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10822  1706  00A4               	movwf	I2C_Master_Write@d+1
 10823  1707  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10824                           
 10825                           ;EEPROM_24C1025.c: 223:      cnt=0;
 10826  170C  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10827  170D                     l6374:	
 10828                           
 10829                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10830  170D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10831  170E  1D03               	btfss	3,2
 10832  170F  2FE9               	goto	l6430
 10833  1710  3002               	movlw	2
 10834  1711  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10835  1712  1D03               	skipz
 10836  1713  2F1C               	goto	u6853
 10837  1714  3000               	movlw	0
 10838  1715  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10839  1716  1D03               	skipz
 10840  1717  2F1C               	goto	u6853
 10841  1718  3000               	movlw	0
 10842  1719  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10843  171A  1D03               	skipz
 10844  171B  2F1C               	goto	u6853
 10845  171C                     u6853:	
 10846  171C  1803               	btfsc	3,0
 10847  171D  2FE9               	goto	l6430
 10848                           
 10849                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10850  171E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10851  171F  3E01               	addlw	1
 10852  1720  397F               	andlw	127
 10853  1721  1D03               	btfss	3,2
 10854  1722  2FB9               	goto	l6418
 10855                           
 10856                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*buffer)=I2C
      +                          _Master_Read(0);
 10857  1723  3000               	movlw	0
 10858  1724  00A3               	movwf	I2C_Master_Read@a
 10859  1725  00A4               	movwf	I2C_Master_Read@a+1
 10860  1726  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 10861  172B  0823               	movf	?_I2C_Master_Read,w
 10862  172C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10863  172D  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10864  172E  0084               	movwf	4
 10865  172F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10866  1730  1383               	bcf	3,7	;select IRP bank0
 10867  1731  0080               	movwf	0
 10868                           
 10869                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10870  1732  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 10871                           
 10872                           ;EEPROM_24C1025.c: 231:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10873  1737  300D               	movlw	13
 10874  1738  1283               	bcf	3,5	;RP0=0, select bank0
 10875  1739  1303               	bcf	3,6	;RP1=0, select bank0
 10876  173A  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10877  173B  30FB               	movlw	251
 10878  173C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10879  173D                     u7797:	
 10880  173D  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10881  173E  2F3D               	goto	u7797
 10882  173F  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10883  1740  2F3D               	goto	u7797
 10884                           
 10885                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10886  1741  3001               	movlw	1
 10887  1742  1283               	bcf	3,5	;RP0=0, select bank0
 10888  1743  1303               	bcf	3,6	;RP1=0, select bank0
 10889  1744  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10890  1745  3000               	movlw	0
 10891  1746  1803               	skipnc
 10892  1747  3001               	movlw	1
 10893  1748  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10894  1749  3000               	movlw	0
 10895  174A  1803               	skipnc
 10896  174B  3001               	movlw	1
 10897  174C  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10898  174D  3000               	movlw	0
 10899  174E  1803               	skipnc
 10900  174F  3001               	movlw	1
 10901  1750  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10902                           
 10903                           ;EEPROM_24C1025.c: 233:              buffer++;
 10904  1751  3001               	movlw	1
 10905  1752  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10906  1753  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10907  1754  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10908                           
 10909                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10910  1755  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10911  1756  1D03               	btfss	3,2
 10912  1757  2F66               	goto	l6392
 10913  1758  3001               	movlw	1
 10914  1759  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10915  175A  1D03               	skipz
 10916  175B  2F64               	goto	u6873
 10917  175C  3000               	movlw	0
 10918  175D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10919  175E  1D03               	skipz
 10920  175F  2F64               	goto	u6873
 10921  1760  3000               	movlw	0
 10922  1761  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10923  1762  1D03               	skipz
 10924  1763  2F64               	goto	u6873
 10925  1764                     u6873:	
 10926  1764  1C03               	btfss	3,0
 10927  1765  2F6B               	goto	l6394
 10928  1766                     l6392:	
 10929  1766  3008               	movlw	8
 10930  1767  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10931  1768  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10932  1769  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10933  176A  2F6C               	goto	l6396
 10934  176B                     l6394:	
 10935  176B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10936  176C                     l6396:	
 10937                           
 10938                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10939  176C  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10940  176D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10941  176E  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10942  176F  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10943                           
 10944                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10945  1770  1003               	clrc
 10946  1771  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10947                           
 10948                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10949  1772  30A0               	movlw	160
 10950  1773  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10951  1774  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10952  1775  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10953                           
 10954                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10955  1776  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10956                           
 10957                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10958  1777  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10959  1778  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10960  1779  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10961  177A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10962                           
 10963                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10964  177B  160A  158A  22AC  160A  118A  	fcall	_I2C_Master_Start
 10965                           
 10966                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10967  1780  1283               	bcf	3,5	;RP0=0, select bank0
 10968  1781  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10969  1782  39FE               	andlw	254
 10970  1783  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10971  1784  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10972  1785  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10973  1786  00A3               	movwf	I2C_Master_Write@d
 10974  1787  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10975  1788  00A4               	movwf	I2C_Master_Write@d+1
 10976  1789  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10977                           
 10978                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10979  178E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10980  178F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10981  1790  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10982  1791  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10983  1792  00A3               	movwf	I2C_Master_Write@d
 10984  1793  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10985  1794  00A4               	movwf	I2C_Master_Write@d+1
 10986  1795  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10987                           
 10988                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10989  179A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10990  179B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10991  179C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10992  179D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10993  179E  00A3               	movwf	I2C_Master_Write@d
 10994  179F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10995  17A0  00A4               	movwf	I2C_Master_Write@d+1
 10996  17A1  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 10997                           
 10998                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10999  17A6  160A  158A  2291  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11000                           
 11001                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 11002  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11003  17AC  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11004  17AD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11005  17AE  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 11006  17AF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 11007  17B0  00A3               	movwf	I2C_Master_Write@d
 11008  17B1  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11009  17B2  00A4               	movwf	I2C_Master_Write@d+1
 11010  17B3  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 11011                           
 11012                           ;EEPROM_24C1025.c: 247:              }
 11013  17B8  2FE0               	goto	l6428
 11014  17B9                     l6418:	
 11015                           
 11016                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*buffer)=I2C
      +                          _Master_Read(1);
 11017  17B9  3001               	movlw	1
 11018  17BA  00A3               	movwf	I2C_Master_Read@a
 11019  17BB  3000               	movlw	0
 11020  17BC  00A4               	movwf	I2C_Master_Read@a+1
 11021  17BD  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 11022  17C2  0823               	movf	?_I2C_Master_Read,w
 11023  17C3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11024  17C4  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 11025  17C5  0084               	movwf	4
 11026  17C6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 11027  17C7  1383               	bcf	3,7	;select IRP bank0
 11028  17C8  0080               	movwf	0
 11029                           
 11030                           ;EEPROM_24C1025.c: 251:              if((*buffer)==0)break;
 11031  17C9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 11032  17CA  0084               	movwf	4
 11033  17CB  0800               	movf	0,w
 11034  17CC  1903               	btfsc	3,2
 11035  17CD  2FE9               	goto	l6430
 11036                           
 11037                           ;EEPROM_24C1025.c: 252:              buffer++;
 11038  17CE  3001               	movlw	1
 11039  17CF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11040  17D0  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 11041  17D1  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 11042                           
 11043                           ;EEPROM_24C1025.c: 253:              mem_add++;
 11044  17D2  3001               	movlw	1
 11045  17D3  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11046  17D4  3000               	movlw	0
 11047  17D5  1803               	skipnc
 11048  17D6  3001               	movlw	1
 11049  17D7  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11050  17D8  3000               	movlw	0
 11051  17D9  1803               	skipnc
 11052  17DA  3001               	movlw	1
 11053  17DB  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11054  17DC  3000               	movlw	0
 11055  17DD  1803               	skipnc
 11056  17DE  3001               	movlw	1
 11057  17DF  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11058  17E0                     l6428:	
 11059                           
 11060                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 11061  17E0  3001               	movlw	1
 11062  17E1  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11063  17E2  30FF               	movlw	-1
 11064  17E3  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11065  17E4  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11066  17E5  3040               	movlw	64
 11067  17E6  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 11068  17E7  1C03               	skipc
 11069  17E8  2F0D               	goto	l6374
 11070  17E9                     l6430:	
 11071                           
 11072                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 11073  17E9  3000               	movlw	0
 11074  17EA  00A3               	movwf	I2C_Master_Read@a
 11075  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11076  17EC  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 11077                           
 11078                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 11079  17F1  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 11080                           
 11081                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11082  17F6  30B9               	movlw	185
 11083  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11084  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11085  17F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11086  17FA                     u7807:	
 11087  17FA  2FFB               	nop2
 11088  17FB  2FFC               	nop2
 11089  17FC  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11090  17FD  2FFA               	goto	u7807
 11091  17FE  2FFF               	nop2
 11092  17FF  0008               	return
 11093  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11094                           
 11095                           	psect	text45
 11096  1C83                     __ptext45:	
 11097 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11098 ;; Defined at:
 11099 ;;		line 287 in file "EEPROM_24C1025.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;  chip_add        1    wreg     unsigned char 
 11102 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;  chip_add        1   29[BANK0 ] unsigned char 
 11105 ;;  data            2   30[BANK0 ] unsigned char [2]
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  2   23[BANK0 ] unsigned int 
 11108 ;; Registers used:
 11109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11110 ;; Tracked objects:
 11111 ;;		On entry : 300/300
 11112 ;;		On exit  : 300/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11115 ;;      Params:         0       4       0       0       0
 11116 ;;      Locals:         0       3       0       0       0
 11117 ;;      Temps:          0       2       0       0       0
 11118 ;;      Totals:         0       9       0       0       0
 11119 ;;Total ram usage:        9 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:    4
 11122 ;; This function calls:
 11123 ;;		_EEPROM_24C1025_Read_Buffer
 11124 ;; This function is called by:
 11125 ;;		_Decodify_Command
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           
 11130                           ;psect for function _EEPROM_24C1025_Read_Int
 11131  1C83                     _EEPROM_24C1025_Read_Int:	
 11132                           
 11133                           ;incstack = 0
 11134                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11135                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11136  1C83  1283               	bcf	3,5	;RP0=0, select bank0
 11137  1C84  1303               	bcf	3,6	;RP1=0, select bank0
 11138  1C85  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11139                           
 11140                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11141  1C86  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11142  1C87  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11143  1C88  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11144  1C89  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11145  1C8A  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11146  1C8B  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11147  1C8C  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11148  1C8D  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11149  1C8E  3002               	movlw	2
 11150  1C8F  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11151  1C90  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11152  1C91  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11153  1C92  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11154  1C93  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11155  1C94  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 11156  1C95  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11157  1C96  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11158  1C97  120A  158A  2029   	fcall	_EEPROM_24C1025_Read_Buffer
 11159                           
 11160                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 11161  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
 11162  1C9B  1303               	bcf	3,6	;RP1=0, select bank0
 11163  1C9C  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 11164  1C9D  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11165  1C9E  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 11166  1C9F  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11167  1CA0  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11168  1CA1  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 11169  1CA2  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11170  1CA3  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 11171  1CA4  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 11172  1CA5  3000               	movlw	0
 11173  1CA6  1803               	skipnc
 11174  1CA7  3001               	movlw	1
 11175  1CA8  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11176  1CA9  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 11177  1CAA  0008               	return
 11178  1CAB                     __end_of_EEPROM_24C1025_Read_Int:	
 11179                           
 11180                           	psect	text46
 11181  1AFE                     __ptext46:	
 11182 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11183 ;; Defined at:
 11184 ;;		line 273 in file "EEPROM_24C1025.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  chip_add        1    wreg     unsigned char 
 11187 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11190 ;;  data            1   29[BANK0 ] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  1    wreg      unsigned char 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 300/300
 11197 ;;		On exit  : 300/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11200 ;;      Params:         0       4       0       0       0
 11201 ;;      Locals:         0       2       0       0       0
 11202 ;;      Temps:          0       1       0       0       0
 11203 ;;      Totals:         0       7       0       0       0
 11204 ;;Total ram usage:        7 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:    4
 11207 ;; This function calls:
 11208 ;;		_EEPROM_24C1025_Read_Buffer
 11209 ;; This function is called by:
 11210 ;;		_Decodify_Command
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           
 11215                           ;psect for function _EEPROM_24C1025_Read_Byte
 11216  1AFE                     _EEPROM_24C1025_Read_Byte:	
 11217                           
 11218                           ;incstack = 0
 11219                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11220                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11221  1AFE  1283               	bcf	3,5	;RP0=0, select bank0
 11222  1AFF  1303               	bcf	3,6	;RP1=0, select bank0
 11223  1B00  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11224                           
 11225                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11226  1B01  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11227  1B02  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11228  1B03  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11229  1B04  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11230  1B05  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11231  1B06  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11232  1B07  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11233  1B08  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11234  1B09  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11235  1B0A  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11236  1B0B  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11237  1B0C  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 11238  1B0D  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 11239  1B0E  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11240  1B0F  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11241  1B10  120A  158A  2029   	fcall	_EEPROM_24C1025_Read_Buffer
 11242                           
 11243                           ;EEPROM_24C1025.c: 276:     return data;
 11244  1B13  1283               	bcf	3,5	;RP0=0, select bank0
 11245  1B14  1303               	bcf	3,6	;RP1=0, select bank0
 11246  1B15  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11247  1B16  0008               	return
 11248  1B17                     __end_of_EEPROM_24C1025_Read_Byte:	
 11249                           
 11250                           	psect	text47
 11251  0829                     __ptext47:	
 11252 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11253 ;; Defined at:
 11254 ;;		line 77 in file "EEPROM_24C1025.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;  chip_add        1    wreg     unsigned char 
 11257 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11258 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11259 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11260 ;;		 -> buffer(33), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11263 ;;  cnt             1   19[BANK0 ] unsigned char 
 11264 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11265 ;;  range           1   21[BANK0 ] unsigned char 
 11266 ;;  cnt             1    0        unsigned char 
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/300
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11276 ;;      Params:         0       6       0       0       0
 11277 ;;      Locals:         0       5       0       0       0
 11278 ;;      Temps:          0       2       0       0       0
 11279 ;;      Totals:         0      13       0       0       0
 11280 ;;Total ram usage:       13 bytes
 11281 ;; Hardware stack levels used:    1
 11282 ;; Hardware stack levels required when called:    3
 11283 ;; This function calls:
 11284 ;;		_I2C_Master_Read
 11285 ;;		_I2C_Master_RepeatedStart
 11286 ;;		_I2C_Master_Start
 11287 ;;		_I2C_Master_Stop
 11288 ;;		_I2C_Master_Write
 11289 ;;		_my_delay_ms_WDT
 11290 ;; This function is called by:
 11291 ;;		_EEPROM_24C1025_Read_Byte
 11292 ;;		_EEPROM_24C1025_Read_Int
 11293 ;;		_Decodify_Command
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           
 11298                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11299  0829                     _EEPROM_24C1025_Read_Buffer:	
 11300                           
 11301                           ;incstack = 0
 11302                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11303                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11304  0829  1283               	bcf	3,5	;RP0=0, select bank0
 11305  082A  1303               	bcf	3,6	;RP1=0, select bank0
 11306  082B  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11307                           
 11308                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11309  082C  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11310                           
 11311                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11312  082D  3014               	movlw	20
 11313  082E  1683               	bsf	3,5	;RP0=1, select bank1
 11314  082F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11315  0830  3000               	movlw	0
 11316  0831  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11317                           
 11318                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11319  0832  1283               	bcf	3,5	;RP0=0, select bank0
 11320  0833  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11321  0834  1D03               	btfss	3,2
 11322  0835  0008               	return
 11323  0836  3002               	movlw	2
 11324  0837  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11325  0838  1D03               	skipz
 11326  0839  2842               	goto	u5483
 11327  083A  3000               	movlw	0
 11328  083B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11329  083C  1D03               	skipz
 11330  083D  2842               	goto	u5483
 11331  083E  3000               	movlw	0
 11332  083F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11333  0840  1D03               	skipz
 11334  0841  2842               	goto	u5483
 11335  0842                     u5483:	
 11336  0842  1803               	btfsc	3,0
 11337  0843  0008               	return
 11338                           
 11339                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11340  0844  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11341  0845  1D03               	btfss	3,2
 11342  0846  2855               	goto	l5632
 11343  0847  3001               	movlw	1
 11344  0848  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11345  0849  1D03               	skipz
 11346  084A  2853               	goto	u5493
 11347  084B  3000               	movlw	0
 11348  084C  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11349  084D  1D03               	skipz
 11350  084E  2853               	goto	u5493
 11351  084F  3000               	movlw	0
 11352  0850  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11353  0851  1D03               	skipz
 11354  0852  2853               	goto	u5493
 11355  0853                     u5493:	
 11356  0853  1C03               	btfss	3,0
 11357  0854  285A               	goto	l5634
 11358  0855                     l5632:	
 11359  0855  3008               	movlw	8
 11360  0856  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11361  0857  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11362  0858  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11363  0859  285B               	goto	l5636
 11364  085A                     l5634:	
 11365  085A  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11366  085B                     l5636:	
 11367                           
 11368                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11369  085B  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11370  085C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11371  085D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11372  085E  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11373                           
 11374                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11375  085F  1003               	clrc
 11376  0860  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11377                           
 11378                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11379  0861  30A0               	movlw	160
 11380  0862  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11381  0863  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11382  0864  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11383                           
 11384                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11385  0865  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11386                           
 11387                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11388  0866  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11389  0867  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11390  0868  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11391  0869  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11392                           
 11393                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11394  086A  160A  158A  22AC  120A  158A  	fcall	_I2C_Master_Start
 11395                           
 11396                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11397  086F  1283               	bcf	3,5	;RP0=0, select bank0
 11398  0870  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11399  0871  39FE               	andlw	254
 11400  0872  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11401  0873  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11402  0874  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11403  0875  00A3               	movwf	I2C_Master_Write@d
 11404  0876  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11405  0877  00A4               	movwf	I2C_Master_Write@d+1
 11406  0878  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11407                           
 11408                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11409  087D  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11410  087E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11411  087F  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11412  0880  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11413  0881  00A3               	movwf	I2C_Master_Write@d
 11414  0882  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11415  0883  00A4               	movwf	I2C_Master_Write@d+1
 11416  0884  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11417                           
 11418                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11419  0889  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11420  088A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11421  088B  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11422  088C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11423  088D  00A3               	movwf	I2C_Master_Write@d
 11424  088E  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11425  088F  00A4               	movwf	I2C_Master_Write@d+1
 11426  0890  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11427                           
 11428                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11429  0895  160A  158A  2291  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11430                           
 11431                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11432  089A  1283               	bcf	3,5	;RP0=0, select bank0
 11433  089B  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11434  089C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11435  089D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11436  089E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11437  089F  00A3               	movwf	I2C_Master_Write@d
 11438  08A0  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11439  08A1  00A4               	movwf	I2C_Master_Write@d+1
 11440  08A2  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11441                           
 11442                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11443  08A7  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 11444  08A8                     l5710:	
 11445  08A8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11446  08A9  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 11447  08AA  1803               	btfsc	3,0
 11448  08AB  2984               	goto	l5712
 11449  08AC  0064               	clrwdt	;# 
 11450                           
 11451                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11452  08AD  1283               	bcf	3,5	;RP0=0, select bank0
 11453  08AE  1303               	bcf	3,6	;RP1=0, select bank0
 11454  08AF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11455  08B0  1D03               	btfss	3,2
 11456  08B1  2984               	goto	l5712
 11457  08B2  3002               	movlw	2
 11458  08B3  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11459  08B4  1D03               	skipz
 11460  08B5  28BE               	goto	u5503
 11461  08B6  3000               	movlw	0
 11462  08B7  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11463  08B8  1D03               	skipz
 11464  08B9  28BE               	goto	u5503
 11465  08BA  3000               	movlw	0
 11466  08BB  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11467  08BC  1D03               	skipz
 11468  08BD  28BE               	goto	u5503
 11469  08BE                     u5503:	
 11470  08BE  1803               	btfsc	3,0
 11471  08BF  2984               	goto	l5712
 11472                           
 11473                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11474  08C0  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11475  08C1  3E01               	addlw	1
 11476  08C2  397F               	andlw	127
 11477  08C3  1D03               	btfss	3,2
 11478  08C4  295D               	goto	l5702
 11479                           
 11480                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11481  08C5  3000               	movlw	0
 11482  08C6  00A3               	movwf	I2C_Master_Read@a
 11483  08C7  00A4               	movwf	I2C_Master_Read@a+1
 11484  08C8  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11485  08CD  0823               	movf	?_I2C_Master_Read,w
 11486  08CE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11487  08CF  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11488  08D0  0084               	movwf	4
 11489  08D1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11490  08D2  1383               	bcf	3,7	;select IRP bank0
 11491  08D3  0080               	movwf	0
 11492                           
 11493                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11494  08D4  160A  158A  225F  120A  158A  	fcall	_I2C_Master_Stop
 11495                           
 11496                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11497  08D9  3000               	movlw	0
 11498  08DA  1283               	bcf	3,5	;RP0=0, select bank0
 11499  08DB  00A3               	movwf	my_delay_ms_WDT@time+3
 11500  08DC  3000               	movlw	0
 11501  08DD  00A2               	movwf	my_delay_ms_WDT@time+2
 11502  08DE  3000               	movlw	0
 11503  08DF  00A1               	movwf	my_delay_ms_WDT@time+1
 11504  08E0  3005               	movlw	5
 11505  08E1  00A0               	movwf	my_delay_ms_WDT@time
 11506  08E2  160A  158A  2602  120A  158A  	fcall	_my_delay_ms_WDT
 11507                           
 11508                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11509  08E7  3001               	movlw	1
 11510  08E8  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11511  08E9  3000               	movlw	0
 11512  08EA  1803               	skipnc
 11513  08EB  3001               	movlw	1
 11514  08EC  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11515  08ED  3000               	movlw	0
 11516  08EE  1803               	skipnc
 11517  08EF  3001               	movlw	1
 11518  08F0  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11519  08F1  3000               	movlw	0
 11520  08F2  1803               	skipnc
 11521  08F3  3001               	movlw	1
 11522  08F4  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11523                           
 11524                           ;EEPROM_24C1025.c: 115:              data++;
 11525  08F5  3001               	movlw	1
 11526  08F6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11527  08F7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11528  08F8  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11529                           
 11530                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11531  08F9  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11532  08FA  1D03               	btfss	3,2
 11533  08FB  290A               	goto	l5676
 11534  08FC  3001               	movlw	1
 11535  08FD  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11536  08FE  1D03               	skipz
 11537  08FF  2908               	goto	u5523
 11538  0900  3000               	movlw	0
 11539  0901  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11540  0902  1D03               	skipz
 11541  0903  2908               	goto	u5523
 11542  0904  3000               	movlw	0
 11543  0905  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11544  0906  1D03               	skipz
 11545  0907  2908               	goto	u5523
 11546  0908                     u5523:	
 11547  0908  1C03               	btfss	3,0
 11548  0909  290F               	goto	l5678
 11549  090A                     l5676:	
 11550  090A  3008               	movlw	8
 11551  090B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11552  090C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11553  090D  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11554  090E  2910               	goto	l5680
 11555  090F                     l5678:	
 11556  090F  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11557  0910                     l5680:	
 11558                           
 11559                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11560  0910  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11561  0911  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11562  0912  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11563  0913  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11564                           
 11565                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11566  0914  1003               	clrc
 11567  0915  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11568                           
 11569                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11570  0916  30A0               	movlw	160
 11571  0917  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11572  0918  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11573  0919  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11574                           
 11575                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11576  091A  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11577                           
 11578                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11579  091B  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11580  091C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11581  091D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11582  091E  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11583                           
 11584                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11585  091F  160A  158A  22AC  120A  158A  	fcall	_I2C_Master_Start
 11586                           
 11587                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11588  0924  1283               	bcf	3,5	;RP0=0, select bank0
 11589  0925  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11590  0926  39FE               	andlw	254
 11591  0927  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11592  0928  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11593  0929  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11594  092A  00A3               	movwf	I2C_Master_Write@d
 11595  092B  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11596  092C  00A4               	movwf	I2C_Master_Write@d+1
 11597  092D  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11598                           
 11599                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11600  0932  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11601  0933  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11602  0934  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11603  0935  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11604  0936  00A3               	movwf	I2C_Master_Write@d
 11605  0937  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11606  0938  00A4               	movwf	I2C_Master_Write@d+1
 11607  0939  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11608                           
 11609                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11610  093E  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11611  093F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11612  0940  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11613  0941  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11614  0942  00A3               	movwf	I2C_Master_Write@d
 11615  0943  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11616  0944  00A4               	movwf	I2C_Master_Write@d+1
 11617  0945  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11618                           
 11619                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11620  094A  160A  158A  2291  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11621                           
 11622                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11623  094F  1283               	bcf	3,5	;RP0=0, select bank0
 11624  0950  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11625  0951  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11626  0952  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11627  0953  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11628  0954  00A3               	movwf	I2C_Master_Write@d
 11629  0955  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11630  0956  00A4               	movwf	I2C_Master_Write@d+1
 11631  0957  160A  158A  2286  120A  158A  	fcall	_I2C_Master_Write
 11632                           
 11633                           ;EEPROM_24C1025.c: 129:              }
 11634  095C  297F               	goto	l5708
 11635  095D                     l5702:	
 11636                           
 11637                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11638  095D  3001               	movlw	1
 11639  095E  00A3               	movwf	I2C_Master_Read@a
 11640  095F  3000               	movlw	0
 11641  0960  00A4               	movwf	I2C_Master_Read@a+1
 11642  0961  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11643  0966  0823               	movf	?_I2C_Master_Read,w
 11644  0967  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11645  0968  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11646  0969  0084               	movwf	4
 11647  096A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11648  096B  1383               	bcf	3,7	;select IRP bank0
 11649  096C  0080               	movwf	0
 11650                           
 11651                           ;EEPROM_24C1025.c: 133:              data++;
 11652  096D  3001               	movlw	1
 11653  096E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11654  096F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11655  0970  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11656                           
 11657                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11658  0971  3001               	movlw	1
 11659  0972  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11660  0973  3000               	movlw	0
 11661  0974  1803               	skipnc
 11662  0975  3001               	movlw	1
 11663  0976  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11664  0977  3000               	movlw	0
 11665  0978  1803               	skipnc
 11666  0979  3001               	movlw	1
 11667  097A  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11668  097B  3000               	movlw	0
 11669  097C  1803               	skipnc
 11670  097D  3001               	movlw	1
 11671  097E  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11672  097F                     l5708:	
 11673                           
 11674                           ;EEPROM_24C1025.c: 136:         }
 11675  097F  3001               	movlw	1
 11676  0980  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11677  0981  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11678  0982  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 11679  0983  28A8               	goto	l5710
 11680  0984                     l5712:	
 11681                           
 11682                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11683  0984  3000               	movlw	0
 11684  0985  00A3               	movwf	I2C_Master_Read@a
 11685  0986  00A4               	movwf	I2C_Master_Read@a+1
 11686  0987  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11687                           
 11688                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11689  098C  160A  158A  225F  120A  158A  	fcall	_I2C_Master_Stop
 11690                           
 11691                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11692  0991  30B9               	movlw	185
 11693  0992  1283               	bcf	3,5	;RP0=0, select bank0
 11694  0993  1303               	bcf	3,6	;RP1=0, select bank0
 11695  0994  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11696  0995                     u7817:	
 11697  0995  2996               	nop2
 11698  0996  2997               	nop2
 11699  0997  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11700  0998  2995               	goto	u7817
 11701  0999  299A               	nop2
 11702  099A  0008               	return
 11703  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11704                           
 11705                           	psect	text48
 11706  1A91                     __ptext48:	
 11707 ;; *************** function _I2C_Master_RepeatedStart *****************
 11708 ;; Defined at:
 11709 ;;		line 62 in file "I2C.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, status,2, status,0, pclath, cstack
 11718 ;; Tracked objects:
 11719 ;;		On entry : 300/0
 11720 ;;		On exit  : 200/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11723 ;;      Params:         0       0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0
 11726 ;;      Totals:         0       0       0       0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    2
 11730 ;; This function calls:
 11731 ;;		_I2C_Master_Wait
 11732 ;; This function is called by:
 11733 ;;		_EEPROM_24C1025_Read_Buffer
 11734 ;;		_EEPROM_24C1025_Read_Str
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _I2C_Master_RepeatedStart
 11740  1A91                     _I2C_Master_RepeatedStart:	
 11741                           
 11742                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11746  1A91  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 11747  1A96  3A00               	xorlw	0
 11748  1A97  1903               	skipnz
 11749  1A98  0008               	return
 11750                           
 11751                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11752  1A99  1683               	bsf	3,5	;RP0=1, select bank1
 11753  1A9A  1491               	bsf	17,1	;volatile
 11754  1A9B  0008               	return
 11755  1A9C                     __end_of_I2C_Master_RepeatedStart:	
 11756                           
 11757                           	psect	text49
 11758  1D96                     __ptext49:	
 11759 ;; *************** function _I2C_Master_Read *****************
 11760 ;; Defined at:
 11761 ;;		line 87 in file "I2C.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  a               2    3[BANK0 ] unsigned short 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  temp            2    7[BANK0 ] unsigned short 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  2    3[BANK0 ] unsigned short 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, status,0, pclath, cstack
 11770 ;; Tracked objects:
 11771 ;;		On entry : 300/0
 11772 ;;		On exit  : 300/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11775 ;;      Params:         0       2       0       0       0
 11776 ;;      Locals:         0       2       0       0       0
 11777 ;;      Temps:          0       2       0       0       0
 11778 ;;      Totals:         0       6       0       0       0
 11779 ;;Total ram usage:        6 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    2
 11782 ;; This function calls:
 11783 ;;		_I2C_Master_Wait
 11784 ;; This function is called by:
 11785 ;;		_EEPROM_24C1025_Read_Buffer
 11786 ;;		_EEPROM_24C1025_Read_Str
 11787 ;; This function uses a non-reentrant model
 11788 ;;
 11789                           
 11790                           
 11791                           ;psect for function _I2C_Master_Read
 11792  1D96                     _I2C_Master_Read:	
 11793                           
 11794                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11795                           
 11796                           ;incstack = 0
 11797                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11798  1D96  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 11799  1D9B  3A00               	xorlw	0
 11800  1D9C  1683               	bsf	3,5	;RP0=1, select bank1
 11801  1D9D  1D03               	btfss	3,2
 11802  1D9E  1591               	bsf	17,3	;volatile
 11803                           
 11804                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11805  1D9F  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 11806  1DA4  3A00               	xorlw	0
 11807  1DA5  1903               	skipnz
 11808  1DA6  2DAE               	goto	l5582
 11809  1DA7  0813               	movf	19,w	;volatile
 11810  1DA8  00A5               	movwf	??_I2C_Master_Read
 11811  1DA9  01A6               	clrf	??_I2C_Master_Read+1
 11812  1DAA  0825               	movf	??_I2C_Master_Read,w
 11813  1DAB  00A7               	movwf	I2C_Master_Read@temp
 11814  1DAC  0826               	movf	??_I2C_Master_Read+1,w
 11815  1DAD  00A8               	movwf	I2C_Master_Read@temp+1
 11816  1DAE                     l5582:	
 11817                           
 11818                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11819  1DAE  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 11820  1DB3  3A00               	xorlw	0
 11821  1DB4  1903               	skipnz
 11822  1DB5  2DC8               	goto	l5594
 11823                           
 11824                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11825  1DB6  0823               	movf	I2C_Master_Read@a,w
 11826  1DB7  0424               	iorwf	I2C_Master_Read@a+1,w
 11827  1DB8  1D03               	btfss	3,2
 11828  1DB9  2DBE               	goto	u5420
 11829  1DBA  1683               	bsf	3,5	;RP0=1, select bank1
 11830  1DBB  1303               	bcf	3,6	;RP1=0, select bank1
 11831  1DBC  1691               	bsf	17,5	;volatile
 11832  1DBD  2DC1               	goto	l5586
 11833  1DBE                     u5420:	
 11834  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
 11835  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
 11836  1DC0  1291               	bcf	17,5	;volatile
 11837  1DC1                     l5586:	
 11838                           
 11839                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11840  1DC1  1611               	bsf	17,4	;volatile
 11841                           
 11842                           ;I2C.c: 96:     return temp;
 11843  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
 11844  1DC3  0828               	movf	I2C_Master_Read@temp+1,w
 11845  1DC4  00A4               	movwf	?_I2C_Master_Read+1
 11846  1DC5  0827               	movf	I2C_Master_Read@temp,w
 11847  1DC6  00A3               	movwf	?_I2C_Master_Read
 11848  1DC7  0008               	return
 11849  1DC8                     l5594:	
 11850                           
 11851                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11852  1DC8  01A3               	clrf	?_I2C_Master_Read
 11853  1DC9  01A4               	clrf	?_I2C_Master_Read+1
 11854  1DCA  0008               	return
 11855  1DCB                     __end_of_I2C_Master_Read:	
 11856                           
 11857                           	psect	text50
 11858  07BC                     __ptext50:	
 11859 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11860 ;; Defined at:
 11861 ;;		line 294 in file "EEPROM_24C1025.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  chip_add        1    wreg     unsigned char 
 11864 ;;  value           2   56[BANK0 ] unsigned int 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  chip_add        1   58[BANK0 ] unsigned char 
 11867 ;;  mem_add         4   59[BANK0 ] unsigned long 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : 300/300
 11874 ;;		On exit  : 300/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11877 ;;      Params:         0       2       0       0       0
 11878 ;;      Locals:         0       5       0       0       0
 11879 ;;      Temps:          0       0       0       0       0
 11880 ;;      Totals:         0       7       0       0       0
 11881 ;;Total ram usage:        7 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    5
 11884 ;; This function calls:
 11885 ;;		_EEPROM_24C1025_Write_Int
 11886 ;; This function is called by:
 11887 ;;		_Decodify_Command
 11888 ;; This function uses a non-reentrant model
 11889 ;;
 11890                           
 11891                           
 11892                           ;psect for function _EEPROM_24C1025_Fill_All
 11893  07BC                     _EEPROM_24C1025_Fill_All:	
 11894                           
 11895                           ;incstack = 0
 11896                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11897                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11898  07BC  1283               	bcf	3,5	;RP0=0, select bank0
 11899  07BD  1303               	bcf	3,6	;RP1=0, select bank0
 11900  07BE  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11901                           
 11902                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11903  07BF  3000               	movlw	0
 11904  07C0  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11905  07C1  3000               	movlw	0
 11906  07C2  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11907  07C3  3000               	movlw	0
 11908  07C4  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11909  07C5  3000               	movlw	0
 11910  07C6  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11911  07C7                     l6454:	
 11912                           
 11913                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11914  07C7  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11915  07C8  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11916  07C9  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11917  07CA  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11918  07CB  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11919  07CC  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11920  07CD  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11921  07CE  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11922  07CF  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11923  07D0  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11924  07D1  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 11925  07D2  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11926  07D3  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11927  07D4  160A  158A  23DD  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
 11928  07D9  0064               	clrwdt	;# 
 11929                           
 11930                           ;EEPROM_24C1025.c: 300:         }
 11931  07DA  3002               	movlw	2
 11932  07DB  1283               	bcf	3,5	;RP0=0, select bank0
 11933  07DC  1303               	bcf	3,6	;RP1=0, select bank0
 11934  07DD  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11935  07DE  3000               	movlw	0
 11936  07DF  1803               	skipnc
 11937  07E0  3001               	movlw	1
 11938  07E1  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11939  07E2  3000               	movlw	0
 11940  07E3  1803               	skipnc
 11941  07E4  3001               	movlw	1
 11942  07E5  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11943  07E6  3000               	movlw	0
 11944  07E7  1803               	skipnc
 11945  07E8  3001               	movlw	1
 11946  07E9  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11947  07EA  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11948  07EB  1D03               	btfss	3,2
 11949  07EC  0008               	return
 11950  07ED  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11951  07EE  1D03               	btfss	3,2
 11952  07EF  0008               	return
 11953  07F0  3004               	movlw	4
 11954  07F1  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11955  07F2  1D03               	skipz
 11956  07F3  2FF8               	goto	u6903
 11957  07F4  3000               	movlw	0
 11958  07F5  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11959  07F6  1D03               	skipz
 11960  07F7  2FF8               	goto	u6903
 11961  07F8                     u6903:	
 11962  07F8  1803               	btfsc	3,0
 11963  07F9  0008               	return
 11964  07FA  2FC7               	goto	l6454
 11965  07FB                     __end_of_EEPROM_24C1025_Fill_All:	
 11966                           
 11967                           	psect	text51
 11968  1BDD                     __ptext51:	
 11969 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11970 ;; Defined at:
 11971 ;;		line 279 in file "EEPROM_24C1025.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;  chip_add        1    wreg     unsigned char 
 11974 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11975 ;;  data            2   50[BANK0 ] int 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  chip_add        1   53[BANK0 ] unsigned char 
 11978 ;;  local           2   54[BANK0 ] unsigned char [2]
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/300
 11985 ;;		On exit  : 300/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11988 ;;      Params:         0       6       0       0       0
 11989 ;;      Locals:         0       3       0       0       0
 11990 ;;      Temps:          0       1       0       0       0
 11991 ;;      Totals:         0      10       0       0       0
 11992 ;;Total ram usage:       10 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    4
 11995 ;; This function calls:
 11996 ;;		_EEPROM_24C1025_Write_Buffer
 11997 ;; This function is called by:
 11998 ;;		_EEPROM_24C1025_Fill_All
 11999 ;;		_Decodify_Command
 12000 ;;		_Save_Log
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _EEPROM_24C1025_Write_Int
 12006  1BDD                     _EEPROM_24C1025_Write_Int:	
 12007                           
 12008                           ;incstack = 0
 12009                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12010                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12011  1BDD  1283               	bcf	3,5	;RP0=0, select bank0
 12012  1BDE  1303               	bcf	3,6	;RP1=0, select bank0
 12013  1BDF  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12014                           
 12015                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 12016  1BE0  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12017  1BE1  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12018  1BE2  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12019  1BE3  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12020                           
 12021                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 12022  1BE4  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12023  1BE5  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12024  1BE6  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12025  1BE7  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12026                           
 12027                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12028  1BE8  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12029  1BE9  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12030  1BEA  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12031  1BEB  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12032  1BEC  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12033  1BED  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12034  1BEE  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12035  1BEF  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12036  1BF0  3002               	movlw	2
 12037  1BF1  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12038  1BF2  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12039  1BF3  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12040  1BF4  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12041  1BF5  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12042  1BF6  3000               	movlw	0
 12043  1BF7  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12044  1BF8  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12045  1BF9  160A  118A  252A   	fcall	_EEPROM_24C1025_Write_Buffer
 12046  1BFC  0008               	return
 12047  1BFD                     __end_of_EEPROM_24C1025_Write_Int:	
 12048                           
 12049                           	psect	text52
 12050  152A                     __ptext52:	
 12051 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12052 ;; Defined at:
 12053 ;;		line 15 in file "EEPROM_24C1025.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;  chip_add        1    wreg     unsigned char 
 12056 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12057 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12058 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12059 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12062 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12063 ;;  range           1   21[BANK0 ] unsigned char 
 12064 ;;  count           1   19[BANK0 ] unsigned char 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/300
 12071 ;;		On exit  : 300/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12074 ;;      Params:         0       7       0       0       0
 12075 ;;      Locals:         0       4       0       0       0
 12076 ;;      Temps:          0       2       0       0       0
 12077 ;;      Totals:         0      13       0       0       0
 12078 ;;Total ram usage:       13 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    3
 12081 ;; This function calls:
 12082 ;;		_I2C_Master_Start
 12083 ;;		_I2C_Master_Stop
 12084 ;;		_I2C_Master_Write
 12085 ;;		_my_delay_ms_WDT
 12086 ;; This function is called by:
 12087 ;;		_EEPROM_24C1025_Write_Byte
 12088 ;;		_EEPROM_24C1025_Write_Int
 12089 ;;		_Decodify_Command
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           
 12094                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12095  152A                     _EEPROM_24C1025_Write_Buffer:	
 12096                           
 12097                           ;incstack = 0
 12098                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12099                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12100  152A  1283               	bcf	3,5	;RP0=0, select bank0
 12101  152B  1303               	bcf	3,6	;RP1=0, select bank0
 12102  152C  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12103                           
 12104                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12105  152D  3014               	movlw	20
 12106  152E  1683               	bsf	3,5	;RP0=1, select bank1
 12107  152F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12108  1530  3000               	movlw	0
 12109  1531  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12110                           
 12111                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12112  1532  1283               	bcf	3,5	;RP0=0, select bank0
 12113  1533  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12114  1534  1D03               	btfss	3,2
 12115  1535  0008               	return
 12116  1536  3002               	movlw	2
 12117  1537  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12118  1538  1D03               	skipz
 12119  1539  2D42               	goto	u5323
 12120  153A  3000               	movlw	0
 12121  153B  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12122  153C  1D03               	skipz
 12123  153D  2D42               	goto	u5323
 12124  153E  3000               	movlw	0
 12125  153F  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12126  1540  1D03               	skipz
 12127  1541  2D42               	goto	u5323
 12128  1542                     u5323:	
 12129  1542  1803               	btfsc	3,0
 12130  1543  0008               	return
 12131                           
 12132                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12133  1544  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12134  1545  1D03               	btfss	3,2
 12135  1546  2D55               	goto	l5496
 12136  1547  3001               	movlw	1
 12137  1548  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12138  1549  1D03               	skipz
 12139  154A  2D53               	goto	u5333
 12140  154B  3000               	movlw	0
 12141  154C  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12142  154D  1D03               	skipz
 12143  154E  2D53               	goto	u5333
 12144  154F  3000               	movlw	0
 12145  1550  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12146  1551  1D03               	skipz
 12147  1552  2D53               	goto	u5333
 12148  1553                     u5333:	
 12149  1553  1C03               	btfss	3,0
 12150  1554  2D5A               	goto	l5498
 12151  1555                     l5496:	
 12152  1555  3008               	movlw	8
 12153  1556  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12154  1557  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12155  1558  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12156  1559  2D5B               	goto	l5500
 12157  155A                     l5498:	
 12158  155A  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12159  155B                     l5500:	
 12160                           
 12161                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12162  155B  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12163  155C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12164  155D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12165  155E  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12166                           
 12167                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12168  155F  1003               	clrc
 12169  1560  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12170                           
 12171                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12172  1561  30A0               	movlw	160
 12173  1562  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12174  1563  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12175  1564  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12176                           
 12177                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12178  1565  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12179  1566  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12180  1567  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12181  1568  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12182                           
 12183                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12184  1569  160A  158A  22AC  160A  118A  	fcall	_I2C_Master_Start
 12185                           
 12186                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12187  156E  1283               	bcf	3,5	;RP0=0, select bank0
 12188  156F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12189  1570  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12190  1571  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12191  1572  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12192  1573  00A3               	movwf	I2C_Master_Write@d
 12193  1574  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12194  1575  00A4               	movwf	I2C_Master_Write@d+1
 12195  1576  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12196                           
 12197                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12198  157B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12199  157C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12200  157D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12201  157E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12202  157F  00A3               	movwf	I2C_Master_Write@d
 12203  1580  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12204  1581  00A4               	movwf	I2C_Master_Write@d+1
 12205  1582  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12206                           
 12207                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12208  1587  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12209  1588  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12210  1589  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12211  158A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12212  158B  00A3               	movwf	I2C_Master_Write@d
 12213  158C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12214  158D  00A4               	movwf	I2C_Master_Write@d+1
 12215  158E  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12216                           
 12217                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12218  1593  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12219  1594                     l5562:	
 12220  1594  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12221  1595  3EFF               	addlw	255
 12222  1596  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12223  1597  30FF               	movlw	255
 12224  1598  1803               	skipnc
 12225  1599  3000               	movlw	0
 12226  159A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12227  159B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12228  159C  3A80               	xorlw	128
 12229  159D  3C80               	sublw	128
 12230  159E  1D03               	skipz
 12231  159F  2DA2               	goto	u5375
 12232  15A0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12233  15A1  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12234  15A2                     u5375:	
 12235  15A2  1803               	btfsc	3,0
 12236  15A3  2E6F               	goto	l5564
 12237  15A4  0064               	clrwdt	;# 
 12238                           
 12239                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12240  15A5  1283               	bcf	3,5	;RP0=0, select bank0
 12241  15A6  1303               	bcf	3,6	;RP1=0, select bank0
 12242  15A7  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12243  15A8  1D03               	btfss	3,2
 12244  15A9  0008               	return
 12245  15AA  3002               	movlw	2
 12246  15AB  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12247  15AC  1D03               	skipz
 12248  15AD  2DB6               	goto	u5343
 12249  15AE  3000               	movlw	0
 12250  15AF  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12251  15B0  1D03               	skipz
 12252  15B1  2DB6               	goto	u5343
 12253  15B2  3000               	movlw	0
 12254  15B3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12255  15B4  1D03               	skipz
 12256  15B5  2DB6               	goto	u5343
 12257  15B6                     u5343:	
 12258  15B6  1803               	btfsc	3,0
 12259  15B7  0008               	return
 12260                           
 12261                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12262  15B8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12263  15B9  3E01               	addlw	1
 12264  15BA  397F               	andlw	127
 12265  15BB  1D03               	btfss	3,2
 12266  15BC  2E45               	goto	l5554
 12267                           
 12268                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12269  15BD  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12270  15BE  0084               	movwf	4
 12271  15BF  1783               	bsf	3,7
 12272  15C0  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12273  15C1  1383               	bcf	3,7
 12274  15C2  0800               	movf	0,w
 12275  15C3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12276  15C4  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12277  15C5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12278  15C6  00A3               	movwf	I2C_Master_Write@d
 12279  15C7  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12280  15C8  00A4               	movwf	I2C_Master_Write@d+1
 12281  15C9  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12282                           
 12283                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12284  15CE  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 12285                           
 12286                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12287  15D3  3000               	movlw	0
 12288  15D4  1283               	bcf	3,5	;RP0=0, select bank0
 12289  15D5  00A3               	movwf	my_delay_ms_WDT@time+3
 12290  15D6  3000               	movlw	0
 12291  15D7  00A2               	movwf	my_delay_ms_WDT@time+2
 12292  15D8  3000               	movlw	0
 12293  15D9  00A1               	movwf	my_delay_ms_WDT@time+1
 12294  15DA  3005               	movlw	5
 12295  15DB  00A0               	movwf	my_delay_ms_WDT@time
 12296  15DC  160A  158A  2602  160A  118A  	fcall	_my_delay_ms_WDT
 12297                           
 12298                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12299  15E1  3001               	movlw	1
 12300  15E2  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12301  15E3  3000               	movlw	0
 12302  15E4  1803               	skipnc
 12303  15E5  3001               	movlw	1
 12304  15E6  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12305  15E7  3000               	movlw	0
 12306  15E8  1803               	skipnc
 12307  15E9  3001               	movlw	1
 12308  15EA  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12309  15EB  3000               	movlw	0
 12310  15EC  1803               	skipnc
 12311  15ED  3001               	movlw	1
 12312  15EE  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12313                           
 12314                           ;EEPROM_24C1025.c: 49:             data++;
 12315  15EF  3001               	movlw	1
 12316  15F0  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12317  15F1  1803               	skipnc
 12318  15F2  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12319  15F3  3000               	movlw	0
 12320  15F4  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12321                           
 12322                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12323  15F5  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12324  15F6  1D03               	btfss	3,2
 12325  15F7  2E06               	goto	l5534
 12326  15F8  3001               	movlw	1
 12327  15F9  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12328  15FA  1D03               	skipz
 12329  15FB  2E04               	goto	u5363
 12330  15FC  3000               	movlw	0
 12331  15FD  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12332  15FE  1D03               	skipz
 12333  15FF  2E04               	goto	u5363
 12334  1600  3000               	movlw	0
 12335  1601  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12336  1602  1D03               	skipz
 12337  1603  2E04               	goto	u5363
 12338  1604                     u5363:	
 12339  1604  1C03               	btfss	3,0
 12340  1605  2E0B               	goto	l5536
 12341  1606                     l5534:	
 12342  1606  3008               	movlw	8
 12343  1607  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12344  1608  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12345  1609  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12346  160A  2E0C               	goto	l5538
 12347  160B                     l5536:	
 12348  160B  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12349  160C                     l5538:	
 12350                           
 12351                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12352  160C  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12353  160D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12354  160E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12355  160F  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12356                           
 12357                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12358  1610  1003               	clrc
 12359  1611  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12360                           
 12361                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12362  1612  30A0               	movlw	160
 12363  1613  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12364  1614  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12365  1615  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12366                           
 12367                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12368  1616  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12369  1617  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12370  1618  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12371  1619  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12372                           
 12373                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12374  161A  160A  158A  22AC  160A  118A  	fcall	_I2C_Master_Start
 12375                           
 12376                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12377  161F  1283               	bcf	3,5	;RP0=0, select bank0
 12378  1620  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12379  1621  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12380  1622  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12381  1623  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12382  1624  00A3               	movwf	I2C_Master_Write@d
 12383  1625  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12384  1626  00A4               	movwf	I2C_Master_Write@d+1
 12385  1627  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12386                           
 12387                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12388  162C  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12389  162D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12390  162E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12391  162F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12392  1630  00A3               	movwf	I2C_Master_Write@d
 12393  1631  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12394  1632  00A4               	movwf	I2C_Master_Write@d+1
 12395  1633  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12396                           
 12397                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12398  1638  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12399  1639  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12400  163A  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12401  163B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12402  163C  00A3               	movwf	I2C_Master_Write@d
 12403  163D  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12404  163E  00A4               	movwf	I2C_Master_Write@d+1
 12405  163F  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12406                           
 12407                           ;EEPROM_24C1025.c: 60:             }
 12408  1644  2E6A               	goto	l5560
 12409  1645                     l5554:	
 12410                           
 12411                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12412  1645  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12413  1646  0084               	movwf	4
 12414  1647  1783               	bsf	3,7
 12415  1648  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12416  1649  1383               	bcf	3,7
 12417  164A  0800               	movf	0,w
 12418  164B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12419  164C  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12420  164D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12421  164E  00A3               	movwf	I2C_Master_Write@d
 12422  164F  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12423  1650  00A4               	movwf	I2C_Master_Write@d+1
 12424  1651  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12425                           
 12426                           ;EEPROM_24C1025.c: 64:             data++;
 12427  1656  3001               	movlw	1
 12428  1657  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12429  1658  1803               	skipnc
 12430  1659  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12431  165A  3000               	movlw	0
 12432  165B  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12433                           
 12434                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12435  165C  3001               	movlw	1
 12436  165D  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12437  165E  3000               	movlw	0
 12438  165F  1803               	skipnc
 12439  1660  3001               	movlw	1
 12440  1661  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12441  1662  3000               	movlw	0
 12442  1663  1803               	skipnc
 12443  1664  3001               	movlw	1
 12444  1665  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12445  1666  3000               	movlw	0
 12446  1667  1803               	skipnc
 12447  1668  3001               	movlw	1
 12448  1669  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12449  166A                     l5560:	
 12450                           
 12451                           ;EEPROM_24C1025.c: 67:      }
 12452  166A  3001               	movlw	1
 12453  166B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12454  166C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12455  166D  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12456  166E  2D94               	goto	l5562
 12457  166F                     l5564:	
 12458                           
 12459                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12460  166F  1283               	bcf	3,5	;RP0=0, select bank0
 12461  1670  1303               	bcf	3,6	;RP1=0, select bank0
 12462  1671  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12463  1672  0084               	movwf	4
 12464  1673  1783               	bsf	3,7
 12465  1674  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12466  1675  1383               	bcf	3,7
 12467  1676  0800               	movf	0,w
 12468  1677  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12469  1678  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12470  1679  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12471  167A  00A3               	movwf	I2C_Master_Write@d
 12472  167B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12473  167C  00A4               	movwf	I2C_Master_Write@d+1
 12474  167D  160A  158A  2286  160A  118A  	fcall	_I2C_Master_Write
 12475                           
 12476                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12477  1682  160A  158A  225F  160A  118A  	fcall	_I2C_Master_Stop
 12478                           
 12479                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12480  1687  3000               	movlw	0
 12481  1688  1283               	bcf	3,5	;RP0=0, select bank0
 12482  1689  00A3               	movwf	my_delay_ms_WDT@time+3
 12483  168A  3000               	movlw	0
 12484  168B  00A2               	movwf	my_delay_ms_WDT@time+2
 12485  168C  3000               	movlw	0
 12486  168D  00A1               	movwf	my_delay_ms_WDT@time+1
 12487  168E  3005               	movlw	5
 12488  168F  00A0               	movwf	my_delay_ms_WDT@time
 12489  1690  160A  158A  2602   	fcall	_my_delay_ms_WDT
 12490  1693  0008               	return
 12491  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12492                           
 12493                           	psect	text53
 12494  1E02                     __ptext53:	
 12495 ;; *************** function _my_delay_ms_WDT *****************
 12496 ;; Defined at:
 12497 ;;		line 13 in file "my_delay.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;  time            4    0[BANK0 ] long 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;  i               4    6[BANK0 ] long 
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  1    wreg      void 
 12504 ;; Registers used:
 12505 ;;		wreg, btemp+1
 12506 ;; Tracked objects:
 12507 ;;		On entry : 300/0
 12508 ;;		On exit  : 300/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12511 ;;      Params:         0       4       0       0       0
 12512 ;;      Locals:         0       4       0       0       0
 12513 ;;      Temps:          0       2       0       0       0
 12514 ;;      Totals:         0      10       0       0       0
 12515 ;;Total ram usage:       10 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    1
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		_EEPROM_24C1025_Write_Buffer
 12522 ;;		_EEPROM_24C1025_Read_Buffer
 12523 ;;		_EEPROM_24C1025_Write_Str
 12524 ;;		_main
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           
 12529                           ;psect for function _my_delay_ms_WDT
 12530  1E02                     _my_delay_ms_WDT:	
 12531                           
 12532                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12533                           
 12534                           ;incstack = 0
 12535                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12536  1E02  3000               	movlw	0
 12537  1E03  00A9               	movwf	my_delay_ms_WDT@i+3
 12538  1E04  3000               	movlw	0
 12539  1E05  00A8               	movwf	my_delay_ms_WDT@i+2
 12540  1E06  3000               	movlw	0
 12541  1E07  00A7               	movwf	my_delay_ms_WDT@i+1
 12542  1E08  3000               	movlw	0
 12543  1E09  00A6               	movwf	my_delay_ms_WDT@i
 12544  1E0A                     l5478:	
 12545  1E0A  0829               	movf	my_delay_ms_WDT@i+3,w
 12546  1E0B  3A80               	xorlw	128
 12547  1E0C  00FF               	movwf	127
 12548  1E0D  0823               	movf	my_delay_ms_WDT@time+3,w
 12549  1E0E  3A80               	xorlw	128
 12550  1E0F  027F               	subwf	127,w
 12551  1E10  1D03               	skipz
 12552  1E11  2E1C               	goto	u5303
 12553  1E12  0822               	movf	my_delay_ms_WDT@time+2,w
 12554  1E13  0228               	subwf	my_delay_ms_WDT@i+2,w
 12555  1E14  1D03               	skipz
 12556  1E15  2E1C               	goto	u5303
 12557  1E16  0821               	movf	my_delay_ms_WDT@time+1,w
 12558  1E17  0227               	subwf	my_delay_ms_WDT@i+1,w
 12559  1E18  1D03               	skipz
 12560  1E19  2E1C               	goto	u5303
 12561  1E1A  0820               	movf	my_delay_ms_WDT@time,w
 12562  1E1B  0226               	subwf	my_delay_ms_WDT@i,w
 12563  1E1C                     u5303:	
 12564  1E1C  1803               	btfsc	3,0
 12565  1E1D  0008               	return
 12566  1E1E  0064               	clrwdt	;# 
 12567                           
 12568                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12569  1E1F  3003               	movlw	3
 12570  1E20  1283               	bcf	3,5	;RP0=0, select bank0
 12571  1E21  1303               	bcf	3,6	;RP1=0, select bank0
 12572  1E22  00A5               	movwf	??_my_delay_ms_WDT+1
 12573  1E23  3097               	movlw	151
 12574  1E24  00A4               	movwf	??_my_delay_ms_WDT
 12575  1E25                     u7827:	
 12576  1E25  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12577  1E26  2E25               	goto	u7827
 12578  1E27  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12579  1E28  2E25               	goto	u7827
 12580                           
 12581                           ;my_delay.c: 19:             }
 12582  1E29  3001               	movlw	1
 12583  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
 12584  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
 12585  1E2C  07A6               	addwf	my_delay_ms_WDT@i,f
 12586  1E2D  3000               	movlw	0
 12587  1E2E  1803               	skipnc
 12588  1E2F  3001               	movlw	1
 12589  1E30  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12590  1E31  3000               	movlw	0
 12591  1E32  1803               	skipnc
 12592  1E33  3001               	movlw	1
 12593  1E34  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12594  1E35  3000               	movlw	0
 12595  1E36  1803               	skipnc
 12596  1E37  3001               	movlw	1
 12597  1E38  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12598  1E39  2E0A               	goto	l5478
 12599  1E3A                     __end_of_my_delay_ms_WDT:	
 12600                           
 12601                           	psect	text54
 12602  1A86                     __ptext54:	
 12603 ;; *************** function _I2C_Master_Write *****************
 12604 ;; Defined at:
 12605 ;;		line 79 in file "I2C.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  d               2    3[BANK0 ] unsigned int 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      void 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0, pclath, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 300/0
 12616 ;;		On exit  : 300/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12619 ;;      Params:         0       2       0       0       0
 12620 ;;      Locals:         0       0       0       0       0
 12621 ;;      Temps:          0       0       0       0       0
 12622 ;;      Totals:         0       2       0       0       0
 12623 ;;Total ram usage:        2 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    2
 12626 ;; This function calls:
 12627 ;;		_I2C_Master_Wait
 12628 ;; This function is called by:
 12629 ;;		_EEPROM_24C1025_Write_Buffer
 12630 ;;		_EEPROM_24C1025_Read_Buffer
 12631 ;;		_EEPROM_24C1025_Write_Str
 12632 ;;		_EEPROM_24C1025_Read_Str
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           
 12637                           ;psect for function _I2C_Master_Write
 12638  1A86                     _I2C_Master_Write:	
 12639                           
 12640                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12641                           
 12642                           ;incstack = 0
 12643                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12644  1A86  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 12645  1A8B  3A00               	xorlw	0
 12646  1A8C  1903               	skipnz
 12647  1A8D  0008               	return
 12648                           
 12649                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12650  1A8E  0823               	movf	I2C_Master_Write@d,w
 12651  1A8F  0093               	movwf	19	;volatile
 12652  1A90  0008               	return
 12653  1A91                     __end_of_I2C_Master_Write:	
 12654                           
 12655                           	psect	text55
 12656  1A5F                     __ptext55:	
 12657 ;; *************** function _I2C_Master_Stop *****************
 12658 ;; Defined at:
 12659 ;;		line 70 in file "I2C.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;		None
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;		None
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  1    wreg      void 
 12666 ;; Registers used:
 12667 ;;		wreg, status,2, status,0, pclath, cstack
 12668 ;; Tracked objects:
 12669 ;;		On entry : 300/800
 12670 ;;		On exit  : 200/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12673 ;;      Params:         0       0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:    2
 12680 ;; This function calls:
 12681 ;;		_I2C_Master_Wait
 12682 ;; This function is called by:
 12683 ;;		_EEPROM_24C1025_Write_Buffer
 12684 ;;		_EEPROM_24C1025_Read_Buffer
 12685 ;;		_EEPROM_24C1025_Write_Str
 12686 ;;		_EEPROM_24C1025_Read_Str
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function _I2C_Master_Stop
 12692  1A5F                     _I2C_Master_Stop:	
 12693                           
 12694                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12695                           
 12696                           ;incstack = 0
 12697                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12698  1A5F  160A  158A  241D   	fcall	_I2C_Master_Wait
 12699  1A62  3A00               	xorlw	0
 12700                           
 12701                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12702  1A63  1683               	bsf	3,5	;RP0=1, select bank1
 12703  1A64  1D03               	btfss	3,2
 12704  1A65  1511               	bsf	17,2	;volatile
 12705                           
 12706                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12707                           
 12708                           ;I2C.c: 75:     }
 12709  1A66  178B               	bsf	11,7	;volatile
 12710  1A67  0008               	return
 12711  1A68                     __end_of_I2C_Master_Stop:	
 12712                           
 12713                           	psect	text56
 12714  1AAC                     __ptext56:	
 12715 ;; *************** function _I2C_Master_Start *****************
 12716 ;; Defined at:
 12717 ;;		line 52 in file "I2C.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;		None
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;		None
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg, status,2, status,0, pclath, cstack
 12726 ;; Tracked objects:
 12727 ;;		On entry : 300/0
 12728 ;;		On exit  : 200/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12731 ;;      Params:         0       0       0       0       0
 12732 ;;      Locals:         0       0       0       0       0
 12733 ;;      Temps:          0       0       0       0       0
 12734 ;;      Totals:         0       0       0       0       0
 12735 ;;Total ram usage:        0 bytes
 12736 ;; Hardware stack levels used:    1
 12737 ;; Hardware stack levels required when called:    2
 12738 ;; This function calls:
 12739 ;;		_I2C_Master_Wait
 12740 ;; This function is called by:
 12741 ;;		_EEPROM_24C1025_Write_Buffer
 12742 ;;		_EEPROM_24C1025_Read_Buffer
 12743 ;;		_EEPROM_24C1025_Write_Str
 12744 ;;		_EEPROM_24C1025_Read_Str
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           
 12749                           ;psect for function _I2C_Master_Start
 12750  1AAC                     _I2C_Master_Start:	
 12751                           
 12752                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12753                           
 12754                           ;incstack = 0
 12755                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12756  1AAC  138B               	bcf	11,7	;volatile
 12757                           
 12758                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12759  1AAD  3014               	movlw	20
 12760  1AAE  1683               	bsf	3,5	;RP0=1, select bank1
 12761  1AAF  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12762  1AB0  3000               	movlw	0
 12763  1AB1  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12764                           
 12765                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12766  1AB2  160A  158A  241D  160A  158A  	fcall	_I2C_Master_Wait
 12767  1AB7  3A00               	xorlw	0
 12768  1AB8  1903               	skipnz
 12769  1AB9  0008               	return
 12770                           
 12771                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12772  1ABA  1683               	bsf	3,5	;RP0=1, select bank1
 12773  1ABB  1411               	bsf	17,0	;volatile
 12774  1ABC  0008               	return
 12775  1ABD                     __end_of_I2C_Master_Start:	
 12776                           
 12777                           	psect	text57
 12778  1C1D                     __ptext57:	
 12779 ;; *************** function _I2C_Master_Wait *****************
 12780 ;; Defined at:
 12781 ;;		line 37 in file "I2C.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;		None
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  tempo           1    2[BANK0 ] unsigned char 
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  1    wreg      unsigned char 
 12788 ;; Registers used:
 12789 ;;		wreg, status,2, status,0
 12790 ;; Tracked objects:
 12791 ;;		On entry : 200/0
 12792 ;;		On exit  : 300/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12795 ;;      Params:         0       0       0       0       0
 12796 ;;      Locals:         0       1       0       0       0
 12797 ;;      Temps:          0       2       0       0       0
 12798 ;;      Totals:         0       3       0       0       0
 12799 ;;Total ram usage:        3 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:    1
 12802 ;; This function calls:
 12803 ;;		Nothing
 12804 ;; This function is called by:
 12805 ;;		_I2C_Master_Start
 12806 ;;		_I2C_Master_RepeatedStart
 12807 ;;		_I2C_Master_Stop
 12808 ;;		_I2C_Master_Write
 12809 ;;		_I2C_Master_Read
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _I2C_Master_Wait
 12815  1C1D                     _I2C_Master_Wait:	
 12816                           
 12817                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12818                           
 12819                           ;incstack = 0
 12820                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12821  1C1D  30C8               	movlw	200
 12822  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
 12823  1C1F  00A0               	movwf	??_I2C_Master_Wait
 12824  1C20  0820               	movf	??_I2C_Master_Wait,w
 12825  1C21  00A2               	movwf	I2C_Master_Wait@tempo
 12826                           
 12827                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12828  1C22  2C2F               	goto	l5450
 12829  1C23                     l5446:	
 12830                           
 12831                           ;I2C.c: 44:          tempo--;
 12832  1C23  3001               	movlw	1
 12833  1C24  02A2               	subwf	I2C_Master_Wait@tempo,f
 12834                           
 12835                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12836  1C25  3003               	movlw	3
 12837  1C26  1283               	bcf	3,5	;RP0=0, select bank0
 12838  1C27  1303               	bcf	3,6	;RP1=0, select bank0
 12839  1C28  00A1               	movwf	??_I2C_Master_Wait+1
 12840  1C29  3097               	movlw	151
 12841  1C2A  00A0               	movwf	??_I2C_Master_Wait
 12842  1C2B                     u7837:	
 12843  1C2B  0BA0               	decfsz	??_I2C_Master_Wait,f
 12844  1C2C  2C2B               	goto	u7837
 12845  1C2D  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12846  1C2E  2C2B               	goto	u7837
 12847  1C2F                     l5450:	
 12848                           
 12849                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12850  1C2F  1683               	bsf	3,5	;RP0=1, select bank1
 12851  1C30  1303               	bcf	3,6	;RP1=0, select bank1
 12852  1C31  1914               	btfsc	20,2	;volatile
 12853  1C32  2C37               	goto	l5444
 12854  1C33  0811               	movf	17,w	;volatile
 12855  1C34  391F               	andlw	31
 12856  1C35  1903               	btfsc	3,2
 12857  1C36  2C3B               	goto	l5454
 12858  1C37                     l5444:	
 12859                           
 12860                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12861  1C37  1283               	bcf	3,5	;RP0=0, select bank0
 12862  1C38  0822               	movf	I2C_Master_Wait@tempo,w
 12863  1C39  1D03               	btfss	3,2
 12864  1C3A  2C23               	goto	l5446
 12865  1C3B                     l5454:	
 12866                           
 12867                           ;I2C.c: 49:   return tempo ;
 12868  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 12869  1C3C  0822               	movf	I2C_Master_Wait@tempo,w
 12870  1C3D  0008               	return
 12871  1C3E                     __end_of_I2C_Master_Wait:	
 12872                           
 12873                           	psect	text58
 12874  1A7B                     __ptext58:	
 12875 ;; *************** function _ADC_init *****************
 12876 ;; Defined at:
 12877 ;;		line 10 in file "adc.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/100
 12888 ;;		On exit  : 300/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12891 ;;      Params:         0       0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0
 12893 ;;      Temps:          0       0       0       0       0
 12894 ;;      Totals:         0       0       0       0       0
 12895 ;;Total ram usage:        0 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    1
 12898 ;; This function calls:
 12899 ;;		Nothing
 12900 ;; This function is called by:
 12901 ;;		_main
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905                           
 12906                           ;psect for function _ADC_init
 12907  1A7B                     _ADC_init:	
 12908                           
 12909                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12910                           
 12911                           ;incstack = 0
 12912                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12913  1A7B  30C0               	movlw	192
 12914  1A7C  1283               	bcf	3,5	;RP0=0, select bank0
 12915  1A7D  1303               	bcf	3,6	;RP1=0, select bank0
 12916  1A7E  049F               	iorwf	31,f	;volatile
 12917                           
 12918                           ;adc.c: 12:      ADCON1=0b10000000;
 12919  1A7F  3080               	movlw	128
 12920  1A80  1683               	bsf	3,5	;RP0=1, select bank1
 12921  1A81  009F               	movwf	31	;volatile
 12922                           
 12923                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12924  1A82  179F               	bsf	31,7	;volatile
 12925                           
 12926                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12927  1A83  1283               	bcf	3,5	;RP0=0, select bank0
 12928  1A84  141F               	bsf	31,0	;volatile
 12929  1A85  0008               	return
 12930  1A86                     __end_of_ADC_init:	
 12931                           
 12932                           	psect	text59
 12933  1349                     __ptext59:	
 12934 ;; *************** function _isr *****************
 12935 ;; Defined at:
 12936 ;;		line 29 in file "isr.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;  tempo           2    6[COMMON] unsigned int 
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 300/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12950 ;;      Params:         0       0       0       0       0
 12951 ;;      Locals:         2       0       0       0       0
 12952 ;;      Temps:          6       0       0       0       0
 12953 ;;      Totals:         8       0       0       0       0
 12954 ;;Total ram usage:        8 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; This function calls:
 12957 ;;		Nothing
 12958 ;; This function is called by:
 12959 ;;		Interrupt level 1
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function _isr
 12965  1349                     _isr:	
 12966                           
 12967                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12968  1349  188B               	btfsc	11,1	;volatile
 12969                           
 12970                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12971  134A  108B               	bcf	11,1	;volatile
 12972                           
 12973                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12974                           
 12975                           ;isr.c: 37:       }
 12976  134B  1C0C               	btfss	12,0	;volatile
 12977  134C  2BC4               	goto	i1l5372
 12978                           
 12979                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12980  134D  30B1               	movlw	177
 12981  134E  008F               	movwf	15	;volatile
 12982                           
 12983                           ;isr.c: 42:                 TMR1L=0xF3;
 12984  134F  30F3               	movlw	243
 12985  1350  008E               	movwf	14	;volatile
 12986                           
 12987                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12988  1351  100C               	bcf	12,0	;volatile
 12989                           
 12990                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12991  1352  1683               	bsf	3,5	;RP0=1, select bank1
 12992  1353  1FBB               	btfss	_generic_status^(0+128),7
 12993  1354  2B57               	goto	i1l5328
 12994                           
 12995                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12996  1355  13BB               	bcf	_generic_status^(0+128),7
 12997  1356  0064               	clrwdt	;# 
 12998  1357                     i1l5328:	
 12999                           
 13000                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13001  1357  300A               	movlw	10
 13002  1358  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13003  1359  1803               	skipnc
 13004  135A  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13005  135B  3000               	movlw	0
 13006  135C  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13007                           
 13008                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13009  135D  3003               	movlw	3
 13010  135E  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13011  135F  30E8               	movlw	232
 13012  1360  1903               	skipnz
 13013  1361  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13014  1362  1C03               	skipc
 13015  1363  2B66               	goto	i1l5332
 13016                           
 13017                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13018  1364  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13019  1365  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13020  1366                     i1l5332:	
 13021                           
 13022                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13023  1366  3001               	movlw	1
 13024  1367  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13025  1368  30F4               	movlw	244
 13026  1369  1903               	skipnz
 13027  136A  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13028  136B  1803               	skipnc
 13029  136C  2B71               	goto	i1l629
 13030                           
 13031                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13032  136D  1283               	bcf	3,5	;RP0=0, select bank0
 13033  136E  1303               	bcf	3,6	;RP1=0, select bank0
 13034  136F  1786               	bsf	6,7	;volatile
 13035  1370  2B74               	goto	i1l5336
 13036  1371                     i1l629:	
 13037                           ;isr.c: 56:                 else
 13038                           
 13039                           
 13040                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13041  1371  1283               	bcf	3,5	;RP0=0, select bank0
 13042  1372  1303               	bcf	3,6	;RP1=0, select bank0
 13043  1373  1386               	bcf	6,7	;volatile
 13044  1374                     i1l5336:	
 13045                           
 13046                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13047  1374  1683               	bsf	3,5	;RP0=1, select bank1
 13048  1375  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13049  1376  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13050  1377  1903               	btfsc	3,2
 13051  1378  2B82               	goto	i1l631
 13052                           
 13053                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13054  1379  300A               	movlw	10
 13055  137A  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13056  137B  3000               	movlw	0
 13057  137C  1C03               	skipc
 13058  137D  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13059  137E  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13060                           
 13061                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13062  137F  1283               	bcf	3,5	;RP0=0, select bank0
 13063  1380  1706               	bsf	6,6	;volatile
 13064                           
 13065                           ;isr.c: 63:                    }
 13066  1381  2B84               	goto	i1l5342
 13067  1382                     i1l631:	
 13068                           ;isr.c: 64:                 else{
 13069                           
 13070                           
 13071                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13072  1382  1283               	bcf	3,5	;RP0=0, select bank0
 13073  1383  1306               	bcf	6,6	;volatile
 13074  1384                     i1l5342:	
 13075                           
 13076                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13077  1384  1683               	bsf	3,5	;RP0=1, select bank1
 13078  1385  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13079  1386  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13080  1387  1903               	btfsc	3,2
 13081  1388  2B92               	goto	i1l633
 13082                           
 13083                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13084  1389  300A               	movlw	10
 13085  138A  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13086  138B  3000               	movlw	0
 13087  138C  1C03               	skipc
 13088  138D  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13089  138E  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13090                           
 13091                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13092  138F  1283               	bcf	3,5	;RP0=0, select bank0
 13093  1390  1686               	bsf	6,5	;volatile
 13094                           
 13095                           ;isr.c: 71:                    }
 13096  1391  2B94               	goto	i1l5348
 13097  1392                     i1l633:	
 13098                           ;isr.c: 72:                 else{
 13099                           
 13100                           
 13101                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13102  1392  1283               	bcf	3,5	;RP0=0, select bank0
 13103  1393  1286               	bcf	6,5	;volatile
 13104  1394                     i1l5348:	
 13105                           
 13106                           ;isr.c: 77:                 tempodecorrido+=10;
 13107  1394  300A               	movlw	10
 13108  1395  1683               	bsf	3,5	;RP0=1, select bank1
 13109  1396  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 13110  1397  1803               	skipnc
 13111  1398  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13112  1399  3000               	movlw	0
 13113  139A  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13114                           
 13115                           ;isr.c: 78:                 milisegundo+=10;
 13116  139B  300A               	movlw	10
 13117  139C  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 13118  139D  1803               	skipnc
 13119  139E  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13120  139F  3000               	movlw	0
 13121  13A0  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13122                           
 13123                           ;isr.c: 79:                 if(milisegundo==1000){
 13124  13A1  30E8               	movlw	232
 13125  13A2  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 13126  13A3  3003               	movlw	3
 13127  13A4  1903               	skipnz
 13128  13A5  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13129  13A6  1D03               	btfss	3,2
 13130  13A7  2BC4               	goto	i1l5372
 13131                           
 13132                           ;isr.c: 80:                    milisegundo=0;
 13133  13A8  01B0               	clrf	_milisegundo^(0+128)	;volatile
 13134  13A9  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13135                           
 13136                           ;isr.c: 81:                    segundo++;
 13137  13AA  3001               	movlw	1
 13138  13AB  00F0               	movwf	??_isr
 13139  13AC  0870               	movf	??_isr,w
 13140  13AD  07FD               	addwf	_segundo,f	;volatile
 13141                           
 13142                           ;isr.c: 88:                    if(segundo==60){
 13143  13AE  303C               	movlw	60
 13144  13AF  067D               	xorwf	_segundo,w	;volatile
 13145  13B0  1D03               	btfss	3,2
 13146  13B1  2BC4               	goto	i1l5372
 13147                           
 13148                           ;isr.c: 89:                       segundo=0;
 13149  13B2  01FD               	clrf	_segundo	;volatile
 13150                           
 13151                           ;isr.c: 90:                       minuto++;
 13152  13B3  3001               	movlw	1
 13153  13B4  00F0               	movwf	??_isr
 13154  13B5  0870               	movf	??_isr,w
 13155  13B6  07FA               	addwf	_minuto,f	;volatile
 13156                           
 13157                           ;isr.c: 91:                       if(minuto==60){
 13158  13B7  303C               	movlw	60
 13159  13B8  067A               	xorwf	_minuto,w	;volatile
 13160  13B9  1D03               	btfss	3,2
 13161  13BA  2BC4               	goto	i1l5372
 13162                           
 13163                           ;isr.c: 92:                          minuto=0;
 13164  13BB  01FA               	clrf	_minuto	;volatile
 13165                           
 13166                           ;isr.c: 93:                          hora++;
 13167  13BC  3001               	movlw	1
 13168  13BD  00F0               	movwf	??_isr
 13169  13BE  0870               	movf	??_isr,w
 13170  13BF  07FC               	addwf	_hora,f	;volatile
 13171                           
 13172                           ;isr.c: 94:                          if(hora==24){
 13173  13C0  3018               	movlw	24
 13174  13C1  067C               	xorwf	_hora,w	;volatile
 13175  13C2  1903               	btfsc	3,2
 13176                           
 13177                           ;isr.c: 95:                             hora=0;
 13178  13C3  01FC               	clrf	_hora	;volatile
 13179  13C4                     i1l5372:	
 13180                           ;isr.c: 99:                 }
 13181                           
 13182                           
 13183                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13184  13C4  1283               	bcf	3,5	;RP0=0, select bank0
 13185  13C5  1E8C               	btfss	12,5	;volatile
 13186  13C6  2C2B               	goto	i1l647
 13187                           
 13188                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13189  13C7  1683               	bsf	3,5	;RP0=1, select bank1
 13190  13C8  143B               	bsf	_generic_status^(0+128),0
 13191                           
 13192                           ;isr.c: 109:         tempo=30;
 13193  13C9  301E               	movlw	30
 13194  13CA  00F6               	movwf	isr@tempo
 13195  13CB  3000               	movlw	0
 13196  13CC  00F7               	movwf	isr@tempo+1
 13197                           
 13198                           ;isr.c: 110:         count=0;
 13199  13CD  01AC               	clrf	_count^(0+128)	;volatile
 13200  13CE  01AD               	clrf	(_count+1)^(0+128)	;volatile
 13201                           
 13202                           ;isr.c: 111:         pointer=usart_buffer;
 13203  13CF  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13204  13D0  00F0               	movwf	??_isr
 13205  13D1  0870               	movf	??_isr,w
 13206  13D2  00B6               	movwf	_pointer^(0+128)
 13207  13D3                     i1l5394:	
 13208                           ;isr.c: 112:         while(tempo)
 13209                           
 13210                           
 13211                           ;isr.c: 112:         while(tempo)
 13212  13D3  0876               	movf	isr@tempo,w
 13213  13D4  0477               	iorwf	isr@tempo+1,w
 13214  13D5  1903               	btfsc	3,2
 13215  13D6  2C06               	goto	i1l5396
 13216                           
 13217                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13218  13D7  1283               	bcf	3,5	;RP0=0, select bank0
 13219  13D8  1303               	bcf	3,6	;RP1=0, select bank0
 13220  13D9  1E8C               	btfss	12,5	;volatile
 13221  13DA  2BFF               	goto	i1l5392
 13222                           
 13223                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13224  13DB  081A               	movf	26,w	;volatile
 13225  13DC  00F0               	movwf	??_isr
 13226  13DD  1683               	bsf	3,5	;RP0=1, select bank1
 13227  13DE  0836               	movf	_pointer^(0+128),w
 13228  13DF  0084               	movwf	4
 13229  13E0  0870               	movf	??_isr,w
 13230  13E1  1783               	bsf	3,7	;select IRP bank2
 13231  13E2  0080               	movwf	0
 13232                           
 13233                           ;isr.c: 118:                 if(count<32+20 -1)
 13234  13E3  082D               	movf	(_count+1)^(0+128),w	;volatile
 13235  13E4  3A80               	xorlw	128
 13236  13E5  00FF               	movwf	127
 13237  13E6  3080               	movlw	128
 13238  13E7  027F               	subwf	127,w
 13239  13E8  1D03               	skipz
 13240  13E9  2BEC               	goto	u521_25
 13241  13EA  3033               	movlw	51
 13242  13EB  022C               	subwf	_count^(0+128),w	;volatile
 13243  13EC                     u521_25:	
 13244  13EC  1803               	skipnc
 13245  13ED  2BFA               	goto	i1l5390
 13246                           
 13247                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13248  13EE  3001               	movlw	1
 13249  13EF  1683               	bsf	3,5	;RP0=1, select bank1
 13250  13F0  1303               	bcf	3,6	;RP1=0, select bank1
 13251  13F1  07AC               	addwf	_count^(0+128),f	;volatile
 13252  13F2  1803               	skipnc
 13253  13F3  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13254  13F4  3000               	movlw	0
 13255  13F5  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13256                           
 13257                           ;isr.c: 121:                    pointer++;
 13258  13F6  3001               	movlw	1
 13259  13F7  00F0               	movwf	??_isr
 13260  13F8  0870               	movf	??_isr,w
 13261  13F9  07B6               	addwf	_pointer^(0+128),f
 13262  13FA                     i1l5390:	
 13263                           
 13264                           ;isr.c: 123:                 tempo=30;
 13265  13FA  301E               	movlw	30
 13266  13FB  00F6               	movwf	isr@tempo
 13267  13FC  3000               	movlw	0
 13268  13FD  00F7               	movwf	isr@tempo+1
 13269                           
 13270                           ;isr.c: 124:             }
 13271  13FE  2BD3               	goto	i1l5394
 13272  13FF                     i1l5392:	
 13273                           
 13274                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13275  13FF  3001               	movlw	1
 13276  1400  02F6               	subwf	isr@tempo,f
 13277  1401  3000               	movlw	0
 13278  1402  1C03               	skipc
 13279  1403  03F7               	decf	isr@tempo+1,f
 13280  1404  02F7               	subwf	isr@tempo+1,f
 13281  1405  2BD3               	goto	i1l5394
 13282  1406                     i1l5396:	
 13283                           
 13284                           ;isr.c: 131:         (*pointer)=0;
 13285  1406  1683               	bsf	3,5	;RP0=1, select bank1
 13286  1407  1303               	bcf	3,6	;RP1=0, select bank1
 13287  1408  0836               	movf	_pointer^(0+128),w
 13288  1409  0084               	movwf	4
 13289  140A  1783               	bsf	3,7	;select IRP bank2
 13290  140B  0180               	clrf	0
 13291                           
 13292                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13293  140C  1283               	bcf	3,5	;RP0=0, select bank0
 13294  140D  1C98               	btfss	24,1	;volatile
 13295  140E  2C2B               	goto	i1l647
 13296                           
 13297                           ;isr.c: 134:            CREN=0;
 13298  140F  1218               	bcf	24,4	;volatile
 13299                           
 13300                           ;isr.c: 135:            CREN=1;
 13301  1410  1618               	bsf	24,4	;volatile
 13302                           
 13303                           ;isr.c: 136:            tempo=RCREG;
 13304  1411  081A               	movf	26,w	;volatile
 13305  1412  00F0               	movwf	??_isr
 13306  1413  01F1               	clrf	??_isr+1
 13307  1414  0870               	movf	??_isr,w
 13308  1415  00F6               	movwf	isr@tempo
 13309  1416  0871               	movf	??_isr+1,w
 13310  1417  00F7               	movwf	isr@tempo+1
 13311                           
 13312                           ;isr.c: 137:            tempo=RCREG;
 13313  1418  081A               	movf	26,w	;volatile
 13314  1419  00F0               	movwf	??_isr
 13315  141A  01F1               	clrf	??_isr+1
 13316  141B  0870               	movf	??_isr,w
 13317  141C  00F6               	movwf	isr@tempo
 13318  141D  0871               	movf	??_isr+1,w
 13319  141E  00F7               	movwf	isr@tempo+1
 13320                           
 13321                           ;isr.c: 138:            tempo=RCREG;
 13322  141F  081A               	movf	26,w	;volatile
 13323  1420  00F0               	movwf	??_isr
 13324  1421  01F1               	clrf	??_isr+1
 13325  1422  0870               	movf	??_isr,w
 13326  1423  00F6               	movwf	isr@tempo
 13327  1424  0871               	movf	??_isr+1,w
 13328  1425  00F7               	movwf	isr@tempo+1
 13329                           
 13330                           ;isr.c: 139:            usart_buffer[0]=0;
 13331  1426  1703               	bsf	3,6	;RP1=1, select bank2
 13332  1427  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13333                           
 13334                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13335  1428  1683               	bsf	3,5	;RP0=1, select bank1
 13336  1429  1303               	bcf	3,6	;RP1=0, select bank1
 13337  142A  14BB               	bsf	_generic_status^(0+128),1
 13338  142B                     i1l647:	
 13339  142B  0875               	movf	??_isr+5,w
 13340  142C  1283               	bcf	3,5	;RP0=0, select bank0
 13341  142D  00FF               	movwf	127
 13342  142E  0874               	movf	??_isr+4,w
 13343  142F  008A               	movwf	10
 13344  1430  0873               	movf	??_isr+3,w
 13345  1431  0084               	movwf	4
 13346  1432  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13347  1433  0083               	movwf	3
 13348  1434  0EFE               	swapf	126,f
 13349  1435  0E7E               	swapf	126,w
 13350  1436  0009               	retfie
 13351  1437                     __end_of_isr:	
 13352  007E                     btemp	set	126	;btemp
 13353  007E                     wtemp0	set	126
 13354                           
 13355                           	psect	intentry
 13356  0004                     __pintentry:	
 13357                           ;incstack = 0
 13358                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13359                           
 13360  0004                     interrupt_function:	
 13361  007E                     saved_w	set	btemp
 13362  0004  00FE               	movwf	btemp
 13363  0005  0E03               	swapf	3,w
 13364  0006  00F2               	movwf	??_isr+2
 13365  0007  0804               	movf	4,w
 13366  0008  00F3               	movwf	??_isr+3
 13367  0009  080A               	movf	10,w
 13368  000A  00F4               	movwf	??_isr+4
 13369  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13370  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13371  000D  087F               	movf	btemp+1,w
 13372  000E  00F5               	movwf	??_isr+5
 13373  000F  160A  118A  2B49   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     15      76
    BANK3            96      0      58
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  133761
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24105
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2136
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0  106761
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     5     4      1     293
                                              1 BANK0      5     4      1
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     521
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     521
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14418
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3387
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     210
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2741
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6518
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7498
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7106
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    8607
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    8573
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    8347
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1023
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8394
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    8143
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7216
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     608
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4979
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     117       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      3A       9       60.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     117      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 12:23:31 2020

                              _USART_putc 1A9C                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69           EEPROM_24C1025_Read_Buffer@range 0035  
        EEPROM_24C1025_Write_Str@chip_add 0031                                        fsr 0004  
                           _USART_put_int 1AE8                  Decodify_Command@tempchar 00E7  
                     __Umul8_16@word_mpld 0026                __end_of_RESISTOR_ROOM_TEMP 101C  
            PROCULUS_VP_Write_String@text 005C                                       l412 036F  
                                     l510 1E9F                                       l504 1E7A  
                                     l416 037D                                       l514 1C46  
                                     l418 03D3                                       l427 0F0F  
                                     l509 1E9E                                       l536 1C00  
                                     l480 1A72                                       l802 1B41  
                                     l785 1B69                                       l865 1AA4  
                            __CFG_CPD$OFF 0000        EEPROM_24C1025_Read_Buffer@chip_add 0034  
                Decodify_Command@sizedata 00E0                                       _isr 1349  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1EAE                          _ADC_Media_10bits 107D  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 002A                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1E72  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1E3A                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1024  
                                    l1331 09E7                                      l1156 122D  
                                    l1317 0D5E                                      l1309 0D46  
                                    l1422 1319                                      l1175 117E  
                                    l1423 1323                                      l1415 1303  
                                    l1159 1293                                      l1409 12C3  
                                    l1353 0B26                                      l1281 0C03  
                                    l1355 0B34                                      l1275 0B8C  
                                    l1383 06BC                                      l1279 0C25  
                                    l1456 1C72                                      l1296 0CDE  
                                    l6110 0414                                      l6006 0C66  
                                    l6200 068C                                      l6112 0416  
                                    l6032 0CFF                                      l6024 0CF0  
                                    l6016 0CD0                                      l6040 0D08  
                                    l6122 042C                                      l6114 041E  
                                    l7002 0086                                      l6050 0D13  
                                    l5500 155B                                      l6206 06A5  
                                    l7102 02BB                                      l7030 0142  
                                    l7022 0119                                      l7014 00E0  
                                    l6230 12D2                                      l6046 0D11  
                                    l6038 0D06                                      l7112 0302  
                                    l6224 12BB                                      l6072 0D5A  
                                    l5450 1C2F                                      l7130 0343  
                                    l7026 0128                                      l6234 12D6  
                                    l5444 1C37                                      l5612 1C6A  
                                    l6092 03EF                                      l7124 0327  
                                    l7108 02D8                                      l7052 01AB  
                                    l7036 015A                                      l6244 1317  
                                    l6236 12E8                                      l6068 0D56  
                                    l5446 1C23                                      l5454 1C3B  
                                    l5534 1606                                      l5702 095D  
                                    l5710 08A8                                      l6430 17E9  
                                    l6350 16BF                                      l6334 149A  
                                    l6270 145C                                      l6182 0642  
                                    l6174 060E                                      l6094 03F1  
                                    l7142 0373                                      l7118 0316  
                                    l7070 01E7                                      l7046 018B  
                                    l6246 1308                                      l5560 166A  
                                    l5536 160B                                      l5712 0984  
                                    l5632 0855                                      l6352 16C0  
                                    l6336 1510                                      l6328 14EE  
                                    l6272 1461                                      l6176 062B  
                                    l6096 03F9                                      l6520 1FDB  
                                    l7312 038C                                      l7136 0363  
                                    l7064 01C6                                      l7232 0751  
                                    l5538 160C                                      l5554 1645  
                                    l5562 1594                                      l5634 085A  
                                    l6418 17B9                                      l6274 1462  
                                    l5802 1E54                                      l6186 0644  
                                    l7082 023E                                      l7058 01B8  
                                    l7154 0381                                      l6258 1340  
                                    l5564 166F                                      l5708 097F  
                                    l5636 085B                                      l6428 17E0  
                                    l6348 16BA                                      l5804 1E6A  
                                    l5820 1FA3                                      l6196 0676  
                                    l7076 020E                                      l6612 1B46  
                                    l5478 1E0A                                      l6454 07C7  
                                    l5582 1DAE                                      l6374 170D  
                                    l5734 1E84                                      l6542 1CD8  
                                    l5726 1D67                                      l6526 1BA6  
                                    l5902 0B5A                                      l5496 1555  
                                    l5680 0910                                      l6392 1766  
                                    l5736 1E87                                      l6544 1CF5  
                                    l5824 113A                                      l5728 1D89  
                                    l7096 0296                                      l7088 025C  
                                    l6640 1F57                                      l6616 1B49  
                                    l6712 09B6                                      l5904 0B62  
                                    l5498 155A                                      l5586 1DC1  
                                    l5594 1DC8                                      l6394 176B  
                                    l5818 1F87                                      l6634 1F42  
                                    l5922 0B81                                      l7258 077B  
                                    l5676 090A                                      l6396 176C  
                                    l6468 1CB3                                      l6492 1D38  
                                    l5772 1B4F                                      l5844 116A  
                                    l5828 1143                                      l6804 0ABF  
                                    l6732 09DC                                      l6716 09B9  
                                    l5932 0B96                                      ?_isr 0070  
                                    l5678 090F                                      l5870 1EC4  
                                    l5774 1B5E                                      l5854 118D  
                                    l5846 117A                                      l6566 1B8A  
                                    l6654 10E3                                      l5782 1DD3  
                                    l6822 0B0C                                      l6718 09C1  
                                    l5926 0B84                                      l5880 1EE5  
                                    l6664 111B                                      l6656 10F3  
                                    l6808 0AC1                                      l6752 0A12  
                                    l6736 09DF                                      l6904 1F1C  
                                    l6594 1099                                      l6834 0B30  
                                    l6818 0AF3                                      l6746 0A06  
                                    l6682 126D                                      l5970 0C0E  
                                    l5962 0BD2                                      l5876 1EDA  
                                    l5868 1EB6                                      l6668 1128  
                                    l6772 0A61                                      l6780 0A3D  
                                    l5972 0C10                                      l5980 0C1F  
                                    l6782 0A85                                      l6678 1247  
                                    l6942 0DF2                                      l6934 0DDB  
                                    l6926 0D93                                      l6870 1EFB  
                                    l6960 0F35                                      l6778 0A80  
                                    l5898 0B57                                      l6890 1F15  
                                    l6796 0A8B                                      l5996 0C54  
                                    l5988 0C33                                      l6972 0FA3  
                                    l6798 0AA8                                      l5998 0C56  
                                    l6966 0F8D                                      l6992 005F  
                                    _BETA 1048                                      l6998 0078  
                                    STR_1 1050                              __CFG_WDTE$ON 0000  
                                    STR_2 1058                               _statuspower 00BA  
                         ADC_Max_10Bits@i 0032                                      _CREN 00C4  
                                    u5303 1E1C                                      u6105 0CF2  
                                    u5323 1542                                      u6051 0C91  
                                    u6043 0C78                                      u6035 0C5A  
                                    u5420 1DBE                                      u6060 0CA5  
                                    u6052 0C92                                      u5333 1553  
                                    u6205 0D30                                      u6061 0CA6  
                                    u6053 0C97                                      u6062 0CAB  
                                    u6054 0C98                                      u5343 15B6  
                                    u5503 08BE                                      u6063 0CAC  
                                    u6055 0C9D                                      u6056 0C9E  
                                    u7025 1F51                                      u5363 1604  
                                    u5523 0908                                      u5603 1DE5  
                                    u5445 1B6F                                      u7141 1258  
                                    u7142 1259                                      u5375 15A2  
                                    u7055 10E7                                      u7143 125E  
                                    u7144 125F                                      u5465 1C73  
                                    u6505 0612                                      u6425 052F  
                                    u7305 0A5A                                      u7161 127E  
                                    u7145 1264                                      u7162 127F  
                                    u7146 1265                                      u5483 0842  
                                    u5715 1183                                      u7075 10F5  
                                    u7315 0A6F                                      u7163 1284  
                                    u7164 1285                                      u5493 0853  
                                    u6605 067F                                      u6525 061D  
                                    u7085 110A                                      u7165 128A  
                                    u7166 128B                                      u5910 0BF2  
                                    u6615 0697                                      u5655 114C  
                                    u7095 111C                                      u5920 0BF3  
                                    u6465 05C3                                      u6705 1310  
                                    u7345 0A8F                                      u5905 0BE6  
                                    u5755 1EB9                                      u6395 04D6  
                                    u7435 0ADE                                      u7275 0A46  
                                    u5685 116B                                      u7445 0AFC  
                                    u7365 0A9A                                      u7285 0A4F  
                                    u6903 07F8                                      u5775 1EC5  
                                    u6495 05FA                                      u7455 0B17  
                                    u6833 16A7                                      u5785 1ED1  
                                    u6745 132B                                      u6665 12DF  
                                    u6843 16B8                                      u5795 1EDB  
                                    u6595 0661                                      u7475 1D0E  
                                    u5955 0C14                                      u6853 171C  
                                    u6773 1449                                      u6685 12FB  
                                    u7807 17FA                                      u6783 145A  
                                    u6935 1FE7                                      u7817 0995  
                                    u6873 1764                                      u6793 14B2  
                                    u7737 06D1                                      u7827 1E25  
                                    u7747 1DED                                      u7837 1C2B  
                                    u7757 1B77                                      u7767 1D5D  
                                    u7777 1EA8                                      u7787 1C57  
                                    u7797 173D                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0059                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 1A9C  
                                    _main 06C9                                      _hora 007C  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
       __size_of_EEPROM_24C1025_Write_Str 00F3                 ?_EEPROM_24C1025_Write_Int 004E  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 002A  
             __size_of_EEPROM_Read_String 0020                                      start 0012  
                        __end_of_ADC_init 1A86                          _BALANCE_RESISTOR 104C  
                         ___fldiv@new_exp 0053        EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                   ??_isr 0070                          ?_I2C_Master_Init 002E  
                        ?_I2C_Master_Read 0023                          ?_I2C_Master_Wait 0070  
                        ?_I2C_Master_Stop 0070                            ?_USART_put_int 004E  
                           ___fltol@sign1 004C                           __end_of___fladd 0D69  
                                   ?_main 0070                           __end_of___fldiv 0B3C  
                                   _EEADR 010D                           __end_of___flmul 06C9  
                         __end_of___flsub 1BDD                           __end_of___fltol 119C  
                                   _ANSEL 0188                           __end_of___lldiv 1131  
                                   _T1CON 0010                           __end_of___lwdiv 1EEA  
                                   i1l631 1382                                     i1l633 1392  
                                   i1l629 1371                                     i1l647 142B  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003D  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 1A7B  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00B9              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00AC                                     _errno 00A8  
           ??_EEPROM_24C1025_Write_Buffer 0031        __size_of_EEPROM_24C1025_Write_Byte 0016  
              ?_EEPROM_24C1025_Write_Byte 0037                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
         EEPROM_24C1025_Read_Byte@mem_add 0037                              __end_of_BETA 104C  
                 __size_of_PROCULUS_Delay 001D                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 001A                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 005A  
                             ?_USART_putc 0070                              __end_of_main 07BC  
                          Send_To_MB@size 0021                          _USART_put_buffer 1B84  
                __end_of_EEPROM_Read_Byte 1C60                                    ??_main 006A  
                        __end_of_Save_Log 1213                          _USART_put_string 1D63  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003C                         ?_I2C_Master_Start 0070  
               EEPROM_Write_Byte@last_GIE 0024                         ?_I2C_Master_Write 0023  
                      ??_I2C_Master_Start 0023                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0025                 PROCULUS_Show_Screen@vetor 0059  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0801                     EEPROM_Write_Integer@i 002C  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1AD2  
                                  i1l5332 1366                                    i1l5342 1384  
                                  i1l5336 1374                                    i1l5328 1357  
                                  i1l5348 1394                                    i1l5372 13C4  
                                  i1l5390 13FA                                    i1l5392 13FF  
                                  i1l5394 13D3                                    i1l5396 1406  
                                  u521_25 13EC         __end_of_EEPROM_24C1025_Write_Byte 1AE8  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 0058  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 005B  
                        __end_of___xxtofl 1349             EEPROM_24C1025_Read_Str@buffer 002D  
                      PROCULUS_VP_Write@i 0059                  __end_of_Decodify_Command 03D4  
                ?_EEPROM_24C1025_Read_Int 0037                  ?_EEPROM_24C1025_Read_Str 0029  
                _I2C_Master_RepeatedStart 1A91      __size_of_EEPROM_24C1025_Write_Buffer 016A  
                                  ___flge 1213                                 ??___fladd 0052  
                               ??___fldiv 0049                                 ??___flmul 0031  
                               ??___flsub 0066                                 ??___fltol 0047  
                         ??_USART_put_int 0050                                 ??___lldiv 0028  
                                  _header 00AE                         __end_of_ROOM_TEMP 1020  
                               ??___lwdiv 0024                                    _buffer 00BC  
                       _USART_to_Protocol 1FAB                           USART_putc@value 0020  
       EEPROM_24C1025_Read_Buffer@cnt_103 0033                                    _minuto 007A  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00E8                                    _strcpy 1BA1  
                                  _strlen 1B4B         EEPROM_24C1025_Read_Buffer@mem_add 002A  
        __end_of_EEPROM_24C1025_Read_Byte 1B17                        __size_of__Umul8_16 0023  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 003C  
                               ?_ADC_init 0070                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 0010  
                __end_of_MediaPlacaVaccum 1000                                ___flge@ff1 0020  
                              ___flge@ff2 0024                              ___xxtofl@arg 003D  
                            ___xxtofl@exp 003C                              ___xxtofl@val 0033  
                        __end_oflog@coeff 1048                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 0052                                ___fltol@f1 0043  
                            _Board_Number 00B8                  __end_of_ADC_Media_10bits 10D3  
                          __pcstackCOMMON 0070                  __size_of_PROCULUS_Buzzer 0022  
               __end_of_USART_to_Protocol 2000                     USART_put_string@vetor 0021  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0032  
                __size_of_my_delay_ms_WDT 0038                            _OPTION_REGbits 0081  
                 __size_of_ADC_Max_10Bits 003E                  __end_of_BALANCE_RESISTOR 1050  
        __end_of_EEPROM_24C1025_Write_Int 1BFD          __end_of_EEPROM_24C1025_Write_Str 152A  
                    USART_put_buffer@loop 0024                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1D00  
         __end_of_EEPROM_24C1025_Fill_All 07FB                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00A0  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1018           __end_of_EEPROM_24C1025_Read_Int 1CAB  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 1B67  
                       __end_of__Umul8_16 1C83                                __pmaintext 06C9  
                                 ?___flge 0020                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1CAB                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 1ABD  
                      ADC_Max_10Bits@Temp 002E                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020                         MediaPlacaVaccum@i 00E6  
                               ?___xxtofl 0033                                   _MAX_ADC 1020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00DD  
             EEPROM_24C1025_Read_Int@data 003E                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1B31                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 1AFE  
                              __stringtab 1000                       PROCULUS_VP_Write@vp 0052  
             ??_EEPROM_24C1025_Write_Byte 003C                  __end_of_USART_put_buffer 1BA1  
              __end_of_EEPROM_Read_String 1C1D                    __end_of_PROCULUS_Delay 1B84  
                __end_of_USART_put_string 1D96                      __size_of_my_delay_ms 0037  
                              ??_Save_Log 005C                           PROCULUS_Delay@i 0024  
                                 _Vaccum0 00A4                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 0033                                   _Tensao1 00A0  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 0055  
             PROCULUS_Buzzer@time_ms_x_10 0056                           __size_of___flge 0093  
                                 ___fladd 0B3C                                   ___fldiv 099B  
                EEPROM_Write_Integer@addr 002B                                   ___flmul 03D4  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1BBF  
                                 ___fltol 1131                                   ___lldiv 10D3  
                                 ___lwdiv 1EAE                             _Send_Reply_OK 1A68  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 1A71                          _statuspower_memo 007B  
                                 __ptext1 1EEA                                   __ptext2 0D69  
                                 __ptext3 1BBF                                   __ptext4 0B3C  
                                 __ptext5 1213                                   __ptext6 099B  
                                 __ptext7 1B31                                   __ptext8 107D  
                                 __ptext9 12A6                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00B7                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcpy 001E                           __size_of_strlen 001C  
                            __size_of_isr 00EE                                ??___xxtofl 0037  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 007D  
                __size_of_I2C_Master_Init 0031                  __size_of_I2C_Master_Read 0035  
                          _usart_protocol 0190                     ??_EEPROM_Read_Integer 0025  
                __size_of_I2C_Master_Wait 0021                  __size_of_I2C_Master_Stop 0009  
           EEPROM_24C1025_Write_Int@local 0056                                   _pointer 00B6  
           EEPROM_24C1025_Write_Byte@data 003B                                   clrloop0 1A58  
                      __end_of_USART_init 1F26           __end_of_Package_Usart_is_for_me 1B4B  
                      __end_of_USART_putc 1AAC                         ADC_Media_10bits@i 0049  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 1BDD  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 1437  
              ??_I2C_Master_RepeatedStart 0023                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0036                 __size_of_I2C_Master_Start 0011  
               __size_of_I2C_Master_Write 000B                         ?_Decodify_Command 0070  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002D  
                      ??_Decodify_Command 005F                                 _RCSTAbits 0018  
                        I2C_Master_Init@c 002E                          I2C_Master_Read@a 0023  
                          ?_Send_Reply_OK 0070                 _EEPROM_24C1025_Write_Byte 1AD2  
        __size_of_EEPROM_24C1025_Fill_All 003F                                   strlen@s 0020  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 00B4              ??_EEPROM_24C1025_Read_Buffer 0030  
           EEPROM_24C1025_Write_Str@range 0032                                 _ROOM_TEMP 101C  
                          _ADC_Max_10Bits 1F26                               ___fladd@grs 005D  
        __size_of_EEPROM_24C1025_Read_Int 0028          __size_of_EEPROM_24C1025_Read_Str 016C  
                           ___xxtofl@sign 003B       __end_of_EEPROM_24C1025_Write_Buffer 1694  
             _EEPROM_24C1025_Write_Buffer 152A                               ___fldiv@grs 0055  
                             ___fldiv@rem 004E      PROCULUS_Control_Register_Write@vetor 0054  
        EEPROM_24C1025_Write_Buffer@count 0033           EEPROM_24C1025_Write_Int@mem_add 004E  
        EEPROM_24C1025_Write_Buffer@range 0035                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00E1                         ?_MediaPlacaVaccum 0070  
                   PROCULUS_VP_Write@size 0056           EEPROM_24C1025_Read_Str@chip_add 0031  
                             ___flmul@grs 0039                        ??_MediaPlacaVaccum 0066  
                _PROCULUS_VP_Write_String 1B17                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 0172                         ?_ADC_Media_10bits 0041  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0058  
                      ??_ADC_Media_10bits 0045                            __end_of___flge 12A6  
                   __end_of_USART_put_int 1AFE                    __end_of_ADC_Max_10Bits 1F64  
                             _BAUDCTLbits 0187                            __end_of_strcpy 1BBF  
                          __end_of_strlen 1B67                       start_initialization 0015  
                             __end_of_isr 1437                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0025                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0023              __end_of_EEPROM_Write_Integer 1D63  
        EEPROM_24C1025_Write_Int@chip_add 0055                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DF                     USART_put_buffer@vetor 0023  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 0077                      I2C_Master_Wait@tempo 0022  
                               __Umul8_16 1C60                        __end_of_Send_To_MB 0829  
        __size_of_Package_Usart_is_for_me 001A                           ?_ADC_Max_10Bits 002A  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 003B        EEPROM_24C1025_Write_Buffer@mem_add 002A  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 0037                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00DD                         _PROCULUS_VP_Write 1F64  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0025                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1AAC  
                      ??_USART_put_buffer 0022                          _I2C_Master_Write 1A86  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00AA  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 105B  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 07BC  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1BFD  
                                ?___lwdiv 0020        __end_of_EEPROM_24C1025_Read_Buffer 099B  
              _EEPROM_24C1025_Read_Buffer 0829                     MediaPlacaVaccum@Valor 00DD  
                                ?_captura 0020                                 __pstrings 1000  
                   MediaPlacaVaccum@canal 00E1                           _my_delay_ms_WDT 1E02  
                 _EEPROM_24C1025_Read_Int 1C83                   _EEPROM_24C1025_Read_Str 1694  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0054  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 1FAB                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 1A7B                          ___lwdiv@quotient 0026  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
                     ADC_Max_10Bits@canal 002D            EEPROM_24C1025_Read_Buffer@data 002F  
          EEPROM_24C1025_Read_Buffer@ctrl 0036                       ADC_Max_10Bits@value 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0022  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1A57  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0055                    Decodify_Command@OutPut 00E3  
                         _PT100_TRANSLADA 1010                           _Delay_Led_Usart 00B2  
            EEPROM_24C1025_Read_Byte@data 003D               __end_of_EEPROM_Read_Integer 1CD5  
                              _ADCON0bits 001F                               __stringbase 100F  
                              _ADCON1bits 009F                 __size_of_Decodify_Command 039D  
                    _EEPROM_Write_Integer 1D31            EEPROM_24C1025_Read_Int@mem_add 0037  
                               main@reset 006D                ??_PROCULUS_VP_Write_String 005D  
                     I2C_Master_Read@temp 0027                   __end_of_PROCULUS_Buzzer 107D  
                          _generic_status 00BB                                _EECON1bits 018C  
                                _Save_Log 119C                 ??_EEPROM_24C1025_Fill_All 005A  
                     __end_of_my_delay_ms 1E02              EEPROM_24C1025_Read_Str@range 0032  
                 __end_of_my_delay_ms_WDT 1E3A                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 000B                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 003B                   _Package_Usart_is_for_me 1B31  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002E  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                      __end_of__stringtab 1010       EEPROM_24C1025_Write_Buffer@chip_add 0034  
                     USART_put_string@ptr 0023                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1D00  
                         _I2C_Master_Read 1D96                                  ___xxtofl 12A6  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 1C1D  
        EEPROM_24C1025_Read_Byte@chip_add 003C                           _I2C_Master_Stop 1A5F  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 1F26  
                                __ptext11 1DCB                                  __ptext20 1A68  
                                __ptext12 1A71                                  __ptext21 1D63  
                                __ptext13 1D00                                  __ptext30 105B  
                                __ptext22 119C                                  __ptext14 10D3  
                                __ptext31 1EAE                                  __ptext23 1131  
                                __ptext15 0037                                  __ptext40 1CAB  
                                __ptext32 1E3A                                  __ptext24 03D4  
                                __ptext16 1BA1                                  __ptext41 1C3E  
                                __ptext33 1AE8                                  __ptext25 1C60  
                                __ptext17 1FAB                                  __ptext50 07BC  
                                __ptext42 1437                                  __ptext34 1A9C  
                                __ptext26 1B17                                  __ptext18 1B84  
                                __ptext51 1BDD                                  __ptext43 1AD2  
                                __ptext35 1B67                                  __ptext27 1B4B  
                                __ptext19 0801                                  __ptext52 152A  
                                __ptext44 1694                                  __ptext36 1CD5  
                                __ptext28 1F64                                  __ptext53 1E02  
                                __ptext45 1C83                                  __ptext37 1D31  
                                __ptext29 1ABD                                  __ptext54 1A86  
                                __ptext46 1AFE                                  __ptext38 1E72  
                                __ptext55 1A5F                                  __ptext47 0829  
                                __ptext39 1BFD                                  __ptext56 1AAC  
                                __ptext48 1A91                                  __ptext57 1C1D  
                                __ptext49 1D96                                  __ptext58 1A7B  
                                __ptext59 1349                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004E                            _PT100_CONSTANT 1014  
                    MediaPlacaVaccum@Temp 00E2                                strcpy@from 0020  
                           __size_of_main 00F3              EEPROM_24C1025_Fill_All@value 0058  
              PROCULUS_VP_Write_String@vp 005A                   __end_of_PT100_TRANSLADA 1014  
     EEPROM_24C1025_Write_Buffer@sizedata 002E                               _milisegundo 00B0  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 1CD5  
                                log@coeff 1024                  __end_of_I2C_Master_Start 1ABD  
                __end_of_I2C_Master_Write 1A91                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1018                                  isr@tempo 0076  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1C3E  
                             _my_delay_ms 1DCB                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 100A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1A71  
                 __end_of_I2C_Master_Init 1D31                   __end_of_I2C_Master_Read 1DCB  
                 __end_of_I2C_Master_Wait 1C3E                   __end_of_I2C_Master_Stop 1A68  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0033  
               __size_of_USART_put_buffer 001D               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 005A                    ??_EEPROM_Write_Integer 0027  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0037                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0023  
                                strcpy@cp 0023                                  strlen@cp 0022  
                                strcpy@to 0022                                  stringdir 100A  
                                stringtab 1000                               _SSPCON2bits 0091  
                       _EEPROM_Write_Byte 1E72            EEPROM_24C1025_Read_Str@mem_add 0029  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 0019  
               ?_EEPROM_24C1025_Read_Byte 0037                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1EEA  
