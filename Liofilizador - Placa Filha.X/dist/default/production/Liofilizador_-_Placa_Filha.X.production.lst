

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 30 07:52:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text21,local,class=CODE,merge=1,delta=2
    24                           	psect	text22,local,class=CODE,merge=1,delta=2
    25                           	psect	text29,local,class=CODE,merge=1,delta=2
    26                           	psect	text31,local,class=CODE,merge=1,delta=2
    27                           	psect	text43,local,class=CODE,merge=1,delta=2
    28                           	psect	text45,local,class=CODE,merge=1,delta=2
    29                           	psect	text48,local,class=CODE,merge=1,delta=2
    30                           	psect	text50,local,class=CODE,merge=1,delta=2
    31                           	psect	text51,local,class=CODE,merge=1,delta=2
    32                           	psect	text55,local,class=CODE,merge=1,delta=2
    33                           	psect	text67,local,class=CODE,merge=1,delta=2
    34                           	psect	text73,local,class=CODE,merge=1,delta=2
    35                           	psect	text74,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	pa_nodes0,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0089                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  008F                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0094                     	;# 
   504  0095                     	;# 
   505  0096                     	;# 
   506  0097                     	;# 
   507  0098                     	;# 
   508  0099                     	;# 
   509  009A                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  0105                     	;# 
   516  0107                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0185                     	;# 
   525  0187                     	;# 
   526  0188                     	;# 
   527  0189                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0089                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  008F                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0094                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009A                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0105                     	;# 
   592  0107                     	;# 
   593  0108                     	;# 
   594  0109                     	;# 
   595  010C                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0185                     	;# 
   601  0187                     	;# 
   602  0188                     	;# 
   603  0189                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  000E                     	;# 
   621  000F                     	;# 
   622  0010                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0015                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  0081                     	;# 
   641  0085                     	;# 
   642  0086                     	;# 
   643  0087                     	;# 
   644  0089                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008F                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  0105                     	;# 
   668  0107                     	;# 
   669  0108                     	;# 
   670  0109                     	;# 
   671  010C                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010F                     	;# 
   676  0185                     	;# 
   677  0187                     	;# 
   678  0188                     	;# 
   679  0189                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000E                     	;# 
   697  000F                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0015                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001B                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  0081                     	;# 
   717  0085                     	;# 
   718  0086                     	;# 
   719  0087                     	;# 
   720  0089                     	;# 
   721  008C                     	;# 
   722  008D                     	;# 
   723  008E                     	;# 
   724  008F                     	;# 
   725  0090                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0093                     	;# 
   731  0094                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  0105                     	;# 
   744  0107                     	;# 
   745  0108                     	;# 
   746  0109                     	;# 
   747  010C                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0187                     	;# 
   754  0188                     	;# 
   755  0189                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001D                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  0081                     	;# 
   793  0085                     	;# 
   794  0086                     	;# 
   795  0087                     	;# 
   796  0089                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0093                     	;# 
   807  0094                     	;# 
   808  0095                     	;# 
   809  0096                     	;# 
   810  0097                     	;# 
   811  0098                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  009F                     	;# 
   819  0105                     	;# 
   820  0107                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  0185                     	;# 
   829  0187                     	;# 
   830  0188                     	;# 
   831  0189                     	;# 
   832  018C                     	;# 
   833  018D                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000D                     	;# 
   847  000E                     	;# 
   848  000E                     	;# 
   849  000F                     	;# 
   850  0010                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0014                     	;# 
   855  0015                     	;# 
   856  0015                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001B                     	;# 
   864  001C                     	;# 
   865  001D                     	;# 
   866  001E                     	;# 
   867  001F                     	;# 
   868  0081                     	;# 
   869  0085                     	;# 
   870  0086                     	;# 
   871  0087                     	;# 
   872  0089                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  009F                     	;# 
   895  0105                     	;# 
   896  0107                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010E                     	;# 
   903  010F                     	;# 
   904  0185                     	;# 
   905  0187                     	;# 
   906  0188                     	;# 
   907  0189                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  000E                     	;# 
   925  000F                     	;# 
   926  0010                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0013                     	;# 
   930  0014                     	;# 
   931  0015                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  001D                     	;# 
   942  001E                     	;# 
   943  001F                     	;# 
   944  0081                     	;# 
   945  0085                     	;# 
   946  0086                     	;# 
   947  0087                     	;# 
   948  0089                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  008E                     	;# 
   952  008F                     	;# 
   953  0090                     	;# 
   954  0091                     	;# 
   955  0092                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  009F                     	;# 
   971  0105                     	;# 
   972  0107                     	;# 
   973  0108                     	;# 
   974  0109                     	;# 
   975  010C                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  010F                     	;# 
   980  0185                     	;# 
   981  0187                     	;# 
   982  0188                     	;# 
   983  0189                     	;# 
   984  018C                     	;# 
   985  018D                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000E                     	;# 
  1001  000F                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0015                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  0081                     	;# 
  1021  0085                     	;# 
  1022  0086                     	;# 
  1023  0087                     	;# 
  1024  0089                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  008F                     	;# 
  1029  0090                     	;# 
  1030  0091                     	;# 
  1031  0092                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  0105                     	;# 
  1048  0107                     	;# 
  1049  0108                     	;# 
  1050  0109                     	;# 
  1051  010C                     	;# 
  1052  010C                     	;# 
  1053  010D                     	;# 
  1054  010E                     	;# 
  1055  010F                     	;# 
  1056  0185                     	;# 
  1057  0187                     	;# 
  1058  0188                     	;# 
  1059  0189                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000D                     	;# 
  1075  000E                     	;# 
  1076  000E                     	;# 
  1077  000F                     	;# 
  1078  0010                     	;# 
  1079  0011                     	;# 
  1080  0012                     	;# 
  1081  0013                     	;# 
  1082  0014                     	;# 
  1083  0015                     	;# 
  1084  0015                     	;# 
  1085  0016                     	;# 
  1086  0017                     	;# 
  1087  0018                     	;# 
  1088  0019                     	;# 
  1089  001A                     	;# 
  1090  001B                     	;# 
  1091  001B                     	;# 
  1092  001C                     	;# 
  1093  001D                     	;# 
  1094  001E                     	;# 
  1095  001F                     	;# 
  1096  0081                     	;# 
  1097  0085                     	;# 
  1098  0086                     	;# 
  1099  0087                     	;# 
  1100  0089                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  008F                     	;# 
  1105  0090                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0093                     	;# 
  1109  0093                     	;# 
  1110  0093                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  009F                     	;# 
  1123  0105                     	;# 
  1124  0107                     	;# 
  1125  0108                     	;# 
  1126  0109                     	;# 
  1127  010C                     	;# 
  1128  010C                     	;# 
  1129  010D                     	;# 
  1130  010E                     	;# 
  1131  010F                     	;# 
  1132  0185                     	;# 
  1133  0187                     	;# 
  1134  0188                     	;# 
  1135  0189                     	;# 
  1136  018C                     	;# 
  1137  018D                     	;# 
  1138                           
  1139                           	psect	idataBANK3
  1140  0000                     __pidataBANK3:	
  1141                           
  1142                           	psect	strings
  1143  1800                     __pstrings:	
  1144  1800                     stringtab:	
  1145  1800                     __stringtab:	
  1146                           
  1147                           ;	String table - string pointers are 1 byte each
  1148  1800  1BFF               	btfsc	btemp+1,7
  1149  1801  280A               	ljmp	stringcode
  1150  1802  1383               	bcf	3,7
  1151  1803  187F               	btfsc	btemp+1,0
  1152  1804  1783               	bsf	3,7
  1153  1805  0800               	movf	0,w
  1154  1806  0A84               	incf	4,f
  1155  1807  1903               	skipnz
  1156  1808  0AFF               	incf	btemp+1,f
  1157  1809  0008               	return
  1158  180A                     stringcode:	
  1159  180A                     stringdir:	
  1160  180A  3018               	movlw	high stringdir
  1161  180B  008A               	movwf	10
  1162  180C  0804               	movf	4,w
  1163  180D  0A84               	incf	4,f
  1164  180E  0782               	addwf	2,f
  1165  180F                     __stringbase:	
  1166  180F  3400               	retlw	0
  1167  1810                     __end_of__stringtab:	
  1168  1810                     log@coeff:	
  1169  1810  3400               	retlw	0
  1170  1811  3400               	retlw	0
  1171  1812  3400               	retlw	0
  1172  1813  3400               	retlw	0
  1173  1814  34C4               	retlw	196
  1174  1815  34FF               	retlw	255
  1175  1816  347F               	retlw	127
  1176  1817  343F               	retlw	63
  1177  1818  3480               	retlw	128
  1178  1819  34EF               	retlw	239
  1179  181A  34FF               	retlw	255
  1180  181B  34BE               	retlw	190
  1181  181C  3490               	retlw	144
  1182  181D  34E1               	retlw	225
  1183  181E  34A9               	retlw	169
  1184  181F  343E               	retlw	62
  1185  1820  34EC               	retlw	236
  1186  1821  3482               	retlw	130
  1187  1822  3476               	retlw	118
  1188  1823  34BE               	retlw	190
  1189  1824  3482               	retlw	130
  1190  1825  34AD               	retlw	173
  1191  1826  342B               	retlw	43
  1192  1827  343E               	retlw	62
  1193  1828  340E               	retlw	14
  1194  1829  343C               	retlw	60
  1195  182A  34C3               	retlw	195
  1196  182B  34BD               	retlw	189
  1197  182C  3487               	retlw	135
  1198  182D  34D1               	retlw	209
  1199  182E  3413               	retlw	19
  1200  182F  343D               	retlw	61
  1201  1830  3441               	retlw	65
  1202  1831  3478               	retlw	120
  1203  1832  34D3               	retlw	211
  1204  1833  34BB               	retlw	187
  1205  1834                     __end_oflog@coeff:	
  1206  1834                     _BETA:	
  1207                           
  1208                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1209  1834  3400               	retlw	0
  1210  1835  3460               	retlw	96
  1211  1836  3478               	retlw	120
  1212  1837  3445               	retlw	69
  1213  1838                     __end_of_BETA:	
  1214  1838                     _BALANCE_RESISTOR:	
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1217  1838  3400               	retlw	0
  1218  1839  3440               	retlw	64
  1219  183A  341C               	retlw	28
  1220  183B  3446               	retlw	70
  1221  183C                     __end_of_BALANCE_RESISTOR:	
  1222  0019                     _TXREG	set	25
  1223  0018                     _RCSTAbits	set	24
  1224  001A                     _RCREG	set	26
  1225  000E                     _TMR1L	set	14
  1226  000F                     _TMR1H	set	15
  1227  000C                     _PIR1bits	set	12
  1228  001E                     _ADRESH	set	30
  1229  001F                     _ADCON0bits	set	31
  1230  0005                     _PORTAbits	set	5
  1231  0007                     _PORTCbits	set	7
  1232  0010                     _T1CON	set	16
  1233  000B                     _INTCONbits	set	11
  1234  0006                     _PORTBbits	set	6
  1235  0009                     _PORTE	set	9
  1236  0007                     _PORTC	set	7
  1237  0005                     _PORTA	set	5
  1238  0013                     _SSPBUF	set	19
  1239  0014                     _SSPCON	set	20
  1240  0006                     _PORTB	set	6
  1241  00C4                     _CREN	set	196
  1242  0081                     _TMR1CS	set	129
  1243  0085                     _T1CKPS1	set	133
  1244  0084                     _T1CKPS0	set	132
  1245  008C                     _PIE1bits	set	140
  1246  0099                     _SPBRG	set	153
  1247  0098                     _TXSTAbits	set	152
  1248  009E                     _ADRESL	set	158
  1249  009F                     _ADCON1bits	set	159
  1250  009F                     _ADCON1	set	159
  1251  0095                     _WPUB	set	149
  1252  0081                     _OPTION_REGbits	set	129
  1253  0089                     _TRISE	set	137
  1254  0087                     _TRISC	set	135
  1255  0086                     _TRISB	set	134
  1256  0085                     _TRISA	set	133
  1257  008F                     _OSCCONbits	set	143
  1258  0094                     _SSPSTAT	set	148
  1259  0093                     _SSPADD	set	147
  1260  0091                     _SSPCON2	set	145
  1261  043F                     _TRISC7	set	1087
  1262  043E                     _TRISC6	set	1086
  1263  0460                     _TMR1IE	set	1120
  1264  048C                     _ACKEN	set	1164
  1265  048D                     _ACKDT	set	1165
  1266  048B                     _RCEN	set	1163
  1267  048A                     _PEN	set	1162
  1268  0489                     _RSEN	set	1161
  1269  0488                     _SEN	set	1160
  1270  043C                     _TRISC4	set	1084
  1271  043B                     _TRISC3	set	1083
  1272  010C                     _EEDATA	set	268
  1273  010D                     _EEADR	set	269
  1274  0187                     _BAUDCTLbits	set	391
  1275  018D                     _EECON2	set	397
  1276  018C                     _EECON1bits	set	396
  1277  0189                     _ANSELH	set	393
  1278  0188                     _ANSEL	set	392
  1279  183C                     STR_1:	
  1280  183C  3476               	retlw	118	;'v'
  1281  183D  3431               	retlw	49	;'1'
  1282  183E  342E               	retlw	46	;'.'
  1283  183F  3430               	retlw	48	;'0'
  1284  1840  342E               	retlw	46	;'.'
  1285  1841  3431               	retlw	49	;'1'
  1286  1842  3431               	retlw	49	;'1'
  1287  1843  3400               	retlw	0
  1288  1844                     STR_8:	
  1289  1844  344F               	retlw	79	;'O'
  1290  1845  344B               	retlw	75	;'K'
  1291  1846  3400               	retlw	0
  1292  1847                     STR_3:	
  1293  1847  3430               	retlw	48	;'0'
  1294  1848  3400               	retlw	0
  1295  1849                     STR_4:	
  1296  1849  343A               	retlw	58	;':'
  1297  184A  3400               	retlw	0
  1298  1848                     
  1299                           ; #config settings
  1300  0000                     
  1301                           	psect	cinit
  1302  0015                     start_initialization:	
  1303  0015                     __initialization:	
  1304                           
  1305                           ; Initialize objects allocated to BANK3
  1306  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1307  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1308                           
  1309                           ;initializer for _RL1Status
  1310  0017  3001               	movlw	1
  1311  0018  00DD               	movwf	__pdataBANK3& (0+127)
  1312                           
  1313                           ;initializer for _RL0Status
  1314  0019  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  1315  001A  3090               	movlw	low __pbssBANK3
  1316                           
  1317                           ; Clear objects allocated to BANK3
  1318  001B  1783               	bsf	3,7	;select IRP bank2
  1319  001C  0084               	movwf	4
  1320  001D  30DD               	movlw	low (__pbssBANK3+77)
  1321  001E  160A  118A  2008  120A  118A  	fcall	clear_ram0
  1322                           
  1323                           ; Clear objects allocated to BANK2
  1324  0023  3010               	movlw	low __pbssBANK2
  1325  0024  0084               	movwf	4
  1326  0025  305A               	movlw	low (__pbssBANK2+74)
  1327  0026  160A  118A  2008   	fcall	clear_ram0
  1328                           
  1329                           ; Clear objects allocated to BANK1
  1330  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1331  002A  01EF               	clrf	__pbssBANK1& (0+127)
  1332                           
  1333                           ; Clear objects allocated to COMMON
  1334  002B  01F0               	clrf	__pbssCOMMON& (0+127)
  1335  002C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1336  002D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1337  002E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1338  002F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1339  0030  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1340  0031  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1341  0032                     end_of_initialization:	
  1342                           ;End of C runtime variable initialization code
  1343                           
  1344  0032                     __end_of__initialization:	
  1345  0032  0183               	clrf	3
  1346  0033  120A  118A  2EEC   	ljmp	l8020	;jump to C main() function
  1347                           
  1348                           	psect	bssCOMMON
  1349  0070                     __pbssCOMMON:	
  1350  0070                     _SetPoint0:	
  1351  0070                     	ds	4
  1352  0074                     _TempoCNT_1:	
  1353  0074                     	ds	1
  1354  0075                     _hora:	
  1355  0075                     	ds	1
  1356  0076                     _segundo:	
  1357  0076                     	ds	1
  1358                           
  1359                           	psect	bssBANK1
  1360  00EF                     __pbssBANK1:	
  1361  00EF                     _TempoCNT_0:	
  1362  00EF                     	ds	1
  1363                           
  1364                           	psect	bssBANK3
  1365  0190                     __pbssBANK3:	
  1366  0190                     _Temperatura1:	
  1367  0190                     	ds	4
  1368  0194                     _Temperatura0:	
  1369  0194                     	ds	4
  1370  0198                     _SetPoint1:	
  1371  0198                     	ds	4
  1372  019C                     _Histerese0:	
  1373  019C                     	ds	4
  1374  01A0                     _tempodecorrido:	
  1375  01A0                     	ds	2
  1376  01A2                     _count:	
  1377  01A2                     	ds	2
  1378  01A4                     _header:	
  1379  01A4                     	ds	2
  1380  01A6                     _Status1:	
  1381  01A6                     	ds	2
  1382  01A8                     _Status0:	
  1383  01A8                     	ds	2
  1384  01AA                     _milisegundo:	
  1385  01AA                     	ds	2
  1386  01AC                     _Delay_Led_Usart:	
  1387  01AC                     	ds	2
  1388  01AE                     _Delay_Led_Tmr0:	
  1389  01AE                     	ds	2
  1390  01B0                     _Delay_Led_Memory:	
  1391  01B0                     	ds	2
  1392  01B2                     _pointer:	
  1393  01B2                     	ds	1
  1394  01B3                     _destino:	
  1395  01B3                     	ds	1
  1396  01B4                     _Board_Number:	
  1397  01B4                     	ds	1
  1398  01B5                     _canal:	
  1399  01B5                     	ds	1
  1400  01B6                     _TempoOFF_1:	
  1401  01B6                     	ds	1
  1402  01B7                     _TempoON_1:	
  1403  01B7                     	ds	1
  1404  01B8                     _Histerese1:	
  1405  01B8                     	ds	1
  1406  01B9                     _TempoOFF_0:	
  1407  01B9                     	ds	1
  1408  01BA                     _TempoON_0:	
  1409  01BA                     	ds	1
  1410  01BB                     _minuto:	
  1411  01BB                     	ds	1
  1412  01BC                     _generic_status:	
  1413  01BC                     	ds	1
  1414  01BD                     _texto:	
  1415  01BD                     	ds	16
  1416  01CD                     _usart_protocol:	
  1417  01CD                     	ds	16
  1418                           
  1419                           	psect	dataBANK3
  1420  01DD                     __pdataBANK3:	
  1421  01DD                     _RL1Status:	
  1422  01DD                     	ds	1
  1423  01DE                     _RL0Status:	
  1424  01DE                     	ds	1
  1425                           
  1426                           	psect	bssBANK2
  1427  0110                     __pbssBANK2:	
  1428  0110                     _usart_buffer:	
  1429  0110                     	ds	42
  1430  013A                     _buffer:	
  1431  013A                     	ds	32
  1432                           
  1433                           	psect	clrtext
  1434  1008                     clear_ram0:	
  1435                           ;	Called with FSR containing the base address, and
  1436                           ;	W with the last address+1
  1437                           
  1438  1008  0064               	clrwdt	;clear the watchdog before getting into this loop
  1439  1009                     clrloop0:	
  1440  1009  0180               	clrf	0	;clear RAM location pointed to by FSR
  1441  100A  0A84               	incf	4,f	;increment pointer
  1442  100B  0604               	xorwf	4,w	;XOR with final address
  1443  100C  1903               	btfsc	3,2	;have we reached the end yet?
  1444  100D  3400               	retlw	0	;all done for this memory range, return
  1445  100E  0604               	xorwf	4,w	;XOR again to restore value
  1446  100F  2809               	goto	clrloop0	;do the next byte
  1447                           
  1448                           	psect	cstackBANK1
  1449  00A0                     __pcstackBANK1:	
  1450  00A0                     ?_eval_poly:	
  1451  00A0                     ?___fldiv:	
  1452                           ; 4 bytes @ 0x0
  1453                           
  1454  00A0                     ___fldiv@a:	
  1455                           ; 4 bytes @ 0x0
  1456                           
  1457  00A0                     eval_poly@x:	
  1458                           ; 4 bytes @ 0x0
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x0
  1462  00A0                     	ds	4
  1463  00A4                     eval_poly@d:	
  1464  00A4                     ___fldiv@b:	
  1465                           ; 1 bytes @ 0x4
  1466                           
  1467                           
  1468                           ; 4 bytes @ 0x4
  1469  00A4                     	ds	1
  1470  00A5                     eval_poly@n:	
  1471                           
  1472                           ; 2 bytes @ 0x5
  1473  00A5                     	ds	2
  1474  00A7                     ??_eval_poly:	
  1475                           
  1476                           ; 1 bytes @ 0x7
  1477  00A7                     	ds	1
  1478  00A8                     ??___fldiv:	
  1479                           
  1480                           ; 1 bytes @ 0x8
  1481  00A8                     	ds	4
  1482  00AC                     ___fldiv@rem:	
  1483  00AC                     eval_poly@res:	
  1484                           ; 4 bytes @ 0xC
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0xC
  1488  00AC                     	ds	4
  1489  00B0                     ?_log:	
  1490  00B0                     ___fldiv@sign:	
  1491                           ; 4 bytes @ 0x10
  1492                           
  1493  00B0                     log@x:	
  1494                           ; 1 bytes @ 0x10
  1495                           
  1496                           
  1497                           ; 4 bytes @ 0x10
  1498  00B0                     	ds	1
  1499  00B1                     ___fldiv@new_exp:	
  1500                           
  1501                           ; 2 bytes @ 0x11
  1502  00B1                     	ds	2
  1503  00B3                     ___fldiv@grs:	
  1504                           
  1505                           ; 4 bytes @ 0x13
  1506  00B3                     	ds	4
  1507  00B7                     ___fldiv@bexp:	
  1508                           
  1509                           ; 1 bytes @ 0x17
  1510  00B7                     	ds	1
  1511  00B8                     ___fldiv@aexp:	
  1512                           
  1513                           ; 1 bytes @ 0x18
  1514  00B8                     	ds	1
  1515  00B9                     ??_Load_Work:	
  1516  00B9                     ?_ADC_Read_NTC:	
  1517                           ; 1 bytes @ 0x19
  1518                           
  1519                           
  1520                           ; 4 bytes @ 0x19
  1521  00B9                     	ds	4
  1522  00BD                     Decodify_Command@hh:	
  1523                           
  1524                           ; 10 bytes @ 0x1D
  1525  00BD                     	ds	1
  1526  00BE                     ADC_Read_NTC@calc:	
  1527                           
  1528                           ; 4 bytes @ 0x1E
  1529  00BE                     	ds	4
  1530  00C2                     ADC_Read_NTC@B:	
  1531                           
  1532                           ; 2 bytes @ 0x22
  1533  00C2                     	ds	2
  1534  00C4                     ADC_Read_NTC@resistencia:	
  1535                           
  1536                           ; 4 bytes @ 0x24
  1537  00C4                     	ds	3
  1538  00C7                     Decodify_Command@mm:	
  1539                           
  1540                           ; 10 bytes @ 0x27
  1541  00C7                     	ds	1
  1542  00C8                     ADC_Read_NTC@i:	
  1543                           
  1544                           ; 1 bytes @ 0x28
  1545  00C8                     	ds	1
  1546  00C9                     ADC_Read_NTC@value:	
  1547                           
  1548                           ; 2 bytes @ 0x29
  1549  00C9                     	ds	2
  1550  00CB                     ADC_Read_NTC@temperatura:	
  1551                           
  1552                           ; 4 bytes @ 0x2B
  1553  00CB                     	ds	4
  1554  00CF                     ??_mediatemperaturaNTC:	
  1555                           
  1556                           ; 1 bytes @ 0x2F
  1557  00CF                     	ds	1
  1558  00D0                     _mediatemperaturaNTC$2336:	
  1559                           
  1560                           ; 4 bytes @ 0x30
  1561  00D0                     	ds	1
  1562  00D1                     Decodify_Command@ss:	
  1563                           
  1564                           ; 10 bytes @ 0x31
  1565  00D1                     	ds	3
  1566  00D4                     mediatemperaturaNTC@canal:	
  1567                           
  1568                           ; 1 bytes @ 0x34
  1569  00D4                     	ds	1
  1570  00D5                     mediatemperaturaNTC@Temp:	
  1571                           
  1572                           ; 4 bytes @ 0x35
  1573  00D5                     	ds	4
  1574  00D9                     mediatemperaturaNTC@i:	
  1575                           
  1576                           ; 1 bytes @ 0x39
  1577  00D9                     	ds	2
  1578  00DB                     Decodify_Command@dados:	
  1579                           
  1580                           ; 2 bytes @ 0x3B
  1581  00DB                     	ds	2
  1582  00DD                     Decodify_Command@add:	
  1583                           
  1584                           ; 1 bytes @ 0x3D
  1585  00DD                     	ds	1
  1586  00DE                     Decodify_Command@tempint:	
  1587                           
  1588                           ; 2 bytes @ 0x3E
  1589  00DE                     	ds	2
  1590  00E0                     Decodify_Command@OutPut:	
  1591                           
  1592                           ; 4 bytes @ 0x40
  1593  00E0                     	ds	4
  1594  00E4                     Decodify_Command@tempchar:	
  1595                           
  1596                           ; 1 bytes @ 0x44
  1597  00E4                     	ds	1
  1598  00E5                     Decodify_Command@sizedata:	
  1599                           
  1600                           ; 1 bytes @ 0x45
  1601  00E5                     	ds	1
  1602  00E6                     Decodify_Command@add_24LCxxxx:	
  1603                           
  1604                           ; 4 bytes @ 0x46
  1605  00E6                     	ds	4
  1606  00EA                     ??_main:	
  1607                           
  1608                           ; 1 bytes @ 0x4A
  1609  00EA                     	ds	3
  1610  00ED                     main@reset:	
  1611                           
  1612                           ; 2 bytes @ 0x4D
  1613  00ED                     	ds	2
  1614                           
  1615                           	psect	cstackCOMMON
  1616  0077                     __pcstackCOMMON:	
  1617  0077                     ?_I2C_Master_Start:	
  1618  0077                     ?_I2C_Master_Stop:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0077                     ?_I2C_Master_RepeatedStart:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0077                     ?_ADC_init:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0077                     ?_Load_Work:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0077                     ?_mediatemperaturaNTC:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0077                     ?_Auto_Relay0:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0077                     ?_Auto_Relay1:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0077                     ?_Decodify_Command:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0077                     ?_USART_to_Protocol:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0077                     ?_Send_To_MB:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0077                     ?_Send_Reply_OK:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0077                     ?_EEPROM_Read_Byte:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0077                     ?_USART_putc:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0077                     ?_Package_Usart_is_for_me:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0077                     ?_Rele0Ligado:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0077                     ?_Rele1Ligado:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0077                     ?_Rele0Desligado:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0077                     ?_Rele1Desligado:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0077                     ?_I2C_Master_Wait:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0077                     ?_main:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0077                     ?_isr:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0077                     ??_isr:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0077                     ADC_Read_NTC@canal:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687                           
  1688                           ; 1 bytes @ 0x0
  1689  0077                     	ds	4
  1690  007B                     isr@tempo:	
  1691                           
  1692                           ; 2 bytes @ 0x4
  1693  007B                     	ds	2
  1694                           
  1695                           	psect	cstackBANK0
  1696  0020                     __pcstackBANK0:	
  1697  0020                     ?___fleq:	
  1698  0020                     ??_I2C_Master_Start:	
  1699                           ; 1 bit 
  1700                           
  1701  0020                     ?_I2C_Master_Write:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0020                     ??_I2C_Master_Stop:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0020                     ?_my_delay_ms_WDT:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0020                     ??_I2C_Master_RepeatedStart:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0020                     ??_ADC_init:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0020                     ?_USART_init:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0020                     ??_USART_to_Protocol:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0020                     ?_EEPROM_Write_Byte:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0020                     ??_EEPROM_Read_Byte:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0020                     ??_USART_putc:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0020                     ?_strcpy:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0020                     ?_strcat:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0020                     ?_my_delay_ms:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0020                     ??_Package_Usart_is_for_me:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0020                     ??_Rele0Ligado:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0020                     ??_Rele1Ligado:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0020                     ??_Rele0Desligado:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0020                     ??_Rele1Desligado:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0020                     ?_PROCULUS_Delay:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0020                     ??_I2C_Master_Wait:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0020                     ?_I2C_Master_Read:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0020                     ?_strlen:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0020                     ?_captura:	
  1768                           ; 2 bytes @ 0x0
  1769                           
  1770  0020                     ?__Umul8_16:	
  1771                           ; 2 bytes @ 0x0
  1772                           
  1773  0020                     ?___lwdiv:	
  1774                           ; 2 bytes @ 0x0
  1775                           
  1776  0020                     ?___lwmod:	
  1777                           ; 2 bytes @ 0x0
  1778                           
  1779  0020                     ?___lldiv:	
  1780                           ; 2 bytes @ 0x0
  1781                           
  1782  0020                     ?___fltol:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785  0020                     EEPROM_Write_Byte@dado:	
  1786                           ; 4 bytes @ 0x0
  1787                           
  1788  0020                     Package_Usart_is_for_me@retorno:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0020                     USART_putc@value:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0020                     strcpy@from:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0020                     __Umul8_16@multiplicand:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     I2C_Master_Write@d:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0020                     I2C_Master_Read@a:	
  1804                           ; 2 bytes @ 0x0
  1805                           
  1806  0020                     PROCULUS_Delay@tempo_ms:	
  1807                           ; 2 bytes @ 0x0
  1808                           
  1809  0020                     ___lwdiv@divisor:	
  1810                           ; 2 bytes @ 0x0
  1811                           
  1812  0020                     ___lwmod@divisor:	
  1813                           ; 2 bytes @ 0x0
  1814                           
  1815  0020                     strcat@from:	
  1816                           ; 2 bytes @ 0x0
  1817                           
  1818  0020                     my_delay_ms@time:	
  1819                           ; 2 bytes @ 0x0
  1820                           
  1821  0020                     my_delay_ms_WDT@time:	
  1822                           ; 4 bytes @ 0x0
  1823                           
  1824  0020                     USART_init@baudrate:	
  1825                           ; 4 bytes @ 0x0
  1826                           
  1827  0020                     ___lldiv@divisor:	
  1828                           ; 4 bytes @ 0x0
  1829                           
  1830  0020                     ___fleq@ff1:	
  1831                           ; 4 bytes @ 0x0
  1832                           
  1833  0020                     ___fltol@f1:	
  1834                           ; 4 bytes @ 0x0
  1835                           
  1836                           
  1837                           ; 4 bytes @ 0x0
  1838  0020                     	ds	1
  1839  0021                     ??_Send_To_MB:	
  1840  0021                     ?_USART_put_string:	
  1841                           ; 1 bytes @ 0x1
  1842                           
  1843  0021                     ??_EEPROM_Write_Byte:	
  1844                           ; 1 bytes @ 0x1
  1845                           
  1846  0021                     ?_USART_put_buffer:	
  1847                           ; 1 bytes @ 0x1
  1848                           
  1849  0021                     ??_strcpy:	
  1850                           ; 1 bytes @ 0x1
  1851                           
  1852  0021                     Send_To_MB@size:	
  1853                           ; 1 bytes @ 0x1
  1854                           
  1855  0021                     USART_put_buffer@size:	
  1856                           ; 1 bytes @ 0x1
  1857                           
  1858  0021                     USART_put_string@vetor:	
  1859                           ; 2 bytes @ 0x1
  1860                           
  1861                           
  1862                           ; 2 bytes @ 0x1
  1863  0021                     	ds	1
  1864  0022                     ??_I2C_Master_Write:	
  1865  0022                     ??_I2C_Master_Read:	
  1866                           ; 1 bytes @ 0x2
  1867                           
  1868  0022                     ??_strcat:	
  1869                           ; 1 bytes @ 0x2
  1870                           
  1871  0022                     ??_captura:	
  1872                           ; 1 bytes @ 0x2
  1873                           
  1874  0022                     ??_PROCULUS_Delay:	
  1875                           ; 1 bytes @ 0x2
  1876                           
  1877  0022                     EEPROM_Read_Byte@addr:	
  1878                           ; 1 bytes @ 0x2
  1879                           
  1880  0022                     strcpy@to:	
  1881                           ; 1 bytes @ 0x2
  1882                           
  1883  0022                     I2C_Master_Read@temp:	
  1884                           ; 1 bytes @ 0x2
  1885                           
  1886  0022                     USART_to_Protocol@i:	
  1887                           ; 2 bytes @ 0x2
  1888                           
  1889  0022                     ___lwdiv@dividend:	
  1890                           ; 2 bytes @ 0x2
  1891                           
  1892  0022                     ___lwmod@dividend:	
  1893                           ; 2 bytes @ 0x2
  1894                           
  1895                           
  1896                           ; 2 bytes @ 0x2
  1897  0022                     	ds	1
  1898  0023                     ??_USART_put_string:	
  1899  0023                     ?_EEPROM_Read_String:	
  1900                           ; 1 bytes @ 0x3
  1901                           
  1902  0023                     ??_USART_put_buffer:	
  1903                           ; 1 bytes @ 0x3
  1904                           
  1905  0023                     ??_strlen:	
  1906                           ; 1 bytes @ 0x3
  1907                           
  1908  0023                     ??__Umul8_16:	
  1909                           ; 1 bytes @ 0x3
  1910                           
  1911  0023                     ?_EEPROM_Read_Integer:	
  1912                           ; 1 bytes @ 0x3
  1913                           
  1914  0023                     EEPROM_Write_Byte@addr:	
  1915                           ; 2 bytes @ 0x3
  1916                           
  1917  0023                     EEPROM_Read_String@dado:	
  1918                           ; 1 bytes @ 0x3
  1919                           
  1920  0023                     strcat@cp:	
  1921                           ; 1 bytes @ 0x3
  1922                           
  1923  0023                     strcpy@cp:	
  1924                           ; 1 bytes @ 0x3
  1925                           
  1926  0023                     strlen@cp:	
  1927                           ; 1 bytes @ 0x3
  1928                           
  1929  0023                     USART_put_string@ptr:	
  1930                           ; 1 bytes @ 0x3
  1931                           
  1932  0023                     __Umul8_16@product:	
  1933                           ; 2 bytes @ 0x3
  1934                           
  1935                           
  1936                           ; 2 bytes @ 0x3
  1937  0023                     	ds	1
  1938  0024                     ??_my_delay_ms_WDT:	
  1939  0024                     ??_USART_init:	
  1940                           ; 1 bytes @ 0x4
  1941                           
  1942  0024                     ??_EEPROM_Read_String:	
  1943                           ; 1 bytes @ 0x4
  1944                           
  1945  0024                     ??_my_delay_ms:	
  1946                           ; 1 bytes @ 0x4
  1947                           
  1948  0024                     ??___fltol:	
  1949                           ; 1 bytes @ 0x4
  1950                           
  1951  0024                     ??___lwdiv:	
  1952                           ; 1 bytes @ 0x4
  1953                           
  1954  0024                     ??___lwmod:	
  1955                           ; 1 bytes @ 0x4
  1956                           
  1957  0024                     EEPROM_Write_Byte@last_GIE:	
  1958                           ; 1 bytes @ 0x4
  1959                           
  1960  0024                     EEPROM_Read_String@addr:	
  1961                           ; 1 bytes @ 0x4
  1962                           
  1963  0024                     USART_init@i:	
  1964                           ; 1 bytes @ 0x4
  1965                           
  1966  0024                     USART_to_Protocol@usart_protocol:	
  1967                           ; 1 bytes @ 0x4
  1968                           
  1969  0024                     ___lwdiv@counter:	
  1970                           ; 1 bytes @ 0x4
  1971                           
  1972  0024                     ___lwmod@counter:	
  1973                           ; 1 bytes @ 0x4
  1974                           
  1975  0024                     strcat@to:	
  1976                           ; 1 bytes @ 0x4
  1977                           
  1978  0024                     strlen@s:	
  1979                           ; 1 bytes @ 0x4
  1980                           
  1981  0024                     PROCULUS_Delay@i:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0024                     ___lldiv@dividend:	
  1985                           ; 2 bytes @ 0x4
  1986                           
  1987  0024                     ___fleq@ff2:	
  1988                           ; 4 bytes @ 0x4
  1989                           
  1990                           
  1991                           ; 4 bytes @ 0x4
  1992  0024                     	ds	1
  1993  0025                     ?_EEPROM_Write_Integer:	
  1994  0025                     ??_Send_Reply_OK:	
  1995                           ; 1 bytes @ 0x5
  1996                           
  1997  0025                     ?_EEPROM_Write_String:	
  1998                           ; 1 bytes @ 0x5
  1999                           
  2000  0025                     EEPROM_Write_String@dado:	
  2001                           ; 1 bytes @ 0x5
  2002                           
  2003  0025                     EEPROM_Read_String@c:	
  2004                           ; 1 bytes @ 0x5
  2005                           
  2006  0025                     USART_put_buffer@vetor:	
  2007                           ; 1 bytes @ 0x5
  2008                           
  2009  0025                     EEPROM_Write_Integer@dado:	
  2010                           ; 1 bytes @ 0x5
  2011                           
  2012  0025                     ___lwdiv@quotient:	
  2013                           ; 2 bytes @ 0x5
  2014                           
  2015  0025                     __Umul8_16@word_mpld:	
  2016                           ; 2 bytes @ 0x5
  2017                           
  2018                           
  2019                           ; 2 bytes @ 0x5
  2020  0025                     	ds	1
  2021  0026                     ??_EEPROM_Read_Integer:	
  2022  0026                     ??_EEPROM_Write_String:	
  2023                           ; 1 bytes @ 0x6
  2024                           
  2025  0026                     EEPROM_Read_Integer@addr:	
  2026                           ; 1 bytes @ 0x6
  2027                           
  2028  0026                     EEPROM_Write_String@addr:	
  2029                           ; 1 bytes @ 0x6
  2030                           
  2031  0026                     USART_put_buffer@loop:	
  2032                           ; 1 bytes @ 0x6
  2033                           
  2034  0026                     my_delay_ms@i:	
  2035                           ; 1 bytes @ 0x6
  2036                           
  2037  0026                     my_delay_ms_WDT@i:	
  2038                           ; 4 bytes @ 0x6
  2039                           
  2040                           
  2041                           ; 4 bytes @ 0x6
  2042  0026                     	ds	1
  2043  0027                     ??_EEPROM_Write_Integer:	
  2044  0027                     ?_utoa:	
  2045                           ; 1 bytes @ 0x7
  2046                           
  2047  0027                     EEPROM_Read_Integer@ptr:	
  2048                           ; 1 bytes @ 0x7
  2049                           
  2050  0027                     USART_put_buffer@ptr:	
  2051                           ; 1 bytes @ 0x7
  2052                           
  2053  0027                     __Umul8_16@multiplier:	
  2054                           ; 1 bytes @ 0x7
  2055                           
  2056  0027                     utoa@val:	
  2057                           ; 1 bytes @ 0x7
  2058                           
  2059                           
  2060                           ; 2 bytes @ 0x7
  2061  0027                     	ds	1
  2062  0028                     ??___lldiv:	
  2063  0028                     ??___fleq:	
  2064                           ; 1 bytes @ 0x8
  2065                           
  2066  0028                     ___fltol@sign1:	
  2067                           ; 1 bytes @ 0x8
  2068                           
  2069  0028                     EEPROM_Read_Integer@result:	
  2070                           ; 1 bytes @ 0x8
  2071                           
  2072  0028                     ___lldiv@quotient:	
  2073                           ; 2 bytes @ 0x8
  2074                           
  2075                           
  2076                           ; 4 bytes @ 0x8
  2077  0028                     	ds	1
  2078  0029                     EEPROM_Write_Integer@addr:	
  2079  0029                     ___fltol@exp1:	
  2080                           ; 1 bytes @ 0x9
  2081                           
  2082  0029                     utoa@base:	
  2083                           ; 1 bytes @ 0x9
  2084                           
  2085                           
  2086                           ; 2 bytes @ 0x9
  2087  0029                     	ds	1
  2088  002A                     ?_USART_put_int:	
  2089  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  2090                           ; 1 bytes @ 0xA
  2091                           
  2092  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2093                           ; 1 bytes @ 0xA
  2094                           
  2095  002A                     ?_EEPROM_24C1025_Write_Str:	
  2096                           ; 1 bytes @ 0xA
  2097                           
  2098  002A                     ?_EEPROM_24C1025_Read_Str:	
  2099                           ; 1 bytes @ 0xA
  2100                           
  2101  002A                     ?___wmul:	
  2102                           ; 1 bytes @ 0xA
  2103                           
  2104  002A                     EEPROM_Write_Integer@ptr:	
  2105                           ; 2 bytes @ 0xA
  2106                           
  2107  002A                     EEPROM_Read_Integer@i:	
  2108                           ; 1 bytes @ 0xA
  2109                           
  2110  002A                     USART_put_int@value:	
  2111                           ; 1 bytes @ 0xA
  2112                           
  2113  002A                     ___wmul@multiplier:	
  2114                           ; 2 bytes @ 0xA
  2115                           
  2116  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2117                           ; 2 bytes @ 0xA
  2118                           
  2119  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2120                           ; 4 bytes @ 0xA
  2121                           
  2122  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2123                           ; 4 bytes @ 0xA
  2124                           
  2125  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  2126                           ; 4 bytes @ 0xA
  2127                           
  2128                           
  2129                           ; 4 bytes @ 0xA
  2130  002A                     	ds	1
  2131  002B                     ??_utoa:	
  2132  002B                     ?___xxtofl:	
  2133                           ; 1 bytes @ 0xB
  2134                           
  2135  002B                     EEPROM_Write_Integer@i:	
  2136                           ; 4 bytes @ 0xB
  2137                           
  2138  002B                     utoa@v:	
  2139                           ; 1 bytes @ 0xB
  2140                           
  2141  002B                     ___xxtofl@val:	
  2142                           ; 2 bytes @ 0xB
  2143                           
  2144                           
  2145                           ; 4 bytes @ 0xB
  2146  002B                     	ds	1
  2147  002C                     ??_USART_put_int:	
  2148  002C                     ?_frexp:	
  2149                           ; 1 bytes @ 0xC
  2150                           
  2151  002C                     USART_put_int@dado:	
  2152                           ; 4 bytes @ 0xC
  2153                           
  2154  002C                     ___lldiv@counter:	
  2155                           ; 1 bytes @ 0xC
  2156                           
  2157  002C                     ___wmul@multiplicand:	
  2158                           ; 1 bytes @ 0xC
  2159                           
  2160  002C                     frexp@value:	
  2161                           ; 2 bytes @ 0xC
  2162                           
  2163                           
  2164                           ; 4 bytes @ 0xC
  2165  002C                     	ds	1
  2166  002D                     ?_I2C_Master_Init:	
  2167  002D                     ?_PROCULUS_Control_Register_Write:	
  2168                           ; 1 bytes @ 0xD
  2169                           
  2170  002D                     ?_PROCULUS_VP_Write:	
  2171                           ; 1 bytes @ 0xD
  2172                           
  2173  002D                     PROCULUS_Control_Register_Write@size:	
  2174                           ; 1 bytes @ 0xD
  2175                           
  2176  002D                     utoa@c:	
  2177                           ; 1 bytes @ 0xD
  2178                           
  2179  002D                     PROCULUS_VP_Write@vp:	
  2180                           ; 1 bytes @ 0xD
  2181                           
  2182  002D                     I2C_Master_Init@c:	
  2183                           ; 2 bytes @ 0xD
  2184                           
  2185                           
  2186                           ; 4 bytes @ 0xD
  2187  002D                     	ds	1
  2188  002E                     ??_PROCULUS_Control_Register_Write:	
  2189  002E                     ??___wmul:	
  2190                           ; 1 bytes @ 0xE
  2191                           
  2192  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2193                           ; 1 bytes @ 0xE
  2194                           
  2195  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2196                           ; 1 bytes @ 0xE
  2197                           
  2198  002E                     EEPROM_24C1025_Write_Str@data:	
  2199                           ; 1 bytes @ 0xE
  2200                           
  2201  002E                     EEPROM_24C1025_Read_Str@texto:	
  2202                           ; 1 bytes @ 0xE
  2203                           
  2204  002E                     utoa@buf:	
  2205                           ; 1 bytes @ 0xE
  2206                           
  2207  002E                     ___wmul@product:	
  2208                           ; 1 bytes @ 0xE
  2209                           
  2210                           
  2211                           ; 2 bytes @ 0xE
  2212  002E                     	ds	1
  2213  002F                     ?_itoa:	
  2214  002F                     ??_EEPROM_24C1025_Write_Str:	
  2215                           ; 1 bytes @ 0xF
  2216                           
  2217  002F                     ??_EEPROM_24C1025_Read_Str:	
  2218                           ; 1 bytes @ 0xF
  2219                           
  2220  002F                     ??___xxtofl:	
  2221                           ; 1 bytes @ 0xF
  2222                           
  2223  002F                     EEPROM_24C1025_Write_Str@chip_add:	
  2224                           ; 1 bytes @ 0xF
  2225                           
  2226  002F                     PROCULUS_Control_Register_Write@vetor:	
  2227                           ; 1 bytes @ 0xF
  2228                           
  2229  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2230                           ; 1 bytes @ 0xF
  2231                           
  2232  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2233                           ; 2 bytes @ 0xF
  2234                           
  2235  002F                     PROCULUS_VP_Write@vetor:	
  2236                           ; 2 bytes @ 0xF
  2237                           
  2238  002F                     itoa@val:	
  2239                           ; 2 bytes @ 0xF
  2240                           
  2241                           
  2242                           ; 2 bytes @ 0xF
  2243  002F                     	ds	1
  2244  0030                     EEPROM_24C1025_Write_Str@range:	
  2245  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2246                           ; 1 bytes @ 0x10
  2247                           
  2248  0030                     PROCULUS_Control_Register_Write@i:	
  2249                           ; 1 bytes @ 0x10
  2250                           
  2251  0030                     frexp@eptr:	
  2252                           ; 1 bytes @ 0x10
  2253                           
  2254                           
  2255                           ; 1 bytes @ 0x10
  2256  0030                     	ds	1
  2257  0031                     ?_PROCULUS_Show_Screen:	
  2258  0031                     ?_PROCULUS_Buzzer:	
  2259                           ; 1 bytes @ 0x11
  2260                           
  2261  0031                     ??_frexp:	
  2262                           ; 1 bytes @ 0x11
  2263                           
  2264  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2265                           ; 1 bytes @ 0x11
  2266                           
  2267  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  2268                           ; 1 bytes @ 0x11
  2269                           
  2270  0031                     ??_I2C_Master_Init:	
  2271                           ; 1 bytes @ 0x11
  2272                           
  2273  0031                     EEPROM_24C1025_Write_Str@ctrl:	
  2274                           ; 1 bytes @ 0x11
  2275                           
  2276  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2277                           ; 1 bytes @ 0x11
  2278                           
  2279  0031                     PROCULUS_VP_Write@size:	
  2280                           ; 1 bytes @ 0x11
  2281                           
  2282  0031                     PROCULUS_Buzzer@time_ms_x_10:	
  2283                           ; 1 bytes @ 0x11
  2284                           
  2285  0031                     PROCULUS_Show_Screen@screen:	
  2286                           ; 2 bytes @ 0x11
  2287                           
  2288  0031                     itoa@base:	
  2289                           ; 2 bytes @ 0x11
  2290                           
  2291                           
  2292                           ; 2 bytes @ 0x11
  2293  0031                     	ds	1
  2294  0032                     ??_PROCULUS_VP_Write:	
  2295  0032                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2296                           ; 1 bytes @ 0x12
  2297                           
  2298  0032                     EEPROM_24C1025_Read_Str@range:	
  2299                           ; 1 bytes @ 0x12
  2300                           
  2301                           
  2302                           ; 1 bytes @ 0x12
  2303  0032                     	ds	1
  2304  0033                     ??_itoa:	
  2305  0033                     ??_PROCULUS_Show_Screen:	
  2306                           ; 1 bytes @ 0x13
  2307                           
  2308  0033                     ??_PROCULUS_Buzzer:	
  2309                           ; 1 bytes @ 0x13
  2310                           
  2311  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2312                           ; 1 bytes @ 0x13
  2313                           
  2314  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2315                           ; 1 bytes @ 0x13
  2316                           
  2317  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2318                           ; 1 bytes @ 0x13
  2319                           
  2320  0033                     ___xxtofl@sign:	
  2321                           ; 1 bytes @ 0x13
  2322                           
  2323  0033                     PROCULUS_Buzzer@vetor:	
  2324                           ; 1 bytes @ 0x13
  2325                           
  2326  0033                     PROCULUS_Show_Screen@vetor:	
  2327                           ; 2 bytes @ 0x13
  2328                           
  2329                           
  2330                           ; 3 bytes @ 0x13
  2331  0033                     	ds	1
  2332  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2333  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2334                           ; 1 bytes @ 0x14
  2335                           
  2336  0034                     PROCULUS_VP_Write@i:	
  2337                           ; 1 bytes @ 0x14
  2338                           
  2339  0034                     ___xxtofl@exp:	
  2340                           ; 1 bytes @ 0x14
  2341                           
  2342  0034                     itoa@buf:	
  2343                           ; 1 bytes @ 0x14
  2344                           
  2345                           
  2346                           ; 1 bytes @ 0x14
  2347  0034                     	ds	1
  2348  0035                     ?_PROCULUS_VP_Write_String:	
  2349  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2350                           ; 1 bytes @ 0x15
  2351                           
  2352  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2353                           ; 1 bytes @ 0x15
  2354                           
  2355  0035                     PROCULUS_VP_Write_String@vp:	
  2356                           ; 1 bytes @ 0x15
  2357                           
  2358  0035                     ___xxtofl@arg:	
  2359                           ; 2 bytes @ 0x15
  2360                           
  2361                           
  2362                           ; 4 bytes @ 0x15
  2363  0035                     	ds	1
  2364  0036                     ?_EEPROM_24C1025_Read_Byte:	
  2365  0036                     ?_EEPROM_24C1025_Read_Int:	
  2366                           ; 1 bytes @ 0x16
  2367                           
  2368  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2369                           ; 2 bytes @ 0x16
  2370                           
  2371  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2372                           ; 1 bytes @ 0x16
  2373                           
  2374  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2375                           ; 4 bytes @ 0x16
  2376                           
  2377                           
  2378                           ; 4 bytes @ 0x16
  2379  0036                     	ds	1
  2380  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2381  0037                     ?_EEPROM_24C1025_Write_Int:	
  2382                           ; 1 bytes @ 0x17
  2383                           
  2384  0037                     PROCULUS_VP_Write_String@text:	
  2385                           ; 1 bytes @ 0x17
  2386                           
  2387  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2388                           ; 1 bytes @ 0x17
  2389                           
  2390  0037                     EEPROM_24C1025_Write_Int@mem_add:	
  2391                           ; 4 bytes @ 0x17
  2392                           
  2393                           
  2394                           ; 4 bytes @ 0x17
  2395  0037                     	ds	1
  2396  0038                     ??_PROCULUS_VP_Write_String:	
  2397                           
  2398                           ; 1 bytes @ 0x18
  2399  0038                     	ds	1
  2400  0039                     ?___fladd:	
  2401  0039                     ___fladd@b:	
  2402                           ; 4 bytes @ 0x19
  2403                           
  2404                           
  2405                           ; 4 bytes @ 0x19
  2406  0039                     	ds	1
  2407  003A                     ??_EEPROM_24C1025_Read_Byte:	
  2408  003A                     ??_EEPROM_24C1025_Read_Int:	
  2409                           ; 1 bytes @ 0x1A
  2410                           
  2411  003A                     EEPROM_24C1025_Read_Byte@chip_add:	
  2412                           ; 1 bytes @ 0x1A
  2413                           
  2414  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2415                           ; 1 bytes @ 0x1A
  2416                           
  2417                           
  2418                           ; 1 bytes @ 0x1A
  2419  003A                     	ds	1
  2420  003B                     EEPROM_24C1025_Write_Byte@data:	
  2421  003B                     EEPROM_24C1025_Read_Byte@data:	
  2422                           ; 1 bytes @ 0x1B
  2423                           
  2424  003B                     EEPROM_24C1025_Write_Int@data:	
  2425                           ; 1 bytes @ 0x1B
  2426                           
  2427  003B                     EEPROM_24C1025_Read_Int@data:	
  2428                           ; 2 bytes @ 0x1B
  2429                           
  2430                           
  2431                           ; 2 bytes @ 0x1B
  2432  003B                     	ds	1
  2433  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2434  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2435                           ; 1 bytes @ 0x1C
  2436                           
  2437                           
  2438                           ; 1 bytes @ 0x1C
  2439  003C                     	ds	1
  2440  003D                     ??_EEPROM_24C1025_Write_Int:	
  2441  003D                     EEPROM_24C1025_Write_Int@chip_add:	
  2442                           ; 1 bytes @ 0x1D
  2443                           
  2444  003D                     ___fladd@a:	
  2445                           ; 1 bytes @ 0x1D
  2446                           
  2447                           
  2448                           ; 4 bytes @ 0x1D
  2449  003D                     	ds	1
  2450  003E                     EEPROM_24C1025_Write_Int@local:	
  2451                           
  2452                           ; 2 bytes @ 0x1E
  2453  003E                     	ds	2
  2454  0040                     ?_Save_Log:	
  2455  0040                     ?_EEPROM_24C1025_Fill_All:	
  2456                           ; 1 bytes @ 0x20
  2457                           
  2458  0040                     EEPROM_24C1025_Fill_All@value:	
  2459                           ; 1 bytes @ 0x20
  2460                           
  2461  0040                     Save_Log@add_datalog:	
  2462                           ; 2 bytes @ 0x20
  2463                           
  2464                           
  2465                           ; 4 bytes @ 0x20
  2466  0040                     	ds	1
  2467  0041                     ??___fladd:	
  2468                           
  2469                           ; 1 bytes @ 0x21
  2470  0041                     	ds	1
  2471  0042                     ??_EEPROM_24C1025_Fill_All:	
  2472  0042                     EEPROM_24C1025_Fill_All@chip_add:	
  2473                           ; 1 bytes @ 0x22
  2474                           
  2475                           
  2476                           ; 1 bytes @ 0x22
  2477  0042                     	ds	1
  2478  0043                     EEPROM_24C1025_Fill_All@mem_add:	
  2479                           
  2480                           ; 4 bytes @ 0x23
  2481  0043                     	ds	1
  2482  0044                     ??_Save_Log:	
  2483                           
  2484                           ; 1 bytes @ 0x24
  2485  0044                     	ds	5
  2486  0049                     ___fladd@signs:	
  2487                           
  2488                           ; 1 bytes @ 0x29
  2489  0049                     	ds	1
  2490  004A                     ___fladd@aexp:	
  2491                           
  2492                           ; 1 bytes @ 0x2A
  2493  004A                     	ds	1
  2494  004B                     ___fladd@bexp:	
  2495                           
  2496                           ; 1 bytes @ 0x2B
  2497  004B                     	ds	1
  2498  004C                     ___fladd@grs:	
  2499                           
  2500                           ; 1 bytes @ 0x2C
  2501  004C                     	ds	1
  2502  004D                     ?___flsub:	
  2503  004D                     ___flsub@a:	
  2504                           ; 4 bytes @ 0x2D
  2505                           
  2506                           
  2507                           ; 4 bytes @ 0x2D
  2508  004D                     	ds	4
  2509  0051                     ___flsub@b:	
  2510                           
  2511                           ; 4 bytes @ 0x31
  2512  0051                     	ds	4
  2513  0055                     ?___flge:	
  2514  0055                     ??___flsub:	
  2515                           ; 1 bit 
  2516                           
  2517  0055                     ?___flmul:	
  2518                           ; 1 bytes @ 0x35
  2519                           
  2520  0055                     ___flge@ff1:	
  2521                           ; 4 bytes @ 0x35
  2522                           
  2523  0055                     ___flmul@b:	
  2524                           ; 4 bytes @ 0x35
  2525                           
  2526                           
  2527                           ; 4 bytes @ 0x35
  2528  0055                     	ds	4
  2529  0059                     ___flge@ff2:	
  2530  0059                     ___flmul@a:	
  2531                           ; 4 bytes @ 0x39
  2532                           
  2533                           
  2534                           ; 4 bytes @ 0x39
  2535  0059                     	ds	4
  2536  005D                     ??___flge:	
  2537  005D                     ??___flmul:	
  2538                           ; 1 bytes @ 0x3D
  2539                           
  2540                           
  2541                           ; 1 bytes @ 0x3D
  2542  005D                     	ds	4
  2543  0061                     ??_Auto_Relay0:	
  2544  0061                     ??_Auto_Relay1:	
  2545                           ; 1 bytes @ 0x41
  2546                           
  2547  0061                     ___flmul@sign:	
  2548                           ; 1 bytes @ 0x41
  2549                           
  2550                           
  2551                           ; 1 bytes @ 0x41
  2552  0061                     	ds	1
  2553  0062                     ___flmul@aexp:	
  2554                           
  2555                           ; 1 bytes @ 0x42
  2556  0062                     	ds	1
  2557  0063                     ___flmul@bexp:	
  2558                           
  2559                           ; 1 bytes @ 0x43
  2560  0063                     	ds	1
  2561  0064                     ___flmul@grs:	
  2562                           
  2563                           ; 4 bytes @ 0x44
  2564  0064                     	ds	4
  2565  0068                     ___flmul@prod:	
  2566                           
  2567                           ; 4 bytes @ 0x48
  2568  0068                     	ds	4
  2569  006C                     ___flmul@temp:	
  2570                           
  2571                           ; 2 bytes @ 0x4C
  2572  006C                     	ds	2
  2573  006E                     ??_Decodify_Command:	
  2574  006E                     ??_log:	
  2575                           ; 1 bytes @ 0x4E
  2576                           
  2577  006E                     log@exponent:	
  2578                           ; 1 bytes @ 0x4E
  2579                           
  2580                           
  2581                           ; 2 bytes @ 0x4E
  2582  006E                     	ds	2
  2583  0070                     ??_ADC_Read_NTC:	
  2584                           
  2585                           	psect	maintext
  2586  06EC                     __pmaintext:	
  2587                           ; 1 bytes @ 0x50
  2588 ;;
  2589 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2590 ;;
  2591 ;; *************** function _main *****************
  2592 ;; Defined at:
  2593 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  reset           2   77[BANK1 ] unsigned int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : B00/0
  2604 ;;		On exit  : 300/300
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       2       0       0
  2609 ;;      Temps:          0       0       3       0       0
  2610 ;;      Totals:         0       0       5       0       0
  2611 ;;Total ram usage:        5 bytes
  2612 ;; Hardware stack levels required when called:    7
  2613 ;; This function calls:
  2614 ;;		_ADC_init
  2615 ;;		_Auto_Relay0
  2616 ;;		_Auto_Relay1
  2617 ;;		_Decodify_Command
  2618 ;;		_EEPROM_Read_Integer
  2619 ;;		_EEPROM_Write_Integer
  2620 ;;		_I2C_Master_Init
  2621 ;;		_Load_Work
  2622 ;;		_USART_init
  2623 ;;		_mediatemperaturaNTC
  2624 ;;		_my_delay_ms_WDT
  2625 ;; This function is called by:
  2626 ;;		Startup code after reset
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _main
  2632  06EC                     _main:	
  2633  06EC                     l8020:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2636                           
  2637                           
  2638                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2639  06EC  3002               	movlw	2
  2640  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  2641  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  2642  06EF  00EC               	movwf	(??_main^(0+128)+2)
  2643  06F0  3004               	movlw	4
  2644  06F1  00EB               	movwf	(??_main^(0+128)+1)
  2645  06F2  30B9               	movlw	185
  2646  06F3  00EA               	movwf	??_main^(0+128)
  2647  06F4                     u7647:	
  2648  06F4  0BEA               	decfsz	??_main^(0+128),f
  2649  06F5  2EF4               	goto	u7647
  2650  06F6  0BEB               	decfsz	(??_main^(0+128)+1),f
  2651  06F7  2EF4               	goto	u7647
  2652  06F8  0BEC               	decfsz	(??_main^(0+128)+2),f
  2653  06F9  2EF4               	goto	u7647
  2654  06FA  2EFB               	nop2
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2657  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  2658  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  2659  06FD  160F               	bsf	15,4	;volatile
  2660                           
  2661                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2662  06FE  168F               	bsf	15,5	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2665  06FF  170F               	bsf	15,6	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2668  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0701  0185               	clrf	5	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2672  0702  0186               	clrf	6	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2675  0703  0187               	clrf	7	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2678  0704  0189               	clrf	9	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2681  0705  30EF               	movlw	239
  2682  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0707  0085               	movwf	5	;volatile
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2686  0708  300F               	movlw	15
  2687  0709  0086               	movwf	6	;volatile
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2690  070A  30F0               	movlw	240
  2691  070B  0087               	movwf	7	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2694  070C  30FF               	movlw	255
  2695  070D  0089               	movwf	9	;volatile
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2698  070E  3011               	movlw	17
  2699  070F  1703               	bsf	3,6	;RP1=1, select bank3
  2700  0710  0088               	movwf	8	;volatile
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2703  0711  0189               	clrf	9	;volatile
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2706  0712  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0713  1381               	bcf	1,7	;volatile
  2708                           
  2709                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2710  0714  300F               	movlw	15
  2711  0715  0095               	movwf	21	;volatile
  2712                           
  2713                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2714  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0717  1786               	bsf	6,7	;volatile
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2718  0718  1706               	bsf	6,6	;volatile
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2721  0719  1686               	bsf	6,5	;volatile
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2724  071A  3003               	movlw	3
  2725  071B  01A3               	clrf	my_delay_ms_WDT@time+3
  2726  071C  01A2               	clrf	my_delay_ms_WDT@time+2
  2727  071D  00A1               	movwf	my_delay_ms_WDT@time+1
  2728  071E  30E8               	movlw	232
  2729  071F  00A0               	movwf	my_delay_ms_WDT@time
  2730  0720  120A  118A  23AA  120A  118A  	fcall	_my_delay_ms_WDT
  2731                           
  2732                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2733  0725  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0726  1281               	bcf	1,5	;volatile
  2735                           
  2736                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2737  0727  1581               	bsf	1,3	;volatile
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2740  0728  1401               	bsf	1,0	;volatile
  2741                           
  2742                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2743  0729  1481               	bsf	1,1	;volatile
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2746  072A  1501               	bsf	1,2	;volatile
  2747                           
  2748                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2749  072B  128B               	bcf	11,5	;volatile
  2750                           
  2751                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2752  072C  120B               	bcf	11,4	;volatile
  2753                           
  2754                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2755  072D  178B               	bsf	11,7	;volatile
  2756                           
  2757                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2758  072E  170B               	bsf	11,6	;volatile
  2759                           
  2760                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2761  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0730  1610               	bsf	16,4	;volatile
  2763                           
  2764                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2765  0731  1690               	bsf	16,5	;volatile
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2768  0732  1090               	bcf	16,1	;volatile
  2769                           
  2770                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2771  0733  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0734  140C               	bsf	12,0	;volatile
  2773                           
  2774                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2775  0735  3001               	movlw	1
  2776  0736  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0737  0090               	movwf	16	;volatile
  2778  0738  0064               	clrwdt	;# 
  2779                           
  2780                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2781  0739  120A  158A  2004  120A  118A  	fcall	_ADC_init
  2782                           
  2783                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2784  073E  3001               	movlw	1
  2785  073F  01B0               	clrf	I2C_Master_Init@c+3
  2786  0740  00AF               	movwf	I2C_Master_Init@c+2
  2787  0741  3086               	movlw	134
  2788  0742  00AE               	movwf	I2C_Master_Init@c+1
  2789  0743  30A0               	movlw	160
  2790  0744  00AD               	movwf	I2C_Master_Init@c
  2791  0745  160A  158A  25AC  120A  118A  	fcall	_I2C_Master_Init
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2794  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2795  074B  3001               	movlw	1
  2796  074C  01A3               	clrf	USART_init@baudrate+3
  2797  074D  00A2               	movwf	USART_init@baudrate+2
  2798  074E  30C2               	movlw	194
  2799  074F  00A1               	movwf	USART_init@baudrate+1
  2800  0750  01A0               	clrf	USART_init@baudrate
  2801  0751  160A  158A  24B5  120A  118A  	fcall	_USART_init
  2802                           
  2803                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2804  0756  3010               	movlw	16
  2805  0757  120A  158A  26E9  120A  118A  	fcall	_EEPROM_Read_Integer
  2806  075C  0824               	movf	?_EEPROM_Read_Integer+1,w
  2807  075D  1683               	bsf	3,5	;RP0=1, select bank1
  2808  075E  00EE               	movwf	(main@reset+1)^(0+128)
  2809  075F  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0760  0823               	movf	?_EEPROM_Read_Integer,w
  2811  0761  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0762  00ED               	movwf	main@reset^(0+128)
  2813                           
  2814                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2815  0763  0F6D               	incfsz	main@reset^(0+128),w
  2816  0764  2F71               	goto	l8090
  2817  0765  0A6E               	incf	(main@reset+1)^(0+128),w
  2818  0766  1D03               	btfss	3,2
  2819  0767  2F71               	goto	l8090
  2820  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0769  3010               	movlw	16
  2822  076A  01A5               	clrf	EEPROM_Write_Integer@dado
  2823  076B  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2824  076C  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2825  0771                     l8090:	
  2826                           
  2827                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2828  0771  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0772  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0773  0AED               	incf	main@reset^(0+128),f
  2831  0774  1903               	skipnz
  2832  0775  0AEE               	incf	(main@reset+1)^(0+128),f
  2833                           
  2834                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2835  0776  086E               	movf	(main@reset+1)^(0+128),w
  2836  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0778  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2838  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2839  077A  086D               	movf	main@reset^(0+128),w
  2840  077B  1283               	bcf	3,5	;RP0=0, select bank0
  2841  077C  00A5               	movwf	EEPROM_Write_Integer@dado
  2842  077D  3010               	movlw	16
  2843  077E  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2844                           
  2845                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2846  0783  1683               	bsf	3,5	;RP0=1, select bank3
  2847  0784  1703               	bsf	3,6	;RP1=1, select bank3
  2848  0785  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2849  0786  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2850                           
  2851                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2852  0787  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2853  0788  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2854                           
  2855                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2856  0789  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2857  078A  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2858                           
  2859                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2860  078B  01F6               	clrf	_segundo	;volatile
  2861                           
  2862                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2863  078C  01F5               	clrf	_hora	;volatile
  2864                           
  2865                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2866  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2867  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2868  078F  1007               	bcf	7,0	;volatile
  2869                           
  2870                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2871  0790  1087               	bcf	7,1	;volatile
  2872                           
  2873                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2874  0791  1105               	bcf	5,2	;volatile
  2875                           
  2876                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2877  0792  1185               	bcf	5,3	;volatile
  2878                           
  2879                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2880  0793  0906               	comf	6,w	;volatile
  2881  0794  1683               	bsf	3,5	;RP0=1, select bank3
  2882  0795  1703               	bsf	3,6	;RP1=1, select bank3
  2883  0796  00B4               	movwf	_Board_Number^(0+384)
  2884  0797  300F               	movlw	15
  2885  0798  05B4               	andwf	_Board_Number^(0+384),f
  2886                           
  2887                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2888  0799  01B5               	clrf	_canal^(0+384)
  2889  079A  0AB5               	incf	_canal^(0+384),f
  2890                           
  2891                           ;SlaveLiofilizadorVer1.c: 239:      Load_Work();
  2892  079B  120A  158A  25F0  120A  118A  	fcall	_Load_Work
  2893                           
  2894                           ;SlaveLiofilizadorVer1.c: 240:      generic_status.flag_global_hot=0;
  2895  07A0  1683               	bsf	3,5	;RP0=1, select bank3
  2896  07A1  133C               	bcf	_generic_status^(0+384),6
  2897  07A2                     l8120:	
  2898  07A2  3002               	movlw	2
  2899                           
  2900                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2901  07A3  17BC               	bsf	_generic_status^(0+384),7
  2902  07A4  0AB5               	incf	_canal^(0+384),f
  2903  07A5  0635               	xorwf	_canal^(0+384),w
  2904  07A6  1903               	btfsc	3,2
  2905  07A7  01B5               	clrf	_canal^(0+384)
  2906                           
  2907                           ;SlaveLiofilizadorVer1.c: 254:          mediatemperaturaNTC(canal);
  2908  07A8  0835               	movf	_canal^(0+384),w
  2909  07A9  160A  118A  2010  120A  118A  	fcall	_mediatemperaturaNTC
  2910                           
  2911                           ;SlaveLiofilizadorVer1.c: 257:          if(generic_status.flag_global_hot)
  2912  07AE  1703               	bsf	3,6	;RP1=1, select bank3
  2913  07AF  1F3C               	btfss	_generic_status^(0+384),6
  2914  07B0  2FBC               	goto	l420
  2915                           
  2916                           ;SlaveLiofilizadorVer1.c: 258:             {;SlaveLiofilizadorVer1.c: 259:              
      +                          Auto_Relay0();
  2917  07B1  120A  118A  2432  120A  118A  	fcall	_Auto_Relay0
  2918                           
  2919                           ;SlaveLiofilizadorVer1.c: 260:              Auto_Relay1();
  2920  07B6  120A  118A  248B  120A  118A  	fcall	_Auto_Relay1
  2921                           
  2922                           ;SlaveLiofilizadorVer1.c: 261:             }
  2923  07BB  2FC0               	goto	l421
  2924  07BC                     l420:	
  2925                           ;SlaveLiofilizadorVer1.c: 262:          else
  2926                           
  2927                           
  2928                           ;SlaveLiofilizadorVer1.c: 263:             {;SlaveLiofilizadorVer1.c: 264:             P
      +                          ORTCbits.RC0=0;
  2929  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2930  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2931  07BE  1007               	bcf	7,0	;volatile
  2932                           
  2933                           ;SlaveLiofilizadorVer1.c: 265:             PORTCbits.RC1=0;
  2934  07BF  1087               	bcf	7,1	;volatile
  2935  07C0                     l421:	
  2936                           ;SlaveLiofilizadorVer1.c: 266:             }
  2937                           
  2938                           
  2939                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2940  07C0  1683               	bsf	3,5	;RP0=1, select bank3
  2941  07C1  1703               	bsf	3,6	;RP1=1, select bank3
  2942  07C2  1C3C               	btfss	_generic_status^(0+384),0
  2943  07C3  2FA2               	goto	l8120
  2944                           
  2945                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2946  07C4  1283               	bcf	3,5	;RP0=0, select bank2
  2947  07C5  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2948  07C6  1683               	bsf	3,5	;RP0=1, select bank3
  2949  07C7  00A5               	movwf	(_header+1)^(0+384)
  2950  07C8  1283               	bcf	3,5	;RP0=0, select bank2
  2951  07C9  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2952  07CA  1683               	bsf	3,5	;RP0=1, select bank3
  2953  07CB  00A4               	movwf	_header^(0+384)
  2954                           
  2955                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2956  07CC  3ABB               	xorlw	187
  2957  07CD  30AA               	movlw	170
  2958  07CE  1903               	skipnz
  2959  07CF  0625               	xorwf	(_header+1)^(0+384),w
  2960  07D0  1D03               	btfss	3,2
  2961  07D1  2FA2               	goto	l8120
  2962                           
  2963                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2964  07D2  1283               	bcf	3,5	;RP0=0, select bank2
  2965  07D3  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2966  07D4  1683               	bsf	3,5	;RP0=1, select bank3
  2967  07D5  00B3               	movwf	_destino^(0+384)
  2968                           
  2969                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2970  07D6  0634               	xorwf	_Board_Number^(0+384),w
  2971  07D7  1903               	skipnz
  2972  07D8  2FDB               	goto	l8140
  2973  07D9  0F33               	incfsz	_destino^(0+384),w
  2974  07DA  2FA2               	goto	l8120
  2975  07DB                     l8140:	
  2976                           
  2977                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2978  07DB  3014               	movlw	20
  2979  07DC  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2980  07DD  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2981                           
  2982                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2983  07DE  120A  158A  2045  120A  118A  	fcall	_Decodify_Command
  2984                           
  2985                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2986  07E3  1683               	bsf	3,5	;RP0=1, select bank3
  2987  07E4  1703               	bsf	3,6	;RP1=1, select bank3
  2988  07E5  103C               	bcf	_generic_status^(0+384),0
  2989                           
  2990                           ;SlaveLiofilizadorVer1.c: 297:             }
  2991  07E6  2FA2               	goto	l8120
  2992  07E7                     __end_of_main:	
  2993                           
  2994                           	psect	text1
  2995  1010                     __ptext1:	
  2996 ;; *************** function _mediatemperaturaNTC *****************
  2997 ;; Defined at:
  2998 ;;		line 680 in file "SlaveLiofilizadorVer1.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  canal           1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  canal           1   52[BANK1 ] unsigned char 
  3003 ;;  Temp            4   53[BANK1 ] float 
  3004 ;;  i               1   57[BANK1 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 300/300
  3011 ;;		On exit  : 100/100
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         0       0      10       0       0
  3016 ;;      Temps:          0       0       1       0       0
  3017 ;;      Totals:         0       0      11       0       0
  3018 ;;Total ram usage:       11 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    6
  3021 ;; This function calls:
  3022 ;;		_ADC_Read_NTC
  3023 ;;		_Package_Usart_is_for_me
  3024 ;;		_Rele0Ligado
  3025 ;;		_Rele1Ligado
  3026 ;;		___fladd
  3027 ;;		___fldiv
  3028 ;;		___xxtofl
  3029 ;;		_my_delay_ms
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _mediatemperaturaNTC
  3037  1010                     _mediatemperaturaNTC:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3041                           ;mediatemperaturaNTC@canal stored from wreg
  3042  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3043  1011  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3044                           
  3045                           ;SlaveLiofilizadorVer1.c: 680: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 681:      {;SlaveLiofilizadorVer1.c: 682:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 683:      char i;;SlaveLiofilizadorVer1.c: 685:      ADCON0bits.CHS=canal;
  3046  1012  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3047  1013  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3048  1014  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3049  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3050  1016  081F               	movf	31,w	;volatile
  3051  1017  1683               	bsf	3,5	;RP0=1, select bank1
  3052  1018  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3053  1019  39C3               	andlw	-61
  3054  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3055  101B  1283               	bcf	3,5	;RP0=0, select bank0
  3056  101C  009F               	movwf	31	;volatile
  3057                           
  3058                           ;SlaveLiofilizadorVer1.c: 686:      my_delay_ms(1);
  3059  101D  01A0               	clrf	my_delay_ms@time
  3060  101E  0AA0               	incf	my_delay_ms@time,f
  3061  101F  01A1               	clrf	my_delay_ms@time+1
  3062  1020  01A2               	clrf	my_delay_ms@time+2
  3063  1021  01A3               	clrf	my_delay_ms@time+3
  3064  1022  27D4  160A  118A   	fcall	_my_delay_ms
  3065                           
  3066                           ;SlaveLiofilizadorVer1.c: 688:      Temp=0;
  3067  1025  1683               	bsf	3,5	;RP0=1, select bank1
  3068  1026  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3069  1027  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3070  1028  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3071  1029  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3072                           
  3073                           ;SlaveLiofilizadorVer1.c: 690:      for(i=1;i<15;i++)
  3074  102A  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3075  102B  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3076  102C                     l7698:	
  3077                           
  3078                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3079  102C  2337  160A  118A   	fcall	_ADC_Read_NTC
  3080  102F  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3081  1030  00D3               	movwf	(_mediatemperaturaNTC$2336+3)^(0+128)
  3082  1031  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3083  1032  00D2               	movwf	(_mediatemperaturaNTC$2336+2)^(0+128)
  3084  1033  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3085  1034  00D1               	movwf	(_mediatemperaturaNTC$2336+1)^(0+128)
  3086  1035  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3087  1036  00D0               	movwf	_mediatemperaturaNTC$2336^(0+128)
  3088                           
  3089                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3090  1037  0853               	movf	(_mediatemperaturaNTC$2336+3)^(0+128),w
  3091  1038  1283               	bcf	3,5	;RP0=0, select bank0
  3092  1039  00BC               	movwf	___fladd@b+3
  3093  103A  1683               	bsf	3,5	;RP0=1, select bank1
  3094  103B  0852               	movf	(_mediatemperaturaNTC$2336+2)^(0+128),w
  3095  103C  1283               	bcf	3,5	;RP0=0, select bank0
  3096  103D  00BB               	movwf	___fladd@b+2
  3097  103E  1683               	bsf	3,5	;RP0=1, select bank1
  3098  103F  0851               	movf	(_mediatemperaturaNTC$2336+1)^(0+128),w
  3099  1040  1283               	bcf	3,5	;RP0=0, select bank0
  3100  1041  00BA               	movwf	___fladd@b+1
  3101  1042  1683               	bsf	3,5	;RP0=1, select bank1
  3102  1043  0850               	movf	_mediatemperaturaNTC$2336^(0+128),w
  3103  1044  1283               	bcf	3,5	;RP0=0, select bank0
  3104  1045  00B9               	movwf	___fladd@b
  3105  1046  1683               	bsf	3,5	;RP0=1, select bank1
  3106  1047  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3107  1048  1283               	bcf	3,5	;RP0=0, select bank0
  3108  1049  00C0               	movwf	___fladd@a+3
  3109  104A  1683               	bsf	3,5	;RP0=1, select bank1
  3110  104B  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3111  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3112  104D  00BF               	movwf	___fladd@a+2
  3113  104E  1683               	bsf	3,5	;RP0=1, select bank1
  3114  104F  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3115  1050  1283               	bcf	3,5	;RP0=0, select bank0
  3116  1051  00BE               	movwf	___fladd@a+1
  3117  1052  1683               	bsf	3,5	;RP0=1, select bank1
  3118  1053  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3119  1054  1283               	bcf	3,5	;RP0=0, select bank0
  3120  1055  00BD               	movwf	___fladd@a
  3121  1056  21C8  160A  118A   	fcall	___fladd
  3122  1059  083C               	movf	?___fladd+3,w
  3123  105A  1683               	bsf	3,5	;RP0=1, select bank1
  3124  105B  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3125  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3126  105D  083B               	movf	?___fladd+2,w
  3127  105E  1683               	bsf	3,5	;RP0=1, select bank1
  3128  105F  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3129  1060  1283               	bcf	3,5	;RP0=0, select bank0
  3130  1061  083A               	movf	?___fladd+1,w
  3131  1062  1683               	bsf	3,5	;RP0=1, select bank1
  3132  1063  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3133  1064  1283               	bcf	3,5	;RP0=0, select bank0
  3134  1065  0839               	movf	?___fladd,w
  3135  1066  1683               	bsf	3,5	;RP0=1, select bank1
  3136  1067  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3137                           
  3138                           ;SlaveLiofilizadorVer1.c: 693:          if(Package_Usart_is_for_me()==1) break;
  3139  1068  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3140  106B  3A01               	xorlw	1
  3141  106C  1903               	btfsc	3,2
  3142  106D  2895               	goto	l7726
  3143                           
  3144                           ;SlaveLiofilizadorVer1.c: 695:          if(generic_status.flag_global_hot)
  3145  106E  1683               	bsf	3,5	;RP0=1, select bank3
  3146  106F  1703               	bsf	3,6	;RP1=1, select bank3
  3147  1070  1F3C               	btfss	_generic_status^(0+384),6
  3148  1071  288E               	goto	l7722
  3149                           
  3150                           ;SlaveLiofilizadorVer1.c: 696:            {;SlaveLiofilizadorVer1.c: 698:            if(
      +                          (TempoCNT_0==0)&&
  3151  1072  1303               	bcf	3,6	;RP1=0, select bank1
  3152  1073  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3153  1074  1D03               	btfss	3,2
  3154  1075  2880               	goto	l7714
  3155  1076  1703               	bsf	3,6	;RP1=1, select bank3
  3156  1077  0B5E               	decfsz	_RL0Status^(0+384),w
  3157  1078  2880               	goto	l7714
  3158  1079  0328               	decf	_Status0^(0+384),w
  3159  107A  0429               	iorwf	(_Status0+1)^(0+384),w
  3160  107B  1D03               	btfss	3,2
  3161  107C  2880               	goto	l7714
  3162                           
  3163                           ;SlaveLiofilizadorVer1.c: 700:               (Status0==1)) Rele0Ligado();
  3164  107D  20F0  160A  118A   	fcall	_Rele0Ligado
  3165  1080                     l7714:	
  3166                           
  3167                           ;SlaveLiofilizadorVer1.c: 702:            if((TempoCNT_1==0)&&
  3168  1080  0874               	movf	_TempoCNT_1,w	;volatile
  3169  1081  1D03               	btfss	3,2
  3170  1082  288E               	goto	l7722
  3171  1083  1683               	bsf	3,5	;RP0=1, select bank3
  3172  1084  1703               	bsf	3,6	;RP1=1, select bank3
  3173  1085  0B5D               	decfsz	_RL1Status^(0+384),w
  3174  1086  288E               	goto	l7722
  3175  1087  0326               	decf	_Status1^(0+384),w
  3176  1088  0427               	iorwf	(_Status1+1)^(0+384),w
  3177  1089  1D03               	btfss	3,2
  3178  108A  288E               	goto	l7722
  3179                           
  3180                           ;SlaveLiofilizadorVer1.c: 704:               (Status1==1)) Rele1Ligado();
  3181  108B  2107  160A  118A   	fcall	_Rele1Ligado
  3182  108E                     l7722:	
  3183                           
  3184                           ;SlaveLiofilizadorVer1.c: 707:          }
  3185  108E  1683               	bsf	3,5	;RP0=1, select bank1
  3186  108F  1303               	bcf	3,6	;RP1=0, select bank1
  3187  1090  300F               	movlw	15
  3188  1091  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3189  1092  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3190  1093  1C03               	skipc
  3191  1094  282C               	goto	l7698
  3192  1095                     l7726:	
  3193                           
  3194                           ;SlaveLiofilizadorVer1.c: 708:      if(i<10)
  3195  1095  300A               	movlw	10
  3196  1096  1683               	bsf	3,5	;RP0=1, select bank1
  3197  1097  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3198  1098  1C03               	btfss	3,0
  3199  1099  0008               	return
  3200                           
  3201                           ;SlaveLiofilizadorVer1.c: 713:      if(i==15)
  3202  109A  300F               	movlw	15
  3203  109B  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3204  109C  1D03               	btfss	3,2
  3205  109D  28AD               	goto	l7734
  3206                           
  3207                           ;SlaveLiofilizadorVer1.c: 714:         Temp/=(i-1);
  3208  109E  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3209  109F  3EFF               	addlw	255
  3210  10A0  1283               	bcf	3,5	;RP0=0, select bank0
  3211  10A1  00AB               	movwf	___xxtofl@val
  3212  10A2  30FF               	movlw	255
  3213  10A3  1803               	skipnc
  3214  10A4  3000               	movlw	0
  3215  10A5  00AC               	movwf	___xxtofl@val+1
  3216  10A6  01AD               	clrf	___xxtofl@val+2
  3217  10A7  1BAC               	btfsc	___xxtofl@val+1,7
  3218  10A8  03AD               	decf	___xxtofl@val+2,f
  3219  10A9  082D               	movf	___xxtofl@val+2,w
  3220  10AA  00AE               	movwf	___xxtofl@val+3
  3221  10AB  3001               	movlw	1
  3222  10AC  28B4               	goto	L1
  3223  10AD                     l7734:	
  3224                           
  3225                           ;SlaveLiofilizadorVer1.c: 716:         Temp/=(i);
  3226  10AD  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3227  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3228  10AF  120A  118A  25CF  160A  118A  	fcall	PL66	;call to abstracted procedure
  3229  10B4                     L1:	
  3230  10B4  24A9  160A  118A   	fcall	___xxtofl
  3231  10B7  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3232  10BA  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3233  10BB  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3234  10BC  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3235  10BD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3236  10BE  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3237  10BF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3238  10C0  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3239  10C1  00A4               	movwf	___fldiv@b^(0+128)
  3240  10C2  2517  160A  118A   	fcall	___fldiv
  3241  10C5  0823               	movf	(?___fldiv+3)^(0+128),w
  3242  10C6  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3243  10C7  0822               	movf	(?___fldiv+2)^(0+128),w
  3244  10C8  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3245  10C9  0821               	movf	(?___fldiv+1)^(0+128),w
  3246  10CA  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3247  10CB  0820               	movf	?___fldiv^(0+128),w
  3248  10CC  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3249                           
  3250                           ;SlaveLiofilizadorVer1.c: 718:      if(canal==0)
  3251  10CD  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3252  10CE  1D03               	btfss	3,2
  3253  10CF  28E0               	goto	l7740
  3254                           
  3255                           ;SlaveLiofilizadorVer1.c: 719:         {;SlaveLiofilizadorVer1.c: 720:         Temperatu
      +                          ra0=Temp;
  3256  10D0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3257  10D1  1703               	bsf	3,6	;RP1=1, select bank3
  3258  10D2  0097               	movwf	(_Temperatura0+3)^(0+384)
  3259  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  3260  10D4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3261  10D5  1703               	bsf	3,6	;RP1=1, select bank3
  3262  10D6  0096               	movwf	(_Temperatura0+2)^(0+384)
  3263  10D7  1303               	bcf	3,6	;RP1=0, select bank1
  3264  10D8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3265  10D9  1703               	bsf	3,6	;RP1=1, select bank3
  3266  10DA  0095               	movwf	(_Temperatura0+1)^(0+384)
  3267  10DB  1303               	bcf	3,6	;RP1=0, select bank1
  3268  10DC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3269  10DD  1703               	bsf	3,6	;RP1=1, select bank3
  3270  10DE  0094               	movwf	_Temperatura0^(0+384)
  3271                           
  3272                           ;SlaveLiofilizadorVer1.c: 721:         }
  3273  10DF  0008               	return
  3274  10E0                     l7740:	
  3275                           
  3276                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra1=Temp;
  3277  10E0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3278  10E1  1703               	bsf	3,6	;RP1=1, select bank3
  3279  10E2  0093               	movwf	(_Temperatura1+3)^(0+384)
  3280  10E3  1303               	bcf	3,6	;RP1=0, select bank1
  3281  10E4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3282  10E5  1703               	bsf	3,6	;RP1=1, select bank3
  3283  10E6  0092               	movwf	(_Temperatura1+2)^(0+384)
  3284  10E7  1303               	bcf	3,6	;RP1=0, select bank1
  3285  10E8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3286  10E9  1703               	bsf	3,6	;RP1=1, select bank3
  3287  10EA  0091               	movwf	(_Temperatura1+1)^(0+384)
  3288  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3289  10EC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3290  10ED  1703               	bsf	3,6	;RP1=1, select bank3
  3291  10EE  0090               	movwf	_Temperatura1^(0+384)
  3292  10EF  0008               	return
  3293  10F0                     __end_of_mediatemperaturaNTC:	
  3294  10F0                     __ptext71:	
  3295 ;; *************** function _Rele0Ligado *****************
  3296 ;; Defined at:
  3297 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 300/300
  3308 ;;		On exit  : 200/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_mediatemperaturaNTC
  3322 ;;		_Auto_Relay0
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _Rele0Ligado
  3328  10F0                     _Rele0Ligado:	
  3329  10F0                     l7562:	
  3330                           ;incstack = 0
  3331                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3332                           
  3333                           
  3334                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3335  10F0  1303               	bcf	3,6	;RP1=0, select bank1
  3336  10F1  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3337  10F2  1D03               	btfss	3,2
  3338  10F3  0008               	return
  3339                           
  3340                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3341  10F4  1283               	bcf	3,5	;RP0=0, select bank0
  3342  10F5  1807               	btfsc	7,0	;volatile
  3343  10F6  28FF               	goto	l7570
  3344                           
  3345                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoON_0;
  3346  10F7  1683               	bsf	3,5	;RP0=1, select bank3
  3347  10F8  1703               	bsf	3,6	;RP1=1, select bank3
  3348  10F9  083A               	movf	_TempoON_0^(0+384),w
  3349  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  3350  10FB  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3351                           
  3352                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=1;
  3353  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  3354  10FD  1407               	bsf	7,0	;volatile
  3355                           
  3356                           ;SlaveLiofilizadorVer1.c: 948:               }
  3357  10FE  0008               	return
  3358  10FF                     l7570:	
  3359                           
  3360                           ;SlaveLiofilizadorVer1.c: 950:               {;SlaveLiofilizadorVer1.c: 951:            
      +                             TempoCNT_0=TempoOFF_0;
  3361  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3362  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3363  1101  0839               	movf	_TempoOFF_0^(0+384),w
  3364  1102  1303               	bcf	3,6	;RP1=0, select bank1
  3365  1103  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3366                           
  3367                           ;SlaveLiofilizadorVer1.c: 952:               PORTCbits.RC0=0;
  3368  1104  1283               	bcf	3,5	;RP0=0, select bank0
  3369  1105  1007               	bcf	7,0	;volatile
  3370  1106  0008               	return
  3371  1107                     __end_of_Rele0Ligado:	
  3372  1107                     __ptext65:	
  3373 ;; *************** function _Rele1Ligado *****************
  3374 ;; Defined at:
  3375 ;;		line 958 in file "SlaveLiofilizadorVer1.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/300
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_mediatemperaturaNTC
  3400 ;;		_Auto_Relay1
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _Rele1Ligado
  3406  1107                     _Rele1Ligado:	
  3407  1107                     l7574:	
  3408                           ;incstack = 0
  3409                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3410                           
  3411                           
  3412                           ;SlaveLiofilizadorVer1.c: 961:         if(TempoCNT_1==0)
  3413  1107  0874               	movf	_TempoCNT_1,w	;volatile
  3414  1108  1D03               	btfss	3,2
  3415  1109  0008               	return
  3416                           
  3417                           ;SlaveLiofilizadorVer1.c: 962:             {;SlaveLiofilizadorVer1.c: 965:             i
      +                          f(PORTCbits.RC1==0)
  3418  110A  1283               	bcf	3,5	;RP0=0, select bank0
  3419  110B  1303               	bcf	3,6	;RP1=0, select bank0
  3420  110C  1887               	btfsc	7,1	;volatile
  3421  110D  2916               	goto	l7582
  3422                           
  3423                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoON_1;
  3424  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3425  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3426  1110  0837               	movf	_TempoON_1^(0+384),w
  3427  1111  00F4               	movwf	_TempoCNT_1	;volatile
  3428                           
  3429                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=1;
  3430  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3431  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3432  1114  1487               	bsf	7,1	;volatile
  3433                           
  3434                           ;SlaveLiofilizadorVer1.c: 969:               }
  3435  1115  0008               	return
  3436  1116                     l7582:	
  3437                           
  3438                           ;SlaveLiofilizadorVer1.c: 971:               {;SlaveLiofilizadorVer1.c: 972:            
      +                             TempoCNT_1=TempoOFF_1;
  3439  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3440  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3441  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3442  1119  00F4               	movwf	_TempoCNT_1	;volatile
  3443                           
  3444                           ;SlaveLiofilizadorVer1.c: 973:               PORTCbits.RC1=0;
  3445  111A  1283               	bcf	3,5	;RP0=0, select bank0
  3446  111B  1303               	bcf	3,6	;RP1=0, select bank0
  3447  111C  1087               	bcf	7,1	;volatile
  3448  111D  0008               	return
  3449  111E                     __end_of_Rele1Ligado:	
  3450  111E                     __ptext8:	
  3451 ;; *************** function _eval_poly *****************
  3452 ;; Defined at:
  3453 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  x               4    0[BANK1 ] PTR int 
  3456 ;;  d               1    4[BANK1 ] PTR const 
  3457 ;;		 -> log@coeff(36), 
  3458 ;;  n               2    5[BANK1 ] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  res             4   12[BANK1 ] int 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  4    0[BANK1 ] int 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 300/100
  3467 ;;		On exit  : 300/100
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       0       7       0       0
  3471 ;;      Locals:         0       0       4       0       0
  3472 ;;      Temps:          0       0       5       0       0
  3473 ;;      Totals:         0       0      16       0       0
  3474 ;;Total ram usage:       16 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    3
  3477 ;; This function calls:
  3478 ;;		___fladd
  3479 ;;		___flmul
  3480 ;; This function is called by:
  3481 ;;		_log
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           
  3486                           ;psect for function _eval_poly
  3487  111E                     _eval_poly:	
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3491  111E  0825               	movf	eval_poly@n^(0+128),w
  3492  111F  00A7               	movwf	??_eval_poly^(0+128)
  3493  1120  3001               	movlw	1
  3494  1121  1003               	clrc
  3495  1122                     L2:	
  3496  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3497  1123  3EFF               	addlw	-1
  3498  1124  1003               	clrc
  3499  1125  1D03               	skipz
  3500  1126  2922               	goto	L2
  3501  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3502  1128  0724               	addwf	eval_poly@d^(0+128),w
  3503  1129  0084               	movwf	4
  3504  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3505  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3506  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3507  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3508  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3509  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3510  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3511  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3512  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3513  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3514  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3515  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3516  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3517  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3518  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3519  1149                     L4:	
  3520  1149  00AC               	movwf	eval_poly@res^(0+128)
  3521  114A  0825               	movf	eval_poly@n^(0+128),w
  3522  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3523  114C  1903               	btfsc	3,2
  3524  114D  29BF               	goto	l6694
  3525  114E  30FF               	movlw	-1
  3526  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3527  1150  1C03               	skipc
  3528  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3529  1152  0825               	movf	eval_poly@n^(0+128),w
  3530  1153  00A7               	movwf	??_eval_poly^(0+128)
  3531  1154  3001               	movlw	1
  3532  1155  1003               	clrc
  3533  1156                     L3:	
  3534  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3535  1157  3EFF               	addlw	-1
  3536  1158  1003               	clrc
  3537  1159  1D03               	skipz
  3538  115A  2956               	goto	L3
  3539  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3540  115C  0724               	addwf	eval_poly@d^(0+128),w
  3541  115D  0084               	movwf	4
  3542  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3543  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3544  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3545  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3546  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3547  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3548  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3549  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3550  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3551  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3552  1178  00BC               	movwf	___fladd@b+3
  3553  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3554  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3555  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3556  117C  00BB               	movwf	___fladd@b+2
  3557  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3558  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3559  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3560  1180  00BA               	movwf	___fladd@b+1
  3561  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3562  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3563  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3564  1184  00B9               	movwf	___fladd@b
  3565  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3566  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3567  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3568  1188  00D8               	movwf	___flmul@b+3
  3569  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3570  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3571  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3572  118C  00D7               	movwf	___flmul@b+2
  3573  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3574  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3575  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3576  1190  00D6               	movwf	___flmul@b+1
  3577  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3578  1192  082C               	movf	eval_poly@res^(0+128),w
  3579  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3580  1194  00D5               	movwf	___flmul@b
  3581  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3582  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3583  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3584  1198  00DC               	movwf	___flmul@a+3
  3585  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3586  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3587  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3588  119C  00DB               	movwf	___flmul@a+2
  3589  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3590  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3591  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3592  11A0  00DA               	movwf	___flmul@a+1
  3593  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3594  11A2  0820               	movf	eval_poly@x^(0+128),w
  3595  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3596  11A4  00D9               	movwf	___flmul@a
  3597  11A5  120A  158A  23DC  160A  118A  	fcall	___flmul
  3598  11AA  278F  160A  118A   	fcall	PL26	;call to abstracted procedure
  3599  11AD  21C8  160A  118A   	fcall	___fladd
  3600  11B0  083C               	movf	?___fladd+3,w
  3601  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3602  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3603  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3604  11B4  083B               	movf	?___fladd+2,w
  3605  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3606  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3607  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3608  11B8  083A               	movf	?___fladd+1,w
  3609  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3610  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3611  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3612  11BC  0839               	movf	?___fladd,w
  3613  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3614  11BE  2949               	goto	L4
  3615  11BF                     l6694:	
  3616  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3617  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3618  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3619  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3620  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3621  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3622  11C5  082C               	movf	eval_poly@res^(0+128),w
  3623  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3624  11C7  0008               	return
  3625  11C8                     __end_of_eval_poly:	
  3626  11C8                     __ptext69:	
  3627 ;; *************** function ___fladd *****************
  3628 ;; Defined at:
  3629 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  b               4   25[BANK0 ] void 
  3632 ;;  a               4   29[BANK0 ] void 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  grs             1   44[BANK0 ] unsigned char 
  3635 ;;  bexp            1   43[BANK0 ] unsigned char 
  3636 ;;  aexp            1   42[BANK0 ] unsigned char 
  3637 ;;  signs           1   41[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  4   25[BANK0 ] unsigned char 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, btemp+1
  3642 ;; Tracked objects:
  3643 ;;		On entry : 300/0
  3644 ;;		On exit  : 300/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       8       0       0       0
  3648 ;;      Locals:         0       4       0       0       0
  3649 ;;      Temps:          0       8       0       0       0
  3650 ;;      Totals:         0      20       0       0       0
  3651 ;;Total ram usage:       20 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_mediatemperaturaNTC
  3658 ;;		_ADC_Read_NTC
  3659 ;;		___flsub
  3660 ;;		_log
  3661 ;;		_eval_poly
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function ___fladd
  3667  11C8                     ___fladd:	
  3668                           
  3669                           ;incstack = 0
  3670                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3671  11C8  083C               	movf	___fladd@b+3,w
  3672  11C9  00C9               	movwf	___fladd@signs
  3673  11CA  3080               	movlw	128
  3674  11CB  05C9               	andwf	___fladd@signs,f
  3675  11CC  1003               	clrc
  3676  11CD  0D3C               	rlf	___fladd@b+3,w
  3677  11CE  00CB               	movwf	___fladd@bexp
  3678  11CF  1BBB               	btfsc	___fladd@b+2,7
  3679  11D0  144B               	bsf	___fladd@bexp,0
  3680  11D1  084B               	movf	___fladd@bexp,w
  3681  11D2  1903               	btfsc	3,2
  3682  11D3  29DC               	goto	l1325
  3683  11D4  0F4B               	incfsz	___fladd@bexp,w
  3684  11D5  29DA               	goto	l1326
  3685  11D6  01B9               	clrf	___fladd@b
  3686  11D7  01BA               	clrf	___fladd@b+1
  3687  11D8  01BB               	clrf	___fladd@b+2
  3688  11D9  01BC               	clrf	___fladd@b+3
  3689  11DA                     l1326:	
  3690  11DA  17BB               	bsf	___fladd@b+2,7
  3691  11DB  29DF               	goto	L19
  3692  11DC                     l1325:	
  3693  11DC  01B9               	clrf	___fladd@b
  3694  11DD  01BA               	clrf	___fladd@b+1
  3695  11DE  01BB               	clrf	___fladd@b+2
  3696  11DF                     L19:	
  3697  11DF  01BC               	clrf	___fladd@b+3
  3698  11E0  0840               	movf	___fladd@a+3,w
  3699  11E1  00CA               	movwf	___fladd@aexp
  3700  11E2  3080               	movlw	128
  3701  11E3  05CA               	andwf	___fladd@aexp,f
  3702  11E4  084A               	movf	___fladd@aexp,w
  3703  11E5  0649               	xorwf	___fladd@signs,w
  3704  11E6  1D03               	btfss	3,2
  3705  11E7  1749               	bsf	___fladd@signs,6
  3706  11E8  1003               	clrc
  3707  11E9  0D40               	rlf	___fladd@a+3,w
  3708  11EA  00CA               	movwf	___fladd@aexp
  3709  11EB  1BBF               	btfsc	___fladd@a+2,7
  3710  11EC  144A               	bsf	___fladd@aexp,0
  3711  11ED  084A               	movf	___fladd@aexp,w
  3712  11EE  1903               	btfsc	3,2
  3713  11EF  29F8               	goto	l1330
  3714  11F0  0F4A               	incfsz	___fladd@aexp,w
  3715  11F1  29F6               	goto	l1331
  3716  11F2  01BD               	clrf	___fladd@a
  3717  11F3  01BE               	clrf	___fladd@a+1
  3718  11F4  01BF               	clrf	___fladd@a+2
  3719  11F5  01C0               	clrf	___fladd@a+3
  3720  11F6                     l1331:	
  3721  11F6  17BF               	bsf	___fladd@a+2,7
  3722  11F7  29FB               	goto	L20
  3723  11F8                     l1330:	
  3724  11F8  01BD               	clrf	___fladd@a
  3725  11F9  01BE               	clrf	___fladd@a+1
  3726  11FA  01BF               	clrf	___fladd@a+2
  3727  11FB                     L20:	
  3728  11FB  01C0               	clrf	___fladd@a+3
  3729  11FC  084B               	movf	___fladd@bexp,w
  3730  11FD  024A               	subwf	___fladd@aexp,w
  3731  11FE  1803               	skipnc
  3732  11FF  2A22               	goto	l6202
  3733  1200  1F49               	btfss	___fladd@signs,6
  3734  1201  2A04               	goto	l6172
  3735  1202  3080               	movlw	128
  3736  1203  06C9               	xorwf	___fladd@signs,f
  3737  1204                     l6172:	
  3738  1204  084B               	movf	___fladd@bexp,w
  3739  1205  00CC               	movwf	___fladd@grs
  3740  1206  084A               	movf	___fladd@aexp,w
  3741  1207  00CB               	movwf	___fladd@bexp
  3742  1208  084C               	movf	___fladd@grs,w
  3743  1209  00CA               	movwf	___fladd@aexp
  3744  120A  0839               	movf	___fladd@b,w
  3745  120B  00CC               	movwf	___fladd@grs
  3746  120C  083D               	movf	___fladd@a,w
  3747  120D  00B9               	movwf	___fladd@b
  3748  120E  084C               	movf	___fladd@grs,w
  3749  120F  00BD               	movwf	___fladd@a
  3750  1210  083A               	movf	___fladd@b+1,w
  3751  1211  00CC               	movwf	___fladd@grs
  3752  1212  083E               	movf	___fladd@a+1,w
  3753  1213  00BA               	movwf	___fladd@b+1
  3754  1214  084C               	movf	___fladd@grs,w
  3755  1215  00BE               	movwf	___fladd@a+1
  3756  1216  083B               	movf	___fladd@b+2,w
  3757  1217  00CC               	movwf	___fladd@grs
  3758  1218  083F               	movf	___fladd@a+2,w
  3759  1219  00BB               	movwf	___fladd@b+2
  3760  121A  084C               	movf	___fladd@grs,w
  3761  121B  00BF               	movwf	___fladd@a+2
  3762  121C  083C               	movf	___fladd@b+3,w
  3763  121D  00CC               	movwf	___fladd@grs
  3764  121E  0840               	movf	___fladd@a+3,w
  3765  121F  00BC               	movwf	___fladd@b+3
  3766  1220  084C               	movf	___fladd@grs,w
  3767  1221  00C0               	movwf	___fladd@a+3
  3768  1222                     l6202:	
  3769  1222  01CC               	clrf	___fladd@grs
  3770  1223  084A               	movf	___fladd@aexp,w
  3771  1224  00C1               	movwf	??___fladd
  3772  1225  01C2               	clrf	??___fladd+1
  3773  1226  0842               	movf	??___fladd+1,w
  3774  1227  00C4               	movwf	??___fladd+3
  3775  1228  084B               	movf	___fladd@bexp,w
  3776  1229  0241               	subwf	??___fladd,w
  3777  122A  00C3               	movwf	??___fladd+2
  3778  122B  1C03               	skipc
  3779  122C  03C4               	decf	??___fladd+3,f
  3780  122D  0844               	movf	??___fladd+3,w
  3781  122E  3A80               	xorlw	128
  3782  122F  00FF               	movwf	127
  3783  1230  3080               	movlw	128
  3784  1231  027F               	subwf	127,w
  3785  1232  1D03               	skipz
  3786  1233  2A36               	goto	u5375
  3787  1234  301A               	movlw	26
  3788  1235  0243               	subwf	??___fladd+2,w
  3789  1236                     u5375:	
  3790  1236  1C03               	skipc
  3791  1237  2A57               	goto	l6218
  3792  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3793  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3794  123A  083C               	movf	___fladd@b+3,w
  3795  123B  043B               	iorwf	___fladd@b+2,w
  3796  123C  043A               	iorwf	___fladd@b+1,w
  3797  123D  0439               	iorwf	___fladd@b,w
  3798  123E  1903               	btfsc	3,2
  3799  123F  2A42               	goto	u5380
  3800  1240  3001               	movlw	1
  3801  1241  2A43               	goto	u5390
  3802  1242                     u5380:	
  3803  1242  3000               	movlw	0
  3804  1243                     u5390:	
  3805  1243  00CC               	movwf	___fladd@grs
  3806  1244  01B9               	clrf	___fladd@b
  3807  1245  01BA               	clrf	___fladd@b+1
  3808  1246  01BB               	clrf	___fladd@b+2
  3809  1247  01BC               	clrf	___fladd@b+3
  3810  1248  084A               	movf	___fladd@aexp,w
  3811  1249  00CB               	movwf	___fladd@bexp
  3812  124A  2A5D               	goto	l1336
  3813  124B                     l1338:	
  3814  124B  1C4C               	btfss	___fladd@grs,0
  3815  124C  2A52               	goto	l1339
  3816  124D  1003               	clrc
  3817  124E  0C4C               	rrf	___fladd@grs,w
  3818  124F  3801               	iorlw	1
  3819  1250  00CC               	movwf	___fladd@grs
  3820  1251  2A54               	goto	l1340
  3821  1252                     l1339:	
  3822  1252  1003               	clrc
  3823  1253  0CCC               	rrf	___fladd@grs,f
  3824  1254                     l1340:	
  3825  1254  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3826  1257                     l6218:	
  3827  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3828  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3829  1259  084A               	movf	___fladd@aexp,w
  3830  125A  024B               	subwf	___fladd@bexp,w
  3831  125B  1C03               	skipc
  3832  125C  2A4B               	goto	l1338
  3833  125D                     l1336:	
  3834  125D  1B49               	btfsc	___fladd@signs,6
  3835  125E  2A86               	goto	l6238
  3836  125F  084B               	movf	___fladd@bexp,w
  3837  1260  1D03               	btfss	3,2
  3838  1261  2A63               	goto	l6224
  3839  1262  2FCF               	ljmp	PL80	;call to abstracted procedure
  3840  1263                     l6224:	
  3841  1263  083D               	movf	___fladd@a,w
  3842  1264  07B9               	addwf	___fladd@b,f
  3843  1265  083E               	movf	___fladd@a+1,w
  3844  1266  1103               	clrz
  3845  1267  1803               	skipnc
  3846  1268  3E01               	addlw	1
  3847  1269  1D03               	btfss	3,2
  3848  126A  07BA               	addwf	___fladd@b+1,f
  3849  126B  083F               	movf	___fladd@a+2,w
  3850  126C  1103               	clrz
  3851  126D  1803               	skipnc
  3852  126E  3E01               	addlw	1
  3853  126F  1D03               	btfss	3,2
  3854  1270  07BB               	addwf	___fladd@b+2,f
  3855  1271  0840               	movf	___fladd@a+3,w
  3856  1272  1103               	clrz
  3857  1273  1803               	skipnc
  3858  1274  3E01               	addlw	1
  3859  1275  1D03               	btfss	3,2
  3860  1276  07BC               	addwf	___fladd@b+3,f
  3861  1277  1C3C               	btfss	___fladd@b+3,0
  3862  1278  2B02               	goto	l6268
  3863  1279  1C4C               	btfss	___fladd@grs,0
  3864  127A  2A80               	goto	l1347
  3865  127B  1003               	clrc
  3866  127C  0C4C               	rrf	___fladd@grs,w
  3867  127D  3801               	iorlw	1
  3868  127E  00CC               	movwf	___fladd@grs
  3869  127F  2A82               	goto	l1348
  3870  1280                     l1347:	
  3871  1280  1003               	clrc
  3872  1281  0CCC               	rrf	___fladd@grs,f
  3873  1282                     l1348:	
  3874  1282  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3875  1285  2B02               	goto	l6268
  3876  1286                     l6238:	
  3877  1286  083C               	movf	___fladd@b+3,w
  3878  1287  3A80               	xorlw	128
  3879  1288  00FF               	movwf	127
  3880  1289  0840               	movf	___fladd@a+3,w
  3881  128A  3A80               	xorlw	128
  3882  128B  027F               	subwf	127,w
  3883  128C  1D03               	skipz
  3884  128D  2A98               	goto	u5493
  3885  128E  083F               	movf	___fladd@a+2,w
  3886  128F  023B               	subwf	___fladd@b+2,w
  3887  1290  1D03               	skipz
  3888  1291  2A98               	goto	u5493
  3889  1292  083E               	movf	___fladd@a+1,w
  3890  1293  023A               	subwf	___fladd@b+1,w
  3891  1294  1D03               	skipz
  3892  1295  2A98               	goto	u5493
  3893  1296  083D               	movf	___fladd@a,w
  3894  1297  0239               	subwf	___fladd@b,w
  3895  1298                     u5493:	
  3896  1298  1803               	skipnc
  3897  1299  2AD8               	goto	l6248
  3898  129A  30FF               	movlw	255
  3899  129B  00C1               	movwf	??___fladd
  3900  129C  00C2               	movwf	??___fladd+1
  3901  129D  00C3               	movwf	??___fladd+2
  3902  129E  00C4               	movwf	??___fladd+3
  3903  129F  083D               	movf	___fladd@a,w
  3904  12A0  00C5               	movwf	??___fladd+4
  3905  12A1  083E               	movf	___fladd@a+1,w
  3906  12A2  00C6               	movwf	??___fladd+5
  3907  12A3  083F               	movf	___fladd@a+2,w
  3908  12A4  00C7               	movwf	??___fladd+6
  3909  12A5  0840               	movf	___fladd@a+3,w
  3910  12A6  00C8               	movwf	??___fladd+7
  3911  12A7  0839               	movf	___fladd@b,w
  3912  12A8  02C5               	subwf	??___fladd+4,f
  3913  12A9  083A               	movf	___fladd@b+1,w
  3914  12AA  1C03               	skipc
  3915  12AB  0F3A               	incfsz	___fladd@b+1,w
  3916  12AC  02C6               	subwf	??___fladd+5,f
  3917  12AD  083B               	movf	___fladd@b+2,w
  3918  12AE  1C03               	skipc
  3919  12AF  0F3B               	incfsz	___fladd@b+2,w
  3920  12B0  02C7               	subwf	??___fladd+6,f
  3921  12B1  083C               	movf	___fladd@b+3,w
  3922  12B2  1C03               	skipc
  3923  12B3  0F3C               	incfsz	___fladd@b+3,w
  3924  12B4  02C8               	subwf	??___fladd+7,f
  3925  12B5  0845               	movf	??___fladd+4,w
  3926  12B6  07C1               	addwf	??___fladd,f
  3927  12B7  0846               	movf	??___fladd+5,w
  3928  12B8  1803               	skipnc
  3929  12B9  0F46               	incfsz	??___fladd+5,w
  3930  12BA  07C2               	addwf	??___fladd+1,f
  3931  12BB  0847               	movf	??___fladd+6,w
  3932  12BC  1803               	skipnc
  3933  12BD  0F47               	incfsz	??___fladd+6,w
  3934  12BE  07C3               	addwf	??___fladd+2,f
  3935  12BF  0848               	movf	??___fladd+7,w
  3936  12C0  1803               	skipnc
  3937  12C1  0A48               	incf	??___fladd+7,w
  3938  12C2  07C4               	addwf	??___fladd+3,f
  3939  12C3  0844               	movf	??___fladd+3,w
  3940  12C4  00BC               	movwf	___fladd@b+3
  3941  12C5  0843               	movf	??___fladd+2,w
  3942  12C6  00BB               	movwf	___fladd@b+2
  3943  12C7  0842               	movf	??___fladd+1,w
  3944  12C8  00BA               	movwf	___fladd@b+1
  3945  12C9  0841               	movf	??___fladd,w
  3946  12CA  00B9               	movwf	___fladd@b
  3947  12CB  3080               	movlw	128
  3948  12CC  06C9               	xorwf	___fladd@signs,f
  3949  12CD  09CC               	comf	___fladd@grs,f
  3950  12CE  0FCC               	incfsz	___fladd@grs,f
  3951  12CF  2AE6               	goto	l1353
  3952  12D0  0AB9               	incf	___fladd@b,f
  3953  12D1  1903               	skipnz
  3954  12D2  0ABA               	incf	___fladd@b+1,f
  3955  12D3  1903               	skipnz
  3956  12D4  0ABB               	incf	___fladd@b+2,f
  3957  12D5  1903               	skipnz
  3958  12D6  0ABC               	incf	___fladd@b+3,f
  3959  12D7  2AE6               	goto	l1353
  3960  12D8                     l6248:	
  3961  12D8  083D               	movf	___fladd@a,w
  3962  12D9  02B9               	subwf	___fladd@b,f
  3963  12DA  083E               	movf	___fladd@a+1,w
  3964  12DB  1C03               	skipc
  3965  12DC  0F3E               	incfsz	___fladd@a+1,w
  3966  12DD  02BA               	subwf	___fladd@b+1,f
  3967  12DE  083F               	movf	___fladd@a+2,w
  3968  12DF  1C03               	skipc
  3969  12E0  0F3F               	incfsz	___fladd@a+2,w
  3970  12E1  02BB               	subwf	___fladd@b+2,f
  3971  12E2  0840               	movf	___fladd@a+3,w
  3972  12E3  1C03               	skipc
  3973  12E4  0F40               	incfsz	___fladd@a+3,w
  3974  12E5  02BC               	subwf	___fladd@b+3,f
  3975  12E6                     l1353:	
  3976  12E6  083C               	movf	___fladd@b+3,w
  3977  12E7  043B               	iorwf	___fladd@b+2,w
  3978  12E8  043A               	iorwf	___fladd@b+1,w
  3979  12E9  0439               	iorwf	___fladd@b,w
  3980  12EA  1D03               	skipz
  3981  12EB  2B00               	goto	l6266
  3982  12EC  084C               	movf	___fladd@grs,w
  3983  12ED  1D03               	btfss	3,2
  3984  12EE  2B00               	goto	l6266
  3985  12EF  2FCF               	ljmp	PL80	;call to abstracted procedure
  3986  12F0                     l6254:	
  3987  12F0  1003               	clrc
  3988  12F1  0DB9               	rlf	___fladd@b,f
  3989  12F2  0DBA               	rlf	___fladd@b+1,f
  3990  12F3  0DBB               	rlf	___fladd@b+2,f
  3991  12F4  0DBC               	rlf	___fladd@b+3,f
  3992  12F5  1BCC               	btfsc	___fladd@grs,7
  3993  12F6  1439               	bsf	___fladd@b,0
  3994  12F7  1C4C               	btfss	___fladd@grs,0
  3995  12F8  2AFB               	goto	l1358
  3996  12F9  1403               	setc
  3997  12FA  2AFC               	goto	L21
  3998  12FB                     l1358:	
  3999  12FB  1003               	clrc
  4000  12FC                     L21:	
  4001  12FC  0DCC               	rlf	___fladd@grs,f
  4002  12FD  084B               	movf	___fladd@bexp,w
  4003  12FE  1D03               	btfss	3,2
  4004  12FF  03CB               	decf	___fladd@bexp,f
  4005  1300                     l6266:	
  4006  1300  1FBB               	btfss	___fladd@b+2,7
  4007  1301  2AF0               	goto	l6254
  4008  1302                     l6268:	
  4009  1302  01CA               	clrf	___fladd@aexp
  4010  1303  1FCC               	btfss	___fladd@grs,7
  4011  1304  2B0D               	goto	l6278
  4012  1305  084C               	movf	___fladd@grs,w
  4013  1306  397F               	andlw	127
  4014  1307  1903               	btfsc	3,2
  4015  1308  1839               	btfsc	___fladd@b,0
  4016  1309  2B0B               	goto	l6274
  4017  130A  2B0D               	goto	l6278
  4018  130B                     l6274:	
  4019  130B  01CA               	clrf	___fladd@aexp
  4020  130C  0ACA               	incf	___fladd@aexp,f
  4021  130D                     l6278:	
  4022  130D  084A               	movf	___fladd@aexp,w
  4023  130E  1903               	btfsc	3,2
  4024  130F  2B20               	goto	l6290
  4025  1310  0AB9               	incf	___fladd@b,f
  4026  1311  1903               	skipnz
  4027  1312  0ABA               	incf	___fladd@b+1,f
  4028  1313  1903               	skipnz
  4029  1314  0ABB               	incf	___fladd@b+2,f
  4030  1315  1903               	skipnz
  4031  1316  0ABC               	incf	___fladd@b+3,f
  4032  1317  1C3C               	btfss	___fladd@b+3,0
  4033  1318  2B20               	goto	l6290
  4034  1319  0D3C               	rlf	___fladd@b+3,w
  4035  131A  0CBC               	rrf	___fladd@b+3,f
  4036  131B  0CBB               	rrf	___fladd@b+2,f
  4037  131C  0CBA               	rrf	___fladd@b+1,f
  4038  131D  0CB9               	rrf	___fladd@b,f
  4039  131E  0F4B               	incfsz	___fladd@bexp,w
  4040  131F  0ACB               	incf	___fladd@bexp,f
  4041  1320                     l6290:	
  4042  1320  0A4B               	incf	___fladd@bexp,w
  4043  1321  1D03               	btfss	3,2
  4044  1322  084B               	movf	___fladd@bexp,w
  4045  1323  1D03               	btfss	3,2
  4046  1324  2B2C               	goto	l6298
  4047  1325  01B9               	clrf	___fladd@b
  4048  1326  01BA               	clrf	___fladd@b+1
  4049  1327  01BB               	clrf	___fladd@b+2
  4050  1328  01BC               	clrf	___fladd@b+3
  4051  1329  084B               	movf	___fladd@bexp,w
  4052  132A  1903               	btfsc	3,2
  4053  132B  01C9               	clrf	___fladd@signs
  4054  132C                     l6298:	
  4055  132C  1C4B               	btfss	___fladd@bexp,0
  4056  132D  2B30               	goto	l1373
  4057  132E  17BB               	bsf	___fladd@b+2,7
  4058  132F  2B31               	goto	l6302
  4059  1330                     l1373:	
  4060  1330  13BB               	bcf	___fladd@b+2,7
  4061  1331                     l6302:	
  4062  1331  1003               	clrc
  4063  1332  0C4B               	rrf	___fladd@bexp,w
  4064  1333  00BC               	movwf	___fladd@b+3
  4065  1334  1BC9               	btfsc	___fladd@signs,7
  4066  1335  17BC               	bsf	___fladd@b+3,7
  4067  1336  0008               	return
  4068  1337                     __end_of___fladd:	
  4069  1337                     __ptext4:	
  4070 ;; *************** function _ADC_Read_NTC *****************
  4071 ;; Defined at:
  4072 ;;		line 56 in file "adc.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  canal           1    wreg     unsigned char 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  canal           1    0[COMMON] unsigned char 
  4077 ;;  temperatura     4   43[BANK1 ] float 
  4078 ;;  resistencia     4   36[BANK1 ] float 
  4079 ;;  calc            4   30[BANK1 ] float 
  4080 ;;  value           2   41[BANK1 ] unsigned int 
  4081 ;;  B               2   34[BANK1 ] int 
  4082 ;;  i               1   40[BANK1 ] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  4   25[BANK1 ] float 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 300/100
  4089 ;;		On exit  : 300/100
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         0       0       5       0       0
  4093 ;;      Locals:         0       0      17       0       0
  4094 ;;      Temps:          0       0       0       0       0
  4095 ;;      Totals:         0       0      22       0       0
  4096 ;;Total ram usage:       22 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    5
  4099 ;; This function calls:
  4100 ;;		___fladd
  4101 ;;		___fldiv
  4102 ;;		___flmul
  4103 ;;		___flsub
  4104 ;;		___lwdiv
  4105 ;;		___xxtofl
  4106 ;;		_captura
  4107 ;;		_log
  4108 ;; This function is called by:
  4109 ;;		_mediatemperaturaNTC
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _ADC_Read_NTC
  4115  1337                     _ADC_Read_NTC:	
  4116                           
  4117                           ;adc.c: 57:     int B = 3975;
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4121  1337  3087               	movlw	135
  4122  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4123  1339  300F               	movlw	15
  4124  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4125                           
  4126                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4127  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4128  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4129                           
  4130                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4131  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4132  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4133  133F                     l7516:	
  4134                           
  4135                           ;adc.c: 66:         value+=captura();
  4136  133F  267E  160A  118A   	fcall	_captura
  4137  1342  0820               	movf	?_captura,w
  4138  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4139  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4140  1345  1803               	skipnc
  4141  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4142  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4143  1348  0821               	movf	?_captura+1,w
  4144  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4145  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4146  134B  3033               	movlw	51
  4147  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4148  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4149  134E  1C03               	skipc
  4150  134F  2B3F               	goto	l7516
  4151                           
  4152                           ;adc.c: 67:     value/=(i-1);
  4153  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4154  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4155  1352  00A0               	movwf	___lwdiv@divisor
  4156  1353  30FF               	movlw	255
  4157  1354  01A1               	clrf	___lwdiv@divisor+1
  4158  1355  07A0               	addwf	___lwdiv@divisor,f
  4159  1356  1803               	skipnc
  4160  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4161  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4162  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4163  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4164  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4165  135C  00A3               	movwf	___lwdiv@dividend+1
  4166  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4167  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4168  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4169  1360  00A2               	movwf	___lwdiv@dividend
  4170  1361  2654  160A  118A   	fcall	___lwdiv
  4171  1364  0821               	movf	?___lwdiv+1,w
  4172  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4173  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4174  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4175  1368  0820               	movf	?___lwdiv,w
  4176  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4177  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4178                           
  4179                           ;adc.c: 68:     resistencia =(1023.0-value);
  4180  136B  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4181  136E  24A9  160A  118A   	fcall	___xxtofl
  4182  1371  2798  160A  118A   	fcall	PL30	;call to abstracted procedure
  4183  1374  3044               	movlw	68
  4184  1375  00D4               	movwf	___flsub@b+3
  4185  1376  307F               	movlw	127
  4186  1377  00D3               	movwf	___flsub@b+2
  4187  1378  30C0               	movlw	192
  4188  1379  00D2               	movwf	___flsub@b+1
  4189  137A  01D1               	clrf	___flsub@b
  4190  137B  2638  160A  118A   	fcall	___flsub
  4191  137E  0850               	movf	?___flsub+3,w
  4192  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4193  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4194  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4195  1382  084F               	movf	?___flsub+2,w
  4196  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4197  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4198  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4199  1386  084E               	movf	?___flsub+1,w
  4200  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4201  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4202  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4203  138A  084D               	movf	?___flsub,w
  4204  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4205  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4206                           
  4207                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4208  138D  3046               	movlw	70
  4209  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4210  138F  00D4               	movwf	___flsub@b+3
  4211  1390  301C               	movlw	28
  4212  1391  00D3               	movwf	___flsub@b+2
  4213  1392  3040               	movlw	64
  4214  1393  00D2               	movwf	___flsub@b+1
  4215  1394  01D1               	clrf	___flsub@b
  4216  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4217  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4218  1397  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4219  139A  24A9  160A  118A   	fcall	___xxtofl
  4220  139D  2798  160A  118A   	fcall	PL30	;call to abstracted procedure
  4221  13A0  2638               	fcall	___flsub
  4222  13A1  0850               	movf	?___flsub+3,w
  4223  13A2  00D8               	movwf	___flmul@b+3
  4224  13A3  084F               	movf	?___flsub+2,w
  4225  13A4  00D7               	movwf	___flmul@b+2
  4226  13A5  084E               	movf	?___flsub+1,w
  4227  13A6  00D6               	movwf	___flmul@b+1
  4228  13A7  084D               	movf	?___flsub,w
  4229  13A8  00D5               	movwf	___flmul@b
  4230  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4231  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4232  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4233  13AC  00DC               	movwf	___flmul@a+3
  4234  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4235  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4236  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4237  13B0  00DB               	movwf	___flmul@a+2
  4238  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4239  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4240  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4241  13B4  00DA               	movwf	___flmul@a+1
  4242  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4243  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4244  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4245  13B8  00D9               	movwf	___flmul@a
  4246  13B9  120A  158A  23DC  160A  118A  	fcall	___flmul
  4247  13BE  0858               	movf	?___flmul+3,w
  4248  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4249  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4250  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4251  13C2  0857               	movf	?___flmul+2,w
  4252  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4253  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4254  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4255  13C6  0856               	movf	?___flmul+1,w
  4256  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4257  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4258  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4259  13CA  0855               	movf	?___flmul,w
  4260  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4261  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4262                           
  4263                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4264  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4265  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4266  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4267  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4268  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4269  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4270  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4271  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4272  13D5  3046               	movlw	70
  4273  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4274  13D7  00D8               	movwf	___flmul@b+3
  4275  13D8  301C               	movlw	28
  4276  13D9  00D7               	movwf	___flmul@b+2
  4277  13DA  3040               	movlw	64
  4278  13DB  00D6               	movwf	___flmul@b+1
  4279  13DC  01D5               	clrf	___flmul@b
  4280  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4281  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4282  13DF  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4283  13E2  24A9  160A  118A   	fcall	___xxtofl
  4284  13E5  27AA               	fcall	PL42	;call to abstracted procedure
  4285  13E6  120A  158A  23DC  160A  118A  	fcall	___flmul
  4286  13EB  0858               	movf	?___flmul+3,w
  4287  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4288  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4289  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4290  13EF  0857               	movf	?___flmul+2,w
  4291  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4292  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4293  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4294  13F3  0856               	movf	?___flmul+1,w
  4295  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4296  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4297  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4298  13F7  0855               	movf	?___flmul,w
  4299  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4300  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4301  13FA  2517  160A  118A   	fcall	___fldiv
  4302  13FD  27A1  160A  118A   	fcall	PL32	;call to abstracted procedure
  4303                           
  4304                           ;adc.c: 71:     calc=temperatura;
  4305  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4306  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4307  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4308  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4309  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4310  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4311  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4312  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4313                           
  4314                           ;adc.c: 72:     temperatura =log(calc);
  4315  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4316  1409  00B3               	movwf	(log@x+3)^(0+128)
  4317  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4318  140B  00B2               	movwf	(log@x+2)^(0+128)
  4319  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4320  140D  00B1               	movwf	(log@x+1)^(0+128)
  4321  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4322  140F  00B0               	movwf	log@x^(0+128)
  4323  1410  268C  160A  118A   	fcall	_log
  4324  1413  0833               	movf	(?_log+3)^(0+128),w
  4325  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4326  1415  0832               	movf	(?_log+2)^(0+128),w
  4327  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4328  1417  0831               	movf	(?_log+1)^(0+128),w
  4329  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4330  1419  0830               	movf	?_log^(0+128),w
  4331  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4332                           
  4333                           ;adc.c: 73:     temperatura/=B;
  4334  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4335  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4336  141D  00AB               	movwf	___xxtofl@val
  4337  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4338  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4339  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4340  1421  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  4341  1424  24A9  160A  118A   	fcall	___xxtofl
  4342  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4343  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4344  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4345  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4346  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4347  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4348  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4349  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4350  1431  00A4               	movwf	___fldiv@b^(0+128)
  4351  1432  2517  160A  118A   	fcall	___fldiv
  4352  1435  27A1  160A  118A   	fcall	PL32	;call to abstracted procedure
  4353                           
  4354                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4355  1438  303B               	movlw	59
  4356  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4357  143A  00BC               	movwf	___fladd@b+3
  4358  143B  305B               	movlw	91
  4359  143C  00BB               	movwf	___fladd@b+2
  4360  143D  30CF               	movlw	207
  4361  143E  00BA               	movwf	___fladd@b+1
  4362  143F  300F               	movlw	15
  4363  1440  00B9               	movwf	___fladd@b
  4364  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4365  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4366  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4367  1444  00C0               	movwf	___fladd@a+3
  4368  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4369  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4370  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4371  1448  00BF               	movwf	___fladd@a+2
  4372  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4373  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4374  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4375  144C  00BE               	movwf	___fladd@a+1
  4376  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4377  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4378  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4379  1450  00BD               	movwf	___fladd@a
  4380  1451  21C8  160A  118A   	fcall	___fladd
  4381  1454  083C               	movf	?___fladd+3,w
  4382  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4383  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4384  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4385  1458  083B               	movf	?___fladd+2,w
  4386  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4387  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4388  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4389  145C  083A               	movf	?___fladd+1,w
  4390  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4391  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4392  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4393  1460  0839               	movf	?___fladd,w
  4394  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4395  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4396                           
  4397                           ;adc.c: 75:     temperatura =1/temperatura;
  4398  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4399  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4400  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4401  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4402  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4403  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4404  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4405  146A  00A0               	movwf	___fldiv@a^(0+128)
  4406  146B  303F               	movlw	63
  4407  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4408  146D  3080               	movlw	128
  4409  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4410  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4411  1470  01A4               	clrf	___fldiv@b^(0+128)
  4412  1471  2517  160A  118A   	fcall	___fldiv
  4413  1474  27A1  160A  118A   	fcall	PL32	;call to abstracted procedure
  4414                           
  4415                           ;adc.c: 76:     temperatura-=273.15;
  4416  1477  3043               	movlw	67
  4417  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4418  1479  00D0               	movwf	___flsub@a+3
  4419  147A  3088               	movlw	136
  4420  147B  00CF               	movwf	___flsub@a+2
  4421  147C  3093               	movlw	147
  4422  147D  00CE               	movwf	___flsub@a+1
  4423  147E  3033               	movlw	51
  4424  147F  00CD               	movwf	___flsub@a
  4425  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4426  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4427  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1483  00D4               	movwf	___flsub@b+3
  4429  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4430  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4431  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4432  1487  00D3               	movwf	___flsub@b+2
  4433  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4434  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4435  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4436  148B  00D2               	movwf	___flsub@b+1
  4437  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4438  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4439  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4440  148F  00D1               	movwf	___flsub@b
  4441  1490  2638               	fcall	___flsub
  4442  1491  0850               	movf	?___flsub+3,w
  4443  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4444  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4445  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4446  1495  084F               	movf	?___flsub+2,w
  4447  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4448  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4449  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4450  1499  084E               	movf	?___flsub+1,w
  4451  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4452  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4453  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4454  149D  084D               	movf	?___flsub,w
  4455  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4456  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4457                           
  4458                           ;adc.c: 78:     return temperatura;
  4459  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4460  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4461  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4462  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4463  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4464  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4465  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4466  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4467  14A8  0008               	return
  4468  14A9                     __end_of_ADC_Read_NTC:	
  4469  14A9                     __ptext64:	
  4470 ;; *************** function ___xxtofl *****************
  4471 ;; Defined at:
  4472 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  sign            1    wreg     unsigned char 
  4475 ;;  val             4   11[BANK0 ] long 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  sign            1   19[BANK0 ] unsigned char 
  4478 ;;  arg             4   21[BANK0 ] unsigned long 
  4479 ;;  exp             1   20[BANK0 ] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  4   11[BANK0 ] unsigned char 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 300/0
  4486 ;;		On exit  : 300/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       4       0       0       0
  4490 ;;      Locals:         0       6       0       0       0
  4491 ;;      Temps:          0       4       0       0       0
  4492 ;;      Totals:         0      14       0       0       0
  4493 ;;Total ram usage:       14 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_mediatemperaturaNTC
  4500 ;;		_Auto_Relay1
  4501 ;;		_Load_Work
  4502 ;;		_ADC_Read_NTC
  4503 ;;		_log
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function ___xxtofl
  4509  14A9                     ___xxtofl:	
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4513                           ;___xxtofl@sign stored from wreg
  4514  14A9  00B3               	movwf	___xxtofl@sign
  4515  14AA  0833               	movf	___xxtofl@sign,w
  4516  14AB  1D03               	btfss	3,2
  4517  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4518  14AD  2CBE               	goto	l6634
  4519  14AE  092B               	comf	___xxtofl@val,w
  4520  14AF  00B5               	movwf	___xxtofl@arg
  4521  14B0  092C               	comf	___xxtofl@val+1,w
  4522  14B1  00B6               	movwf	___xxtofl@arg+1
  4523  14B2  092D               	comf	___xxtofl@val+2,w
  4524  14B3  00B7               	movwf	___xxtofl@arg+2
  4525  14B4  092E               	comf	___xxtofl@val+3,w
  4526  14B5  00B8               	movwf	___xxtofl@arg+3
  4527  14B6  0AB5               	incf	___xxtofl@arg,f
  4528  14B7  1903               	skipnz
  4529  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4530  14B9  1903               	skipnz
  4531  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4532  14BB  1903               	skipnz
  4533  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4534  14BD  2CC6               	goto	l1466
  4535  14BE                     l6634:	
  4536  14BE  082E               	movf	___xxtofl@val+3,w
  4537  14BF  00B8               	movwf	___xxtofl@arg+3
  4538  14C0  082D               	movf	___xxtofl@val+2,w
  4539  14C1  00B7               	movwf	___xxtofl@arg+2
  4540  14C2  082C               	movf	___xxtofl@val+1,w
  4541  14C3  00B6               	movwf	___xxtofl@arg+1
  4542  14C4  082B               	movf	___xxtofl@val,w
  4543  14C5  00B5               	movwf	___xxtofl@arg
  4544  14C6                     l1466:	
  4545  14C6  082E               	movf	___xxtofl@val+3,w
  4546  14C7  042D               	iorwf	___xxtofl@val+2,w
  4547  14C8  042C               	iorwf	___xxtofl@val+1,w
  4548  14C9  042B               	iorwf	___xxtofl@val,w
  4549  14CA  1D03               	skipz
  4550  14CB  2CD1               	goto	l6638
  4551  14CC  01AB               	clrf	?___xxtofl
  4552  14CD  01AC               	clrf	?___xxtofl+1
  4553  14CE  01AD               	clrf	?___xxtofl+2
  4554  14CF  01AE               	clrf	?___xxtofl+3
  4555  14D0  0008               	return
  4556  14D1                     l6638:	
  4557  14D1  3096               	movlw	150
  4558  14D2  00B4               	movwf	___xxtofl@exp
  4559  14D3                     l6642:	
  4560  14D3  30FE               	movlw	254
  4561  14D4  0538               	andwf	___xxtofl@arg+3,w
  4562  14D5  1903               	btfsc	3,2
  4563  14D6  2CE7               	goto	l6646
  4564  14D7  0AB4               	incf	___xxtofl@exp,f
  4565  14D8  27C9  160A  118A   	fcall	PL78	;call to abstracted procedure
  4566  14DB  2CD3               	goto	l6642
  4567  14DC                     l6644:	
  4568  14DC  0AB4               	incf	___xxtofl@exp,f
  4569  14DD  0AB5               	incf	___xxtofl@arg,f
  4570  14DE  1903               	skipnz
  4571  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4572  14E0  1903               	skipnz
  4573  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4574  14E2  1903               	skipnz
  4575  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4576  14E4  27C9  160A  118A   	fcall	PL78	;call to abstracted procedure
  4577  14E7                     l6646:	
  4578  14E7  30FF               	movlw	255
  4579  14E8  0538               	andwf	___xxtofl@arg+3,w
  4580  14E9  1903               	btfsc	3,2
  4581  14EA  2CF6               	goto	l6650
  4582  14EB  2CDC               	goto	l6644
  4583  14EC                     l6652:	
  4584  14EC  3002               	movlw	2
  4585  14ED  0234               	subwf	___xxtofl@exp,w
  4586  14EE  1C03               	btfss	3,0
  4587  14EF  2CF8               	goto	l1479
  4588  14F0  03B4               	decf	___xxtofl@exp,f
  4589  14F1  1003               	clrc
  4590  14F2  0DB5               	rlf	___xxtofl@arg,f
  4591  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4592  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4593  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4594  14F6                     l6650:	
  4595  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4596  14F7  2CEC               	goto	l6652
  4597  14F8                     l1479:	
  4598  14F8  1C34               	btfss	___xxtofl@exp,0
  4599  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4600  14FA  1003               	clrc
  4601  14FB  0CB4               	rrf	___xxtofl@exp,f
  4602  14FC  0834               	movf	___xxtofl@exp,w
  4603  14FD  00B2               	movwf	??___xxtofl+3
  4604  14FE  01B1               	clrf	??___xxtofl+2
  4605  14FF  01B0               	clrf	??___xxtofl+1
  4606  1500  01AF               	clrf	??___xxtofl
  4607  1501  082F               	movf	??___xxtofl,w
  4608  1502  04B5               	iorwf	___xxtofl@arg,f
  4609  1503  0830               	movf	??___xxtofl+1,w
  4610  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4611  1505  0831               	movf	??___xxtofl+2,w
  4612  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4613  1507  0832               	movf	??___xxtofl+3,w
  4614  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4615  1509  0833               	movf	___xxtofl@sign,w
  4616  150A  1D03               	btfss	3,2
  4617  150B  1FAE               	btfss	___xxtofl@val+3,7
  4618  150C  2D0E               	goto	l6664
  4619  150D  17B8               	bsf	___xxtofl@arg+3,7
  4620  150E                     l6664:	
  4621  150E  0838               	movf	___xxtofl@arg+3,w
  4622  150F  00AE               	movwf	?___xxtofl+3
  4623  1510  0837               	movf	___xxtofl@arg+2,w
  4624  1511  00AD               	movwf	?___xxtofl+2
  4625  1512  0836               	movf	___xxtofl@arg+1,w
  4626  1513  00AC               	movwf	?___xxtofl+1
  4627  1514  0835               	movf	___xxtofl@arg,w
  4628  1515  00AB               	movwf	?___xxtofl
  4629  1516  0008               	return
  4630  1517                     __end_of___xxtofl:	
  4631  1517                     __ptext40:	
  4632 ;; *************** function ___fldiv *****************
  4633 ;; Defined at:
  4634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  a               4    0[BANK1 ] void 
  4637 ;;  b               4    4[BANK1 ] void 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  grs             4   19[BANK1 ] unsigned long 
  4640 ;;  rem             4   12[BANK1 ] unsigned long 
  4641 ;;  new_exp         2   17[BANK1 ] int 
  4642 ;;  aexp            1   24[BANK1 ] unsigned char 
  4643 ;;  bexp            1   23[BANK1 ] unsigned char 
  4644 ;;  sign            1   16[BANK1 ] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  4    0[BANK1 ] unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, btemp+1
  4649 ;; Tracked objects:
  4650 ;;		On entry : 300/100
  4651 ;;		On exit  : 300/100
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4654 ;;      Params:         0       0       8       0       0
  4655 ;;      Locals:         0       0      13       0       0
  4656 ;;      Temps:          0       0       4       0       0
  4657 ;;      Totals:         0       0      25       0       0
  4658 ;;Total ram usage:       25 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    1
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_mediatemperaturaNTC
  4665 ;;		_Load_Work
  4666 ;;		_ADC_Read_NTC
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function ___fldiv
  4672  1517                     ___fldiv:	
  4673                           
  4674                           ;incstack = 0
  4675                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4676  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4677  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4678  1519  3080               	movlw	128
  4679  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4680  151B  1003               	clrc
  4681  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4682  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4683  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4684  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4685  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4686  1521  1903               	btfsc	3,2
  4687  1522  2D2C               	goto	l1382
  4688  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4689  1524  2D29               	goto	l1383
  4690  1525  01A4               	clrf	___fldiv@b^(0+128)
  4691  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4692  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4693  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4694  1529                     l1383:	
  4695  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4696  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4697  152B  2D30               	goto	l7000
  4698  152C                     l1382:	
  4699  152C  01A4               	clrf	___fldiv@b^(0+128)
  4700  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4701  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4702  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4703  1530                     l7000:	
  4704  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4705  1531  3980               	andlw	128
  4706  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4707  1533  1003               	clrc
  4708  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4709  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4710  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4711  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4712  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4713  1539  1903               	btfsc	3,2
  4714  153A  2D44               	goto	l1386
  4715  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4716  153C  2D41               	goto	l1387
  4717  153D  01A0               	clrf	___fldiv@a^(0+128)
  4718  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4719  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4720  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4721  1541                     l1387:	
  4722  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4723  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4724  1543  2D48               	goto	l7014
  4725  1544                     l1386:	
  4726  1544  01A0               	clrf	___fldiv@a^(0+128)
  4727  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4728  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4729  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4730  1548                     l7014:	
  4731  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4732  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4733  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4734  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4735  154C  1D03               	skipz
  4736  154D  2D61               	goto	l7026
  4737  154E  3080               	movlw	128
  4738  154F  01A4               	clrf	___fldiv@b^(0+128)
  4739  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4740  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4741  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4742  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4743  1554  307F               	movlw	127
  4744  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4745  1556                     L17:	
  4746  1556  0830               	movf	___fldiv@sign^(0+128),w
  4747  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4748  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4749  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4750  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4751  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4752  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4753  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4754  155E  0824               	movf	___fldiv@b^(0+128),w
  4755  155F  00A0               	movwf	?___fldiv^(0+128)
  4756  1560  0008               	return
  4757  1561                     l7026:	
  4758  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4759  1562  1D03               	btfss	3,2
  4760  1563  2D69               	goto	l7034
  4761  1564  01A0               	clrf	?___fldiv^(0+128)
  4762  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4763  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4764  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4765  1568  0008               	return
  4766  1569                     l7034:	
  4767  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4768  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4769  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4770  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4771  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4772  156E  1C03               	skipc
  4773  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4774  1570  307F               	movlw	127
  4775  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4776  1572  1803               	skipnc
  4777  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4778  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4779  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4780  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4781  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4782  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4783  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4784  157A  0824               	movf	___fldiv@b^(0+128),w
  4785  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4786  157C  01A4               	clrf	___fldiv@b^(0+128)
  4787  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4788  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4789  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4790  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4791  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4792  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4793  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4794  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4795  1585                     l7060:	
  4796  1585  301A               	movlw	26
  4797  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4798  1587  1803               	btfsc	3,0
  4799  1588  2DBE               	goto	l7062
  4800  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4801  158A  1903               	btfsc	3,2
  4802  158B  2D9D               	goto	l7052
  4803  158C  1003               	clrc
  4804  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4805  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4806  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4807  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4808  1591  1003               	clrc
  4809  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4810  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4811  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4812  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4813  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4814  1597  1424               	bsf	___fldiv@b^(0+128),0
  4815  1598  1003               	clrc
  4816  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4817  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4818  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4819  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4820  159D                     l7052:	
  4821  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4822  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4823  159F  1D03               	skipz
  4824  15A0  2DAB               	goto	u6705
  4825  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4826  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4827  15A3  1D03               	skipz
  4828  15A4  2DAB               	goto	u6705
  4829  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4830  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4831  15A7  1D03               	skipz
  4832  15A8  2DAB               	goto	u6705
  4833  15A9  0820               	movf	___fldiv@a^(0+128),w
  4834  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4835  15AB                     u6705:	
  4836  15AB  1C03               	skipc
  4837  15AC  2DBC               	goto	l7058
  4838  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4839  15AE  0820               	movf	___fldiv@a^(0+128),w
  4840  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4841  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4842  15B1  1C03               	skipc
  4843  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4844  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4845  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4846  15B5  1C03               	skipc
  4847  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4848  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4849  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4850  15B9  1C03               	skipc
  4851  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4852  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4853  15BC                     l7058:	
  4854  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4855  15BD  2D85               	goto	l7060
  4856  15BE                     l7062:	
  4857  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4858  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4859  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4860  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4861  15C2  1D03               	btfss	3,2
  4862  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4863  15C4                     l7076:	
  4864  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4865  15C5  2DD7               	goto	l7078
  4866  15C6  1003               	clrc
  4867  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4868  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4869  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4870  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4871  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4872  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4873  15CD  30FF               	movlw	-1
  4874  15CE  1003               	clrc
  4875  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4876  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4877  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4878  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4879  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4880  15D4  1C03               	skipc
  4881  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4882  15D6  2DC4               	goto	l7076
  4883  15D7                     l7078:	
  4884  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4885  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4886  15D9  2DED               	goto	l7088
  4887  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4888  15DB  00A8               	movwf	??___fldiv^(0+128)
  4889  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4890  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4891  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4892  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4893  15E0  307F               	movlw	127
  4894  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4895  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4896  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4897  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4898  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4899  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4900  15E7  1903               	skipnz
  4901  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4902  15E9  2DEB               	goto	l7084
  4903  15EA  2DED               	goto	l7088
  4904  15EB                     l7084:	
  4905  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4906  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4907  15ED                     l7088:	
  4908  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4909  15EE  1903               	btfsc	3,2
  4910  15EF  2E01               	goto	l7098
  4911  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4912  15F1  1903               	skipnz
  4913  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4914  15F3  1903               	skipnz
  4915  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4916  15F5  1903               	skipnz
  4917  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4918  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4919  15F8  2E01               	goto	l7098
  4920  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4921  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4922  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4923  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4924  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  4925  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4926  15FF  1903               	skipnz
  4927  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4928  1601                     l7098:	
  4929  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4930  1602  3A80               	xorlw	128
  4931  1603  00FF               	movwf	127
  4932  1604  3080               	movlw	128
  4933  1605  027F               	subwf	127,w
  4934  1606  1D03               	skipz
  4935  1607  2E0A               	goto	u6805
  4936  1608  30FF               	movlw	255
  4937  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  4938  160A                     u6805:	
  4939  160A  1C03               	skipc
  4940  160B  2E15               	goto	l7104
  4941  160C  30FF               	movlw	255
  4942  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4943  160E  1303               	bcf	3,6	;RP1=0, select bank1
  4944  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  4945  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4946  1611  01A4               	clrf	___fldiv@b^(0+128)
  4947  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4948  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4949  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4950  1615                     l7104:	
  4951  1615  1683               	bsf	3,5	;RP0=1, select bank1
  4952  1616  1303               	bcf	3,6	;RP1=0, select bank1
  4953  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4954  1618  3A80               	xorlw	128
  4955  1619  00FF               	movwf	127
  4956  161A  3080               	movlw	128
  4957  161B  027F               	subwf	127,w
  4958  161C  1D03               	skipz
  4959  161D  2E20               	goto	u6815
  4960  161E  3001               	movlw	1
  4961  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  4962  1620                     u6815:	
  4963  1620  1803               	skipnc
  4964  1621  2E2B               	goto	l7110
  4965  1622  1683               	bsf	3,5	;RP0=1, select bank1
  4966  1623  1303               	bcf	3,6	;RP1=0, select bank1
  4967  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  4968  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4969  1626  01A4               	clrf	___fldiv@b^(0+128)
  4970  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4971  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4972  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4973  162A  01B0               	clrf	___fldiv@sign^(0+128)
  4974  162B                     l7110:	
  4975  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4976  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4977  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  4978  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  4979  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  4980  1630  2E33               	goto	l1411
  4981  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4982  1632  2E34               	goto	l7116
  4983  1633                     l1411:	
  4984  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4985  1634                     l7116:	
  4986  1634  1003               	clrc
  4987  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  4988  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4989  1637  2D56               	goto	L17
  4990  1638                     __end_of___fldiv:	
  4991  1638                     __ptext68:	
  4992 ;; *************** function ___flsub *****************
  4993 ;; Defined at:
  4994 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  a               4   45[BANK0 ] void 
  4997 ;;  b               4   49[BANK0 ] void 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  4   45[BANK0 ] void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 300/0
  5006 ;;		On exit  : 300/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       8       0       0       0
  5010 ;;      Locals:         0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0
  5012 ;;      Totals:         0       8       0       0       0
  5013 ;;Total ram usage:        8 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    2
  5016 ;; This function calls:
  5017 ;;		___fladd
  5018 ;; This function is called by:
  5019 ;;		_Auto_Relay0
  5020 ;;		_Auto_Relay1
  5021 ;;		_ADC_Read_NTC
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           
  5026                           ;psect for function ___flsub
  5027  1638                     ___flsub:	
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5031  1638  3080               	movlw	128
  5032  1639  06D0               	xorwf	___flsub@a+3,f
  5033  163A  0854               	movf	___flsub@b+3,w
  5034  163B  00BC               	movwf	___fladd@b+3
  5035  163C  0853               	movf	___flsub@b+2,w
  5036  163D  00BB               	movwf	___fladd@b+2
  5037  163E  0852               	movf	___flsub@b+1,w
  5038  163F  00BA               	movwf	___fladd@b+1
  5039  1640  0851               	movf	___flsub@b,w
  5040  1641  00B9               	movwf	___fladd@b
  5041  1642  0850               	movf	___flsub@a+3,w
  5042  1643  00C0               	movwf	___fladd@a+3
  5043  1644  084F               	movf	___flsub@a+2,w
  5044  1645  00BF               	movwf	___fladd@a+2
  5045  1646  084E               	movf	___flsub@a+1,w
  5046  1647  00BE               	movwf	___fladd@a+1
  5047  1648  084D               	movf	___flsub@a,w
  5048  1649  00BD               	movwf	___fladd@a
  5049  164A  21C8               	fcall	___fladd
  5050  164B  083C               	movf	?___fladd+3,w
  5051  164C  00D0               	movwf	?___flsub+3
  5052  164D  083B               	movf	?___fladd+2,w
  5053  164E  00CF               	movwf	?___flsub+2
  5054  164F  083A               	movf	?___fladd+1,w
  5055  1650  00CE               	movwf	?___flsub+1
  5056  1651  0839               	movf	?___fladd,w
  5057  1652  00CD               	movwf	?___flsub
  5058  1653  0008               	return
  5059  1654                     __end_of___flsub:	
  5060  1654                     __ptext34:	
  5061 ;; *************** function ___lwdiv *****************
  5062 ;; Defined at:
  5063 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  divisor         2    0[BANK0 ] unsigned int 
  5066 ;;  dividend        2    2[BANK0 ] unsigned int 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  quotient        2    5[BANK0 ] unsigned int 
  5069 ;;  counter         1    4[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2    0[BANK0 ] unsigned int 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 300/0
  5076 ;;		On exit  : 300/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       4       0       0       0
  5080 ;;      Locals:         0       3       0       0       0
  5081 ;;      Temps:          0       0       0       0       0
  5082 ;;      Totals:         0       7       0       0       0
  5083 ;;Total ram usage:        7 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_ADC_Read_NTC
  5090 ;;		_PROCULUS_Buzzer
  5091 ;;		_utoa
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function ___lwdiv
  5097  1654                     ___lwdiv:	
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5101  1654  01A5               	clrf	___lwdiv@quotient
  5102  1655  01A6               	clrf	___lwdiv@quotient+1
  5103  1656  0820               	movf	___lwdiv@divisor,w
  5104  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5105  1658  1903               	btfsc	3,2
  5106  1659  2E79               	goto	l6604
  5107  165A  01A4               	clrf	___lwdiv@counter
  5108  165B                     L15:	
  5109  165B  0AA4               	incf	___lwdiv@counter,f
  5110  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5111  165D  2E62               	goto	l6592
  5112  165E  1003               	clrc
  5113  165F  0DA0               	rlf	___lwdiv@divisor,f
  5114  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5115  1661  2E5B               	goto	L15
  5116  1662                     l6592:	
  5117  1662  1003               	clrc
  5118  1663  0DA5               	rlf	___lwdiv@quotient,f
  5119  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5120  1665  0821               	movf	___lwdiv@divisor+1,w
  5121  1666  0223               	subwf	___lwdiv@dividend+1,w
  5122  1667  1D03               	skipz
  5123  1668  2E6B               	goto	u6135
  5124  1669  0820               	movf	___lwdiv@divisor,w
  5125  166A  0222               	subwf	___lwdiv@dividend,w
  5126  166B                     u6135:	
  5127  166B  1C03               	skipc
  5128  166C  2E75               	goto	L16
  5129  166D  0820               	movf	___lwdiv@divisor,w
  5130  166E  02A2               	subwf	___lwdiv@dividend,f
  5131  166F  0821               	movf	___lwdiv@divisor+1,w
  5132  1670  1C03               	skipc
  5133  1671  03A3               	decf	___lwdiv@dividend+1,f
  5134  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5135  1673  1425               	bsf	___lwdiv@quotient,0
  5136  1674  1003               	clrc
  5137  1675                     L16:	
  5138  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5139  1676  0CA0               	rrf	___lwdiv@divisor,f
  5140  1677  0BA4               	decfsz	___lwdiv@counter,f
  5141  1678  2E62               	goto	l6592
  5142  1679                     l6604:	
  5143  1679  0826               	movf	___lwdiv@quotient+1,w
  5144  167A  00A1               	movwf	?___lwdiv+1
  5145  167B  0825               	movf	___lwdiv@quotient,w
  5146  167C  00A0               	movwf	?___lwdiv
  5147  167D  0008               	return
  5148  167E                     __end_of___lwdiv:	
  5149  167E                     __ptext9:	
  5150 ;; *************** function _captura *****************
  5151 ;; Defined at:
  5152 ;;		line 123 in file "adc.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2    0[BANK0 ] unsigned int 
  5159 ;; Registers used:
  5160 ;;		wreg
  5161 ;; Tracked objects:
  5162 ;;		On entry : 300/100
  5163 ;;		On exit  : 300/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5166 ;;      Params:         0       2       0       0       0
  5167 ;;      Locals:         0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0
  5169 ;;      Totals:         0       2       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    1
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_ADC_Read_NTC
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _captura
  5182  167E                     _captura:	
  5183                           
  5184                           ;adc.c: 124:     ADCON0bits.GO=1;
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _captura: [wreg]
  5188  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5189  167F  149F               	bsf	31,1	;volatile
  5190  1680                     l583:	
  5191                           ;adc.c: 128:           }
  5192                           
  5193                           
  5194                           ;adc.c: 125:     while(ADCON0bits.GO)
  5195  1680  189F               	btfsc	31,1	;volatile
  5196  1681  2E80               	goto	l583
  5197                           
  5198                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5199  1682  081E               	movf	30,w	;volatile
  5200  1683  00A1               	movwf	?_captura+1
  5201  1684  01A0               	clrf	?_captura
  5202  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5203  1686  081E               	movf	30,w	;volatile
  5204  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5205  1688  07A0               	addwf	?_captura,f
  5206  1689  1803               	skipnc
  5207  168A  0AA1               	incf	?_captura+1,f
  5208  168B  0008               	return
  5209  168C                     __end_of_captura:	
  5210  168C                     __ptext5:	
  5211 ;; *************** function _log *****************
  5212 ;; Defined at:
  5213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  x               4   16[BANK1 ] float 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  exponent        2   78[BANK0 ] int 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  4   16[BANK1 ] int 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 300/100
  5224 ;;		On exit  : 300/100
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5227 ;;      Params:         0       0       4       0       0
  5228 ;;      Locals:         0       2       0       0       0
  5229 ;;      Temps:          0       0       0       0       0
  5230 ;;      Totals:         0       2       4       0       0
  5231 ;;Total ram usage:        6 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    4
  5234 ;; This function calls:
  5235 ;;		___fladd
  5236 ;;		___fleq
  5237 ;;		___flge
  5238 ;;		___flmul
  5239 ;;		___xxtofl
  5240 ;;		_eval_poly
  5241 ;;		_frexp
  5242 ;; This function is called by:
  5243 ;;		_ADC_Read_NTC
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _log
  5249  168C                     _log:	
  5250                           
  5251                           ;incstack = 0
  5252                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5253  168C  0833               	movf	(log@x+3)^(0+128),w
  5254  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5255  168E  00D8               	movwf	___flge@ff1+3
  5256  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5257  1690  0832               	movf	(log@x+2)^(0+128),w
  5258  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5259  1692  00D7               	movwf	___flge@ff1+2
  5260  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5261  1694  0831               	movf	(log@x+1)^(0+128),w
  5262  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5263  1696  00D6               	movwf	___flge@ff1+1
  5264  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5265  1698  0830               	movf	log@x^(0+128),w
  5266  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5267  169A  00D5               	movwf	___flge@ff1
  5268  169B  01D9               	clrf	___flge@ff2
  5269  169C  01DA               	clrf	___flge@ff2+1
  5270  169D  01DB               	clrf	___flge@ff2+2
  5271  169E  01DC               	clrf	___flge@ff2+3
  5272  169F  120A  118A  24FE  160A  118A  	fcall	___flge
  5273  16A4  1803               	btfsc	3,0
  5274  16A5  2EA7               	goto	l6880
  5275  16A6  2FC3               	ljmp	PL62	;call to abstracted procedure
  5276  16A7                     l6880:	
  5277  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5278  16A8  0833               	movf	(log@x+3)^(0+128),w
  5279  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5280  16AA  00A3               	movwf	___fleq@ff1+3
  5281  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5282  16AC  0832               	movf	(log@x+2)^(0+128),w
  5283  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5284  16AE  00A2               	movwf	___fleq@ff1+2
  5285  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5286  16B0  0831               	movf	(log@x+1)^(0+128),w
  5287  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5288  16B2  00A1               	movwf	___fleq@ff1+1
  5289  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5290  16B4  0830               	movf	log@x^(0+128),w
  5291  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5292  16B6  160A  158A  271A  160A  118A  	fcall	PL68	;call to abstracted procedure
  5293  16BB  160A  158A  26E4  160A  118A  	fcall	___fleq
  5294  16C0  1C03               	btfss	3,0
  5295  16C1  2EC3               	goto	l6884
  5296  16C2  2FC3               	ljmp	PL62	;call to abstracted procedure
  5297  16C3                     l6884:	
  5298  16C3  30BF               	movlw	191
  5299  16C4  00BC               	movwf	___fladd@b+3
  5300  16C5  3080               	movlw	128
  5301  16C6  00BB               	movwf	___fladd@b+2
  5302  16C7  3040               	movlw	64
  5303  16C8  01BA               	clrf	___fladd@b+1
  5304  16C9  01B9               	clrf	___fladd@b
  5305  16CA  00D8               	movwf	___flmul@b+3
  5306  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5307  16CC  01D7               	clrf	___flmul@b+2
  5308  16CD  01D6               	clrf	___flmul@b+1
  5309  16CE  01D5               	clrf	___flmul@b
  5310  16CF  00B0               	movwf	frexp@eptr
  5311  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5312  16D1  0833               	movf	(log@x+3)^(0+128),w
  5313  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5314  16D3  00AF               	movwf	frexp@value+3
  5315  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5316  16D5  0832               	movf	(log@x+2)^(0+128),w
  5317  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5318  16D7  00AE               	movwf	frexp@value+2
  5319  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5320  16D9  0831               	movf	(log@x+1)^(0+128),w
  5321  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5322  16DB  00AD               	movwf	frexp@value+1
  5323  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5324  16DD  0830               	movf	log@x^(0+128),w
  5325  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5326  16DF  00AC               	movwf	frexp@value
  5327  16E0  160A  158A  269D  160A  118A  	fcall	_frexp
  5328  16E5  082F               	movf	?_frexp+3,w
  5329  16E6  00DC               	movwf	___flmul@a+3
  5330  16E7  082E               	movf	?_frexp+2,w
  5331  16E8  00DB               	movwf	___flmul@a+2
  5332  16E9  082D               	movf	?_frexp+1,w
  5333  16EA  00DA               	movwf	___flmul@a+1
  5334  16EB  082C               	movf	?_frexp,w
  5335  16EC  00D9               	movwf	___flmul@a
  5336  16ED  120A  158A  23DC  160A  118A  	fcall	___flmul
  5337  16F2  278F  160A  118A   	fcall	PL26	;call to abstracted procedure
  5338  16F5  21C8  160A  118A   	fcall	___fladd
  5339  16F8  083C               	movf	?___fladd+3,w
  5340  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5341  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5342  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5343  16FC  083B               	movf	?___fladd+2,w
  5344  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5345  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5346  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5347  1700  083A               	movf	?___fladd+1,w
  5348  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5349  1702  00B1               	movwf	(log@x+1)^(0+128)
  5350  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5351  1704  0839               	movf	?___fladd,w
  5352  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5353  1706  00B0               	movwf	log@x^(0+128)
  5354  1707  30FF               	movlw	-1
  5355  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5356  1709  07EE               	addwf	log@exponent,f
  5357  170A  1C03               	skipc
  5358  170B  03EF               	decf	log@exponent+1,f
  5359  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5360  170D  0833               	movf	(log@x+3)^(0+128),w
  5361  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5362  170F  0832               	movf	(log@x+2)^(0+128),w
  5363  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5364  1711  0831               	movf	(log@x+1)^(0+128),w
  5365  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5366  1713  0830               	movf	log@x^(0+128),w
  5367  1714  00A0               	movwf	eval_poly@x^(0+128)
  5368  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5369  1716  00A4               	movwf	eval_poly@d^(0+128)
  5370  1717  3008               	movlw	8
  5371  1718  00A5               	movwf	eval_poly@n^(0+128)
  5372  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5373  171A  211E  160A  118A   	fcall	_eval_poly
  5374  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5375  171E  00B3               	movwf	(log@x+3)^(0+128)
  5376  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5377  1720  00B2               	movwf	(log@x+2)^(0+128)
  5378  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5379  1722  00B1               	movwf	(log@x+1)^(0+128)
  5380  1723  0820               	movf	?_eval_poly^(0+128),w
  5381  1724  00B0               	movwf	log@x^(0+128)
  5382  1725  0833               	movf	(log@x+3)^(0+128),w
  5383  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5384  1727  00BC               	movwf	___fladd@b+3
  5385  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5386  1729  0832               	movf	(log@x+2)^(0+128),w
  5387  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5388  172B  00BB               	movwf	___fladd@b+2
  5389  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5390  172D  0831               	movf	(log@x+1)^(0+128),w
  5391  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5392  172F  00BA               	movwf	___fladd@b+1
  5393  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5394  1731  0830               	movf	log@x^(0+128),w
  5395  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5396  1733  00B9               	movwf	___fladd@b
  5397  1734  303F               	movlw	63
  5398  1735  00D8               	movwf	___flmul@b+3
  5399  1736  3031               	movlw	49
  5400  1737  00D7               	movwf	___flmul@b+2
  5401  1738  3072               	movlw	114
  5402  1739  00D6               	movwf	___flmul@b+1
  5403  173A  3018               	movlw	24
  5404  173B  00D5               	movwf	___flmul@b
  5405  173C  086E               	movf	log@exponent,w
  5406  173D  00AB               	movwf	___xxtofl@val
  5407  173E  086F               	movf	log@exponent+1,w
  5408  173F  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  5409  1742  24A9  160A  118A   	fcall	___xxtofl
  5410  1745  27AA               	fcall	PL42	;call to abstracted procedure
  5411  1746  120A  158A  23DC  160A  118A  	fcall	___flmul
  5412  174B  278F  160A  118A   	fcall	PL26	;call to abstracted procedure
  5413  174E  21C8               	fcall	___fladd
  5414  174F  083C               	movf	?___fladd+3,w
  5415  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5416  1751  00B3               	movwf	(?_log+3)^(0+128)
  5417  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5418  1753  083B               	movf	?___fladd+2,w
  5419  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5420  1755  00B2               	movwf	(?_log+2)^(0+128)
  5421  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5422  1757  083A               	movf	?___fladd+1,w
  5423  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5424  1759  00B1               	movwf	(?_log+1)^(0+128)
  5425  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5426  175B  0839               	movf	?___fladd,w
  5427  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5428  175D  00B0               	movwf	?_log^(0+128)
  5429  175E  0008               	return
  5430  175F                     __end_of_log:	
  5431  175F                     __ptext3:	
  5432 ;; *************** function _Package_Usart_is_for_me *****************
  5433 ;; Defined at:
  5434 ;;		line 8 in file "protocolo.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  retorno         1    0[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      unsigned char 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 300/100
  5445 ;;		On exit  : 300/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       0       0       0       0
  5449 ;;      Locals:         0       1       0       0       0
  5450 ;;      Temps:          0       0       0       0       0
  5451 ;;      Totals:         0       1       0       0       0
  5452 ;;Total ram usage:        1 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_mediatemperaturaNTC
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _Package_Usart_is_for_me
  5464  175F                     _Package_Usart_is_for_me:	
  5465                           
  5466                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5470  175F  1703               	bsf	3,6	;RP1=1, select bank3
  5471  1760  1C3C               	btfss	_generic_status^(0+384),0
  5472  1761  2F70               	goto	l7554
  5473                           
  5474                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5475  1762  1283               	bcf	3,5	;RP0=0, select bank2
  5476  1763  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5477  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5478  1765  0634               	xorwf	_Board_Number^(0+384),w
  5479  1766  1903               	skipnz
  5480  1767  2F6B               	goto	l871
  5481  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5482  1769  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5483  176A  2F70               	goto	l7554
  5484  176B                     l871:	
  5485                           
  5486                           ;protocolo.c: 13:             retorno=1;
  5487  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5488  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5489  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5490  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5491  176F  2F73               	goto	l7558
  5492  1770                     l7554:	
  5493                           
  5494                           ;protocolo.c: 15:             retorno=0;
  5495  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5496  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5497  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5498  1773                     l7558:	
  5499                           
  5500                           ;protocolo.c: 21:      return retorno;
  5501  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5502  1774  0008               	return
  5503  1775                     __end_of_Package_Usart_is_for_me:	
  5504  1775                     PL18:	
  5505  1775  082E               	movf	?___xxtofl+3,w
  5506  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5507  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5508  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5509  1779  082D               	movf	?___xxtofl+2,w
  5510  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5511  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5512  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5513  177D  082C               	movf	?___xxtofl+1,w
  5514  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5515  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5516  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5517  1781  082B               	movf	?___xxtofl,w
  5518  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5519  1783  00A0               	movwf	___fldiv@a^(0+128)
  5520  1784  0008               	return
  5521  1785                     __end_ofPL18:	
  5522  1785                     PL20:	
  5523  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5524  1786  00AB               	movwf	___xxtofl@val
  5525  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5526  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5527  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5528  178A  00AC               	movwf	___xxtofl@val+1
  5529  178B  3000               	movlw	0
  5530  178C  01AD               	clrf	___xxtofl@val+2
  5531  178D  01AE               	clrf	___xxtofl@val+3
  5532  178E  0008               	return
  5533  178F                     __end_ofPL20:	
  5534  178F                     PL26:	
  5535  178F  0858               	movf	?___flmul+3,w
  5536  1790  00C0               	movwf	___fladd@a+3
  5537  1791  0857               	movf	?___flmul+2,w
  5538  1792  00BF               	movwf	___fladd@a+2
  5539  1793  0856               	movf	?___flmul+1,w
  5540  1794  00BE               	movwf	___fladd@a+1
  5541  1795  0855               	movf	?___flmul,w
  5542  1796  00BD               	movwf	___fladd@a
  5543  1797  0008               	return
  5544  1798                     __end_ofPL26:	
  5545  1798                     PL30:	
  5546  1798  082E               	movf	?___xxtofl+3,w
  5547  1799  00D0               	movwf	___flsub@a+3
  5548  179A  082D               	movf	?___xxtofl+2,w
  5549  179B  00CF               	movwf	___flsub@a+2
  5550  179C  082C               	movf	?___xxtofl+1,w
  5551  179D  00CE               	movwf	___flsub@a+1
  5552  179E  082B               	movf	?___xxtofl,w
  5553  179F  00CD               	movwf	___flsub@a
  5554  17A0  0008               	return
  5555  17A1                     __end_ofPL30:	
  5556  17A1                     PL32:	
  5557  17A1  0823               	movf	(?___fldiv+3)^(0+128),w
  5558  17A2  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5559  17A3  0822               	movf	(?___fldiv+2)^(0+128),w
  5560  17A4  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5561  17A5  0821               	movf	(?___fldiv+1)^(0+128),w
  5562  17A6  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5563  17A7  0820               	movf	?___fldiv^(0+128),w
  5564  17A8  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5565  17A9  0008               	return
  5566  17AA                     __end_ofPL32:	
  5567  17AA                     PL42:	
  5568  17AA  082E               	movf	?___xxtofl+3,w
  5569  17AB  00DC               	movwf	___flmul@a+3
  5570  17AC  082D               	movf	?___xxtofl+2,w
  5571  17AD  00DB               	movwf	___flmul@a+2
  5572  17AE  082C               	movf	?___xxtofl+1,w
  5573  17AF  00DA               	movwf	___flmul@a+1
  5574  17B0  082B               	movf	?___xxtofl,w
  5575  17B1  00D9               	movwf	___flmul@a
  5576  17B2  0008               	return
  5577  17B3                     __end_ofPL42:	
  5578  17B3                     PL44:	
  5579  17B3  1839               	btfsc	___fladd@b,0
  5580  17B4  17CC               	bsf	___fladd@grs,7
  5581  17B5  0D3C               	rlf	___fladd@b+3,w
  5582  17B6  0CBC               	rrf	___fladd@b+3,f
  5583  17B7  0CBB               	rrf	___fladd@b+2,f
  5584  17B8  0CBA               	rrf	___fladd@b+1,f
  5585  17B9  0CB9               	rrf	___fladd@b,f
  5586  17BA  0ACB               	incf	___fladd@bexp,f
  5587  17BB  0008               	return
  5588  17BC                     __end_ofPL44:	
  5589  17BC                     PL54:	
  5590  17BC  00AC               	movwf	___xxtofl@val+1
  5591  17BD  3000               	movlw	0
  5592  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5593  17BF  30FF               	movlw	255
  5594  17C0  00AD               	movwf	___xxtofl@val+2
  5595  17C1  00AE               	movwf	___xxtofl@val+3
  5596  17C2  3401               	retlw	1
  5597  17C3                     __end_ofPL54:	
  5598  17C3                     PL62:	
  5599  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5600  17C4  01B0               	clrf	?_log^(0+128)
  5601  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5602  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5603  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5604  17C8  0008               	return
  5605  17C9                     __end_ofPL62:	
  5606  17C9                     PL78:	
  5607  17C9  1003               	clrc
  5608  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5609  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5610  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5611  17CD  0CB5               	rrf	___xxtofl@arg,f
  5612  17CE  0008               	return
  5613  17CF                     __end_ofPL78:	
  5614  17CF                     PL80:	
  5615  17CF  01B9               	clrf	?___fladd
  5616  17D0  01BA               	clrf	?___fladd+1
  5617  17D1  01BB               	clrf	?___fladd+2
  5618  17D2  01BC               	clrf	?___fladd+3
  5619  17D3  0008               	return
  5620  17D4                     __end_ofPL80:	
  5621  17D4                     __ptext2:	
  5622 ;; *************** function _my_delay_ms *****************
  5623 ;; Defined at:
  5624 ;;		line 5 in file "my_delay.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  time            4    0[BANK0 ] long 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  i               4    6[BANK0 ] long 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, btemp+1
  5633 ;; Tracked objects:
  5634 ;;		On entry : 300/0
  5635 ;;		On exit  : 300/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5638 ;;      Params:         0       4       0       0       0
  5639 ;;      Locals:         0       4       0       0       0
  5640 ;;      Temps:          0       2       0       0       0
  5641 ;;      Totals:         0      10       0       0       0
  5642 ;;Total ram usage:       10 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_mediatemperaturaNTC
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _my_delay_ms
  5654  17D4                     _my_delay_ms:	
  5655                           
  5656                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5660  17D4  01A6               	clrf	my_delay_ms@i
  5661  17D5  01A7               	clrf	my_delay_ms@i+1
  5662  17D6  01A8               	clrf	my_delay_ms@i+2
  5663  17D7  01A9               	clrf	my_delay_ms@i+3
  5664  17D8                     l7504:	
  5665  17D8  0829               	movf	my_delay_ms@i+3,w
  5666  17D9  3A80               	xorlw	128
  5667  17DA  00FF               	movwf	127
  5668  17DB  0823               	movf	my_delay_ms@time+3,w
  5669  17DC  3A80               	xorlw	128
  5670  17DD  027F               	subwf	127,w
  5671  17DE  1D03               	skipz
  5672  17DF  2FEA               	goto	u7093
  5673  17E0  0822               	movf	my_delay_ms@time+2,w
  5674  17E1  0228               	subwf	my_delay_ms@i+2,w
  5675  17E2  1D03               	skipz
  5676  17E3  2FEA               	goto	u7093
  5677  17E4  0821               	movf	my_delay_ms@time+1,w
  5678  17E5  0227               	subwf	my_delay_ms@i+1,w
  5679  17E6  1D03               	skipz
  5680  17E7  2FEA               	goto	u7093
  5681  17E8  0820               	movf	my_delay_ms@time,w
  5682  17E9  0226               	subwf	my_delay_ms@i,w
  5683  17EA                     u7093:	
  5684  17EA  1803               	btfsc	3,0
  5685  17EB  0008               	return
  5686                           
  5687                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5688  17EC  3003               	movlw	3
  5689  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5690  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5691  17EF  00A5               	movwf	??_my_delay_ms+1
  5692  17F0  3097               	movlw	151
  5693  17F1  00A4               	movwf	??_my_delay_ms
  5694  17F2                     u7657:	
  5695  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5696  17F3  2FF2               	goto	u7657
  5697  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5698  17F5  2FF2               	goto	u7657
  5699                           
  5700                           ;my_delay.c: 10:             }
  5701  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5702  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5703  17F8  0AA6               	incf	my_delay_ms@i,f
  5704  17F9  1903               	skipnz
  5705  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5706  17FB  1903               	skipnz
  5707  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5708  17FD  1903               	skipnz
  5709  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5710  17FF  2FD8               	goto	l7504
  5711  1800                     __end_of_my_delay_ms:	
  5712                           
  5713                           	psect	text6
  5714  1E9D                     __ptext6:	
  5715 ;; *************** function _frexp *****************
  5716 ;; Defined at:
  5717 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  value           4   12[BANK0 ] int 
  5720 ;;  eptr            1   16[BANK0 ] PTR int 
  5721 ;;		 -> log@exponent(2), 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  4   12[BANK0 ] PTR int 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 300/0
  5730 ;;		On exit  : B00/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       5       0       0       0
  5734 ;;      Locals:         0       0       0       0       0
  5735 ;;      Temps:          0       2       0       0       0
  5736 ;;      Totals:         0       7       0       0       0
  5737 ;;Total ram usage:        7 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    2
  5740 ;; This function calls:
  5741 ;;		___fleq
  5742 ;; This function is called by:
  5743 ;;		_log
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _frexp
  5749  1E9D                     _frexp:	
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5753  1E9D  082F               	movf	frexp@value+3,w
  5754  1E9E  00A3               	movwf	___fleq@ff1+3
  5755  1E9F  082E               	movf	frexp@value+2,w
  5756  1EA0  00A2               	movwf	___fleq@ff1+2
  5757  1EA1  082D               	movf	frexp@value+1,w
  5758  1EA2  00A1               	movwf	___fleq@ff1+1
  5759  1EA3  082C               	movf	frexp@value,w
  5760  1EA4  271A  160A  158A   	fcall	PL68	;call to abstracted procedure
  5761  1EA7  26E4  160A  158A   	fcall	___fleq
  5762  1EAA  1C03               	btfss	3,0
  5763  1EAB  2EB7               	goto	l6676
  5764  1EAC  0830               	movf	frexp@eptr,w
  5765  1EAD  0084               	movwf	4
  5766  1EAE  1383               	bcf	3,7	;select IRP bank0
  5767  1EAF  0180               	clrf	0
  5768  1EB0  0A84               	incf	4,f
  5769  1EB1  0180               	clrf	0
  5770  1EB2  01AC               	clrf	?_frexp
  5771  1EB3  01AD               	clrf	?_frexp+1
  5772  1EB4  01AE               	clrf	?_frexp+2
  5773  1EB5  01AF               	clrf	?_frexp+3
  5774  1EB6  0008               	return
  5775  1EB7                     l6676:	
  5776  1EB7  082F               	movf	frexp@value+3,w
  5777  1EB8  397F               	andlw	127
  5778  1EB9  00B1               	movwf	??_frexp
  5779  1EBA  01B2               	clrf	??_frexp+1
  5780  1EBB  1003               	clrc
  5781  1EBC  0DB1               	rlf	??_frexp,f
  5782  1EBD  0DB2               	rlf	??_frexp+1,f
  5783  1EBE  0830               	movf	frexp@eptr,w
  5784  1EBF  0084               	movwf	4
  5785  1EC0  0831               	movf	??_frexp,w
  5786  1EC1  1383               	bcf	3,7	;select IRP bank0
  5787  1EC2  0080               	movwf	0
  5788  1EC3  0A84               	incf	4,f
  5789  1EC4  0832               	movf	??_frexp+1,w
  5790  1EC5  0080               	movwf	0
  5791  1EC6  0D2E               	rlf	frexp@value+2,w
  5792  1EC7  0D2E               	rlf	frexp@value+2,w
  5793  1EC8  3901               	andlw	1
  5794  1EC9  00B1               	movwf	??_frexp
  5795  1ECA  01B2               	clrf	??_frexp+1
  5796  1ECB  0830               	movf	frexp@eptr,w
  5797  1ECC  0084               	movwf	4
  5798  1ECD  0831               	movf	??_frexp,w
  5799  1ECE  0480               	iorwf	0,f
  5800  1ECF  0A84               	incf	4,f
  5801  1ED0  0832               	movf	??_frexp+1,w
  5802  1ED1  0480               	iorwf	0,f
  5803  1ED2  0830               	movf	frexp@eptr,w
  5804  1ED3  0084               	movwf	4
  5805  1ED4  3082               	movlw	130
  5806  1ED5  0780               	addwf	0,f
  5807  1ED6  0F84               	incfsz	4,f
  5808  1ED7  0800               	movf	0,w
  5809  1ED8  1803               	skipnc
  5810  1ED9  0A00               	incf	0,w
  5811  1EDA  00FF               	movwf	127
  5812  1EDB  3EFF               	addlw	255
  5813  1EDC  0080               	movwf	0
  5814  1EDD  0384               	decf	4,f
  5815  1EDE  082F               	movf	frexp@value+3,w
  5816  1EDF  3980               	andlw	-128
  5817  1EE0  383F               	iorlw	63
  5818  1EE1  00AF               	movwf	frexp@value+3
  5819  1EE2  13AE               	bcf	frexp@value+2,7
  5820  1EE3  0008               	return
  5821  1EE4                     __end_of_frexp:	
  5822  1EE4                     __ptext7:	
  5823 ;; *************** function ___fleq *****************
  5824 ;; Defined at:
  5825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  ff1             4    0[BANK0 ] PTR int 
  5828 ;;  ff2             4    4[BANK0 ] PTR int 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;		None               void
  5833 ;; Registers used:
  5834 ;;		wreg, status,2, status,0
  5835 ;; Tracked objects:
  5836 ;;		On entry : 300/0
  5837 ;;		On exit  : 300/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5840 ;;      Params:         0       8       0       0       0
  5841 ;;      Locals:         0       0       0       0       0
  5842 ;;      Temps:          0       4       0       0       0
  5843 ;;      Totals:         0      12       0       0       0
  5844 ;;Total ram usage:       12 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_log
  5851 ;;		_frexp
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function ___fleq
  5857  1EE4                     ___fleq:	
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5861  1EE4  3080               	movlw	128
  5862  1EE5  01A8               	clrf	??___fleq
  5863  1EE6  01A9               	clrf	??___fleq+1
  5864  1EE7  0522               	andwf	___fleq@ff1+2,w
  5865  1EE8  00AA               	movwf	??___fleq+2
  5866  1EE9  307F               	movlw	127
  5867  1EEA  0523               	andwf	___fleq@ff1+3,w
  5868  1EEB  00AB               	movwf	??___fleq+3
  5869  1EEC  042A               	iorwf	??___fleq+2,w
  5870  1EED  0429               	iorwf	??___fleq+1,w
  5871  1EEE  0428               	iorwf	??___fleq,w
  5872  1EEF  1D03               	skipz
  5873  1EF0  2EF5               	goto	l6114
  5874  1EF1  01A0               	clrf	___fleq@ff1
  5875  1EF2  01A1               	clrf	___fleq@ff1+1
  5876  1EF3  01A2               	clrf	___fleq@ff1+2
  5877  1EF4  01A3               	clrf	___fleq@ff1+3
  5878  1EF5                     l6114:	
  5879  1EF5  3080               	movlw	128
  5880  1EF6  01A8               	clrf	??___fleq
  5881  1EF7  01A9               	clrf	??___fleq+1
  5882  1EF8  0526               	andwf	___fleq@ff2+2,w
  5883  1EF9  00AA               	movwf	??___fleq+2
  5884  1EFA  307F               	movlw	127
  5885  1EFB  0527               	andwf	___fleq@ff2+3,w
  5886  1EFC  00AB               	movwf	??___fleq+3
  5887  1EFD  042A               	iorwf	??___fleq+2,w
  5888  1EFE  0429               	iorwf	??___fleq+1,w
  5889  1EFF  0428               	iorwf	??___fleq,w
  5890  1F00  1D03               	skipz
  5891  1F01  2F06               	goto	l6118
  5892  1F02  01A4               	clrf	___fleq@ff2
  5893  1F03  01A5               	clrf	___fleq@ff2+1
  5894  1F04  01A6               	clrf	___fleq@ff2+2
  5895  1F05  01A7               	clrf	___fleq@ff2+3
  5896  1F06                     l6118:	
  5897  1F06  0827               	movf	___fleq@ff2+3,w
  5898  1F07  0623               	xorwf	___fleq@ff1+3,w
  5899  1F08  1D03               	skipz
  5900  1F09  2F14               	goto	u5275
  5901  1F0A  0826               	movf	___fleq@ff2+2,w
  5902  1F0B  0622               	xorwf	___fleq@ff1+2,w
  5903  1F0C  1D03               	skipz
  5904  1F0D  2F14               	goto	u5275
  5905  1F0E  0825               	movf	___fleq@ff2+1,w
  5906  1F0F  0621               	xorwf	___fleq@ff1+1,w
  5907  1F10  1D03               	skipz
  5908  1F11  2F14               	goto	u5275
  5909  1F12  0824               	movf	___fleq@ff2,w
  5910  1F13  0620               	xorwf	___fleq@ff1,w
  5911  1F14                     u5275:	
  5912  1F14  1903               	skipnz
  5913  1F15  2F18               	goto	l6122
  5914  1F16  1003               	clrc
  5915  1F17  0008               	return
  5916  1F18                     l6122:	
  5917  1F18  1403               	setc
  5918  1F19  0008               	return
  5919  1F1A                     __end_of___fleq:	
  5920  1F1A                     PL68:	
  5921  1F1A  00A0               	movwf	___fleq@ff1
  5922  1F1B  01A4               	clrf	___fleq@ff2
  5923  1F1C  01A5               	clrf	___fleq@ff2+1
  5924  1F1D  01A6               	clrf	___fleq@ff2+2
  5925  1F1E  01A7               	clrf	___fleq@ff2+3
  5926  1F1F  0008               	return
  5927  1F20                     __end_ofPL68:	
  5928                           
  5929                           	psect	text10
  5930  1CB5                     __ptext10:	
  5931 ;; *************** function _USART_init *****************
  5932 ;; Defined at:
  5933 ;;		line 18 in file "usart.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  i               1    4[BANK0 ] unsigned char 
  5938 ;;  erro            1    0        unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0
  5943 ;; Tracked objects:
  5944 ;;		On entry : 300/0
  5945 ;;		On exit  : 300/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5948 ;;      Params:         0       4       0       0       0
  5949 ;;      Locals:         0       1       0       0       0
  5950 ;;      Temps:          0       0       0       0       0
  5951 ;;      Totals:         0       5       0       0       0
  5952 ;;Total ram usage:        5 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    1
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _USART_init
  5964  1CB5                     _USART_init:	
  5965                           
  5966                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5967                           
  5968                           ;incstack = 0
  5969                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5970  1CB5  304B               	movlw	75
  5971  1CB6  0621               	xorwf	USART_init@baudrate+1,w
  5972  1CB7  0420               	iorwf	USART_init@baudrate,w
  5973  1CB8  0422               	iorwf	USART_init@baudrate+2,w
  5974  1CB9  0423               	iorwf	USART_init@baudrate+3,w
  5975  1CBA  1D03               	btfss	3,2
  5976  1CBB  2CC6               	goto	l7646
  5977                           
  5978                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5979  1CBC  1798               	bsf	24,7	;volatile
  5980                           
  5981                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5982  1CBD  1618               	bsf	24,4	;volatile
  5983                           
  5984                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5985  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  5986  1CBF  1518               	bsf	24,2	;volatile
  5987                           
  5988                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5989  1CC0  1218               	bcf	24,4	;volatile
  5990                           
  5991                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5992  1CC1  1318               	bcf	24,6	;volatile
  5993                           
  5994                           ;usart.c: 32:           SPBRG =12;
  5995  1CC2  300C               	movlw	12
  5996  1CC3  0099               	movwf	25	;volatile
  5997                           
  5998                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5999  1CC4  170B               	bsf	11,6	;volatile
  6000  1CC5  2CDF               	goto	L5
  6001  1CC6                     l7646:	
  6002                           ;usart.c: 35:           }
  6003                           
  6004                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6005                           
  6006  1CC6  30C2               	movlw	194
  6007  1CC7  0621               	xorwf	USART_init@baudrate+1,w
  6008  1CC8  1D03               	skipz
  6009  1CC9  2CE0               	goto	l7666
  6010  1CCA  0322               	decf	USART_init@baudrate+2,w
  6011  1CCB  0420               	iorwf	USART_init@baudrate,w
  6012  1CCC  0423               	iorwf	USART_init@baudrate+3,w
  6013  1CCD  1D03               	btfss	3,2
  6014  1CCE  2CE0               	goto	l7666
  6015                           
  6016                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6017  1CCF  3010               	movlw	16
  6018  1CD0  1683               	bsf	3,5	;RP0=1, select bank1
  6019  1CD1  0099               	movwf	25	;volatile
  6020                           
  6021                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6022  1CD2  1703               	bsf	3,6	;RP1=1, select bank3
  6023  1CD3  1587               	bsf	7,3	;volatile
  6024                           
  6025                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6026  1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  6027  1CD5  1518               	bsf	24,2	;volatile
  6028                           
  6029                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6030  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  6031  1CD7  1798               	bsf	24,7	;volatile
  6032                           
  6033                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6034  1CD8  1683               	bsf	3,5	;RP0=1, select bank1
  6035  1CD9  1218               	bcf	24,4	;volatile
  6036                           
  6037                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6038  1CDA  1318               	bcf	24,6	;volatile
  6039                           
  6040                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6041  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  6042  1CDC  1618               	bsf	24,4	;volatile
  6043                           
  6044                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6045  1CDD  170B               	bsf	11,6	;volatile
  6046                           
  6047                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6048  1CDE  1683               	bsf	3,5	;RP0=1, select bank1
  6049  1CDF                     L5:	
  6050  1CDF  168C               	bsf	12,5	;volatile
  6051  1CE0                     l7666:	
  6052                           
  6053                           ;usart.c: 68:      TRISC6= 1;
  6054  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
  6055  1CE1  1707               	bsf	7,6	;volatile
  6056                           
  6057                           ;usart.c: 69:      TRISC7= 1;
  6058  1CE2  1787               	bsf	7,7	;volatile
  6059                           
  6060                           ;usart.c: 71:      CREN=0;
  6061  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6062  1CE4  1218               	bcf	24,4	;volatile
  6063                           
  6064                           ;usart.c: 72:      CREN=1;
  6065  1CE5  1618               	bsf	24,4	;volatile
  6066                           
  6067                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6068  1CE6  01A4               	clrf	USART_init@i
  6069  1CE7                     l7680:	
  6070  1CE7  081A               	movf	26,w	;volatile
  6071  1CE8  300F               	movlw	15
  6072  1CE9  0AA4               	incf	USART_init@i,f
  6073  1CEA  0224               	subwf	USART_init@i,w
  6074  1CEB  1803               	btfsc	3,0
  6075  1CEC  0008               	return
  6076  1CED  2CE7               	goto	l7680
  6077  1CEE                     __end_of_USART_init:	
  6078                           
  6079                           	psect	text11
  6080  1DAC                     __ptext11:	
  6081 ;; *************** function _I2C_Master_Init *****************
  6082 ;; Defined at:
  6083 ;;		line 7 in file "I2C.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  c               4   13[BANK0 ] const unsigned long 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 300/0
  6094 ;;		On exit  : 300/100
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6097 ;;      Params:         0       4       0       0       0
  6098 ;;      Locals:         0       0       0       0       0
  6099 ;;      Temps:          0       4       0       0       0
  6100 ;;      Totals:         0       8       0       0       0
  6101 ;;Total ram usage:        8 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    2
  6104 ;; This function calls:
  6105 ;;		___lldiv
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _I2C_Master_Init
  6113  1DAC                     _I2C_Master_Init:	
  6114                           
  6115                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6116                           
  6117                           ;incstack = 0
  6118                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6119  1DAC  3028               	movlw	40
  6120  1DAD  0094               	movwf	20	;volatile
  6121                           
  6122                           ;I2C.c: 11:   SSPCON2 = 0;
  6123  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  6124  1DAF  0191               	clrf	17	;volatile
  6125                           
  6126                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6127  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  6128  1DB1  082D               	movf	I2C_Master_Init@c,w
  6129  1DB2  00B1               	movwf	??_I2C_Master_Init
  6130  1DB3  082E               	movf	I2C_Master_Init@c+1,w
  6131  1DB4  00B2               	movwf	??_I2C_Master_Init+1
  6132  1DB5  082F               	movf	I2C_Master_Init@c+2,w
  6133  1DB6  00B3               	movwf	??_I2C_Master_Init+2
  6134  1DB7  0830               	movf	I2C_Master_Init@c+3,w
  6135  1DB8  00B4               	movwf	??_I2C_Master_Init+3
  6136  1DB9  3002               	movlw	2
  6137  1DBA                     u7225:	
  6138  1DBA  1003               	clrc
  6139  1DBB  0DB1               	rlf	??_I2C_Master_Init,f
  6140  1DBC  0DB2               	rlf	??_I2C_Master_Init+1,f
  6141  1DBD  0DB3               	rlf	??_I2C_Master_Init+2,f
  6142  1DBE  0DB4               	rlf	??_I2C_Master_Init+3,f
  6143  1DBF  3EFF               	addlw	-1
  6144  1DC0  1D03               	skipz
  6145  1DC1  2DBA               	goto	u7225
  6146  1DC2  0834               	movf	??_I2C_Master_Init+3,w
  6147  1DC3  00A3               	movwf	___lldiv@divisor+3
  6148  1DC4  0833               	movf	??_I2C_Master_Init+2,w
  6149  1DC5  00A2               	movwf	___lldiv@divisor+2
  6150  1DC6  0832               	movf	??_I2C_Master_Init+1,w
  6151  1DC7  00A1               	movwf	___lldiv@divisor+1
  6152  1DC8  0831               	movf	??_I2C_Master_Init,w
  6153  1DC9  00A0               	movwf	___lldiv@divisor
  6154  1DCA  307A               	movlw	122
  6155  1DCB  01A7               	clrf	___lldiv@dividend+3
  6156  1DCC  00A6               	movwf	___lldiv@dividend+2
  6157  1DCD  3012               	movlw	18
  6158  1DCE  00A5               	movwf	___lldiv@dividend+1
  6159  1DCF  01A4               	clrf	___lldiv@dividend
  6160  1DD0  25D9               	fcall	___lldiv
  6161  1DD1  0820               	movf	?___lldiv,w
  6162  1DD2  3EFF               	addlw	255
  6163  1DD3  1683               	bsf	3,5	;RP0=1, select bank1
  6164  1DD4  0093               	movwf	19	;volatile
  6165                           
  6166                           ;I2C.c: 13:   SSPSTAT = 0;
  6167  1DD5  0194               	clrf	20	;volatile
  6168                           
  6169                           ;I2C.c: 14:   TRISC3 = 1;
  6170  1DD6  1587               	bsf	7,3	;volatile
  6171                           
  6172                           ;I2C.c: 15:   TRISC4 = 1;
  6173  1DD7  1607               	bsf	7,4	;volatile
  6174  1DD8  0008               	return
  6175  1DD9                     __end_of_I2C_Master_Init:	
  6176  1DD9                     __ptext12:	
  6177 ;; *************** function ___lldiv *****************
  6178 ;; Defined at:
  6179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  divisor         4    0[BANK0 ] unsigned long 
  6182 ;;  dividend        4    4[BANK0 ] unsigned long 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  quotient        4    8[BANK0 ] unsigned long 
  6185 ;;  counter         1   12[BANK0 ] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  4    0[BANK0 ] unsigned long 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 300/0
  6192 ;;		On exit  : 300/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6195 ;;      Params:         0       8       0       0       0
  6196 ;;      Locals:         0       5       0       0       0
  6197 ;;      Temps:          0       0       0       0       0
  6198 ;;      Totals:         0      13       0       0       0
  6199 ;;Total ram usage:       13 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_I2C_Master_Init
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function ___lldiv
  6211  1DD9                     ___lldiv:	
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6215  1DD9  01A8               	clrf	___lldiv@quotient
  6216  1DDA  01A9               	clrf	___lldiv@quotient+1
  6217  1DDB  01AA               	clrf	___lldiv@quotient+2
  6218  1DDC  01AB               	clrf	___lldiv@quotient+3
  6219  1DDD  0823               	movf	___lldiv@divisor+3,w
  6220  1DDE  0422               	iorwf	___lldiv@divisor+2,w
  6221  1DDF  0421               	iorwf	___lldiv@divisor+1,w
  6222  1DE0  0420               	iorwf	___lldiv@divisor,w
  6223  1DE1  1903               	skipnz
  6224  1DE2  2E18               	goto	l7612
  6225  1DE3  01AC               	clrf	___lldiv@counter
  6226  1DE4                     L6:	
  6227  1DE4  0AAC               	incf	___lldiv@counter,f
  6228  1DE5  1BA3               	btfsc	___lldiv@divisor+3,7
  6229  1DE6  2DED               	goto	l7600
  6230  1DE7  1003               	clrc
  6231  1DE8  0DA0               	rlf	___lldiv@divisor,f
  6232  1DE9  0DA1               	rlf	___lldiv@divisor+1,f
  6233  1DEA  0DA2               	rlf	___lldiv@divisor+2,f
  6234  1DEB  0DA3               	rlf	___lldiv@divisor+3,f
  6235  1DEC  2DE4               	goto	L6
  6236  1DED                     l7600:	
  6237  1DED  1003               	clrc
  6238  1DEE  0DA8               	rlf	___lldiv@quotient,f
  6239  1DEF  0DA9               	rlf	___lldiv@quotient+1,f
  6240  1DF0  0DAA               	rlf	___lldiv@quotient+2,f
  6241  1DF1  0DAB               	rlf	___lldiv@quotient+3,f
  6242  1DF2  0823               	movf	___lldiv@divisor+3,w
  6243  1DF3  0227               	subwf	___lldiv@dividend+3,w
  6244  1DF4  1D03               	skipz
  6245  1DF5  2E00               	goto	u7205
  6246  1DF6  0822               	movf	___lldiv@divisor+2,w
  6247  1DF7  0226               	subwf	___lldiv@dividend+2,w
  6248  1DF8  1D03               	skipz
  6249  1DF9  2E00               	goto	u7205
  6250  1DFA  0821               	movf	___lldiv@divisor+1,w
  6251  1DFB  0225               	subwf	___lldiv@dividend+1,w
  6252  1DFC  1D03               	skipz
  6253  1DFD  2E00               	goto	u7205
  6254  1DFE  0820               	movf	___lldiv@divisor,w
  6255  1DFF  0224               	subwf	___lldiv@dividend,w
  6256  1E00                     u7205:	
  6257  1E00  1C03               	skipc
  6258  1E01  2E12               	goto	L7
  6259  1E02  0820               	movf	___lldiv@divisor,w
  6260  1E03  02A4               	subwf	___lldiv@dividend,f
  6261  1E04  0821               	movf	___lldiv@divisor+1,w
  6262  1E05  1C03               	skipc
  6263  1E06  0F21               	incfsz	___lldiv@divisor+1,w
  6264  1E07  02A5               	subwf	___lldiv@dividend+1,f
  6265  1E08  0822               	movf	___lldiv@divisor+2,w
  6266  1E09  1C03               	skipc
  6267  1E0A  0F22               	incfsz	___lldiv@divisor+2,w
  6268  1E0B  02A6               	subwf	___lldiv@dividend+2,f
  6269  1E0C  0823               	movf	___lldiv@divisor+3,w
  6270  1E0D  1C03               	skipc
  6271  1E0E  0F23               	incfsz	___lldiv@divisor+3,w
  6272  1E0F  02A7               	subwf	___lldiv@dividend+3,f
  6273  1E10  1428               	bsf	___lldiv@quotient,0
  6274  1E11  1003               	clrc
  6275  1E12                     L7:	
  6276  1E12  0CA3               	rrf	___lldiv@divisor+3,f
  6277  1E13  0CA2               	rrf	___lldiv@divisor+2,f
  6278  1E14  0CA1               	rrf	___lldiv@divisor+1,f
  6279  1E15  0CA0               	rrf	___lldiv@divisor,f
  6280  1E16  0BAC               	decfsz	___lldiv@counter,f
  6281  1E17  2DED               	goto	l7600
  6282  1E18                     l7612:	
  6283  1E18  082B               	movf	___lldiv@quotient+3,w
  6284  1E19  00A3               	movwf	?___lldiv+3
  6285  1E1A  082A               	movf	___lldiv@quotient+2,w
  6286  1E1B  00A2               	movwf	?___lldiv+2
  6287  1E1C  0829               	movf	___lldiv@quotient+1,w
  6288  1E1D  00A1               	movwf	?___lldiv+1
  6289  1E1E  0828               	movf	___lldiv@quotient,w
  6290  1E1F  00A0               	movwf	?___lldiv
  6291  1E20  0008               	return
  6292  1E21                     __end_of___lldiv:	
  6293                           
  6294                           	psect	text14
  6295  1C6E                     __ptext14:	
  6296 ;; *************** function _strcpy *****************
  6297 ;; Defined at:
  6298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  to              1    wreg     PTR unsigned char 
  6301 ;;		 -> texto(16), 
  6302 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6303 ;;		 -> STR_2(1), 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6306 ;;		 -> texto(16), 
  6307 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6308 ;;		 -> texto(16), 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      PTR unsigned char 
  6311 ;; Registers used:
  6312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6313 ;; Tracked objects:
  6314 ;;		On entry : B00/0
  6315 ;;		On exit  : B00/800
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6318 ;;      Params:         0       1       0       0       0
  6319 ;;      Locals:         0       2       0       0       0
  6320 ;;      Temps:          0       1       0       0       0
  6321 ;;      Totals:         0       4       0       0       0
  6322 ;;Total ram usage:        4 bytes
  6323 ;; Hardware stack levels used:    2
  6324 ;; Hardware stack levels required when called:    1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_Decodify_Command
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _strcpy
  6334  1C6E                     _strcpy:	
  6335                           
  6336                           ;incstack = 0
  6337                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6338                           ;strcpy@to stored from wreg
  6339  1C6E  00A2               	movwf	strcpy@to
  6340  1C6F  00A3               	movwf	strcpy@cp
  6341  1C70                     l7472:	
  6342  1C70  0820               	movf	strcpy@from,w
  6343  1C71  0084               	movwf	4
  6344  1C72  160A  158A  200A  160A  158A  	fcall	stringdir
  6345  1C77  00A1               	movwf	??_strcpy
  6346  1C78  0823               	movf	strcpy@cp,w
  6347  1C79  0084               	movwf	4
  6348  1C7A  0821               	movf	??_strcpy,w
  6349  1C7B  1783               	bsf	3,7	;select IRP bank2
  6350  1C7C  0080               	movwf	0
  6351  1C7D  0800               	movf	0,w
  6352  1C7E  1903               	btfsc	3,2
  6353  1C7F  0008               	return
  6354  1C80  0AA3               	incf	strcpy@cp,f
  6355  1C81  0AA0               	incf	strcpy@from,f
  6356  1C82  2C70               	goto	l7472
  6357  1C83                     __end_of_strcpy:	
  6358                           
  6359                           	psect	text17
  6360  1D39                     __ptext17:	
  6361 ;; *************** function _utoa *****************
  6362 ;; Defined at:
  6363 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  buf             1    wreg     PTR unsigned char 
  6366 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6367 ;;  val             2    7[BANK0 ] unsigned int 
  6368 ;;  base            2    9[BANK0 ] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6371 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6372 ;;  v               2   11[BANK0 ] unsigned int 
  6373 ;;  c               1   13[BANK0 ] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      PTR unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 300/0
  6380 ;;		On exit  : B00/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6383 ;;      Params:         0       4       0       0       0
  6384 ;;      Locals:         0       4       0       0       0
  6385 ;;      Temps:          0       0       0       0       0
  6386 ;;      Totals:         0       8       0       0       0
  6387 ;;Total ram usage:        8 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    2
  6390 ;; This function calls:
  6391 ;;		___lwdiv
  6392 ;;		___lwmod
  6393 ;; This function is called by:
  6394 ;;		_itoa
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _utoa
  6400  1D39                     _utoa:	
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6404                           ;utoa@buf stored from wreg
  6405  1D39  00AE               	movwf	utoa@buf
  6406  1D3A  0828               	movf	utoa@val+1,w
  6407  1D3B  00AC               	movwf	utoa@v+1
  6408  1D3C  0827               	movf	utoa@val,w
  6409  1D3D  00AB               	movwf	utoa@v
  6410  1D3E                     l7124:	
  6411  1D3E  082A               	movf	utoa@base+1,w
  6412  1D3F  00A1               	movwf	___lwdiv@divisor+1
  6413  1D40  0829               	movf	utoa@base,w
  6414  1D41  00A0               	movwf	___lwdiv@divisor
  6415  1D42  082C               	movf	utoa@v+1,w
  6416  1D43  00A3               	movwf	___lwdiv@dividend+1
  6417  1D44  082B               	movf	utoa@v,w
  6418  1D45  00A2               	movwf	___lwdiv@dividend
  6419  1D46  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6420  1D4B  0821               	movf	?___lwdiv+1,w
  6421  1D4C  00AC               	movwf	utoa@v+1
  6422  1D4D  0820               	movf	?___lwdiv,w
  6423  1D4E  00AB               	movwf	utoa@v
  6424  1D4F  0AAE               	incf	utoa@buf,f
  6425  1D50  042C               	iorwf	utoa@v+1,w
  6426  1D51  1D03               	btfss	3,2
  6427  1D52  2D3E               	goto	l7124
  6428  1D53  082E               	movf	utoa@buf,w
  6429  1D54  0084               	movwf	4
  6430  1D55  1383               	bcf	3,7	;select IRP bank0
  6431  1D56  0180               	clrf	0
  6432  1D57  03AE               	decf	utoa@buf,f
  6433  1D58                     l7134:	
  6434  1D58  082A               	movf	utoa@base+1,w
  6435  1D59  00A1               	movwf	___lwmod@divisor+1
  6436  1D5A  0829               	movf	utoa@base,w
  6437  1D5B  00A0               	movwf	___lwmod@divisor
  6438  1D5C  0828               	movf	utoa@val+1,w
  6439  1D5D  00A3               	movwf	___lwmod@dividend+1
  6440  1D5E  0827               	movf	utoa@val,w
  6441  1D5F  00A2               	movwf	___lwmod@dividend
  6442  1D60  2588               	fcall	___lwmod
  6443  1D61  0820               	movf	?___lwmod,w
  6444  1D62  00AD               	movwf	utoa@c
  6445  1D63  082A               	movf	utoa@base+1,w
  6446  1D64  00A1               	movwf	___lwdiv@divisor+1
  6447  1D65  0829               	movf	utoa@base,w
  6448  1D66  00A0               	movwf	___lwdiv@divisor
  6449  1D67  0828               	movf	utoa@val+1,w
  6450  1D68  00A3               	movwf	___lwdiv@dividend+1
  6451  1D69  0827               	movf	utoa@val,w
  6452  1D6A  00A2               	movwf	___lwdiv@dividend
  6453  1D6B  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6454  1D70  0821               	movf	?___lwdiv+1,w
  6455  1D71  00A8               	movwf	utoa@val+1
  6456  1D72  0820               	movf	?___lwdiv,w
  6457  1D73  00A7               	movwf	utoa@val
  6458  1D74  300A               	movlw	10
  6459  1D75  022D               	subwf	utoa@c,w
  6460  1D76  1C03               	skipc
  6461  1D77  2D7A               	goto	l1493
  6462  1D78  3007               	movlw	7
  6463  1D79  07AD               	addwf	utoa@c,f
  6464  1D7A                     l1493:	
  6465  1D7A  3030               	movlw	48
  6466  1D7B  07AD               	addwf	utoa@c,f
  6467  1D7C  082E               	movf	utoa@buf,w
  6468  1D7D  0084               	movwf	4
  6469  1D7E  082D               	movf	utoa@c,w
  6470  1D7F  1383               	bcf	3,7	;select IRP bank0
  6471  1D80  0080               	movwf	0
  6472  1D81  03AE               	decf	utoa@buf,f
  6473  1D82  0827               	movf	utoa@val,w
  6474  1D83  0428               	iorwf	utoa@val+1,w
  6475  1D84  1D03               	btfss	3,2
  6476  1D85  2D58               	goto	l7134
  6477                           
  6478                           ;	Return value of _utoa is never used
  6479  1D86  0AAE               	incf	utoa@buf,f
  6480  1D87  0008               	return
  6481  1D88                     __end_of_utoa:	
  6482  1D88                     __ptext18:	
  6483 ;; *************** function ___lwmod *****************
  6484 ;; Defined at:
  6485 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  divisor         2    0[BANK0 ] unsigned int 
  6488 ;;  dividend        2    2[BANK0 ] unsigned int 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  counter         1    4[BANK0 ] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    0[BANK0 ] unsigned int 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 300/0
  6497 ;;		On exit  : 300/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6500 ;;      Params:         0       4       0       0       0
  6501 ;;      Locals:         0       1       0       0       0
  6502 ;;      Temps:          0       0       0       0       0
  6503 ;;      Totals:         0       5       0       0       0
  6504 ;;Total ram usage:        5 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_utoa
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function ___lwmod
  6516  1D88                     ___lwmod:	
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6520  1D88  0820               	movf	___lwmod@divisor,w
  6521  1D89  0421               	iorwf	___lwmod@divisor+1,w
  6522  1D8A  1903               	btfsc	3,2
  6523  1D8B  2DA7               	goto	l6624
  6524  1D8C  01A4               	clrf	___lwmod@counter
  6525  1D8D                     L12:	
  6526  1D8D  0AA4               	incf	___lwmod@counter,f
  6527  1D8E  1BA1               	btfsc	___lwmod@divisor+1,7
  6528  1D8F  2D94               	goto	l6616
  6529  1D90  1003               	clrc
  6530  1D91  0DA0               	rlf	___lwmod@divisor,f
  6531  1D92  0DA1               	rlf	___lwmod@divisor+1,f
  6532  1D93  2D8D               	goto	L12
  6533  1D94                     l6616:	
  6534  1D94  0821               	movf	___lwmod@divisor+1,w
  6535  1D95  0223               	subwf	___lwmod@dividend+1,w
  6536  1D96  1D03               	skipz
  6537  1D97  2D9A               	goto	u6175
  6538  1D98  0820               	movf	___lwmod@divisor,w
  6539  1D99  0222               	subwf	___lwmod@dividend,w
  6540  1D9A                     u6175:	
  6541  1D9A  1C03               	skipc
  6542  1D9B  2DA3               	goto	L13
  6543  1D9C  0820               	movf	___lwmod@divisor,w
  6544  1D9D  02A2               	subwf	___lwmod@dividend,f
  6545  1D9E  0821               	movf	___lwmod@divisor+1,w
  6546  1D9F  1C03               	skipc
  6547  1DA0  03A3               	decf	___lwmod@dividend+1,f
  6548  1DA1  02A3               	subwf	___lwmod@dividend+1,f
  6549  1DA2  1003               	clrc
  6550  1DA3                     L13:	
  6551  1DA3  0CA1               	rrf	___lwmod@divisor+1,f
  6552  1DA4  0CA0               	rrf	___lwmod@divisor,f
  6553  1DA5  0BA4               	decfsz	___lwmod@counter,f
  6554  1DA6  2D94               	goto	l6616
  6555  1DA7                     l6624:	
  6556  1DA7  0823               	movf	___lwmod@dividend+1,w
  6557  1DA8  00A1               	movwf	?___lwmod+1
  6558  1DA9  0822               	movf	___lwmod@dividend,w
  6559  1DAA  00A0               	movwf	?___lwmod
  6560  1DAB  0008               	return
  6561  1DAC                     __end_of___lwmod:	
  6562                           
  6563                           	psect	text21
  6564  1CEE                     __ptext21:	
  6565 ;; *************** function _USART_to_Protocol *****************
  6566 ;; Defined at:
  6567 ;;		line 77 in file "usart.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  usart_protoc    1    wreg     PTR struct .
  6570 ;;		 -> usart_protocol(16), 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6573 ;;		 -> usart_protocol(16), 
  6574 ;;  i               2    2[BANK0 ] int 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6579 ;; Tracked objects:
  6580 ;;		On entry : 300/300
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6584 ;;      Params:         0       0       0       0       0
  6585 ;;      Locals:         0       3       0       0       0
  6586 ;;      Temps:          0       2       0       0       0
  6587 ;;      Totals:         0       5       0       0       0
  6588 ;;Total ram usage:        5 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_Decodify_Command
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           
  6599                           ;psect for function _USART_to_Protocol
  6600  1CEE                     _USART_to_Protocol:	
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6604                           ;USART_to_Protocol@usart_protocol stored from wreg
  6605  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
  6606  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
  6607  1CF0  00A4               	movwf	USART_to_Protocol@usart_protocol
  6608                           
  6609                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6610  1CF1  0084               	movwf	4
  6611  1CF2  1703               	bsf	3,6	;RP1=1, select bank2
  6612  1CF3  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6613  1CF4  1783               	bsf	3,7	;select IRP bank2
  6614  1CF5  0080               	movwf	0
  6615  1CF6  0A84               	incf	4,f
  6616  1CF7  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6617  1CF8  0080               	movwf	0
  6618                           
  6619                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6620  1CF9  1303               	bcf	3,6	;RP1=0, select bank0
  6621  1CFA  0824               	movf	USART_to_Protocol@usart_protocol,w
  6622  1CFB  3E02               	addlw	2
  6623  1CFC  0084               	movwf	4
  6624  1CFD  1703               	bsf	3,6	;RP1=1, select bank2
  6625  1CFE  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6626  1CFF  0080               	movwf	0
  6627                           
  6628                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6629  1D00  1303               	bcf	3,6	;RP1=0, select bank0
  6630  1D01  0824               	movf	USART_to_Protocol@usart_protocol,w
  6631  1D02  3E03               	addlw	3
  6632  1D03  0084               	movwf	4
  6633  1D04  1703               	bsf	3,6	;RP1=1, select bank2
  6634  1D05  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6635  1D06  0080               	movwf	0
  6636                           
  6637                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6638  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  6639  1D08  0824               	movf	USART_to_Protocol@usart_protocol,w
  6640  1D09  3E04               	addlw	4
  6641  1D0A  0084               	movwf	4
  6642  1D0B  1703               	bsf	3,6	;RP1=1, select bank2
  6643  1D0C  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6644  1D0D  0080               	movwf	0
  6645                           
  6646                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6647  1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  6648  1D0F  0824               	movf	USART_to_Protocol@usart_protocol,w
  6649  1D10  3E05               	addlw	5
  6650  1D11  0084               	movwf	4
  6651  1D12  1703               	bsf	3,6	;RP1=1, select bank2
  6652  1D13  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6653  1D14  0080               	movwf	0
  6654                           
  6655                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6656  1D15  1303               	bcf	3,6	;RP1=0, select bank0
  6657  1D16  01A2               	clrf	USART_to_Protocol@i
  6658  1D17  01A3               	clrf	USART_to_Protocol@i+1
  6659  1D18                     l7412:	
  6660  1D18  0824               	movf	USART_to_Protocol@usart_protocol,w
  6661  1D19  3E05               	addlw	5
  6662  1D1A  0084               	movwf	4
  6663  1D1B  0823               	movf	USART_to_Protocol@i+1,w
  6664  1D1C  3A80               	xorlw	128
  6665  1D1D  00A0               	movwf	??_USART_to_Protocol
  6666  1D1E  3080               	movlw	128
  6667  1D1F  0220               	subwf	??_USART_to_Protocol,w
  6668  1D20  1D03               	skipz
  6669  1D21  2D24               	goto	u7015
  6670  1D22  0800               	movf	0,w
  6671  1D23  0222               	subwf	USART_to_Protocol@i,w
  6672  1D24                     u7015:	
  6673  1D24  1803               	btfsc	3,0
  6674  1D25  0008               	return
  6675                           
  6676                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6677  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  6678  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  6679  1D28  0822               	movf	USART_to_Protocol@i,w
  6680  1D29  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6681  1D2A  0084               	movwf	4
  6682  1D2B  1783               	bsf	3,7	;select IRP bank2
  6683  1D2C  0800               	movf	0,w
  6684  1D2D  00A0               	movwf	??_USART_to_Protocol
  6685  1D2E  0822               	movf	USART_to_Protocol@i,w
  6686  1D2F  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6687  1D30  00A1               	movwf	??_USART_to_Protocol+1
  6688  1D31  3E06               	addlw	6
  6689  1D32  0084               	movwf	4
  6690  1D33  0820               	movf	??_USART_to_Protocol,w
  6691  1D34  0080               	movwf	0
  6692  1D35  0AA2               	incf	USART_to_Protocol@i,f
  6693  1D36  1903               	skipnz
  6694  1D37  0AA3               	incf	USART_to_Protocol@i+1,f
  6695  1D38  2D18               	goto	l7412
  6696  1D39                     __end_of_USART_to_Protocol:	
  6697                           
  6698                           	psect	text22
  6699  1C99                     __ptext22:	
  6700 ;; *************** function _USART_put_buffer *****************
  6701 ;; Defined at:
  6702 ;;		line 99 in file "usart.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  vetor           1    wreg     PTR unsigned char 
  6705 ;;		 -> buffer(32), 
  6706 ;;  size            2    1[BANK0 ] unsigned int 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  6709 ;;		 -> buffer(32), 
  6710 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  6711 ;;		 -> USART_put_buffer@vetor(1), 
  6712 ;;  loop            1    6[BANK0 ] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 300/0
  6719 ;;		On exit  : 300/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6722 ;;      Params:         0       2       0       0       0
  6723 ;;      Locals:         0       3       0       0       0
  6724 ;;      Temps:          0       2       0       0       0
  6725 ;;      Totals:         0       7       0       0       0
  6726 ;;Total ram usage:        7 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    2
  6729 ;; This function calls:
  6730 ;;		_USART_putc
  6731 ;; This function is called by:
  6732 ;;		_Decodify_Command
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           
  6737                           ;psect for function _USART_put_buffer
  6738  1C99                     _USART_put_buffer:	
  6739                           
  6740                           ;incstack = 0
  6741                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6742                           ;USART_put_buffer@vetor stored from wreg
  6743  1C99  00A5               	movwf	USART_put_buffer@vetor
  6744  1C9A  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6745                           
  6746                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6747  1C9B  01A6               	clrf	USART_put_buffer@loop
  6748                           
  6749                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6750  1C9C  00A7               	movwf	USART_put_buffer@ptr
  6751  1C9D                     l7452:	
  6752                           ;usart.c: 105:     while(loop<size)
  6753                           
  6754                           
  6755                           ;usart.c: 105:     while(loop<size)
  6756  1C9D  0826               	movf	USART_put_buffer@loop,w
  6757  1C9E  00A3               	movwf	??_USART_put_buffer
  6758  1C9F  01A4               	clrf	??_USART_put_buffer+1
  6759  1CA0  0822               	movf	USART_put_buffer@size+1,w
  6760  1CA1  0224               	subwf	??_USART_put_buffer+1,w
  6761  1CA2  1D03               	skipz
  6762  1CA3  2CA6               	goto	u7045
  6763  1CA4  0821               	movf	USART_put_buffer@size,w
  6764  1CA5  0223               	subwf	??_USART_put_buffer,w
  6765  1CA6                     u7045:	
  6766  1CA6  1803               	btfsc	3,0
  6767  1CA7  0008               	return
  6768                           
  6769                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6770  1CA8  0827               	movf	USART_put_buffer@ptr,w
  6771  1CA9  0084               	movwf	4
  6772  1CAA  1383               	bcf	3,7	;select IRP bank0
  6773  1CAB  0800               	movf	0,w
  6774  1CAC  120A  158A  2587  160A  158A  	fcall	_USART_putc
  6775                           
  6776                           ;usart.c: 108:         ptr++;
  6777  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  6778  1CB2  0AA7               	incf	USART_put_buffer@ptr,f
  6779                           
  6780                           ;usart.c: 109:         loop++;
  6781  1CB3  0AA6               	incf	USART_put_buffer@loop,f
  6782  1CB4  2C9D               	goto	l7452
  6783  1CB5                     __end_of_USART_put_buffer:	
  6784                           
  6785                           	psect	text29
  6786  1C48                     __ptext29:	
  6787 ;; *************** function _PROCULUS_VP_Write_String *****************
  6788 ;; Defined at:
  6789 ;;		line 205 in file "proculus.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  vp              2   21[BANK0 ] unsigned int 
  6792 ;;  text            1   23[BANK0 ] PTR unsigned char 
  6793 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 300/0
  6802 ;;		On exit  : 300/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6805 ;;      Params:         0       3       0       0       0
  6806 ;;      Locals:         0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0
  6808 ;;      Totals:         0       3       0       0       0
  6809 ;;Total ram usage:        3 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    4
  6812 ;; This function calls:
  6813 ;;		_PROCULUS_VP_Write
  6814 ;;		_strlen
  6815 ;; This function is called by:
  6816 ;;		_Decodify_Command
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function _PROCULUS_VP_Write_String
  6822  1C48                     _PROCULUS_VP_Write_String:	
  6823                           
  6824                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6825                           
  6826                           ;incstack = 0
  6827                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6828  1C48  0836               	movf	PROCULUS_VP_Write_String@vp+1,w
  6829  1C49  00AE               	movwf	PROCULUS_VP_Write@vp+1
  6830  1C4A  0835               	movf	PROCULUS_VP_Write_String@vp,w
  6831  1C4B  00AD               	movwf	PROCULUS_VP_Write@vp
  6832  1C4C  0837               	movf	PROCULUS_VP_Write_String@text,w
  6833  1C4D  00AF               	movwf	PROCULUS_VP_Write@vetor
  6834  1C4E  3001               	movlw	1
  6835  1C4F  00B0               	movwf	PROCULUS_VP_Write@vetor+1
  6836  1C50  0837               	movf	PROCULUS_VP_Write_String@text,w
  6837  1C51  120A  158A  25B2   	fcall	_strlen
  6838  1C54  0820               	movf	?_strlen,w
  6839  1C55  3E01               	addlw	1
  6840  1C56  00B1               	movwf	PROCULUS_VP_Write@size
  6841  1C57  120A  158A  280F   	ljmp	l6910
  6842  1C5A                     __end_of_PROCULUS_VP_Write_String:	
  6843                           
  6844                           	psect	text31
  6845  080F                     __ptext31:	
  6846 ;; *************** function _PROCULUS_VP_Write *****************
  6847 ;; Defined at:
  6848 ;;		line 40 in file "proculus.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  vp              2   13[BANK0 ] unsigned int 
  6851 ;;  vetor           2   15[BANK0 ] PTR unsigned char 
  6852 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6853 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6854 ;;  size            1   17[BANK0 ] unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  i               1   20[BANK0 ] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : B00/800
  6863 ;;		On exit  : 300/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6866 ;;      Params:         0       5       0       0       0
  6867 ;;      Locals:         0       1       0       0       0
  6868 ;;      Temps:          0       2       0       0       0
  6869 ;;      Totals:         0       8       0       0       0
  6870 ;;Total ram usage:        8 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    3
  6873 ;; This function calls:
  6874 ;;		_PROCULUS_Delay
  6875 ;;		_USART_put_int
  6876 ;;		_USART_putc
  6877 ;; This function is called by:
  6878 ;;		_PROCULUS_VP_Write_String
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           
  6883                           ;psect for function _PROCULUS_VP_Write
  6884  080F                     _PROCULUS_VP_Write:	
  6885  080F                     l6910:	
  6886                           ;incstack = 0
  6887                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6888                           
  6889                           
  6890                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6891  080F  30A5               	movlw	165
  6892  0810  00AA               	movwf	USART_put_int@value
  6893  0811  305A               	movlw	90
  6894  0812  00AB               	movwf	USART_put_int@value+1
  6895  0813  2704  120A  158A   	fcall	_USART_put_int
  6896                           
  6897                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6898  0816  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0817  0831               	movf	PROCULUS_VP_Write@size,w
  6900  0818  3E03               	addlw	3
  6901  0819  2587  120A  158A   	fcall	_USART_putc
  6902                           
  6903                           ;proculus.c: 43:      USART_putc(0x82);
  6904  081C  3082               	movlw	130
  6905  081D  2587  120A  158A   	fcall	_USART_putc
  6906                           
  6907                           ;proculus.c: 44:      USART_put_int(vp);
  6908  0820  1283               	bcf	3,5	;RP0=0, select bank0
  6909  0821  082E               	movf	PROCULUS_VP_Write@vp+1,w
  6910  0822  00AB               	movwf	USART_put_int@value+1
  6911  0823  082D               	movf	PROCULUS_VP_Write@vp,w
  6912  0824  00AA               	movwf	USART_put_int@value
  6913  0825  2704  120A  158A   	fcall	_USART_put_int
  6914                           
  6915                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6916  0828  1283               	bcf	3,5	;RP0=0, select bank0
  6917  0829  01B4               	clrf	PROCULUS_VP_Write@i
  6918  082A                     l6922:	
  6919  082A  0831               	movf	PROCULUS_VP_Write@size,w
  6920  082B  0234               	subwf	PROCULUS_VP_Write@i,w
  6921  082C  1803               	btfsc	3,0
  6922  082D  2841               	goto	l6924
  6923                           
  6924                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6925  082E  0834               	movf	PROCULUS_VP_Write@i,w
  6926  082F  072F               	addwf	PROCULUS_VP_Write@vetor,w
  6927  0830  00B2               	movwf	??_PROCULUS_VP_Write
  6928  0831  0830               	movf	PROCULUS_VP_Write@vetor+1,w
  6929  0832  1803               	skipnc
  6930  0833  3E01               	addlw	1
  6931  0834  00B3               	movwf	??_PROCULUS_VP_Write+1
  6932  0835  0832               	movf	??_PROCULUS_VP_Write,w
  6933  0836  0084               	movwf	4
  6934  0837  1783               	bsf	3,7
  6935  0838  1C33               	btfss	??_PROCULUS_VP_Write+1,0
  6936  0839  1383               	bcf	3,7
  6937  083A  0800               	movf	0,w
  6938  083B  2587  120A  158A   	fcall	_USART_putc
  6939  083E  1283               	bcf	3,5	;RP0=0, select bank0
  6940  083F  0AB4               	incf	PROCULUS_VP_Write@i,f
  6941  0840  282A               	goto	l6922
  6942  0841                     l6924:	
  6943                           
  6944                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6945  0841  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6946  0842  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6947  0843  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6948  0844  2FE6               	ljmp	l6554
  6949  0845                     __end_of_PROCULUS_VP_Write:	
  6950  0845                     __ptext13:	
  6951 ;; *************** function _Decodify_Command *****************
  6952 ;; Defined at:
  6953 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  ss             10   49[BANK1 ] unsigned char [10]
  6958 ;;  mm             10   39[BANK1 ] unsigned char [10]
  6959 ;;  hh             10   29[BANK1 ] unsigned char [10]
  6960 ;;  sizedata        1   69[BANK1 ] unsigned char 
  6961 ;;  add             1   61[BANK1 ] unsigned char 
  6962 ;;  add_24LCxxxx    4   70[BANK1 ] unsigned long 
  6963 ;;  OutPut          4   64[BANK1 ] float 
  6964 ;;  tempint         2   62[BANK1 ] int 
  6965 ;;  dados           2   59[BANK1 ] int 
  6966 ;;  tempchar        1   68[BANK1 ] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 300/300
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6976 ;;      Params:         0       0       0       0       0
  6977 ;;      Locals:         0       0      45       0       0
  6978 ;;      Temps:          0       2       0       0       0
  6979 ;;      Totals:         0       2      45       0       0
  6980 ;;Total ram usage:       47 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    6
  6983 ;; This function calls:
  6984 ;;		_EEPROM_24C1025_Fill_All
  6985 ;;		_EEPROM_24C1025_Read_Buffer
  6986 ;;		_EEPROM_24C1025_Read_Byte
  6987 ;;		_EEPROM_24C1025_Read_Int
  6988 ;;		_EEPROM_24C1025_Read_Str
  6989 ;;		_EEPROM_24C1025_Write_Buffer
  6990 ;;		_EEPROM_24C1025_Write_Byte
  6991 ;;		_EEPROM_24C1025_Write_Int
  6992 ;;		_EEPROM_24C1025_Write_Str
  6993 ;;		_EEPROM_Read_Byte
  6994 ;;		_EEPROM_Read_Integer
  6995 ;;		_EEPROM_Read_String
  6996 ;;		_EEPROM_Write_Byte
  6997 ;;		_EEPROM_Write_Integer
  6998 ;;		_EEPROM_Write_String
  6999 ;;		_Load_Work
  7000 ;;		_PROCULUS_Buzzer
  7001 ;;		_PROCULUS_Show_Screen
  7002 ;;		_PROCULUS_VP_Write_String
  7003 ;;		_Save_Log
  7004 ;;		_Send_Reply_OK
  7005 ;;		_Send_To_MB
  7006 ;;		_USART_put_buffer
  7007 ;;		_USART_put_int
  7008 ;;		_USART_put_string
  7009 ;;		_USART_putc
  7010 ;;		_USART_to_Protocol
  7011 ;;		___flmul
  7012 ;;		___fltol
  7013 ;;		_itoa
  7014 ;;		_strcat
  7015 ;;		_strcpy
  7016 ;;		_strlen
  7017 ;; This function is called by:
  7018 ;;		_main
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           
  7023                           ;psect for function _Decodify_Command
  7024  0845                     _Decodify_Command:	
  7025                           
  7026                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  7027                           
  7028                           ;incstack = 0
  7029                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7030  0845  30CD               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  7031  0846  160A  158A  24EE  120A  158A  	fcall	_USART_to_Protocol
  7032                           
  7033                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  7034  084B  1683               	bsf	3,5	;RP0=1, select bank3
  7035  084C  1703               	bsf	3,6	;RP1=1, select bank3
  7036  084D  0854               	movf	(_usart_protocol^(0+384)+7),w
  7037  084E  1303               	bcf	3,6	;RP1=0, select bank1
  7038  084F  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7039                           
  7040                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  7041  0850  1703               	bsf	3,6	;RP1=1, select bank3
  7042  0851  0855               	movf	(_usart_protocol^(0+384)+8),w
  7043  0852  1303               	bcf	3,6	;RP1=0, select bank1
  7044  0853  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7045                           
  7046                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  7047  0854  1703               	bsf	3,6	;RP1=1, select bank3
  7048  0855  0856               	movf	(_usart_protocol^(0+384)+9),w
  7049  0856  1303               	bcf	3,6	;RP1=0, select bank1
  7050  0857  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7051                           
  7052                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  7053  0858  1703               	bsf	3,6	;RP1=1, select bank3
  7054  0859  0857               	movf	(_usart_protocol^(0+384)+10),w
  7055  085A  1303               	bcf	3,6	;RP1=0, select bank1
  7056  085B  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7057                           
  7058                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  7059  085C  2B7D               	goto	l8012
  7060  085D                     l7800:	
  7061                           
  7062                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  7063  085D  300B               	movlw	11
  7064  085E  2530  120A  158A   	fcall	_Send_To_MB
  7065                           
  7066                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.11");
  7067  0861  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7068  0862  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0863  00A1               	movwf	USART_put_string@vetor
  7070  0864  3080               	movlw	128
  7071  0865  00A2               	movwf	USART_put_string@vetor+1
  7072  0866  2DC5               	ljmp	l6822
  7073  0867                     l7804:	
  7074                           ;SlaveLiofilizadorVer1.c: 346:              break;
  7075                           
  7076                           
  7077                           ;SlaveLiofilizadorVer1.c: 349:              if(usart_protocol.value[0]==0)
  7078  0867  1683               	bsf	3,5	;RP0=1, select bank3
  7079  0868  1703               	bsf	3,6	;RP1=1, select bank3
  7080  0869  0853               	movf	(_usart_protocol^(0+384)+6),w
  7081  086A  1D03               	btfss	3,2
  7082  086B  287A               	goto	l7808
  7083                           
  7084                           ;SlaveLiofilizadorVer1.c: 350:                 OutPut=Temperatura0;
  7085  086C  0817               	movf	(_Temperatura0+3)^(0+384),w
  7086  086D  1303               	bcf	3,6	;RP1=0, select bank1
  7087  086E  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7088  086F  1703               	bsf	3,6	;RP1=1, select bank3
  7089  0870  0816               	movf	(_Temperatura0+2)^(0+384),w
  7090  0871  1303               	bcf	3,6	;RP1=0, select bank1
  7091  0872  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7092  0873  1703               	bsf	3,6	;RP1=1, select bank3
  7093  0874  0815               	movf	(_Temperatura0+1)^(0+384),w
  7094  0875  1303               	bcf	3,6	;RP1=0, select bank1
  7095  0876  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7096  0877  1703               	bsf	3,6	;RP1=1, select bank3
  7097  0878  0814               	movf	_Temperatura0^(0+384),w
  7098  0879  2887               	goto	L8
  7099  087A                     l7808:	
  7100                           
  7101                           ;SlaveLiofilizadorVer1.c: 352:                 OutPut=Temperatura1;
  7102  087A  0813               	movf	(_Temperatura1+3)^(0+384),w
  7103  087B  1303               	bcf	3,6	;RP1=0, select bank1
  7104  087C  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7105  087D  1703               	bsf	3,6	;RP1=1, select bank3
  7106  087E  0812               	movf	(_Temperatura1+2)^(0+384),w
  7107  087F  1303               	bcf	3,6	;RP1=0, select bank1
  7108  0880  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7109  0881  1703               	bsf	3,6	;RP1=1, select bank3
  7110  0882  0811               	movf	(_Temperatura1+1)^(0+384),w
  7111  0883  1303               	bcf	3,6	;RP1=0, select bank1
  7112  0884  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7113  0885  1703               	bsf	3,6	;RP1=1, select bank3
  7114  0886  0810               	movf	_Temperatura1^(0+384),w
  7115  0887                     L8:	
  7116  0887  1303               	bcf	3,6	;RP1=0, select bank1
  7117  0888  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7118                           
  7119                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  7120  0889  3041               	movlw	65
  7121  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7122  088B  00D8               	movwf	___flmul@b+3
  7123  088C  3020               	movlw	32
  7124  088D  00D7               	movwf	___flmul@b+2
  7125  088E  01D6               	clrf	___flmul@b+1
  7126  088F  01D5               	clrf	___flmul@b
  7127  0890  1683               	bsf	3,5	;RP0=1, select bank1
  7128  0891  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7129  0892  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0893  00DC               	movwf	___flmul@a+3
  7131  0894  1683               	bsf	3,5	;RP0=1, select bank1
  7132  0895  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7133  0896  1283               	bcf	3,5	;RP0=0, select bank0
  7134  0897  00DB               	movwf	___flmul@a+2
  7135  0898  1683               	bsf	3,5	;RP0=1, select bank1
  7136  0899  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7137  089A  1283               	bcf	3,5	;RP0=0, select bank0
  7138  089B  00DA               	movwf	___flmul@a+1
  7139  089C  1683               	bsf	3,5	;RP0=1, select bank1
  7140  089D  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7141  089E  1283               	bcf	3,5	;RP0=0, select bank0
  7142  089F  00D9               	movwf	___flmul@a
  7143  08A0  23DC  120A  158A   	fcall	___flmul
  7144  08A3  0858               	movf	?___flmul+3,w
  7145  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  7146  08A5  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7147  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  7148  08A7  0857               	movf	?___flmul+2,w
  7149  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  7150  08A9  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7151  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  7152  08AB  0856               	movf	?___flmul+1,w
  7153  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  7154  08AD  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7155  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  7156  08AF  0855               	movf	?___flmul,w
  7157  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  7158  08B1  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7159                           
  7160                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  7161  08B2  138B               	bcf	11,7	;volatile
  7162                           
  7163                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  7164  08B3  3002               	movlw	2
  7165  08B4  2530               	fcall	_Send_To_MB
  7166                           
  7167                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  7168  08B5  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7169  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  7170  08B7  00A3               	movwf	___fltol@f1+3
  7171  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  7172  08B9  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7173  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  7174  08BB  00A2               	movwf	___fltol@f1+2
  7175  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  7176  08BD  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7177  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7178  08BF  00A1               	movwf	___fltol@f1+1
  7179  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  7180  08C1  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7181  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7182  08C3  00A0               	movwf	___fltol@f1
  7183  08C4  120A  118A  2659  120A  158A  	fcall	___fltol
  7184  08C9  0821               	movf	?___fltol+1,w
  7185  08CA  00AB               	movwf	USART_put_int@value+1
  7186  08CB  0820               	movf	?___fltol,w
  7187  08CC  00AA               	movwf	USART_put_int@value
  7188  08CD  2704               	fcall	_USART_put_int
  7189                           
  7190                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  7191  08CE  178B               	bsf	11,7	;volatile
  7192                           
  7193                           ;SlaveLiofilizadorVer1.c: 375:              break;
  7194  08CF  0008               	return
  7195  08D0                     l7820:	
  7196                           
  7197                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  7198  08D0  1683               	bsf	3,5	;RP0=1, select bank3
  7199  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7200  08D2  0853               	movf	(_usart_protocol^(0+384)+6),w
  7201  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7202  08D4  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7203                           
  7204                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  7205  08D5  1703               	bsf	3,6	;RP1=1, select bank3
  7206  08D6  0854               	movf	(_usart_protocol^(0+384)+7),w
  7207  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  7208  08D8  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7209                           
  7210                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  7211  08D9  1703               	bsf	3,6	;RP1=1, select bank3
  7212  08DA  0855               	movf	(_usart_protocol^(0+384)+8),w
  7213  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  7214  08DC  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7215                           
  7216                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  7217  08DD  1703               	bsf	3,6	;RP1=1, select bank3
  7218  08DE  0856               	movf	(_usart_protocol^(0+384)+9),w
  7219  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  7220  08E0  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7221                           
  7222                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  7223  08E1  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7224  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7225  08E3  00C3               	movwf	Save_Log@add_datalog+3
  7226  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  7227  08E5  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7228  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  7229  08E7  00C2               	movwf	Save_Log@add_datalog+2
  7230  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  7231  08E9  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7232  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  7233  08EB  00C1               	movwf	Save_Log@add_datalog+1
  7234  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  7235  08ED  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7236  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  7237  08EF  00C0               	movwf	Save_Log@add_datalog
  7238  08F0  120A  118A  2607   	fcall	_Save_Log
  7239                           
  7240                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  7241  08F3  1683               	bsf	3,5	;RP0=1, select bank3
  7242  08F4  1703               	bsf	3,6	;RP1=1, select bank3
  7243  08F5  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  7244  08F6  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  7245                           
  7246                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  7247  08F7  01AA               	clrf	_milisegundo^(0+384)	;volatile
  7248  08F8  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  7249                           
  7250                           ;SlaveLiofilizadorVer1.c: 387:              break;
  7251  08F9  0008               	return
  7252  08FA                     l7828:	
  7253                           
  7254                           ;SlaveLiofilizadorVer1.c: 391:              if(usart_protocol.value[0]==0)
  7255  08FA  1683               	bsf	3,5	;RP0=1, select bank3
  7256  08FB  1703               	bsf	3,6	;RP1=1, select bank3
  7257  08FC  0853               	movf	(_usart_protocol^(0+384)+6),w
  7258  08FD  1D03               	btfss	3,2
  7259  08FE  2901               	goto	l440
  7260                           
  7261                           ;SlaveLiofilizadorVer1.c: 392:                 generic_status.flag_global_hot=0;
  7262  08FF  133C               	bcf	_generic_status^(0+384),6
  7263  0900  0008               	return
  7264  0901                     l440:	
  7265                           ;SlaveLiofilizadorVer1.c: 393:              else
  7266                           
  7267                           
  7268                           ;SlaveLiofilizadorVer1.c: 394:                 generic_status.flag_global_hot=1;
  7269  0901  173C               	bsf	_generic_status^(0+384),6
  7270  0902  0008               	return
  7271  0903                     l7832:	
  7272                           
  7273                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  7274  0903  3002               	movlw	2
  7275  0904  2530  120A  158A   	fcall	_Send_To_MB
  7276                           
  7277                           ;SlaveLiofilizadorVer1.c: 409:              USART_put_int(3);
  7278  0907  3003               	movlw	3
  7279  0908  1283               	bcf	3,5	;RP0=0, select bank0
  7280  0909  00AA               	movwf	USART_put_int@value
  7281  090A  01AB               	clrf	USART_put_int@value+1
  7282  090B  2F04               	ljmp	l6538
  7283  090C                     l7836:	
  7284                           ;SlaveLiofilizadorVer1.c: 411:              break;
  7285                           
  7286                           
  7287                           ;SlaveLiofilizadorVer1.c: 420:              Send_To_MB(3);
  7288  090C  3003               	movlw	3
  7289  090D  2530  120A  158A   	fcall	_Send_To_MB
  7290                           
  7291                           ;SlaveLiofilizadorVer1.c: 421:              Send_Reply_OK();
  7292  0910  2713  120A  158A   	fcall	_Send_Reply_OK
  7293                           
  7294                           ;SlaveLiofilizadorVer1.c: 422:              Load_Work();
  7295  0913  2DF0               	ljmp	l7370
  7296  0914                     l7842:	
  7297                           ;SlaveLiofilizadorVer1.c: 423:              break;
  7298                           
  7299                           
  7300                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  7301  0914  1683               	bsf	3,5	;RP0=1, select bank3
  7302  0915  1703               	bsf	3,6	;RP1=1, select bank3
  7303  0916  0854               	movf	(_usart_protocol^(0+384)+7),w
  7304  0917  1283               	bcf	3,5	;RP0=0, select bank0
  7305  0918  1303               	bcf	3,6	;RP1=0, select bank0
  7306  0919  00A0               	movwf	EEPROM_Write_Byte@dado
  7307  091A  1683               	bsf	3,5	;RP0=1, select bank3
  7308  091B  1703               	bsf	3,6	;RP1=1, select bank3
  7309  091C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7310  091D  160A  158A  265C  120A  158A  	fcall	_EEPROM_Write_Byte
  7311  0922                     L9:	
  7312                           
  7313                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  7314  0922  3003               	movlw	3
  7315  0923  2530  120A  158A   	fcall	_Send_To_MB
  7316                           
  7317                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  7318  0926  2F13               	ljmp	l7418
  7319  0927                     l7846:	
  7320                           ;SlaveLiofilizadorVer1.c: 432:              break;
  7321                           
  7322                           
  7323                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  7324  0927  1683               	bsf	3,5	;RP0=1, select bank3
  7325  0928  1703               	bsf	3,6	;RP1=1, select bank3
  7326  0929  0853               	movf	(_usart_protocol^(0+384)+6),w
  7327  092A  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  7328  092D  1683               	bsf	3,5	;RP0=1, select bank1
  7329  092E  1303               	bcf	3,6	;RP1=0, select bank1
  7330  092F  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7331                           
  7332                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  7333  0930  3001               	movlw	1
  7334  0931  2530  120A  158A   	fcall	_Send_To_MB
  7335                           
  7336                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  7337  0934  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7338  0935  2D87               	ljmp	_USART_putc
  7339  0936                     l7852:	
  7340                           ;SlaveLiofilizadorVer1.c: 437:              break;
  7341                           
  7342                           
  7343                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  7344  0936  1683               	bsf	3,5	;RP0=1, select bank3
  7345  0937  1703               	bsf	3,6	;RP1=1, select bank3
  7346  0938  0853               	movf	(_usart_protocol^(0+384)+6),w
  7347  0939  1303               	bcf	3,6	;RP1=0, select bank1
  7348  093A  00DD               	movwf	Decodify_Command@add^(0+128)
  7349                           
  7350                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  7351  093B  1703               	bsf	3,6	;RP1=1, select bank3
  7352  093C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7353  093D  1303               	bcf	3,6	;RP1=0, select bank1
  7354  093E  00DC               	movwf	(Decodify_Command@dados+1)^(0+128)
  7355  093F  1703               	bsf	3,6	;RP1=1, select bank3
  7356  0940  0855               	movf	(_usart_protocol^(0+384)+8),w
  7357  0941  1303               	bcf	3,6	;RP1=0, select bank1
  7358  0942  00DB               	movwf	Decodify_Command@dados^(0+128)
  7359                           
  7360                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  7361  0943  085C               	movf	(Decodify_Command@dados+1)^(0+128),w
  7362  0944  1283               	bcf	3,5	;RP0=0, select bank0
  7363  0945  00A6               	movwf	EEPROM_Write_Integer@dado+1
  7364  0946  1683               	bsf	3,5	;RP0=1, select bank1
  7365  0947  085B               	movf	Decodify_Command@dados^(0+128),w
  7366  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7367  0949  00A5               	movwf	EEPROM_Write_Integer@dado
  7368  094A  1683               	bsf	3,5	;RP0=1, select bank1
  7369  094B  085D               	movf	Decodify_Command@add^(0+128),w
  7370  094C  160A  158A  2621  120A  158A  	fcall	_EEPROM_Write_Integer
  7371  0951  2922               	goto	L9
  7372  0952                     l7860:	
  7373                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  7374                           
  7375                           
  7376                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  7377  0952  1683               	bsf	3,5	;RP0=1, select bank3
  7378  0953  1703               	bsf	3,6	;RP1=1, select bank3
  7379  0954  0853               	movf	(_usart_protocol^(0+384)+6),w
  7380  0955  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  7381  0958  0824               	movf	?_EEPROM_Read_Integer+1,w
  7382  0959  1683               	bsf	3,5	;RP0=1, select bank1
  7383  095A  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7384  095B  1283               	bcf	3,5	;RP0=0, select bank0
  7385  095C  0823               	movf	?_EEPROM_Read_Integer,w
  7386  095D                     L10:	
  7387  095D  1683               	bsf	3,5	;RP0=1, select bank1
  7388  095E  00DE               	movwf	Decodify_Command@tempint^(0+128)
  7389                           
  7390                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  7391  095F  3002               	movlw	2
  7392  0960  2530  120A  158A   	fcall	_Send_To_MB
  7393                           
  7394                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  7395  0963  085F               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7396  0964  1283               	bcf	3,5	;RP0=0, select bank0
  7397  0965  00AB               	movwf	USART_put_int@value+1
  7398  0966  1683               	bsf	3,5	;RP0=1, select bank1
  7399  0967  085E               	movf	Decodify_Command@tempint^(0+128),w
  7400  0968  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0969  00AA               	movwf	USART_put_int@value
  7402  096A  2F04               	ljmp	l6538
  7403  096B                     l7866:	
  7404                           ;SlaveLiofilizadorVer1.c: 452:              break;
  7405                           
  7406                           
  7407                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  7408  096B  30D4               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7409  096C  00A5               	movwf	EEPROM_Write_String@dado
  7410  096D  1683               	bsf	3,5	;RP0=1, select bank3
  7411  096E  1703               	bsf	3,6	;RP1=1, select bank3
  7412  096F  0853               	movf	(_usart_protocol^(0+384)+6),w
  7413  0970  160A  158A  2644  120A  158A  	fcall	_EEPROM_Write_String
  7414  0975  2922               	goto	L9
  7415  0976                     l7872:	
  7416                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  7417                           
  7418                           
  7419                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  7420  0976  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7421  0977  00A3               	movwf	EEPROM_Read_String@dado
  7422  0978  1683               	bsf	3,5	;RP0=1, select bank3
  7423  0979  1703               	bsf	3,6	;RP1=1, select bank3
  7424  097A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7425  097B  160A  158A  2483  120A  158A  	fcall	_EEPROM_Read_String
  7426                           
  7427                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  7428  0980  3010               	movlw	16
  7429  0981                     L11:	
  7430  0981  2530  120A  158A   	fcall	_Send_To_MB
  7431                           
  7432                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  7433  0984  2796  120A  158A   	fcall	PL74	;call to abstracted procedure
  7434  0987  2DC5               	ljmp	l6822
  7435  0988                     l7878:	
  7436                           ;SlaveLiofilizadorVer1.c: 466:              break;
  7437                           
  7438                           
  7439                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7440  0988  1683               	bsf	3,5	;RP0=1, select bank1
  7441  0989  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7442  098A  1283               	bcf	3,5	;RP0=0, select bank0
  7443  098B  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7444  098C  1683               	bsf	3,5	;RP0=1, select bank1
  7445  098D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7446  098E  1283               	bcf	3,5	;RP0=0, select bank0
  7447  098F  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7448  0990  1683               	bsf	3,5	;RP0=1, select bank1
  7449  0991  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7450  0992  1283               	bcf	3,5	;RP0=0, select bank0
  7451  0993  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7452  0994  1683               	bsf	3,5	;RP0=1, select bank1
  7453  0995  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7454  0996  1283               	bcf	3,5	;RP0=0, select bank0
  7455  0997  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7456  0998  1683               	bsf	3,5	;RP0=1, select bank3
  7457  0999  1703               	bsf	3,6	;RP1=1, select bank3
  7458  099A  0858               	movf	(_usart_protocol^(0+384)+11),w
  7459  099B  1283               	bcf	3,5	;RP0=0, select bank0
  7460  099C  1303               	bcf	3,6	;RP1=0, select bank0
  7461  099D  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  7462  099E  1683               	bsf	3,5	;RP0=1, select bank3
  7463  099F  1703               	bsf	3,6	;RP1=1, select bank3
  7464  09A0  0853               	movf	(_usart_protocol^(0+384)+6),w
  7465  09A1  160A  158A  245A  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  7466  09A6  2922               	goto	L9
  7467  09A7                     l7884:	
  7468                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  7469                           
  7470                           
  7471                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7472  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  7473  09A8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7474  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  7475  09AA  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7476  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  7477  09AC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7478  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  7479  09AE  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7480  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  7481  09B0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7482  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  7483  09B2  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7484  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  7485  09B4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7486  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  7487  09B6  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7488  09B7  1683               	bsf	3,5	;RP0=1, select bank3
  7489  09B8  1703               	bsf	3,6	;RP1=1, select bank3
  7490  09B9  0853               	movf	(_usart_protocol^(0+384)+6),w
  7491  09BA  120A  118A  27E7  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  7492  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  7493  09C0  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7494                           
  7495                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  7496  09C1  3001               	movlw	1
  7497  09C2  2530  120A  158A   	fcall	_Send_To_MB
  7498                           
  7499                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  7500  09C5  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7501  09C6  2D87               	ljmp	_USART_putc
  7502  09C7                     l7890:	
  7503                           ;SlaveLiofilizadorVer1.c: 484:              break;
  7504                           
  7505                           
  7506                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7507  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  7508  09C8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7509  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7510  09CA  00BA               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7511  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  7512  09CC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7513  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  7514  09CE  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7515  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  7516  09D0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7517  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  7518  09D2  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7519  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  7520  09D4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7521  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  7522  09D6  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7523  09D7  1683               	bsf	3,5	;RP0=1, select bank3
  7524  09D8  1703               	bsf	3,6	;RP1=1, select bank3
  7525  09D9  0858               	movf	(_usart_protocol^(0+384)+11),w
  7526  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  7527  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  7528  09DC  00BC               	movwf	EEPROM_24C1025_Write_Int@data+1
  7529  09DD  1683               	bsf	3,5	;RP0=1, select bank3
  7530  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  7531  09DF  0859               	movf	(_usart_protocol^(0+384)+12),w
  7532  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  7533  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  7534  09E2  00BB               	movwf	EEPROM_24C1025_Write_Int@data
  7535  09E3  1683               	bsf	3,5	;RP0=1, select bank3
  7536  09E4  1703               	bsf	3,6	;RP1=1, select bank3
  7537  09E5  0853               	movf	(_usart_protocol^(0+384)+6),w
  7538  09E6  120A  118A  26A8  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7539  09EB  2922               	goto	L9
  7540  09EC                     l7896:	
  7541                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  7542                           
  7543                           
  7544                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7545  09EC  1683               	bsf	3,5	;RP0=1, select bank1
  7546  09ED  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7547  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  7548  09EF  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7549  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  7550  09F1  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7551  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  7552  09F3  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7553  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  7554  09F5  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7555  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  7556  09F7  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7557  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  7558  09F9  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7559  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  7560  09FB  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7561  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  7562  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  7563  09FE  0853               	movf	(_usart_protocol^(0+384)+6),w
  7564  09FF  120A  118A  2036  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  7565  0A04  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7566  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  7567  0A06  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7568  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0A08  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  7570  0A09  295D               	goto	L10
  7571  0A0A                     l7902:	
  7572                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7573                           
  7574                           
  7575                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7576  0A0A  1683               	bsf	3,5	;RP0=1, select bank3
  7577  0A0B  1703               	bsf	3,6	;RP1=1, select bank3
  7578  0A0C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7579  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  7580  0A0E  00E5               	movwf	Decodify_Command@sizedata^(0+128)
  7581                           
  7582                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7583  0A0F  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7584  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  7585  0A11  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7586  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  7587  0A13  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7588  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7589  0A15  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7590  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7591  0A17  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7592  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7593  0A19  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7594  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7595  0A1B  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7596  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7597  0A1D  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7598  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7599  0A1F  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7600  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7601  0A21  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7602  0A22  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7603  0A23  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  7604  0A24  3001               	movlw	1
  7605  0A25  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7606  0A26  1683               	bsf	3,5	;RP0=1, select bank3
  7607  0A27  1703               	bsf	3,6	;RP1=1, select bank3
  7608  0A28  0853               	movf	(_usart_protocol^(0+384)+6),w
  7609  0A29  120A  118A  21C4  120A  158A  	fcall	_EEPROM_24C1025_Read_Buffer
  7610                           
  7611                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7612  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  7613  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  7614  0A30  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7615  0A31  2530               	fcall	_Send_To_MB
  7616                           
  7617                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7618  0A32  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7619  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0A34  00A1               	movwf	USART_put_buffer@size
  7621  0A35  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7622  0A36  01A2               	clrf	USART_put_buffer@size+1
  7623  0A37  160A  158A  2C99   	ljmp	_USART_put_buffer
  7624  0A3A                     l7910:	
  7625                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7626                           
  7627                           
  7628                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7629  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7630  0A3B  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7631  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7632  0A3D  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7633  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7634  0A3F  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7635  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7636  0A41  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7637  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  7638  0A43  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7639  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  7640  0A45  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7641  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7642  0A47  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7643  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7644  0A49  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7645  0A4A  1683               	bsf	3,5	;RP0=1, select bank3
  7646  0A4B  1703               	bsf	3,6	;RP1=1, select bank3
  7647  0A4C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7648  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7649  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  7650  0A4F  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7651  0A50  30D9               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7652  0A51  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7653  0A52  3001               	movlw	1
  7654  0A53  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7655  0A54  1683               	bsf	3,5	;RP0=1, select bank3
  7656  0A55  1703               	bsf	3,6	;RP1=1, select bank3
  7657  0A56  0853               	movf	(_usart_protocol^(0+384)+6),w
  7658  0A57  120A  118A  22A4  120A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
  7659  0A5C  2922               	goto	L9
  7660  0A5D                     l7916:	
  7661                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7662                           
  7663                           
  7664                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7665  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  7666  0A5E  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7667  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  7668  0A60  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7669  0A61  1683               	bsf	3,5	;RP0=1, select bank1
  7670  0A62  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7671  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  7672  0A64  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7673  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  7674  0A66  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7675  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  7676  0A68  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7677  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  7678  0A6A  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7679  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  7680  0A6C  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7681  0A6D  30D8               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7682  0A6E  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  7683  0A6F  1683               	bsf	3,5	;RP0=1, select bank3
  7684  0A70  1703               	bsf	3,6	;RP1=1, select bank3
  7685  0A71  0853               	movf	(_usart_protocol^(0+384)+6),w
  7686  0A72  120A  118A  204F  120A  158A  	fcall	_EEPROM_24C1025_Write_Str
  7687  0A77  2922               	goto	L9
  7688  0A78                     l7922:	
  7689                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7690                           
  7691                           
  7692                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7693  0A78  1683               	bsf	3,5	;RP0=1, select bank1
  7694  0A79  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7695  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  7696  0A7B  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7697  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  7698  0A7D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7699  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  7700  0A7F  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7701  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  7702  0A81  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7703  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  7704  0A83  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7705  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  7706  0A85  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7707  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  7708  0A87  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7709  0A88  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7710  0A89  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  7711  0A8A  1683               	bsf	3,5	;RP0=1, select bank3
  7712  0A8B  1703               	bsf	3,6	;RP1=1, select bank3
  7713  0A8C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7714  0A8D  120A  118A  20E2  120A  158A  	fcall	_EEPROM_24C1025_Read_Str
  7715                           
  7716                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7717  0A92  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7718  0A93  25B2  120A  158A   	fcall	_strlen
  7719  0A96  0820               	movf	?_strlen,w
  7720  0A97  2981               	goto	L11
  7721  0A98                     l7928:	
  7722                           
  7723                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7724  0A98  1683               	bsf	3,5	;RP0=1, select bank3
  7725  0A99  1703               	bsf	3,6	;RP1=1, select bank3
  7726  0A9A  0854               	movf	(_usart_protocol^(0+384)+7),w
  7727  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  7728  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  7729  0A9D  00C0               	movwf	EEPROM_24C1025_Fill_All@value
  7730  0A9E  01C1               	clrf	EEPROM_24C1025_Fill_All@value+1
  7731  0A9F  1683               	bsf	3,5	;RP0=1, select bank3
  7732  0AA0  1703               	bsf	3,6	;RP1=1, select bank3
  7733  0AA1  0853               	movf	(_usart_protocol^(0+384)+6),w
  7734  0AA2  120A  118A  25D5  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7735  0AA7  2922               	goto	L9
  7736  0AA8                     l7934:	
  7737                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7738                           
  7739                           
  7740                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7741  0AA8  0875               	movf	_hora,w	;volatile
  7742  0AA9  00AF               	movwf	itoa@val
  7743  0AAA  300A               	movlw	10
  7744  0AAB  01B0               	clrf	itoa@val+1
  7745  0AAC  00B1               	movwf	itoa@base
  7746  0AAD  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7747  0AAE  01B2               	clrf	itoa@base+1
  7748  0AAF  2598  120A  158A   	fcall	_itoa
  7749                           
  7750                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7751  0AB2  1683               	bsf	3,5	;RP0=1, select bank3
  7752  0AB3  1703               	bsf	3,6	;RP1=1, select bank3
  7753  0AB4  083B               	movf	_minuto^(0+384),w	;volatile
  7754  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  7755  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  7756  0AB7  00AF               	movwf	itoa@val
  7757  0AB8  300A               	movlw	10
  7758  0AB9  01B0               	clrf	itoa@val+1
  7759  0ABA  00B1               	movwf	itoa@base
  7760  0ABB  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7761  0ABC  01B2               	clrf	itoa@base+1
  7762  0ABD  2598  120A  158A   	fcall	_itoa
  7763                           
  7764                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7765  0AC0  0876               	movf	_segundo,w	;volatile
  7766  0AC1  00AF               	movwf	itoa@val
  7767  0AC2  300A               	movlw	10
  7768  0AC3  01B0               	clrf	itoa@val+1
  7769  0AC4  00B1               	movwf	itoa@base
  7770  0AC5  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7771  0AC6  01B2               	clrf	itoa@base+1
  7772  0AC7  2598               	fcall	_itoa
  7773                           
  7774                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7775  0AC8  3039               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7776  0AC9  00A0               	movwf	strcpy@from
  7777  0ACA  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7778  0ACB  160A  158A  246E  120A  158A  	fcall	_strcpy
  7779                           
  7780                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7781  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  7782  0AD1  083E               	movf	(Decodify_Command@hh^(0+128)+1),w
  7783  0AD2  1D03               	btfss	3,2
  7784  0AD3  2ADC               	goto	l7942
  7785                           
  7786                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7787  0AD4  2784  120A  158A   	fcall	PL48	;call to abstracted procedure
  7788  0AD7  2567  120A  158A   	fcall	_strcat
  7789                           
  7790                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7791  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  7792  0ADB  01BF               	clrf	(Decodify_Command@hh^(0+128)+2)
  7793  0ADC                     l7942:	
  7794                           
  7795                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7796  0ADC  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7797  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  7798  0ADE  00A0               	movwf	strcat@from
  7799  0ADF  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7800  0AE0  01A1               	clrf	strcat@from+1
  7801  0AE1  2567  120A  158A   	fcall	_strcat
  7802                           
  7803                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7804  0AE4  2791  120A  158A   	fcall	PL70	;call to abstracted procedure
  7805  0AE7  2567  120A  158A   	fcall	_strcat
  7806                           
  7807                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7808  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  7809  0AEB  0848               	movf	(Decodify_Command@mm^(0+128)+1),w
  7810  0AEC  1D03               	btfss	3,2
  7811  0AED  2AF6               	goto	l7952
  7812                           
  7813                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7814  0AEE  2784  120A  158A   	fcall	PL48	;call to abstracted procedure
  7815  0AF1  2567  120A  158A   	fcall	_strcat
  7816                           
  7817                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7818  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  7819  0AF5  01C9               	clrf	(Decodify_Command@mm^(0+128)+2)
  7820  0AF6                     l7952:	
  7821                           
  7822                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7823  0AF6  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7824  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  7825  0AF8  00A0               	movwf	strcat@from
  7826  0AF9  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7827  0AFA  01A1               	clrf	strcat@from+1
  7828  0AFB  2567  120A  158A   	fcall	_strcat
  7829                           
  7830                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7831  0AFE  2791  120A  158A   	fcall	PL70	;call to abstracted procedure
  7832  0B01  2567  120A  158A   	fcall	_strcat
  7833                           
  7834                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7835  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  7836  0B05  0852               	movf	(Decodify_Command@ss^(0+128)+1),w
  7837  0B06  1D03               	btfss	3,2
  7838  0B07  2B10               	goto	l7962
  7839                           
  7840                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7841  0B08  2784  120A  158A   	fcall	PL48	;call to abstracted procedure
  7842  0B0B  2567  120A  158A   	fcall	_strcat
  7843                           
  7844                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7845  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  7846  0B0F  01D3               	clrf	(Decodify_Command@ss^(0+128)+2)
  7847  0B10                     l7962:	
  7848                           
  7849                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7850  0B10  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7851  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7852  0B12  00A0               	movwf	strcat@from
  7853  0B13  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7854  0B14  01A1               	clrf	strcat@from+1
  7855  0B15  2567  120A  158A   	fcall	_strcat
  7856                           
  7857                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7858  0B18  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7859  0B19  25B2  120A  158A   	fcall	_strlen
  7860  0B1C  0820               	movf	?_strlen,w
  7861  0B1D  2530  120A  158A   	fcall	_Send_To_MB
  7862                           
  7863                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7864  0B20  2796  120A  158A   	fcall	PL74	;call to abstracted procedure
  7865  0B23  25C5  120A  158A   	fcall	_USART_put_string
  7866                           
  7867                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7868  0B26  3000               	movlw	0
  7869  0B27  2D87               	ljmp	_USART_putc
  7870  0B28                     l7970:	
  7871                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7872                           
  7873                           
  7874                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7875  0B28  1683               	bsf	3,5	;RP0=1, select bank3
  7876  0B29  1703               	bsf	3,6	;RP1=1, select bank3
  7877  0B2A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7878  0B2B  00F5               	movwf	_hora	;volatile
  7879                           
  7880                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7881  0B2C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7882  0B2D  00BB               	movwf	_minuto^(0+384)	;volatile
  7883                           
  7884                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7885  0B2E  0855               	movf	(_usart_protocol^(0+384)+8),w
  7886  0B2F  00F6               	movwf	_segundo	;volatile
  7887  0B30  2922               	goto	L9
  7888  0B31                     l7976:	
  7889                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7890                           
  7891                           
  7892                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7893  0B31  1683               	bsf	3,5	;RP0=1, select bank3
  7894  0B32  1703               	bsf	3,6	;RP1=1, select bank3
  7895  0B33  0853               	movf	(_usart_protocol^(0+384)+6),w
  7896  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7897  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7898  0B36  00B1               	movwf	PROCULUS_Show_Screen@screen
  7899  0B37  01B2               	clrf	PROCULUS_Show_Screen@screen+1
  7900  0B38  279C  120A  158A   	fcall	_PROCULUS_Show_Screen
  7901  0B3B  2922               	goto	L9
  7902  0B3C                     l7982:	
  7903                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7904                           
  7905                           
  7906                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7907  0B3C  1683               	bsf	3,5	;RP0=1, select bank3
  7908  0B3D  1703               	bsf	3,6	;RP1=1, select bank3
  7909  0B3E  0853               	movf	(_usart_protocol^(0+384)+6),w
  7910  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7911  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7912  0B41  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7913  0B42  1683               	bsf	3,5	;RP0=1, select bank3
  7914  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  7915  0B44  0854               	movf	(_usart_protocol^(0+384)+7),w
  7916  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  7917  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  7918  0B47  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7919  0B48  27A6  120A  158A   	fcall	_PROCULUS_Buzzer
  7920  0B4B  2922               	goto	L9
  7921  0B4C                     l7988:	
  7922                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7923                           
  7924                           
  7925                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7926  0B4C  1683               	bsf	3,5	;RP0=1, select bank3
  7927  0B4D  1703               	bsf	3,6	;RP1=1, select bank3
  7928  0B4E  0853               	movf	(_usart_protocol^(0+384)+6),w
  7929  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  7930  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  7931  0B51  00B6               	movwf	PROCULUS_VP_Write_String@vp+1
  7932  0B52  1683               	bsf	3,5	;RP0=1, select bank3
  7933  0B53  1703               	bsf	3,6	;RP1=1, select bank3
  7934  0B54  0854               	movf	(_usart_protocol^(0+384)+7),w
  7935  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  7936  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  7937  0B57  00B5               	movwf	PROCULUS_VP_Write_String@vp
  7938  0B58  30D5               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7939  0B59  00B7               	movwf	PROCULUS_VP_Write_String@text
  7940  0B5A  160A  158A  2448  120A  158A  	fcall	_PROCULUS_VP_Write_String
  7941  0B5F  2922               	goto	L9
  7942  0B60                     l7994:	
  7943                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7944                           
  7945                           
  7946                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7947  0B60  1683               	bsf	3,5	;RP0=1, select bank3
  7948  0B61  1703               	bsf	3,6	;RP1=1, select bank3
  7949  0B62  0853               	movf	(_usart_protocol^(0+384)+6),w
  7950  0B63  1D03               	btfss	3,2
  7951  0B64  2B70               	goto	l8000
  7952                           
  7953                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7954  0B65  0854               	movf	(_usart_protocol^(0+384)+7),w
  7955  0B66  1D03               	btfss	3,2
  7956  0B67  2B6C               	goto	l469
  7957                           
  7958                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7959  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  7960  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  7961  0B6A  1007               	bcf	7,0	;volatile
  7962  0B6B  2922               	goto	L9
  7963  0B6C                     l469:	
  7964                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7965                           
  7966                           
  7967                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7968  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  7970  0B6E  1407               	bsf	7,0	;volatile
  7971  0B6F  2922               	goto	L9
  7972  0B70                     l8000:	
  7973  0B70  0B53               	decfsz	(_usart_protocol^(0+384)+6),w
  7974  0B71  2922               	goto	L9
  7975                           
  7976                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7977  0B72  0854               	movf	(_usart_protocol^(0+384)+7),w
  7978  0B73  1D03               	btfss	3,2
  7979  0B74  2B79               	goto	l473
  7980                           
  7981                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7982  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  7983  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  7984  0B77  1087               	bcf	7,1	;volatile
  7985  0B78  2922               	goto	L9
  7986  0B79                     l473:	
  7987                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7988                           
  7989                           
  7990                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7991  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  7992  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  7993  0B7B  1487               	bsf	7,1	;volatile
  7994  0B7C  2922               	goto	L9
  7995  0B7D                     l8012:	
  7996                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7997                           
  7998  0B7D  1703               	bsf	3,6	;RP1=1, select bank3
  7999  0B7E  0851               	movf	(_usart_protocol^(0+384)+4),w
  8000  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8001  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  8002  0B81  00EE               	movwf	??_Decodify_Command
  8003  0B82  01EF               	clrf	??_Decodify_Command+1
  8004                           
  8005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8006                           ; Switch size 1, requested type "space"
  8007                           ; Number of cases is 1, Range of values is 0 to 0
  8008                           ; switch strategies available:
  8009                           ; Name         Instructions Cycles
  8010                           ; simple_byte            4     3 (average)
  8011                           ; direct_byte           11     8 (fixed)
  8012                           ; jumptable            260     6 (fixed)
  8013                           ;	Chosen strategy is simple_byte
  8014  0B83  086F               	movf	??_Decodify_Command+1,w
  8015  0B84  3A00               	xorlw	0	; case 0
  8016  0B85  1903               	skipnz
  8017  0B86  2B88               	goto	l8176
  8018  0B87  2BDB               	goto	l475
  8019  0B88                     l8176:	
  8020                           
  8021                           ; Switch size 1, requested type "space"
  8022                           ; Number of cases is 27, Range of values is 1 to 65
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte           82    42 (average)
  8026                           ; direct_byte          206    11 (fixed)
  8027                           ; jumptable            263     9 (fixed)
  8028                           ;	Chosen strategy is simple_byte
  8029  0B88  086E               	movf	??_Decodify_Command,w
  8030  0B89  3A01               	xorlw	1	; case 1
  8031  0B8A  1903               	skipnz
  8032  0B8B  290C               	goto	l7836
  8033  0B8C  3A03               	xorlw	3	; case 2
  8034  0B8D  1903               	skipnz
  8035  0B8E  28D0               	goto	l7820
  8036  0B8F  3A01               	xorlw	1	; case 3
  8037  0B90  1903               	skipnz
  8038  0B91  2903               	goto	l7832
  8039  0B92  3A0B               	xorlw	11	; case 8
  8040  0B93  1903               	skipnz
  8041  0B94  2914               	goto	l7842
  8042  0B95  3A01               	xorlw	1	; case 9
  8043  0B96  1903               	skipnz
  8044  0B97  2927               	goto	l7846
  8045  0B98  3A03               	xorlw	3	; case 10
  8046  0B99  1903               	skipnz
  8047  0B9A  2936               	goto	l7852
  8048  0B9B  3A01               	xorlw	1	; case 11
  8049  0B9C  1903               	skipnz
  8050  0B9D  2952               	goto	l7860
  8051  0B9E  3A07               	xorlw	7	; case 12
  8052  0B9F  1903               	skipnz
  8053  0BA0  296B               	goto	l7866
  8054  0BA1  3A01               	xorlw	1	; case 13
  8055  0BA2  1903               	skipnz
  8056  0BA3  2976               	goto	l7872
  8057  0BA4  3A1C               	xorlw	28	; case 17
  8058  0BA5  1903               	skipnz
  8059  0BA6  2988               	goto	l7878
  8060  0BA7  3A03               	xorlw	3	; case 18
  8061  0BA8  1903               	skipnz
  8062  0BA9  29A7               	goto	l7884
  8063  0BAA  3A01               	xorlw	1	; case 19
  8064  0BAB  1903               	skipnz
  8065  0BAC  29C7               	goto	l7890
  8066  0BAD  3A07               	xorlw	7	; case 20
  8067  0BAE  1903               	skipnz
  8068  0BAF  29EC               	goto	l7896
  8069  0BB0  3A01               	xorlw	1	; case 21
  8070  0BB1  1903               	skipnz
  8071  0BB2  2A5D               	goto	l7916
  8072  0BB3  3A03               	xorlw	3	; case 22
  8073  0BB4  1903               	skipnz
  8074  0BB5  2A78               	goto	l7922
  8075  0BB6  3A01               	xorlw	1	; case 23
  8076  0BB7  1903               	skipnz
  8077  0BB8  2A3A               	goto	l7910
  8078  0BB9  3A0F               	xorlw	15	; case 24
  8079  0BBA  1903               	skipnz
  8080  0BBB  2A0A               	goto	l7902
  8081  0BBC  3A01               	xorlw	1	; case 25
  8082  0BBD  1903               	skipnz
  8083  0BBE  2A98               	goto	l7928
  8084  0BBF  3A03               	xorlw	3	; case 26
  8085  0BC0  1903               	skipnz
  8086  0BC1  2867               	goto	l7804
  8087  0BC2  3A38               	xorlw	56	; case 34
  8088  0BC3  1903               	skipnz
  8089  0BC4  2B4C               	goto	l7988
  8090  0BC5  3A06               	xorlw	6	; case 36
  8091  0BC6  1903               	skipnz
  8092  0BC7  2B3C               	goto	l7982
  8093  0BC8  3A01               	xorlw	1	; case 37
  8094  0BC9  1903               	skipnz
  8095  0BCA  2B31               	goto	l7976
  8096  0BCB  3A0B               	xorlw	11	; case 46
  8097  0BCC  1903               	skipnz
  8098  0BCD  2B28               	goto	l7970
  8099  0BCE  3A01               	xorlw	1	; case 47
  8100  0BCF  1903               	skipnz
  8101  0BD0  2AA8               	goto	l7934
  8102  0BD1  3A1F               	xorlw	31	; case 48
  8103  0BD2  1903               	skipnz
  8104  0BD3  2B60               	goto	l7994
  8105  0BD4  3A70               	xorlw	112	; case 64
  8106  0BD5  1903               	skipnz
  8107  0BD6  28FA               	goto	l7828
  8108  0BD7  3A01               	xorlw	1	; case 65
  8109  0BD8  1903               	skipnz
  8110  0BD9  285D               	goto	l7800
  8111  0BDA  2BDB               	goto	l475
  8112  0BDB                     l475:	
  8113  0BDB  0008               	return
  8114  0BDC                     __end_of_Decodify_Command:	
  8115  0BDC                     __ptext19:	
  8116 ;; *************** function ___flmul *****************
  8117 ;; Defined at:
  8118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  b               4   53[BANK0 ] unsigned int 
  8121 ;;  a               4   57[BANK0 ] unsigned int 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  prod            4   72[BANK0 ] struct .
  8124 ;;  grs             4   68[BANK0 ] unsigned long 
  8125 ;;  temp            2   76[BANK0 ] struct .
  8126 ;;  bexp            1   67[BANK0 ] unsigned char 
  8127 ;;  aexp            1   66[BANK0 ] unsigned char 
  8128 ;;  sign            1   65[BANK0 ] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  4   53[BANK0 ] unsigned char 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 300/0
  8135 ;;		On exit  : 300/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8138 ;;      Params:         0       8       0       0       0
  8139 ;;      Locals:         0      13       0       0       0
  8140 ;;      Temps:          0       4       0       0       0
  8141 ;;      Totals:         0      25       0       0       0
  8142 ;;Total ram usage:       25 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    2
  8145 ;; This function calls:
  8146 ;;		__Umul8_16
  8147 ;; This function is called by:
  8148 ;;		_Decodify_Command
  8149 ;;		_ADC_Read_NTC
  8150 ;;		_log
  8151 ;;		_eval_poly
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           
  8156                           ;psect for function ___flmul
  8157  0BDC                     ___flmul:	
  8158                           
  8159                           ;incstack = 0
  8160                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8161  0BDC  0858               	movf	___flmul@b+3,w
  8162  0BDD  00E1               	movwf	___flmul@sign
  8163  0BDE  3080               	movlw	128
  8164  0BDF  05E1               	andwf	___flmul@sign,f
  8165  0BE0  1003               	clrc
  8166  0BE1  0D58               	rlf	___flmul@b+3,w
  8167  0BE2  00E3               	movwf	___flmul@bexp
  8168  0BE3  1BD7               	btfsc	___flmul@b+2,7
  8169  0BE4  1463               	bsf	___flmul@bexp,0
  8170  0BE5  0863               	movf	___flmul@bexp,w
  8171  0BE6  1903               	btfsc	3,2
  8172  0BE7  2BF0               	goto	l1418
  8173  0BE8  0F63               	incfsz	___flmul@bexp,w
  8174  0BE9  2BEE               	goto	l1419
  8175  0BEA  01D5               	clrf	___flmul@b
  8176  0BEB  01D6               	clrf	___flmul@b+1
  8177  0BEC  01D7               	clrf	___flmul@b+2
  8178  0BED  01D8               	clrf	___flmul@b+3
  8179  0BEE                     l1419:	
  8180  0BEE  17D7               	bsf	___flmul@b+2,7
  8181  0BEF  2BF4               	goto	l6324
  8182  0BF0                     l1418:	
  8183  0BF0  01D5               	clrf	___flmul@b
  8184  0BF1  01D6               	clrf	___flmul@b+1
  8185  0BF2  01D7               	clrf	___flmul@b+2
  8186  0BF3  01D8               	clrf	___flmul@b+3
  8187  0BF4                     l6324:	
  8188  0BF4  085C               	movf	___flmul@a+3,w
  8189  0BF5  3980               	andlw	128
  8190  0BF6  06E1               	xorwf	___flmul@sign,f
  8191  0BF7  1003               	clrc
  8192  0BF8  0D5C               	rlf	___flmul@a+3,w
  8193  0BF9  00E2               	movwf	___flmul@aexp
  8194  0BFA  1BDB               	btfsc	___flmul@a+2,7
  8195  0BFB  1462               	bsf	___flmul@aexp,0
  8196  0BFC  0862               	movf	___flmul@aexp,w
  8197  0BFD  1903               	btfsc	3,2
  8198  0BFE  2C07               	goto	l1422
  8199  0BFF  0F62               	incfsz	___flmul@aexp,w
  8200  0C00  2C05               	goto	l1423
  8201  0C01  01D9               	clrf	___flmul@a
  8202  0C02  01DA               	clrf	___flmul@a+1
  8203  0C03  01DB               	clrf	___flmul@a+2
  8204  0C04  01DC               	clrf	___flmul@a+3
  8205  0C05                     l1423:	
  8206  0C05  17DB               	bsf	___flmul@a+2,7
  8207  0C06  2C0B               	goto	l6336
  8208  0C07                     l1422:	
  8209  0C07  01D9               	clrf	___flmul@a
  8210  0C08  01DA               	clrf	___flmul@a+1
  8211  0C09  01DB               	clrf	___flmul@a+2
  8212  0C0A  01DC               	clrf	___flmul@a+3
  8213  0C0B                     l6336:	
  8214  0C0B  0862               	movf	___flmul@aexp,w
  8215  0C0C  1D03               	btfss	3,2
  8216  0C0D  0863               	movf	___flmul@bexp,w
  8217  0C0E  1D03               	btfss	3,2
  8218  0C0F  2C15               	goto	l6340
  8219  0C10  01D5               	clrf	?___flmul
  8220  0C11  01D6               	clrf	?___flmul+1
  8221  0C12  01D7               	clrf	?___flmul+2
  8222  0C13  01D8               	clrf	?___flmul+3
  8223  0C14  0008               	return
  8224  0C15                     l6340:	
  8225  0C15  0855               	movf	___flmul@b,w
  8226  0C16  00A0               	movwf	__Umul8_16@multiplicand
  8227  0C17  085B               	movf	___flmul@a+2,w
  8228  0C18  254C  120A  158A   	fcall	__Umul8_16
  8229  0C1B  0821               	movf	?__Umul8_16+1,w
  8230  0C1C  00ED               	movwf	___flmul@temp+1
  8231  0C1D  0820               	movf	?__Umul8_16,w
  8232  0C1E  00EC               	movwf	___flmul@temp
  8233  0C1F  00E4               	movwf	___flmul@grs
  8234  0C20  01E5               	clrf	___flmul@grs+1
  8235  0C21  01E6               	clrf	___flmul@grs+2
  8236  0C22  01E7               	clrf	___flmul@grs+3
  8237  0C23  086D               	movf	___flmul@temp+1,w
  8238  0C24  00E8               	movwf	___flmul@prod
  8239  0C25  01E9               	clrf	___flmul@prod+1
  8240  0C26  01EA               	clrf	___flmul@prod+2
  8241  0C27  01EB               	clrf	___flmul@prod+3
  8242  0C28  0856               	movf	___flmul@b+1,w
  8243  0C29  00A0               	movwf	__Umul8_16@multiplicand
  8244  0C2A  085A               	movf	___flmul@a+1,w
  8245  0C2B  254C  120A  158A   	fcall	__Umul8_16
  8246  0C2E  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8247  0C31  1803               	skipnc
  8248  0C32  07E9               	addwf	___flmul@prod+1,f
  8249  0C33  1803               	skipnc
  8250  0C34  07EA               	addwf	___flmul@prod+2,f
  8251  0C35  1803               	skipnc
  8252  0C36  07EB               	addwf	___flmul@prod+3,f
  8253  0C37  0857               	movf	___flmul@b+2,w
  8254  0C38  00A0               	movwf	__Umul8_16@multiplicand
  8255  0C39  0859               	movf	___flmul@a,w
  8256  0C3A  254C  120A  158A   	fcall	__Umul8_16
  8257  0C3D  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8258  0C40  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8259  0C43  0856               	movf	___flmul@b+1,w
  8260  0C44  00A0               	movwf	__Umul8_16@multiplicand
  8261  0C45  0859               	movf	___flmul@a,w
  8262  0C46  254C  120A  158A   	fcall	__Umul8_16
  8263  0C49  271A  120A  158A   	fcall	PL4	;call to abstracted procedure
  8264  0C4C  1803               	skipnc
  8265  0C4D  3E01               	addlw	1
  8266  0C4E  1D03               	btfss	3,2
  8267  0C4F  07E7               	addwf	___flmul@grs+3,f
  8268  0C50  0855               	movf	___flmul@b,w
  8269  0C51  00A0               	movwf	__Umul8_16@multiplicand
  8270  0C52  085A               	movf	___flmul@a+1,w
  8271  0C53  254C  120A  158A   	fcall	__Umul8_16
  8272  0C56  271A  120A  158A   	fcall	PL4	;call to abstracted procedure
  8273  0C59  1803               	skipnc
  8274  0C5A  3E01               	addlw	1
  8275  0C5B  1D03               	btfss	3,2
  8276  0C5C  07E7               	addwf	___flmul@grs+3,f
  8277  0C5D  0866               	movf	___flmul@grs+2,w
  8278  0C5E  00E7               	movwf	___flmul@grs+3
  8279  0C5F  0865               	movf	___flmul@grs+1,w
  8280  0C60  00E6               	movwf	___flmul@grs+2
  8281  0C61  0864               	movf	___flmul@grs,w
  8282  0C62  00E5               	movwf	___flmul@grs+1
  8283  0C63  01E4               	clrf	___flmul@grs
  8284  0C64  0855               	movf	___flmul@b,w
  8285  0C65  00A0               	movwf	__Umul8_16@multiplicand
  8286  0C66  0859               	movf	___flmul@a,w
  8287  0C67  254C  120A  158A   	fcall	__Umul8_16
  8288  0C6A  271A  120A  158A   	fcall	PL4	;call to abstracted procedure
  8289  0C6D  1803               	skipnc
  8290  0C6E  3E01               	addlw	1
  8291  0C6F  1D03               	btfss	3,2
  8292  0C70  07E7               	addwf	___flmul@grs+3,f
  8293  0C71  0856               	movf	___flmul@b+1,w
  8294  0C72  00A0               	movwf	__Umul8_16@multiplicand
  8295  0C73  085B               	movf	___flmul@a+2,w
  8296  0C74  254C  120A  158A   	fcall	__Umul8_16
  8297  0C77  0821               	movf	?__Umul8_16+1,w
  8298  0C78  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8299  0C7B  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8300  0C7E  278A  120A  158A   	fcall	PL60	;call to abstracted procedure
  8301  0C81  085A               	movf	___flmul@a+1,w
  8302  0C82  254C  120A  158A   	fcall	__Umul8_16
  8303  0C85  0821               	movf	?__Umul8_16+1,w
  8304  0C86  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8305  0C89  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8306  0C8C  278A  120A  158A   	fcall	PL60	;call to abstracted procedure
  8307  0C8F  085B               	movf	___flmul@a+2,w
  8308  0C90  254C  120A  158A   	fcall	__Umul8_16
  8309  0C93  0821               	movf	?__Umul8_16+1,w
  8310  0C94  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8311  0C97  085F               	movf	??___flmul+2,w
  8312  0C98  00E0               	movwf	??___flmul+3
  8313  0C99  085E               	movf	??___flmul+1,w
  8314  0C9A  00DF               	movwf	??___flmul+2
  8315  0C9B  085D               	movf	??___flmul,w
  8316  0C9C  00DE               	movwf	??___flmul+1
  8317  0C9D  01DD               	clrf	??___flmul
  8318  0C9E  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8319  0CA1  1803               	skipnc
  8320  0CA2  3E01               	addlw	1
  8321  0CA3  1D03               	btfss	3,2
  8322  0CA4  07EB               	addwf	___flmul@prod+3,f
  8323  0CA5  0867               	movf	___flmul@grs+3,w
  8324  0CA6  07E8               	addwf	___flmul@prod,f
  8325  0CA7  3001               	movlw	1
  8326  0CA8  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8327  0CAB  0863               	movf	___flmul@bexp,w
  8328  0CAC  00EC               	movwf	___flmul@temp
  8329  0CAD  01ED               	clrf	___flmul@temp+1
  8330  0CAE  0862               	movf	___flmul@aexp,w
  8331  0CAF  07EC               	addwf	___flmul@temp,f
  8332  0CB0  1803               	skipnc
  8333  0CB1  0AED               	incf	___flmul@temp+1,f
  8334  0CB2  3082               	movlw	-126
  8335  0CB3                     L14:	
  8336  0CB3  07EC               	addwf	___flmul@temp,f
  8337  0CB4  1C03               	skipc
  8338  0CB5  03ED               	decf	___flmul@temp+1,f
  8339  0CB6  1BEA               	btfsc	___flmul@prod+2,7
  8340  0CB7  2CC6               	goto	l6388
  8341  0CB8  1003               	clrc
  8342  0CB9  0DE8               	rlf	___flmul@prod,f
  8343  0CBA  0DE9               	rlf	___flmul@prod+1,f
  8344  0CBB  0DEA               	rlf	___flmul@prod+2,f
  8345  0CBC  0DEB               	rlf	___flmul@prod+3,f
  8346  0CBD  1BE7               	btfsc	___flmul@grs+3,7
  8347  0CBE  1468               	bsf	___flmul@prod,0
  8348  0CBF  30FF               	movlw	-1
  8349  0CC0  1003               	clrc
  8350  0CC1  0DE4               	rlf	___flmul@grs,f
  8351  0CC2  0DE5               	rlf	___flmul@grs+1,f
  8352  0CC3  0DE6               	rlf	___flmul@grs+2,f
  8353  0CC4  0DE7               	rlf	___flmul@grs+3,f
  8354  0CC5  2CB3               	goto	L14
  8355  0CC6                     l6388:	
  8356  0CC6  01E2               	clrf	___flmul@aexp
  8357  0CC7  1FE7               	btfss	___flmul@grs+3,7
  8358  0CC8  2CDB               	goto	l6398
  8359  0CC9  0864               	movf	___flmul@grs,w
  8360  0CCA  00DD               	movwf	??___flmul
  8361  0CCB  0865               	movf	___flmul@grs+1,w
  8362  0CCC  00DE               	movwf	??___flmul+1
  8363  0CCD  0866               	movf	___flmul@grs+2,w
  8364  0CCE  00DF               	movwf	??___flmul+2
  8365  0CCF  307F               	movlw	127
  8366  0CD0  0567               	andwf	___flmul@grs+3,w
  8367  0CD1  00E0               	movwf	??___flmul+3
  8368  0CD2  045F               	iorwf	??___flmul+2,w
  8369  0CD3  045E               	iorwf	??___flmul+1,w
  8370  0CD4  045D               	iorwf	??___flmul,w
  8371  0CD5  1903               	skipnz
  8372  0CD6  1868               	btfsc	___flmul@prod,0
  8373  0CD7  2CD9               	goto	l6394
  8374  0CD8  2CDB               	goto	l6398
  8375  0CD9                     l6394:	
  8376  0CD9  01E2               	clrf	___flmul@aexp
  8377  0CDA  0AE2               	incf	___flmul@aexp,f
  8378  0CDB                     l6398:	
  8379  0CDB  0862               	movf	___flmul@aexp,w
  8380  0CDC  1903               	btfsc	3,2
  8381  0CDD  2CEF               	goto	l6408
  8382  0CDE  0AE8               	incf	___flmul@prod,f
  8383  0CDF  1903               	skipnz
  8384  0CE0  0AE9               	incf	___flmul@prod+1,f
  8385  0CE1  1903               	skipnz
  8386  0CE2  0AEA               	incf	___flmul@prod+2,f
  8387  0CE3  1903               	skipnz
  8388  0CE4  0AEB               	incf	___flmul@prod+3,f
  8389  0CE5  1C6B               	btfss	___flmul@prod+3,0
  8390  0CE6  2CEF               	goto	l6408
  8391  0CE7  0D6B               	rlf	___flmul@prod+3,w
  8392  0CE8  0CEB               	rrf	___flmul@prod+3,f
  8393  0CE9  0CEA               	rrf	___flmul@prod+2,f
  8394  0CEA  0CE9               	rrf	___flmul@prod+1,f
  8395  0CEB  0CE8               	rrf	___flmul@prod,f
  8396  0CEC  0AEC               	incf	___flmul@temp,f
  8397  0CED  1903               	skipnz
  8398  0CEE  0AED               	incf	___flmul@temp+1,f
  8399  0CEF                     l6408:	
  8400  0CEF  086D               	movf	___flmul@temp+1,w
  8401  0CF0  3A80               	xorlw	128
  8402  0CF1  00FF               	movwf	127
  8403  0CF2  3080               	movlw	128
  8404  0CF3  027F               	subwf	127,w
  8405  0CF4  1D03               	skipz
  8406  0CF5  2CF8               	goto	u5915
  8407  0CF6  30FF               	movlw	255
  8408  0CF7  026C               	subwf	___flmul@temp,w
  8409  0CF8                     u5915:	
  8410  0CF8  1C03               	skipc
  8411  0CF9  2D03               	goto	l6412
  8412  0CFA  307F               	movlw	127
  8413  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  8414  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  8415  0CFD  00EB               	movwf	___flmul@prod+3
  8416  0CFE  3080               	movlw	128
  8417  0CFF  00EA               	movwf	___flmul@prod+2
  8418  0D00  01E9               	clrf	___flmul@prod+1
  8419  0D01  01E8               	clrf	___flmul@prod
  8420  0D02  2D25               	goto	l1440
  8421  0D03                     l6412:	
  8422  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  8423  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  8424  0D05  086D               	movf	___flmul@temp+1,w
  8425  0D06  3A80               	xorlw	128
  8426  0D07  00FF               	movwf	127
  8427  0D08  3080               	movlw	128
  8428  0D09  027F               	subwf	127,w
  8429  0D0A  1D03               	skipz
  8430  0D0B  2D0E               	goto	u5925
  8431  0D0C  3001               	movlw	1
  8432  0D0D  026C               	subwf	___flmul@temp,w
  8433  0D0E                     u5925:	
  8434  0D0E  1803               	skipnc
  8435  0D0F  2D18               	goto	l6418
  8436  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  8437  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  8438  0D12  01E8               	clrf	___flmul@prod
  8439  0D13  01E9               	clrf	___flmul@prod+1
  8440  0D14  01EA               	clrf	___flmul@prod+2
  8441  0D15  01EB               	clrf	___flmul@prod+3
  8442  0D16  01E1               	clrf	___flmul@sign
  8443  0D17  2D25               	goto	l1440
  8444  0D18                     l6418:	
  8445  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  8446  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  8447  0D1A  086C               	movf	___flmul@temp,w
  8448  0D1B  00E3               	movwf	___flmul@bexp
  8449  0D1C  307F               	movlw	127
  8450  0D1D  05EA               	andwf	___flmul@prod+2,f
  8451  0D1E  3000               	movlw	0
  8452  0D1F  01EB               	clrf	___flmul@prod+3
  8453  0D20  1863               	btfsc	___flmul@bexp,0
  8454  0D21  17EA               	bsf	___flmul@prod+2,7
  8455  0D22  1003               	clrc
  8456  0D23  0C63               	rrf	___flmul@bexp,w
  8457  0D24  00EB               	movwf	___flmul@prod+3
  8458  0D25                     l1440:	
  8459  0D25  0861               	movf	___flmul@sign,w
  8460  0D26  04EB               	iorwf	___flmul@prod+3,f
  8461  0D27  086B               	movf	___flmul@prod+3,w
  8462  0D28  00D8               	movwf	?___flmul+3
  8463  0D29  086A               	movf	___flmul@prod+2,w
  8464  0D2A  00D7               	movwf	?___flmul+2
  8465  0D2B  0869               	movf	___flmul@prod+1,w
  8466  0D2C  00D6               	movwf	?___flmul+1
  8467  0D2D  0868               	movf	___flmul@prod,w
  8468  0D2E  00D5               	movwf	?___flmul
  8469  0D2F  0008               	return
  8470  0D30                     __end_of___flmul:	
  8471  0D30                     __ptext23:	
  8472 ;; *************** function _Send_To_MB *****************
  8473 ;; Defined at:
  8474 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  size            1    wreg     unsigned char 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;  size            1    1[BANK0 ] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 300/100
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         0       0       0       0       0
  8489 ;;      Locals:         0       1       0       0       0
  8490 ;;      Temps:          0       0       0       0       0
  8491 ;;      Totals:         0       1       0       0       0
  8492 ;;Total ram usage:        1 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    2
  8495 ;; This function calls:
  8496 ;;		_USART_putc
  8497 ;; This function is called by:
  8498 ;;		_Decodify_Command
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _Send_To_MB
  8504  0D30                     _Send_To_MB:	
  8505                           
  8506                           ;incstack = 0
  8507                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8508                           ;Send_To_MB@size stored from wreg
  8509  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  8510  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  8511  0D32  00A1               	movwf	Send_To_MB@size
  8512                           
  8513                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8514  0D33  30AA               	movlw	170
  8515  0D34  2587  120A  158A   	fcall	_USART_putc
  8516                           
  8517                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8518  0D37  30BB               	movlw	187
  8519  0D38  2587  120A  158A   	fcall	_USART_putc
  8520                           
  8521                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8522  0D3B  1703               	bsf	3,6	;RP1=1, select bank3
  8523  0D3C  0834               	movf	_Board_Number^(0+384),w
  8524  0D3D  2587  120A  158A   	fcall	_USART_putc
  8525                           
  8526                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8527  0D40  3000               	movlw	0
  8528  0D41  2587  120A  158A   	fcall	_USART_putc
  8529                           
  8530                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8531  0D44  1703               	bsf	3,6	;RP1=1, select bank3
  8532  0D45  0851               	movf	(_usart_protocol^(0+384)+4),w
  8533  0D46  2587  120A  158A   	fcall	_USART_putc
  8534                           
  8535                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8536  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  8537  0D4A  0821               	movf	Send_To_MB@size,w
  8538  0D4B  2D87               	ljmp	_USART_putc
  8539  0D4C                     __end_of_Send_To_MB:	
  8540  0D4C                     __ptext20:	
  8541 ;; *************** function __Umul8_16 *****************
  8542 ;; Defined at:
  8543 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  multiplier      1    wreg     unsigned char 
  8546 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  multiplier      1    7[BANK0 ] unsigned char 
  8549 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  8550 ;;  product         2    3[BANK0 ] unsigned int 
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  2    0[BANK0 ] unsigned int 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2, status,0
  8555 ;; Tracked objects:
  8556 ;;		On entry : 300/0
  8557 ;;		On exit  : 300/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8560 ;;      Params:         0       3       0       0       0
  8561 ;;      Locals:         0       5       0       0       0
  8562 ;;      Temps:          0       0       0       0       0
  8563 ;;      Totals:         0       8       0       0       0
  8564 ;;Total ram usage:        8 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		___flmul
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function __Umul8_16
  8576  0D4C                     __Umul8_16:	
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8580                           ;__Umul8_16@multiplier stored from wreg
  8581  0D4C  00A7               	movwf	__Umul8_16@multiplier
  8582  0D4D  01A3               	clrf	__Umul8_16@product
  8583  0D4E  01A4               	clrf	__Umul8_16@product+1
  8584  0D4F  0820               	movf	__Umul8_16@multiplicand,w
  8585  0D50  00A5               	movwf	__Umul8_16@word_mpld
  8586  0D51  01A6               	clrf	__Umul8_16@word_mpld+1
  8587  0D52                     l6068:	
  8588  0D52  1C27               	btfss	__Umul8_16@multiplier,0
  8589  0D53  2D5A               	goto	l6072
  8590  0D54  0825               	movf	__Umul8_16@word_mpld,w
  8591  0D55  07A3               	addwf	__Umul8_16@product,f
  8592  0D56  1803               	skipnc
  8593  0D57  0AA4               	incf	__Umul8_16@product+1,f
  8594  0D58  0826               	movf	__Umul8_16@word_mpld+1,w
  8595  0D59  07A4               	addwf	__Umul8_16@product+1,f
  8596  0D5A                     l6072:	
  8597  0D5A  1003               	clrc
  8598  0D5B  0DA5               	rlf	__Umul8_16@word_mpld,f
  8599  0D5C  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  8600  0D5D  1003               	clrc
  8601  0D5E  0CA7               	rrf	__Umul8_16@multiplier,f
  8602  0D5F  0827               	movf	__Umul8_16@multiplier,w
  8603  0D60  1D03               	btfss	3,2
  8604  0D61  2D52               	goto	l6068
  8605  0D62  0824               	movf	__Umul8_16@product+1,w
  8606  0D63  00A1               	movwf	?__Umul8_16+1
  8607  0D64  0823               	movf	__Umul8_16@product,w
  8608  0D65  00A0               	movwf	?__Umul8_16
  8609  0D66  0008               	return
  8610  0D67                     __end_of__Umul8_16:	
  8611  0D67                     __ptext15:	
  8612 ;; *************** function _strcat *****************
  8613 ;; Defined at:
  8614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  to              1    wreg     PTR unsigned char 
  8617 ;;		 -> texto(16), 
  8618 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  8619 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8620 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  to              1    4[BANK0 ] PTR unsigned char 
  8623 ;;		 -> texto(16), 
  8624 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  8625 ;;		 -> texto(16), 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      PTR unsigned char 
  8628 ;; Registers used:
  8629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8630 ;; Tracked objects:
  8631 ;;		On entry : B00/800
  8632 ;;		On exit  : B00/800
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8635 ;;      Params:         0       2       0       0       0
  8636 ;;      Locals:         0       2       0       0       0
  8637 ;;      Temps:          0       1       0       0       0
  8638 ;;      Totals:         0       5       0       0       0
  8639 ;;Total ram usage:        5 bytes
  8640 ;; Hardware stack levels used:    2
  8641 ;; Hardware stack levels required when called:    1
  8642 ;; This function calls:
  8643 ;;		Nothing
  8644 ;; This function is called by:
  8645 ;;		_Decodify_Command
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function _strcat
  8651  0D67                     _strcat:	
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8655                           ;strcat@to stored from wreg
  8656  0D67  00A4               	movwf	strcat@to
  8657  0D68  00A3               	movwf	strcat@cp
  8658  0D69                     l7478:	
  8659  0D69  0823               	movf	strcat@cp,w
  8660  0D6A  0084               	movwf	4
  8661  0D6B  0800               	movf	0,w
  8662  0D6C  1903               	btfsc	3,2
  8663  0D6D  2D74               	goto	l7482
  8664  0D6E  0AA3               	incf	strcat@cp,f
  8665  0D6F  2D69               	goto	l7478
  8666  0D70                     l7480:	
  8667  0D70  0AA3               	incf	strcat@cp,f
  8668  0D71  0AA0               	incf	strcat@from,f
  8669  0D72  1903               	skipnz
  8670  0D73  0AA1               	incf	strcat@from+1,f
  8671  0D74                     l7482:	
  8672  0D74  0821               	movf	strcat@from+1,w
  8673  0D75  00FF               	movwf	127
  8674  0D76  0820               	movf	strcat@from,w
  8675  0D77  0084               	movwf	4
  8676  0D78  160A  158A  2000  120A  158A  	fcall	stringtab
  8677  0D7D  00A2               	movwf	??_strcat
  8678  0D7E  0823               	movf	strcat@cp,w
  8679  0D7F  0084               	movwf	4
  8680  0D80  0822               	movf	??_strcat,w
  8681  0D81  1783               	bsf	3,7	;select IRP bank2
  8682  0D82  0080               	movwf	0
  8683  0D83  0800               	movf	0,w
  8684  0D84  1903               	btfsc	3,2
  8685  0D85  0008               	return
  8686  0D86  2D70               	goto	l7480
  8687  0D87                     __end_of_strcat:	
  8688  0D87                     __ptext37:	
  8689 ;; *************** function _USART_putc *****************
  8690 ;; Defined at:
  8691 ;;		line 89 in file "usart.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  value           1    wreg     unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  value           1    0[BANK0 ] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/100
  8702 ;;		On exit  : 300/100
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         0       0       0       0       0
  8706 ;;      Locals:         0       1       0       0       0
  8707 ;;      Temps:          0       0       0       0       0
  8708 ;;      Totals:         0       1       0       0       0
  8709 ;;Total ram usage:        1 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_Decodify_Command
  8716 ;;		_Send_To_MB
  8717 ;;		_PROCULUS_Control_Register_Write
  8718 ;;		_PROCULUS_VP_Write
  8719 ;;		_USART_put_buffer
  8720 ;;		_USART_put_int
  8721 ;;		_USART_put_string
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function _USART_putc
  8727  0D87                     _USART_putc:	
  8728                           
  8729                           ;incstack = 0
  8730                           ; Regs used in _USART_putc: [wreg]
  8731                           ;USART_putc@value stored from wreg
  8732  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  8734  0D89  00A0               	movwf	USART_putc@value
  8735                           
  8736                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8737  0D8A  3014               	movlw	20
  8738  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  8739  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  8740  0D8D  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  8741  0D8E  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  8742  0D8F                     l929:	
  8743                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8744                           
  8745  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  8746  0D90  1C98               	btfss	24,1	;volatile
  8747  0D91  2D8F               	goto	l929
  8748                           
  8749                           ;usart.c: 93:     TXREG=value;
  8750  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  8751  0D93  0820               	movf	USART_putc@value,w
  8752  0D94  0099               	movwf	25	;volatile
  8753                           
  8754                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8755  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  8756  0D96  1698               	bsf	24,5	;volatile
  8757  0D97  0008               	return
  8758  0D98                     __end_of_USART_putc:	
  8759  0D98                     __ptext16:	
  8760 ;; *************** function _itoa *****************
  8761 ;; Defined at:
  8762 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  buf             1    wreg     PTR unsigned char 
  8765 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8766 ;;  val             2   15[BANK0 ] int 
  8767 ;;  base            2   17[BANK0 ] int 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  8770 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8771 ;;  cp              1    0        PTR unsigned char 
  8772 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      PTR unsigned char 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 300/0
  8779 ;;		On exit  : B00/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8782 ;;      Params:         0       4       0       0       0
  8783 ;;      Locals:         0       2       0       0       0
  8784 ;;      Temps:          0       0       0       0       0
  8785 ;;      Totals:         0       6       0       0       0
  8786 ;;Total ram usage:        6 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    3
  8789 ;; This function calls:
  8790 ;;		_utoa
  8791 ;; This function is called by:
  8792 ;;		_Decodify_Command
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _itoa
  8798  0D98                     _itoa:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8802                           ;itoa@buf stored from wreg
  8803  0D98  00B4               	movwf	itoa@buf
  8804  0D99  1FB0               	btfss	itoa@val+1,7
  8805  0D9A  2DA6               	goto	l7464
  8806  0D9B  0834               	movf	itoa@buf,w
  8807  0D9C  0084               	movwf	4
  8808  0D9D  302D               	movlw	45
  8809  0D9E  1383               	bcf	3,7	;select IRP bank0
  8810  0D9F  0080               	movwf	0
  8811  0DA0  0AB4               	incf	itoa@buf,f
  8812  0DA1  09AF               	comf	itoa@val,f
  8813  0DA2  09B0               	comf	itoa@val+1,f
  8814  0DA3  0AAF               	incf	itoa@val,f
  8815  0DA4  1903               	skipnz
  8816  0DA5  0AB0               	incf	itoa@val+1,f
  8817  0DA6                     l7464:	
  8818  0DA6  0830               	movf	itoa@val+1,w
  8819  0DA7  00A8               	movwf	utoa@val+1
  8820  0DA8  082F               	movf	itoa@val,w
  8821  0DA9  00A7               	movwf	utoa@val
  8822  0DAA  0832               	movf	itoa@base+1,w
  8823  0DAB  00AA               	movwf	utoa@base+1
  8824  0DAC  0831               	movf	itoa@base,w
  8825  0DAD  00A9               	movwf	utoa@base
  8826  0DAE  0834               	movf	itoa@buf,w
  8827  0DAF  160A  158A  2D39   	ljmp	_utoa
  8828  0DB2                     __end_of_itoa:	
  8829  0DB2                     __ptext30:	
  8830 ;; *************** function _strlen *****************
  8831 ;; Defined at:
  8832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  s               1    wreg     PTR const unsigned char 
  8835 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8838 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8839 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8840 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  2    0[BANK0 ] unsigned int 
  8843 ;; Registers used:
  8844 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : B00/800
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8850 ;;      Params:         0       3       0       0       0
  8851 ;;      Locals:         0       2       0       0       0
  8852 ;;      Temps:          0       0       0       0       0
  8853 ;;      Totals:         0       5       0       0       0
  8854 ;;Total ram usage:        5 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    1
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_Decodify_Command
  8861 ;;		_PROCULUS_VP_Write_String
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _strlen
  8867  0DB2                     _strlen:	
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8871                           ;strlen@s stored from wreg
  8872  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  8873  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  8874  0DB4  00A4               	movwf	strlen@s
  8875  0DB5  00A3               	movwf	strlen@cp
  8876  0DB6                     l6864:	
  8877  0DB6  0823               	movf	strlen@cp,w
  8878  0DB7  0084               	movwf	4
  8879  0DB8  1783               	bsf	3,7	;select IRP bank2
  8880  0DB9  0800               	movf	0,w
  8881  0DBA  1903               	btfsc	3,2
  8882  0DBB  2DBE               	goto	l6866
  8883  0DBC  0AA3               	incf	strlen@cp,f
  8884  0DBD  2DB6               	goto	l6864
  8885  0DBE                     l6866:	
  8886  0DBE  0824               	movf	strlen@s,w
  8887  0DBF  0223               	subwf	strlen@cp,w
  8888  0DC0  00A0               	movwf	?_strlen
  8889  0DC1  01A1               	clrf	?_strlen+1
  8890  0DC2  1BA0               	btfsc	?_strlen,7
  8891  0DC3  03A1               	decf	?_strlen+1,f
  8892  0DC4  0008               	return
  8893  0DC5                     __end_of_strlen:	
  8894  0DC5                     __ptext25:	
  8895 ;; *************** function _USART_put_string *****************
  8896 ;; Defined at:
  8897 ;;		line 168 in file "usart.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8900 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8903 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 300/0
  8910 ;;		On exit  : 300/100
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8913 ;;      Params:         0       2       0       0       0
  8914 ;;      Locals:         0       2       0       0       0
  8915 ;;      Temps:          0       0       0       0       0
  8916 ;;      Totals:         0       4       0       0       0
  8917 ;;Total ram usage:        4 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    2
  8920 ;; This function calls:
  8921 ;;		_USART_putc
  8922 ;; This function is called by:
  8923 ;;		_Decodify_Command
  8924 ;;		_Send_Reply_OK
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _USART_put_string
  8930  0DC5                     _USART_put_string:	
  8931  0DC5                     l6822:	
  8932                           ;incstack = 0
  8933                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8934                           
  8935                           
  8936                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8937  0DC5  0821               	movf	USART_put_string@vetor,w
  8938  0DC6  00A3               	movwf	USART_put_string@ptr
  8939  0DC7  0822               	movf	USART_put_string@vetor+1,w
  8940  0DC8  00A4               	movwf	USART_put_string@ptr+1
  8941  0DC9                     l6828:	
  8942                           ;usart.c: 172:     while(*(ptr)){
  8943                           
  8944                           
  8945                           ;usart.c: 172:     while(*(ptr)){
  8946  0DC9  0824               	movf	USART_put_string@ptr+1,w
  8947  0DCA  00FF               	movwf	127
  8948  0DCB  0823               	movf	USART_put_string@ptr,w
  8949  0DCC  0084               	movwf	4
  8950  0DCD  160A  158A  2000  120A  158A  	fcall	stringtab
  8951  0DD2  3A00               	xorlw	0
  8952  0DD3  1903               	btfsc	3,2
  8953  0DD4  2DE6               	goto	l6830
  8954                           
  8955                           ;usart.c: 173:         USART_putc(*(ptr));
  8956  0DD5  0824               	movf	USART_put_string@ptr+1,w
  8957  0DD6  00FF               	movwf	127
  8958  0DD7  0823               	movf	USART_put_string@ptr,w
  8959  0DD8  0084               	movwf	4
  8960  0DD9  160A  158A  2000  120A  158A  	fcall	stringtab
  8961  0DDE  2587  120A  158A   	fcall	_USART_putc
  8962                           
  8963                           ;usart.c: 174:         ptr++;
  8964  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  8965  0DE2  0AA3               	incf	USART_put_string@ptr,f
  8966  0DE3  1903               	skipnz
  8967  0DE4  0AA4               	incf	USART_put_string@ptr+1,f
  8968  0DE5  2DC9               	goto	l6828
  8969  0DE6                     l6830:	
  8970                           
  8971                           ;usart.c: 176:     USART_putc(*(ptr));
  8972  0DE6  0824               	movf	USART_put_string@ptr+1,w
  8973  0DE7  00FF               	movwf	127
  8974  0DE8  0823               	movf	USART_put_string@ptr,w
  8975  0DE9  0084               	movwf	4
  8976  0DEA  160A  158A  2000  120A  158A  	fcall	stringtab
  8977  0DEF  2D87               	ljmp	_USART_putc
  8978  0DF0                     __end_of_USART_put_string:	
  8979  0DF0                     __ptext39:	
  8980 ;; *************** function _Load_Work *****************
  8981 ;; Defined at:
  8982 ;;		line 982 in file "SlaveLiofilizadorVer1.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 100/300
  8993 ;;		On exit  : 300/200
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8996 ;;      Params:         0       0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0
  8998 ;;      Temps:          0       0       4       0       0
  8999 ;;      Totals:         0       0       4       0       0
  9000 ;;Total ram usage:        4 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    3
  9003 ;; This function calls:
  9004 ;;		_EEPROM_Read_Byte
  9005 ;;		_EEPROM_Read_Integer
  9006 ;;		___fldiv
  9007 ;;		___xxtofl
  9008 ;; This function is called by:
  9009 ;;		_main
  9010 ;;		_Decodify_Command
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _Load_Work
  9016  0DF0                     _Load_Work:	
  9017  0DF0                     l7370:	
  9018                           ;incstack = 0
  9019                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9020                           
  9021                           
  9022                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0 = EEPROM_Read_Integer(0);
  9023  0DF0  3000               	movlw	0
  9024  0DF1  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9025  0DF4  274E               	fcall	PL14	;call to abstracted procedure
  9026  0DF5  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9027  0DFA  082E               	movf	?___xxtofl+3,w
  9028  0DFB  00F3               	movwf	_SetPoint0+3	;volatile
  9029  0DFC  082D               	movf	?___xxtofl+2,w
  9030  0DFD  00F2               	movwf	_SetPoint0+2	;volatile
  9031  0DFE  082C               	movf	?___xxtofl+1,w
  9032  0DFF  00F1               	movwf	_SetPoint0+1	;volatile
  9033  0E00  082B               	movf	?___xxtofl,w
  9034  0E01  00F0               	movwf	_SetPoint0	;volatile
  9035                           
  9036                           ;SlaveLiofilizadorVer1.c: 986:      SetPoint0/=10;
  9037  0E02  3041               	movlw	65
  9038  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  9039  0E04  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9040  0E05  3020               	movlw	32
  9041  0E06  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9042  0E07  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9043  0E08  01A0               	clrf	___fldiv@a^(0+128)
  9044  0E09  0873               	movf	_SetPoint0+3,w	;volatile
  9045  0E0A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9046  0E0B  0872               	movf	_SetPoint0+2,w	;volatile
  9047  0E0C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9048  0E0D  0871               	movf	_SetPoint0+1,w	;volatile
  9049  0E0E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9050  0E0F  0870               	movf	_SetPoint0,w	;volatile
  9051  0E10  00A4               	movwf	___fldiv@b^(0+128)
  9052  0E11  160A  118A  2517  120A  158A  	fcall	___fldiv
  9053  0E16  0823               	movf	(?___fldiv+3)^(0+128),w
  9054  0E17  00F3               	movwf	_SetPoint0+3	;volatile
  9055  0E18  0822               	movf	(?___fldiv+2)^(0+128),w
  9056  0E19  00F2               	movwf	_SetPoint0+2	;volatile
  9057  0E1A  0821               	movf	(?___fldiv+1)^(0+128),w
  9058  0E1B  00F1               	movwf	_SetPoint0+1	;volatile
  9059  0E1C  0820               	movf	?___fldiv^(0+128),w
  9060  0E1D  00F0               	movwf	_SetPoint0	;volatile
  9061                           
  9062                           ;SlaveLiofilizadorVer1.c: 987:      TempoON_0 = EEPROM_Read_Byte(2);
  9063  0E1E  3002               	movlw	2
  9064  0E1F  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9065  0E22  1683               	bsf	3,5	;RP0=1, select bank3
  9066  0E23  00BA               	movwf	_TempoON_0^(0+384)
  9067                           
  9068                           ;SlaveLiofilizadorVer1.c: 988:      TempoOFF_0= EEPROM_Read_Byte(3);
  9069  0E24  3003               	movlw	3
  9070  0E25  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9071  0E28  1683               	bsf	3,5	;RP0=1, select bank3
  9072  0E29  00B9               	movwf	_TempoOFF_0^(0+384)
  9073                           
  9074                           ;SlaveLiofilizadorVer1.c: 989:      Histerese0= EEPROM_Read_Byte(4);
  9075  0E2A  3004               	movlw	4
  9076  0E2B  26C8               	fcall	_EEPROM_Read_Byte
  9077  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  9078  0E2D  00AB               	movwf	___xxtofl@val
  9079  0E2E  3000               	movlw	0
  9080  0E2F  01AC               	clrf	___xxtofl@val+1
  9081  0E30  01AD               	clrf	___xxtofl@val+2
  9082  0E31  01AE               	clrf	___xxtofl@val+3
  9083  0E32  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9084  0E37  082E               	movf	?___xxtofl+3,w
  9085  0E38  1683               	bsf	3,5	;RP0=1, select bank3
  9086  0E39  1703               	bsf	3,6	;RP1=1, select bank3
  9087  0E3A  009F               	movwf	(_Histerese0+3)^(0+384)
  9088  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  9089  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  9090  0E3D  082D               	movf	?___xxtofl+2,w
  9091  0E3E  1683               	bsf	3,5	;RP0=1, select bank3
  9092  0E3F  1703               	bsf	3,6	;RP1=1, select bank3
  9093  0E40  009E               	movwf	(_Histerese0+2)^(0+384)
  9094  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  9095  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  9096  0E43  082C               	movf	?___xxtofl+1,w
  9097  0E44  1683               	bsf	3,5	;RP0=1, select bank3
  9098  0E45  1703               	bsf	3,6	;RP1=1, select bank3
  9099  0E46  009D               	movwf	(_Histerese0+1)^(0+384)
  9100  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  9101  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  9102  0E49  082B               	movf	?___xxtofl,w
  9103  0E4A  1683               	bsf	3,5	;RP0=1, select bank3
  9104  0E4B  1703               	bsf	3,6	;RP1=1, select bank3
  9105  0E4C  009C               	movwf	_Histerese0^(0+384)
  9106                           
  9107                           ;SlaveLiofilizadorVer1.c: 990:      Status0 = EEPROM_Read_Integer(5);
  9108  0E4D  3005               	movlw	5
  9109  0E4E  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9110  0E51  0824               	movf	?_EEPROM_Read_Integer+1,w
  9111  0E52  1683               	bsf	3,5	;RP0=1, select bank3
  9112  0E53  1703               	bsf	3,6	;RP1=1, select bank3
  9113  0E54  00A9               	movwf	(_Status0+1)^(0+384)
  9114  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  9115  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  9116  0E57  0823               	movf	?_EEPROM_Read_Integer,w
  9117  0E58  1683               	bsf	3,5	;RP0=1, select bank3
  9118  0E59  1703               	bsf	3,6	;RP1=1, select bank3
  9119  0E5A  00A8               	movwf	_Status0^(0+384)
  9120                           
  9121                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1 = EEPROM_Read_Integer(7);
  9122  0E5B  3007               	movlw	7
  9123  0E5C  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9124  0E5F  274E               	fcall	PL14	;call to abstracted procedure
  9125  0E60  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9126  0E65  082E               	movf	?___xxtofl+3,w
  9127  0E66  1683               	bsf	3,5	;RP0=1, select bank3
  9128  0E67  1703               	bsf	3,6	;RP1=1, select bank3
  9129  0E68  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9130  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  9131  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9132  0E6B  082D               	movf	?___xxtofl+2,w
  9133  0E6C  1683               	bsf	3,5	;RP0=1, select bank3
  9134  0E6D  1703               	bsf	3,6	;RP1=1, select bank3
  9135  0E6E  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9136  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  9137  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  9138  0E71  082C               	movf	?___xxtofl+1,w
  9139  0E72  1683               	bsf	3,5	;RP0=1, select bank3
  9140  0E73  1703               	bsf	3,6	;RP1=1, select bank3
  9141  0E74  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9142  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9143  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  9144  0E77  082B               	movf	?___xxtofl,w
  9145  0E78  1683               	bsf	3,5	;RP0=1, select bank3
  9146  0E79  1703               	bsf	3,6	;RP1=1, select bank3
  9147  0E7A  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9148                           
  9149                           ;SlaveLiofilizadorVer1.c: 993:      SetPoint1/=10;
  9150  0E7B  3041               	movlw	65
  9151  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  9152  0E7D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9153  0E7E  3020               	movlw	32
  9154  0E7F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9155  0E80  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9156  0E81  01A0               	clrf	___fldiv@a^(0+128)
  9157  0E82  1703               	bsf	3,6	;RP1=1, select bank3
  9158  0E83  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
  9159  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  9160  0E85  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9161  0E86  1703               	bsf	3,6	;RP1=1, select bank3
  9162  0E87  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
  9163  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  9164  0E89  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9165  0E8A  1703               	bsf	3,6	;RP1=1, select bank3
  9166  0E8B  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
  9167  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  9168  0E8D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9169  0E8E  1703               	bsf	3,6	;RP1=1, select bank3
  9170  0E8F  0818               	movf	_SetPoint1^(0+384),w	;volatile
  9171  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  9172  0E91  00A4               	movwf	___fldiv@b^(0+128)
  9173  0E92  160A  118A  2517  120A  158A  	fcall	___fldiv
  9174  0E97  0823               	movf	(?___fldiv+3)^(0+128),w
  9175  0E98  1703               	bsf	3,6	;RP1=1, select bank3
  9176  0E99  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9177  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  9178  0E9B  0822               	movf	(?___fldiv+2)^(0+128),w
  9179  0E9C  1703               	bsf	3,6	;RP1=1, select bank3
  9180  0E9D  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9181  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  9182  0E9F  0821               	movf	(?___fldiv+1)^(0+128),w
  9183  0EA0  1703               	bsf	3,6	;RP1=1, select bank3
  9184  0EA1  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9185  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  9186  0EA3  0820               	movf	?___fldiv^(0+128),w
  9187  0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  9188  0EA5  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9189                           
  9190                           ;SlaveLiofilizadorVer1.c: 994:      TempoON_1 = EEPROM_Read_Byte(9);
  9191  0EA6  3009               	movlw	9
  9192  0EA7  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9193  0EAA  1683               	bsf	3,5	;RP0=1, select bank3
  9194  0EAB  00B7               	movwf	_TempoON_1^(0+384)
  9195                           
  9196                           ;SlaveLiofilizadorVer1.c: 995:      TempoOFF_1= EEPROM_Read_Byte(10);
  9197  0EAC  300A               	movlw	10
  9198  0EAD  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9199  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  9200  0EB1  00B6               	movwf	_TempoOFF_1^(0+384)
  9201                           
  9202                           ;SlaveLiofilizadorVer1.c: 996:      Histerese1= EEPROM_Read_Byte(11);
  9203  0EB2  300B               	movlw	11
  9204  0EB3  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9205  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  9206  0EB7  00B8               	movwf	_Histerese1^(0+384)
  9207                           
  9208                           ;SlaveLiofilizadorVer1.c: 997:      Status1 = EEPROM_Read_Integer(12);
  9209  0EB8  300C               	movlw	12
  9210  0EB9  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9211  0EBC  0824               	movf	?_EEPROM_Read_Integer+1,w
  9212  0EBD  1683               	bsf	3,5	;RP0=1, select bank3
  9213  0EBE  1703               	bsf	3,6	;RP1=1, select bank3
  9214  0EBF  00A7               	movwf	(_Status1+1)^(0+384)
  9215  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  9216  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  9217  0EC2  0823               	movf	?_EEPROM_Read_Integer,w
  9218  0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  9219  0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  9220  0EC5  00A6               	movwf	_Status1^(0+384)
  9221                           
  9222                           ;SlaveLiofilizadorVer1.c: 999:      statuspower.bits=EEPROM_Read_Byte(14);
  9223  0EC6  300E               	movlw	14
  9224  0EC7  2EC8               	ljmp	_EEPROM_Read_Byte
  9225  0EC8                     __end_of_Load_Work:	
  9226  0EC8                     __ptext46:	
  9227 ;; *************** function _EEPROM_Read_Byte *****************
  9228 ;; Defined at:
  9229 ;;		line 52 in file "eeprom.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  addr            1    wreg     unsigned char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  addr            1    2[BANK0 ] unsigned char 
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      unsigned char 
  9236 ;; Registers used:
  9237 ;;		wreg
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/300
  9240 ;;		On exit  : 300/200
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9243 ;;      Params:         0       0       0       0       0
  9244 ;;      Locals:         0       1       0       0       0
  9245 ;;      Temps:          0       2       0       0       0
  9246 ;;      Totals:         0       3       0       0       0
  9247 ;;Total ram usage:        3 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_Decodify_Command
  9254 ;;		_Load_Work
  9255 ;;		_EEPROM_Read_Integer
  9256 ;;		_EEPROM_Read_String
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           
  9261                           ;psect for function _EEPROM_Read_Byte
  9262  0EC8                     _EEPROM_Read_Byte:	
  9263                           
  9264                           ;incstack = 0
  9265                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9266                           ;EEPROM_Read_Byte@addr stored from wreg
  9267  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  9268  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  9269  0ECA  00A2               	movwf	EEPROM_Read_Byte@addr
  9270                           
  9271                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9272  0ECB  3014               	movlw	20
  9273  0ECC  1683               	bsf	3,5	;RP0=1, select bank3
  9274  0ECD  1703               	bsf	3,6	;RP1=1, select bank3
  9275  0ECE  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9276  0ECF  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9277  0ED0                     l617:	
  9278                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9279                           
  9280  0ED0  188C               	btfsc	12,1	;volsfr
  9281  0ED1  2ED0               	goto	l617
  9282                           
  9283                           ;eeprom.c: 57:    EEADR=addr;
  9284  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  9285  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  9286  0ED4  0822               	movf	EEPROM_Read_Byte@addr,w
  9287  0ED5  1703               	bsf	3,6	;RP1=1, select bank2
  9288  0ED6  008D               	movwf	13	;volatile
  9289                           
  9290                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9291  0ED7  1683               	bsf	3,5	;RP0=1, select bank3
  9292  0ED8  138C               	bcf	12,7	;volsfr
  9293                           
  9294                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9295  0ED9  140C               	bsf	12,0	;volsfr
  9296                           
  9297                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9298  0EDA  304E               	movlw	78
  9299  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  9300  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  9301  0EDD  00A1               	movwf	??_EEPROM_Read_Byte+1
  9302  0EDE  30EA               	movlw	234
  9303  0EDF  00A0               	movwf	??_EEPROM_Read_Byte
  9304  0EE0                     u7697:	
  9305  0EE0  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9306  0EE1  2EE0               	goto	u7697
  9307  0EE2  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9308  0EE3  2EE0               	goto	u7697
  9309  0EE4  0000               	nop
  9310                           
  9311                           ;eeprom.c: 61:    return EEDATA;
  9312  0EE5  1283               	bcf	3,5	;RP0=0, select bank2
  9313  0EE6  1703               	bsf	3,6	;RP1=1, select bank2
  9314  0EE7  080C               	movf	12,w	;volatile
  9315  0EE8  0008               	return
  9316  0EE9                     __end_of_EEPROM_Read_Byte:	
  9317  0EE9                     __ptext41:	
  9318 ;; *************** function _EEPROM_Read_Integer *****************
  9319 ;; Defined at:
  9320 ;;		line 81 in file "eeprom.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  addr            1    wreg     unsigned char 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  addr            1    6[BANK0 ] unsigned char 
  9325 ;;  result          2    8[BANK0 ] unsigned int 
  9326 ;;  i               1   10[BANK0 ] unsigned char 
  9327 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9328 ;;		 -> EEPROM_Read_Integer@result(2), 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  2    3[BANK0 ] unsigned int 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : B00/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9338 ;;      Params:         0       3       0       0       0
  9339 ;;      Locals:         0       5       0       0       0
  9340 ;;      Temps:          0       0       0       0       0
  9341 ;;      Totals:         0       8       0       0       0
  9342 ;;Total ram usage:        8 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    2
  9345 ;; This function calls:
  9346 ;;		_EEPROM_Read_Byte
  9347 ;; This function is called by:
  9348 ;;		_main
  9349 ;;		_Decodify_Command
  9350 ;;		_Load_Work
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _EEPROM_Read_Integer
  9356  0EE9                     _EEPROM_Read_Integer:	
  9357                           
  9358                           ;incstack = 0
  9359                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9360                           ;EEPROM_Read_Integer@addr stored from wreg
  9361  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  9362  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  9363  0EEB  00A6               	movwf	EEPROM_Read_Integer@addr
  9364                           
  9365                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9366  0EEC  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9367  0EED  00A7               	movwf	EEPROM_Read_Integer@ptr
  9368                           
  9369                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9370  0EEE  01AA               	clrf	EEPROM_Read_Integer@i
  9371  0EEF                     l6806:	
  9372                           
  9373                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9374  0EEF  0827               	movf	EEPROM_Read_Integer@ptr,w
  9375  0EF0  0084               	movwf	4
  9376  0EF1  0826               	movf	EEPROM_Read_Integer@addr,w
  9377  0EF2  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9378  0EF5  1383               	bcf	3,7	;select IRP bank0
  9379  0EF6  0080               	movwf	0
  9380  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0EF8  3002               	movlw	2
  9382  0EF9  0AA6               	incf	EEPROM_Read_Integer@addr,f
  9383  0EFA  0AA7               	incf	EEPROM_Read_Integer@ptr,f
  9384  0EFB  0AAA               	incf	EEPROM_Read_Integer@i,f
  9385  0EFC  022A               	subwf	EEPROM_Read_Integer@i,w
  9386  0EFD  1C03               	skipc
  9387  0EFE  2EEF               	goto	l6806
  9388                           
  9389                           ;eeprom.c: 89:       return result;
  9390  0EFF  0829               	movf	EEPROM_Read_Integer@result+1,w
  9391  0F00  00A4               	movwf	?_EEPROM_Read_Integer+1
  9392  0F01  0828               	movf	EEPROM_Read_Integer@result,w
  9393  0F02  00A3               	movwf	?_EEPROM_Read_Integer
  9394  0F03  0008               	return
  9395  0F04                     __end_of_EEPROM_Read_Integer:	
  9396  0F04                     __ptext36:	
  9397 ;; *************** function _USART_put_int *****************
  9398 ;; Defined at:
  9399 ;;		line 138 in file "usart.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  value           2   10[BANK0 ] int 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  dado            1   12[BANK0 ] PTR unsigned char 
  9404 ;;		 -> USART_put_int@value(2), 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9409 ;; Tracked objects:
  9410 ;;		On entry : 300/0
  9411 ;;		On exit  : 300/100
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9414 ;;      Params:         0       2       0       0       0
  9415 ;;      Locals:         0       1       0       0       0
  9416 ;;      Temps:          0       0       0       0       0
  9417 ;;      Totals:         0       3       0       0       0
  9418 ;;Total ram usage:        3 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    2
  9421 ;; This function calls:
  9422 ;;		_USART_putc
  9423 ;; This function is called by:
  9424 ;;		_Decodify_Command
  9425 ;;		_PROCULUS_Control_Register_Write
  9426 ;;		_PROCULUS_VP_Write
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _USART_put_int
  9432  0F04                     _USART_put_int:	
  9433  0F04                     l6538:	
  9434                           ;incstack = 0
  9435                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9436                           
  9437                           
  9438                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9439  0F04  302A               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9440  0F05  00AC               	movwf	USART_put_int@dado
  9441                           
  9442                           ;usart.c: 141:      USART_putc(*(dado+1));
  9443  0F06  0A2C               	incf	USART_put_int@dado,w
  9444  0F07  0084               	movwf	4
  9445  0F08  1383               	bcf	3,7	;select IRP bank0
  9446  0F09  0800               	movf	0,w
  9447  0F0A  2587  120A  158A   	fcall	_USART_putc
  9448                           
  9449                           ;usart.c: 142:      USART_putc(*dado);
  9450  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  9451  0F0E  082C               	movf	USART_put_int@dado,w
  9452  0F0F  0084               	movwf	4
  9453  0F10  1383               	bcf	3,7	;select IRP bank0
  9454  0F11  0800               	movf	0,w
  9455  0F12  2D87               	ljmp	_USART_putc
  9456  0F13                     __end_of_USART_put_int:	
  9457  0F13                     __ptext24:	
  9458 ;; *************** function _Send_Reply_OK *****************
  9459 ;; Defined at:
  9460 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 100/100
  9471 ;;		On exit  : 300/100
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9474 ;;      Params:         0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0
  9477 ;;      Totals:         0       0       0       0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    3
  9481 ;; This function calls:
  9482 ;;		_USART_put_string
  9483 ;; This function is called by:
  9484 ;;		_Decodify_Command
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           
  9489                           ;psect for function _Send_Reply_OK
  9490  0F13                     _Send_Reply_OK:	
  9491  0F13                     l7418:	
  9492                           ;incstack = 0
  9493                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9494                           
  9495                           
  9496                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  9497  0F13  3035               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  9498  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  9499  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  9500  0F16  00A1               	movwf	USART_put_string@vetor
  9501  0F17  3080               	movlw	128
  9502  0F18  00A2               	movwf	USART_put_string@vetor+1
  9503  0F19  2DC5               	ljmp	l6822
  9504  0F1A                     __end_of_Send_Reply_OK:	
  9505  0F1A                     PL4:	
  9506  0F1A  0821               	movf	?__Umul8_16+1,w
  9507  0F1B  00ED               	movwf	___flmul@temp+1
  9508  0F1C  0820               	movf	?__Umul8_16,w
  9509  0F1D  00EC               	movwf	___flmul@temp
  9510  0F1E  00DD               	movwf	??___flmul
  9511  0F1F  086D               	movf	___flmul@temp+1,w
  9512  0F20  00DE               	movwf	??___flmul+1
  9513  0F21  01DF               	clrf	??___flmul+2
  9514  0F22  01E0               	clrf	??___flmul+3
  9515  0F23  085D               	movf	??___flmul,w
  9516  0F24  07E4               	addwf	___flmul@grs,f
  9517  0F25  085E               	movf	??___flmul+1,w
  9518  0F26  1103               	clrz
  9519  0F27  1803               	skipnc
  9520  0F28  3E01               	addlw	1
  9521  0F29  1D03               	btfss	3,2
  9522  0F2A  07E5               	addwf	___flmul@grs+1,f
  9523  0F2B  085F               	movf	??___flmul+2,w
  9524  0F2C  1103               	clrz
  9525  0F2D  1803               	skipnc
  9526  0F2E  3E01               	addlw	1
  9527  0F2F  1D03               	btfss	3,2
  9528  0F30  07E6               	addwf	___flmul@grs+2,f
  9529  0F31  0860               	movf	??___flmul+3,w
  9530  0F32  1103               	clrz
  9531  0F33  0008               	return
  9532  0F34                     __end_ofPL4:	
  9533  0F34                     PL8:	
  9534  0F34  00ED               	movwf	___flmul@temp+1
  9535  0F35  0820               	movf	?__Umul8_16,w
  9536  0F36  00EC               	movwf	___flmul@temp
  9537  0F37  00DD               	movwf	??___flmul
  9538  0F38  086D               	movf	___flmul@temp+1,w
  9539  0F39  00DE               	movwf	??___flmul+1
  9540  0F3A  01DF               	clrf	??___flmul+2
  9541  0F3B  01E0               	clrf	??___flmul+3
  9542  0F3C  0008               	return
  9543  0F3D                     __end_ofPL8:	
  9544  0F3D                     PL12:	
  9545  0F3D  085D               	movf	??___flmul,w
  9546  0F3E  07E8               	addwf	___flmul@prod,f
  9547  0F3F  085E               	movf	??___flmul+1,w
  9548  0F40  1103               	clrz
  9549  0F41  1803               	skipnc
  9550  0F42  3E01               	addlw	1
  9551  0F43  1D03               	btfss	3,2
  9552  0F44  07E9               	addwf	___flmul@prod+1,f
  9553  0F45  085F               	movf	??___flmul+2,w
  9554  0F46  1103               	clrz
  9555  0F47  1803               	skipnc
  9556  0F48  3E01               	addlw	1
  9557  0F49  1D03               	btfss	3,2
  9558  0F4A  07EA               	addwf	___flmul@prod+2,f
  9559  0F4B  0860               	movf	??___flmul+3,w
  9560  0F4C  1103               	clrz
  9561  0F4D  0008               	return
  9562  0F4E                     __end_ofPL12:	
  9563  0F4E                     PL14:	
  9564  0F4E  0823               	movf	?_EEPROM_Read_Integer,w
  9565  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  9566  0F50  00B9               	movwf	??_Load_Work^(0+128)
  9567  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  9568  0F52  0824               	movf	?_EEPROM_Read_Integer+1,w
  9569  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  9570  0F54  00BA               	movwf	(??_Load_Work^(0+128)+1)
  9571  0F55  01BB               	clrf	(??_Load_Work^(0+128)+2)
  9572  0F56  01BC               	clrf	(??_Load_Work^(0+128)+3)
  9573  0F57  083C               	movf	(??_Load_Work+3)^(0+128),w
  9574  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  9575  0F59  00AE               	movwf	___xxtofl@val+3
  9576  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  9577  0F5B  083B               	movf	(??_Load_Work+2)^(0+128),w
  9578  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  9579  0F5D  00AD               	movwf	___xxtofl@val+2
  9580  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  9581  0F5F  083A               	movf	(??_Load_Work+1)^(0+128),w
  9582  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  9583  0F61  00AC               	movwf	___xxtofl@val+1
  9584  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  9585  0F63  0839               	movf	??_Load_Work^(0+128),w
  9586  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  9587  0F65  00AB               	movwf	___xxtofl@val
  9588  0F66  3400               	retlw	0
  9589  0F67                     __end_ofPL14:	
  9590  0F67                     PL16:	
  9591  0F67  0821               	movf	?__Umul8_16+1,w
  9592  0F68  00ED               	movwf	___flmul@temp+1
  9593  0F69  0820               	movf	?__Umul8_16,w
  9594  0F6A  00EC               	movwf	___flmul@temp
  9595  0F6B  07E4               	addwf	___flmul@grs,f
  9596  0F6C  3001               	movlw	1
  9597  0F6D  1803               	skipnc
  9598  0F6E  07E5               	addwf	___flmul@grs+1,f
  9599  0F6F  1803               	skipnc
  9600  0F70  07E6               	addwf	___flmul@grs+2,f
  9601  0F71  1803               	skipnc
  9602  0F72  07E7               	addwf	___flmul@grs+3,f
  9603  0F73  086D               	movf	___flmul@temp+1,w
  9604  0F74  07E8               	addwf	___flmul@prod,f
  9605  0F75  3401               	retlw	1
  9606  0F76                     __end_ofPL16:	
  9607  0F76                     PL22:	
  9608  0F76  1803               	skipnc
  9609  0F77  07E9               	addwf	___flmul@prod+1,f
  9610  0F78  1803               	skipnc
  9611  0F79  07EA               	addwf	___flmul@prod+2,f
  9612  0F7A  1803               	skipnc
  9613  0F7B  07EB               	addwf	___flmul@prod+3,f
  9614  0F7C  0866               	movf	___flmul@grs+2,w
  9615  0F7D  00E7               	movwf	___flmul@grs+3
  9616  0F7E  0865               	movf	___flmul@grs+1,w
  9617  0F7F  00E6               	movwf	___flmul@grs+2
  9618  0F80  0864               	movf	___flmul@grs,w
  9619  0F81  00E5               	movwf	___flmul@grs+1
  9620  0F82  01E4               	clrf	___flmul@grs
  9621  0F83  0008               	return
  9622  0F84                     __end_ofPL22:	
  9623  0F84                     PL48:	
  9624  0F84  3038               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  9625  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  9626  0F86  00A0               	movwf	strcat@from
  9627  0F87  3080               	movlw	128
  9628  0F88  00A1               	movwf	strcat@from+1
  9629  0F89  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9630  0F8A                     __end_ofPL48:	
  9631  0F8A                     PL60:	
  9632  0F8A  1803               	skipnc
  9633  0F8B  3E01               	addlw	1
  9634  0F8C  1D03               	btfss	3,2
  9635  0F8D  07EB               	addwf	___flmul@prod+3,f
  9636  0F8E  0857               	movf	___flmul@b+2,w
  9637  0F8F  00A0               	movwf	__Umul8_16@multiplicand
  9638  0F90  0008               	return
  9639  0F91                     __end_ofPL60:	
  9640  0F91                     PL70:	
  9641  0F91  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  9642  0F92  00A0               	movwf	strcat@from
  9643  0F93  3080               	movlw	128
  9644  0F94  00A1               	movwf	strcat@from+1
  9645  0F95  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9646  0F96                     __end_ofPL70:	
  9647  0F96                     PL74:	
  9648  0F96  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  9649  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  9650  0F98  00A1               	movwf	USART_put_string@vetor
  9651  0F99  3001               	movlw	1
  9652  0F9A  00A2               	movwf	USART_put_string@vetor+1
  9653  0F9B  0008               	return
  9654  0F9C                     __end_ofPL74:	
  9655  0F9C                     __ptext32:	
  9656 ;; *************** function _PROCULUS_Show_Screen *****************
  9657 ;; Defined at:
  9658 ;;		line 243 in file "proculus.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  screen          2   17[BANK0 ] unsigned int 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  vetor           3   19[BANK0 ] unsigned char [3]
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9667 ;; Tracked objects:
  9668 ;;		On entry : 300/0
  9669 ;;		On exit  : 300/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9672 ;;      Params:         0       2       0       0       0
  9673 ;;      Locals:         0       3       0       0       0
  9674 ;;      Temps:          0       0       0       0       0
  9675 ;;      Totals:         0       5       0       0       0
  9676 ;;Total ram usage:        5 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    4
  9679 ;; This function calls:
  9680 ;;		_PROCULUS_Control_Register_Write
  9681 ;; This function is called by:
  9682 ;;		_Decodify_Command
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _PROCULUS_Show_Screen
  9688  0F9C                     _PROCULUS_Show_Screen:	
  9689                           
  9690                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9694  0F9C  3003               	movlw	3
  9695  0F9D  00B3               	movwf	PROCULUS_Show_Screen@vetor
  9696                           
  9697                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9698  0F9E  0832               	movf	PROCULUS_Show_Screen@screen+1,w
  9699  0F9F  00B4               	movwf	PROCULUS_Show_Screen@vetor+1
  9700                           
  9701                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9702  0FA0  0831               	movf	PROCULUS_Show_Screen@screen,w
  9703  0FA1  00B5               	movwf	PROCULUS_Show_Screen@vetor+2
  9704                           
  9705                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9706  0FA2  3003               	movlw	3
  9707  0FA3  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9708  0FA4  3033               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9709  0FA5  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9710  0FA6                     __end_of_PROCULUS_Show_Screen:	
  9711  0FA6                     __ptext33:	
  9712 ;; *************** function _PROCULUS_Buzzer *****************
  9713 ;; Defined at:
  9714 ;;		line 223 in file "proculus.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  time_ms_x_10    2   17[BANK0 ] unsigned int 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  vetor           2   19[BANK0 ] unsigned char [2]
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 300/0
  9725 ;;		On exit  : 300/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9728 ;;      Params:         0       2       0       0       0
  9729 ;;      Locals:         0       2       0       0       0
  9730 ;;      Temps:          0       0       0       0       0
  9731 ;;      Totals:         0       4       0       0       0
  9732 ;;Total ram usage:        4 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    4
  9735 ;; This function calls:
  9736 ;;		_PROCULUS_Control_Register_Write
  9737 ;;		___lwdiv
  9738 ;; This function is called by:
  9739 ;;		_Decodify_Command
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           
  9744                           ;psect for function _PROCULUS_Buzzer
  9745  0FA6                     _PROCULUS_Buzzer:	
  9746                           
  9747                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9748                           
  9749                           ;incstack = 0
  9750                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9751  0FA6  300A               	movlw	10
  9752  0FA7  00A0               	movwf	___lwdiv@divisor
  9753  0FA8  01A1               	clrf	___lwdiv@divisor+1
  9754  0FA9  0832               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9755  0FAA  00A3               	movwf	___lwdiv@dividend+1
  9756  0FAB  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9757  0FAC  00A2               	movwf	___lwdiv@dividend
  9758  0FAD  160A  118A  2654  120A  158A  	fcall	___lwdiv
  9759  0FB2  0821               	movf	?___lwdiv+1,w
  9760  0FB3  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9761  0FB4  0820               	movf	?___lwdiv,w
  9762  0FB5  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9763                           
  9764                           ;proculus.c: 226:      vetor[0]=0x02;
  9765  0FB6  3002               	movlw	2
  9766  0FB7  00B3               	movwf	PROCULUS_Buzzer@vetor
  9767                           
  9768                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9769  0FB8  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9770  0FB9  00B4               	movwf	PROCULUS_Buzzer@vetor+1
  9771                           
  9772                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9773  0FBA  3002               	movlw	2
  9774  0FBB  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9775  0FBC  3033               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9776  0FBD  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9777  0FBE                     __end_of_PROCULUS_Buzzer:	
  9778  0FBE                     __ptext35:	
  9779 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9780 ;; Defined at:
  9781 ;;		line 13 in file "proculus.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  vetor           1    wreg     PTR unsigned char 
  9784 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9785 ;;  size            1   13[BANK0 ] unsigned char 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  vetor           1   15[BANK0 ] PTR unsigned char 
  9788 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9789 ;;  i               1   16[BANK0 ] unsigned char 
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 300/0
  9796 ;;		On exit  : 300/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9799 ;;      Params:         0       1       0       0       0
  9800 ;;      Locals:         0       2       0       0       0
  9801 ;;      Temps:          0       1       0       0       0
  9802 ;;      Totals:         0       4       0       0       0
  9803 ;;Total ram usage:        4 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    3
  9806 ;; This function calls:
  9807 ;;		_PROCULUS_Delay
  9808 ;;		_USART_put_int
  9809 ;;		_USART_putc
  9810 ;; This function is called by:
  9811 ;;		_PROCULUS_Buzzer
  9812 ;;		_PROCULUS_Show_Screen
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           
  9817                           ;psect for function _PROCULUS_Control_Register_Write
  9818  0FBE                     _PROCULUS_Control_Register_Write:	
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9822                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9823  0FBE  00AF               	movwf	PROCULUS_Control_Register_Write@vetor
  9824                           
  9825                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9826  0FBF  30A5               	movlw	165
  9827  0FC0  00AA               	movwf	USART_put_int@value
  9828  0FC1  305A               	movlw	90
  9829  0FC2  00AB               	movwf	USART_put_int@value+1
  9830  0FC3  2704  120A  158A   	fcall	_USART_put_int
  9831                           
  9832                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9833  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  9834  0FC7  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9835  0FC8  3E01               	addlw	1
  9836  0FC9  2587  120A  158A   	fcall	_USART_putc
  9837                           
  9838                           ;proculus.c: 16:      USART_putc(0x80);
  9839  0FCC  3080               	movlw	128
  9840  0FCD  2587  120A  158A   	fcall	_USART_putc
  9841                           
  9842                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9843  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  9844  0FD1  01B0               	clrf	PROCULUS_Control_Register_Write@i
  9845  0FD2                     l6906:	
  9846  0FD2  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9847  0FD3  0230               	subwf	PROCULUS_Control_Register_Write@i,w
  9848  0FD4  1803               	btfsc	3,0
  9849  0FD5  2FE2               	goto	l6908
  9850                           
  9851                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9852  0FD6  0830               	movf	PROCULUS_Control_Register_Write@i,w
  9853  0FD7  072F               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9854  0FD8  00AE               	movwf	??_PROCULUS_Control_Register_Write
  9855  0FD9  0084               	movwf	4
  9856  0FDA  1383               	bcf	3,7	;select IRP bank0
  9857  0FDB  0800               	movf	0,w
  9858  0FDC  2587  120A  158A   	fcall	_USART_putc
  9859  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  9860  0FE0  0AB0               	incf	PROCULUS_Control_Register_Write@i,f
  9861  0FE1  2FD2               	goto	l6906
  9862  0FE2                     l6908:	
  9863                           
  9864                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9865  0FE2  01A0               	clrf	PROCULUS_Delay@tempo_ms
  9866  0FE3  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  9867  0FE4  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  9868  0FE5  2FE6               	ljmp	l6554
  9869  0FE6                     __end_of_PROCULUS_Control_Register_Write:	
  9870  0FE6                     __ptext38:	
  9871 ;; *************** function _PROCULUS_Delay *****************
  9872 ;; Defined at:
  9873 ;;		line 267 in file "proculus.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  i               2    4[BANK0 ] unsigned int 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 300/800
  9884 ;;		On exit  : 300/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9887 ;;      Params:         0       2       0       0       0
  9888 ;;      Locals:         0       2       0       0       0
  9889 ;;      Temps:          0       2       0       0       0
  9890 ;;      Totals:         0       6       0       0       0
  9891 ;;Total ram usage:        6 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_PROCULUS_Control_Register_Write
  9898 ;;		_PROCULUS_VP_Write
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function _PROCULUS_Delay
  9904  0FE6                     _PROCULUS_Delay:	
  9905  0FE6                     l6554:	
  9906                           ;incstack = 0
  9907                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9908                           
  9909                           
  9910                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9911  0FE6  01A4               	clrf	PROCULUS_Delay@i
  9912  0FE7  01A5               	clrf	PROCULUS_Delay@i+1
  9913  0FE8                     l6560:	
  9914  0FE8  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9915  0FE9  0225               	subwf	PROCULUS_Delay@i+1,w
  9916  0FEA  1D03               	skipz
  9917  0FEB  2FEE               	goto	u6035
  9918  0FEC  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9919  0FED  0224               	subwf	PROCULUS_Delay@i,w
  9920  0FEE                     u6035:	
  9921  0FEE  1803               	btfsc	3,0
  9922  0FEF  0008               	return
  9923                           
  9924                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9925  0FF0  3003               	movlw	3
  9926  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  9927  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  9928  0FF3  00A3               	movwf	??_PROCULUS_Delay+1
  9929  0FF4  3097               	movlw	151
  9930  0FF5  00A2               	movwf	??_PROCULUS_Delay
  9931  0FF6                     u7667:	
  9932  0FF6  0BA2               	decfsz	??_PROCULUS_Delay,f
  9933  0FF7  2FF6               	goto	u7667
  9934  0FF8  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9935  0FF9  2FF6               	goto	u7667
  9936                           
  9937                           ;proculus.c: 270:     }
  9938  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9939  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  9940  0FFC  0AA4               	incf	PROCULUS_Delay@i,f
  9941  0FFD  1903               	skipnz
  9942  0FFE  0AA5               	incf	PROCULUS_Delay@i+1,f
  9943  0FFF  2FE8               	goto	l6560
  9944  1000                     __end_of_PROCULUS_Delay:	
  9945                           
  9946                           	psect	text43
  9947  1E21                     __ptext43:	
  9948 ;; *************** function _EEPROM_Write_Integer *****************
  9949 ;; Defined at:
  9950 ;;		line 68 in file "eeprom.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  addr            1    wreg     unsigned char 
  9953 ;;  dado            2    5[BANK0 ] unsigned int 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  addr            1    9[BANK0 ] unsigned char 
  9956 ;;  i               1   11[BANK0 ] unsigned char 
  9957 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9958 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9959 ;;  addr_memo       1    0        unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 200/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9969 ;;      Params:         0       2       0       0       0
  9970 ;;      Locals:         0       3       0       0       0
  9971 ;;      Temps:          0       2       0       0       0
  9972 ;;      Totals:         0       7       0       0       0
  9973 ;;Total ram usage:        7 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    2
  9976 ;; This function calls:
  9977 ;;		_EEPROM_Write_Byte
  9978 ;; This function is called by:
  9979 ;;		_main
  9980 ;;		_Decodify_Command
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function _EEPROM_Write_Integer
  9986  1E21                     _EEPROM_Write_Integer:	
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9990                           ;EEPROM_Write_Integer@addr stored from wreg
  9991  1E21  1283               	bcf	3,5	;RP0=0, select bank0
  9992  1E22  00A9               	movwf	EEPROM_Write_Integer@addr
  9993                           
  9994                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9995  1E23  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9996  1E24  00AA               	movwf	EEPROM_Write_Integer@ptr
  9997                           
  9998                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9999  1E25  01AB               	clrf	EEPROM_Write_Integer@i
 10000  1E26                     l7358:	
 10001                           
 10002                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10003  1E26  082A               	movf	EEPROM_Write_Integer@ptr,w
 10004  1E27  0084               	movwf	4
 10005  1E28  1383               	bcf	3,7	;select IRP bank0
 10006  1E29  0800               	movf	0,w
 10007  1E2A  00A0               	movwf	EEPROM_Write_Byte@dado
 10008  1E2B  0829               	movf	EEPROM_Write_Integer@addr,w
 10009  1E2C  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10010  1E2F  1283               	bcf	3,5	;RP0=0, select bank0
 10011  1E30  1303               	bcf	3,6	;RP1=0, select bank0
 10012  1E31  3002               	movlw	2
 10013  1E32  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 10014  1E33  0AA9               	incf	EEPROM_Write_Integer@addr,f
 10015  1E34  0AAB               	incf	EEPROM_Write_Integer@i,f
 10016  1E35  022B               	subwf	EEPROM_Write_Integer@i,w
 10017  1E36  1C03               	skipc
 10018  1E37  2E26               	goto	l7358
 10019                           
 10020                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10021  1E38  304E               	movlw	78
 10022  1E39  1283               	bcf	3,5	;RP0=0, select bank0
 10023  1E3A  1303               	bcf	3,6	;RP1=0, select bank0
 10024  1E3B  00A8               	movwf	??_EEPROM_Write_Integer+1
 10025  1E3C  30EA               	movlw	234
 10026  1E3D  00A7               	movwf	??_EEPROM_Write_Integer
 10027  1E3E                     u7677:	
 10028  1E3E  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10029  1E3F  2E3E               	goto	u7677
 10030  1E40  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10031  1E41  2E3E               	goto	u7677
 10032  1E42  0000               	nop
 10033  1E43  0008               	return
 10034  1E44                     __end_of_EEPROM_Write_Integer:	
 10035  1E44                     __ptext42:	
 10036 ;; *************** function _EEPROM_Write_String *****************
 10037 ;; Defined at:
 10038 ;;		line 97 in file "eeprom.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  addr            1    wreg     unsigned char 
 10041 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10042 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  addr            1    6[BANK0 ] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 300/300
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10054 ;;      Params:         0       1       0       0       0
 10055 ;;      Locals:         0       1       0       0       0
 10056 ;;      Temps:          0       0       0       0       0
 10057 ;;      Totals:         0       2       0       0       0
 10058 ;;Total ram usage:        2 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    2
 10061 ;; This function calls:
 10062 ;;		_EEPROM_Write_Byte
 10063 ;; This function is called by:
 10064 ;;		_Decodify_Command
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           
 10069                           ;psect for function _EEPROM_Write_String
 10070  1E44                     _EEPROM_Write_String:	
 10071                           
 10072                           ;incstack = 0
 10073                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10074                           ;EEPROM_Write_String@addr stored from wreg
 10075  1E44  1283               	bcf	3,5	;RP0=0, select bank0
 10076  1E45  1303               	bcf	3,6	;RP1=0, select bank0
 10077  1E46  00A6               	movwf	EEPROM_Write_String@addr
 10078  1E47                     l7428:	
 10079                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10080                           
 10081                           
 10082                           ;eeprom.c: 99:     while(*dado)
 10083  1E47  0825               	movf	EEPROM_Write_String@dado,w
 10084  1E48  0084               	movwf	4
 10085  1E49  1783               	bsf	3,7	;select IRP bank2
 10086  1E4A  0800               	movf	0,w
 10087  1E4B  1903               	btfsc	3,2
 10088  1E4C  2E58               	goto	l7430
 10089                           
 10090                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10091  1E4D  2697  160A  158A   	fcall	PL64	;call to abstracted procedure
 10092  1E50  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10093                           
 10094                           ;eeprom.c: 102:      addr++;
 10095  1E53  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1E54  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1E55  0AA6               	incf	EEPROM_Write_String@addr,f
 10098                           
 10099                           ;eeprom.c: 103:      dado++;
 10100  1E56  0AA5               	incf	EEPROM_Write_String@dado,f
 10101  1E57  2E47               	goto	l7428
 10102  1E58                     l7430:	
 10103                           
 10104                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10105  1E58  2697  160A  158A   	fcall	PL64	;call to abstracted procedure
 10106  1E5B  2E5C               	ljmp	_EEPROM_Write_Byte
 10107  1E5C                     __end_of_EEPROM_Write_String:	
 10108  1E5C                     __ptext44:	
 10109 ;; *************** function _EEPROM_Write_Byte *****************
 10110 ;; Defined at:
 10111 ;;		line 21 in file "eeprom.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  addr            1    wreg     unsigned char 
 10114 ;;  dado            1    0[BANK0 ] unsigned char 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  addr            1    3[BANK0 ] unsigned char 
 10117 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/300
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10127 ;;      Params:         0       1       0       0       0
 10128 ;;      Locals:         0       2       0       0       0
 10129 ;;      Temps:          0       2       0       0       0
 10130 ;;      Totals:         0       5       0       0       0
 10131 ;;Total ram usage:        5 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_Decodify_Command
 10138 ;;		_EEPROM_Write_Integer
 10139 ;;		_EEPROM_Write_String
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _EEPROM_Write_Byte
 10145  1E5C                     _EEPROM_Write_Byte:	
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10149                           ;EEPROM_Write_Byte@addr stored from wreg
 10150  1E5C  1283               	bcf	3,5	;RP0=0, select bank0
 10151  1E5D  1303               	bcf	3,6	;RP1=0, select bank0
 10152  1E5E  00A3               	movwf	EEPROM_Write_Byte@addr
 10153                           
 10154                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10155  1E5F  3014               	movlw	20
 10156  1E60  1683               	bsf	3,5	;RP0=1, select bank3
 10157  1E61  1703               	bsf	3,6	;RP1=1, select bank3
 10158  1E62  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10159  1E63  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10160  1E64                     l607:	
 10161                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10162                           
 10163  1E64  188C               	btfsc	12,1	;volsfr
 10164  1E65  2E64               	goto	l607
 10165                           
 10166                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10167  1E66  1F8B               	btfss	11,7	;volatile
 10168  1E67  2E6D               	goto	l6836
 10169                           
 10170                           ;eeprom.c: 28:           last_GIE=1;
 10171  1E68  1283               	bcf	3,5	;RP0=0, select bank0
 10172  1E69  1303               	bcf	3,6	;RP1=0, select bank0
 10173  1E6A  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10174  1E6B  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10175  1E6C  2E70               	goto	l6838
 10176  1E6D                     l6836:	
 10177                           
 10178                           ;eeprom.c: 30:           last_GIE=0;
 10179  1E6D  1283               	bcf	3,5	;RP0=0, select bank0
 10180  1E6E  1303               	bcf	3,6	;RP1=0, select bank0
 10181  1E6F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10182  1E70                     l6838:	
 10183                           
 10184                           ;eeprom.c: 32:        EEADR=addr;
 10185  1E70  0823               	movf	EEPROM_Write_Byte@addr,w
 10186  1E71  1703               	bsf	3,6	;RP1=1, select bank2
 10187  1E72  008D               	movwf	13	;volatile
 10188                           
 10189                           ;eeprom.c: 33:        EEDATA=dado;
 10190  1E73  1303               	bcf	3,6	;RP1=0, select bank0
 10191  1E74  0820               	movf	EEPROM_Write_Byte@dado,w
 10192  1E75  1703               	bsf	3,6	;RP1=1, select bank2
 10193  1E76  008C               	movwf	12	;volatile
 10194                           
 10195                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10196  1E77  1683               	bsf	3,5	;RP0=1, select bank3
 10197  1E78  138C               	bcf	12,7	;volsfr
 10198                           
 10199                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10200  1E79  150C               	bsf	12,2	;volsfr
 10201                           
 10202                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10203  1E7A  138B               	bcf	11,7	;volatile
 10204                           
 10205                           ;eeprom.c: 37:        EECON2=0x55;
 10206  1E7B  3055               	movlw	85
 10207  1E7C  008D               	movwf	13	;volsfr
 10208                           
 10209                           ;eeprom.c: 38:        EECON2=0xAA;
 10210  1E7D  30AA               	movlw	170
 10211  1E7E  008D               	movwf	13	;volsfr
 10212                           
 10213                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10214  1E7F  148C               	bsf	12,1	;volsfr
 10215                           
 10216                           ;eeprom.c: 41:        if(last_GIE==1)
 10217  1E80  1283               	bcf	3,5	;RP0=0, select bank0
 10218  1E81  1303               	bcf	3,6	;RP1=0, select bank0
 10219  1E82  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10220  1E83  1D03               	btfss	3,2
 10221  1E84  2E87               	goto	l612
 10222                           
 10223                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10224  1E85  178B               	bsf	11,7	;volatile
 10225  1E86  2E88               	goto	l613
 10226  1E87                     l612:	
 10227                           ;eeprom.c: 43:        else
 10228                           
 10229                           
 10230                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10231  1E87  138B               	bcf	11,7	;volatile
 10232  1E88                     l613:	
 10233                           
 10234                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10235  1E88  1683               	bsf	3,5	;RP0=1, select bank3
 10236  1E89  1703               	bsf	3,6	;RP1=1, select bank3
 10237  1E8A  110C               	bcf	12,2	;volsfr
 10238                           
 10239                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10240  1E8B  304E               	movlw	78
 10241  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
 10242  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
 10243  1E8E  00A2               	movwf	??_EEPROM_Write_Byte+1
 10244  1E8F  30EA               	movlw	234
 10245  1E90  00A1               	movwf	??_EEPROM_Write_Byte
 10246  1E91                     u7687:	
 10247  1E91  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10248  1E92  2E91               	goto	u7687
 10249  1E93  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10250  1E94  2E91               	goto	u7687
 10251  1E95  0000               	nop
 10252  1E96  0008               	return
 10253  1E97                     __end_of_EEPROM_Write_Byte:	
 10254  1E97                     PL64:	
 10255  1E97  0825               	movf	EEPROM_Write_String@dado,w
 10256  1E98  0084               	movwf	4
 10257  1E99  0800               	movf	0,w
 10258  1E9A  00A0               	movwf	EEPROM_Write_Byte@dado
 10259  1E9B  0826               	movf	EEPROM_Write_String@addr,w
 10260  1E9C  0008               	return
 10261  1E9D                     __end_ofPL64:	
 10262                           
 10263                           	psect	text45
 10264  1C83                     __ptext45:	
 10265 ;; *************** function _EEPROM_Read_String *****************
 10266 ;; Defined at:
 10267 ;;		line 109 in file "eeprom.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  addr            1    wreg     unsigned char 
 10270 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10271 ;;		 -> texto(16), 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  addr            1    4[BANK0 ] unsigned char 
 10274 ;;  c               1    5[BANK0 ] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 300/300
 10281 ;;		On exit  : B00/800
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10284 ;;      Params:         0       1       0       0       0
 10285 ;;      Locals:         0       2       0       0       0
 10286 ;;      Temps:          0       0       0       0       0
 10287 ;;      Totals:         0       3       0       0       0
 10288 ;;Total ram usage:        3 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    2
 10291 ;; This function calls:
 10292 ;;		_EEPROM_Read_Byte
 10293 ;; This function is called by:
 10294 ;;		_Decodify_Command
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           
 10299                           ;psect for function _EEPROM_Read_String
 10300  1C83                     _EEPROM_Read_String:	
 10301                           
 10302                           ;incstack = 0
 10303                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10304                           ;EEPROM_Read_String@addr stored from wreg
 10305  1C83  1283               	bcf	3,5	;RP0=0, select bank0
 10306  1C84  1303               	bcf	3,6	;RP1=0, select bank0
 10307  1C85  00A4               	movwf	EEPROM_Read_String@addr
 10308  1C86                     l639:	
 10309                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10310                           
 10311                           
 10312                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10313  1C86  0824               	movf	EEPROM_Read_String@addr,w
 10314  1C87  120A  158A  26C8  160A  158A  	fcall	_EEPROM_Read_Byte
 10315  1C8C  1303               	bcf	3,6	;RP1=0, select bank0
 10316  1C8D  00A5               	movwf	EEPROM_Read_String@c
 10317  1C8E  0AA4               	incf	EEPROM_Read_String@addr,f
 10318                           
 10319                           ;eeprom.c: 114:         *(dado++)=c;
 10320  1C8F  0823               	movf	EEPROM_Read_String@dado,w
 10321  1C90  0084               	movwf	4
 10322  1C91  0825               	movf	EEPROM_Read_String@c,w
 10323  1C92  1783               	bsf	3,7	;select IRP bank2
 10324  1C93  0080               	movwf	0
 10325  1C94  0AA3               	incf	EEPROM_Read_String@dado,f
 10326                           
 10327                           ;eeprom.c: 116:       }while(c);
 10328  1C95  0825               	movf	EEPROM_Read_String@c,w
 10329  1C96  1903               	btfsc	3,2
 10330  1C97  0008               	return
 10331  1C98  2C86               	goto	l639
 10332  1C99                     __end_of_EEPROM_Read_String:	
 10333                           
 10334                           	psect	text48
 10335  1C5A                     __ptext48:	
 10336 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10337 ;; Defined at:
 10338 ;;		line 268 in file "EEPROM_24C1025.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  chip_add        1    wreg     unsigned char 
 10341 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10342 ;;  data            1   27[BANK0 ] unsigned char 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 300/300
 10351 ;;		On exit  : 300/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10354 ;;      Params:         0       5       0       0       0
 10355 ;;      Locals:         0       1       0       0       0
 10356 ;;      Temps:          0       0       0       0       0
 10357 ;;      Totals:         0       6       0       0       0
 10358 ;;Total ram usage:        6 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    4
 10361 ;; This function calls:
 10362 ;;		_EEPROM_24C1025_Write_Buffer
 10363 ;; This function is called by:
 10364 ;;		_Decodify_Command
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           
 10369                           ;psect for function _EEPROM_24C1025_Write_Byte
 10370  1C5A                     _EEPROM_24C1025_Write_Byte:	
 10371                           
 10372                           ;incstack = 0
 10373                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10374                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10375  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
 10376  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
 10377  1C5C  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10378                           
 10379                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10380  1C5D  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10381  1C5E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10382  1C5F  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10383  1C60  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10384  1C61  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10385  1C62  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10386  1C63  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10387  1C64  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10388  1C65  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10389  1C66  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10390  1C67  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10391  1C68  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10392  1C69  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 10393  1C6A  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10394  1C6B  120A  118A  2AA4   	ljmp	_EEPROM_24C1025_Write_Buffer
 10395  1C6E                     __end_of_EEPROM_24C1025_Write_Byte:	
 10396                           
 10397                           	psect	text50
 10398  0036                     __ptext50:	
 10399 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10400 ;; Defined at:
 10401 ;;		line 287 in file "EEPROM_24C1025.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  chip_add        1    wreg     unsigned char 
 10404 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  chip_add        1   26[BANK0 ] unsigned char 
 10407 ;;  data            2   27[BANK0 ] unsigned char [2]
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  2   22[BANK0 ] unsigned int 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 300/300
 10414 ;;		On exit  : 300/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10417 ;;      Params:         0       4       0       0       0
 10418 ;;      Locals:         0       3       0       0       0
 10419 ;;      Temps:          0       0       0       0       0
 10420 ;;      Totals:         0       7       0       0       0
 10421 ;;Total ram usage:        7 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    4
 10424 ;; This function calls:
 10425 ;;		_EEPROM_24C1025_Read_Buffer
 10426 ;; This function is called by:
 10427 ;;		_Decodify_Command
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _EEPROM_24C1025_Read_Int
 10433  0036                     _EEPROM_24C1025_Read_Int:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10437                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10438  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10439  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10440  0038  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10441                           
 10442                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10443  0039  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10444  003A  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10445  003B  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10446  003C  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10447  003D  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10448  003E  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10449  003F  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10450  0040  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10451  0041  3002               	movlw	2
 10452  0042  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10453  0043  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10454  0044  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10455  0045  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10456  0046  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10457  0047  21C4               	fcall	_EEPROM_24C1025_Read_Buffer
 10458                           
 10459                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 10460  0048  1283               	bcf	3,5	;RP0=0, select bank0
 10461  0049  1303               	bcf	3,6	;RP1=0, select bank0
 10462  004A  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 10463  004B  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10464  004C  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10465  004D  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10466  004E  0008               	return
 10467  004F                     __end_of_EEPROM_24C1025_Read_Int:	
 10468  004F                     __ptext47:	
 10469 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10470 ;; Defined at:
 10471 ;;		line 146 in file "EEPROM_24C1025.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  chip_add        1    wreg     unsigned char 
 10474 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10475 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10476 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  chip_add        1   15[BANK0 ] unsigned char 
 10479 ;;  ctrl            1   17[BANK0 ] unsigned char 
 10480 ;;  range           1   16[BANK0 ] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 300/300
 10487 ;;		On exit  : 300/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10490 ;;      Params:         0       5       0       0       0
 10491 ;;      Locals:         0       3       0       0       0
 10492 ;;      Temps:          0       0       0       0       0
 10493 ;;      Totals:         0       8       0       0       0
 10494 ;;Total ram usage:        8 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    3
 10497 ;; This function calls:
 10498 ;;		_I2C_Master_Start
 10499 ;;		_I2C_Master_Stop
 10500 ;;		_I2C_Master_Write
 10501 ;;		_my_delay_ms_WDT
 10502 ;; This function is called by:
 10503 ;;		_Decodify_Command
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function _EEPROM_24C1025_Write_Str
 10509  004F                     _EEPROM_24C1025_Write_Str:	
 10510                           
 10511                           ;incstack = 0
 10512                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10513                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10514  004F  1283               	bcf	3,5	;RP0=0, select bank0
 10515  0050  1303               	bcf	3,6	;RP1=0, select bank0
 10516  0051  00AF               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10517                           
 10518                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
 10519  0052  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10520  0053  1D03               	btfss	3,2
 10521  0054  0008               	return
 10522  0055  3002               	movlw	2
 10523  0056  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10524  0057  1D03               	skipz
 10525  0058  285F               	goto	u6863
 10526  0059  3000               	movlw	0
 10527  005A  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10528  005B  1D03               	skipz
 10529  005C  285F               	goto	u6863
 10530  005D  3000               	movlw	0
 10531  005E  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10532  005F                     u6863:	
 10533  005F  1803               	btfsc	3,0
 10534  0060  0008               	return
 10535  0061                     L18:	
 10536                           
 10537                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10538  0061  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10539  0062  1D03               	btfss	3,2
 10540  0063  2870               	goto	l7160
 10541  0064  3001               	movlw	1
 10542  0065  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10543  0066  1D03               	skipz
 10544  0067  286E               	goto	u6873
 10545  0068  3000               	movlw	0
 10546  0069  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10547  006A  1D03               	skipz
 10548  006B  286E               	goto	u6873
 10549  006C  3000               	movlw	0
 10550  006D  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10551  006E                     u6873:	
 10552  006E  1C03               	btfss	3,0
 10553  006F  2873               	goto	l7162
 10554  0070                     l7160:	
 10555  0070  3008               	movlw	8
 10556  0071  00B0               	movwf	EEPROM_24C1025_Write_Str@range
 10557  0072  2874               	goto	l7164
 10558  0073                     l7162:	
 10559  0073  01B0               	clrf	EEPROM_24C1025_Write_Str@range
 10560  0074                     l7164:	
 10561                           
 10562                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
 10563  0074  082F               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10564  0075  00B1               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10565  0076  30A0               	movlw	160
 10566                           
 10567                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
 10568  0077  1003               	clrc
 10569  0078  0DB1               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10570                           
 10571                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
 10572  0079  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10573                           
 10574                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
 10575  007A  0830               	movf	EEPROM_24C1025_Write_Str@range,w
 10576  007B  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10577                           
 10578                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
 10579  007C  237B  120A  118A   	fcall	_I2C_Master_Start
 10580                           
 10581                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
 10582  007F  1283               	bcf	3,5	;RP0=0, select bank0
 10583  0080  0831               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10584  0081  00A0               	movwf	I2C_Master_Write@d
 10585  0082  01A1               	clrf	I2C_Master_Write@d+1
 10586  0083  2373  120A  118A   	fcall	_I2C_Master_Write
 10587                           
 10588                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
 10589  0086  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10590  0087  00A0               	movwf	I2C_Master_Write@d
 10591  0088  01A1               	clrf	I2C_Master_Write@d+1
 10592  0089  2373  120A  118A   	fcall	_I2C_Master_Write
 10593                           
 10594                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
 10595  008C  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10596  008D  00A0               	movwf	I2C_Master_Write@d
 10597  008E  01A1               	clrf	I2C_Master_Write@d+1
 10598  008F  2373  120A  118A   	fcall	_I2C_Master_Write
 10599  0092                     l7224:	
 10600                           ;EEPROM_24C1025.c: 162:      while(*data)
 10601                           
 10602                           
 10603                           ;EEPROM_24C1025.c: 162:      while(*data)
 10604  0092  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10605  0093  0084               	movwf	4
 10606  0094  1783               	bsf	3,7	;select IRP bank2
 10607  0095  0800               	movf	0,w
 10608  0096  1903               	btfsc	3,2
 10609  0097  28D6               	goto	l7226
 10610  0098  0064               	clrwdt	;# 
 10611                           
 10612                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
 10613  0099  1283               	bcf	3,5	;RP0=0, select bank0
 10614  009A  1303               	bcf	3,6	;RP1=0, select bank0
 10615  009B  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10616  009C  1D03               	btfss	3,2
 10617  009D  0008               	return
 10618  009E  3002               	movlw	2
 10619  009F  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10620  00A0  1D03               	skipz
 10621  00A1  28A8               	goto	u6883
 10622  00A2  3000               	movlw	0
 10623  00A3  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10624  00A4  1D03               	skipz
 10625  00A5  28A8               	goto	u6883
 10626  00A6  3000               	movlw	0
 10627  00A7  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10628  00A8                     u6883:	
 10629  00A8  1803               	btfsc	3,0
 10630  00A9  0008               	return
 10631                           
 10632                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
 10633  00AA  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10634  00AB  3E01               	addlw	1
 10635  00AC  397F               	andlw	127
 10636  00AD  1D03               	btfss	3,2
 10637  00AE  28C7               	goto	l7218
 10638                           
 10639                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
 10640  00AF  2418  120A  118A   	fcall	PL56	;call to abstracted procedure
 10641  00B2  2373  120A  118A   	fcall	_I2C_Master_Write
 10642                           
 10643                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
 10644  00B5  2383  120A  118A   	fcall	_I2C_Master_Stop
 10645                           
 10646                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
 10647  00B8  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 10648  00BB  23AA  120A  118A   	fcall	_my_delay_ms_WDT
 10649                           
 10650                           ;EEPROM_24C1025.c: 172:             mem_add++;
 10651  00BE  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10652  00BF  1903               	skipnz
 10653  00C0  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10654  00C1  1903               	skipnz
 10655  00C2  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10656  00C3  1903               	skipnz
 10657  00C4  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10658                           
 10659                           ;EEPROM_24C1025.c: 173:             data++;
 10660  00C5  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
 10661  00C6  2861               	goto	L18
 10662  00C7                     l7218:	
 10663                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10664                           
 10665                           
 10666                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
 10667  00C7  2418  120A  118A   	fcall	PL56	;call to abstracted procedure
 10668  00CA  2373  120A  118A   	fcall	_I2C_Master_Write
 10669                           
 10670                           ;EEPROM_24C1025.c: 188:             data++;
 10671  00CD  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
 10672                           
 10673                           ;EEPROM_24C1025.c: 189:             mem_add++;
 10674  00CE  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10675  00CF  1903               	skipnz
 10676  00D0  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10677  00D1  1903               	skipnz
 10678  00D2  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10679  00D3  1903               	skipnz
 10680  00D4  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10681  00D5  2892               	goto	l7224
 10682  00D6                     l7226:	
 10683                           
 10684                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
 10685  00D6  01A0               	clrf	I2C_Master_Write@d
 10686  00D7  01A1               	clrf	I2C_Master_Write@d+1
 10687  00D8  2373  120A  118A   	fcall	_I2C_Master_Write
 10688                           
 10689                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
 10690  00DB  2383  120A  118A   	fcall	_I2C_Master_Stop
 10691                           
 10692                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
 10693  00DE  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 10694  00E1  2BAA               	ljmp	l6096
 10695  00E2                     __end_of_EEPROM_24C1025_Write_Str:	
 10696  00E2                     __ptext49:	
 10697 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10698 ;; Defined at:
 10699 ;;		line 201 in file "EEPROM_24C1025.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;  chip_add        1    wreg     unsigned char 
 10702 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10703 ;;  texto           1   14[BANK0 ] PTR unsigned char 
 10704 ;;		 -> texto(16), 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10707 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10708 ;;  range           1   18[BANK0 ] unsigned char 
 10709 ;;  cnt             1   16[BANK0 ] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 300/300
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10719 ;;      Params:         0       5       0       0       0
 10720 ;;      Locals:         0       4       0       0       0
 10721 ;;      Temps:          0       1       0       0       0
 10722 ;;      Totals:         0      10       0       0       0
 10723 ;;Total ram usage:       10 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    3
 10726 ;; This function calls:
 10727 ;;		_I2C_Master_Read
 10728 ;;		_I2C_Master_RepeatedStart
 10729 ;;		_I2C_Master_Start
 10730 ;;		_I2C_Master_Stop
 10731 ;;		_I2C_Master_Write
 10732 ;;		_my_delay_ms_WDT
 10733 ;; This function is called by:
 10734 ;;		_Decodify_Command
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           
 10739                           ;psect for function _EEPROM_24C1025_Read_Str
 10740  00E2                     _EEPROM_24C1025_Read_Str:	
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10744                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10745  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10746  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10747  00E4  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10748                           
 10749                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
 10750  00E5  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10751                           
 10752                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
 10753  00E6  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10754  00E7  1D03               	btfss	3,2
 10755  00E8  0008               	return
 10756  00E9  3002               	movlw	2
 10757  00EA  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10758  00EB  1D03               	skipz
 10759  00EC  28F3               	goto	u6923
 10760  00ED  3000               	movlw	0
 10761  00EE  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10762  00EF  1D03               	skipz
 10763  00F0  28F3               	goto	u6923
 10764  00F1  3000               	movlw	0
 10765  00F2  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10766  00F3                     u6923:	
 10767  00F3  1803               	btfsc	3,0
 10768  00F4  0008               	return
 10769                           
 10770                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10771  00F5  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10772  00F6  1D03               	btfss	3,2
 10773  00F7  2904               	goto	l7238
 10774  00F8  3001               	movlw	1
 10775  00F9  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10776  00FA  1D03               	skipz
 10777  00FB  2902               	goto	u6933
 10778  00FC  3000               	movlw	0
 10779  00FD  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10780  00FE  1D03               	skipz
 10781  00FF  2902               	goto	u6933
 10782  0100  3000               	movlw	0
 10783  0101  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10784  0102                     u6933:	
 10785  0102  1C03               	btfss	3,0
 10786  0103  2907               	goto	l7240
 10787  0104                     l7238:	
 10788  0104  3008               	movlw	8
 10789  0105  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10790  0106  2908               	goto	l7242
 10791  0107                     l7240:	
 10792  0107  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10793  0108                     l7242:	
 10794                           
 10795                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
 10796                           
 10797                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
 10798                           
 10799                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
 10800                           
 10801                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
 10802                           
 10803                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
 10804  0108  23F3  120A  118A   	fcall	PL38	;call to abstracted procedure
 10805                           
 10806                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
 10807  010B  237B  120A  118A   	fcall	_I2C_Master_Start
 10808                           
 10809                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
 10810  010E  242C  120A  118A   	fcall	PL76	;call to abstracted procedure
 10811  0111  2373  120A  118A   	fcall	_I2C_Master_Write
 10812                           
 10813                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
 10814  0114  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10815  0115  00A0               	movwf	I2C_Master_Write@d
 10816  0116  01A1               	clrf	I2C_Master_Write@d+1
 10817  0117  2373  120A  118A   	fcall	_I2C_Master_Write
 10818                           
 10819                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
 10820  011A  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10821  011B  00A0               	movwf	I2C_Master_Write@d
 10822  011C  01A1               	clrf	I2C_Master_Write@d+1
 10823  011D  2373  120A  118A   	fcall	_I2C_Master_Write
 10824                           
 10825                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
 10826  0120  23E0  120A  118A   	fcall	_I2C_Master_RepeatedStart
 10827                           
 10828                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
 10829  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10830  0124  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10831  0125  00A0               	movwf	I2C_Master_Write@d
 10832  0126  01A1               	clrf	I2C_Master_Write@d+1
 10833  0127  2373  120A  118A   	fcall	_I2C_Master_Write
 10834                           
 10835                           ;EEPROM_24C1025.c: 222:      cnt=0;
 10836  012A  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10837  012B                     l69:	
 10838                           ;EEPROM_24C1025.c: 223:      do{
 10839                           
 10840  012B  0064               	clrwdt	;# 
 10841                           
 10842                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10843  012C  1283               	bcf	3,5	;RP0=0, select bank0
 10844  012D  1303               	bcf	3,6	;RP1=0, select bank0
 10845  012E  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10846  012F  1D03               	btfss	3,2
 10847  0130  29B2               	goto	l7320
 10848  0131  3002               	movlw	2
 10849  0132  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10850  0133  1D03               	skipz
 10851  0134  293B               	goto	u6943
 10852  0135  3000               	movlw	0
 10853  0136  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10854  0137  1D03               	skipz
 10855  0138  293B               	goto	u6943
 10856  0139  3000               	movlw	0
 10857  013A  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10858  013B                     u6943:	
 10859  013B  1803               	btfsc	3,0
 10860  013C  29B2               	goto	l7320
 10861                           
 10862                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10863  013D  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10864  013E  3E01               	addlw	1
 10865  013F  397F               	andlw	127
 10866  0140  1D03               	btfss	3,2
 10867  0141  2993               	goto	l7310
 10868                           
 10869                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
 10870  0142  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10871  0143  0084               	movwf	4
 10872  0144  01A0               	clrf	I2C_Master_Read@a
 10873  0145  01A1               	clrf	I2C_Master_Read@a+1
 10874  0146  2386  120A  118A   	fcall	_I2C_Master_Read
 10875  0149  0820               	movf	?_I2C_Master_Read,w
 10876  014A  1783               	bsf	3,7	;select IRP bank2
 10877  014B  0080               	movwf	0
 10878                           
 10879                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10880  014C  2383  120A  118A   	fcall	_I2C_Master_Stop
 10881                           
 10882                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
 10883  014F  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 10884  0152  23AA  120A  118A   	fcall	_my_delay_ms_WDT
 10885                           
 10886                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10887  0155  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10888  0156  1903               	skipnz
 10889  0157  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10890  0158  1903               	skipnz
 10891  0159  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10892  015A  1903               	skipnz
 10893  015B  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10894                           
 10895                           ;EEPROM_24C1025.c: 233:              texto++;
 10896  015C  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
 10897                           
 10898                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10899  015D  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10900  015E  1D03               	btfss	3,2
 10901  015F  296C               	goto	l7284
 10902  0160  3001               	movlw	1
 10903  0161  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10904  0162  1D03               	skipz
 10905  0163  296A               	goto	u6963
 10906  0164  3000               	movlw	0
 10907  0165  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10908  0166  1D03               	skipz
 10909  0167  296A               	goto	u6963
 10910  0168  3000               	movlw	0
 10911  0169  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10912  016A                     u6963:	
 10913  016A  1C03               	btfss	3,0
 10914  016B  296F               	goto	l7286
 10915  016C                     l7284:	
 10916  016C  3008               	movlw	8
 10917  016D  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10918  016E  2970               	goto	l7288
 10919  016F                     l7286:	
 10920  016F  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10921  0170                     l7288:	
 10922                           
 10923                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10924                           
 10925                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10926                           
 10927                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10928                           
 10929                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10930                           
 10931                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10932  0170  23F3  120A  118A   	fcall	PL38	;call to abstracted procedure
 10933                           
 10934                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10935  0173  237B  120A  118A   	fcall	_I2C_Master_Start
 10936                           
 10937                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10938  0176  242C  120A  118A   	fcall	PL76	;call to abstracted procedure
 10939  0179  2373  120A  118A   	fcall	_I2C_Master_Write
 10940                           
 10941                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10942  017C  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10943  017D  00A0               	movwf	I2C_Master_Write@d
 10944  017E  01A1               	clrf	I2C_Master_Write@d+1
 10945  017F  2373  120A  118A   	fcall	_I2C_Master_Write
 10946                           
 10947                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10948  0182  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10949  0183  00A0               	movwf	I2C_Master_Write@d
 10950  0184  01A1               	clrf	I2C_Master_Write@d+1
 10951  0185  2373  120A  118A   	fcall	_I2C_Master_Write
 10952                           
 10953                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10954  0188  23E0  120A  118A   	fcall	_I2C_Master_RepeatedStart
 10955                           
 10956                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 10957  018B  1283               	bcf	3,5	;RP0=0, select bank0
 10958  018C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10959  018D  00A0               	movwf	I2C_Master_Write@d
 10960  018E  01A1               	clrf	I2C_Master_Write@d+1
 10961  018F  2373  120A  118A   	fcall	_I2C_Master_Write
 10962                           
 10963                           ;EEPROM_24C1025.c: 247:              }
 10964  0192  29AB               	goto	l7318
 10965  0193                     l7310:	
 10966                           
 10967                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
 10968  0193  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10969  0194  0084               	movwf	4
 10970  0195  01A0               	clrf	I2C_Master_Read@a
 10971  0196  0AA0               	incf	I2C_Master_Read@a,f
 10972  0197  01A1               	clrf	I2C_Master_Read@a+1
 10973  0198  2386  120A  118A   	fcall	_I2C_Master_Read
 10974  019B  0820               	movf	?_I2C_Master_Read,w
 10975  019C  1783               	bsf	3,7	;select IRP bank2
 10976  019D  0080               	movwf	0
 10977                           
 10978                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
 10979  019E  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10980  019F  0084               	movwf	4
 10981  01A0  0800               	movf	0,w
 10982  01A1  1903               	btfsc	3,2
 10983  01A2  29B2               	goto	l7320
 10984                           
 10985                           ;EEPROM_24C1025.c: 252:              texto++;
 10986  01A3  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
 10987                           
 10988                           ;EEPROM_24C1025.c: 253:              mem_add++;
 10989  01A4  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10990  01A5  1903               	skipnz
 10991  01A6  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10992  01A7  1903               	skipnz
 10993  01A8  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10994  01A9  1903               	skipnz
 10995  01AA  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10996  01AB                     l7318:	
 10997                           
 10998                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 10999  01AB  0830               	movf	EEPROM_24C1025_Read_Str@cnt,w
 11000  01AC  0AB0               	incf	EEPROM_24C1025_Read_Str@cnt,f
 11001  01AD  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11002  01AE  3040               	movlw	64
 11003  01AF  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
 11004  01B0  1C03               	skipc
 11005  01B1  292B               	goto	l69
 11006  01B2                     l7320:	
 11007                           
 11008                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 11009  01B2  01A0               	clrf	I2C_Master_Read@a
 11010  01B3  01A1               	clrf	I2C_Master_Read@a+1
 11011  01B4  2386  120A  118A   	fcall	_I2C_Master_Read
 11012                           
 11013                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 11014  01B7  2383  120A  118A   	fcall	_I2C_Master_Stop
 11015                           
 11016                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11017  01BA  30B9               	movlw	185
 11018  01BB  1283               	bcf	3,5	;RP0=0, select bank0
 11019  01BC  1303               	bcf	3,6	;RP1=0, select bank0
 11020  01BD  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11021  01BE                     u7707:	
 11022  01BE  29BF               	nop2
 11023  01BF  29C0               	nop2
 11024  01C0  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11025  01C1  29BE               	goto	u7707
 11026  01C2  29C3               	nop2
 11027  01C3  0008               	return
 11028  01C4                     __end_of_EEPROM_24C1025_Read_Str:	
 11029  01C4                     __ptext52:	
 11030 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11031 ;; Defined at:
 11032 ;;		line 77 in file "EEPROM_24C1025.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  chip_add        1    wreg     unsigned char 
 11035 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11036 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11037 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11038 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11041 ;;  cnt             1   18[BANK0 ] unsigned char 
 11042 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11043 ;;  range           1   20[BANK0 ] unsigned char 
 11044 ;;  cnt             1    0        unsigned char 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      void 
 11047 ;; Registers used:
 11048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/300
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11054 ;;      Params:         0       7       0       0       0
 11055 ;;      Locals:         0       4       0       0       0
 11056 ;;      Temps:          0       1       0       0       0
 11057 ;;      Totals:         0      12       0       0       0
 11058 ;;Total ram usage:       12 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    3
 11061 ;; This function calls:
 11062 ;;		_I2C_Master_Read
 11063 ;;		_I2C_Master_RepeatedStart
 11064 ;;		_I2C_Master_Start
 11065 ;;		_I2C_Master_Stop
 11066 ;;		_I2C_Master_Write
 11067 ;;		_my_delay_ms_WDT
 11068 ;; This function is called by:
 11069 ;;		_EEPROM_24C1025_Read_Byte
 11070 ;;		_EEPROM_24C1025_Read_Int
 11071 ;;		_Decodify_Command
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           
 11076                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11077  01C4                     _EEPROM_24C1025_Read_Buffer:	
 11078                           
 11079                           ;incstack = 0
 11080                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11081                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11082  01C4  1283               	bcf	3,5	;RP0=0, select bank0
 11083  01C5  1303               	bcf	3,6	;RP1=0, select bank0
 11084  01C6  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11085                           
 11086                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11087                           
 11088                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11089  01C7  2410  120A  118A   	fcall	PL50	;call to abstracted procedure
 11090  01CA  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11091  01CB  1D03               	btfss	3,2
 11092  01CC  0008               	return
 11093  01CD  3002               	movlw	2
 11094  01CE  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11095  01CF  1D03               	skipz
 11096  01D0  29D7               	goto	u6333
 11097  01D1  3000               	movlw	0
 11098  01D2  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11099  01D3  1D03               	skipz
 11100  01D4  29D7               	goto	u6333
 11101  01D5  3000               	movlw	0
 11102  01D6  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11103  01D7                     u6333:	
 11104  01D7  1803               	btfsc	3,0
 11105  01D8  0008               	return
 11106                           
 11107                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11108  01D9  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11109  01DA  1D03               	btfss	3,2
 11110  01DB  29E8               	goto	l6708
 11111  01DC  3001               	movlw	1
 11112  01DD  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11113  01DE  1D03               	skipz
 11114  01DF  29E6               	goto	u6343
 11115  01E0  3000               	movlw	0
 11116  01E1  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11117  01E2  1D03               	skipz
 11118  01E3  29E6               	goto	u6343
 11119  01E4  3000               	movlw	0
 11120  01E5  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11121  01E6                     u6343:	
 11122  01E6  1C03               	btfss	3,0
 11123  01E7  29EB               	goto	l6710
 11124  01E8                     l6708:	
 11125  01E8  3008               	movlw	8
 11126  01E9  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11127  01EA  29EC               	goto	l6712
 11128  01EB                     l6710:	
 11129  01EB  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11130  01EC                     l6712:	
 11131                           
 11132                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11133                           
 11134                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11135                           
 11136                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11137                           
 11138                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11139                           
 11140                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11141  01EC  23FD  120A  118A   	fcall	PL40	;call to abstracted procedure
 11142                           
 11143                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11144  01EF  237B  120A  118A   	fcall	_I2C_Master_Start
 11145                           
 11146                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11147  01F2  2426  120A  118A   	fcall	PL72	;call to abstracted procedure
 11148  01F5  2373  120A  118A   	fcall	_I2C_Master_Write
 11149                           
 11150                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11151  01F8  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11152  01F9  00A0               	movwf	I2C_Master_Write@d
 11153  01FA  01A1               	clrf	I2C_Master_Write@d+1
 11154  01FB  2373  120A  118A   	fcall	_I2C_Master_Write
 11155                           
 11156                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11157  01FE  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11158  01FF  00A0               	movwf	I2C_Master_Write@d
 11159  0200  01A1               	clrf	I2C_Master_Write@d+1
 11160  0201  2373  120A  118A   	fcall	_I2C_Master_Write
 11161                           
 11162                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11163  0204  23E0  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11164                           
 11165                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11166  0207  1283               	bcf	3,5	;RP0=0, select bank0
 11167  0208  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11168  0209  00A0               	movwf	I2C_Master_Write@d
 11169  020A  01A1               	clrf	I2C_Master_Write@d+1
 11170  020B  2373  120A  118A   	fcall	_I2C_Master_Write
 11171                           
 11172                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11173  020E  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 11174  020F                     l6788:	
 11175  020F  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11176  0210  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 11177  0211  1803               	btfsc	3,0
 11178  0212  2A92               	goto	l6790
 11179  0213  0064               	clrwdt	;# 
 11180                           
 11181                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11182  0214  1283               	bcf	3,5	;RP0=0, select bank0
 11183  0215  1303               	bcf	3,6	;RP1=0, select bank0
 11184  0216  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11185  0217  1D03               	btfss	3,2
 11186  0218  2A92               	goto	l6790
 11187  0219  3002               	movlw	2
 11188  021A  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11189  021B  1D03               	skipz
 11190  021C  2A23               	goto	u6353
 11191  021D  3000               	movlw	0
 11192  021E  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11193  021F  1D03               	skipz
 11194  0220  2A23               	goto	u6353
 11195  0221  3000               	movlw	0
 11196  0222  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11197  0223                     u6353:	
 11198  0223  1803               	btfsc	3,0
 11199  0224  2A92               	goto	l6790
 11200                           
 11201                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11202  0225  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11203  0226  3E01               	addlw	1
 11204  0227  397F               	andlw	127
 11205  0228  1D03               	btfss	3,2
 11206  0229  2A7C               	goto	l6780
 11207                           
 11208                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11209  022A  241F  120A  118A   	fcall	PL58	;call to abstracted procedure
 11210  022D  01A1               	clrf	I2C_Master_Read@a+1
 11211  022E  2386  120A  118A   	fcall	_I2C_Master_Read
 11212  0231  0820               	movf	?_I2C_Master_Read,w
 11213  0232  0080               	movwf	0
 11214                           
 11215                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11216  0233  2383  120A  118A   	fcall	_I2C_Master_Stop
 11217                           
 11218                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11219  0236  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 11220  0239  23AA  120A  118A   	fcall	_my_delay_ms_WDT
 11221                           
 11222                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11223  023C  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11224  023D  1903               	skipnz
 11225  023E  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11226  023F  1903               	skipnz
 11227  0240  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11228  0241  1903               	skipnz
 11229  0242  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11230                           
 11231                           ;EEPROM_24C1025.c: 115:              data++;
 11232  0243  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11233  0244  1903               	skipnz
 11234  0245  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11235                           
 11236                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11237  0246  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11238  0247  1D03               	btfss	3,2
 11239  0248  2A55               	goto	l6754
 11240  0249  3001               	movlw	1
 11241  024A  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11242  024B  1D03               	skipz
 11243  024C  2A53               	goto	u6373
 11244  024D  3000               	movlw	0
 11245  024E  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11246  024F  1D03               	skipz
 11247  0250  2A53               	goto	u6373
 11248  0251  3000               	movlw	0
 11249  0252  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11250  0253                     u6373:	
 11251  0253  1C03               	btfss	3,0
 11252  0254  2A58               	goto	l6756
 11253  0255                     l6754:	
 11254  0255  3008               	movlw	8
 11255  0256  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11256  0257  2A59               	goto	l6758
 11257  0258                     l6756:	
 11258  0258  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11259  0259                     l6758:	
 11260                           
 11261                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11262                           
 11263                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11264                           
 11265                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11266                           
 11267                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11268                           
 11269                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11270  0259  23FD  120A  118A   	fcall	PL40	;call to abstracted procedure
 11271                           
 11272                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11273  025C  237B  120A  118A   	fcall	_I2C_Master_Start
 11274                           
 11275                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11276  025F  2426  120A  118A   	fcall	PL72	;call to abstracted procedure
 11277  0262  2373  120A  118A   	fcall	_I2C_Master_Write
 11278                           
 11279                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11280  0265  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11281  0266  00A0               	movwf	I2C_Master_Write@d
 11282  0267  01A1               	clrf	I2C_Master_Write@d+1
 11283  0268  2373  120A  118A   	fcall	_I2C_Master_Write
 11284                           
 11285                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11286  026B  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11287  026C  00A0               	movwf	I2C_Master_Write@d
 11288  026D  01A1               	clrf	I2C_Master_Write@d+1
 11289  026E  2373  120A  118A   	fcall	_I2C_Master_Write
 11290                           
 11291                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11292  0271  23E0  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11293                           
 11294                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11295  0274  1283               	bcf	3,5	;RP0=0, select bank0
 11296  0275  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11297  0276  00A0               	movwf	I2C_Master_Write@d
 11298  0277  01A1               	clrf	I2C_Master_Write@d+1
 11299  0278  2373  120A  118A   	fcall	_I2C_Master_Write
 11300                           
 11301                           ;EEPROM_24C1025.c: 129:              }
 11302  027B  2A90               	goto	l6786
 11303  027C                     l6780:	
 11304                           
 11305                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11306  027C  241F  120A  118A   	fcall	PL58	;call to abstracted procedure
 11307  027F  0AA0               	incf	I2C_Master_Read@a,f
 11308  0280  01A1               	clrf	I2C_Master_Read@a+1
 11309  0281  2386  120A  118A   	fcall	_I2C_Master_Read
 11310  0284  0820               	movf	?_I2C_Master_Read,w
 11311  0285  0080               	movwf	0
 11312                           
 11313                           ;EEPROM_24C1025.c: 133:              data++;
 11314  0286  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11315  0287  1903               	skipnz
 11316  0288  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11317                           
 11318                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11319  0289  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11320  028A  1903               	skipnz
 11321  028B  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11322  028C  1903               	skipnz
 11323  028D  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11324  028E  1903               	skipnz
 11325  028F  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11326  0290                     l6786:	
 11327                           
 11328                           ;EEPROM_24C1025.c: 136:         }
 11329  0290  0AB2               	incf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 11330  0291  2A0F               	goto	l6788
 11331  0292                     l6790:	
 11332                           
 11333                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11334  0292  01A0               	clrf	I2C_Master_Read@a
 11335  0293  01A1               	clrf	I2C_Master_Read@a+1
 11336  0294  2386  120A  118A   	fcall	_I2C_Master_Read
 11337                           
 11338                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11339  0297  2383  120A  118A   	fcall	_I2C_Master_Stop
 11340                           
 11341                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11342  029A  30B9               	movlw	185
 11343  029B  1283               	bcf	3,5	;RP0=0, select bank0
 11344  029C  1303               	bcf	3,6	;RP1=0, select bank0
 11345  029D  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11346  029E                     u7717:	
 11347  029E  2A9F               	nop2
 11348  029F  2AA0               	nop2
 11349  02A0  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11350  02A1  2A9E               	goto	u7717
 11351  02A2  2AA3               	nop2
 11352  02A3  0008               	return
 11353  02A4                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11354  02A4                     __ptext57:	
 11355 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11356 ;; Defined at:
 11357 ;;		line 14 in file "EEPROM_24C1025.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  chip_add        1    wreg     unsigned char 
 11360 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11361 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11362 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11363 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11366 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11367 ;;  range           1   21[BANK0 ] unsigned char 
 11368 ;;  count           1   19[BANK0 ] unsigned char 
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/300
 11375 ;;		On exit  : 300/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11378 ;;      Params:         0       7       0       0       0
 11379 ;;      Locals:         0       4       0       0       0
 11380 ;;      Temps:          0       2       0       0       0
 11381 ;;      Totals:         0      13       0       0       0
 11382 ;;Total ram usage:       13 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:    3
 11385 ;; This function calls:
 11386 ;;		_I2C_Master_Start
 11387 ;;		_I2C_Master_Stop
 11388 ;;		_I2C_Master_Write
 11389 ;;		_my_delay_ms_WDT
 11390 ;; This function is called by:
 11391 ;;		_EEPROM_24C1025_Write_Byte
 11392 ;;		_EEPROM_24C1025_Write_Int
 11393 ;;		_Decodify_Command
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           
 11398                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11399  02A4                     _EEPROM_24C1025_Write_Buffer:	
 11400                           
 11401                           ;incstack = 0
 11402                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11403                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11404  02A4  1283               	bcf	3,5	;RP0=0, select bank0
 11405  02A5  1303               	bcf	3,6	;RP1=0, select bank0
 11406  02A6  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11407                           
 11408                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
 11409                           
 11410                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
 11411  02A7  2410  120A  118A   	fcall	PL50	;call to abstracted procedure
 11412  02AA  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11413  02AB  1D03               	btfss	3,2
 11414  02AC  0008               	return
 11415  02AD  3002               	movlw	2
 11416  02AE  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11417  02AF  1D03               	skipz
 11418  02B0  2AB7               	goto	u5943
 11419  02B1  3000               	movlw	0
 11420  02B2  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11421  02B3  1D03               	skipz
 11422  02B4  2AB7               	goto	u5943
 11423  02B5  3000               	movlw	0
 11424  02B6  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11425  02B7                     u5943:	
 11426  02B7  1803               	btfsc	3,0
 11427  02B8  0008               	return
 11428                           
 11429                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11430  02B9  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11431  02BA  1D03               	btfss	3,2
 11432  02BB  2AC8               	goto	l6440
 11433  02BC  3001               	movlw	1
 11434  02BD  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11435  02BE  1D03               	skipz
 11436  02BF  2AC6               	goto	u5953
 11437  02C0  3000               	movlw	0
 11438  02C1  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11439  02C2  1D03               	skipz
 11440  02C3  2AC6               	goto	u5953
 11441  02C4  3000               	movlw	0
 11442  02C5  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11443  02C6                     u5953:	
 11444  02C6  1C03               	btfss	3,0
 11445  02C7  2ACB               	goto	l6442
 11446  02C8                     l6440:	
 11447  02C8  3008               	movlw	8
 11448  02C9  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11449  02CA  2ACC               	goto	l6444
 11450  02CB                     l6442:	
 11451  02CB  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11452  02CC                     l6444:	
 11453                           
 11454                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
 11455                           
 11456                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
 11457                           
 11458                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
 11459                           
 11460                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
 11461  02CC  2407  120A  118A   	fcall	PL46	;call to abstracted procedure
 11462                           
 11463                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
 11464  02CF  237B  120A  118A   	fcall	_I2C_Master_Start
 11465                           
 11466                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
 11467  02D2  1283               	bcf	3,5	;RP0=0, select bank0
 11468  02D3  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11469  02D4  00A0               	movwf	I2C_Master_Write@d
 11470  02D5  01A1               	clrf	I2C_Master_Write@d+1
 11471  02D6  2373  120A  118A   	fcall	_I2C_Master_Write
 11472                           
 11473                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
 11474  02D9  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11475  02DA  00A0               	movwf	I2C_Master_Write@d
 11476  02DB  01A1               	clrf	I2C_Master_Write@d+1
 11477  02DC  2373  120A  118A   	fcall	_I2C_Master_Write
 11478                           
 11479                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
 11480  02DF  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11481  02E0  00A0               	movwf	I2C_Master_Write@d
 11482  02E1  01A1               	clrf	I2C_Master_Write@d+1
 11483  02E2  2373  120A  118A   	fcall	_I2C_Master_Write
 11484                           
 11485                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
 11486  02E5  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11487  02E6                     l6508:	
 11488  02E6  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11489  02E7  3EFF               	addlw	255
 11490  02E8  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11491  02E9  30FF               	movlw	255
 11492  02EA  1803               	skipnc
 11493  02EB  3000               	movlw	0
 11494  02EC  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11495  02ED  3A80               	xorlw	128
 11496  02EE  3C80               	sublw	128
 11497  02EF  1D03               	skipz
 11498  02F0  2AF3               	goto	u5995
 11499  02F1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11500  02F2  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11501  02F3                     u5995:	
 11502  02F3  1803               	btfsc	3,0
 11503  02F4  2B64               	goto	l6510
 11504  02F5  0064               	clrwdt	;# 
 11505                           
 11506                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
 11507  02F6  1283               	bcf	3,5	;RP0=0, select bank0
 11508  02F7  1303               	bcf	3,6	;RP1=0, select bank0
 11509  02F8  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11510  02F9  1D03               	btfss	3,2
 11511  02FA  0008               	return
 11512  02FB  3002               	movlw	2
 11513  02FC  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11514  02FD  1D03               	skipz
 11515  02FE  2B05               	goto	u5963
 11516  02FF  3000               	movlw	0
 11517  0300  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11518  0301  1D03               	skipz
 11519  0302  2B05               	goto	u5963
 11520  0303  3000               	movlw	0
 11521  0304  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11522  0305                     u5963:	
 11523  0305  1803               	btfsc	3,0
 11524  0306  0008               	return
 11525                           
 11526                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
 11527  0307  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11528  0308  3E01               	addlw	1
 11529  0309  397F               	andlw	127
 11530  030A  1D03               	btfss	3,2
 11531  030B  2B52               	goto	l6500
 11532                           
 11533                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
 11534  030C  23EA  120A  118A   	fcall	PL28	;call to abstracted procedure
 11535  030F  2373  120A  118A   	fcall	_I2C_Master_Write
 11536                           
 11537                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
 11538  0312  2383  120A  118A   	fcall	_I2C_Master_Stop
 11539                           
 11540                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
 11541  0315  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 11542  0318  23AA  120A  118A   	fcall	_my_delay_ms_WDT
 11543                           
 11544                           ;EEPROM_24C1025.c: 47:             mem_add++;
 11545  031B  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11546  031C  1903               	skipnz
 11547  031D  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11548  031E  1903               	skipnz
 11549  031F  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11550  0320  1903               	skipnz
 11551  0321  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11552                           
 11553                           ;EEPROM_24C1025.c: 48:             data++;
 11554  0322  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11555  0323  1903               	skipnz
 11556  0324  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11557                           
 11558                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11559  0325  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11560  0326  1D03               	btfss	3,2
 11561  0327  2B34               	goto	l6480
 11562  0328  3001               	movlw	1
 11563  0329  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11564  032A  1D03               	skipz
 11565  032B  2B32               	goto	u5983
 11566  032C  3000               	movlw	0
 11567  032D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11568  032E  1D03               	skipz
 11569  032F  2B32               	goto	u5983
 11570  0330  3000               	movlw	0
 11571  0331  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11572  0332                     u5983:	
 11573  0332  1C03               	btfss	3,0
 11574  0333  2B37               	goto	l6482
 11575  0334                     l6480:	
 11576  0334  3008               	movlw	8
 11577  0335  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11578  0336  2B38               	goto	l6484
 11579  0337                     l6482:	
 11580  0337  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11581  0338                     l6484:	
 11582                           
 11583                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
 11584                           
 11585                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
 11586                           
 11587                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
 11588                           
 11589                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
 11590  0338  2407  120A  118A   	fcall	PL46	;call to abstracted procedure
 11591                           
 11592                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
 11593  033B  237B  120A  118A   	fcall	_I2C_Master_Start
 11594                           
 11595                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
 11596  033E  1283               	bcf	3,5	;RP0=0, select bank0
 11597  033F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11598  0340  00A0               	movwf	I2C_Master_Write@d
 11599  0341  01A1               	clrf	I2C_Master_Write@d+1
 11600  0342  2373  120A  118A   	fcall	_I2C_Master_Write
 11601                           
 11602                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
 11603  0345  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11604  0346  00A0               	movwf	I2C_Master_Write@d
 11605  0347  01A1               	clrf	I2C_Master_Write@d+1
 11606  0348  2373  120A  118A   	fcall	_I2C_Master_Write
 11607                           
 11608                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
 11609  034B  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11610  034C  00A0               	movwf	I2C_Master_Write@d
 11611  034D  01A1               	clrf	I2C_Master_Write@d+1
 11612  034E  2373  120A  118A   	fcall	_I2C_Master_Write
 11613                           
 11614                           ;EEPROM_24C1025.c: 59:             }
 11615  0351  2B62               	goto	l6506
 11616  0352                     l6500:	
 11617                           
 11618                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
 11619  0352  23EA  120A  118A   	fcall	PL28	;call to abstracted procedure
 11620  0355  2373  120A  118A   	fcall	_I2C_Master_Write
 11621                           
 11622                           ;EEPROM_24C1025.c: 63:             data++;
 11623  0358  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11624  0359  1903               	skipnz
 11625  035A  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11626                           
 11627                           ;EEPROM_24C1025.c: 64:             mem_add++;
 11628  035B  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11629  035C  1903               	skipnz
 11630  035D  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11631  035E  1903               	skipnz
 11632  035F  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11633  0360  1903               	skipnz
 11634  0361  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11635  0362                     l6506:	
 11636                           
 11637                           ;EEPROM_24C1025.c: 66:      }
 11638  0362  0AB3               	incf	EEPROM_24C1025_Write_Buffer@count,f
 11639  0363  2AE6               	goto	l6508
 11640  0364                     l6510:	
 11641                           
 11642                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
 11643  0364  1283               	bcf	3,5	;RP0=0, select bank0
 11644  0365  1303               	bcf	3,6	;RP1=0, select bank0
 11645  0366  23EA  120A  118A   	fcall	PL28	;call to abstracted procedure
 11646  0369  2373  120A  118A   	fcall	_I2C_Master_Write
 11647                           
 11648                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
 11649  036C  2383  120A  118A   	fcall	_I2C_Master_Stop
 11650                           
 11651                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
 11652  036F  23E3  120A  118A   	fcall	PL24	;call to abstracted procedure
 11653  0372  2BAA               	ljmp	l6096
 11654  0373                     __end_of_EEPROM_24C1025_Write_Buffer:	
 11655  0373                     __ptext59:	
 11656 ;; *************** function _I2C_Master_Write *****************
 11657 ;; Defined at:
 11658 ;;		line 64 in file "I2C.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;  d               2    0[BANK0 ] unsigned int 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0, pclath, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 300/0
 11669 ;;		On exit  : 300/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11672 ;;      Params:         0       2       0       0       0
 11673 ;;      Locals:         0       0       0       0       0
 11674 ;;      Temps:          0       0       0       0       0
 11675 ;;      Totals:         0       2       0       0       0
 11676 ;;Total ram usage:        2 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    2
 11679 ;; This function calls:
 11680 ;;		_I2C_Master_Wait
 11681 ;; This function is called by:
 11682 ;;		_EEPROM_24C1025_Write_Buffer
 11683 ;;		_EEPROM_24C1025_Read_Buffer
 11684 ;;		_EEPROM_24C1025_Write_Str
 11685 ;;		_EEPROM_24C1025_Read_Str
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           
 11690                           ;psect for function _I2C_Master_Write
 11691  0373                     _I2C_Master_Write:	
 11692                           
 11693                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11697  0373  1683               	bsf	3,5	;RP0=1, select bank3
 11698  0374  1703               	bsf	3,6	;RP1=1, select bank3
 11699  0375  17BC               	bsf	_generic_status^(0+384),7
 11700                           
 11701                           ;I2C.c: 67:   I2C_Master_Wait();
 11702  0376  23D7               	fcall	_I2C_Master_Wait
 11703                           
 11704                           ;I2C.c: 68:   SSPBUF = d;
 11705  0377  1283               	bcf	3,5	;RP0=0, select bank0
 11706  0378  0820               	movf	I2C_Master_Write@d,w
 11707  0379  0093               	movwf	19	;volatile
 11708  037A  0008               	return
 11709  037B                     __end_of_I2C_Master_Write:	
 11710  037B                     __ptext61:	
 11711 ;; *************** function _I2C_Master_Start *****************
 11712 ;; Defined at:
 11713 ;;		line 45 in file "I2C.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;		None
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;		None
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      void 
 11720 ;; Registers used:
 11721 ;;		wreg, status,2, status,0, pclath, cstack
 11722 ;; Tracked objects:
 11723 ;;		On entry : 300/0
 11724 ;;		On exit  : 300/100
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11727 ;;      Params:         0       0       0       0       0
 11728 ;;      Locals:         0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0
 11730 ;;      Totals:         0       0       0       0       0
 11731 ;;Total ram usage:        0 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    2
 11734 ;; This function calls:
 11735 ;;		_I2C_Master_Wait
 11736 ;; This function is called by:
 11737 ;;		_EEPROM_24C1025_Write_Buffer
 11738 ;;		_EEPROM_24C1025_Read_Buffer
 11739 ;;		_EEPROM_24C1025_Write_Str
 11740 ;;		_EEPROM_24C1025_Read_Str
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           
 11745                           ;psect for function _I2C_Master_Start
 11746  037B                     _I2C_Master_Start:	
 11747                           
 11748                           ;I2C.c: 47:   Delay_Led_Memory=20;
 11749                           
 11750                           ;incstack = 0
 11751                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11752  037B  3014               	movlw	20
 11753  037C  1683               	bsf	3,5	;RP0=1, select bank3
 11754  037D  1703               	bsf	3,6	;RP1=1, select bank3
 11755  037E  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11756  037F  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11757                           
 11758                           ;I2C.c: 48:   I2C_Master_Wait();
 11759  0380  23D7               	fcall	_I2C_Master_Wait
 11760                           
 11761                           ;I2C.c: 49:   SEN = 1;
 11762  0381  1411               	bsf	17,0	;volatile
 11763  0382  0008               	return
 11764  0383                     __end_of_I2C_Master_Start:	
 11765  0383                     __ptext60:	
 11766 ;; *************** function _I2C_Master_Stop *****************
 11767 ;; Defined at:
 11768 ;;		line 58 in file "I2C.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 300/800
 11779 ;;		On exit  : 300/100
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11782 ;;      Params:         0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0
 11785 ;;      Totals:         0       0       0       0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    2
 11789 ;; This function calls:
 11790 ;;		_I2C_Master_Wait
 11791 ;; This function is called by:
 11792 ;;		_EEPROM_24C1025_Write_Buffer
 11793 ;;		_EEPROM_24C1025_Read_Buffer
 11794 ;;		_EEPROM_24C1025_Write_Str
 11795 ;;		_EEPROM_24C1025_Read_Str
 11796 ;; This function uses a non-reentrant model
 11797 ;;
 11798                           
 11799                           
 11800                           ;psect for function _I2C_Master_Stop
 11801  0383                     _I2C_Master_Stop:	
 11802                           
 11803                           ;I2C.c: 60:   I2C_Master_Wait();
 11804                           
 11805                           ;incstack = 0
 11806                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11807  0383  23D7               	fcall	_I2C_Master_Wait
 11808                           
 11809                           ;I2C.c: 61:   PEN = 1;
 11810  0384  1511               	bsf	17,2	;volatile
 11811  0385  0008               	return
 11812  0386                     __end_of_I2C_Master_Stop:	
 11813  0386                     __ptext54:	
 11814 ;; *************** function _I2C_Master_Read *****************
 11815 ;; Defined at:
 11816 ;;		line 71 in file "I2C.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  a               2    0[BANK0 ] unsigned short 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;  temp            2    2[BANK0 ] unsigned short 
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  2    0[BANK0 ] unsigned short 
 11823 ;; Registers used:
 11824 ;;		wreg, status,2, status,0, pclath, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 300/0
 11827 ;;		On exit  : 300/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11830 ;;      Params:         0       2       0       0       0
 11831 ;;      Locals:         0       2       0       0       0
 11832 ;;      Temps:          0       0       0       0       0
 11833 ;;      Totals:         0       4       0       0       0
 11834 ;;Total ram usage:        4 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    2
 11837 ;; This function calls:
 11838 ;;		_I2C_Master_Wait
 11839 ;; This function is called by:
 11840 ;;		_EEPROM_24C1025_Read_Buffer
 11841 ;;		_EEPROM_24C1025_Read_Str
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           
 11846                           ;psect for function _I2C_Master_Read
 11847  0386                     _I2C_Master_Read:	
 11848                           
 11849                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 11850                           
 11851                           ;incstack = 0
 11852                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11853  0386  1683               	bsf	3,5	;RP0=1, select bank3
 11854  0387  1703               	bsf	3,6	;RP1=1, select bank3
 11855  0388  17BC               	bsf	_generic_status^(0+384),7
 11856                           
 11857                           ;I2C.c: 75:   I2C_Master_Wait();
 11858  0389  23D7  120A  118A   	fcall	_I2C_Master_Wait
 11859                           
 11860                           ;I2C.c: 76:   RCEN = 1;
 11861  038C  1591               	bsf	17,3	;volatile
 11862                           
 11863                           ;I2C.c: 77:   I2C_Master_Wait();
 11864  038D  23D7  120A  118A   	fcall	_I2C_Master_Wait
 11865                           
 11866                           ;I2C.c: 78:   temp = SSPBUF;
 11867  0390  1283               	bcf	3,5	;RP0=0, select bank0
 11868  0391  0813               	movf	19,w	;volatile
 11869  0392  00A2               	movwf	I2C_Master_Read@temp
 11870  0393  01A3               	clrf	I2C_Master_Read@temp+1
 11871                           
 11872                           ;I2C.c: 79:   I2C_Master_Wait();
 11873  0394  23D7  120A  118A   	fcall	_I2C_Master_Wait
 11874                           
 11875                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 11876  0397  1283               	bcf	3,5	;RP0=0, select bank0
 11877  0398  0820               	movf	I2C_Master_Read@a,w
 11878  0399  0421               	iorwf	I2C_Master_Read@a+1,w
 11879  039A  1D03               	btfss	3,2
 11880  039B  2BA0               	goto	u6000
 11881  039C  1683               	bsf	3,5	;RP0=1, select bank1
 11882  039D  1303               	bcf	3,6	;RP1=0, select bank1
 11883  039E  1691               	bsf	17,5	;volatile
 11884  039F  2BA3               	goto	l6532
 11885  03A0                     u6000:	
 11886  03A0  1683               	bsf	3,5	;RP0=1, select bank1
 11887  03A1  1303               	bcf	3,6	;RP1=0, select bank1
 11888  03A2  1291               	bcf	17,5	;volatile
 11889  03A3                     l6532:	
 11890                           
 11891                           ;I2C.c: 81:   ACKEN = 1;
 11892  03A3  1611               	bsf	17,4	;volatile
 11893                           
 11894                           ;I2C.c: 82:   return temp;
 11895  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 11896  03A5  0823               	movf	I2C_Master_Read@temp+1,w
 11897  03A6  00A1               	movwf	?_I2C_Master_Read+1
 11898  03A7  0822               	movf	I2C_Master_Read@temp,w
 11899  03A8  00A0               	movwf	?_I2C_Master_Read
 11900  03A9  0008               	return
 11901  03AA                     __end_of_I2C_Master_Read:	
 11902  03AA                     __ptext58:	
 11903 ;; *************** function _my_delay_ms_WDT *****************
 11904 ;; Defined at:
 11905 ;;		line 13 in file "my_delay.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  time            4    0[BANK0 ] long 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  i               4    6[BANK0 ] long 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  1    wreg      void 
 11912 ;; Registers used:
 11913 ;;		wreg, status,2, status,0, btemp+1
 11914 ;; Tracked objects:
 11915 ;;		On entry : 300/0
 11916 ;;		On exit  : 300/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11919 ;;      Params:         0       4       0       0       0
 11920 ;;      Locals:         0       4       0       0       0
 11921 ;;      Temps:          0       2       0       0       0
 11922 ;;      Totals:         0      10       0       0       0
 11923 ;;Total ram usage:       10 bytes
 11924 ;; Hardware stack levels used:    1
 11925 ;; Hardware stack levels required when called:    1
 11926 ;; This function calls:
 11927 ;;		Nothing
 11928 ;; This function is called by:
 11929 ;;		_EEPROM_24C1025_Write_Buffer
 11930 ;;		_EEPROM_24C1025_Read_Buffer
 11931 ;;		_EEPROM_24C1025_Write_Str
 11932 ;;		_EEPROM_24C1025_Read_Str
 11933 ;;		_main
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           
 11938                           ;psect for function _my_delay_ms_WDT
 11939  03AA                     _my_delay_ms_WDT:	
 11940  03AA                     l6096:	
 11941                           ;incstack = 0
 11942                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
 11943                           
 11944                           
 11945                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 11946  03AA  01A6               	clrf	my_delay_ms_WDT@i
 11947  03AB  01A7               	clrf	my_delay_ms_WDT@i+1
 11948  03AC  01A8               	clrf	my_delay_ms_WDT@i+2
 11949  03AD  01A9               	clrf	my_delay_ms_WDT@i+3
 11950  03AE                     l6102:	
 11951  03AE  0829               	movf	my_delay_ms_WDT@i+3,w
 11952  03AF  3A80               	xorlw	128
 11953  03B0  00FF               	movwf	127
 11954  03B1  0823               	movf	my_delay_ms_WDT@time+3,w
 11955  03B2  3A80               	xorlw	128
 11956  03B3  027F               	subwf	127,w
 11957  03B4  1D03               	skipz
 11958  03B5  2BC0               	goto	u5233
 11959  03B6  0822               	movf	my_delay_ms_WDT@time+2,w
 11960  03B7  0228               	subwf	my_delay_ms_WDT@i+2,w
 11961  03B8  1D03               	skipz
 11962  03B9  2BC0               	goto	u5233
 11963  03BA  0821               	movf	my_delay_ms_WDT@time+1,w
 11964  03BB  0227               	subwf	my_delay_ms_WDT@i+1,w
 11965  03BC  1D03               	skipz
 11966  03BD  2BC0               	goto	u5233
 11967  03BE  0820               	movf	my_delay_ms_WDT@time,w
 11968  03BF  0226               	subwf	my_delay_ms_WDT@i,w
 11969  03C0                     u5233:	
 11970  03C0  1803               	btfsc	3,0
 11971  03C1  0008               	return
 11972  03C2  0064               	clrwdt	;# 
 11973                           
 11974                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 11975  03C3  3003               	movlw	3
 11976  03C4  1283               	bcf	3,5	;RP0=0, select bank0
 11977  03C5  1303               	bcf	3,6	;RP1=0, select bank0
 11978  03C6  00A5               	movwf	??_my_delay_ms_WDT+1
 11979  03C7  3097               	movlw	151
 11980  03C8  00A4               	movwf	??_my_delay_ms_WDT
 11981  03C9                     u7727:	
 11982  03C9  0BA4               	decfsz	??_my_delay_ms_WDT,f
 11983  03CA  2BC9               	goto	u7727
 11984  03CB  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 11985  03CC  2BC9               	goto	u7727
 11986                           
 11987                           ;my_delay.c: 19:             }
 11988  03CD  1283               	bcf	3,5	;RP0=0, select bank0
 11989  03CE  1303               	bcf	3,6	;RP1=0, select bank0
 11990  03CF  0AA6               	incf	my_delay_ms_WDT@i,f
 11991  03D0  1903               	skipnz
 11992  03D1  0AA7               	incf	my_delay_ms_WDT@i+1,f
 11993  03D2  1903               	skipnz
 11994  03D3  0AA8               	incf	my_delay_ms_WDT@i+2,f
 11995  03D4  1903               	skipnz
 11996  03D5  0AA9               	incf	my_delay_ms_WDT@i+3,f
 11997  03D6  2BAE               	goto	l6102
 11998  03D7                     __end_of_my_delay_ms_WDT:	
 11999  03D7                     __ptext62:	
 12000 ;; *************** function _I2C_Master_Wait *****************
 12001 ;; Defined at:
 12002 ;;		line 40 in file "I2C.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;		None
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;		None
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 300/100
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12016 ;;      Params:         0       0       0       0       0
 12017 ;;      Locals:         0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0
 12019 ;;      Totals:         0       0       0       0       0
 12020 ;;Total ram usage:        0 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    1
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_I2C_Master_Start
 12027 ;;		_I2C_Master_RepeatedStart
 12028 ;;		_I2C_Master_Stop
 12029 ;;		_I2C_Master_Write
 12030 ;;		_I2C_Master_Read
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _I2C_Master_Wait
 12036  03D7                     _I2C_Master_Wait:	
 12037  03D7                     l182:	
 12038                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 12039                           
 12040                           ;incstack = 0
 12041                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12042                           
 12043  03D7  1683               	bsf	3,5	;RP0=1, select bank1
 12044  03D8  1303               	bcf	3,6	;RP1=0, select bank1
 12045  03D9  1914               	btfsc	20,2	;volatile
 12046  03DA  2BD7               	goto	l182
 12047  03DB  0811               	movf	17,w	;volatile
 12048  03DC  391F               	andlw	31
 12049  03DD  1903               	btfsc	3,2
 12050  03DE  0008               	return
 12051  03DF  2BD7               	goto	l182
 12052  03E0                     __end_of_I2C_Master_Wait:	
 12053  03E0                     __ptext53:	
 12054 ;; *************** function _I2C_Master_RepeatedStart *****************
 12055 ;; Defined at:
 12056 ;;		line 52 in file "I2C.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;		None
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;		None
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, status,2, status,0, pclath, cstack
 12065 ;; Tracked objects:
 12066 ;;		On entry : 300/0
 12067 ;;		On exit  : 300/100
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12070 ;;      Params:         0       0       0       0       0
 12071 ;;      Locals:         0       0       0       0       0
 12072 ;;      Temps:          0       0       0       0       0
 12073 ;;      Totals:         0       0       0       0       0
 12074 ;;Total ram usage:        0 bytes
 12075 ;; Hardware stack levels used:    1
 12076 ;; Hardware stack levels required when called:    2
 12077 ;; This function calls:
 12078 ;;		_I2C_Master_Wait
 12079 ;; This function is called by:
 12080 ;;		_EEPROM_24C1025_Read_Buffer
 12081 ;;		_EEPROM_24C1025_Read_Str
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           
 12086                           ;psect for function _I2C_Master_RepeatedStart
 12087  03E0                     _I2C_Master_RepeatedStart:	
 12088                           
 12089                           ;I2C.c: 54:   I2C_Master_Wait();
 12090                           
 12091                           ;incstack = 0
 12092                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12093  03E0  23D7               	fcall	_I2C_Master_Wait
 12094                           
 12095                           ;I2C.c: 55:   RSEN = 1;
 12096  03E1  1491               	bsf	17,1	;volatile
 12097  03E2  0008               	return
 12098  03E3                     __end_of_I2C_Master_RepeatedStart:	
 12099  03E3                     PL24:	
 12100  03E3  3005               	movlw	5
 12101  03E4  1283               	bcf	3,5	;RP0=0, select bank0
 12102  03E5  00A0               	movwf	my_delay_ms_WDT@time
 12103  03E6  01A1               	clrf	my_delay_ms_WDT@time+1
 12104  03E7  01A2               	clrf	my_delay_ms_WDT@time+2
 12105  03E8  01A3               	clrf	my_delay_ms_WDT@time+3
 12106  03E9  0008               	return
 12107  03EA                     __end_ofPL24:	
 12108  03EA                     PL28:	
 12109  03EA  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12110  03EB  0084               	movwf	4
 12111  03EC  1783               	bsf	3,7
 12112  03ED  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12113  03EE  1383               	bcf	3,7
 12114  03EF  0800               	movf	0,w
 12115  03F0  00A0               	movwf	I2C_Master_Write@d
 12116  03F1  01A1               	clrf	I2C_Master_Write@d+1
 12117  03F2  0008               	return
 12118  03F3                     __end_ofPL28:	
 12119  03F3                     PL38:	
 12120  03F3  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 12121  03F4  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 12122  03F5  30A0               	movlw	160
 12123  03F6  1003               	clrc
 12124  03F7  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 12125  03F8  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12126  03F9  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 12127  03FA  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 12128  03FB  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12129  03FC  0008               	return
 12130  03FD                     __end_ofPL38:	
 12131  03FD                     PL40:	
 12132  03FD  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12133  03FE  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12134  03FF  30A0               	movlw	160
 12135  0400  1003               	clrc
 12136  0401  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12137  0402  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12138  0403  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12139  0404  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12140  0405  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12141  0406  0008               	return
 12142  0407                     __end_ofPL40:	
 12143  0407                     PL46:	
 12144  0407  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12145  0408  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12146  0409  30A0               	movlw	160
 12147  040A  1003               	clrc
 12148  040B  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12149  040C  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12150  040D  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12151  040E  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12152  040F  0008               	return
 12153  0410                     __end_ofPL46:	
 12154  0410                     PL50:	
 12155  0410  3014               	movlw	20
 12156  0411  1683               	bsf	3,5	;RP0=1, select bank3
 12157  0412  1703               	bsf	3,6	;RP1=1, select bank3
 12158  0413  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 12159  0414  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 12160  0415  1283               	bcf	3,5	;RP0=0, select bank0
 12161  0416  1303               	bcf	3,6	;RP1=0, select bank0
 12162  0417  0008               	return
 12163  0418                     __end_ofPL50:	
 12164  0418                     PL56:	
 12165  0418  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 12166  0419  0084               	movwf	4
 12167  041A  1783               	bsf	3,7	;select IRP bank2
 12168  041B  0800               	movf	0,w
 12169  041C  00A0               	movwf	I2C_Master_Write@d
 12170  041D  01A1               	clrf	I2C_Master_Write@d+1
 12171  041E  0008               	return
 12172  041F                     __end_ofPL56:	
 12173  041F                     PL58:	
 12174  041F  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12175  0420  0084               	movwf	4
 12176  0421  1783               	bsf	3,7
 12177  0422  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12178  0423  1383               	bcf	3,7
 12179  0424  01A0               	clrf	I2C_Master_Read@a
 12180  0425  0008               	return
 12181  0426                     __end_ofPL58:	
 12182  0426                     PL72:	
 12183  0426  1283               	bcf	3,5	;RP0=0, select bank0
 12184  0427  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12185  0428  39FE               	andlw	254
 12186  0429  00A0               	movwf	I2C_Master_Write@d
 12187  042A  01A1               	clrf	I2C_Master_Write@d+1
 12188  042B  0008               	return
 12189  042C                     __end_ofPL72:	
 12190  042C                     PL76:	
 12191  042C  1283               	bcf	3,5	;RP0=0, select bank0
 12192  042D  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 12193  042E  39FE               	andlw	254
 12194  042F  00A0               	movwf	I2C_Master_Write@d
 12195  0430  01A1               	clrf	I2C_Master_Write@d+1
 12196  0431  0008               	return
 12197  0432                     __end_ofPL76:	
 12198                           
 12199                           	psect	text51
 12200  07E7                     __ptext51:	
 12201 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12202 ;; Defined at:
 12203 ;;		line 273 in file "EEPROM_24C1025.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  chip_add        1    wreg     unsigned char 
 12206 ;;  mem_add         4   22[BANK0 ] unsigned long 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  chip_add        1   26[BANK0 ] unsigned char 
 12209 ;;  data            1   27[BANK0 ] unsigned char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      unsigned char 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 300/300
 12216 ;;		On exit  : 300/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12219 ;;      Params:         0       4       0       0       0
 12220 ;;      Locals:         0       2       0       0       0
 12221 ;;      Temps:          0       0       0       0       0
 12222 ;;      Totals:         0       6       0       0       0
 12223 ;;Total ram usage:        6 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    4
 12226 ;; This function calls:
 12227 ;;		_EEPROM_24C1025_Read_Buffer
 12228 ;; This function is called by:
 12229 ;;		_Decodify_Command
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           
 12234                           ;psect for function _EEPROM_24C1025_Read_Byte
 12235  07E7                     _EEPROM_24C1025_Read_Byte:	
 12236                           
 12237                           ;incstack = 0
 12238                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12239                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12240  07E7  1283               	bcf	3,5	;RP0=0, select bank0
 12241  07E8  1303               	bcf	3,6	;RP1=0, select bank0
 12242  07E9  00BA               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12243                           
 12244                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 12245  07EA  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12246  07EB  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12247  07EC  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12248  07ED  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12249  07EE  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12250  07EF  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12251  07F0  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12252  07F1  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12253  07F2  303B               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 12254  07F3  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12255  07F4  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12256  07F5  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 12257  07F6  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 12258  07F7  083A               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12259  07F8  120A  118A  21C4   	fcall	_EEPROM_24C1025_Read_Buffer
 12260                           
 12261                           ;EEPROM_24C1025.c: 276:     return data;
 12262  07FB  1283               	bcf	3,5	;RP0=0, select bank0
 12263  07FC  1303               	bcf	3,6	;RP1=0, select bank0
 12264  07FD  083B               	movf	EEPROM_24C1025_Read_Byte@data,w
 12265  07FE  0008               	return
 12266  07FF                     __end_of_EEPROM_24C1025_Read_Byte:	
 12267                           
 12268                           	psect	text55
 12269  05D5                     __ptext55:	
 12270 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12271 ;; Defined at:
 12272 ;;		line 294 in file "EEPROM_24C1025.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  chip_add        1    wreg     unsigned char 
 12275 ;;  value           2   32[BANK0 ] unsigned int 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  chip_add        1   34[BANK0 ] unsigned char 
 12278 ;;  mem_add         4   35[BANK0 ] unsigned long 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      void 
 12281 ;; Registers used:
 12282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 300/300
 12285 ;;		On exit  : 300/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12288 ;;      Params:         0       2       0       0       0
 12289 ;;      Locals:         0       5       0       0       0
 12290 ;;      Temps:          0       0       0       0       0
 12291 ;;      Totals:         0       7       0       0       0
 12292 ;;Total ram usage:        7 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    5
 12295 ;; This function calls:
 12296 ;;		_EEPROM_24C1025_Write_Int
 12297 ;; This function is called by:
 12298 ;;		_Decodify_Command
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           
 12303                           ;psect for function _EEPROM_24C1025_Fill_All
 12304  05D5                     _EEPROM_24C1025_Fill_All:	
 12305                           
 12306                           ;incstack = 0
 12307                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12308                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12309  05D5  1283               	bcf	3,5	;RP0=0, select bank0
 12310  05D6  1303               	bcf	3,6	;RP1=0, select bank0
 12311  05D7  00C2               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12312                           
 12313                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12314  05D8  01C3               	clrf	EEPROM_24C1025_Fill_All@mem_add
 12315  05D9  01C4               	clrf	EEPROM_24C1025_Fill_All@mem_add+1
 12316  05DA  01C5               	clrf	EEPROM_24C1025_Fill_All@mem_add+2
 12317  05DB  01C6               	clrf	EEPROM_24C1025_Fill_All@mem_add+3
 12318  05DC                     l7344:	
 12319                           
 12320                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12321  05DC  0846               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12322  05DD  00BA               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12323  05DE  0845               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12324  05DF  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12325  05E0  0844               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12326  05E1  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12327  05E2  0843               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12328  05E3  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12329  05E4  0841               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12330  05E5  00BC               	movwf	EEPROM_24C1025_Write_Int@data+1
 12331  05E6  0840               	movf	EEPROM_24C1025_Fill_All@value,w
 12332  05E7  00BB               	movwf	EEPROM_24C1025_Write_Int@data
 12333  05E8  0842               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12334  05E9  26A8  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12335  05EC  0064               	clrwdt	;# 
 12336                           
 12337                           ;EEPROM_24C1025.c: 300:         }
 12338  05ED  3002               	movlw	2
 12339  05EE  1283               	bcf	3,5	;RP0=0, select bank0
 12340  05EF  1303               	bcf	3,6	;RP1=0, select bank0
 12341  05F0  07C3               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12342  05F1  3001               	movlw	1
 12343  05F2  1803               	skipnc
 12344  05F3  07C4               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12345  05F4  1803               	skipnc
 12346  05F5  07C5               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12347  05F6  1803               	skipnc
 12348  05F7  07C6               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12349  05F8  0846               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12350  05F9  1D03               	btfss	3,2
 12351  05FA  0008               	return
 12352  05FB  0845               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12353  05FC  1D03               	btfss	3,2
 12354  05FD  0008               	return
 12355  05FE  3004               	movlw	4
 12356  05FF  0244               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12357  0600  1D03               	skipz
 12358  0601  2E04               	goto	u6993
 12359  0602  3000               	movlw	0
 12360  0603  0243               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12361  0604                     u6993:	
 12362  0604  1803               	btfsc	3,0
 12363  0605  0008               	return
 12364  0606  2DDC               	goto	l7344
 12365  0607                     __end_of_EEPROM_24C1025_Fill_All:	
 12366  0607                     __ptext26:	
 12367 ;; *************** function _Save_Log *****************
 12368 ;; Defined at:
 12369 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;  add_datalog     4   32[BANK0 ] unsigned long 
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;		None
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12378 ;; Tracked objects:
 12379 ;;		On entry : 300/0
 12380 ;;		On exit  : 300/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12383 ;;      Params:         0       4       0       0       0
 12384 ;;      Locals:         0       0       0       0       0
 12385 ;;      Temps:          0       0       0       0       0
 12386 ;;      Totals:         0       4       0       0       0
 12387 ;;Total ram usage:        4 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:    5
 12390 ;; This function calls:
 12391 ;;		_EEPROM_24C1025_Write_Int
 12392 ;;		___fltol
 12393 ;;		___wmul
 12394 ;; This function is called by:
 12395 ;;		_Decodify_Command
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           
 12400                           ;psect for function _Save_Log
 12401  0607                     _Save_Log:	
 12402                           
 12403                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) T
      +                          emperatura0*10);
 12404                           
 12405                           ;incstack = 0
 12406                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12407  0607  26D9  120A  118A   	fcall	PL36	;call to abstracted procedure
 12408  060A  0817               	movf	(_Temperatura0+3)^(0+384),w
 12409  060B  1283               	bcf	3,5	;RP0=0, select bank0
 12410  060C  1303               	bcf	3,6	;RP1=0, select bank0
 12411  060D  00A3               	movwf	___fltol@f1+3
 12412  060E  1683               	bsf	3,5	;RP0=1, select bank3
 12413  060F  1703               	bsf	3,6	;RP1=1, select bank3
 12414  0610  0816               	movf	(_Temperatura0+2)^(0+384),w
 12415  0611  1283               	bcf	3,5	;RP0=0, select bank0
 12416  0612  1303               	bcf	3,6	;RP1=0, select bank0
 12417  0613  00A2               	movwf	___fltol@f1+2
 12418  0614  1683               	bsf	3,5	;RP0=1, select bank3
 12419  0615  1703               	bsf	3,6	;RP1=1, select bank3
 12420  0616  0815               	movf	(_Temperatura0+1)^(0+384),w
 12421  0617  1283               	bcf	3,5	;RP0=0, select bank0
 12422  0618  1303               	bcf	3,6	;RP1=0, select bank0
 12423  0619  00A1               	movwf	___fltol@f1+1
 12424  061A  1683               	bsf	3,5	;RP0=1, select bank3
 12425  061B  1703               	bsf	3,6	;RP1=1, select bank3
 12426  061C  0814               	movf	_Temperatura0^(0+384),w
 12427  061D  1283               	bcf	3,5	;RP0=0, select bank0
 12428  061E  1303               	bcf	3,6	;RP1=0, select bank0
 12429  061F  00A0               	movwf	___fltol@f1
 12430  0620  2659  120A  118A   	fcall	___fltol
 12431  0623  26E4  120A  118A   	fcall	PL52	;call to abstracted procedure
 12432  0626  26C0  120A  118A   	fcall	___wmul
 12433  0629  082B               	movf	?___wmul+1,w
 12434  062A  00BC               	movwf	EEPROM_24C1025_Write_Int@data+1
 12435  062B  082A               	movf	?___wmul,w
 12436  062C  00BB               	movwf	EEPROM_24C1025_Write_Int@data
 12437  062D  3000               	movlw	0
 12438  062E  26A8  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12439                           
 12440                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) T
      +                          emperatura1*10);
 12441  0631  26D9  120A  118A   	fcall	PL36	;call to abstracted procedure
 12442  0634  0813               	movf	(_Temperatura1+3)^(0+384),w
 12443  0635  1283               	bcf	3,5	;RP0=0, select bank0
 12444  0636  1303               	bcf	3,6	;RP1=0, select bank0
 12445  0637  00A3               	movwf	___fltol@f1+3
 12446  0638  1683               	bsf	3,5	;RP0=1, select bank3
 12447  0639  1703               	bsf	3,6	;RP1=1, select bank3
 12448  063A  0812               	movf	(_Temperatura1+2)^(0+384),w
 12449  063B  1283               	bcf	3,5	;RP0=0, select bank0
 12450  063C  1303               	bcf	3,6	;RP1=0, select bank0
 12451  063D  00A2               	movwf	___fltol@f1+2
 12452  063E  1683               	bsf	3,5	;RP0=1, select bank3
 12453  063F  1703               	bsf	3,6	;RP1=1, select bank3
 12454  0640  0811               	movf	(_Temperatura1+1)^(0+384),w
 12455  0641  1283               	bcf	3,5	;RP0=0, select bank0
 12456  0642  1303               	bcf	3,6	;RP1=0, select bank0
 12457  0643  00A1               	movwf	___fltol@f1+1
 12458  0644  1683               	bsf	3,5	;RP0=1, select bank3
 12459  0645  1703               	bsf	3,6	;RP1=1, select bank3
 12460  0646  0810               	movf	_Temperatura1^(0+384),w
 12461  0647  1283               	bcf	3,5	;RP0=0, select bank0
 12462  0648  1303               	bcf	3,6	;RP1=0, select bank0
 12463  0649  00A0               	movwf	___fltol@f1
 12464  064A  2659  120A  118A   	fcall	___fltol
 12465  064D  26E4  120A  118A   	fcall	PL52	;call to abstracted procedure
 12466  0650  26C0  120A  118A   	fcall	___wmul
 12467  0653  082B               	movf	?___wmul+1,w
 12468  0654  00BC               	movwf	EEPROM_24C1025_Write_Int@data+1
 12469  0655  082A               	movf	?___wmul,w
 12470  0656  00BB               	movwf	EEPROM_24C1025_Write_Int@data
 12471  0657  3001               	movlw	1
 12472  0658  2EA8               	ljmp	_EEPROM_24C1025_Write_Int
 12473  0659                     __end_of_Save_Log:	
 12474  0659                     __ptext28:	
 12475 ;; *************** function ___fltol *****************
 12476 ;; Defined at:
 12477 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  f1              4    0[BANK0 ] unsigned int 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  exp1            1    9[BANK0 ] unsigned char 
 12482 ;;  sign1           1    8[BANK0 ] unsigned char 
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  4    0[BANK0 ] long 
 12485 ;; Registers used:
 12486 ;;		wreg, status,2, status,0
 12487 ;; Tracked objects:
 12488 ;;		On entry : 300/0
 12489 ;;		On exit  : 300/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12492 ;;      Params:         0       4       0       0       0
 12493 ;;      Locals:         0       2       0       0       0
 12494 ;;      Temps:          0       4       0       0       0
 12495 ;;      Totals:         0      10       0       0       0
 12496 ;;Total ram usage:       10 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:    1
 12499 ;; This function calls:
 12500 ;;		Nothing
 12501 ;; This function is called by:
 12502 ;;		_Decodify_Command
 12503 ;;		_Save_Log
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           
 12508                           ;psect for function ___fltol
 12509  0659                     ___fltol:	
 12510                           
 12511                           ;incstack = 0
 12512                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12513  0659  1003               	clrc
 12514  065A  0D22               	rlf	___fltol@f1+2,w
 12515  065B  0D23               	rlf	___fltol@f1+3,w
 12516  065C  00A9               	movwf	___fltol@exp1
 12517  065D  0829               	movf	___fltol@exp1,w
 12518  065E  1D03               	btfss	3,2
 12519  065F  2E65               	goto	l6946
 12520  0660                     l6944:	
 12521  0660  01A0               	clrf	?___fltol
 12522  0661  01A1               	clrf	?___fltol+1
 12523  0662  01A2               	clrf	?___fltol+2
 12524  0663  01A3               	clrf	?___fltol+3
 12525  0664  0008               	return
 12526  0665                     l6946:	
 12527  0665  0820               	movf	___fltol@f1,w
 12528  0666  00A4               	movwf	??___fltol
 12529  0667  0821               	movf	___fltol@f1+1,w
 12530  0668  00A5               	movwf	??___fltol+1
 12531  0669  0822               	movf	___fltol@f1+2,w
 12532  066A  00A6               	movwf	??___fltol+2
 12533  066B  0823               	movf	___fltol@f1+3,w
 12534  066C  00A7               	movwf	??___fltol+3
 12535  066D  301F               	movlw	31
 12536  066E                     u6535:	
 12537  066E  1003               	clrc
 12538  066F  0CA7               	rrf	??___fltol+3,f
 12539  0670  0CA6               	rrf	??___fltol+2,f
 12540  0671  0CA5               	rrf	??___fltol+1,f
 12541  0672  0CA4               	rrf	??___fltol,f
 12542  0673  3EFF               	addlw	-1
 12543  0674  1D03               	skipz
 12544  0675  2E6E               	goto	u6535
 12545  0676  0824               	movf	??___fltol,w
 12546  0677  00A8               	movwf	___fltol@sign1
 12547  0678  3096               	movlw	150
 12548  0679  17A2               	bsf	___fltol@f1+2,7
 12549  067A  01A3               	clrf	___fltol@f1+3
 12550  067B  02A9               	subwf	___fltol@exp1,f
 12551  067C  1FA9               	btfss	___fltol@exp1,7
 12552  067D  2E8B               	goto	l6964
 12553  067E  0829               	movf	___fltol@exp1,w
 12554  067F  3A80               	xorlw	128
 12555  0680  3E97               	addlw	151
 12556  0681  1C03               	btfss	3,0
 12557  0682  2E60               	goto	l6944
 12558  0683                     l6960:	
 12559  0683  1003               	clrc
 12560  0684  0CA3               	rrf	___fltol@f1+3,f
 12561  0685  0CA2               	rrf	___fltol@f1+2,f
 12562  0686  0CA1               	rrf	___fltol@f1+1,f
 12563  0687  0CA0               	rrf	___fltol@f1,f
 12564  0688  0FA9               	incfsz	___fltol@exp1,f
 12565  0689  2E83               	goto	l6960
 12566  068A  2E99               	goto	l6972
 12567  068B                     l6964:	
 12568  068B  3020               	movlw	32
 12569  068C  0229               	subwf	___fltol@exp1,w
 12570  068D  1803               	btfsc	3,0
 12571  068E  2E60               	goto	l6944
 12572  068F                     l6970:	
 12573  068F  0829               	movf	___fltol@exp1,w
 12574  0690  1903               	btfsc	3,2
 12575  0691  2E99               	goto	l6972
 12576  0692  1003               	clrc
 12577  0693  0DA0               	rlf	___fltol@f1,f
 12578  0694  0DA1               	rlf	___fltol@f1+1,f
 12579  0695  0DA2               	rlf	___fltol@f1+2,f
 12580  0696  0DA3               	rlf	___fltol@f1+3,f
 12581  0697  03A9               	decf	___fltol@exp1,f
 12582  0698  2E8F               	goto	l6970
 12583  0699                     l6972:	
 12584  0699  0828               	movf	___fltol@sign1,w
 12585  069A  1903               	btfsc	3,2
 12586  069B  0008               	return
 12587  069C  09A0               	comf	___fltol@f1,f
 12588  069D  09A1               	comf	___fltol@f1+1,f
 12589  069E  09A2               	comf	___fltol@f1+2,f
 12590  069F  09A3               	comf	___fltol@f1+3,f
 12591  06A0  0AA0               	incf	___fltol@f1,f
 12592  06A1  1903               	skipnz
 12593  06A2  0AA1               	incf	___fltol@f1+1,f
 12594  06A3  1903               	skipnz
 12595  06A4  0AA2               	incf	___fltol@f1+2,f
 12596  06A5  1903               	skipnz
 12597  06A6  0AA3               	incf	___fltol@f1+3,f
 12598  06A7  0008               	return
 12599  06A8                     __end_of___fltol:	
 12600  06A8                     __ptext56:	
 12601 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12602 ;; Defined at:
 12603 ;;		line 279 in file "EEPROM_24C1025.c"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;  chip_add        1    wreg     unsigned char 
 12606 ;;  mem_add         4   23[BANK0 ] unsigned long 
 12607 ;;  data            2   27[BANK0 ] int 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  chip_add        1   29[BANK0 ] unsigned char 
 12610 ;;  local           2   30[BANK0 ] unsigned char [2]
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  1    wreg      void 
 12613 ;; Registers used:
 12614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/300
 12617 ;;		On exit  : 300/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12620 ;;      Params:         0       6       0       0       0
 12621 ;;      Locals:         0       3       0       0       0
 12622 ;;      Temps:          0       0       0       0       0
 12623 ;;      Totals:         0       9       0       0       0
 12624 ;;Total ram usage:        9 bytes
 12625 ;; Hardware stack levels used:    1
 12626 ;; Hardware stack levels required when called:    4
 12627 ;; This function calls:
 12628 ;;		_EEPROM_24C1025_Write_Buffer
 12629 ;; This function is called by:
 12630 ;;		_EEPROM_24C1025_Fill_All
 12631 ;;		_Decodify_Command
 12632 ;;		_Save_Log
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           
 12637                           ;psect for function _EEPROM_24C1025_Write_Int
 12638  06A8                     _EEPROM_24C1025_Write_Int:	
 12639                           
 12640                           ;incstack = 0
 12641                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12642                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12643  06A8  1283               	bcf	3,5	;RP0=0, select bank0
 12644  06A9  1303               	bcf	3,6	;RP1=0, select bank0
 12645  06AA  00BD               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12646                           
 12647                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 12648  06AB  083C               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12649  06AC  00BE               	movwf	EEPROM_24C1025_Write_Int@local
 12650                           
 12651                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 12652  06AD  083B               	movf	EEPROM_24C1025_Write_Int@data,w
 12653  06AE  00BF               	movwf	EEPROM_24C1025_Write_Int@local+1
 12654                           
 12655                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12656  06AF  083A               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12657  06B0  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12658  06B1  0839               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12659  06B2  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12660  06B3  0838               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12661  06B4  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12662  06B5  0837               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12663  06B6  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12664  06B7  3002               	movlw	2
 12665  06B8  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12666  06B9  303E               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12667  06BA  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12668  06BB  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 12669  06BC  083D               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12670  06BD  120A  118A  2AA4   	ljmp	_EEPROM_24C1025_Write_Buffer
 12671  06C0                     __end_of_EEPROM_24C1025_Write_Int:	
 12672  06C0                     __ptext27:	
 12673 ;; *************** function ___wmul *****************
 12674 ;; Defined at:
 12675 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  multiplier      2   10[BANK0 ] unsigned int 
 12678 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;  product         2   14[BANK0 ] unsigned int 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  2   10[BANK0 ] unsigned int 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : 300/0
 12687 ;;		On exit  : 300/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12690 ;;      Params:         0       4       0       0       0
 12691 ;;      Locals:         0       2       0       0       0
 12692 ;;      Temps:          0       0       0       0       0
 12693 ;;      Totals:         0       6       0       0       0
 12694 ;;Total ram usage:        6 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    1
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_Save_Log
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           
 12705                           ;psect for function ___wmul
 12706  06C0                     ___wmul:	
 12707                           
 12708                           ;incstack = 0
 12709                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12710  06C0  01AE               	clrf	___wmul@product
 12711  06C1  01AF               	clrf	___wmul@product+1
 12712  06C2                     l6928:	
 12713  06C2  1C2A               	btfss	___wmul@multiplier,0
 12714  06C3  2ECA               	goto	l6932
 12715  06C4  082C               	movf	___wmul@multiplicand,w
 12716  06C5  07AE               	addwf	___wmul@product,f
 12717  06C6  1803               	skipnc
 12718  06C7  0AAF               	incf	___wmul@product+1,f
 12719  06C8  082D               	movf	___wmul@multiplicand+1,w
 12720  06C9  07AF               	addwf	___wmul@product+1,f
 12721  06CA                     l6932:	
 12722  06CA  1003               	clrc
 12723  06CB  0DAC               	rlf	___wmul@multiplicand,f
 12724  06CC  0DAD               	rlf	___wmul@multiplicand+1,f
 12725  06CD  1003               	clrc
 12726  06CE  0CAB               	rrf	___wmul@multiplier+1,f
 12727  06CF  0CAA               	rrf	___wmul@multiplier,f
 12728  06D0  082A               	movf	___wmul@multiplier,w
 12729  06D1  042B               	iorwf	___wmul@multiplier+1,w
 12730  06D2  1D03               	btfss	3,2
 12731  06D3  2EC2               	goto	l6928
 12732  06D4  082F               	movf	___wmul@product+1,w
 12733  06D5  00AB               	movwf	?___wmul+1
 12734  06D6  082E               	movf	___wmul@product,w
 12735  06D7  00AA               	movwf	?___wmul
 12736  06D8  0008               	return
 12737  06D9                     __end_of___wmul:	
 12738  06D9                     PL36:	
 12739  06D9  0843               	movf	Save_Log@add_datalog+3,w
 12740  06DA  00BA               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12741  06DB  0842               	movf	Save_Log@add_datalog+2,w
 12742  06DC  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12743  06DD  0841               	movf	Save_Log@add_datalog+1,w
 12744  06DE  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12745  06DF  0840               	movf	Save_Log@add_datalog,w
 12746  06E0  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12747  06E1  1683               	bsf	3,5	;RP0=1, select bank3
 12748  06E2  1703               	bsf	3,6	;RP1=1, select bank3
 12749  06E3  0008               	return
 12750  06E4                     __end_ofPL36:	
 12751  06E4                     PL52:	
 12752  06E4  0821               	movf	?___fltol+1,w
 12753  06E5  00AB               	movwf	___wmul@multiplier+1
 12754  06E6  0820               	movf	?___fltol,w
 12755  06E7  00AA               	movwf	___wmul@multiplier
 12756  06E8  300A               	movlw	10
 12757  06E9  00AC               	movwf	___wmul@multiplicand
 12758  06EA  01AD               	clrf	___wmul@multiplicand+1
 12759  06EB  0008               	return
 12760  06EC                     __end_ofPL52:	
 12761                           
 12762                           	psect	text67
 12763  0432                     __ptext67:	
 12764 ;; *************** function _Auto_Relay0 *****************
 12765 ;; Defined at:
 12766 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;		None
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;		None
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  1    wreg      void 
 12773 ;; Registers used:
 12774 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12775 ;; Tracked objects:
 12776 ;;		On entry : 300/300
 12777 ;;		On exit  : 200/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12780 ;;      Params:         0       0       0       0       0
 12781 ;;      Locals:         0       0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0
 12783 ;;      Totals:         0       0       0       0       0
 12784 ;;Total ram usage:        0 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:    3
 12787 ;; This function calls:
 12788 ;;		_Rele0Desligado
 12789 ;;		_Rele0Ligado
 12790 ;;		___flge
 12791 ;;		___flsub
 12792 ;; This function is called by:
 12793 ;;		_main
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _Auto_Relay0
 12799  0432                     _Auto_Relay0:	
 12800                           
 12801                           ;SlaveLiofilizadorVer1.c: 858:              if(Status0==0)
 12802                           
 12803                           ;incstack = 0
 12804                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12805  0432  0828               	movf	_Status0^(0+384),w
 12806  0433  0429               	iorwf	(_Status0+1)^(0+384),w
 12807  0434  1D03               	btfss	3,2
 12808  0435  2C37               	goto	l7746
 12809  0436                     l7744:	
 12810                           
 12811                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   Rele0Desligado();
 12812  0436  2D6C               	ljmp	l7586
 12813  0437                     l7746:	
 12814                           ;SlaveLiofilizadorVer1.c: 861:                  }
 12815                           
 12816                           
 12817                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12818  0437  081F               	movf	(_Histerese0+3)^(0+384),w
 12819  0438  1283               	bcf	3,5	;RP0=0, select bank0
 12820  0439  1303               	bcf	3,6	;RP1=0, select bank0
 12821  043A  00D0               	movwf	___flsub@a+3
 12822  043B  1683               	bsf	3,5	;RP0=1, select bank3
 12823  043C  1703               	bsf	3,6	;RP1=1, select bank3
 12824  043D  081E               	movf	(_Histerese0+2)^(0+384),w
 12825  043E  1283               	bcf	3,5	;RP0=0, select bank0
 12826  043F  1303               	bcf	3,6	;RP1=0, select bank0
 12827  0440  00CF               	movwf	___flsub@a+2
 12828  0441  1683               	bsf	3,5	;RP0=1, select bank3
 12829  0442  1703               	bsf	3,6	;RP1=1, select bank3
 12830  0443  081D               	movf	(_Histerese0+1)^(0+384),w
 12831  0444  1283               	bcf	3,5	;RP0=0, select bank0
 12832  0445  1303               	bcf	3,6	;RP1=0, select bank0
 12833  0446  00CE               	movwf	___flsub@a+1
 12834  0447  1683               	bsf	3,5	;RP0=1, select bank3
 12835  0448  1703               	bsf	3,6	;RP1=1, select bank3
 12836  0449  081C               	movf	_Histerese0^(0+384),w
 12837  044A  1283               	bcf	3,5	;RP0=0, select bank0
 12838  044B  1303               	bcf	3,6	;RP1=0, select bank0
 12839  044C  00CD               	movwf	___flsub@a
 12840  044D  0873               	movf	_SetPoint0+3,w	;volatile
 12841  044E  00D4               	movwf	___flsub@b+3
 12842  044F  0872               	movf	_SetPoint0+2,w	;volatile
 12843  0450  00D3               	movwf	___flsub@b+2
 12844  0451  0871               	movf	_SetPoint0+1,w	;volatile
 12845  0452  00D2               	movwf	___flsub@b+1
 12846  0453  0870               	movf	_SetPoint0,w	;volatile
 12847  0454  00D1               	movwf	___flsub@b
 12848  0455  160A  118A  2638  120A  118A  	fcall	___flsub
 12849  045A  25C7  120A  118A   	fcall	PL34	;call to abstracted procedure
 12850  045D  25A5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12851  0460  24FE  120A  118A   	fcall	___flge
 12852  0463  1C03               	btfss	3,0
 12853  0464  2C71               	goto	l7752
 12854                           
 12855                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12856  0465  1683               	bsf	3,5	;RP0=1, select bank3
 12857  0466  1703               	bsf	3,6	;RP1=1, select bank3
 12858  0467  01DE               	clrf	_RL0Status^(0+384)
 12859  0468  0ADE               	incf	_RL0Status^(0+384),f
 12860  0469  2C6E               	goto	l7750
 12861  046A                     l7754:	
 12862                           
 12863                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12864  046A  1683               	bsf	3,5	;RP0=1, select bank3
 12865  046B  1703               	bsf	3,6	;RP1=1, select bank3
 12866  046C  0B5E               	decfsz	_RL0Status^(0+384),w
 12867  046D  2C36               	goto	l7744
 12868  046E                     l7750:	
 12869                           
 12870                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12871  046E  160A  118A  28F0   	ljmp	l7562
 12872  0471                     l7752:	
 12873                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12874                           
 12875  0471  25BF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12876  0474  25A5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12877  0477  24FE  120A  118A   	fcall	___flge
 12878  047A  1803               	btfsc	3,0
 12879  047B  2C6A               	goto	l7754
 12880  047C  25BF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12881  047F  25A5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12882  0482  24FE  120A  118A   	fcall	___flge
 12883  0485  1803               	btfsc	3,0
 12884  0486  0008               	return
 12885                           
 12886                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12887  0487  1683               	bsf	3,5	;RP0=1, select bank3
 12888  0488  1703               	bsf	3,6	;RP1=1, select bank3
 12889  0489  01DE               	clrf	_RL0Status^(0+384)
 12890  048A  2C36               	goto	l7744
 12891  048B                     __end_of_Auto_Relay0:	
 12892  048B                     __ptext63:	
 12893 ;; *************** function _Auto_Relay1 *****************
 12894 ;; Defined at:
 12895 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;		None
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12904 ;; Tracked objects:
 12905 ;;		On entry : 200/100
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12909 ;;      Params:         0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0
 12912 ;;      Totals:         0       0       0       0       0
 12913 ;;Total ram usage:        0 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    3
 12916 ;; This function calls:
 12917 ;;		_Rele1Desligado
 12918 ;;		_Rele1Ligado
 12919 ;;		___flge
 12920 ;;		___flsub
 12921 ;;		___xxtofl
 12922 ;; This function is called by:
 12923 ;;		_main
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           
 12928                           ;psect for function _Auto_Relay1
 12929  048B                     _Auto_Relay1:	
 12930                           
 12931                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12932                           
 12933                           ;incstack = 0
 12934                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12935  048B  1683               	bsf	3,5	;RP0=1, select bank3
 12936  048C  1703               	bsf	3,6	;RP1=1, select bank3
 12937  048D  0826               	movf	_Status1^(0+384),w
 12938  048E  0427               	iorwf	(_Status1+1)^(0+384),w
 12939  048F  1D03               	btfss	3,2
 12940  0490  2C92               	goto	l7770
 12941  0491                     l7768:	
 12942                           
 12943                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   Rele1Desligado();
 12944  0491  2D70               	ljmp	l7588
 12945  0492                     l7770:	
 12946                           ;SlaveLiofilizadorVer1.c: 897:                  }
 12947                           
 12948                           
 12949                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12950  0492  0838               	movf	_Histerese1^(0+384),w
 12951  0493  1283               	bcf	3,5	;RP0=0, select bank0
 12952  0494  1303               	bcf	3,6	;RP1=0, select bank0
 12953  0495  25CF               	fcall	PL66	;call to abstracted procedure
 12954  0496  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12955  049B  160A  118A  2798  120A  118A  	fcall	PL30	;call to abstracted procedure
 12956  04A0  1683               	bsf	3,5	;RP0=1, select bank3
 12957  04A1  1703               	bsf	3,6	;RP1=1, select bank3
 12958  04A2  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12959  04A3  1283               	bcf	3,5	;RP0=0, select bank0
 12960  04A4  1303               	bcf	3,6	;RP1=0, select bank0
 12961  04A5  00D4               	movwf	___flsub@b+3
 12962  04A6  1683               	bsf	3,5	;RP0=1, select bank3
 12963  04A7  1703               	bsf	3,6	;RP1=1, select bank3
 12964  04A8  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12965  04A9  1283               	bcf	3,5	;RP0=0, select bank0
 12966  04AA  1303               	bcf	3,6	;RP1=0, select bank0
 12967  04AB  00D3               	movwf	___flsub@b+2
 12968  04AC  1683               	bsf	3,5	;RP0=1, select bank3
 12969  04AD  1703               	bsf	3,6	;RP1=1, select bank3
 12970  04AE  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12971  04AF  1283               	bcf	3,5	;RP0=0, select bank0
 12972  04B0  1303               	bcf	3,6	;RP1=0, select bank0
 12973  04B1  00D2               	movwf	___flsub@b+1
 12974  04B2  1683               	bsf	3,5	;RP0=1, select bank3
 12975  04B3  1703               	bsf	3,6	;RP1=1, select bank3
 12976  04B4  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12977  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 12978  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 12979  04B7  00D1               	movwf	___flsub@b
 12980  04B8  160A  118A  2638  120A  118A  	fcall	___flsub
 12981  04BD  25C7  120A  118A   	fcall	PL34	;call to abstracted procedure
 12982  04C0  00D5               	movwf	___flge@ff1
 12983  04C1  1683               	bsf	3,5	;RP0=1, select bank3
 12984  04C2  1703               	bsf	3,6	;RP1=1, select bank3
 12985  04C3  0813               	movf	(_Temperatura1+3)^(0+384),w
 12986  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 12987  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 12988  04C6  00DC               	movwf	___flge@ff2+3
 12989  04C7  1683               	bsf	3,5	;RP0=1, select bank3
 12990  04C8  1703               	bsf	3,6	;RP1=1, select bank3
 12991  04C9  0812               	movf	(_Temperatura1+2)^(0+384),w
 12992  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 12993  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 12994  04CC  00DB               	movwf	___flge@ff2+2
 12995  04CD  1683               	bsf	3,5	;RP0=1, select bank3
 12996  04CE  1703               	bsf	3,6	;RP1=1, select bank3
 12997  04CF  0811               	movf	(_Temperatura1+1)^(0+384),w
 12998  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 12999  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 13000  04D2  00DA               	movwf	___flge@ff2+1
 13001  04D3  1683               	bsf	3,5	;RP0=1, select bank3
 13002  04D4  1703               	bsf	3,6	;RP1=1, select bank3
 13003  04D5  0810               	movf	_Temperatura1^(0+384),w
 13004  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 13005  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 13006  04D8  00D9               	movwf	___flge@ff2
 13007  04D9  24FE  120A  118A   	fcall	___flge
 13008  04DC  1C03               	btfss	3,0
 13009  04DD  2CEA               	goto	l7776
 13010                           
 13011                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 13012  04DE  1683               	bsf	3,5	;RP0=1, select bank3
 13013  04DF  1703               	bsf	3,6	;RP1=1, select bank3
 13014  04E0  01DD               	clrf	_RL1Status^(0+384)
 13015  04E1  0ADD               	incf	_RL1Status^(0+384),f
 13016  04E2  2CE7               	goto	l7774
 13017  04E3                     l7778:	
 13018                           
 13019                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 13020  04E3  1683               	bsf	3,5	;RP0=1, select bank3
 13021  04E4  1703               	bsf	3,6	;RP1=1, select bank3
 13022  04E5  0B5D               	decfsz	_RL1Status^(0+384),w
 13023  04E6  2C91               	goto	l7768
 13024  04E7                     l7774:	
 13025                           
 13026                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 13027  04E7  160A  118A  2907   	ljmp	l7574
 13028  04EA                     l7776:	
 13029                           ;SlaveLiofilizadorVer1.c: 905:                     }
 13030                           
 13031  04EA  2574  120A  118A   	fcall	PL2	;call to abstracted procedure
 13032  04ED  24FE  120A  118A   	fcall	___flge
 13033  04F0  1803               	btfsc	3,0
 13034  04F1  2CE3               	goto	l7778
 13035  04F2  2574  120A  118A   	fcall	PL2	;call to abstracted procedure
 13036  04F5  24FE  120A  118A   	fcall	___flge
 13037  04F8  1803               	btfsc	3,0
 13038  04F9  0008               	return
 13039                           
 13040                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 13041  04FA  1683               	bsf	3,5	;RP0=1, select bank3
 13042  04FB  1703               	bsf	3,6	;RP1=1, select bank3
 13043  04FC  01DD               	clrf	_RL1Status^(0+384)
 13044  04FD  2C91               	goto	l7768
 13045  04FE                     __end_of_Auto_Relay1:	
 13046  04FE                     __ptext70:	
 13047 ;; *************** function ___flge *****************
 13048 ;; Defined at:
 13049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;  ff1             4   53[BANK0 ] unsigned char 
 13052 ;;  ff2             4   57[BANK0 ] unsigned char 
 13053 ;; Auto vars:     Size  Location     Type
 13054 ;;		None
 13055 ;; Return value:  Size  Location     Type
 13056 ;;		None               void
 13057 ;; Registers used:
 13058 ;;		wreg, status,2, status,0
 13059 ;; Tracked objects:
 13060 ;;		On entry : 300/0
 13061 ;;		On exit  : 300/0
 13062 ;;		Unchanged: 0/0
 13063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13064 ;;      Params:         0       8       0       0       0
 13065 ;;      Locals:         0       0       0       0       0
 13066 ;;      Temps:          0       4       0       0       0
 13067 ;;      Totals:         0      12       0       0       0
 13068 ;;Total ram usage:       12 bytes
 13069 ;; Hardware stack levels used:    1
 13070 ;; Hardware stack levels required when called:    1
 13071 ;; This function calls:
 13072 ;;		Nothing
 13073 ;; This function is called by:
 13074 ;;		_Auto_Relay0
 13075 ;;		_Auto_Relay1
 13076 ;;		_log
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           
 13081                           ;psect for function ___flge
 13082  04FE                     ___flge:	
 13083                           
 13084                           ;incstack = 0
 13085                           ; Regs used in ___flge: [wreg+status,2+status,0]
 13086  04FE  3080               	movlw	128
 13087  04FF  01DD               	clrf	??___flge
 13088  0500  01DE               	clrf	??___flge+1
 13089  0501  0557               	andwf	___flge@ff1+2,w
 13090  0502  00DF               	movwf	??___flge+2
 13091  0503  307F               	movlw	127
 13092  0504  0558               	andwf	___flge@ff1+3,w
 13093  0505  00E0               	movwf	??___flge+3
 13094  0506  045F               	iorwf	??___flge+2,w
 13095  0507  045E               	iorwf	??___flge+1,w
 13096  0508  045D               	iorwf	??___flge,w
 13097  0509  1D03               	skipz
 13098  050A  2D0F               	goto	l6566
 13099  050B  01D5               	clrf	___flge@ff1
 13100  050C  01D6               	clrf	___flge@ff1+1
 13101  050D  01D7               	clrf	___flge@ff1+2
 13102  050E  01D8               	clrf	___flge@ff1+3
 13103  050F                     l6566:	
 13104  050F  3080               	movlw	128
 13105  0510  01DD               	clrf	??___flge
 13106  0511  01DE               	clrf	??___flge+1
 13107  0512  055B               	andwf	___flge@ff2+2,w
 13108  0513  00DF               	movwf	??___flge+2
 13109  0514  307F               	movlw	127
 13110  0515  055C               	andwf	___flge@ff2+3,w
 13111  0516  00E0               	movwf	??___flge+3
 13112  0517  045F               	iorwf	??___flge+2,w
 13113  0518  045E               	iorwf	??___flge+1,w
 13114  0519  045D               	iorwf	??___flge,w
 13115  051A  1D03               	skipz
 13116  051B  2D20               	goto	l1214
 13117  051C  01D9               	clrf	___flge@ff2
 13118  051D  01DA               	clrf	___flge@ff2+1
 13119  051E  01DB               	clrf	___flge@ff2+2
 13120  051F  01DC               	clrf	___flge@ff2+3
 13121  0520                     l1214:	
 13122  0520  1FD8               	btfss	___flge@ff1+3,7
 13123  0521  2D3D               	goto	l6572
 13124  0522  3080               	movlw	128
 13125  0523  01DD               	clrf	??___flge
 13126  0524  01DE               	clrf	??___flge+1
 13127  0525  01DF               	clrf	??___flge+2
 13128  0526  00E0               	movwf	??___flge+3
 13129  0527  0855               	movf	___flge@ff1,w
 13130  0528  02DD               	subwf	??___flge,f
 13131  0529  0856               	movf	___flge@ff1+1,w
 13132  052A  1C03               	skipc
 13133  052B  0F56               	incfsz	___flge@ff1+1,w
 13134  052C  02DE               	subwf	??___flge+1,f
 13135  052D  0857               	movf	___flge@ff1+2,w
 13136  052E  1C03               	skipc
 13137  052F  0F57               	incfsz	___flge@ff1+2,w
 13138  0530  02DF               	subwf	??___flge+2,f
 13139  0531  0858               	movf	___flge@ff1+3,w
 13140  0532  1C03               	skipc
 13141  0533  0F58               	incfsz	___flge@ff1+3,w
 13142  0534  02E0               	subwf	??___flge+3,f
 13143  0535  0860               	movf	??___flge+3,w
 13144  0536  00D8               	movwf	___flge@ff1+3
 13145  0537  085F               	movf	??___flge+2,w
 13146  0538  00D7               	movwf	___flge@ff1+2
 13147  0539  085E               	movf	??___flge+1,w
 13148  053A  00D6               	movwf	___flge@ff1+1
 13149  053B  085D               	movf	??___flge,w
 13150  053C  00D5               	movwf	___flge@ff1
 13151  053D                     l6572:	
 13152  053D  1FDC               	btfss	___flge@ff2+3,7
 13153  053E  2D5A               	goto	l1216
 13154  053F  3080               	movlw	128
 13155  0540  01DD               	clrf	??___flge
 13156  0541  01DE               	clrf	??___flge+1
 13157  0542  01DF               	clrf	??___flge+2
 13158  0543  00E0               	movwf	??___flge+3
 13159  0544  0859               	movf	___flge@ff2,w
 13160  0545  02DD               	subwf	??___flge,f
 13161  0546  085A               	movf	___flge@ff2+1,w
 13162  0547  1C03               	skipc
 13163  0548  0F5A               	incfsz	___flge@ff2+1,w
 13164  0549  02DE               	subwf	??___flge+1,f
 13165  054A  085B               	movf	___flge@ff2+2,w
 13166  054B  1C03               	skipc
 13167  054C  0F5B               	incfsz	___flge@ff2+2,w
 13168  054D  02DF               	subwf	??___flge+2,f
 13169  054E  085C               	movf	___flge@ff2+3,w
 13170  054F  1C03               	skipc
 13171  0550  0F5C               	incfsz	___flge@ff2+3,w
 13172  0551  02E0               	subwf	??___flge+3,f
 13173  0552  0860               	movf	??___flge+3,w
 13174  0553  00DC               	movwf	___flge@ff2+3
 13175  0554  085F               	movf	??___flge+2,w
 13176  0555  00DB               	movwf	___flge@ff2+2
 13177  0556  085E               	movf	??___flge+1,w
 13178  0557  00DA               	movwf	___flge@ff2+1
 13179  0558  085D               	movf	??___flge,w
 13180  0559  00D9               	movwf	___flge@ff2
 13181  055A                     l1216:	
 13182  055A  3080               	movlw	128
 13183  055B  06D8               	xorwf	___flge@ff1+3,f
 13184  055C  06DC               	xorwf	___flge@ff2+3,f
 13185  055D  085C               	movf	___flge@ff2+3,w
 13186  055E  0258               	subwf	___flge@ff1+3,w
 13187  055F  1D03               	skipz
 13188  0560  0008               	return
 13189  0561  085B               	movf	___flge@ff2+2,w
 13190  0562  0257               	subwf	___flge@ff1+2,w
 13191  0563  1D03               	skipz
 13192  0564  0008               	return
 13193  0565  085A               	movf	___flge@ff2+1,w
 13194  0566  0256               	subwf	___flge@ff1+1,w
 13195  0567  1D03               	skipz
 13196  0568  0008               	return
 13197  0569  0859               	movf	___flge@ff2,w
 13198  056A  0255               	subwf	___flge@ff1,w
 13199  056B  0008               	return
 13200  056C                     __end_of___flge:	
 13201  056C                     __ptext72:	
 13202 ;; *************** function _Rele0Desligado *****************
 13203 ;; Defined at:
 13204 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 13205 ;; Parameters:    Size  Location     Type
 13206 ;;		None
 13207 ;; Auto vars:     Size  Location     Type
 13208 ;;		None
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  1    wreg      void 
 13211 ;; Registers used:
 13212 ;;		None
 13213 ;; Tracked objects:
 13214 ;;		On entry : 300/300
 13215 ;;		On exit  : 300/0
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13218 ;;      Params:         0       0       0       0       0
 13219 ;;      Locals:         0       0       0       0       0
 13220 ;;      Temps:          0       0       0       0       0
 13221 ;;      Totals:         0       0       0       0       0
 13222 ;;Total ram usage:        0 bytes
 13223 ;; Hardware stack levels used:    1
 13224 ;; Hardware stack levels required when called:    1
 13225 ;; This function calls:
 13226 ;;		Nothing
 13227 ;; This function is called by:
 13228 ;;		_Auto_Relay0
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           
 13233                           ;psect for function _Rele0Desligado
 13234  056C                     _Rele0Desligado:	
 13235  056C                     l7586:	
 13236                           ;incstack = 0
 13237                           ; Regs used in _Rele0Desligado: []
 13238                           
 13239                           
 13240                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 13241  056C  1283               	bcf	3,5	;RP0=0, select bank0
 13242  056D  1303               	bcf	3,6	;RP1=0, select bank0
 13243  056E  1007               	bcf	7,0	;volatile
 13244  056F  0008               	return
 13245  0570                     __end_of_Rele0Desligado:	
 13246  0570                     __ptext66:	
 13247 ;; *************** function _Rele1Desligado *****************
 13248 ;; Defined at:
 13249 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;		None
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      void 
 13256 ;; Registers used:
 13257 ;;		None
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/300
 13260 ;;		On exit  : 300/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13263 ;;      Params:         0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0
 13266 ;;      Totals:         0       0       0       0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    1
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_Auto_Relay1
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           
 13278                           ;psect for function _Rele1Desligado
 13279  0570                     _Rele1Desligado:	
 13280  0570                     l7588:	
 13281                           ;incstack = 0
 13282                           ; Regs used in _Rele1Desligado: []
 13283                           
 13284                           
 13285                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 13286  0570  1283               	bcf	3,5	;RP0=0, select bank0
 13287  0571  1303               	bcf	3,6	;RP1=0, select bank0
 13288  0572  1087               	bcf	7,1	;volatile
 13289  0573  0008               	return
 13290  0574                     __end_of_Rele1Desligado:	
 13291  0574                     PL2:	
 13292  0574  1683               	bsf	3,5	;RP0=1, select bank3
 13293  0575  1703               	bsf	3,6	;RP1=1, select bank3
 13294  0576  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13295  0577  1283               	bcf	3,5	;RP0=0, select bank0
 13296  0578  1303               	bcf	3,6	;RP1=0, select bank0
 13297  0579  00D8               	movwf	___flge@ff1+3
 13298  057A  1683               	bsf	3,5	;RP0=1, select bank3
 13299  057B  1703               	bsf	3,6	;RP1=1, select bank3
 13300  057C  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13301  057D  1283               	bcf	3,5	;RP0=0, select bank0
 13302  057E  1303               	bcf	3,6	;RP1=0, select bank0
 13303  057F  00D7               	movwf	___flge@ff1+2
 13304  0580  1683               	bsf	3,5	;RP0=1, select bank3
 13305  0581  1703               	bsf	3,6	;RP1=1, select bank3
 13306  0582  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13307  0583  1283               	bcf	3,5	;RP0=0, select bank0
 13308  0584  1303               	bcf	3,6	;RP1=0, select bank0
 13309  0585  00D6               	movwf	___flge@ff1+1
 13310  0586  1683               	bsf	3,5	;RP0=1, select bank3
 13311  0587  1703               	bsf	3,6	;RP1=1, select bank3
 13312  0588  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13313  0589  1283               	bcf	3,5	;RP0=0, select bank0
 13314  058A  1303               	bcf	3,6	;RP1=0, select bank0
 13315  058B  00D5               	movwf	___flge@ff1
 13316  058C  1683               	bsf	3,5	;RP0=1, select bank3
 13317  058D  1703               	bsf	3,6	;RP1=1, select bank3
 13318  058E  0813               	movf	(_Temperatura1+3)^(0+384),w
 13319  058F  1283               	bcf	3,5	;RP0=0, select bank0
 13320  0590  1303               	bcf	3,6	;RP1=0, select bank0
 13321  0591  00DC               	movwf	___flge@ff2+3
 13322  0592  1683               	bsf	3,5	;RP0=1, select bank3
 13323  0593  1703               	bsf	3,6	;RP1=1, select bank3
 13324  0594  0812               	movf	(_Temperatura1+2)^(0+384),w
 13325  0595  1283               	bcf	3,5	;RP0=0, select bank0
 13326  0596  1303               	bcf	3,6	;RP1=0, select bank0
 13327  0597  00DB               	movwf	___flge@ff2+2
 13328  0598  1683               	bsf	3,5	;RP0=1, select bank3
 13329  0599  1703               	bsf	3,6	;RP1=1, select bank3
 13330  059A  0811               	movf	(_Temperatura1+1)^(0+384),w
 13331  059B  1283               	bcf	3,5	;RP0=0, select bank0
 13332  059C  1303               	bcf	3,6	;RP1=0, select bank0
 13333  059D  00DA               	movwf	___flge@ff2+1
 13334  059E  1683               	bsf	3,5	;RP0=1, select bank3
 13335  059F  1703               	bsf	3,6	;RP1=1, select bank3
 13336  05A0  0810               	movf	_Temperatura1^(0+384),w
 13337  05A1  1283               	bcf	3,5	;RP0=0, select bank0
 13338  05A2  1303               	bcf	3,6	;RP1=0, select bank0
 13339  05A3  00D9               	movwf	___flge@ff2
 13340  05A4  0008               	return
 13341  05A5                     __end_ofPL2:	
 13342  05A5                     PL6:	
 13343  05A5  00D5               	movwf	___flge@ff1
 13344  05A6  1683               	bsf	3,5	;RP0=1, select bank3
 13345  05A7  1703               	bsf	3,6	;RP1=1, select bank3
 13346  05A8  0817               	movf	(_Temperatura0+3)^(0+384),w
 13347  05A9  1283               	bcf	3,5	;RP0=0, select bank0
 13348  05AA  1303               	bcf	3,6	;RP1=0, select bank0
 13349  05AB  00DC               	movwf	___flge@ff2+3
 13350  05AC  1683               	bsf	3,5	;RP0=1, select bank3
 13351  05AD  1703               	bsf	3,6	;RP1=1, select bank3
 13352  05AE  0816               	movf	(_Temperatura0+2)^(0+384),w
 13353  05AF  1283               	bcf	3,5	;RP0=0, select bank0
 13354  05B0  1303               	bcf	3,6	;RP1=0, select bank0
 13355  05B1  00DB               	movwf	___flge@ff2+2
 13356  05B2  1683               	bsf	3,5	;RP0=1, select bank3
 13357  05B3  1703               	bsf	3,6	;RP1=1, select bank3
 13358  05B4  0815               	movf	(_Temperatura0+1)^(0+384),w
 13359  05B5  1283               	bcf	3,5	;RP0=0, select bank0
 13360  05B6  1303               	bcf	3,6	;RP1=0, select bank0
 13361  05B7  00DA               	movwf	___flge@ff2+1
 13362  05B8  1683               	bsf	3,5	;RP0=1, select bank3
 13363  05B9  1703               	bsf	3,6	;RP1=1, select bank3
 13364  05BA  0814               	movf	_Temperatura0^(0+384),w
 13365  05BB  1283               	bcf	3,5	;RP0=0, select bank0
 13366  05BC  1303               	bcf	3,6	;RP1=0, select bank0
 13367  05BD  00D9               	movwf	___flge@ff2
 13368  05BE  0008               	return
 13369  05BF                     __end_ofPL6:	
 13370  05BF                     PL10:	
 13371  05BF  0873               	movf	_SetPoint0+3,w	;volatile
 13372  05C0  00D8               	movwf	___flge@ff1+3
 13373  05C1  0872               	movf	_SetPoint0+2,w	;volatile
 13374  05C2  00D7               	movwf	___flge@ff1+2
 13375  05C3  0871               	movf	_SetPoint0+1,w	;volatile
 13376  05C4  00D6               	movwf	___flge@ff1+1
 13377  05C5  0870               	movf	_SetPoint0,w	;volatile
 13378  05C6  0008               	return
 13379  05C7                     __end_ofPL10:	
 13380  05C7                     PL34:	
 13381  05C7  0850               	movf	?___flsub+3,w
 13382  05C8  00D8               	movwf	___flge@ff1+3
 13383  05C9  084F               	movf	?___flsub+2,w
 13384  05CA  00D7               	movwf	___flge@ff1+2
 13385  05CB  084E               	movf	?___flsub+1,w
 13386  05CC  00D6               	movwf	___flge@ff1+1
 13387  05CD  084D               	movf	?___flsub,w
 13388  05CE  0008               	return
 13389  05CF                     __end_ofPL34:	
 13390  05CF                     PL66:	
 13391  05CF  00AB               	movwf	___xxtofl@val
 13392  05D0  3001               	movlw	1
 13393  05D1  01AC               	clrf	___xxtofl@val+1
 13394  05D2  01AD               	clrf	___xxtofl@val+2
 13395  05D3  01AE               	clrf	___xxtofl@val+3
 13396  05D4  0008               	return
 13397  05D5                     __end_ofPL66:	
 13398                           
 13399                           	psect	text73
 13400  0804                     __ptext73:	
 13401 ;; *************** function _ADC_init *****************
 13402 ;; Defined at:
 13403 ;;		line 10 in file "adc.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;		None
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;		None
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      void 
 13410 ;; Registers used:
 13411 ;;		wreg, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/100
 13414 ;;		On exit  : 300/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13417 ;;      Params:         0       0       0       0       0
 13418 ;;      Locals:         0       0       0       0       0
 13419 ;;      Temps:          0       0       0       0       0
 13420 ;;      Totals:         0       0       0       0       0
 13421 ;;Total ram usage:        0 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    1
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_main
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           
 13432                           ;psect for function _ADC_init
 13433  0804                     _ADC_init:	
 13434                           
 13435                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13436                           
 13437                           ;incstack = 0
 13438                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13439  0804  30C0               	movlw	192
 13440  0805  1283               	bcf	3,5	;RP0=0, select bank0
 13441  0806  1303               	bcf	3,6	;RP1=0, select bank0
 13442  0807  049F               	iorwf	31,f	;volatile
 13443                           
 13444                           ;adc.c: 12:      ADCON1=0b10000000;
 13445  0808  3080               	movlw	128
 13446  0809  1683               	bsf	3,5	;RP0=1, select bank1
 13447  080A  009F               	movwf	31	;volatile
 13448                           
 13449                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13450  080B  179F               	bsf	31,7	;volatile
 13451                           
 13452                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13453  080C  1283               	bcf	3,5	;RP0=0, select bank0
 13454  080D  141F               	bsf	31,0	;volatile
 13455  080E  0008               	return
 13456  080F                     __end_of_ADC_init:	
 13457                           
 13458                           	psect	text74
 13459  1F20                     __ptext74:	
 13460 ;; *************** function _isr *****************
 13461 ;; Defined at:
 13462 ;;		line 29 in file "isr.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;		None
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;  tempo           2    4[COMMON] unsigned int 
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  1    wreg      void 
 13469 ;; Registers used:
 13470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 300/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13476 ;;      Params:         0       0       0       0       0
 13477 ;;      Locals:         2       0       0       0       0
 13478 ;;      Temps:          4       0       0       0       0
 13479 ;;      Totals:         6       0       0       0       0
 13480 ;;Total ram usage:        6 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		Interrupt level 1
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           
 13490                           ;psect for function _isr
 13491  1F20                     _isr:	
 13492                           
 13493                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13494  1F20  188B               	btfsc	11,1	;volatile
 13495                           
 13496                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13497  1F21  108B               	bcf	11,1	;volatile
 13498                           
 13499                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13500                           
 13501                           ;isr.c: 37:       }
 13502  1F22  1C0C               	btfss	12,0	;volatile
 13503  1F23  2F9D               	goto	i1l5988
 13504                           
 13505                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13506  1F24  30B1               	movlw	177
 13507  1F25  008F               	movwf	15	;volatile
 13508                           
 13509                           ;isr.c: 42:                 TMR1L=0xF3;
 13510  1F26  30F3               	movlw	243
 13511  1F27  008E               	movwf	14	;volatile
 13512                           
 13513                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13514  1F28  100C               	bcf	12,0	;volatile
 13515                           
 13516                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13517  1F29  1683               	bsf	3,5	;RP0=1, select bank3
 13518  1F2A  1703               	bsf	3,6	;RP1=1, select bank3
 13519  1F2B  1FBC               	btfss	_generic_status^(0+384),7
 13520  1F2C  2F2F               	goto	i1l5936
 13521                           
 13522                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13523  1F2D  13BC               	bcf	_generic_status^(0+384),7
 13524  1F2E  0064               	clrwdt	;# 
 13525  1F2F                     i1l5936:	
 13526                           
 13527                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13528  1F2F  300A               	movlw	10
 13529  1F30  1683               	bsf	3,5	;RP0=1, select bank3
 13530  1F31  1703               	bsf	3,6	;RP1=1, select bank3
 13531  1F32  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13532  1F33  1803               	skipnc
 13533  1F34  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13534                           
 13535                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13536  1F35  3003               	movlw	3
 13537  1F36  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13538  1F37  30E8               	movlw	232
 13539  1F38  1903               	skipnz
 13540  1F39  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13541  1F3A  1C03               	skipc
 13542  1F3B  2F3E               	goto	i1l5940
 13543                           
 13544                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13545  1F3C  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13546  1F3D  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13547  1F3E                     i1l5940:	
 13548                           
 13549                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13550  1F3E  3001               	movlw	1
 13551  1F3F  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13552  1F40  30F4               	movlw	244
 13553  1F41  1903               	skipnz
 13554  1F42  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13555  1F43  1803               	skipnc
 13556  1F44  2F49               	goto	i1l696
 13557                           
 13558                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13559  1F45  1283               	bcf	3,5	;RP0=0, select bank0
 13560  1F46  1303               	bcf	3,6	;RP1=0, select bank0
 13561  1F47  1786               	bsf	6,7	;volatile
 13562  1F48  2F4C               	goto	i1l5944
 13563  1F49                     i1l696:	
 13564                           ;isr.c: 56:                 else
 13565                           
 13566                           
 13567                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13568  1F49  1283               	bcf	3,5	;RP0=0, select bank0
 13569  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
 13570  1F4B  1386               	bcf	6,7	;volatile
 13571  1F4C                     i1l5944:	
 13572                           
 13573                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13574  1F4C  1683               	bsf	3,5	;RP0=1, select bank3
 13575  1F4D  1703               	bsf	3,6	;RP1=1, select bank3
 13576  1F4E  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13577  1F4F  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13578  1F50  1903               	btfsc	3,2
 13579  1F51  2F5C               	goto	i1l698
 13580                           
 13581                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13582  1F52  300A               	movlw	10
 13583  1F53  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13584  1F54  3000               	movlw	0
 13585  1F55  1C03               	skipc
 13586  1F56  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13587  1F57  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13588                           
 13589                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13590  1F58  1283               	bcf	3,5	;RP0=0, select bank0
 13591  1F59  1303               	bcf	3,6	;RP1=0, select bank0
 13592  1F5A  1706               	bsf	6,6	;volatile
 13593                           
 13594                           ;isr.c: 63:                    }
 13595  1F5B  2F5F               	goto	i1l5950
 13596  1F5C                     i1l698:	
 13597                           ;isr.c: 64:                 else{
 13598                           
 13599                           
 13600                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13601  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
 13602  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
 13603  1F5E  1306               	bcf	6,6	;volatile
 13604  1F5F                     i1l5950:	
 13605                           
 13606                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13607  1F5F  1683               	bsf	3,5	;RP0=1, select bank3
 13608  1F60  1703               	bsf	3,6	;RP1=1, select bank3
 13609  1F61  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13610  1F62  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13611  1F63  1903               	btfsc	3,2
 13612  1F64  2F6F               	goto	i1l700
 13613                           
 13614                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13615  1F65  300A               	movlw	10
 13616  1F66  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13617  1F67  3000               	movlw	0
 13618  1F68  1C03               	skipc
 13619  1F69  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13620  1F6A  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13621                           
 13622                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13623  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
 13624  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
 13625  1F6D  1686               	bsf	6,5	;volatile
 13626                           
 13627                           ;isr.c: 71:                    }
 13628  1F6E  2F72               	goto	i1l5956
 13629  1F6F                     i1l700:	
 13630                           ;isr.c: 72:                 else{
 13631                           
 13632                           
 13633                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13634  1F6F  1283               	bcf	3,5	;RP0=0, select bank0
 13635  1F70  1303               	bcf	3,6	;RP1=0, select bank0
 13636  1F71  1286               	bcf	6,5	;volatile
 13637  1F72                     i1l5956:	
 13638                           
 13639                           ;isr.c: 77:                 tempodecorrido+=10;
 13640  1F72  300A               	movlw	10
 13641  1F73  1683               	bsf	3,5	;RP0=1, select bank3
 13642  1F74  1703               	bsf	3,6	;RP1=1, select bank3
 13643  1F75  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13644  1F76  1803               	skipnc
 13645  1F77  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13646                           
 13647                           ;isr.c: 78:                 milisegundo+=10;
 13648  1F78  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13649  1F79  1803               	skipnc
 13650  1F7A  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13651                           
 13652                           ;isr.c: 79:                 if(milisegundo==1000){
 13653  1F7B  30E8               	movlw	232
 13654  1F7C  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13655  1F7D  3003               	movlw	3
 13656  1F7E  1903               	skipnz
 13657  1F7F  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13658  1F80  1D03               	btfss	3,2
 13659  1F81  2F9D               	goto	i1l5988
 13660                           
 13661                           ;isr.c: 80:                    milisegundo=0;
 13662  1F82  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13663  1F83  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13664                           
 13665                           ;isr.c: 81:                    segundo++;
 13666  1F84  0AF6               	incf	_segundo,f	;volatile
 13667                           
 13668                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13669  1F85  1303               	bcf	3,6	;RP1=0, select bank1
 13670  1F86  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
 13671  1F87  1D03               	btfss	3,2
 13672  1F88  03EF               	decf	_TempoCNT_0^(0+128),f	;volatile
 13673                           
 13674                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13675  1F89  0874               	movf	_TempoCNT_1,w	;volatile
 13676  1F8A  1D03               	btfss	3,2
 13677  1F8B  03F4               	decf	_TempoCNT_1,f	;volatile
 13678                           
 13679                           ;isr.c: 88:                    if(segundo==60){
 13680  1F8C  303C               	movlw	60
 13681  1F8D  0676               	xorwf	_segundo,w	;volatile
 13682  1F8E  1D03               	btfss	3,2
 13683  1F8F  2F9D               	goto	i1l5988
 13684                           
 13685                           ;isr.c: 89:                       segundo=0;
 13686  1F90  01F6               	clrf	_segundo	;volatile
 13687                           
 13688                           ;isr.c: 90:                       minuto++;
 13689  1F91  1703               	bsf	3,6	;RP1=1, select bank3
 13690  1F92  0ABB               	incf	_minuto^(0+384),f	;volatile
 13691                           
 13692                           ;isr.c: 91:                       if(minuto==60){
 13693  1F93  303C               	movlw	60
 13694  1F94  063B               	xorwf	_minuto^(0+384),w	;volatile
 13695  1F95  1D03               	btfss	3,2
 13696  1F96  2F9D               	goto	i1l5988
 13697                           
 13698                           ;isr.c: 92:                          minuto=0;
 13699  1F97  01BB               	clrf	_minuto^(0+384)	;volatile
 13700                           
 13701                           ;isr.c: 93:                          hora++;
 13702  1F98  0AF5               	incf	_hora,f	;volatile
 13703                           
 13704                           ;isr.c: 94:                          if(hora==24){
 13705  1F99  3018               	movlw	24
 13706  1F9A  0675               	xorwf	_hora,w	;volatile
 13707  1F9B  1903               	btfsc	3,2
 13708                           
 13709                           ;isr.c: 95:                             hora=0;
 13710  1F9C  01F5               	clrf	_hora	;volatile
 13711  1F9D                     i1l5988:	
 13712                           ;isr.c: 99:                 }
 13713                           
 13714                           
 13715                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13716  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
 13717  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
 13718  1F9F  1E8C               	btfss	12,5	;volatile
 13719  1FA0  2FF3               	goto	i1l716
 13720                           
 13721                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13722  1FA1  1683               	bsf	3,5	;RP0=1, select bank3
 13723  1FA2  1703               	bsf	3,6	;RP1=1, select bank3
 13724  1FA3  301E               	movlw	30
 13725  1FA4  143C               	bsf	_generic_status^(0+384),0
 13726                           
 13727                           ;isr.c: 109:         tempo=30;
 13728  1FA5  00FB               	movwf	isr@tempo
 13729  1FA6  01FC               	clrf	isr@tempo+1
 13730                           
 13731                           ;isr.c: 110:         count=0;
 13732  1FA7  01A2               	clrf	_count^(0+384)	;volatile
 13733  1FA8  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13734                           
 13735                           ;isr.c: 111:         pointer=usart_buffer;
 13736  1FA9  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13737  1FAA  00B2               	movwf	_pointer^(0+384)
 13738  1FAB                     i1l6008:	
 13739                           ;isr.c: 112:         while(tempo)
 13740                           
 13741                           
 13742                           ;isr.c: 112:         while(tempo)
 13743  1FAB  087B               	movf	isr@tempo,w
 13744  1FAC  047C               	iorwf	isr@tempo+1,w
 13745  1FAD  1903               	btfsc	3,2
 13746  1FAE  2FDA               	goto	i1l6010
 13747                           
 13748                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13749  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
 13750  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
 13751  1FB1  1E8C               	btfss	12,5	;volatile
 13752  1FB2  2FD3               	goto	i1l6006
 13753                           
 13754                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13755  1FB3  1683               	bsf	3,5	;RP0=1, select bank3
 13756  1FB4  1703               	bsf	3,6	;RP1=1, select bank3
 13757  1FB5  0832               	movf	_pointer^(0+384),w
 13758  1FB6  0084               	movwf	4
 13759  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
 13760  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
 13761  1FB9  081A               	movf	26,w	;volatile
 13762  1FBA  1783               	bsf	3,7	;select IRP bank2
 13763  1FBB  0080               	movwf	0
 13764                           
 13765                           ;isr.c: 118:                 if(count<32+10 -1)
 13766  1FBC  1683               	bsf	3,5	;RP0=1, select bank3
 13767  1FBD  1703               	bsf	3,6	;RP1=1, select bank3
 13768  1FBE  0823               	movf	(_count+1)^(0+384),w	;volatile
 13769  1FBF  3A80               	xorlw	128
 13770  1FC0  00FF               	movwf	127
 13771  1FC1  3080               	movlw	128
 13772  1FC2  027F               	subwf	127,w
 13773  1FC3  1D03               	skipz
 13774  1FC4  2FC7               	goto	u516_25
 13775  1FC5  3029               	movlw	41
 13776  1FC6  0222               	subwf	_count^(0+384),w	;volatile
 13777  1FC7                     u516_25:	
 13778  1FC7  1803               	skipnc
 13779  1FC8  2FCF               	goto	i1l6004
 13780                           
 13781                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13782  1FC9  1683               	bsf	3,5	;RP0=1, select bank3
 13783  1FCA  1703               	bsf	3,6	;RP1=1, select bank3
 13784  1FCB  0AA2               	incf	_count^(0+384),f	;volatile
 13785  1FCC  1903               	skipnz
 13786  1FCD  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13787                           
 13788                           ;isr.c: 121:                    pointer++;
 13789  1FCE  0AB2               	incf	_pointer^(0+384),f
 13790  1FCF                     i1l6004:	
 13791                           
 13792                           ;isr.c: 123:                 tempo=30;
 13793  1FCF  301E               	movlw	30
 13794  1FD0  00FB               	movwf	isr@tempo
 13795  1FD1  01FC               	clrf	isr@tempo+1
 13796                           
 13797                           ;isr.c: 124:             }
 13798  1FD2  2FAB               	goto	i1l6008
 13799  1FD3                     i1l6006:	
 13800                           
 13801                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13802  1FD3  3001               	movlw	1
 13803  1FD4  02FB               	subwf	isr@tempo,f
 13804  1FD5  3000               	movlw	0
 13805  1FD6  1C03               	skipc
 13806  1FD7  03FC               	decf	isr@tempo+1,f
 13807  1FD8  02FC               	subwf	isr@tempo+1,f
 13808  1FD9  2FAB               	goto	i1l6008
 13809  1FDA                     i1l6010:	
 13810                           
 13811                           ;isr.c: 131:         (*pointer)=0;
 13812  1FDA  1683               	bsf	3,5	;RP0=1, select bank3
 13813  1FDB  1703               	bsf	3,6	;RP1=1, select bank3
 13814  1FDC  0832               	movf	_pointer^(0+384),w
 13815  1FDD  0084               	movwf	4
 13816  1FDE  1783               	bsf	3,7	;select IRP bank2
 13817  1FDF  0180               	clrf	0
 13818                           
 13819                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13820  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
 13821  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
 13822  1FE2  1C98               	btfss	24,1	;volatile
 13823  1FE3  2FF3               	goto	i1l716
 13824                           
 13825                           ;isr.c: 134:            CREN=0;
 13826  1FE4  1218               	bcf	24,4	;volatile
 13827                           
 13828                           ;isr.c: 135:            CREN=1;
 13829  1FE5  1618               	bsf	24,4	;volatile
 13830                           
 13831                           ;isr.c: 136:            tempo=RCREG;
 13832  1FE6  081A               	movf	26,w	;volatile
 13833  1FE7  00FB               	movwf	isr@tempo
 13834  1FE8  01FC               	clrf	isr@tempo+1
 13835                           
 13836                           ;isr.c: 137:            tempo=RCREG;
 13837  1FE9  081A               	movf	26,w	;volatile
 13838  1FEA  00FB               	movwf	isr@tempo
 13839  1FEB  01FC               	clrf	isr@tempo+1
 13840                           
 13841                           ;isr.c: 138:            tempo=RCREG;
 13842  1FEC  081A               	movf	26,w	;volatile
 13843  1FED  00FB               	movwf	isr@tempo
 13844  1FEE  01FC               	clrf	isr@tempo+1
 13845                           
 13846                           ;isr.c: 139:            usart_buffer[0]=0;
 13847  1FEF  1703               	bsf	3,6	;RP1=1, select bank2
 13848  1FF0  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13849                           
 13850                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13851  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
 13852  1FF2  14BC               	bsf	_generic_status^(0+384),1
 13853  1FF3                     i1l716:	
 13854  1FF3  087A               	movf	??_isr+3,w
 13855  1FF4  1283               	bcf	3,5	;RP0=0, select bank0
 13856  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
 13857  1FF6  00FF               	movwf	127
 13858  1FF7  0879               	movf	??_isr+2,w
 13859  1FF8  008A               	movwf	10
 13860  1FF9  0878               	movf	??_isr+1,w
 13861  1FFA  0084               	movwf	4
 13862  1FFB  0E77               	swapf	??_isr^(0+4294967168),w
 13863  1FFC  0083               	movwf	3
 13864  1FFD  0EFE               	swapf	126,f
 13865  1FFE  0E7E               	swapf	126,w
 13866  1FFF  0009               	retfie
 13867  2000                     __end_of_isr:	
 13868  007E                     btemp	set	126	;btemp
 13869  007E                     wtemp0	set	126
 13870                           
 13871                           	psect	intentry
 13872  0004                     __pintentry:	
 13873                           ;incstack = 0
 13874                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13875                           
 13876  0004                     interrupt_function:	
 13877  007E                     saved_w	set	btemp
 13878  0004  00FE               	movwf	btemp
 13879  0005  0E03               	swapf	3,w
 13880  0006  00F7               	movwf	??_isr
 13881  0007  0804               	movf	4,w
 13882  0008  00F8               	movwf	??_isr+1
 13883  0009  080A               	movf	10,w
 13884  000A  00F9               	movwf	??_isr+2
 13885  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13886  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13887  000D  087F               	movf	btemp+1,w
 13888  000E  00FA               	movwf	??_isr+3
 13889  000F  160A  158A  2F20   	ljmp	_isr


Data Sizes:
    Strings     15
    Constant    44
    Data        2
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK3            96      0      79
    BANK2            96      0      74

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK2[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK2[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decodify_Command
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___flmul
    _itoa->_utoa
    _utoa->___lwdiv
    ___flmul->___flsub
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___wmul->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Load_Work->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  193618
                                             74 BANK1      5     5      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   59115
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     298
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        23    18      5   48504
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   26140
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5    1132
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     630
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7   10575
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0  109784
                                             78 BANK0      2     2      0
                                             29 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5074
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4    9424
                                             32 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     636
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3415
                                             21 BANK0      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     238
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             13 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2177
                                             17 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3132
                                             17 BANK0      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             13 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     973
                                             10 BANK0      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    5076
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3341
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     238
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     710
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     915
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     459
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     254
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                             8     3      5    6404
                                             10 BANK0      8     3      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7384
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             10     5      5    7464
                                             10 BANK0     10     5      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    8354
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    8320
                                             22 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     6      7    8094
                                             10 BANK0     12     5      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     955
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8280
                                             32 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    8029
                                             23 BANK0      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7102
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     698
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4911
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    9214
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1466
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    7748
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5942
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    4977
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1806
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
         _EEPROM_Read_Byte
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
       ___fltol
       ___wmul
         ___fltol (ARG)
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fltol
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _Load_Work
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___lwdiv
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _captura
       _log
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fleq
         ___flge
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _eval_poly
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
         _frexp
           ___fleq
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4F       9       82.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      4A      11       77.1%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4F      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     146      12        0.0%
ABS                  0      0     146       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 30 07:52:19 2020

                              _USART_putc 0D87                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0574                                        PL4 0F1A  
                                      PL6 05A5                                        PL8 0F34  
                                      l69 012B           EEPROM_24C1025_Read_Buffer@range 0034  
        EEPROM_24C1025_Write_Str@chip_add 002F                                        fsr 0004  
                     ___wmul@multiplicand 002C                             _USART_put_int 0F04  
                Decodify_Command@tempchar 00E4                       __Umul8_16@word_mpld 0025  
                                     PL10 05BF                                       PL20 1785  
                                     PL12 0F3D                                       PL30 1798  
                                     PL22 0F76                                       PL14 0F4E  
                                     PL40 03FD                                       PL32 17A1  
                                     PL24 03E3                                       PL16 0F67  
                                     PL50 0410                                       PL42 17AA  
                                     PL34 05C7                                       PL26 178F  
                                     PL18 1775                                       PL60 0F8A  
                                     PL52 06E4                                       PL44 17B3  
                                     PL36 06D9                                       PL28 03EA  
                                     PL70 0F91                                       PL62 17C3  
                                     PL54 17BC                                       PL46 0407  
                                     PL38 03F3                                       PL80 17CF  
                                     PL72 0426                                       PL64 1E97  
                                     PL56 0418                                       PL48 0F84  
                                     PL74 0F96                                       PL66 05CF  
                                     PL58 041F                                       PL76 042C  
                                     PL68 1F1A                                       PL78 17C9  
            PROCULUS_VP_Write_String@text 0037                                       l420 07BC  
                                     l421 07C0                                       l182 03D7  
                                     l440 0901                                       l612 1E87  
                                     l613 1E88                                       l607 1E64  
                                     l617 0ED0                                       l473 0B79  
                                     l475 0BDB                                       l469 0B6C  
                                     l639 1C86                                       l583 1680  
                                     l871 176B                                       l929 0D8F  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0033  
                Decodify_Command@sizedata 00E5                                       _log 168C  
                                     _isr 1F20                                       fsr0 0004  
                           ??_Auto_Relay0 0061                             ??_Auto_Relay1 0061  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1E97  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0062  
                            ___flmul@bexp 0063                    PROCULUS_VP_Write@vetor 002F  
            ?_EEPROM_24C1025_Write_Buffer 002A                              ___flmul@sign 0061  
                            ___flmul@temp 006C                              ___flmul@prod 0068  
 __end_of_PROCULUS_Control_Register_Write 0FE6  __size_of_PROCULUS_Control_Register_Write 0028  
       ??_PROCULUS_Control_Register_Write 002E          ?_PROCULUS_Control_Register_Write 002D  
         _PROCULUS_Control_Register_Write 0FBE                              __CFG_LVP$OFF 0000  
                   ??_mediatemperaturaNTC 00CF                              ___fltol@exp1 0029  
                                    l1214 0520                                      l1216 055A  
                                    l1330 11F8                                      l1331 11F6  
                                    l1411 1633                                      l1340 1254  
                                    l1325 11DC                                      l1326 11DA  
                                    l1422 0C07                                      l1423 0C05  
                                    l1336 125D                                      l1440 0D25  
                                    l1353 12E6                                      l1338 124B  
                                    l1418 0BF0                                      l1347 1280  
                                    l1339 1252                                      l1419 0BEE  
                                    l1348 1282                                      l1373 1330  
                                    l1358 12FB                                      l1382 152C  
                                    l1383 1529                                      l1466 14C6  
                                    l1386 1544                                      l1387 1541  
                                    l1493 1D7A                                      l1479 14F8  
                                    l6102 03AE                                      l7000 1530  
                                    l6202 1222                                      l6122 1F18  
                                    l6114 1EF5                                      l6302 1331  
                                    l7110 162B                                      l7014 1548  
                                    l6118 1F06                                      l6224 1263  
                                    l7104 1615                                      l6072 0D5A  
                                    l8000 0B70                                      l6218 1257  
                                    l7034 1569                                      l7026 1561  
                                    l6172 1204                                      l6500 0352  
                                    l7116 1634                                      l7052 159D  
                                    l7060 1585                                      l6068 0D52  
                                    l6412 0D03                                      l6340 0C15  
                                    l6324 0BF4                                      l7124 1D3E  
                                    l8012 0B7D                                      l8020 06EC  
                                    l6254 12F0                                      l6238 1286  
                                    l6510 0364                                      l7310 0193  
                                    l7062 15BE                                      l7134 1D58  
                                    l6248 12D8                                      l6096 03AA  
                                    l6440 02C8                                      l7320 01B2  
                                    l7240 0107                                      l7224 0092  
                                    l7160 0070                                      l6408 0CEF  
                                    l6336 0C0B                                      l8120 07A2  
                                    l6290 1320                                      l6274 130B  
                                    l6266 1300                                      l6506 0362  
                                    l6442 02CB                                      l7242 0108  
                                    l7226 00D6                                      l7218 00C7  
                                    l7162 0073                                      l7058 15BC  
                                    l6418 0D18                                      l6268 1302  
                                    l6508 02E6                                      l6444 02CC  
                                    l6532 03A3                                      l7164 0074  
                                    l7084 15EB                                      l7076 15C4  
                                    l6604 1679                                      l7412 1D18  
                                    l8140 07DB                                      ?_log 00B0  
                                    l6278 130D                                      l6710 01EB  
                                    l7318 01AB                                      l7238 0104  
                                    l7430 1E58                                      l7078 15D7  
                                    l6480 0334                                      l7344 05DC  
                                    l6712 01EC                                      l7088 15ED  
                                    l6560 0FE8                                      l6616 1D94  
                                    l6624 1DA7                                      l7600 1DED  
                                    l7504 17D8                                      l6298 132C  
                                    l6650 14F6                                      l6642 14D3  
                                    l6634 14BE                                      l6482 0337  
                                    l7098 1601                                      l7370 0DF0  
                                    l6554 0FE6                                      l6538 0F04  
                                    l7418 0F13                                      l6394 0CD9  
                                    l8090 0771                                      l6572 053D  
                                    l6652 14EC                                      l6644 14DC  
                                    l6484 0338                                      l6708 01E8  
                                    l7284 016C                                      l7428 1E47  
                                    l7452 1C9D                                      l6388 0CC6  
                                    l7612 1E18                                      l7516 133F  
                                    ?_isr 0077                                      l6566 050F  
                                    l6646 14E7                                      l6638 14D1  
                                    l7286 016F                                      l7358 1E26  
                                    l6806 0EEF                                      l6910 080F  
                                    l6830 0DE6                                      l6822 0DC5  
                                    l6398 0CDB                                      l6664 150E  
                                    l7288 0170                                      l6592 1662  
                                    l7464 0DA6                                      l7480 0D70  
                                    l7472 1C70                                      l8176 0B88  
                                    l7800 085D                                      l7570 10FF  
                                    l7562 10F0                                      l6754 0255  
                                    l6906 0FD2                                      l6922 082A  
                                    l7482 0D74                                      l7554 1770  
                                    l7714 1080                                      l7722 108E  
                                    l6756 0258                                      l6780 027C  
                                    l6836 1E6D                                      l6908 0FE2  
                                    l6924 0841                                      l6932 06CA  
                                    l6828 0DC9                                      l7820 08D0  
                                    l7804 0867                                      l6676 1EB7  
                                    l7740 10E0                                      l7750 046E  
                                    l7582 1116                                      l7574 1107  
                                    l6758 0259                                      l6790 0292  
                                    l6838 1E70                                      l7478 0D69  
                                    l7910 0A3A                                      l7902 0A0A  
                                    l7646 1CC6                                      l6694 11BF  
                                    l7558 1773                                      l7734 10AD  
                                    l7726 1095                                      l7752 0471  
                                    l7744 0436                                      l6864 0DB6  
                                    l6960 0683                                      l6944 0660  
                                    l6928 06C2                                      l7832 0903  
                                    l7808 087A                                      l7680 1CE7  
                                    l6880 16A7                                      l7586 056C  
                                    l7754 046A                                      l7746 0437  
                                    l7770 0492                                      l6786 0290  
                                    l6866 0DBE                                      l6970 068F  
                                    l6946 0665                                      l7922 0A78  
                                    l7842 0914                                      l7666 1CE0  
                                    l7588 0570                                      l6788 020F  
                                    l6972 0699                                      l6964 068B  
                                    l7916 0A5D                                      l7860 0952  
                                    l7852 0936                                      l7836 090C  
                                    l7828 08FA                                      l6884 16C3  
                                    l7774 04E7                                      l7942 0ADC  
                                    l7934 0AA8                                      l7846 0927  
                                    l7776 04EA                                      l7768 0491  
                                    l7952 0AF6                                      l7928 0A98  
                                    l7872 0976                                      l7778 04E3  
                                    l7970 0B28                                      l7962 0B10  
                                    l7890 09C7                                      l7866 096B  
                                    l7698 102C                                      l7884 09A7  
                                    _BETA 1834                                      l7982 0B3C  
                                    l7878 0988                                      l7976 0B31  
                                    l7896 09EC                                      l7994 0B60  
                                    l7988 0B4C                                      STR_1 183C  
                            __CFG_WDTE$ON 0000                                      STR_2 1848  
                                    STR_3 1847                                      STR_4 1849  
                                    STR_5 1847                                      STR_6 1849  
                                    STR_7 1847                                      STR_8 1844  
                                    _CREN 00C4                                      u6000 03A0  
                                    u5233 03C0                                      u6035 0FEE  
                                    u6135 166B                                      u7015 1D24  
                                    u5275 1F14                                      u5380 1242  
                                    _RCEN 048B                                      u6333 01D7  
                                    u7045 1CA6                                      u7205 1E00  
                                    u5390 1243                                      u5375 1236  
                                    u6343 01E6                                      u6175 1D9A  
                                    u6353 0223                                      u7225 1DBA  
                                    u5493 1298                                      u6373 0253  
                                    u7093 17EA                                      u6535 066E  
                                    u6705 15AB                                      u5915 0CF8  
                                    u6805 160A                                      u5925 0D0E  
                                    u5943 02B7                                      u6815 1620  
                                    u5953 02C6                                      u5963 0305  
                                    u7707 01BE                                      u6923 00F3  
                                    u7717 029E                                      u6933 0102  
                                    u7727 03C9                                      u5983 0332  
                                    u6943 013B                                      u6863 005F  
                                    u7647 06F4                                      u6873 006E  
                                    u7657 17F2                                      u5995 02F3  
                                    u6963 016A                                      u6883 00A8  
                                    u7667 0FF6                                      u7677 1E3E  
                                    u7687 1E91                                      u6993 0604  
                                    u7697 0EE0                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0033  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 03E3                                      _main 06EC  
                                    _hora 0075                                      _itoa 0D98  
       __size_of_EEPROM_24C1025_Write_Int 0018                                      btemp 007E  
                                    _utoa 1D39         __size_of_EEPROM_24C1025_Write_Str 0093  
                                    log@x 00B0                 ?_EEPROM_24C1025_Write_Int 0037  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 002A  
             __size_of_EEPROM_Read_String 0016                                      start 0012  
                        __end_of_ADC_init 080F                          _BALANCE_RESISTOR 1838  
                         ___fldiv@new_exp 00B1        EEPROM_24C1025_Read_Buffer@sizedata 002E  
                           ??_Rele0Ligado 0020                             ??_Rele1Ligado 0020  
                                   ??_log 006E                                     ??_isr 0077  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0077                          ?_I2C_Master_Stop 0077  
                          ?_USART_put_int 002A                     __size_of_ADC_Read_NTC 0172  
                           ___fltol@sign1 0028                           __end_of___fladd 1337  
                                   ?_main 0077                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 1638  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 0D30                           __end_of___flsub 1654  
                         __end_of___fltol 06A8                                     _ANSEL 0188  
                         __end_of___lldiv 1E21                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 167E  
                         __end_of___lwmod 1DAC                                     i1l700 1F6F  
                                   i1l716 1FF3                                     i1l696 1F49  
                                   i1l698 1F5C                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 003A                                     _TRISE 0089  
                                   _TXREG 0019                           __end_of_captura 168C  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
               EEPROM_Read_Integer@result 0028                                     _canal 01B5  
            __size_of_EEPROM_Read_Integer 001B                                     _count 01A2  
                                   _frexp 1E9D             ??_EEPROM_24C1025_Write_Buffer 0031  
      __size_of_EEPROM_24C1025_Write_Byte 0014                                     _texto 01BD  
              ?_EEPROM_24C1025_Write_Byte 0037                       __end_of_Auto_Relay0 048B  
                     __end_of_Auto_Relay1 04FE                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
                 ADC_Read_NTC@resistencia 00C4           EEPROM_24C1025_Read_Byte@mem_add 0036  
                            __end_of_BETA 1838                   ADC_Read_NTC@temperatura 00CB  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0012                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 0035  
                            _ADC_Read_NTC 1337                               ?_USART_putc 0077  
                             log@exponent 006E                              __end_of_main 07E7  
                              _Histerese0 019C                                _Histerese1 01B8  
                            __end_of_itoa 0DB2                              __end_of_utoa 1D88  
                          Send_To_MB@size 0021                          _USART_put_buffer 1C99  
                __end_of_EEPROM_Read_Byte 0EE9                                    ??_main 00EA  
                                  ??_itoa 0033                          __end_of_Save_Log 0659  
                                  ??_utoa 002B                       __end_of_Rele0Ligado 1107  
                        _USART_put_string 0DC5                       __end_of_Rele1Ligado 111E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0077  
               EEPROM_Write_Byte@last_GIE 0024                  _mediatemperaturaNTC$2336 00D0  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0033                                    ?_frexp 002C  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0D30                     EEPROM_Write_Integer@i 002B  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 0FA6  
                                  i1l6010 1FDA                                    i1l6004 1FCF  
                                  i1l6006 1FD3                                    i1l6008 1FAB  
                          _Rele0Desligado 056C                                    i1l5940 1F3E  
                                  i1l5950 1F5F                                    i1l5944 1F4C  
                                  i1l5936 1F2F                                    i1l5956 1F72  
                                  i1l5988 1F9D                                    u516_25 1FC7  
       __end_of_EEPROM_24C1025_Write_Byte 1C6E                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0040                        __size_of_Load_Work 00D8  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 0043  
                        __end_of___xxtofl 1517                            _Rele1Desligado 0570  
                      PROCULUS_VP_Write@i 0034                  __end_of_Decodify_Command 0BDC  
                              _TempoCNT_0 00EF                                _TempoCNT_1 0074  
                              _TempoOFF_0 01B9                                _TempoOFF_1 01B6  
                ?_EEPROM_24C1025_Read_Int 0036                  ?_EEPROM_24C1025_Read_Str 002A  
                _I2C_Master_RepeatedStart 03E0      __size_of_EEPROM_24C1025_Write_Buffer 00CF  
                                  ___flge 04FE                                    ___fleq 1EE4  
                               ??___fladd 0041                                    ___wmul 06C0  
                               ??___fldiv 00A8                                 ??___flmul 005D  
                               ??___flsub 0055                                 ??___fltol 0024  
                         ??_USART_put_int 002C                                 ??___lldiv 0028  
                                  _header 01A4                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 013A  
                       _USART_to_Protocol 1CEE                           USART_putc@value 0020  
       EEPROM_24C1025_Read_Buffer@cnt_103 0032                                    _minuto 01BB  
                               ??_captura 0022                        ?_USART_to_Protocol 0077  
            Decodify_Command@add_24LCxxxx 00E6                                    _strcat 0D67  
                                  _strcpy 1C6E                                    _strlen 0DB2  
       EEPROM_24C1025_Read_Buffer@mem_add 002A          __end_of_EEPROM_24C1025_Read_Byte 07FF  
                      __size_of__Umul8_16 001B                               _Auto_Relay0 0432  
                             _Auto_Relay1 048B                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 003C                                 ?_ADC_init 0077  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                  __end_of_Rele0Desligado 0570                       __size_of_USART_putc 0011  
                              ___flge@ff1 0055                                ___flge@ff2 0059  
                  __end_of_Rele1Desligado 0574                              ___xxtofl@arg 0035  
                            ___xxtofl@exp 0034                              ___xxtofl@val 002B  
                              ___fleq@ff1 0020                                ___fleq@ff2 0024  
                        __end_oflog@coeff 1834                   __end_of__initialization 0032  
     PROCULUS_Control_Register_Write@size 002D                              eval_poly@res 00AC  
                              ___fltol@f1 0020                              _Board_Number 01B4  
                          __pcstackCOMMON 0077                  __size_of_PROCULUS_Buzzer 0018  
               __end_of_USART_to_Protocol 1D39                              __pidataBANK3 0000  
                             _Rele0Ligado 10F0                             __end_of_frexp 1EE4  
                             _Rele1Ligado 1107                     USART_put_string@vetor 0021  
                              __end_ofPL2 05A5                                __end_ofPL4 0F34  
                              __end_ofPL6 05BF                                __end_ofPL8 0F3D  
                       __end_of_Load_Work 0EC8                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0023                  __size_of_my_delay_ms_WDT 002D  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 183C  
        __end_of_EEPROM_24C1025_Write_Int 06C0                        Decodify_Command@hh 00BD  
                      Decodify_Command@mm 00C7          __end_of_EEPROM_24C1025_Write_Str 00E2  
                      Decodify_Command@ss 00D1                      USART_put_buffer@loop 0026  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1E5C           __end_of_EEPROM_24C1025_Fill_All 0607  
                         ?_Rele0Desligado 0077                                   ??_frexp 0031  
                             ?_Send_To_MB 0077                    __size_of_Send_Reply_OK 0007  
                              __pbssBANK1 00EF                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        __size_of_eval_poly 00AA  
                         ?_Rele1Desligado 0077           __end_of_EEPROM_24C1025_Read_Int 004F  
         __end_of_EEPROM_24C1025_Read_Str 01C4                  ?_Package_Usart_is_for_me 0077  
                               ?_Save_Log 0040                            _PROCULUS_Delay 0FE6  
                       __end_of__Umul8_16 0D67                                __pmaintext 06EC  
                                 ?___flge 0055                                   ?___fleq 0020  
                     Save_Log@add_datalog 0040                       _EEPROM_Read_Integer 0EE9  
                                 ?___wmul 002A                PROCULUS_Show_Screen@screen 0031  
                              __pintentry 0004                      mediatemperaturaNTC@i 00D9  
                    _PROCULUS_Show_Screen 0F9C                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
             __end_of_mediatemperaturaNTC 10F0                                 ?___xxtofl 002B  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00DB  
             EEPROM_24C1025_Read_Int@data 003B                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1C5A                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 07E7  
                              __stringtab 1800                       PROCULUS_VP_Write@vp 002D  
             ??_EEPROM_24C1025_Write_Byte 003C                  __end_of_USART_put_buffer 1CB5  
              __end_of_EEPROM_Read_String 1C99                    __end_of_PROCULUS_Delay 1000  
                __end_of_USART_put_string 0DF0                      __size_of_my_delay_ms 002C  
                              ??_Save_Log 0044                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0033  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 004B  
             PROCULUS_Buzzer@time_ms_x_10 0031                                   _Status0 01A8  
                                 _Status1 01A6                           __size_of___flge 006E  
                         __size_of___fleq 0036                                   ___fladd 11C8  
                                 ___fldiv 1517                  EEPROM_Write_Integer@addr 0029  
                                 ___flmul 0BDC                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1638                                   ___fltol 0659  
                                 ___lldiv 1DD9                           __size_of___wmul 0019  
                                 ___lwdiv 1654                                   ___lwmod 1D88  
                           _Send_Reply_OK 0F13                       __size_of_Send_To_MB 001C  
                   ?_PROCULUS_Show_Screen 0031                         __end_of_eval_poly 11C8  
                                 _captura 167E                                   __ptext1 1010  
                                 __ptext2 17D4                                   __ptext3 175F  
                                 __ptext4 1337                                   __ptext5 168C  
                                 __ptext6 1E9D                                   __ptext7 1EE4  
                                 __ptext8 111E                                   __ptext9 167E  
                       ??_PROCULUS_Buzzer 0033                                   _destino 01B3  
                       ?_EEPROM_Read_Byte 0077                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0013  
                            __size_of_log 00D3                              __size_of_isr 00E0  
                              ??___xxtofl 002F                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 0076                  __size_of_I2C_Master_Init 002D  
                __size_of_I2C_Master_Read 0024                            _usart_protocol 01CD  
                   ??_EEPROM_Read_Integer 0026                  __size_of_I2C_Master_Wait 0009  
                __size_of_I2C_Master_Stop 0003             EEPROM_24C1025_Write_Int@local 003E  
                                 _pointer 01B2             EEPROM_24C1025_Write_Byte@data 003B  
                                 clrloop0 1009                        __end_of_USART_init 1CEE  
         __end_of_Package_Usart_is_for_me 1775                        __end_of_USART_putc 0D98  
                    end_of_initialization 0032                  _EEPROM_24C1025_Write_Int 06A8  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 004F  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0036                          ADC_Read_NTC@calc 00BE  
               __size_of_I2C_Master_Start 0008                 __size_of_I2C_Master_Write 0008  
                       ?_Decodify_Command 0077                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002C                                 _RL0Status 01DE  
                               _RL1Status 01DD                        ??_Decodify_Command 006E  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0077  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 1C5A  
                                 utoa@val 0027          __size_of_EEPROM_24C1025_Fill_All 0032  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 01B0  
            ??_EEPROM_24C1025_Read_Buffer 0031             EEPROM_24C1025_Write_Str@range 0030  
                mediatemperaturaNTC@canal 00D4                               ___fladd@grs 004C  
        __size_of_EEPROM_24C1025_Read_Int 0019          __size_of_EEPROM_24C1025_Read_Str 00E2  
                            ?_Auto_Relay0 0077                              ?_Auto_Relay1 0077  
                           ___xxtofl@sign 0033       __end_of_EEPROM_24C1025_Write_Buffer 0373  
             _EEPROM_24C1025_Write_Buffer 02A4                               ___fldiv@grs 00B3  
                             ___fldiv@rem 00AC      PROCULUS_Control_Register_Write@vetor 002F  
        EEPROM_24C1025_Write_Buffer@count 0033           EEPROM_24C1025_Write_Int@mem_add 0037  
        EEPROM_24C1025_Write_Buffer@range 0035                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00DE                     PROCULUS_VP_Write@size 0031  
         EEPROM_24C1025_Read_Str@chip_add 0031                               ___flmul@grs 0064  
                _PROCULUS_VP_Write_String 1C48                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00E0                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0033                              ?_Rele0Ligado 0077  
                            ?_Rele1Ligado 0077                            __end_of___flge 056C  
                          __end_of___fleq 1F1A                            __end_of___wmul 06D9  
                   __end_of_USART_put_int 0F13                               _BAUDCTLbits 0187  
                        ??_Rele0Desligado 0020                            __end_of_strcat 0D87  
                          __end_of_strcpy 1C83                            __end_of_strlen 0DC5  
                             __end_ofPL10 05C7                               __end_ofPL20 178F  
                             __end_ofPL12 0F4E                               __end_ofPL30 17A1  
                             __end_ofPL22 0F84                               __end_ofPL14 0F67  
                             __end_ofPL40 0407                               __end_ofPL32 17AA  
                             __end_ofPL24 03EA                               __end_ofPL16 0F76  
                             __end_ofPL50 0418                               __end_ofPL42 17B3  
                             __end_ofPL34 05CF                               __end_ofPL26 1798  
                             __end_ofPL18 1785                               __end_ofPL60 0F91  
                             __end_ofPL52 06EC                               __end_ofPL44 17BC  
                             __end_ofPL36 06E4                               __end_ofPL28 03F3  
                             __end_ofPL70 0F96                               __end_ofPL62 17C9  
                             __end_ofPL54 17C3                               __end_ofPL46 0410  
                             __end_ofPL38 03FD                               __end_ofPL80 17D4  
                             __end_ofPL72 042C                               __end_ofPL64 1E9D  
                             __end_ofPL56 041F                               __end_ofPL48 0F8A  
                             __end_ofPL74 0F9C                               __end_ofPL66 05D5  
                             __end_ofPL58 0426                               __end_ofPL76 0432  
                             __end_ofPL68 1F20                               __end_ofPL78 17CF  
                     start_initialization 0015                                eval_poly@d 00A4  
                              eval_poly@n 00A5                                eval_poly@x 00A0  
                        ??_Rele1Desligado 0020                                 _Load_Work 0DF0  
                             __end_of_log 175F                               __end_of_isr 2000  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                              frexp@value 002C                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1E44  
        EEPROM_24C1025_Write_Int@chip_add 003D                                 _SetPoint0 0070  
                               _SetPoint1 0198                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DD                                 _TempoON_0 01BA  
                               _TempoON_1 01B7                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 005D  
                                ??___fleq 0028                         __size_of_Save_Log 0052  
                                ??___wmul 002E                                 __Umul8_16 0D4C  
                             __pdataBANK3 01DD                        __end_of_Send_To_MB 0D4C  
        __size_of_Package_Usart_is_for_me 0016                                  ??_strcat 0022  
                                ??_strcpy 0021                                  ??_strlen 0023  
              ??_EEPROM_24C1025_Read_Byte 003A        EEPROM_24C1025_Write_Buffer@mem_add 002A  
                               ___fladd@a 003D                                 ___fladd@b 0039  
        EEPROM_24C1025_Write_Byte@mem_add 0037                                 ___fldiv@a 00A0  
                               ___fldiv@b 00A4                                 ___flmul@a 0059  
                               ___flmul@b 0055                               __pbssCOMMON 0070  
                               ___flsub@a 004D                                 ___flsub@b 0051  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                                ?_Load_Work 0077  
                       _PROCULUS_VP_Write 080F                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 002D                       USART_put_buffer@ptr 0027  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0018  
                        _I2C_Master_Start 037B                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0373                       ??_PROCULUS_VP_Write 0032  
                          _tempodecorrido 01A0                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 0FA6                          ___lwdiv@dividend 0022  
                           ?_ADC_Read_NTC 00B9            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 0039  
                                ?___fldiv 00A0                   _EEPROM_24C1025_Fill_All 05D5  
                                ?___flmul 0055                                  ?___flsub 004D  
                                ?___fltol 0020                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1C83  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 02A4                _EEPROM_24C1025_Read_Buffer 01C4  
                                ?_captura 0020                                 __pstrings 1800  
                         _my_delay_ms_WDT 03AA                   _EEPROM_24C1025_Read_Int 0036  
                 _EEPROM_24C1025_Read_Str 00E2                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 003D                ??_EEPROM_24C1025_Write_Str 002F  
                     ?_EEPROM_Read_String 0023                                 _eval_poly 111E  
               __end_of_PROCULUS_VP_Write 0845                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 0804                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                      __size_of_Auto_Relay0 0059  
                    __size_of_Auto_Relay1 0073                          ??_PROCULUS_Delay 0022  
                          __size_of_frexp 0047            EEPROM_24C1025_Read_Buffer@data 002F  
            __size_of_mediatemperaturaNTC 00E0            EEPROM_24C1025_Read_Buffer@ctrl 0035  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0021  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                          ___wmul@product 002E                      ??_EEPROM_Read_String 0024  
                               clear_ram0 1008                                  _PIE1bits 008C  
                          ??_ADC_Read_NTC 0070                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0030                    Decodify_Command@OutPut 00E0  
                 mediatemperaturaNTC@Temp 00D5                           _Delay_Led_Usart 01AC  
            EEPROM_24C1025_Read_Byte@data 003B                      __size_of_Rele0Ligado 0017  
                    __size_of_Rele1Ligado 0017               __end_of_EEPROM_Read_Integer 0F04  
                              _ADCON0bits 001F                               __stringbase 180F  
                              _ADCON1bits 009F                         ___wmul@multiplier 002A  
               __size_of_Decodify_Command 0397                      _EEPROM_Write_Integer 1E21  
          EEPROM_24C1025_Read_Int@mem_add 0036                                ?_eval_poly 00A0  
                               main@reset 00ED                               ??_Load_Work 00B9  
              ??_PROCULUS_VP_Write_String 0038                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 0FBE                            _generic_status 01BC  
                               frexp@eptr 0030                                _EECON1bits 018C  
                                _Save_Log 0607                 ??_EEPROM_24C1025_Fill_All 0042  
                     __end_of_my_delay_ms 1800              EEPROM_24C1025_Read_Str@range 0032  
            EEPROM_24C1025_Read_Str@texto 002E                   __end_of_my_delay_ms_WDT 03D7  
                            my_delay_ms@i 0026                             ADC_Read_NTC@B 00C2  
                           ADC_Read_NTC@i 00C8                               ??__Umul8_16 0023  
       __size_of_I2C_Master_RepeatedStart 0003                          __size_of___fladd 016F  
               ??_EEPROM_24C1025_Read_Int 003A                   _Package_Usart_is_for_me 175F  
                        __size_of___fldiv 0121                 ??_EEPROM_24C1025_Read_Str 002F  
                        __size_of___flmul 0154                 ?_I2C_Master_RepeatedStart 0077  
                        __size_of___flsub 001C                          __size_of___fltol 004F  
                        __size_of___lldiv 0048                          __size_of___lwdiv 002A  
                        __size_of___lwmod 0024                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 0034                       USART_put_string@ptr 0023  
                        __size_of_captura 000E                     ?_EEPROM_Write_Integer 0025  
                            _Temperatura0 0194                              _Temperatura1 0190  
                         _I2C_Master_Init 1DAC                           _I2C_Master_Read 0386  
                                ___xxtofl 14A9                __size_of_PROCULUS_VP_Write 0036  
                         _I2C_Master_Wait 03D7                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 003A                           _I2C_Master_Stop 0383  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0024  
                                __ptext10 1CB5                                  __ptext11 1DAC  
                                __ptext20 0D4C                                  __ptext12 1DD9  
                                __ptext21 1CEE                                  __ptext13 0845  
                                __ptext30 0DB2                                  __ptext22 1C99  
                                __ptext14 1C6E                                  __ptext31 080F  
                                __ptext23 0D30                                  __ptext15 0D67  
                                __ptext40 1517                                  __ptext32 0F9C  
                                __ptext24 0F13                                  __ptext16 0D98  
                                __ptext41 0EE9                                  __ptext33 0FA6  
                                __ptext25 0DC5                                  __ptext17 1D39  
                                __ptext50 0036                                  __ptext42 1E44  
                                __ptext34 1654                                  __ptext26 0607  
                                __ptext18 1D88                                  __ptext51 07E7  
                                __ptext43 1E21                                  __ptext35 0FBE  
                                __ptext27 06C0                                  __ptext19 0BDC  
                                __ptext60 0383                                  __ptext52 01C4  
                                __ptext44 1E5C                                  __ptext36 0F04  
                                __ptext28 0659                                  __ptext61 037B  
                                __ptext53 03E0                                  __ptext45 1C83  
                                __ptext37 0D87                                  __ptext29 1C48  
                                __ptext70 04FE                                  __ptext62 03D7  
                                __ptext54 0386                                  __ptext46 0EC8  
                                __ptext38 0FE6                                  __ptext71 10F0  
                                __ptext63 048B                                  __ptext55 05D5  
                                __ptext47 004F                                  __ptext39 0DF0  
                                __ptext72 056C                                  __ptext64 14A9  
                                __ptext56 06A8                                  __ptext48 1C5A  
                                __ptext73 0804                                  __ptext65 1107  
                                __ptext57 02A4                                  __ptext49 00E2  
                                __ptext74 1F20                                  __ptext66 0570  
                                __ptext58 03AA                                  __ptext67 0432  
                                __ptext59 0373                                  __ptext68 1638  
                                __ptext69 11C8                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 002A                                strcpy@from 0020  
                           __size_of_main 00FB                             __size_of_itoa 001A  
                           __size_of_utoa 004F              EEPROM_24C1025_Fill_All@value 0040  
              PROCULUS_VP_Write_String@vp 0035       EEPROM_24C1025_Write_Buffer@sizedata 002E  
                             _milisegundo 01AA                            _Delay_Led_Tmr0 01AE  
           __size_of_PROCULUS_Show_Screen 000A                       _EEPROM_Write_String 1E44  
                                log@coeff 1810                  __end_of_I2C_Master_Start 0383  
                __end_of_I2C_Master_Write 037B                                _INTCONbits 000B  
                             ??_eval_poly 00A7                      __end_of_ADC_Read_NTC 14A9  
                                isr@tempo 007B                                  itoa@base 0031  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0024  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0031  
                       USART_put_int@dado 002C                          _EEPROM_Read_Byte 0EC8  
                             _my_delay_ms 17D4                         ADC_Read_NTC@canal 0077  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 000F  
            EEPROM_24C1025_Write_Int@data 003B                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0026                   EEPROM_Write_String@dado 0025  
                       ADC_Read_NTC@value 00C9                        USART_init@baudrate 0020  
                               stringcode 180A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 0F1A                       _mediatemperaturaNTC 1010  
                 __end_of_I2C_Master_Init 1DD9                   __end_of_I2C_Master_Read 03AA  
                 __end_of_I2C_Master_Wait 03E0                   __end_of_I2C_Master_Stop 0386  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0031  
               __size_of_USART_put_buffer 001C               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 0042                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 0029                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0845  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 002B                          ___lldiv@quotient 0028  
                       I2C_Master_Write@d 0020                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0023  
                                strcpy@to 0022                           ___lwmod@counter 0024  
                                stringdir 180A                                  stringtab 1800  
                       _EEPROM_Write_Byte 1E5C            EEPROM_24C1025_Read_Str@mem_add 002A  
                           ___fladd@signs 0049                      ?_mediatemperaturaNTC 0077  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                 __size_of_Rele0Desligado 0004                              ___fladd@aexp 004A  
                            ___fladd@bexp 004B         __size_of_EEPROM_24C1025_Read_Byte 0018  
               ?_EEPROM_24C1025_Read_Byte 0036                       EEPROM_Read_String@c 0025  
                    __Umul8_16@multiplier 0027                   __size_of_Rele1Desligado 0004  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0023  
                              _USART_init 1CB5  
