

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 12:28:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F886 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  0105                     	;# 
   176  0107                     	;# 
   177  0108                     	;# 
   178  0109                     	;# 
   179  010C                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  0185                     	;# 
   185  0187                     	;# 
   186  0188                     	;# 
   187  0189                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0089                     	;# 
   229  008C                     	;# 
   230  008D                     	;# 
   231  008E                     	;# 
   232  008F                     	;# 
   233  0090                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0097                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  0105                     	;# 
   252  0107                     	;# 
   253  0108                     	;# 
   254  0109                     	;# 
   255  010C                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  0185                     	;# 
   261  0187                     	;# 
   262  0188                     	;# 
   263  0189                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  000E                     	;# 
   280  000E                     	;# 
   281  000F                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0015                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001D                     	;# 
   298  001E                     	;# 
   299  001F                     	;# 
   300  0081                     	;# 
   301  0085                     	;# 
   302  0086                     	;# 
   303  0087                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  008F                     	;# 
   309  0090                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0094                     	;# 
   316  0095                     	;# 
   317  0096                     	;# 
   318  0097                     	;# 
   319  0098                     	;# 
   320  0099                     	;# 
   321  009A                     	;# 
   322  009B                     	;# 
   323  009C                     	;# 
   324  009D                     	;# 
   325  009E                     	;# 
   326  009F                     	;# 
   327  0105                     	;# 
   328  0107                     	;# 
   329  0108                     	;# 
   330  0109                     	;# 
   331  010C                     	;# 
   332  010C                     	;# 
   333  010D                     	;# 
   334  010E                     	;# 
   335  010F                     	;# 
   336  0185                     	;# 
   337  0187                     	;# 
   338  0188                     	;# 
   339  0189                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  000E                     	;# 
   357  000F                     	;# 
   358  0010                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0014                     	;# 
   363  0015                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001D                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  0081                     	;# 
   377  0085                     	;# 
   378  0086                     	;# 
   379  0087                     	;# 
   380  0089                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0094                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009C                     	;# 
   400  009D                     	;# 
   401  009E                     	;# 
   402  009F                     	;# 
   403  0105                     	;# 
   404  0107                     	;# 
   405  0108                     	;# 
   406  0109                     	;# 
   407  010C                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  010E                     	;# 
   411  010F                     	;# 
   412  0185                     	;# 
   413  0187                     	;# 
   414  0188                     	;# 
   415  0189                     	;# 
   416  018C                     	;# 
   417  018D                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  008F                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  0105                     	;# 
   480  0107                     	;# 
   481  0108                     	;# 
   482  0109                     	;# 
   483  010C                     	;# 
   484  010C                     	;# 
   485  010D                     	;# 
   486  010E                     	;# 
   487  010F                     	;# 
   488  0185                     	;# 
   489  0187                     	;# 
   490  0188                     	;# 
   491  0189                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000D                     	;# 
   507  000E                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0014                     	;# 
   515  0015                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001D                     	;# 
   526  001E                     	;# 
   527  001F                     	;# 
   528  0081                     	;# 
   529  0085                     	;# 
   530  0086                     	;# 
   531  0087                     	;# 
   532  0089                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  008F                     	;# 
   537  0090                     	;# 
   538  0091                     	;# 
   539  0092                     	;# 
   540  0093                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0097                     	;# 
   547  0098                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  0105                     	;# 
   556  0107                     	;# 
   557  0108                     	;# 
   558  0109                     	;# 
   559  010C                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  0185                     	;# 
   565  0187                     	;# 
   566  0188                     	;# 
   567  0189                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  000E                     	;# 
   585  000F                     	;# 
   586  0010                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  0081                     	;# 
   605  0085                     	;# 
   606  0086                     	;# 
   607  0087                     	;# 
   608  0089                     	;# 
   609  008C                     	;# 
   610  008D                     	;# 
   611  008E                     	;# 
   612  008F                     	;# 
   613  0090                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0093                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  0105                     	;# 
   632  0107                     	;# 
   633  0108                     	;# 
   634  0109                     	;# 
   635  010C                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  0185                     	;# 
   641  0187                     	;# 
   642  0188                     	;# 
   643  0189                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001D                     	;# 
   678  001E                     	;# 
   679  001F                     	;# 
   680  0081                     	;# 
   681  0085                     	;# 
   682  0086                     	;# 
   683  0087                     	;# 
   684  0089                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0094                     	;# 
   696  0095                     	;# 
   697  0096                     	;# 
   698  0097                     	;# 
   699  0098                     	;# 
   700  0099                     	;# 
   701  009A                     	;# 
   702  009B                     	;# 
   703  009C                     	;# 
   704  009D                     	;# 
   705  009E                     	;# 
   706  009F                     	;# 
   707  0105                     	;# 
   708  0107                     	;# 
   709  0108                     	;# 
   710  0109                     	;# 
   711  010C                     	;# 
   712  010C                     	;# 
   713  010D                     	;# 
   714  010E                     	;# 
   715  010F                     	;# 
   716  0185                     	;# 
   717  0187                     	;# 
   718  0188                     	;# 
   719  0189                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  000E                     	;# 
   737  000F                     	;# 
   738  0010                     	;# 
   739  0011                     	;# 
   740  0012                     	;# 
   741  0013                     	;# 
   742  0014                     	;# 
   743  0015                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001B                     	;# 
   751  001B                     	;# 
   752  001C                     	;# 
   753  001D                     	;# 
   754  001E                     	;# 
   755  001F                     	;# 
   756  0081                     	;# 
   757  0085                     	;# 
   758  0086                     	;# 
   759  0087                     	;# 
   760  0089                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  008E                     	;# 
   764  008F                     	;# 
   765  0090                     	;# 
   766  0091                     	;# 
   767  0092                     	;# 
   768  0093                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0094                     	;# 
   772  0095                     	;# 
   773  0096                     	;# 
   774  0097                     	;# 
   775  0098                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009C                     	;# 
   780  009D                     	;# 
   781  009E                     	;# 
   782  009F                     	;# 
   783  0105                     	;# 
   784  0107                     	;# 
   785  0108                     	;# 
   786  0109                     	;# 
   787  010C                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  010E                     	;# 
   791  010F                     	;# 
   792  0185                     	;# 
   793  0187                     	;# 
   794  0188                     	;# 
   795  0189                     	;# 
   796  018C                     	;# 
   797  018D                     	;# 
   798  0000                     	;# 
   799  0001                     	;# 
   800  0002                     	;# 
   801  0003                     	;# 
   802  0004                     	;# 
   803  0005                     	;# 
   804  0006                     	;# 
   805  0007                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000D                     	;# 
   811  000E                     	;# 
   812  000E                     	;# 
   813  000F                     	;# 
   814  0010                     	;# 
   815  0011                     	;# 
   816  0012                     	;# 
   817  0013                     	;# 
   818  0014                     	;# 
   819  0015                     	;# 
   820  0015                     	;# 
   821  0016                     	;# 
   822  0017                     	;# 
   823  0018                     	;# 
   824  0019                     	;# 
   825  001A                     	;# 
   826  001B                     	;# 
   827  001B                     	;# 
   828  001C                     	;# 
   829  001D                     	;# 
   830  001E                     	;# 
   831  001F                     	;# 
   832  0081                     	;# 
   833  0085                     	;# 
   834  0086                     	;# 
   835  0087                     	;# 
   836  0089                     	;# 
   837  008C                     	;# 
   838  008D                     	;# 
   839  008E                     	;# 
   840  008F                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0094                     	;# 
   848  0095                     	;# 
   849  0096                     	;# 
   850  0097                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009A                     	;# 
   854  009B                     	;# 
   855  009C                     	;# 
   856  009D                     	;# 
   857  009E                     	;# 
   858  009F                     	;# 
   859  0105                     	;# 
   860  0107                     	;# 
   861  0108                     	;# 
   862  0109                     	;# 
   863  010C                     	;# 
   864  010C                     	;# 
   865  010D                     	;# 
   866  010E                     	;# 
   867  010F                     	;# 
   868  0185                     	;# 
   869  0187                     	;# 
   870  0188                     	;# 
   871  0189                     	;# 
   872  018C                     	;# 
   873  018D                     	;# 
   874  0000                     	;# 
   875  0001                     	;# 
   876  0002                     	;# 
   877  0003                     	;# 
   878  0004                     	;# 
   879  0005                     	;# 
   880  0006                     	;# 
   881  0007                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  000E                     	;# 
   888  000E                     	;# 
   889  000F                     	;# 
   890  0010                     	;# 
   891  0011                     	;# 
   892  0012                     	;# 
   893  0013                     	;# 
   894  0014                     	;# 
   895  0015                     	;# 
   896  0015                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001B                     	;# 
   904  001C                     	;# 
   905  001D                     	;# 
   906  001E                     	;# 
   907  001F                     	;# 
   908  0081                     	;# 
   909  0085                     	;# 
   910  0086                     	;# 
   911  0087                     	;# 
   912  0089                     	;# 
   913  008C                     	;# 
   914  008D                     	;# 
   915  008E                     	;# 
   916  008F                     	;# 
   917  0090                     	;# 
   918  0091                     	;# 
   919  0092                     	;# 
   920  0093                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0094                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009C                     	;# 
   932  009D                     	;# 
   933  009E                     	;# 
   934  009F                     	;# 
   935  0105                     	;# 
   936  0107                     	;# 
   937  0108                     	;# 
   938  0109                     	;# 
   939  010C                     	;# 
   940  010C                     	;# 
   941  010D                     	;# 
   942  010E                     	;# 
   943  010F                     	;# 
   944  0185                     	;# 
   945  0187                     	;# 
   946  0188                     	;# 
   947  0189                     	;# 
   948  018C                     	;# 
   949  018D                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000D                     	;# 
   963  000E                     	;# 
   964  000E                     	;# 
   965  000F                     	;# 
   966  0010                     	;# 
   967  0011                     	;# 
   968  0012                     	;# 
   969  0013                     	;# 
   970  0014                     	;# 
   971  0015                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0017                     	;# 
   975  0018                     	;# 
   976  0019                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001D                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  0081                     	;# 
   985  0085                     	;# 
   986  0086                     	;# 
   987  0087                     	;# 
   988  0089                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  008F                     	;# 
   993  0090                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0093                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0094                     	;# 
  1000  0095                     	;# 
  1001  0096                     	;# 
  1002  0097                     	;# 
  1003  0098                     	;# 
  1004  0099                     	;# 
  1005  009A                     	;# 
  1006  009B                     	;# 
  1007  009C                     	;# 
  1008  009D                     	;# 
  1009  009E                     	;# 
  1010  009F                     	;# 
  1011  0105                     	;# 
  1012  0107                     	;# 
  1013  0108                     	;# 
  1014  0109                     	;# 
  1015  010C                     	;# 
  1016  010C                     	;# 
  1017  010D                     	;# 
  1018  010E                     	;# 
  1019  010F                     	;# 
  1020  0185                     	;# 
  1021  0187                     	;# 
  1022  0188                     	;# 
  1023  0189                     	;# 
  1024  018C                     	;# 
  1025  018D                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0009                     	;# 
  1035  000A                     	;# 
  1036  000B                     	;# 
  1037  000C                     	;# 
  1038  000D                     	;# 
  1039  000E                     	;# 
  1040  000E                     	;# 
  1041  000F                     	;# 
  1042  0010                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0014                     	;# 
  1047  0015                     	;# 
  1048  0015                     	;# 
  1049  0016                     	;# 
  1050  0017                     	;# 
  1051  0018                     	;# 
  1052  0019                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001B                     	;# 
  1056  001C                     	;# 
  1057  001D                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  0081                     	;# 
  1061  0085                     	;# 
  1062  0086                     	;# 
  1063  0087                     	;# 
  1064  0089                     	;# 
  1065  008C                     	;# 
  1066  008D                     	;# 
  1067  008E                     	;# 
  1068  008F                     	;# 
  1069  0090                     	;# 
  1070  0091                     	;# 
  1071  0092                     	;# 
  1072  0093                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0094                     	;# 
  1076  0095                     	;# 
  1077  0096                     	;# 
  1078  0097                     	;# 
  1079  0098                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009C                     	;# 
  1084  009D                     	;# 
  1085  009E                     	;# 
  1086  009F                     	;# 
  1087  0105                     	;# 
  1088  0107                     	;# 
  1089  0108                     	;# 
  1090  0109                     	;# 
  1091  010C                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010E                     	;# 
  1095  010F                     	;# 
  1096  0185                     	;# 
  1097  0187                     	;# 
  1098  0188                     	;# 
  1099  0189                     	;# 
  1100  018C                     	;# 
  1101  018D                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0009                     	;# 
  1111  000A                     	;# 
  1112  000B                     	;# 
  1113  000C                     	;# 
  1114  000D                     	;# 
  1115  000E                     	;# 
  1116  000E                     	;# 
  1117  000F                     	;# 
  1118  0010                     	;# 
  1119  0011                     	;# 
  1120  0012                     	;# 
  1121  0013                     	;# 
  1122  0014                     	;# 
  1123  0015                     	;# 
  1124  0015                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001B                     	;# 
  1132  001C                     	;# 
  1133  001D                     	;# 
  1134  001E                     	;# 
  1135  001F                     	;# 
  1136  0081                     	;# 
  1137  0085                     	;# 
  1138  0086                     	;# 
  1139  0087                     	;# 
  1140  0089                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008F                     	;# 
  1145  0090                     	;# 
  1146  0091                     	;# 
  1147  0092                     	;# 
  1148  0093                     	;# 
  1149  0093                     	;# 
  1150  0093                     	;# 
  1151  0094                     	;# 
  1152  0095                     	;# 
  1153  0096                     	;# 
  1154  0097                     	;# 
  1155  0098                     	;# 
  1156  0099                     	;# 
  1157  009A                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  0105                     	;# 
  1164  0107                     	;# 
  1165  0108                     	;# 
  1166  0109                     	;# 
  1167  010C                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010F                     	;# 
  1172  0185                     	;# 
  1173  0187                     	;# 
  1174  0188                     	;# 
  1175  0189                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178                           
  1179                           	psect	strings
  1180  1000                     __pstrings:	
  1181  1000                     stringtab:	
  1182  1000                     __stringtab:	
  1183                           
  1184                           ;	String table - string pointers are 1 byte each
  1185  1000  1BFF               	btfsc	btemp+1,7
  1186  1001  280A               	ljmp	stringcode
  1187  1002  1383               	bcf	3,7
  1188  1003  187F               	btfsc	btemp+1,0
  1189  1004  1783               	bsf	3,7
  1190  1005  0800               	movf	0,w
  1191  1006  0A84               	incf	4,f
  1192  1007  1903               	skipnz
  1193  1008  0AFF               	incf	btemp+1,f
  1194  1009  0008               	return
  1195  100A                     stringcode:	
  1196  100A                     stringdir:	
  1197  100A  3010               	movlw	high stringdir
  1198  100B  008A               	movwf	10
  1199  100C  0804               	movf	4,w
  1200  100D  0A84               	incf	4,f
  1201  100E  0782               	addwf	2,f
  1202  100F                     __stringbase:	
  1203  100F  3400               	retlw	0
  1204  1010                     __end_of__stringtab:	
  1205  1010                     _PT100_TRANSLADA:	
  1206  1010  3466               	retlw	102
  1207  1011  3466               	retlw	102
  1208  1012  34A6               	retlw	166
  1209  1013  34BF               	retlw	191
  1210  1014                     __end_of_PT100_TRANSLADA:	
  1211  1014                     _PT100_CONSTANT:	
  1212  1014  3414               	retlw	20
  1213  1015  34AE               	retlw	174
  1214  1016  342B               	retlw	43
  1215  1017  34C1               	retlw	193
  1216  1018                     __end_of_PT100_CONSTANT:	
  1217  1018                     _RESISTOR_ROOM_TEMP:	
  1218                           
  1219                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1220  1018  3400               	retlw	0
  1221  1019  3440               	retlw	64
  1222  101A  341C               	retlw	28
  1223  101B  3446               	retlw	70
  1224  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1225  101C                     _ROOM_TEMP:	
  1226                           
  1227                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1228  101C  3466               	retlw	102
  1229  101D  3486               	retlw	134
  1230  101E  3496               	retlw	150
  1231  101F  3443               	retlw	67
  1232  1020                     __end_of_ROOM_TEMP:	
  1233  1020                     _MAX_ADC:	
  1234                           
  1235                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1236  1020  3400               	retlw	0
  1237  1021  34C0               	retlw	192
  1238  1022  347F               	retlw	127
  1239  1023  3444               	retlw	68
  1240  1024                     __end_of_MAX_ADC:	
  1241  1024                     log@coeff:	
  1242  1024  3400               	retlw	0
  1243  1025  3400               	retlw	0
  1244  1026  3400               	retlw	0
  1245  1027  3400               	retlw	0
  1246  1028  34C4               	retlw	196
  1247  1029  34FF               	retlw	255
  1248  102A  347F               	retlw	127
  1249  102B  343F               	retlw	63
  1250  102C  3480               	retlw	128
  1251  102D  34EF               	retlw	239
  1252  102E  34FF               	retlw	255
  1253  102F  34BE               	retlw	190
  1254  1030  3490               	retlw	144
  1255  1031  34E1               	retlw	225
  1256  1032  34A9               	retlw	169
  1257  1033  343E               	retlw	62
  1258  1034  34EC               	retlw	236
  1259  1035  3482               	retlw	130
  1260  1036  3476               	retlw	118
  1261  1037  34BE               	retlw	190
  1262  1038  3482               	retlw	130
  1263  1039  34AD               	retlw	173
  1264  103A  342B               	retlw	43
  1265  103B  343E               	retlw	62
  1266  103C  340E               	retlw	14
  1267  103D  343C               	retlw	60
  1268  103E  34C3               	retlw	195
  1269  103F  34BD               	retlw	189
  1270  1040  3487               	retlw	135
  1271  1041  34D1               	retlw	209
  1272  1042  3413               	retlw	19
  1273  1043  343D               	retlw	61
  1274  1044  3441               	retlw	65
  1275  1045  3478               	retlw	120
  1276  1046  34D3               	retlw	211
  1277  1047  34BB               	retlw	187
  1278  1048                     __end_oflog@coeff:	
  1279  1048                     _BETA:	
  1280                           
  1281                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1282  1048  3400               	retlw	0
  1283  1049  3460               	retlw	96
  1284  104A  3478               	retlw	120
  1285  104B  3445               	retlw	69
  1286  104C                     __end_of_BETA:	
  1287  104C                     _BALANCE_RESISTOR:	
  1288                           
  1289                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1290  104C  3400               	retlw	0
  1291  104D  3440               	retlw	64
  1292  104E  341C               	retlw	28
  1293  104F  3446               	retlw	70
  1294  1050                     __end_of_BALANCE_RESISTOR:	
  1295  0019                     _TXREG	set	25
  1296  0018                     _RCSTAbits	set	24
  1297  001A                     _RCREG	set	26
  1298  000E                     _TMR1L	set	14
  1299  000F                     _TMR1H	set	15
  1300  000C                     _PIR1bits	set	12
  1301  001E                     _ADRESH	set	30
  1302  001F                     _ADCON0bits	set	31
  1303  0005                     _PORTAbits	set	5
  1304  0007                     _PORTCbits	set	7
  1305  0010                     _T1CON	set	16
  1306  0006                     _PORTBbits	set	6
  1307  0009                     _PORTE	set	9
  1308  0007                     _PORTC	set	7
  1309  0005                     _PORTA	set	5
  1310  0013                     _SSPBUF	set	19
  1311  000B                     _INTCONbits	set	11
  1312  0014                     _SSPCON	set	20
  1313  0006                     _PORTB	set	6
  1314  00C4                     _CREN	set	196
  1315  0081                     _TMR1CS	set	129
  1316  0085                     _T1CKPS1	set	133
  1317  0084                     _T1CKPS0	set	132
  1318  008C                     _PIE1bits	set	140
  1319  0099                     _SPBRG	set	153
  1320  0098                     _TXSTAbits	set	152
  1321  009E                     _ADRESL	set	158
  1322  009F                     _ADCON1bits	set	159
  1323  009F                     _ADCON1	set	159
  1324  0095                     _WPUB	set	149
  1325  0081                     _OPTION_REGbits	set	129
  1326  0089                     _TRISE	set	137
  1327  0087                     _TRISC	set	135
  1328  0086                     _TRISB	set	134
  1329  0085                     _TRISA	set	133
  1330  008F                     _OSCCONbits	set	143
  1331  0091                     _SSPCON2bits	set	145
  1332  0094                     _SSPSTAT	set	148
  1333  0093                     _SSPADD	set	147
  1334  0091                     _SSPCON2	set	145
  1335  043F                     _TRISC7	set	1087
  1336  043E                     _TRISC6	set	1086
  1337  0460                     _TMR1IE	set	1120
  1338  043C                     _TRISC4	set	1084
  1339  043B                     _TRISC3	set	1083
  1340  010C                     _EEDATA	set	268
  1341  010D                     _EEADR	set	269
  1342  0187                     _BAUDCTLbits	set	391
  1343  018D                     _EECON2	set	397
  1344  018C                     _EECON1bits	set	396
  1345  0189                     _ANSELH	set	393
  1346  0188                     _ANSEL	set	392
  1347  1050                     STR_1:	
  1348  1050  3476               	retlw	118	;'v'
  1349  1051  3431               	retlw	49	;'1'
  1350  1052  342E               	retlw	46	;'.'
  1351  1053  3430               	retlw	48	;'0'
  1352  1054  342E               	retlw	46	;'.'
  1353  1055  3431               	retlw	49	;'1'
  1354  1056  3430               	retlw	48	;'0'
  1355  1057  3400               	retlw	0
  1356  1058                     STR_8:	
  1357  1058  344F               	retlw	79	;'O'
  1358  1059  344B               	retlw	75	;'K'
  1359  105A  3400               	retlw	0
  1360  105B                     STR_4:	
  1361  105B  343A               	retlw	58	;':'
  1362  105C  3400               	retlw	0
  1363  1057                     
  1364                           ; #config settings
  1365  0000                     
  1366                           	psect	cinit
  1367  0015                     start_initialization:	
  1368  0015                     __initialization:	
  1369                           
  1370                           ; Clear objects allocated to COMMON
  1371  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1372  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1373  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1374  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1375  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1376                           
  1377                           ; Clear objects allocated to BANK0
  1378  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1379  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1380  001C  01E6               	clrf	__pbssBANK0& (0+127)
  1381  001D  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1382  001E  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1383  001F  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1384  0020  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1385  0021  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1386  0022  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  1387                           
  1388                           ; Clear objects allocated to BANK1
  1389  0023  1383               	bcf	3,7	;select IRP bank0
  1390  0024  30CD               	movlw	low __pbssBANK1
  1391  0025  0084               	movwf	4
  1392  0026  30EF               	movlw	low (__pbssBANK1+34)
  1393  0027  160A  158A  232D  120A  118A  	fcall	clear_ram0
  1394                           
  1395                           ; Clear objects allocated to BANK3
  1396  002C  1783               	bsf	3,7	;select IRP bank2
  1397  002D  3090               	movlw	low __pbssBANK3
  1398  002E  0084               	movwf	4
  1399  002F  30EE               	movlw	low (__pbssBANK3+94)
  1400  0030  160A  158A  232D   	fcall	clear_ram0
  1401  0033                     end_of_initialization:	
  1402                           ;End of C runtime variable initialization code
  1403                           
  1404  0033                     __end_of__initialization:	
  1405  0033  0183               	clrf	3
  1406  0034  160A  118A  2CC3   	ljmp	_main	;jump to C main() function
  1407                           
  1408                           	psect	bssCOMMON
  1409  0078                     __pbssCOMMON:	
  1410  0078                     _Delay_Led_Tmr0:	
  1411  0078                     	ds	2
  1412  007A                     _Delay_Led_Memory:	
  1413  007A                     	ds	2
  1414  007C                     _statuspower_memo:	
  1415  007C                     	ds	1
  1416                           
  1417                           	psect	bssBANK0
  1418  0066                     __pbssBANK0:	
  1419  0066                     _Delay_Led_Usart:	
  1420  0066                     	ds	2
  1421  0068                     _destino:	
  1422  0068                     	ds	1
  1423  0069                     _Board_Number:	
  1424  0069                     	ds	1
  1425  006A                     _canal:	
  1426  006A                     	ds	1
  1427  006B                     _statuspower:	
  1428  006B                     	ds	1
  1429  006C                     _generic_status:	
  1430  006C                     	ds	1
  1431                           
  1432                           	psect	bssBANK1
  1433  00CD                     __pbssBANK1:	
  1434  00CD                     _Umidade1:	
  1435  00CD                     	ds	4
  1436  00D1                     _Temperatura0:	
  1437  00D1                     	ds	4
  1438  00D5                     _count:	
  1439  00D5                     	ds	2
  1440  00D7                     _header:	
  1441  00D7                     	ds	2
  1442  00D9                     _milisegundo:	
  1443  00D9                     	ds	2
  1444  00DB                     _pointer:	
  1445  00DB                     	ds	1
  1446  00DC                     _minuto:	
  1447  00DC                     	ds	1
  1448  00DD                     _hora:	
  1449  00DD                     	ds	1
  1450  00DE                     _segundo:	
  1451  00DE                     	ds	1
  1452  00DF                     _usart_protocol:	
  1453  00DF                     	ds	16
  1454                           
  1455                           	psect	bssBANK3
  1456  0190                     __pbssBANK3:	
  1457  0190                     _errno:	
  1458  0190                     	ds	2
  1459  0192                     _tempodecorrido:	
  1460  0192                     	ds	2
  1461  0194                     _usart_buffer:	
  1462  0194                     	ds	42
  1463  01BE                     _buffer:	
  1464  01BE                     	ds	32
  1465  01DE                     _texto:	
  1466  01DE                     	ds	16
  1467                           
  1468                           	psect	clrtext
  1469  1B2D                     clear_ram0:	
  1470                           ;	Called with FSR containing the base address, and
  1471                           ;	W with the last address+1
  1472                           
  1473  1B2D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1474  1B2E                     clrloop0:	
  1475  1B2E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1476  1B2F  0A84               	incf	4,f	;increment pointer
  1477  1B30  0604               	xorwf	4,w	;XOR with final address
  1478  1B31  1903               	btfsc	3,2	;have we reached the end yet?
  1479  1B32  3400               	retlw	0	;all done for this memory range, return
  1480  1B33  0604               	xorwf	4,w	;XOR again to restore value
  1481  1B34  2B2E               	goto	clrloop0	;do the next byte
  1482                           
  1483                           	psect	cstackBANK1
  1484  00A0                     __pcstackBANK1:	
  1485  00A0                     Decodify_Command@hh:	
  1486                           
  1487                           ; 10 bytes @ 0x0
  1488  00A0                     	ds	10
  1489  00AA                     Decodify_Command@mm:	
  1490                           
  1491                           ; 10 bytes @ 0xA
  1492  00AA                     	ds	10
  1493  00B4                     Decodify_Command@ss:	
  1494                           
  1495                           ; 10 bytes @ 0x14
  1496  00B4                     	ds	10
  1497  00BE                     Decodify_Command@dados:	
  1498                           
  1499                           ; 2 bytes @ 0x1E
  1500  00BE                     	ds	2
  1501  00C0                     Decodify_Command@add:	
  1502                           
  1503                           ; 1 bytes @ 0x20
  1504  00C0                     	ds	1
  1505  00C1                     Decodify_Command@tempint:	
  1506                           
  1507                           ; 2 bytes @ 0x21
  1508  00C1                     	ds	2
  1509  00C3                     Decodify_Command@OutPut:	
  1510                           
  1511                           ; 4 bytes @ 0x23
  1512  00C3                     	ds	4
  1513  00C7                     Decodify_Command@tempchar:	
  1514                           
  1515                           ; 1 bytes @ 0x27
  1516  00C7                     	ds	1
  1517  00C8                     Decodify_Command@sizedata:	
  1518                           
  1519                           ; 1 bytes @ 0x28
  1520  00C8                     	ds	1
  1521  00C9                     Decodify_Command@add_24LCxxxx:	
  1522                           
  1523                           ; 4 bytes @ 0x29
  1524  00C9                     	ds	4
  1525                           
  1526                           	psect	cstackCOMMON
  1527  0070                     __pcstackCOMMON:	
  1528  0070                     ?_I2C_Master_Start:	
  1529  0070                     ?_I2C_Master_Stop:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_I2C_Master_RepeatedStart:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_ADC_init:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_mediaLeituraPt100Umidadde:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_Decodify_Command:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_USART_to_Protocol:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_Send_To_MB:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_Send_Reply_OK:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_EEPROM_Read_Byte:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_USART_putc:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Package_Usart_is_for_me:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_I2C_Master_Wait:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_main:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_isr:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ??_isr:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0x0
  1576  0070                     	ds	6
  1577  0076                     isr@tempo:	
  1578                           
  1579                           ; 2 bytes @ 0x6
  1580  0076                     	ds	2
  1581                           
  1582                           	psect	cstackBANK0
  1583  0020                     __pcstackBANK0:	
  1584  0020                     ?_my_delay_ms_WDT:	
  1585  0020                     ??_ADC_init:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0020                     ?_USART_init:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0020                     ??_USART_to_Protocol:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0020                     ?_EEPROM_Write_Byte:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0020                     ??_EEPROM_Read_Byte:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0020                     ??_USART_putc:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ?_strcpy:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ?_strcat:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ?_my_delay_ms:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ??_Package_Usart_is_for_me:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ?_PROCULUS_Delay:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ??_I2C_Master_Wait:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ?_strlen:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ?_captura:	
  1625                           ; 2 bytes @ 0x0
  1626                           
  1627  0020                     ?__Umul8_16:	
  1628                           ; 2 bytes @ 0x0
  1629                           
  1630  0020                     ?___lwdiv:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0020                     ?___lwmod:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0020                     ?___lldiv:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0020                     ?___fltol:	
  1640                           ; 4 bytes @ 0x0
  1641                           
  1642  0020                     ?___xxtofl:	
  1643                           ; 4 bytes @ 0x0
  1644                           
  1645  0020                     EEPROM_Write_Byte@dado:	
  1646                           ; 4 bytes @ 0x0
  1647                           
  1648  0020                     Package_Usart_is_for_me@retorno:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     USART_putc@value:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0020                     strcpy@from:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     __Umul8_16@multiplicand:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     PROCULUS_Delay@tempo_ms:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     ___lwdiv@divisor:	
  1664                           ; 2 bytes @ 0x0
  1665                           
  1666  0020                     ___lwmod@divisor:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     strcat@from:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0020                     strlen@s:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     my_delay_ms@time:	
  1676                           ; 2 bytes @ 0x0
  1677                           
  1678  0020                     my_delay_ms_WDT@time:	
  1679                           ; 4 bytes @ 0x0
  1680                           
  1681  0020                     USART_init@baudrate:	
  1682                           ; 4 bytes @ 0x0
  1683                           
  1684  0020                     ___lldiv@divisor:	
  1685                           ; 4 bytes @ 0x0
  1686                           
  1687  0020                     ___fltol@f1:	
  1688                           ; 4 bytes @ 0x0
  1689                           
  1690  0020                     ___xxtofl@val:	
  1691                           ; 4 bytes @ 0x0
  1692                           
  1693                           
  1694                           ; 4 bytes @ 0x0
  1695  0020                     	ds	1
  1696  0021                     ??_Send_To_MB:	
  1697  0021                     ?_USART_put_string:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700  0021                     ??_EEPROM_Write_Byte:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0021                     ?_USART_put_buffer:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706  0021                     ??_strcpy:	
  1707                           ; 1 bytes @ 0x1
  1708                           
  1709  0021                     Send_To_MB@size:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712  0021                     USART_put_buffer@size:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715  0021                     USART_put_string@vetor:	
  1716                           ; 2 bytes @ 0x1
  1717                           
  1718                           
  1719                           ; 2 bytes @ 0x1
  1720  0021                     	ds	1
  1721  0022                     ??_strlen:	
  1722  0022                     ??_strcat:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0022                     ??_captura:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0022                     ??_PROCULUS_Delay:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0022                     ??__Umul8_16:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734  0022                     I2C_Master_Wait@tempo:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0022                     EEPROM_Read_Byte@addr:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740  0022                     strcpy@to:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743  0022                     USART_to_Protocol@i:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746  0022                     ___lwdiv@dividend:	
  1747                           ; 2 bytes @ 0x2
  1748                           
  1749  0022                     ___lwmod@dividend:	
  1750                           ; 2 bytes @ 0x2
  1751                           
  1752  0022                     strlen@cp:	
  1753                           ; 2 bytes @ 0x2
  1754                           
  1755                           
  1756                           ; 2 bytes @ 0x2
  1757  0022                     	ds	1
  1758  0023                     ??_I2C_Master_Start:	
  1759  0023                     ?_I2C_Master_Write:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762  0023                     ??_I2C_Master_Stop:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0023                     ??_I2C_Master_RepeatedStart:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0023                     ??_USART_put_string:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0023                     ?_EEPROM_Read_String:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0023                     ??_USART_put_buffer:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777  0023                     ?_I2C_Master_Read:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0023                     ?_EEPROM_Read_Integer:	
  1781                           ; 2 bytes @ 0x3
  1782                           
  1783  0023                     EEPROM_Write_Byte@addr:	
  1784                           ; 2 bytes @ 0x3
  1785                           
  1786  0023                     EEPROM_Read_String@dado:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0023                     strcat@cp:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0023                     strcpy@cp:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0023                     I2C_Master_Write@d:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0023                     I2C_Master_Read@a:	
  1799                           ; 2 bytes @ 0x3
  1800                           
  1801  0023                     USART_put_string@ptr:	
  1802                           ; 2 bytes @ 0x3
  1803                           
  1804                           
  1805                           ; 2 bytes @ 0x3
  1806  0023                     	ds	1
  1807  0024                     ??_my_delay_ms_WDT:	
  1808  0024                     ??_USART_init:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811  0024                     ??_EEPROM_Read_String:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814  0024                     ??_my_delay_ms:	
  1815                           ; 1 bytes @ 0x4
  1816                           
  1817  0024                     ??___fltol:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0024                     ??___lwdiv:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0024                     ??___lwmod:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826  0024                     ??___xxtofl:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829  0024                     EEPROM_Write_Byte@last_GIE:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832  0024                     USART_to_Protocol@usart_protocol:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835  0024                     strcat@to:	
  1836                           ; 1 bytes @ 0x4
  1837                           
  1838  0024                     PROCULUS_Delay@i:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841  0024                     __Umul8_16@product:	
  1842                           ; 2 bytes @ 0x4
  1843                           
  1844  0024                     ___lldiv@dividend:	
  1845                           ; 2 bytes @ 0x4
  1846                           
  1847                           
  1848                           ; 4 bytes @ 0x4
  1849  0024                     	ds	1
  1850  0025                     ??_I2C_Master_Write:	
  1851  0025                     ??_I2C_Master_Read:	
  1852                           ; 1 bytes @ 0x5
  1853                           
  1854  0025                     ??_EEPROM_Read_Integer:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857  0025                     ?_EEPROM_Write_Integer:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860  0025                     ??_Send_Reply_OK:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863  0025                     ?_EEPROM_Write_String:	
  1864                           ; 1 bytes @ 0x5
  1865                           
  1866  0025                     EEPROM_Write_String@dado:	
  1867                           ; 1 bytes @ 0x5
  1868                           
  1869  0025                     EEPROM_Read_String@addr:	
  1870                           ; 1 bytes @ 0x5
  1871                           
  1872  0025                     USART_put_buffer@loop:	
  1873                           ; 1 bytes @ 0x5
  1874                           
  1875  0025                     ___lwmod@counter:	
  1876                           ; 1 bytes @ 0x5
  1877                           
  1878  0025                     EEPROM_Write_Integer@dado:	
  1879                           ; 1 bytes @ 0x5
  1880                           
  1881  0025                     ___lwdiv@quotient:	
  1882                           ; 2 bytes @ 0x5
  1883                           
  1884                           
  1885                           ; 2 bytes @ 0x5
  1886  0025                     	ds	1
  1887  0026                     ??_EEPROM_Write_String:	
  1888  0026                     EEPROM_Read_Integer@addr:	
  1889                           ; 1 bytes @ 0x6
  1890                           
  1891  0026                     EEPROM_Read_String@c:	
  1892                           ; 1 bytes @ 0x6
  1893                           
  1894  0026                     USART_init@i:	
  1895                           ; 1 bytes @ 0x6
  1896                           
  1897  0026                     USART_put_buffer@ptr:	
  1898                           ; 1 bytes @ 0x6
  1899                           
  1900  0026                     __Umul8_16@word_mpld:	
  1901                           ; 1 bytes @ 0x6
  1902                           
  1903  0026                     my_delay_ms@i:	
  1904                           ; 2 bytes @ 0x6
  1905                           
  1906  0026                     my_delay_ms_WDT@i:	
  1907                           ; 4 bytes @ 0x6
  1908                           
  1909                           
  1910                           ; 4 bytes @ 0x6
  1911  0026                     	ds	1
  1912  0027                     ??_EEPROM_Write_Integer:	
  1913  0027                     EEPROM_Read_Integer@ptr:	
  1914                           ; 1 bytes @ 0x7
  1915                           
  1916  0027                     EEPROM_Write_String@addr:	
  1917                           ; 1 bytes @ 0x7
  1918                           
  1919  0027                     USART_put_buffer@vetor:	
  1920                           ; 1 bytes @ 0x7
  1921                           
  1922  0027                     ___lwdiv@counter:	
  1923                           ; 1 bytes @ 0x7
  1924                           
  1925  0027                     I2C_Master_Read@temp:	
  1926                           ; 1 bytes @ 0x7
  1927                           
  1928                           
  1929                           ; 2 bytes @ 0x7
  1930  0027                     	ds	1
  1931  0028                     ?_utoa:	
  1932  0028                     ??___lldiv:	
  1933                           ; 1 bytes @ 0x8
  1934                           
  1935  0028                     ___xxtofl@sign:	
  1936                           ; 1 bytes @ 0x8
  1937                           
  1938  0028                     __Umul8_16@multiplier:	
  1939                           ; 1 bytes @ 0x8
  1940                           
  1941  0028                     EEPROM_Read_Integer@result:	
  1942                           ; 1 bytes @ 0x8
  1943                           
  1944  0028                     utoa@val:	
  1945                           ; 2 bytes @ 0x8
  1946                           
  1947                           
  1948                           ; 2 bytes @ 0x8
  1949  0028                     	ds	1
  1950  0029                     ?___flmul:	
  1951  0029                     ___fltol@sign1:	
  1952                           ; 4 bytes @ 0x9
  1953                           
  1954  0029                     ___xxtofl@exp:	
  1955                           ; 1 bytes @ 0x9
  1956                           
  1957  0029                     ___lldiv@quotient:	
  1958                           ; 1 bytes @ 0x9
  1959                           
  1960  0029                     ___flmul@b:	
  1961                           ; 4 bytes @ 0x9
  1962                           
  1963                           
  1964                           ; 4 bytes @ 0x9
  1965  0029                     	ds	1
  1966  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1967  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1968                           ; 1 bytes @ 0xA
  1969                           
  1970  002A                     ?_EEPROM_24C1025_Write_Str:	
  1971                           ; 1 bytes @ 0xA
  1972                           
  1973  002A                     ?_EEPROM_24C1025_Read_Str:	
  1974                           ; 1 bytes @ 0xA
  1975                           
  1976  002A                     EEPROM_Write_Integer@ptr:	
  1977                           ; 1 bytes @ 0xA
  1978                           
  1979  002A                     EEPROM_Read_Integer@i:	
  1980                           ; 1 bytes @ 0xA
  1981                           
  1982  002A                     ___fltol@exp1:	
  1983                           ; 1 bytes @ 0xA
  1984                           
  1985  002A                     utoa@base:	
  1986                           ; 1 bytes @ 0xA
  1987                           
  1988  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1989                           ; 2 bytes @ 0xA
  1990                           
  1991  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1992                           ; 4 bytes @ 0xA
  1993                           
  1994  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1995                           ; 4 bytes @ 0xA
  1996                           
  1997  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  1998                           ; 4 bytes @ 0xA
  1999                           
  2000  002A                     ___xxtofl@arg:	
  2001                           ; 4 bytes @ 0xA
  2002                           
  2003                           
  2004                           ; 4 bytes @ 0xA
  2005  002A                     	ds	1
  2006  002B                     ?_USART_put_int:	
  2007  002B                     ?___wmul:	
  2008                           ; 1 bytes @ 0xB
  2009                           
  2010  002B                     EEPROM_Write_Integer@addr:	
  2011                           ; 2 bytes @ 0xB
  2012                           
  2013  002B                     USART_put_int@value:	
  2014                           ; 1 bytes @ 0xB
  2015                           
  2016  002B                     ___wmul@multiplier:	
  2017                           ; 2 bytes @ 0xB
  2018                           
  2019                           
  2020                           ; 2 bytes @ 0xB
  2021  002B                     	ds	1
  2022  002C                     ??_utoa:	
  2023  002C                     EEPROM_Write_Integer@i:	
  2024                           ; 1 bytes @ 0xC
  2025                           
  2026                           
  2027                           ; 1 bytes @ 0xC
  2028  002C                     	ds	1
  2029  002D                     ??_USART_put_int:	
  2030  002D                     ___lldiv@counter:	
  2031                           ; 1 bytes @ 0xD
  2032                           
  2033  002D                     ___wmul@multiplicand:	
  2034                           ; 1 bytes @ 0xD
  2035                           
  2036  002D                     utoa@v:	
  2037                           ; 2 bytes @ 0xD
  2038                           
  2039  002D                     ___flmul@a:	
  2040                           ; 2 bytes @ 0xD
  2041                           
  2042                           
  2043                           ; 4 bytes @ 0xD
  2044  002D                     	ds	1
  2045  002E                     ?_I2C_Master_Init:	
  2046  002E                     ?_ADC_Media_10bits:	
  2047                           ; 1 bytes @ 0xE
  2048                           
  2049  002E                     ?___fldiv:	
  2050                           ; 4 bytes @ 0xE
  2051                           
  2052  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2053                           ; 4 bytes @ 0xE
  2054                           
  2055  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2056                           ; 1 bytes @ 0xE
  2057                           
  2058  002E                     EEPROM_24C1025_Write_Str@data:	
  2059                           ; 1 bytes @ 0xE
  2060                           
  2061  002E                     EEPROM_24C1025_Read_Str@texto:	
  2062                           ; 1 bytes @ 0xE
  2063                           
  2064  002E                     USART_put_int@dado:	
  2065                           ; 1 bytes @ 0xE
  2066                           
  2067  002E                     I2C_Master_Init@c:	
  2068                           ; 1 bytes @ 0xE
  2069                           
  2070  002E                     ___fldiv@a:	
  2071                           ; 4 bytes @ 0xE
  2072                           
  2073                           
  2074                           ; 4 bytes @ 0xE
  2075  002E                     	ds	1
  2076  002F                     ??_EEPROM_24C1025_Write_Str:	
  2077  002F                     ??_EEPROM_24C1025_Read_Str:	
  2078                           ; 1 bytes @ 0xF
  2079                           
  2080  002F                     ?_PROCULUS_Control_Register_Write:	
  2081                           ; 1 bytes @ 0xF
  2082                           
  2083  002F                     ?_PROCULUS_VP_Write:	
  2084                           ; 1 bytes @ 0xF
  2085                           
  2086  002F                     ??___wmul:	
  2087                           ; 1 bytes @ 0xF
  2088                           
  2089  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2090                           ; 1 bytes @ 0xF
  2091                           
  2092  002F                     PROCULUS_Control_Register_Write@size:	
  2093                           ; 1 bytes @ 0xF
  2094                           
  2095  002F                     utoa@c:	
  2096                           ; 1 bytes @ 0xF
  2097                           
  2098  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2099                           ; 1 bytes @ 0xF
  2100                           
  2101  002F                     PROCULUS_VP_Write@vp:	
  2102                           ; 2 bytes @ 0xF
  2103                           
  2104  002F                     ___wmul@product:	
  2105                           ; 2 bytes @ 0xF
  2106                           
  2107                           
  2108                           ; 2 bytes @ 0xF
  2109  002F                     	ds	1
  2110  0030                     ??_EEPROM_24C1025_Write_Buffer:	
  2111  0030                     ??_PROCULUS_Control_Register_Write:	
  2112                           ; 1 bytes @ 0x10
  2113                           
  2114  0030                     utoa@buf:	
  2115                           ; 1 bytes @ 0x10
  2116                           
  2117                           
  2118                           ; 1 bytes @ 0x10
  2119  0030                     	ds	1
  2120  0031                     ?_itoa:	
  2121  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  2122                           ; 1 bytes @ 0x11
  2123                           
  2124  0031                     ??___flmul:	
  2125                           ; 1 bytes @ 0x11
  2126                           
  2127  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2128                           ; 1 bytes @ 0x11
  2129                           
  2130  0031                     EEPROM_24C1025_Read_Str@cnt:	
  2131                           ; 1 bytes @ 0x11
  2132                           
  2133  0031                     PROCULUS_Control_Register_Write@vetor:	
  2134                           ; 1 bytes @ 0x11
  2135                           
  2136  0031                     PROCULUS_VP_Write@vetor:	
  2137                           ; 1 bytes @ 0x11
  2138                           
  2139  0031                     itoa@val:	
  2140                           ; 1 bytes @ 0x11
  2141                           
  2142                           
  2143                           ; 2 bytes @ 0x11
  2144  0031                     	ds	1
  2145  0032                     ??_ADC_Media_10bits:	
  2146  0032                     ??_I2C_Master_Init:	
  2147                           ; 1 bytes @ 0x12
  2148                           
  2149  0032                     EEPROM_24C1025_Write_Buffer@count:	
  2150                           ; 1 bytes @ 0x12
  2151                           
  2152  0032                     EEPROM_24C1025_Write_Str@range:	
  2153                           ; 1 bytes @ 0x12
  2154                           
  2155  0032                     EEPROM_24C1025_Read_Str@chip_add:	
  2156                           ; 1 bytes @ 0x12
  2157                           
  2158  0032                     PROCULUS_Control_Register_Write@i:	
  2159                           ; 1 bytes @ 0x12
  2160                           
  2161  0032                     PROCULUS_VP_Write@size:	
  2162                           ; 1 bytes @ 0x12
  2163                           
  2164  0032                     ___fldiv@b:	
  2165                           ; 1 bytes @ 0x12
  2166                           
  2167                           
  2168                           ; 4 bytes @ 0x12
  2169  0032                     	ds	1
  2170  0033                     ?_PROCULUS_Show_Screen:	
  2171  0033                     ?_PROCULUS_Buzzer:	
  2172                           ; 1 bytes @ 0x13
  2173                           
  2174  0033                     ??_PROCULUS_VP_Write:	
  2175                           ; 1 bytes @ 0x13
  2176                           
  2177  0033                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2178                           ; 1 bytes @ 0x13
  2179                           
  2180  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2181                           ; 1 bytes @ 0x13
  2182                           
  2183  0033                     EEPROM_24C1025_Read_Str@range:	
  2184                           ; 1 bytes @ 0x13
  2185                           
  2186  0033                     ADC_Media_10bits@canal:	
  2187                           ; 1 bytes @ 0x13
  2188                           
  2189  0033                     PROCULUS_Buzzer@time_ms_x_10:	
  2190                           ; 1 bytes @ 0x13
  2191                           
  2192  0033                     PROCULUS_Show_Screen@screen:	
  2193                           ; 2 bytes @ 0x13
  2194                           
  2195  0033                     itoa@base:	
  2196                           ; 2 bytes @ 0x13
  2197                           
  2198                           
  2199                           ; 2 bytes @ 0x13
  2200  0033                     	ds	1
  2201  0034                     EEPROM_24C1025_Write_Buffer@range:	
  2202  0034                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2203                           ; 1 bytes @ 0x14
  2204                           
  2205  0034                     EEPROM_24C1025_Read_Str@ctrl:	
  2206                           ; 1 bytes @ 0x14
  2207                           
  2208  0034                     PROCULUS_VP_Write@i:	
  2209                           ; 1 bytes @ 0x14
  2210                           
  2211  0034                     ADC_Media_10bits@value:	
  2212                           ; 1 bytes @ 0x14
  2213                           
  2214                           
  2215                           ; 2 bytes @ 0x14
  2216  0034                     	ds	1
  2217  0035                     ??_itoa:	
  2218  0035                     ??_PROCULUS_Show_Screen:	
  2219                           ; 1 bytes @ 0x15
  2220                           
  2221  0035                     ??_PROCULUS_Buzzer:	
  2222                           ; 1 bytes @ 0x15
  2223                           
  2224  0035                     ?_PROCULUS_VP_Write_String:	
  2225                           ; 1 bytes @ 0x15
  2226                           
  2227  0035                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2228                           ; 1 bytes @ 0x15
  2229                           
  2230  0035                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2231                           ; 1 bytes @ 0x15
  2232                           
  2233  0035                     PROCULUS_VP_Write_String@vp:	
  2234                           ; 1 bytes @ 0x15
  2235                           
  2236                           
  2237                           ; 2 bytes @ 0x15
  2238  0035                     	ds	1
  2239  0036                     ?_EEPROM_24C1025_Write_Byte:	
  2240  0036                     ?_EEPROM_24C1025_Write_Int:	
  2241                           ; 1 bytes @ 0x16
  2242                           
  2243  0036                     ??___fldiv:	
  2244                           ; 1 bytes @ 0x16
  2245                           
  2246  0036                     EEPROM_24C1025_Read_Buffer@range:	
  2247                           ; 1 bytes @ 0x16
  2248                           
  2249  0036                     ADC_Media_10bits@i:	
  2250                           ; 1 bytes @ 0x16
  2251                           
  2252  0036                     ___flmul@sign:	
  2253                           ; 1 bytes @ 0x16
  2254                           
  2255  0036                     PROCULUS_Buzzer@vetor:	
  2256                           ; 1 bytes @ 0x16
  2257                           
  2258  0036                     PROCULUS_Show_Screen@vetor:	
  2259                           ; 2 bytes @ 0x16
  2260                           
  2261  0036                     EEPROM_24C1025_Write_Byte@mem_add:	
  2262                           ; 3 bytes @ 0x16
  2263                           
  2264  0036                     EEPROM_24C1025_Write_Int@mem_add:	
  2265                           ; 4 bytes @ 0x16
  2266                           
  2267                           
  2268                           ; 4 bytes @ 0x16
  2269  0036                     	ds	1
  2270  0037                     ?___fladd:	
  2271  0037                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2272                           ; 4 bytes @ 0x17
  2273                           
  2274  0037                     PROCULUS_VP_Write_String@text:	
  2275                           ; 1 bytes @ 0x17
  2276                           
  2277  0037                     ___flmul@aexp:	
  2278                           ; 1 bytes @ 0x17
  2279                           
  2280  0037                     itoa@buf:	
  2281                           ; 1 bytes @ 0x17
  2282                           
  2283  0037                     ___fladd@b:	
  2284                           ; 1 bytes @ 0x17
  2285                           
  2286                           
  2287                           ; 4 bytes @ 0x17
  2288  0037                     	ds	1
  2289  0038                     ??_PROCULUS_VP_Write_String:	
  2290  0038                     ?_EEPROM_24C1025_Read_Byte:	
  2291                           ; 1 bytes @ 0x18
  2292                           
  2293  0038                     ?_EEPROM_24C1025_Read_Int:	
  2294                           ; 1 bytes @ 0x18
  2295                           
  2296  0038                     EEPROM_24C1025_Read_Byte@mem_add:	
  2297                           ; 2 bytes @ 0x18
  2298                           
  2299  0038                     EEPROM_24C1025_Read_Int@mem_add:	
  2300                           ; 4 bytes @ 0x18
  2301                           
  2302  0038                     ___flmul@grs:	
  2303                           ; 4 bytes @ 0x18
  2304                           
  2305                           
  2306                           ; 4 bytes @ 0x18
  2307  0038                     	ds	2
  2308  003A                     EEPROM_24C1025_Write_Byte@data:	
  2309  003A                     EEPROM_24C1025_Write_Int@data:	
  2310                           ; 1 bytes @ 0x1A
  2311                           
  2312                           
  2313                           ; 2 bytes @ 0x1A
  2314  003A                     	ds	1
  2315  003B                     ??_EEPROM_24C1025_Write_Byte:	
  2316  003B                     ___fladd@a:	
  2317                           ; 1 bytes @ 0x1B
  2318                           
  2319  003B                     ___fldiv@rem:	
  2320                           ; 4 bytes @ 0x1B
  2321                           
  2322                           
  2323                           ; 4 bytes @ 0x1B
  2324  003B                     	ds	1
  2325  003C                     ??_EEPROM_24C1025_Read_Byte:	
  2326  003C                     ??_EEPROM_24C1025_Write_Int:	
  2327                           ; 1 bytes @ 0x1C
  2328                           
  2329  003C                     ??_EEPROM_24C1025_Read_Int:	
  2330                           ; 1 bytes @ 0x1C
  2331                           
  2332  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2333                           ; 1 bytes @ 0x1C
  2334                           
  2335  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2336                           ; 1 bytes @ 0x1C
  2337                           
  2338  003C                     ___flmul@bexp:	
  2339                           ; 1 bytes @ 0x1C
  2340                           
  2341                           
  2342                           ; 1 bytes @ 0x1C
  2343  003C                     	ds	1
  2344  003D                     EEPROM_24C1025_Read_Byte@data:	
  2345  003D                     ___flmul@prod:	
  2346                           ; 1 bytes @ 0x1D
  2347                           
  2348                           
  2349                           ; 4 bytes @ 0x1D
  2350  003D                     	ds	1
  2351  003E                     EEPROM_24C1025_Write_Int@chip_add:	
  2352  003E                     EEPROM_24C1025_Read_Int@chip_add:	
  2353                           ; 1 bytes @ 0x1E
  2354                           
  2355                           
  2356                           ; 1 bytes @ 0x1E
  2357  003E                     	ds	1
  2358  003F                     ??___fladd:	
  2359  003F                     ___fldiv@sign:	
  2360                           ; 1 bytes @ 0x1F
  2361                           
  2362  003F                     EEPROM_24C1025_Write_Int@local:	
  2363                           ; 1 bytes @ 0x1F
  2364                           
  2365  003F                     EEPROM_24C1025_Read_Int@data:	
  2366                           ; 2 bytes @ 0x1F
  2367                           
  2368                           
  2369                           ; 2 bytes @ 0x1F
  2370  003F                     	ds	1
  2371  0040                     ___fldiv@new_exp:	
  2372                           
  2373                           ; 2 bytes @ 0x20
  2374  0040                     	ds	1
  2375  0041                     ?_Save_Log:	
  2376  0041                     ?_EEPROM_24C1025_Fill_All:	
  2377                           ; 1 bytes @ 0x21
  2378                           
  2379  0041                     EEPROM_24C1025_Fill_All@value:	
  2380                           ; 1 bytes @ 0x21
  2381                           
  2382  0041                     ___flmul@temp:	
  2383                           ; 2 bytes @ 0x21
  2384                           
  2385  0041                     Save_Log@add_datalog:	
  2386                           ; 2 bytes @ 0x21
  2387                           
  2388                           
  2389                           ; 4 bytes @ 0x21
  2390  0041                     	ds	1
  2391  0042                     ___fldiv@grs:	
  2392                           
  2393                           ; 4 bytes @ 0x22
  2394  0042                     	ds	1
  2395  0043                     ??_EEPROM_24C1025_Fill_All:	
  2396  0043                     EEPROM_24C1025_Fill_All@chip_add:	
  2397                           ; 1 bytes @ 0x23
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x23
  2401  0043                     	ds	1
  2402  0044                     EEPROM_24C1025_Fill_All@mem_add:	
  2403                           
  2404                           ; 4 bytes @ 0x24
  2405  0044                     	ds	1
  2406  0045                     ??_Save_Log:	
  2407                           
  2408                           ; 1 bytes @ 0x25
  2409  0045                     	ds	1
  2410  0046                     ___fldiv@bexp:	
  2411                           
  2412                           ; 1 bytes @ 0x26
  2413  0046                     	ds	1
  2414  0047                     ___fladd@signs:	
  2415  0047                     ___fldiv@aexp:	
  2416                           ; 1 bytes @ 0x27
  2417                           
  2418                           
  2419                           ; 1 bytes @ 0x27
  2420  0047                     	ds	1
  2421  0048                     ??_Decodify_Command:	
  2422  0048                     ___fladd@aexp:	
  2423                           ; 1 bytes @ 0x28
  2424                           
  2425                           
  2426                           ; 1 bytes @ 0x28
  2427  0048                     	ds	1
  2428  0049                     ___fladd@bexp:	
  2429                           
  2430                           ; 1 bytes @ 0x29
  2431  0049                     	ds	1
  2432  004A                     ___fladd@grs:	
  2433                           
  2434                           ; 1 bytes @ 0x2A
  2435  004A                     	ds	1
  2436  004B                     ?___flsub:	
  2437  004B                     ___flsub@a:	
  2438                           ; 4 bytes @ 0x2B
  2439                           
  2440                           
  2441                           ; 4 bytes @ 0x2B
  2442  004B                     	ds	4
  2443  004F                     ___flsub@b:	
  2444                           
  2445                           ; 4 bytes @ 0x2F
  2446  004F                     	ds	4
  2447  0053                     ??_mediaLeituraPt100Umidadde:	
  2448  0053                     ??___flsub:	
  2449                           ; 1 bytes @ 0x33
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0x33
  2453  0053                     	ds	4
  2454  0057                     mediaLeituraPt100Umidadde@tensao:	
  2455                           
  2456                           ; 4 bytes @ 0x37
  2457  0057                     	ds	4
  2458  005B                     mediaLeituraPt100Umidadde@canal:	
  2459                           
  2460                           ; 1 bytes @ 0x3B
  2461  005B                     	ds	1
  2462  005C                     mediaLeituraPt100Umidadde@i:	
  2463                           
  2464                           ; 1 bytes @ 0x3C
  2465  005C                     	ds	1
  2466  005D                     mediaLeituraPt100Umidadde@Temp:	
  2467                           
  2468                           ; 4 bytes @ 0x3D
  2469  005D                     	ds	4
  2470  0061                     ??_main:	
  2471                           
  2472                           ; 1 bytes @ 0x41
  2473  0061                     	ds	3
  2474  0064                     main@reset:	
  2475                           
  2476                           ; 2 bytes @ 0x44
  2477  0064                     	ds	2
  2478                           
  2479                           	psect	maintext
  2480  14C3                     __pmaintext:	
  2481 ;;
  2482 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2483 ;;
  2484 ;; *************** function _main *****************
  2485 ;; Defined at:
  2486 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  reset           2   68[BANK0 ] unsigned int 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : B00/0
  2497 ;;		On exit  : 300/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       0       0       0       0
  2501 ;;      Locals:         0       2       0       0       0
  2502 ;;      Temps:          0       3       0       0       0
  2503 ;;      Totals:         0       5       0       0       0
  2504 ;;Total ram usage:        5 bytes
  2505 ;; Hardware stack levels required when called:    7
  2506 ;; This function calls:
  2507 ;;		_ADC_init
  2508 ;;		_Decodify_Command
  2509 ;;		_EEPROM_Read_Integer
  2510 ;;		_EEPROM_Write_Integer
  2511 ;;		_I2C_Master_Init
  2512 ;;		_USART_init
  2513 ;;		_mediaLeituraPt100Umidadde
  2514 ;;		_my_delay_ms_WDT
  2515 ;; This function is called by:
  2516 ;;		Startup code after reset
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _main
  2522  14C3                     _main:	
  2523                           
  2524                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2528  14C3  3002               	movlw	2
  2529  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  2530  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  2531  14C6  00E3               	movwf	??_main+2
  2532  14C7  3004               	movlw	4
  2533  14C8  00E2               	movwf	??_main+1
  2534  14C9  30B9               	movlw	185
  2535  14CA  00E1               	movwf	??_main
  2536  14CB                     u5527:	
  2537  14CB  0BE1               	decfsz	??_main,f
  2538  14CC  2CCB               	goto	u5527
  2539  14CD  0BE2               	decfsz	??_main+1,f
  2540  14CE  2CCB               	goto	u5527
  2541  14CF  0BE3               	decfsz	??_main+2,f
  2542  14D0  2CCB               	goto	u5527
  2543  14D1  2CD2               	nop2
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2546  14D2  1683               	bsf	3,5	;RP0=1, select bank1
  2547  14D3  1303               	bcf	3,6	;RP1=0, select bank1
  2548  14D4  160F               	bsf	15,4	;volatile
  2549                           
  2550                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2551  14D5  168F               	bsf	15,5	;volatile
  2552                           
  2553                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2554  14D6  170F               	bsf	15,6	;volatile
  2555                           
  2556                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2557  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  2558  14D8  0185               	clrf	5	;volatile
  2559                           
  2560                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2561  14D9  0186               	clrf	6	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2564  14DA  0187               	clrf	7	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2567  14DB  0189               	clrf	9	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2570  14DC  30EF               	movlw	239
  2571  14DD  1683               	bsf	3,5	;RP0=1, select bank1
  2572  14DE  0085               	movwf	5	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2575  14DF  300F               	movlw	15
  2576  14E0  0086               	movwf	6	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2579  14E1  30F0               	movlw	240
  2580  14E2  0087               	movwf	7	;volatile
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2583  14E3  30FF               	movlw	255
  2584  14E4  0089               	movwf	9	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2587  14E5  3011               	movlw	17
  2588  14E6  1703               	bsf	3,6	;RP1=1, select bank3
  2589  14E7  0088               	movwf	8	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2592  14E8  0189               	clrf	9	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2595  14E9  1303               	bcf	3,6	;RP1=0, select bank1
  2596  14EA  1381               	bcf	1,7	;volatile
  2597                           
  2598                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2599  14EB  300F               	movlw	15
  2600  14EC  0095               	movwf	21	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2603  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  2604  14EE  1786               	bsf	6,7	;volatile
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2607  14EF  1706               	bsf	6,6	;volatile
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2610  14F0  1686               	bsf	6,5	;volatile
  2611                           
  2612                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2613  14F1  3000               	movlw	0
  2614  14F2  00A3               	movwf	my_delay_ms_WDT@time+3
  2615  14F3  3000               	movlw	0
  2616  14F4  00A2               	movwf	my_delay_ms_WDT@time+2
  2617  14F5  3003               	movlw	3
  2618  14F6  00A1               	movwf	my_delay_ms_WDT@time+1
  2619  14F7  30E8               	movlw	232
  2620  14F8  00A0               	movwf	my_delay_ms_WDT@time
  2621  14F9  160A  158A  2755  160A  118A  	fcall	_my_delay_ms_WDT
  2622                           
  2623                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2624  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  2625  14FF  1281               	bcf	1,5	;volatile
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2628  1500  1581               	bsf	1,3	;volatile
  2629                           
  2630                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2631  1501  1401               	bsf	1,0	;volatile
  2632                           
  2633                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2634  1502  1481               	bsf	1,1	;volatile
  2635                           
  2636                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2637  1503  1501               	bsf	1,2	;volatile
  2638                           
  2639                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2640  1504  128B               	bcf	11,5	;volatile
  2641                           
  2642                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2643  1505  120B               	bcf	11,4	;volatile
  2644                           
  2645                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2646  1506  178B               	bsf	11,7	;volatile
  2647                           
  2648                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2649  1507  170B               	bsf	11,6	;volatile
  2650                           
  2651                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2652  1508  1283               	bcf	3,5	;RP0=0, select bank0
  2653  1509  1610               	bsf	16,4	;volatile
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2656  150A  1690               	bsf	16,5	;volatile
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2659  150B  1090               	bcf	16,1	;volatile
  2660                           
  2661                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2662  150C  1683               	bsf	3,5	;RP0=1, select bank1
  2663  150D  140C               	bsf	12,0	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2666  150E  3001               	movlw	1
  2667  150F  1283               	bcf	3,5	;RP0=0, select bank0
  2668  1510  0090               	movwf	16	;volatile
  2669  1511  0064               	clrwdt	;# 
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2672  1512  160A  158A  2351  160A  118A  	fcall	_ADC_init
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2675  1517  3000               	movlw	0
  2676  1518  00B1               	movwf	I2C_Master_Init@c+3
  2677  1519  3001               	movlw	1
  2678  151A  00B0               	movwf	I2C_Master_Init@c+2
  2679  151B  3086               	movlw	134
  2680  151C  00AF               	movwf	I2C_Master_Init@c+1
  2681  151D  30A0               	movlw	160
  2682  151E  00AE               	movwf	I2C_Master_Init@c
  2683  151F  160A  158A  2621  160A  118A  	fcall	_I2C_Master_Init
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2686  1524  3000               	movlw	0
  2687  1525  1283               	bcf	3,5	;RP0=0, select bank0
  2688  1526  00A3               	movwf	USART_init@baudrate+3
  2689  1527  3001               	movlw	1
  2690  1528  00A2               	movwf	USART_init@baudrate+2
  2691  1529  30C2               	movlw	194
  2692  152A  00A1               	movwf	USART_init@baudrate+1
  2693  152B  3000               	movlw	0
  2694  152C  00A0               	movwf	USART_init@baudrate
  2695  152D  160A  118A  20AE  160A  118A  	fcall	_USART_init
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2698  1532  3010               	movlw	16
  2699  1533  160A  158A  25CE  160A  118A  	fcall	_EEPROM_Read_Integer
  2700  1538  0824               	movf	?_EEPROM_Read_Integer+1,w
  2701  1539  00E5               	movwf	main@reset+1
  2702  153A  0823               	movf	?_EEPROM_Read_Integer,w
  2703  153B  00E4               	movwf	main@reset
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2706  153C  0A64               	incf	main@reset,w
  2707  153D  1D03               	skipz
  2708  153E  2D4B               	goto	l5959
  2709  153F  0A65               	incf	main@reset+1,w
  2710  1540  1D03               	btfss	3,2
  2711  1541  2D4B               	goto	l5959
  2712  1542  3000               	movlw	0
  2713  1543  00A5               	movwf	EEPROM_Write_Integer@dado
  2714  1544  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2715  1545  3010               	movlw	16
  2716  1546  160A  158A  2652  160A  118A  	fcall	_EEPROM_Write_Integer
  2717  154B                     l5959:	
  2718                           
  2719                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2720  154B  3001               	movlw	1
  2721  154C  1283               	bcf	3,5	;RP0=0, select bank0
  2722  154D  1303               	bcf	3,6	;RP1=0, select bank0
  2723  154E  07E4               	addwf	main@reset,f
  2724  154F  1803               	skipnc
  2725  1550  0AE5               	incf	main@reset+1,f
  2726  1551  3000               	movlw	0
  2727  1552  07E5               	addwf	main@reset+1,f
  2728                           
  2729                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2730  1553  0865               	movf	main@reset+1,w
  2731  1554  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2732  1555  0864               	movf	main@reset,w
  2733  1556  00A5               	movwf	EEPROM_Write_Integer@dado
  2734  1557  3010               	movlw	16
  2735  1558  160A  158A  2652  160A  118A  	fcall	_EEPROM_Write_Integer
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2738  155D  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2739  155E  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2742  155F  1283               	bcf	3,5	;RP0=0, select bank0
  2743  1560  1303               	bcf	3,6	;RP1=0, select bank0
  2744  1561  01E6               	clrf	_Delay_Led_Usart	;volatile
  2745  1562  01E7               	clrf	_Delay_Led_Usart+1	;volatile
  2746                           
  2747                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2748  1563  01FA               	clrf	_Delay_Led_Memory	;volatile
  2749  1564  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2750                           
  2751                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2752  1565  1683               	bsf	3,5	;RP0=1, select bank1
  2753  1566  01DE               	clrf	_segundo^(0+128)	;volatile
  2754                           
  2755                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2756  1567  01DD               	clrf	_hora^(0+128)	;volatile
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2759  1568  1283               	bcf	3,5	;RP0=0, select bank0
  2760  1569  1007               	bcf	7,0	;volatile
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2763  156A  1087               	bcf	7,1	;volatile
  2764                           
  2765                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2766  156B  1105               	bcf	5,2	;volatile
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2769  156C  1185               	bcf	5,3	;volatile
  2770                           
  2771                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2772  156D  0906               	comf	6,w	;volatile
  2773  156E  390F               	andlw	15
  2774  156F  00E1               	movwf	??_main
  2775  1570  0861               	movf	??_main,w
  2776  1571  00E9               	movwf	_Board_Number
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2779  1572  01EA               	clrf	_canal
  2780  1573  0AEA               	incf	_canal,f
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 229:      statuspower.flag_global_condensador=0;
  2783  1574  10EB               	bcf	_statuspower,1
  2784  1575                     l5985:	
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2787  1575  1283               	bcf	3,5	;RP0=0, select bank0
  2788  1576  17EC               	bsf	_generic_status,7
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 270:          if(++canal==2) canal=0;
  2791  1577  3001               	movlw	1
  2792  1578  00E1               	movwf	??_main
  2793  1579  0861               	movf	??_main,w
  2794  157A  07EA               	addwf	_canal,f
  2795  157B  3002               	movlw	2
  2796  157C  066A               	xorwf	_canal,w
  2797  157D  1903               	btfsc	3,2
  2798  157E  01EA               	clrf	_canal
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 271:          mediaLeituraPt100Umidadde(canal);
  2801  157F  086A               	movf	_canal,w
  2802  1580  120A  158A  2030  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2805  1585  1283               	bcf	3,5	;RP0=0, select bank0
  2806  1586  1C6C               	btfss	_generic_status,0
  2807  1587  2D75               	goto	l5985
  2808                           
  2809                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2810  1588  1683               	bsf	3,5	;RP0=1, select bank3
  2811  1589  1703               	bsf	3,6	;RP1=1, select bank3
  2812  158A  0814               	movf	_usart_buffer^(0+384),w	;volatile
  2813  158B  1303               	bcf	3,6	;RP1=0, select bank1
  2814  158C  00D8               	movwf	(_header+1)^(0+128)
  2815  158D  1703               	bsf	3,6	;RP1=1, select bank3
  2816  158E  0815               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2817  158F  1303               	bcf	3,6	;RP1=0, select bank1
  2818  1590  00D7               	movwf	_header^(0+128)
  2819                           
  2820                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2821  1591  30BB               	movlw	187
  2822  1592  0657               	xorwf	_header^(0+128),w
  2823  1593  30AA               	movlw	170
  2824  1594  1903               	skipnz
  2825  1595  0658               	xorwf	(_header+1)^(0+128),w
  2826  1596  1D03               	btfss	3,2
  2827  1597  2D75               	goto	l5985
  2828                           
  2829                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2830  1598  1703               	bsf	3,6	;RP1=1, select bank3
  2831  1599  0817               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2832  159A  1283               	bcf	3,5	;RP0=0, select bank0
  2833  159B  1303               	bcf	3,6	;RP1=0, select bank0
  2834  159C  00E1               	movwf	??_main
  2835  159D  0861               	movf	??_main,w
  2836  159E  00E8               	movwf	_destino
  2837                           
  2838                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2839  159F  0868               	movf	_destino,w
  2840  15A0  0669               	xorwf	_Board_Number,w
  2841  15A1  1D03               	btfss	3,2
  2842  15A2  0A68               	incf	_destino,w
  2843  15A3  1D03               	btfss	3,2
  2844  15A4  2D75               	goto	l5985
  2845                           
  2846                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2847  15A5  3014               	movlw	20
  2848  15A6  00E6               	movwf	_Delay_Led_Usart	;volatile
  2849  15A7  3000               	movlw	0
  2850  15A8  00E7               	movwf	_Delay_Led_Usart+1	;volatile
  2851                           
  2852                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2853  15A9  120A  118A  2037  160A  118A  	fcall	_Decodify_Command
  2854                           
  2855                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2856  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  2857  15AF  106C               	bcf	_generic_status,0
  2858                           
  2859                           ;SlaveLiofilizadorVer1.c: 297:             }
  2860  15B0  2D75               	goto	l5985
  2861  15B1                     __end_of_main:	
  2862                           
  2863                           	psect	text1
  2864  0830                     __ptext1:	
  2865 ;; *************** function _mediaLeituraPt100Umidadde *****************
  2866 ;; Defined at:
  2867 ;;		line 733 in file "SlaveLiofilizadorVer1.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  canal           1    wreg     unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  canal           1   59[BANK0 ] unsigned char 
  2872 ;;  Temp            4   61[BANK0 ] float 
  2873 ;;  tensao          4   55[BANK0 ] float 
  2874 ;;  i               1   60[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 300/0
  2881 ;;		On exit  : 200/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0      10       0       0       0
  2886 ;;      Temps:          0       4       0       0       0
  2887 ;;      Totals:         0      14       0       0       0
  2888 ;;Total ram usage:       14 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    3
  2891 ;; This function calls:
  2892 ;;		_ADC_Media_10bits
  2893 ;;		_Package_Usart_is_for_me
  2894 ;;		___fladd
  2895 ;;		___fldiv
  2896 ;;		___flmul
  2897 ;;		___flsub
  2898 ;;		___xxtofl
  2899 ;;		_my_delay_ms
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _mediaLeituraPt100Umidadde
  2907  0830                     _mediaLeituraPt100Umidadde:	
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2911                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  2912  0830  00DB               	movwf	mediaLeituraPt100Umidadde@canal
  2913                           
  2914                           ;SlaveLiofilizadorVer1.c: 733: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 734:      {;SlaveLiofilizadorVer1.c: 735:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 736:      float tensao;;SlaveLiofilizadorVer1.c: 737:      char i;;Slave
      +                          LiofilizadorVer1.c: 739:      ADCON0bits.CHS=canal;
  2915  0831  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  2916  0832  00D3               	movwf	??_mediaLeituraPt100Umidadde
  2917  0833  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  2918  0834  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  2919  0835  081F               	movf	31,w	;volatile
  2920  0836  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  2921  0837  39C3               	andlw	-61
  2922  0838  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  2923  0839  009F               	movwf	31	;volatile
  2924                           
  2925                           ;SlaveLiofilizadorVer1.c: 740:      my_delay_ms(1);
  2926  083A  3000               	movlw	0
  2927  083B  00A3               	movwf	my_delay_ms@time+3
  2928  083C  3000               	movlw	0
  2929  083D  00A2               	movwf	my_delay_ms@time+2
  2930  083E  3000               	movlw	0
  2931  083F  00A1               	movwf	my_delay_ms@time+1
  2932  0840  3001               	movlw	1
  2933  0841  00A0               	movwf	my_delay_ms@time
  2934  0842  160A  158A  271E  120A  158A  	fcall	_my_delay_ms
  2935                           
  2936                           ;SlaveLiofilizadorVer1.c: 741:      Temp=0;
  2937  0847  3000               	movlw	0
  2938  0848  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  2939  0849  3000               	movlw	0
  2940  084A  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  2941  084B  3000               	movlw	0
  2942  084C  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  2943  084D  3000               	movlw	0
  2944  084E  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  2945                           
  2946                           ;SlaveLiofilizadorVer1.c: 743:      for(i=1;i<15;i++)
  2947  084F  01DC               	clrf	mediaLeituraPt100Umidadde@i
  2948  0850  0ADC               	incf	mediaLeituraPt100Umidadde@i,f
  2949  0851                     l5065:	
  2950                           
  2951                           ;SlaveLiofilizadorVer1.c: 744:         {;SlaveLiofilizadorVer1.c: 745:         Temp+=ADC
      +                          _Media_10bits(canal);
  2952  0851  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  2953  0852  160A  118A  2169  120A  158A  	fcall	_ADC_Media_10bits
  2954  0857  0831               	movf	?_ADC_Media_10bits+3,w
  2955  0858  00BA               	movwf	___fladd@b+3
  2956  0859  0830               	movf	?_ADC_Media_10bits+2,w
  2957  085A  00B9               	movwf	___fladd@b+2
  2958  085B  082F               	movf	?_ADC_Media_10bits+1,w
  2959  085C  00B8               	movwf	___fladd@b+1
  2960  085D  082E               	movf	?_ADC_Media_10bits,w
  2961  085E  00B7               	movwf	___fladd@b
  2962  085F  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  2963  0860  00BE               	movwf	___fladd@a+3
  2964  0861  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  2965  0862  00BD               	movwf	___fladd@a+2
  2966  0863  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  2967  0864  00BC               	movwf	___fladd@a+1
  2968  0865  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  2969  0866  00BB               	movwf	___fladd@a
  2970  0867  120A  158A  25D3  120A  158A  	fcall	___fladd
  2971  086C  083A               	movf	?___fladd+3,w
  2972  086D  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  2973  086E  0839               	movf	?___fladd+2,w
  2974  086F  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  2975  0870  0838               	movf	?___fladd+1,w
  2976  0871  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  2977  0872  0837               	movf	?___fladd,w
  2978  0873  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  2979                           
  2980                           ;SlaveLiofilizadorVer1.c: 746:         if(Package_Usart_is_for_me()==1) break;
  2981  0874  160A  158A  23D4  120A  158A  	fcall	_Package_Usart_is_for_me
  2982  0879  3A01               	xorlw	1
  2983  087A  1903               	btfsc	3,2
  2984  087B  2884               	goto	l5075
  2985                           
  2986                           ;SlaveLiofilizadorVer1.c: 747:         }
  2987  087C  3001               	movlw	1
  2988  087D  00D3               	movwf	??_mediaLeituraPt100Umidadde
  2989  087E  0853               	movf	??_mediaLeituraPt100Umidadde,w
  2990  087F  07DC               	addwf	mediaLeituraPt100Umidadde@i,f
  2991  0880  300F               	movlw	15
  2992  0881  025C               	subwf	mediaLeituraPt100Umidadde@i,w
  2993  0882  1C03               	skipc
  2994  0883  2851               	goto	l5065
  2995  0884                     l5075:	
  2996                           
  2997                           ;SlaveLiofilizadorVer1.c: 748:      if(i<10)
  2998  0884  300A               	movlw	10
  2999  0885  025C               	subwf	mediaLeituraPt100Umidadde@i,w
  3000  0886  1C03               	btfss	3,0
  3001  0887  0008               	return
  3002                           
  3003                           ;SlaveLiofilizadorVer1.c: 755:      if(i==15)
  3004  0888  300F               	movlw	15
  3005  0889  065C               	xorwf	mediaLeituraPt100Umidadde@i,w
  3006  088A  1D03               	btfss	3,2
  3007  088B  2899               	goto	l5083
  3008                           
  3009                           ;SlaveLiofilizadorVer1.c: 756:        Temp/=(i-1);
  3010  088C  085C               	movf	mediaLeituraPt100Umidadde@i,w
  3011  088D  3EFF               	addlw	255
  3012  088E  00A0               	movwf	___xxtofl@val
  3013  088F  30FF               	movlw	255
  3014  0890  1803               	skipnc
  3015  0891  3000               	movlw	0
  3016  0892  00A1               	movwf	___xxtofl@val+1
  3017  0893  01A2               	clrf	___xxtofl@val+2
  3018  0894  1BA1               	btfsc	___xxtofl@val+1,7
  3019  0895  03A2               	decf	___xxtofl@val+2,f
  3020  0896  0822               	movf	___xxtofl@val+2,w
  3021  0897  00A3               	movwf	___xxtofl@val+3
  3022  0898  28A6               	goto	L1
  3023  0899                     l5083:	
  3024                           
  3025                           ;SlaveLiofilizadorVer1.c: 758:        Temp/=(i);
  3026  0899  085C               	movf	mediaLeituraPt100Umidadde@i,w
  3027  089A  00D3               	movwf	??_mediaLeituraPt100Umidadde
  3028  089B  01D4               	clrf	??_mediaLeituraPt100Umidadde+1
  3029  089C  01D5               	clrf	??_mediaLeituraPt100Umidadde+2
  3030  089D  01D6               	clrf	??_mediaLeituraPt100Umidadde+3
  3031  089E  0856               	movf	??_mediaLeituraPt100Umidadde+3,w
  3032  089F  00A3               	movwf	___xxtofl@val+3
  3033  08A0  0855               	movf	??_mediaLeituraPt100Umidadde+2,w
  3034  08A1  00A2               	movwf	___xxtofl@val+2
  3035  08A2  0854               	movf	??_mediaLeituraPt100Umidadde+1,w
  3036  08A3  00A1               	movwf	___xxtofl@val+1
  3037  08A4  0853               	movf	??_mediaLeituraPt100Umidadde,w
  3038  08A5  00A0               	movwf	___xxtofl@val
  3039  08A6                     L1:	
  3040  08A6  3001               	movlw	1
  3041  08A7  160A  118A  2337  120A  158A  	fcall	___xxtofl
  3042  08AC  0823               	movf	?___xxtofl+3,w
  3043  08AD  00B1               	movwf	___fldiv@a+3
  3044  08AE  0822               	movf	?___xxtofl+2,w
  3045  08AF  00B0               	movwf	___fldiv@a+2
  3046  08B0  0821               	movf	?___xxtofl+1,w
  3047  08B1  00AF               	movwf	___fldiv@a+1
  3048  08B2  0820               	movf	?___xxtofl,w
  3049  08B3  00AE               	movwf	___fldiv@a
  3050  08B4  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3051  08B5  00B5               	movwf	___fldiv@b+3
  3052  08B6  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3053  08B7  00B4               	movwf	___fldiv@b+2
  3054  08B8  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3055  08B9  00B3               	movwf	___fldiv@b+1
  3056  08BA  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3057  08BB  00B2               	movwf	___fldiv@b
  3058  08BC  120A  158A  2432  120A  158A  	fcall	___fldiv
  3059  08C1  0831               	movf	?___fldiv+3,w
  3060  08C2  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3061  08C3  0830               	movf	?___fldiv+2,w
  3062  08C4  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3063  08C5  082F               	movf	?___fldiv+1,w
  3064  08C6  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3065  08C7  082E               	movf	?___fldiv,w
  3066  08C8  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3067                           
  3068                           ;SlaveLiofilizadorVer1.c: 764:      tensao=(5.0/1023.0);
  3069  08C9  303B               	movlw	59
  3070  08CA  00DA               	movwf	mediaLeituraPt100Umidadde@tensao+3
  3071  08CB  30A0               	movlw	160
  3072  08CC  00D9               	movwf	mediaLeituraPt100Umidadde@tensao+2
  3073  08CD  3028               	movlw	40
  3074  08CE  00D8               	movwf	mediaLeituraPt100Umidadde@tensao+1
  3075  08CF  300A               	movlw	10
  3076  08D0  00D7               	movwf	mediaLeituraPt100Umidadde@tensao
  3077                           
  3078                           ;SlaveLiofilizadorVer1.c: 765:      Temp*=tensao;
  3079  08D1  085A               	movf	mediaLeituraPt100Umidadde@tensao+3,w
  3080  08D2  00AC               	movwf	___flmul@b+3
  3081  08D3  0859               	movf	mediaLeituraPt100Umidadde@tensao+2,w
  3082  08D4  00AB               	movwf	___flmul@b+2
  3083  08D5  0858               	movf	mediaLeituraPt100Umidadde@tensao+1,w
  3084  08D6  00AA               	movwf	___flmul@b+1
  3085  08D7  0857               	movf	mediaLeituraPt100Umidadde@tensao,w
  3086  08D8  00A9               	movwf	___flmul@b
  3087  08D9  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3088  08DA  00B0               	movwf	___flmul@a+3
  3089  08DB  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3090  08DC  00AF               	movwf	___flmul@a+2
  3091  08DD  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3092  08DE  00AE               	movwf	___flmul@a+1
  3093  08DF  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3094  08E0  00AD               	movwf	___flmul@a
  3095  08E1  120A  118A  2479  120A  158A  	fcall	___flmul
  3096  08E6  082C               	movf	?___flmul+3,w
  3097  08E7  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3098  08E8  082B               	movf	?___flmul+2,w
  3099  08E9  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3100  08EA  082A               	movf	?___flmul+1,w
  3101  08EB  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3102  08EC  0829               	movf	?___flmul,w
  3103  08ED  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3104                           
  3105                           ;SlaveLiofilizadorVer1.c: 766:      Temp*=40.0;
  3106  08EE  3042               	movlw	66
  3107  08EF  00AC               	movwf	___flmul@b+3
  3108  08F0  3020               	movlw	32
  3109  08F1  00AB               	movwf	___flmul@b+2
  3110  08F2  3000               	movlw	0
  3111  08F3  00AA               	movwf	___flmul@b+1
  3112  08F4  3000               	movlw	0
  3113  08F5  00A9               	movwf	___flmul@b
  3114  08F6  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3115  08F7  00B0               	movwf	___flmul@a+3
  3116  08F8  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3117  08F9  00AF               	movwf	___flmul@a+2
  3118  08FA  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3119  08FB  00AE               	movwf	___flmul@a+1
  3120  08FC  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3121  08FD  00AD               	movwf	___flmul@a
  3122  08FE  120A  118A  2479  120A  158A  	fcall	___flmul
  3123  0903  082C               	movf	?___flmul+3,w
  3124  0904  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3125  0905  082B               	movf	?___flmul+2,w
  3126  0906  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3127  0907  082A               	movf	?___flmul+1,w
  3128  0908  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3129  0909  0829               	movf	?___flmul,w
  3130  090A  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3131                           
  3132                           ;SlaveLiofilizadorVer1.c: 767:      Temp-=110.0;
  3133  090B  3042               	movlw	66
  3134  090C  00CE               	movwf	___flsub@a+3
  3135  090D  30DC               	movlw	220
  3136  090E  00CD               	movwf	___flsub@a+2
  3137  090F  3000               	movlw	0
  3138  0910  00CC               	movwf	___flsub@a+1
  3139  0911  3000               	movlw	0
  3140  0912  00CB               	movwf	___flsub@a
  3141  0913  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3142  0914  00D2               	movwf	___flsub@b+3
  3143  0915  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3144  0916  00D1               	movwf	___flsub@b+2
  3145  0917  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3146  0918  00D0               	movwf	___flsub@b+1
  3147  0919  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3148  091A  00CF               	movwf	___flsub@b
  3149  091B  160A  158A  245E  120A  158A  	fcall	___flsub
  3150  0920  084E               	movf	?___flsub+3,w
  3151  0921  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3152  0922  084D               	movf	?___flsub+2,w
  3153  0923  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3154  0924  084C               	movf	?___flsub+1,w
  3155  0925  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3156  0926  084B               	movf	?___flsub,w
  3157  0927  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3158                           
  3159                           ;SlaveLiofilizadorVer1.c: 770:      if(canal==0)
  3160  0928  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  3161  0929  1D03               	btfss	3,2
  3162  092A  293B               	goto	l5097
  3163                           
  3164                           ;SlaveLiofilizadorVer1.c: 771:         {;SlaveLiofilizadorVer1.c: 772:         Temperatu
      +                          ra0=Temp;
  3165  092B  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3166  092C  1683               	bsf	3,5	;RP0=1, select bank1
  3167  092D  00D4               	movwf	(_Temperatura0+3)^(0+128)
  3168  092E  1283               	bcf	3,5	;RP0=0, select bank0
  3169  092F  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3170  0930  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0931  00D3               	movwf	(_Temperatura0+2)^(0+128)
  3172  0932  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0933  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3174  0934  1683               	bsf	3,5	;RP0=1, select bank1
  3175  0935  00D2               	movwf	(_Temperatura0+1)^(0+128)
  3176  0936  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0937  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3178  0938  1683               	bsf	3,5	;RP0=1, select bank1
  3179  0939  00D1               	movwf	_Temperatura0^(0+128)
  3180                           
  3181                           ;SlaveLiofilizadorVer1.c: 773:         }
  3182  093A  0008               	return
  3183  093B                     l5097:	
  3184                           
  3185                           ;SlaveLiofilizadorVer1.c: 775:         {;SlaveLiofilizadorVer1.c: 776:         Umidade1=
      +                          Temp;
  3186  093B  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3187  093C  1683               	bsf	3,5	;RP0=1, select bank1
  3188  093D  00D0               	movwf	(_Umidade1+3)^(0+128)
  3189  093E  1283               	bcf	3,5	;RP0=0, select bank0
  3190  093F  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3191  0940  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0941  00CF               	movwf	(_Umidade1+2)^(0+128)
  3193  0942  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0943  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3195  0944  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0945  00CE               	movwf	(_Umidade1+1)^(0+128)
  3197  0946  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0947  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3199  0948  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0949  00CD               	movwf	_Umidade1^(0+128)
  3201  094A  0008               	return
  3202  094B                     __end_of_mediaLeituraPt100Umidadde:	
  3203                           
  3204                           	psect	text2
  3205  1C5E                     __ptext2:	
  3206 ;; *************** function ___flsub *****************
  3207 ;; Defined at:
  3208 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  a               4   43[BANK0 ] void 
  3211 ;;  b               4   47[BANK0 ] void 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  4   43[BANK0 ] void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 300/0
  3220 ;;		On exit  : 300/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       8       0       0       0
  3224 ;;      Locals:         0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       8       0       0       0
  3227 ;;Total ram usage:        8 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    2
  3230 ;; This function calls:
  3231 ;;		___fladd
  3232 ;; This function is called by:
  3233 ;;		_mediaLeituraPt100Umidadde
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function ___flsub
  3239  1C5E                     ___flsub:	
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3243  1C5E  3080               	movlw	128
  3244  1C5F  06CE               	xorwf	___flsub@a+3,f
  3245  1C60  0852               	movf	___flsub@b+3,w
  3246  1C61  00BA               	movwf	___fladd@b+3
  3247  1C62  0851               	movf	___flsub@b+2,w
  3248  1C63  00B9               	movwf	___fladd@b+2
  3249  1C64  0850               	movf	___flsub@b+1,w
  3250  1C65  00B8               	movwf	___fladd@b+1
  3251  1C66  084F               	movf	___flsub@b,w
  3252  1C67  00B7               	movwf	___fladd@b
  3253  1C68  084E               	movf	___flsub@a+3,w
  3254  1C69  00BE               	movwf	___fladd@a+3
  3255  1C6A  084D               	movf	___flsub@a+2,w
  3256  1C6B  00BD               	movwf	___fladd@a+2
  3257  1C6C  084C               	movf	___flsub@a+1,w
  3258  1C6D  00BC               	movwf	___fladd@a+1
  3259  1C6E  084B               	movf	___flsub@a,w
  3260  1C6F  00BB               	movwf	___fladd@a
  3261  1C70  120A  158A  25D3   	fcall	___fladd
  3262  1C73  083A               	movf	?___fladd+3,w
  3263  1C74  00CE               	movwf	?___flsub+3
  3264  1C75  0839               	movf	?___fladd+2,w
  3265  1C76  00CD               	movwf	?___flsub+2
  3266  1C77  0838               	movf	?___fladd+1,w
  3267  1C78  00CC               	movwf	?___flsub+1
  3268  1C79  0837               	movf	?___fladd,w
  3269  1C7A  00CB               	movwf	?___flsub
  3270  1C7B  0008               	return
  3271  1C7C                     __end_of___flsub:	
  3272                           
  3273                           	psect	text3
  3274  0DD3                     __ptext3:	
  3275 ;; *************** function ___fladd *****************
  3276 ;; Defined at:
  3277 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  b               4   23[BANK0 ] void 
  3280 ;;  a               4   27[BANK0 ] void 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  grs             1   42[BANK0 ] unsigned char 
  3283 ;;  bexp            1   41[BANK0 ] unsigned char 
  3284 ;;  aexp            1   40[BANK0 ] unsigned char 
  3285 ;;  signs           1   39[BANK0 ] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  4   23[BANK0 ] unsigned char 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, btemp+1
  3290 ;; Tracked objects:
  3291 ;;		On entry : 300/0
  3292 ;;		On exit  : 300/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         0       8       0       0       0
  3296 ;;      Locals:         0       4       0       0       0
  3297 ;;      Temps:          0       8       0       0       0
  3298 ;;      Totals:         0      20       0       0       0
  3299 ;;Total ram usage:       20 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_mediaLeituraPt100Umidadde
  3306 ;;		___flsub
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function ___fladd
  3312  0DD3                     ___fladd:	
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3316  0DD3  083A               	movf	___fladd@b+3,w
  3317  0DD4  3980               	andlw	128
  3318  0DD5  00BF               	movwf	??___fladd
  3319  0DD6  083F               	movf	??___fladd,w
  3320  0DD7  00C7               	movwf	___fladd@signs
  3321  0DD8  083A               	movf	___fladd@b+3,w
  3322  0DD9  00BF               	movwf	??___fladd
  3323  0DDA  073F               	addwf	??___fladd,w
  3324  0DDB  00C0               	movwf	??___fladd+1
  3325  0DDC  0840               	movf	??___fladd+1,w
  3326  0DDD  00C9               	movwf	___fladd@bexp
  3327  0DDE  1BB9               	btfsc	___fladd@b+2,7
  3328  0DDF  1449               	bsf	___fladd@bexp,0
  3329  0DE0  0849               	movf	___fladd@bexp,w
  3330  0DE1  1903               	btfsc	3,2
  3331  0DE2  2DF1               	goto	l4023
  3332  0DE3  0A49               	incf	___fladd@bexp,w
  3333  0DE4  1D03               	btfss	3,2
  3334  0DE5  2DEE               	goto	l4019
  3335  0DE6  3000               	movlw	0
  3336  0DE7  00BA               	movwf	___fladd@b+3
  3337  0DE8  3000               	movlw	0
  3338  0DE9  00B9               	movwf	___fladd@b+2
  3339  0DEA  3000               	movlw	0
  3340  0DEB  00B8               	movwf	___fladd@b+1
  3341  0DEC  3000               	movlw	0
  3342  0DED  00B7               	movwf	___fladd@b
  3343  0DEE                     l4019:	
  3344  0DEE  17B9               	bsf	___fladd@b+2,7
  3345  0DEF  01BA               	clrf	___fladd@b+3
  3346  0DF0  2DF9               	goto	l4025
  3347  0DF1                     l4023:	
  3348  0DF1  3000               	movlw	0
  3349  0DF2  00BA               	movwf	___fladd@b+3
  3350  0DF3  3000               	movlw	0
  3351  0DF4  00B9               	movwf	___fladd@b+2
  3352  0DF5  3000               	movlw	0
  3353  0DF6  00B8               	movwf	___fladd@b+1
  3354  0DF7  3000               	movlw	0
  3355  0DF8  00B7               	movwf	___fladd@b
  3356  0DF9                     l4025:	
  3357  0DF9  083E               	movf	___fladd@a+3,w
  3358  0DFA  3980               	andlw	128
  3359  0DFB  00BF               	movwf	??___fladd
  3360  0DFC  083F               	movf	??___fladd,w
  3361  0DFD  00C8               	movwf	___fladd@aexp
  3362  0DFE  0848               	movf	___fladd@aexp,w
  3363  0DFF  0647               	xorwf	___fladd@signs,w
  3364  0E00  1D03               	btfss	3,2
  3365  0E01  1747               	bsf	___fladd@signs,6
  3366  0E02  083E               	movf	___fladd@a+3,w
  3367  0E03  00BF               	movwf	??___fladd
  3368  0E04  073F               	addwf	??___fladd,w
  3369  0E05  00C0               	movwf	??___fladd+1
  3370  0E06  0840               	movf	??___fladd+1,w
  3371  0E07  00C8               	movwf	___fladd@aexp
  3372  0E08  1BBD               	btfsc	___fladd@a+2,7
  3373  0E09  1448               	bsf	___fladd@aexp,0
  3374  0E0A  0848               	movf	___fladd@aexp,w
  3375  0E0B  1903               	btfsc	3,2
  3376  0E0C  2E1B               	goto	l4047
  3377  0E0D  0A48               	incf	___fladd@aexp,w
  3378  0E0E  1D03               	btfss	3,2
  3379  0E0F  2E18               	goto	l4043
  3380  0E10  3000               	movlw	0
  3381  0E11  00BE               	movwf	___fladd@a+3
  3382  0E12  3000               	movlw	0
  3383  0E13  00BD               	movwf	___fladd@a+2
  3384  0E14  3000               	movlw	0
  3385  0E15  00BC               	movwf	___fladd@a+1
  3386  0E16  3000               	movlw	0
  3387  0E17  00BB               	movwf	___fladd@a
  3388  0E18                     l4043:	
  3389  0E18  17BD               	bsf	___fladd@a+2,7
  3390  0E19  01BE               	clrf	___fladd@a+3
  3391  0E1A  2E23               	goto	l1277
  3392  0E1B                     l4047:	
  3393  0E1B  3000               	movlw	0
  3394  0E1C  00BE               	movwf	___fladd@a+3
  3395  0E1D  3000               	movlw	0
  3396  0E1E  00BD               	movwf	___fladd@a+2
  3397  0E1F  3000               	movlw	0
  3398  0E20  00BC               	movwf	___fladd@a+1
  3399  0E21  3000               	movlw	0
  3400  0E22  00BB               	movwf	___fladd@a
  3401  0E23                     l1277:	
  3402  0E23  0849               	movf	___fladd@bexp,w
  3403  0E24  0248               	subwf	___fladd@aexp,w
  3404  0E25  1803               	skipnc
  3405  0E26  2E69               	goto	l4083
  3406  0E27  1F47               	btfss	___fladd@signs,6
  3407  0E28  2E2D               	goto	l4053
  3408  0E29  3080               	movlw	128
  3409  0E2A  00BF               	movwf	??___fladd
  3410  0E2B  083F               	movf	??___fladd,w
  3411  0E2C  06C7               	xorwf	___fladd@signs,f
  3412  0E2D                     l4053:	
  3413  0E2D  0849               	movf	___fladd@bexp,w
  3414  0E2E  00BF               	movwf	??___fladd
  3415  0E2F  083F               	movf	??___fladd,w
  3416  0E30  00CA               	movwf	___fladd@grs
  3417  0E31  0848               	movf	___fladd@aexp,w
  3418  0E32  00BF               	movwf	??___fladd
  3419  0E33  083F               	movf	??___fladd,w
  3420  0E34  00C9               	movwf	___fladd@bexp
  3421  0E35  084A               	movf	___fladd@grs,w
  3422  0E36  00BF               	movwf	??___fladd
  3423  0E37  083F               	movf	??___fladd,w
  3424  0E38  00C8               	movwf	___fladd@aexp
  3425  0E39  0837               	movf	___fladd@b,w
  3426  0E3A  00BF               	movwf	??___fladd
  3427  0E3B  083F               	movf	??___fladd,w
  3428  0E3C  00CA               	movwf	___fladd@grs
  3429  0E3D  083B               	movf	___fladd@a,w
  3430  0E3E  00BF               	movwf	??___fladd
  3431  0E3F  083F               	movf	??___fladd,w
  3432  0E40  00B7               	movwf	___fladd@b
  3433  0E41  084A               	movf	___fladd@grs,w
  3434  0E42  00BF               	movwf	??___fladd
  3435  0E43  083F               	movf	??___fladd,w
  3436  0E44  00BB               	movwf	___fladd@a
  3437  0E45  0838               	movf	___fladd@b+1,w
  3438  0E46  00BF               	movwf	??___fladd
  3439  0E47  083F               	movf	??___fladd,w
  3440  0E48  00CA               	movwf	___fladd@grs
  3441  0E49  083C               	movf	___fladd@a+1,w
  3442  0E4A  00BF               	movwf	??___fladd
  3443  0E4B  083F               	movf	??___fladd,w
  3444  0E4C  00B8               	movwf	___fladd@b+1
  3445  0E4D  084A               	movf	___fladd@grs,w
  3446  0E4E  00BF               	movwf	??___fladd
  3447  0E4F  083F               	movf	??___fladd,w
  3448  0E50  00BC               	movwf	___fladd@a+1
  3449  0E51  0839               	movf	___fladd@b+2,w
  3450  0E52  00BF               	movwf	??___fladd
  3451  0E53  083F               	movf	??___fladd,w
  3452  0E54  00CA               	movwf	___fladd@grs
  3453  0E55  083D               	movf	___fladd@a+2,w
  3454  0E56  00BF               	movwf	??___fladd
  3455  0E57  083F               	movf	??___fladd,w
  3456  0E58  00B9               	movwf	___fladd@b+2
  3457  0E59  084A               	movf	___fladd@grs,w
  3458  0E5A  00BF               	movwf	??___fladd
  3459  0E5B  083F               	movf	??___fladd,w
  3460  0E5C  00BD               	movwf	___fladd@a+2
  3461  0E5D  083A               	movf	___fladd@b+3,w
  3462  0E5E  00BF               	movwf	??___fladd
  3463  0E5F  083F               	movf	??___fladd,w
  3464  0E60  00CA               	movwf	___fladd@grs
  3465  0E61  083E               	movf	___fladd@a+3,w
  3466  0E62  00BF               	movwf	??___fladd
  3467  0E63  083F               	movf	??___fladd,w
  3468  0E64  00BA               	movwf	___fladd@b+3
  3469  0E65  084A               	movf	___fladd@grs,w
  3470  0E66  00BF               	movwf	??___fladd
  3471  0E67  083F               	movf	??___fladd,w
  3472  0E68  00BE               	movwf	___fladd@a+3
  3473  0E69                     l4083:	
  3474  0E69  01CA               	clrf	___fladd@grs
  3475  0E6A  0848               	movf	___fladd@aexp,w
  3476  0E6B  00BF               	movwf	??___fladd
  3477  0E6C  01C0               	clrf	??___fladd+1
  3478  0E6D  0840               	movf	??___fladd+1,w
  3479  0E6E  00C2               	movwf	??___fladd+3
  3480  0E6F  0849               	movf	___fladd@bexp,w
  3481  0E70  023F               	subwf	??___fladd,w
  3482  0E71  00C1               	movwf	??___fladd+2
  3483  0E72  1C03               	skipc
  3484  0E73  03C2               	decf	??___fladd+3,f
  3485  0E74  0842               	movf	??___fladd+3,w
  3486  0E75  3A80               	xorlw	128
  3487  0E76  00FF               	movwf	127
  3488  0E77  3080               	movlw	128
  3489  0E78  027F               	subwf	127,w
  3490  0E79  1D03               	skipz
  3491  0E7A  2E7D               	goto	u3355
  3492  0E7B  301A               	movlw	26
  3493  0E7C  0241               	subwf	??___fladd+2,w
  3494  0E7D                     u3355:	
  3495  0E7D  1C03               	skipc
  3496  0E7E  2EB6               	goto	l4101
  3497  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3499  0E81  083A               	movf	___fladd@b+3,w
  3500  0E82  0439               	iorwf	___fladd@b+2,w
  3501  0E83  0438               	iorwf	___fladd@b+1,w
  3502  0E84  0437               	iorwf	___fladd@b,w
  3503  0E85  1903               	btfsc	3,2
  3504  0E86  2E89               	goto	u3360
  3505  0E87  3001               	movlw	1
  3506  0E88  2E8A               	goto	u3370
  3507  0E89                     u3360:	
  3508  0E89  3000               	movlw	0
  3509  0E8A                     u3370:	
  3510  0E8A  00BF               	movwf	??___fladd
  3511  0E8B  083F               	movf	??___fladd,w
  3512  0E8C  00CA               	movwf	___fladd@grs
  3513  0E8D  3000               	movlw	0
  3514  0E8E  00BA               	movwf	___fladd@b+3
  3515  0E8F  3000               	movlw	0
  3516  0E90  00B9               	movwf	___fladd@b+2
  3517  0E91  3000               	movlw	0
  3518  0E92  00B8               	movwf	___fladd@b+1
  3519  0E93  3000               	movlw	0
  3520  0E94  00B7               	movwf	___fladd@b
  3521  0E95  0848               	movf	___fladd@aexp,w
  3522  0E96  00BF               	movwf	??___fladd
  3523  0E97  083F               	movf	??___fladd,w
  3524  0E98  00C9               	movwf	___fladd@bexp
  3525  0E99  2EBC               	goto	l1281
  3526  0E9A                     l1283:	
  3527  0E9A  1C4A               	btfss	___fladd@grs,0
  3528  0E9B  2EA5               	goto	l4091
  3529  0E9C  084A               	movf	___fladd@grs,w
  3530  0E9D  00BF               	movwf	??___fladd
  3531  0E9E  1003               	clrc
  3532  0E9F  0C3F               	rrf	??___fladd,w
  3533  0EA0  3801               	iorlw	1
  3534  0EA1  00C0               	movwf	??___fladd+1
  3535  0EA2  0840               	movf	??___fladd+1,w
  3536  0EA3  00CA               	movwf	___fladd@grs
  3537  0EA4  2EA7               	goto	l4093
  3538  0EA5                     l4091:	
  3539  0EA5  1003               	clrc
  3540  0EA6  0CCA               	rrf	___fladd@grs,f
  3541  0EA7                     l4093:	
  3542  0EA7  1837               	btfsc	___fladd@b,0
  3543  0EA8  17CA               	bsf	___fladd@grs,7
  3544  0EA9  3001               	movlw	1
  3545  0EAA  00BF               	movwf	??___fladd
  3546  0EAB                     u3405:	
  3547  0EAB  0D3A               	rlf	___fladd@b+3,w
  3548  0EAC  0CBA               	rrf	___fladd@b+3,f
  3549  0EAD  0CB9               	rrf	___fladd@b+2,f
  3550  0EAE  0CB8               	rrf	___fladd@b+1,f
  3551  0EAF  0CB7               	rrf	___fladd@b,f
  3552  0EB0  0BBF               	decfsz	??___fladd& (0+127),f
  3553  0EB1  2EAB               	goto	u3405
  3554  0EB2  3001               	movlw	1
  3555  0EB3  00BF               	movwf	??___fladd
  3556  0EB4  083F               	movf	??___fladd,w
  3557  0EB5  07C9               	addwf	___fladd@bexp,f
  3558  0EB6                     l4101:	
  3559  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0EB8  0848               	movf	___fladd@aexp,w
  3562  0EB9  0249               	subwf	___fladd@bexp,w
  3563  0EBA  1C03               	skipc
  3564  0EBB  2E9A               	goto	l1283
  3565  0EBC                     l1281:	
  3566  0EBC  1B47               	btfsc	___fladd@signs,6
  3567  0EBD  2EFD               	goto	l4127
  3568  0EBE  0849               	movf	___fladd@bexp,w
  3569  0EBF  1D03               	btfss	3,2
  3570  0EC0  2ECA               	goto	l4109
  3571  0EC1  3000               	movlw	0
  3572  0EC2  00BA               	movwf	?___fladd+3
  3573  0EC3  3000               	movlw	0
  3574  0EC4  00B9               	movwf	?___fladd+2
  3575  0EC5  3000               	movlw	0
  3576  0EC6  00B8               	movwf	?___fladd+1
  3577  0EC7  3000               	movlw	0
  3578  0EC8  00B7               	movwf	?___fladd
  3579  0EC9  0008               	return
  3580  0ECA                     l4109:	
  3581  0ECA  083B               	movf	___fladd@a,w
  3582  0ECB  07B7               	addwf	___fladd@b,f
  3583  0ECC  083C               	movf	___fladd@a+1,w
  3584  0ECD  1103               	clrz
  3585  0ECE  1803               	skipnc
  3586  0ECF  3E01               	addlw	1
  3587  0ED0  1D03               	btfss	3,2
  3588  0ED1  07B8               	addwf	___fladd@b+1,f
  3589  0ED2  083D               	movf	___fladd@a+2,w
  3590  0ED3  1103               	clrz
  3591  0ED4  1803               	skipnc
  3592  0ED5  3E01               	addlw	1
  3593  0ED6  1D03               	btfss	3,2
  3594  0ED7  07B9               	addwf	___fladd@b+2,f
  3595  0ED8  083E               	movf	___fladd@a+3,w
  3596  0ED9  1103               	clrz
  3597  0EDA  1803               	skipnc
  3598  0EDB  3E01               	addlw	1
  3599  0EDC  1D03               	btfss	3,2
  3600  0EDD  07BA               	addwf	___fladd@b+3,f
  3601  0EDE  1C3A               	btfss	___fladd@b+3,0
  3602  0EDF  2F9F               	goto	l4161
  3603  0EE0  1C4A               	btfss	___fladd@grs,0
  3604  0EE1  2EEB               	goto	l4117
  3605  0EE2  084A               	movf	___fladd@grs,w
  3606  0EE3  00BF               	movwf	??___fladd
  3607  0EE4  1003               	clrc
  3608  0EE5  0C3F               	rrf	??___fladd,w
  3609  0EE6  3801               	iorlw	1
  3610  0EE7  00C0               	movwf	??___fladd+1
  3611  0EE8  0840               	movf	??___fladd+1,w
  3612  0EE9  00CA               	movwf	___fladd@grs
  3613  0EEA  2EED               	goto	l4119
  3614  0EEB                     l4117:	
  3615  0EEB  1003               	clrc
  3616  0EEC  0CCA               	rrf	___fladd@grs,f
  3617  0EED                     l4119:	
  3618  0EED  1837               	btfsc	___fladd@b,0
  3619  0EEE  17CA               	bsf	___fladd@grs,7
  3620  0EEF  3001               	movlw	1
  3621  0EF0  00BF               	movwf	??___fladd
  3622  0EF1                     u3485:	
  3623  0EF1  0D3A               	rlf	___fladd@b+3,w
  3624  0EF2  0CBA               	rrf	___fladd@b+3,f
  3625  0EF3  0CB9               	rrf	___fladd@b+2,f
  3626  0EF4  0CB8               	rrf	___fladd@b+1,f
  3627  0EF5  0CB7               	rrf	___fladd@b,f
  3628  0EF6  0BBF               	decfsz	??___fladd& (0+127),f
  3629  0EF7  2EF1               	goto	u3485
  3630  0EF8  3001               	movlw	1
  3631  0EF9  00BF               	movwf	??___fladd
  3632  0EFA  083F               	movf	??___fladd,w
  3633  0EFB  07C9               	addwf	___fladd@bexp,f
  3634  0EFC  2F9F               	goto	l4161
  3635  0EFD                     l4127:	
  3636  0EFD  083A               	movf	___fladd@b+3,w
  3637  0EFE  3A80               	xorlw	128
  3638  0EFF  00FF               	movwf	127
  3639  0F00  083E               	movf	___fladd@a+3,w
  3640  0F01  3A80               	xorlw	128
  3641  0F02  027F               	subwf	127,w
  3642  0F03  1D03               	skipz
  3643  0F04  2F0F               	goto	u3493
  3644  0F05  083D               	movf	___fladd@a+2,w
  3645  0F06  0239               	subwf	___fladd@b+2,w
  3646  0F07  1D03               	skipz
  3647  0F08  2F0F               	goto	u3493
  3648  0F09  083C               	movf	___fladd@a+1,w
  3649  0F0A  0238               	subwf	___fladd@b+1,w
  3650  0F0B  1D03               	skipz
  3651  0F0C  2F0F               	goto	u3493
  3652  0F0D  083B               	movf	___fladd@a,w
  3653  0F0E  0237               	subwf	___fladd@b,w
  3654  0F0F                     u3493:	
  3655  0F0F  1803               	skipnc
  3656  0F10  2F67               	goto	l4137
  3657  0F11  30FF               	movlw	255
  3658  0F12  00BF               	movwf	??___fladd
  3659  0F13  30FF               	movlw	255
  3660  0F14  00C0               	movwf	??___fladd+1
  3661  0F15  30FF               	movlw	255
  3662  0F16  00C1               	movwf	??___fladd+2
  3663  0F17  30FF               	movlw	255
  3664  0F18  00C2               	movwf	??___fladd+3
  3665  0F19  083B               	movf	___fladd@a,w
  3666  0F1A  00C3               	movwf	??___fladd+4
  3667  0F1B  083C               	movf	___fladd@a+1,w
  3668  0F1C  00C4               	movwf	??___fladd+5
  3669  0F1D  083D               	movf	___fladd@a+2,w
  3670  0F1E  00C5               	movwf	??___fladd+6
  3671  0F1F  083E               	movf	___fladd@a+3,w
  3672  0F20  00C6               	movwf	??___fladd+7
  3673  0F21  0837               	movf	___fladd@b,w
  3674  0F22  02C3               	subwf	??___fladd+4,f
  3675  0F23  0838               	movf	___fladd@b+1,w
  3676  0F24  1C03               	skipc
  3677  0F25  0F38               	incfsz	___fladd@b+1,w
  3678  0F26  2F28               	goto	u3501
  3679  0F27  2F29               	goto	u3502
  3680  0F28                     u3501:	
  3681  0F28  02C4               	subwf	??___fladd+5,f
  3682  0F29                     u3502:	
  3683  0F29  0839               	movf	___fladd@b+2,w
  3684  0F2A  1C03               	skipc
  3685  0F2B  0F39               	incfsz	___fladd@b+2,w
  3686  0F2C  2F2E               	goto	u3503
  3687  0F2D  2F2F               	goto	u3504
  3688  0F2E                     u3503:	
  3689  0F2E  02C5               	subwf	??___fladd+6,f
  3690  0F2F                     u3504:	
  3691  0F2F  083A               	movf	___fladd@b+3,w
  3692  0F30  1C03               	skipc
  3693  0F31  0F3A               	incfsz	___fladd@b+3,w
  3694  0F32  2F34               	goto	u3505
  3695  0F33  2F35               	goto	u3506
  3696  0F34                     u3505:	
  3697  0F34  02C6               	subwf	??___fladd+7,f
  3698  0F35                     u3506:	
  3699  0F35  0843               	movf	??___fladd+4,w
  3700  0F36  07BF               	addwf	??___fladd,f
  3701  0F37  0844               	movf	??___fladd+5,w
  3702  0F38  1803               	skipnc
  3703  0F39  0F44               	incfsz	??___fladd+5,w
  3704  0F3A  2F3C               	goto	u3510
  3705  0F3B  2F3D               	goto	u3511
  3706  0F3C                     u3510:	
  3707  0F3C  07C0               	addwf	??___fladd+1,f
  3708  0F3D                     u3511:	
  3709  0F3D  0845               	movf	??___fladd+6,w
  3710  0F3E  1803               	skipnc
  3711  0F3F  0F45               	incfsz	??___fladd+6,w
  3712  0F40  2F42               	goto	u3512
  3713  0F41  2F43               	goto	u3513
  3714  0F42                     u3512:	
  3715  0F42  07C1               	addwf	??___fladd+2,f
  3716  0F43                     u3513:	
  3717  0F43  0846               	movf	??___fladd+7,w
  3718  0F44  1803               	skipnc
  3719  0F45  0A46               	incf	??___fladd+7,w
  3720  0F46  07C2               	addwf	??___fladd+3,f
  3721  0F47  0842               	movf	??___fladd+3,w
  3722  0F48  00BA               	movwf	___fladd@b+3
  3723  0F49  0841               	movf	??___fladd+2,w
  3724  0F4A  00B9               	movwf	___fladd@b+2
  3725  0F4B  0840               	movf	??___fladd+1,w
  3726  0F4C  00B8               	movwf	___fladd@b+1
  3727  0F4D  083F               	movf	??___fladd,w
  3728  0F4E  00B7               	movwf	___fladd@b
  3729  0F4F  3080               	movlw	128
  3730  0F50  00BF               	movwf	??___fladd
  3731  0F51  083F               	movf	??___fladd,w
  3732  0F52  06C7               	xorwf	___fladd@signs,f
  3733  0F53  09CA               	comf	___fladd@grs,f
  3734  0F54  0ACA               	incf	___fladd@grs,f
  3735  0F55  084A               	movf	___fladd@grs,w
  3736  0F56  1D03               	btfss	3,2
  3737  0F57  2F75               	goto	l1298
  3738  0F58  3001               	movlw	1
  3739  0F59  07B7               	addwf	___fladd@b,f
  3740  0F5A  3000               	movlw	0
  3741  0F5B  1803               	skipnc
  3742  0F5C  3001               	movlw	1
  3743  0F5D  07B8               	addwf	___fladd@b+1,f
  3744  0F5E  3000               	movlw	0
  3745  0F5F  1803               	skipnc
  3746  0F60  3001               	movlw	1
  3747  0F61  07B9               	addwf	___fladd@b+2,f
  3748  0F62  3000               	movlw	0
  3749  0F63  1803               	skipnc
  3750  0F64  3001               	movlw	1
  3751  0F65  07BA               	addwf	___fladd@b+3,f
  3752  0F66  2F75               	goto	l1298
  3753  0F67                     l4137:	
  3754  0F67  083B               	movf	___fladd@a,w
  3755  0F68  02B7               	subwf	___fladd@b,f
  3756  0F69  083C               	movf	___fladd@a+1,w
  3757  0F6A  1C03               	skipc
  3758  0F6B  0F3C               	incfsz	___fladd@a+1,w
  3759  0F6C  02B8               	subwf	___fladd@b+1,f
  3760  0F6D  083D               	movf	___fladd@a+2,w
  3761  0F6E  1C03               	skipc
  3762  0F6F  0F3D               	incfsz	___fladd@a+2,w
  3763  0F70  02B9               	subwf	___fladd@b+2,f
  3764  0F71  083E               	movf	___fladd@a+3,w
  3765  0F72  1C03               	skipc
  3766  0F73  0F3E               	incfsz	___fladd@a+3,w
  3767  0F74  02BA               	subwf	___fladd@b+3,f
  3768  0F75                     l1298:	
  3769  0F75  083A               	movf	___fladd@b+3,w
  3770  0F76  0439               	iorwf	___fladd@b+2,w
  3771  0F77  0438               	iorwf	___fladd@b+1,w
  3772  0F78  0437               	iorwf	___fladd@b,w
  3773  0F79  1D03               	skipz
  3774  0F7A  2F9D               	goto	l4159
  3775  0F7B  084A               	movf	___fladd@grs,w
  3776  0F7C  1D03               	btfss	3,2
  3777  0F7D  2F9D               	goto	l4159
  3778  0F7E  3000               	movlw	0
  3779  0F7F  00BA               	movwf	?___fladd+3
  3780  0F80  3000               	movlw	0
  3781  0F81  00B9               	movwf	?___fladd+2
  3782  0F82  3000               	movlw	0
  3783  0F83  00B8               	movwf	?___fladd+1
  3784  0F84  3000               	movlw	0
  3785  0F85  00B7               	movwf	?___fladd
  3786  0F86  0008               	return
  3787  0F87                     l4145:	
  3788  0F87  3001               	movlw	1
  3789  0F88  00BF               	movwf	??___fladd
  3790  0F89                     u3555:	
  3791  0F89  1003               	clrc
  3792  0F8A  0DB7               	rlf	___fladd@b,f
  3793  0F8B  0DB8               	rlf	___fladd@b+1,f
  3794  0F8C  0DB9               	rlf	___fladd@b+2,f
  3795  0F8D  0DBA               	rlf	___fladd@b+3,f
  3796  0F8E  0BBF               	decfsz	??___fladd,f
  3797  0F8F  2F89               	goto	u3555
  3798  0F90  1BCA               	btfsc	___fladd@grs,7
  3799  0F91  1437               	bsf	___fladd@b,0
  3800  0F92  1C4A               	btfss	___fladd@grs,0
  3801  0F93  2F96               	goto	l4153
  3802  0F94  1403               	setc
  3803  0F95  2F97               	goto	L2
  3804  0F96                     l4153:	
  3805  0F96  1003               	clrc
  3806  0F97                     L2:	
  3807  0F97  0DCA               	rlf	___fladd@grs,f
  3808  0F98  0849               	movf	___fladd@bexp,w
  3809  0F99  1903               	btfsc	3,2
  3810  0F9A  2F9D               	goto	l4159
  3811  0F9B  3001               	movlw	1
  3812  0F9C  02C9               	subwf	___fladd@bexp,f
  3813  0F9D                     l4159:	
  3814  0F9D  1FB9               	btfss	___fladd@b+2,7
  3815  0F9E  2F87               	goto	l4145
  3816  0F9F                     l4161:	
  3817  0F9F  01C8               	clrf	___fladd@aexp
  3818  0FA0  1FCA               	btfss	___fladd@grs,7
  3819  0FA1  2FAA               	goto	l4171
  3820  0FA2  084A               	movf	___fladd@grs,w
  3821  0FA3  397F               	andlw	127
  3822  0FA4  1903               	btfsc	3,2
  3823  0FA5  1837               	btfsc	___fladd@b,0
  3824  0FA6  2FA8               	goto	l4167
  3825  0FA7  2FAA               	goto	l4171
  3826  0FA8                     l4167:	
  3827  0FA8  01C8               	clrf	___fladd@aexp
  3828  0FA9  0AC8               	incf	___fladd@aexp,f
  3829  0FAA                     l4171:	
  3830  0FAA  0848               	movf	___fladd@aexp,w
  3831  0FAB  1903               	btfsc	3,2
  3832  0FAC  2FDD               	goto	l1311
  3833  0FAD  3001               	movlw	1
  3834  0FAE  07B7               	addwf	___fladd@b,f
  3835  0FAF  3000               	movlw	0
  3836  0FB0  1803               	skipnc
  3837  0FB1  3001               	movlw	1
  3838  0FB2  07B8               	addwf	___fladd@b+1,f
  3839  0FB3  3000               	movlw	0
  3840  0FB4  1803               	skipnc
  3841  0FB5  3001               	movlw	1
  3842  0FB6  07B9               	addwf	___fladd@b+2,f
  3843  0FB7  3000               	movlw	0
  3844  0FB8  1803               	skipnc
  3845  0FB9  3001               	movlw	1
  3846  0FBA  07BA               	addwf	___fladd@b+3,f
  3847  0FBB  1C3A               	btfss	___fladd@b+3,0
  3848  0FBC  2FDD               	goto	l1311
  3849  0FBD  0837               	movf	___fladd@b,w
  3850  0FBE  00BF               	movwf	??___fladd
  3851  0FBF  0838               	movf	___fladd@b+1,w
  3852  0FC0  00C0               	movwf	??___fladd+1
  3853  0FC1  0839               	movf	___fladd@b+2,w
  3854  0FC2  00C1               	movwf	??___fladd+2
  3855  0FC3  083A               	movf	___fladd@b+3,w
  3856  0FC4  00C2               	movwf	??___fladd+3
  3857  0FC5  3001               	movlw	1
  3858  0FC6  00C3               	movwf	??___fladd+4
  3859  0FC7                     u3655:	
  3860  0FC7  0D42               	rlf	??___fladd+3,w
  3861  0FC8  0CC2               	rrf	??___fladd+3,f
  3862  0FC9  0CC1               	rrf	??___fladd+2,f
  3863  0FCA  0CC0               	rrf	??___fladd+1,f
  3864  0FCB  0CBF               	rrf	??___fladd,f
  3865  0FCC  0BC3               	decfsz	??___fladd+4,f
  3866  0FCD  2FC7               	goto	u3655
  3867  0FCE  0842               	movf	??___fladd+3,w
  3868  0FCF  00BA               	movwf	___fladd@b+3
  3869  0FD0  0841               	movf	??___fladd+2,w
  3870  0FD1  00B9               	movwf	___fladd@b+2
  3871  0FD2  0840               	movf	??___fladd+1,w
  3872  0FD3  00B8               	movwf	___fladd@b+1
  3873  0FD4  083F               	movf	??___fladd,w
  3874  0FD5  00B7               	movwf	___fladd@b
  3875  0FD6  0A49               	incf	___fladd@bexp,w
  3876  0FD7  1903               	btfsc	3,2
  3877  0FD8  2FDD               	goto	l1311
  3878  0FD9  3001               	movlw	1
  3879  0FDA  00BF               	movwf	??___fladd
  3880  0FDB  083F               	movf	??___fladd,w
  3881  0FDC  07C9               	addwf	___fladd@bexp,f
  3882  0FDD                     l1311:	
  3883  0FDD  0A49               	incf	___fladd@bexp,w
  3884  0FDE  1D03               	btfss	3,2
  3885  0FDF  0849               	movf	___fladd@bexp,w
  3886  0FE0  1D03               	btfss	3,2
  3887  0FE1  2FED               	goto	l4189
  3888  0FE2  3000               	movlw	0
  3889  0FE3  00BA               	movwf	___fladd@b+3
  3890  0FE4  3000               	movlw	0
  3891  0FE5  00B9               	movwf	___fladd@b+2
  3892  0FE6  3000               	movlw	0
  3893  0FE7  00B8               	movwf	___fladd@b+1
  3894  0FE8  3000               	movlw	0
  3895  0FE9  00B7               	movwf	___fladd@b
  3896  0FEA  0849               	movf	___fladd@bexp,w
  3897  0FEB  1903               	btfsc	3,2
  3898  0FEC  01C7               	clrf	___fladd@signs
  3899  0FED                     l4189:	
  3900  0FED  1C49               	btfss	___fladd@bexp,0
  3901  0FEE  2FF1               	goto	l4193
  3902  0FEF  17B9               	bsf	___fladd@b+2,7
  3903  0FF0  2FF5               	goto	l1319
  3904  0FF1                     l4193:	
  3905  0FF1  307F               	movlw	127
  3906  0FF2  00BF               	movwf	??___fladd
  3907  0FF3  083F               	movf	??___fladd,w
  3908  0FF4  05B9               	andwf	___fladd@b+2,f
  3909  0FF5                     l1319:	
  3910  0FF5  0849               	movf	___fladd@bexp,w
  3911  0FF6  00BF               	movwf	??___fladd
  3912  0FF7  1003               	clrc
  3913  0FF8  0C3F               	rrf	??___fladd,w
  3914  0FF9  00C0               	movwf	??___fladd+1
  3915  0FFA  0840               	movf	??___fladd+1,w
  3916  0FFB  00BA               	movwf	___fladd@b+3
  3917  0FFC  1FC7               	btfss	___fladd@signs,7
  3918  0FFD  0008               	return
  3919  0FFE  17BA               	bsf	___fladd@b+3,7
  3920  0FFF  0008               	return
  3921  1000                     __end_of___fladd:	
  3922                           
  3923                           	psect	text4
  3924  0C32                     __ptext4:	
  3925 ;; *************** function ___fldiv *****************
  3926 ;; Defined at:
  3927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  a               4   14[BANK0 ] unsigned char 
  3930 ;;  b               4   18[BANK0 ] unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  grs             4   34[BANK0 ] unsigned long 
  3933 ;;  rem             4   27[BANK0 ] unsigned long 
  3934 ;;  new_exp         2   32[BANK0 ] int 
  3935 ;;  aexp            1   39[BANK0 ] unsigned char 
  3936 ;;  bexp            1   38[BANK0 ] unsigned char 
  3937 ;;  sign            1   31[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  4   14[BANK0 ] unsigned char 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0, btemp+1
  3942 ;; Tracked objects:
  3943 ;;		On entry : 300/0
  3944 ;;		On exit  : 300/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       8       0       0       0
  3948 ;;      Locals:         0      13       0       0       0
  3949 ;;      Temps:          0       5       0       0       0
  3950 ;;      Totals:         0      26       0       0       0
  3951 ;;Total ram usage:       26 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_mediaLeituraPt100Umidadde
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function ___fldiv
  3963  0C32                     ___fldiv:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3967  0C32  0835               	movf	___fldiv@b+3,w
  3968  0C33  3980               	andlw	128
  3969  0C34  00B6               	movwf	??___fldiv
  3970  0C35  0836               	movf	??___fldiv,w
  3971  0C36  00BF               	movwf	___fldiv@sign
  3972  0C37  0835               	movf	___fldiv@b+3,w
  3973  0C38  00B6               	movwf	??___fldiv
  3974  0C39  0736               	addwf	??___fldiv,w
  3975  0C3A  00B7               	movwf	??___fldiv+1
  3976  0C3B  0837               	movf	??___fldiv+1,w
  3977  0C3C  00C6               	movwf	___fldiv@bexp
  3978  0C3D  1BB4               	btfsc	___fldiv@b+2,7
  3979  0C3E  1446               	bsf	___fldiv@bexp,0
  3980  0C3F  0846               	movf	___fldiv@bexp,w
  3981  0C40  1903               	btfsc	3,2
  3982  0C41  2C50               	goto	l4719
  3983  0C42  0A46               	incf	___fldiv@bexp,w
  3984  0C43  1D03               	btfss	3,2
  3985  0C44  2C4D               	goto	l4715
  3986  0C45  3000               	movlw	0
  3987  0C46  00B5               	movwf	___fldiv@b+3
  3988  0C47  3000               	movlw	0
  3989  0C48  00B4               	movwf	___fldiv@b+2
  3990  0C49  3000               	movlw	0
  3991  0C4A  00B3               	movwf	___fldiv@b+1
  3992  0C4B  3000               	movlw	0
  3993  0C4C  00B2               	movwf	___fldiv@b
  3994  0C4D                     l4715:	
  3995  0C4D  17B4               	bsf	___fldiv@b+2,7
  3996  0C4E  01B5               	clrf	___fldiv@b+3
  3997  0C4F  2C58               	goto	l4721
  3998  0C50                     l4719:	
  3999  0C50  3000               	movlw	0
  4000  0C51  00B5               	movwf	___fldiv@b+3
  4001  0C52  3000               	movlw	0
  4002  0C53  00B4               	movwf	___fldiv@b+2
  4003  0C54  3000               	movlw	0
  4004  0C55  00B3               	movwf	___fldiv@b+1
  4005  0C56  3000               	movlw	0
  4006  0C57  00B2               	movwf	___fldiv@b
  4007  0C58                     l4721:	
  4008  0C58  0831               	movf	___fldiv@a+3,w
  4009  0C59  3980               	andlw	128
  4010  0C5A  00B6               	movwf	??___fldiv
  4011  0C5B  0836               	movf	??___fldiv,w
  4012  0C5C  06BF               	xorwf	___fldiv@sign,f
  4013  0C5D  0831               	movf	___fldiv@a+3,w
  4014  0C5E  00B6               	movwf	??___fldiv
  4015  0C5F  0736               	addwf	??___fldiv,w
  4016  0C60  00B7               	movwf	??___fldiv+1
  4017  0C61  0837               	movf	??___fldiv+1,w
  4018  0C62  00C7               	movwf	___fldiv@aexp
  4019  0C63  1BB0               	btfsc	___fldiv@a+2,7
  4020  0C64  1447               	bsf	___fldiv@aexp,0
  4021  0C65  0847               	movf	___fldiv@aexp,w
  4022  0C66  1903               	btfsc	3,2
  4023  0C67  2C76               	goto	l4739
  4024  0C68  0A47               	incf	___fldiv@aexp,w
  4025  0C69  1D03               	btfss	3,2
  4026  0C6A  2C73               	goto	l4735
  4027  0C6B  3000               	movlw	0
  4028  0C6C  00B1               	movwf	___fldiv@a+3
  4029  0C6D  3000               	movlw	0
  4030  0C6E  00B0               	movwf	___fldiv@a+2
  4031  0C6F  3000               	movlw	0
  4032  0C70  00AF               	movwf	___fldiv@a+1
  4033  0C71  3000               	movlw	0
  4034  0C72  00AE               	movwf	___fldiv@a
  4035  0C73                     l4735:	
  4036  0C73  17B0               	bsf	___fldiv@a+2,7
  4037  0C74  01B1               	clrf	___fldiv@a+3
  4038  0C75  2C7E               	goto	l1333
  4039  0C76                     l4739:	
  4040  0C76  3000               	movlw	0
  4041  0C77  00B1               	movwf	___fldiv@a+3
  4042  0C78  3000               	movlw	0
  4043  0C79  00B0               	movwf	___fldiv@a+2
  4044  0C7A  3000               	movlw	0
  4045  0C7B  00AF               	movwf	___fldiv@a+1
  4046  0C7C  3000               	movlw	0
  4047  0C7D  00AE               	movwf	___fldiv@a
  4048  0C7E                     l1333:	
  4049  0C7E  0831               	movf	___fldiv@a+3,w
  4050  0C7F  0430               	iorwf	___fldiv@a+2,w
  4051  0C80  042F               	iorwf	___fldiv@a+1,w
  4052  0C81  042E               	iorwf	___fldiv@a,w
  4053  0C82  1D03               	skipz
  4054  0C83  2C9D               	goto	l4749
  4055  0C84  3000               	movlw	0
  4056  0C85  00B5               	movwf	___fldiv@b+3
  4057  0C86  3000               	movlw	0
  4058  0C87  00B4               	movwf	___fldiv@b+2
  4059  0C88  3000               	movlw	0
  4060  0C89  00B3               	movwf	___fldiv@b+1
  4061  0C8A  3000               	movlw	0
  4062  0C8B  00B2               	movwf	___fldiv@b
  4063  0C8C  3080               	movlw	128
  4064  0C8D  04B4               	iorwf	___fldiv@b+2,f
  4065  0C8E  307F               	movlw	127
  4066  0C8F  04B5               	iorwf	___fldiv@b+3,f
  4067  0C90                     L3:	
  4068  0C90  083F               	movf	___fldiv@sign,w
  4069  0C91  00B6               	movwf	??___fldiv
  4070  0C92  0836               	movf	??___fldiv,w
  4071  0C93  04B5               	iorwf	___fldiv@b+3,f
  4072  0C94  0835               	movf	___fldiv@b+3,w
  4073  0C95  00B1               	movwf	?___fldiv+3
  4074  0C96  0834               	movf	___fldiv@b+2,w
  4075  0C97  00B0               	movwf	?___fldiv+2
  4076  0C98  0833               	movf	___fldiv@b+1,w
  4077  0C99  00AF               	movwf	?___fldiv+1
  4078  0C9A  0832               	movf	___fldiv@b,w
  4079  0C9B  00AE               	movwf	?___fldiv
  4080  0C9C  0008               	return
  4081  0C9D                     l4749:	
  4082  0C9D  0846               	movf	___fldiv@bexp,w
  4083  0C9E  1D03               	btfss	3,2
  4084  0C9F  2CA9               	goto	l4755
  4085  0CA0  3000               	movlw	0
  4086  0CA1  00B1               	movwf	?___fldiv+3
  4087  0CA2  3000               	movlw	0
  4088  0CA3  00B0               	movwf	?___fldiv+2
  4089  0CA4  3000               	movlw	0
  4090  0CA5  00AF               	movwf	?___fldiv+1
  4091  0CA6  3000               	movlw	0
  4092  0CA7  00AE               	movwf	?___fldiv
  4093  0CA8  0008               	return
  4094  0CA9                     l4755:	
  4095  0CA9  0846               	movf	___fldiv@bexp,w
  4096  0CAA  00B6               	movwf	??___fldiv
  4097  0CAB  01B7               	clrf	??___fldiv+1
  4098  0CAC  0837               	movf	??___fldiv+1,w
  4099  0CAD  00B9               	movwf	??___fldiv+3
  4100  0CAE  0847               	movf	___fldiv@aexp,w
  4101  0CAF  0236               	subwf	??___fldiv,w
  4102  0CB0  00B8               	movwf	??___fldiv+2
  4103  0CB1  1C03               	skipc
  4104  0CB2  03B9               	decf	??___fldiv+3,f
  4105  0CB3  0838               	movf	??___fldiv+2,w
  4106  0CB4  3E7F               	addlw	127
  4107  0CB5  00C0               	movwf	___fldiv@new_exp
  4108  0CB6  0839               	movf	??___fldiv+3,w
  4109  0CB7  1803               	skipnc
  4110  0CB8  3E01               	addlw	1
  4111  0CB9  3E00               	addlw	0
  4112  0CBA  00C1               	movwf	___fldiv@new_exp+1
  4113  0CBB  0835               	movf	___fldiv@b+3,w
  4114  0CBC  00BE               	movwf	___fldiv@rem+3
  4115  0CBD  0834               	movf	___fldiv@b+2,w
  4116  0CBE  00BD               	movwf	___fldiv@rem+2
  4117  0CBF  0833               	movf	___fldiv@b+1,w
  4118  0CC0  00BC               	movwf	___fldiv@rem+1
  4119  0CC1  0832               	movf	___fldiv@b,w
  4120  0CC2  00BB               	movwf	___fldiv@rem
  4121  0CC3  3000               	movlw	0
  4122  0CC4  00B5               	movwf	___fldiv@b+3
  4123  0CC5  3000               	movlw	0
  4124  0CC6  00B4               	movwf	___fldiv@b+2
  4125  0CC7  3000               	movlw	0
  4126  0CC8  00B3               	movwf	___fldiv@b+1
  4127  0CC9  3000               	movlw	0
  4128  0CCA  00B2               	movwf	___fldiv@b
  4129  0CCB  3000               	movlw	0
  4130  0CCC  00C5               	movwf	___fldiv@grs+3
  4131  0CCD  3000               	movlw	0
  4132  0CCE  00C4               	movwf	___fldiv@grs+2
  4133  0CCF  3000               	movlw	0
  4134  0CD0  00C3               	movwf	___fldiv@grs+1
  4135  0CD1  3000               	movlw	0
  4136  0CD2  00C2               	movwf	___fldiv@grs
  4137  0CD3  01C7               	clrf	___fldiv@aexp
  4138  0CD4                     l4783:	
  4139  0CD4  301A               	movlw	26
  4140  0CD5  0247               	subwf	___fldiv@aexp,w
  4141  0CD6  1803               	btfsc	3,0
  4142  0CD7  2D1C               	goto	l4785
  4143  0CD8  0847               	movf	___fldiv@aexp,w
  4144  0CD9  1903               	btfsc	3,2
  4145  0CDA  2CF8               	goto	l4775
  4146  0CDB  3001               	movlw	1
  4147  0CDC  00B6               	movwf	??___fldiv
  4148  0CDD                     u4365:	
  4149  0CDD  1003               	clrc
  4150  0CDE  0DBB               	rlf	___fldiv@rem,f
  4151  0CDF  0DBC               	rlf	___fldiv@rem+1,f
  4152  0CE0  0DBD               	rlf	___fldiv@rem+2,f
  4153  0CE1  0DBE               	rlf	___fldiv@rem+3,f
  4154  0CE2  0BB6               	decfsz	??___fldiv,f
  4155  0CE3  2CDD               	goto	u4365
  4156  0CE4  3001               	movlw	1
  4157  0CE5  00B6               	movwf	??___fldiv
  4158  0CE6                     u4375:	
  4159  0CE6  1003               	clrc
  4160  0CE7  0DB2               	rlf	___fldiv@b,f
  4161  0CE8  0DB3               	rlf	___fldiv@b+1,f
  4162  0CE9  0DB4               	rlf	___fldiv@b+2,f
  4163  0CEA  0DB5               	rlf	___fldiv@b+3,f
  4164  0CEB  0BB6               	decfsz	??___fldiv,f
  4165  0CEC  2CE6               	goto	u4375
  4166  0CED  1BC5               	btfsc	___fldiv@grs+3,7
  4167  0CEE  1432               	bsf	___fldiv@b,0
  4168  0CEF  3001               	movlw	1
  4169  0CF0  00B6               	movwf	??___fldiv
  4170  0CF1                     u4395:	
  4171  0CF1  1003               	clrc
  4172  0CF2  0DC2               	rlf	___fldiv@grs,f
  4173  0CF3  0DC3               	rlf	___fldiv@grs+1,f
  4174  0CF4  0DC4               	rlf	___fldiv@grs+2,f
  4175  0CF5  0DC5               	rlf	___fldiv@grs+3,f
  4176  0CF6  0BB6               	decfsz	??___fldiv,f
  4177  0CF7  2CF1               	goto	u4395
  4178  0CF8                     l4775:	
  4179  0CF8  0831               	movf	___fldiv@a+3,w
  4180  0CF9  023E               	subwf	___fldiv@rem+3,w
  4181  0CFA  1D03               	skipz
  4182  0CFB  2D06               	goto	u4405
  4183  0CFC  0830               	movf	___fldiv@a+2,w
  4184  0CFD  023D               	subwf	___fldiv@rem+2,w
  4185  0CFE  1D03               	skipz
  4186  0CFF  2D06               	goto	u4405
  4187  0D00  082F               	movf	___fldiv@a+1,w
  4188  0D01  023C               	subwf	___fldiv@rem+1,w
  4189  0D02  1D03               	skipz
  4190  0D03  2D06               	goto	u4405
  4191  0D04  082E               	movf	___fldiv@a,w
  4192  0D05  023B               	subwf	___fldiv@rem,w
  4193  0D06                     u4405:	
  4194  0D06  1C03               	skipc
  4195  0D07  2D17               	goto	l4781
  4196  0D08  1745               	bsf	___fldiv@grs+3,6
  4197  0D09  082E               	movf	___fldiv@a,w
  4198  0D0A  02BB               	subwf	___fldiv@rem,f
  4199  0D0B  082F               	movf	___fldiv@a+1,w
  4200  0D0C  1C03               	skipc
  4201  0D0D  0F2F               	incfsz	___fldiv@a+1,w
  4202  0D0E  02BC               	subwf	___fldiv@rem+1,f
  4203  0D0F  0830               	movf	___fldiv@a+2,w
  4204  0D10  1C03               	skipc
  4205  0D11  0F30               	incfsz	___fldiv@a+2,w
  4206  0D12  02BD               	subwf	___fldiv@rem+2,f
  4207  0D13  0831               	movf	___fldiv@a+3,w
  4208  0D14  1C03               	skipc
  4209  0D15  0F31               	incfsz	___fldiv@a+3,w
  4210  0D16  02BE               	subwf	___fldiv@rem+3,f
  4211  0D17                     l4781:	
  4212  0D17  3001               	movlw	1
  4213  0D18  00B6               	movwf	??___fldiv
  4214  0D19  0836               	movf	??___fldiv,w
  4215  0D1A  07C7               	addwf	___fldiv@aexp,f
  4216  0D1B  2CD4               	goto	l4783
  4217  0D1C                     l4785:	
  4218  0D1C  083E               	movf	___fldiv@rem+3,w
  4219  0D1D  043D               	iorwf	___fldiv@rem+2,w
  4220  0D1E  043C               	iorwf	___fldiv@rem+1,w
  4221  0D1F  043B               	iorwf	___fldiv@rem,w
  4222  0D20  1D03               	btfss	3,2
  4223  0D21  1442               	bsf	___fldiv@grs,0
  4224  0D22                     l4799:	
  4225  0D22  1BB4               	btfsc	___fldiv@b+2,7
  4226  0D23  2D3F               	goto	l4801
  4227  0D24  3001               	movlw	1
  4228  0D25  00B6               	movwf	??___fldiv
  4229  0D26                     u4435:	
  4230  0D26  1003               	clrc
  4231  0D27  0DB2               	rlf	___fldiv@b,f
  4232  0D28  0DB3               	rlf	___fldiv@b+1,f
  4233  0D29  0DB4               	rlf	___fldiv@b+2,f
  4234  0D2A  0DB5               	rlf	___fldiv@b+3,f
  4235  0D2B  0BB6               	decfsz	??___fldiv,f
  4236  0D2C  2D26               	goto	u4435
  4237  0D2D  1BC5               	btfsc	___fldiv@grs+3,7
  4238  0D2E  1432               	bsf	___fldiv@b,0
  4239  0D2F  3001               	movlw	1
  4240  0D30  00B6               	movwf	??___fldiv
  4241  0D31                     u4455:	
  4242  0D31  1003               	clrc
  4243  0D32  0DC2               	rlf	___fldiv@grs,f
  4244  0D33  0DC3               	rlf	___fldiv@grs+1,f
  4245  0D34  0DC4               	rlf	___fldiv@grs+2,f
  4246  0D35  0DC5               	rlf	___fldiv@grs+3,f
  4247  0D36  0BB6               	decfsz	??___fldiv,f
  4248  0D37  2D31               	goto	u4455
  4249  0D38  30FF               	movlw	255
  4250  0D39  07C0               	addwf	___fldiv@new_exp,f
  4251  0D3A  1803               	skipnc
  4252  0D3B  0AC1               	incf	___fldiv@new_exp+1,f
  4253  0D3C  30FF               	movlw	255
  4254  0D3D  07C1               	addwf	___fldiv@new_exp+1,f
  4255  0D3E  2D22               	goto	l4799
  4256  0D3F                     l4801:	
  4257  0D3F  01C7               	clrf	___fldiv@aexp
  4258  0D40  1FC5               	btfss	___fldiv@grs+3,7
  4259  0D41  2D58               	goto	l4811
  4260  0D42  30FF               	movlw	255
  4261  0D43  0542               	andwf	___fldiv@grs,w
  4262  0D44  00B6               	movwf	??___fldiv
  4263  0D45  30FF               	movlw	255
  4264  0D46  0543               	andwf	___fldiv@grs+1,w
  4265  0D47  00B7               	movwf	??___fldiv+1
  4266  0D48  30FF               	movlw	255
  4267  0D49  0544               	andwf	___fldiv@grs+2,w
  4268  0D4A  00B8               	movwf	??___fldiv+2
  4269  0D4B  307F               	movlw	127
  4270  0D4C  0545               	andwf	___fldiv@grs+3,w
  4271  0D4D  00B9               	movwf	??___fldiv+3
  4272  0D4E  0839               	movf	??___fldiv+3,w
  4273  0D4F  0438               	iorwf	??___fldiv+2,w
  4274  0D50  0437               	iorwf	??___fldiv+1,w
  4275  0D51  0436               	iorwf	??___fldiv,w
  4276  0D52  1903               	skipnz
  4277  0D53  1832               	btfsc	___fldiv@b,0
  4278  0D54  2D56               	goto	l4807
  4279  0D55  2D58               	goto	l4811
  4280  0D56                     l4807:	
  4281  0D56  01C7               	clrf	___fldiv@aexp
  4282  0D57  0AC7               	incf	___fldiv@aexp,f
  4283  0D58                     l4811:	
  4284  0D58  0847               	movf	___fldiv@aexp,w
  4285  0D59  1903               	btfsc	3,2
  4286  0D5A  2D8A               	goto	l4821
  4287  0D5B  3001               	movlw	1
  4288  0D5C  07B2               	addwf	___fldiv@b,f
  4289  0D5D  3000               	movlw	0
  4290  0D5E  1803               	skipnc
  4291  0D5F  3001               	movlw	1
  4292  0D60  07B3               	addwf	___fldiv@b+1,f
  4293  0D61  3000               	movlw	0
  4294  0D62  1803               	skipnc
  4295  0D63  3001               	movlw	1
  4296  0D64  07B4               	addwf	___fldiv@b+2,f
  4297  0D65  3000               	movlw	0
  4298  0D66  1803               	skipnc
  4299  0D67  3001               	movlw	1
  4300  0D68  07B5               	addwf	___fldiv@b+3,f
  4301  0D69  1C35               	btfss	___fldiv@b+3,0
  4302  0D6A  2D8A               	goto	l4821
  4303  0D6B  0832               	movf	___fldiv@b,w
  4304  0D6C  00B6               	movwf	??___fldiv
  4305  0D6D  0833               	movf	___fldiv@b+1,w
  4306  0D6E  00B7               	movwf	??___fldiv+1
  4307  0D6F  0834               	movf	___fldiv@b+2,w
  4308  0D70  00B8               	movwf	??___fldiv+2
  4309  0D71  0835               	movf	___fldiv@b+3,w
  4310  0D72  00B9               	movwf	??___fldiv+3
  4311  0D73  3001               	movlw	1
  4312  0D74  00BA               	movwf	??___fldiv+4
  4313  0D75                     u4525:	
  4314  0D75  0D39               	rlf	??___fldiv+3,w
  4315  0D76  0CB9               	rrf	??___fldiv+3,f
  4316  0D77  0CB8               	rrf	??___fldiv+2,f
  4317  0D78  0CB7               	rrf	??___fldiv+1,f
  4318  0D79  0CB6               	rrf	??___fldiv,f
  4319  0D7A  0BBA               	decfsz	??___fldiv+4,f
  4320  0D7B  2D75               	goto	u4525
  4321  0D7C  0839               	movf	??___fldiv+3,w
  4322  0D7D  00B5               	movwf	___fldiv@b+3
  4323  0D7E  0838               	movf	??___fldiv+2,w
  4324  0D7F  00B4               	movwf	___fldiv@b+2
  4325  0D80  0837               	movf	??___fldiv+1,w
  4326  0D81  00B3               	movwf	___fldiv@b+1
  4327  0D82  0836               	movf	??___fldiv,w
  4328  0D83  00B2               	movwf	___fldiv@b
  4329  0D84  3001               	movlw	1
  4330  0D85  07C0               	addwf	___fldiv@new_exp,f
  4331  0D86  1803               	skipnc
  4332  0D87  0AC1               	incf	___fldiv@new_exp+1,f
  4333  0D88  3000               	movlw	0
  4334  0D89  07C1               	addwf	___fldiv@new_exp+1,f
  4335  0D8A                     l4821:	
  4336  0D8A  0841               	movf	___fldiv@new_exp+1,w
  4337  0D8B  3A80               	xorlw	128
  4338  0D8C  00FF               	movwf	127
  4339  0D8D  3080               	movlw	128
  4340  0D8E  027F               	subwf	127,w
  4341  0D8F  1D03               	skipz
  4342  0D90  2D93               	goto	u4535
  4343  0D91  30FF               	movlw	255
  4344  0D92  0240               	subwf	___fldiv@new_exp,w
  4345  0D93                     u4535:	
  4346  0D93  1C03               	skipc
  4347  0D94  2DA3               	goto	l4825
  4348  0D95  30FF               	movlw	255
  4349  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0D98  00C0               	movwf	___fldiv@new_exp
  4352  0D99  3000               	movlw	0
  4353  0D9A  00C1               	movwf	___fldiv@new_exp+1
  4354  0D9B  3000               	movlw	0
  4355  0D9C  00B5               	movwf	___fldiv@b+3
  4356  0D9D  3000               	movlw	0
  4357  0D9E  00B4               	movwf	___fldiv@b+2
  4358  0D9F  3000               	movlw	0
  4359  0DA0  00B3               	movwf	___fldiv@b+1
  4360  0DA1  3000               	movlw	0
  4361  0DA2  00B2               	movwf	___fldiv@b
  4362  0DA3                     l4825:	
  4363  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0DA5  0841               	movf	___fldiv@new_exp+1,w
  4366  0DA6  3A80               	xorlw	128
  4367  0DA7  00FF               	movwf	127
  4368  0DA8  3080               	movlw	128
  4369  0DA9  027F               	subwf	127,w
  4370  0DAA  1D03               	skipz
  4371  0DAB  2DAE               	goto	u4545
  4372  0DAC  3001               	movlw	1
  4373  0DAD  0240               	subwf	___fldiv@new_exp,w
  4374  0DAE                     u4545:	
  4375  0DAE  1803               	skipnc
  4376  0DAF  2DBD               	goto	l1355
  4377  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0DB2  01C0               	clrf	___fldiv@new_exp
  4380  0DB3  01C1               	clrf	___fldiv@new_exp+1
  4381  0DB4  3000               	movlw	0
  4382  0DB5  00B5               	movwf	___fldiv@b+3
  4383  0DB6  3000               	movlw	0
  4384  0DB7  00B4               	movwf	___fldiv@b+2
  4385  0DB8  3000               	movlw	0
  4386  0DB9  00B3               	movwf	___fldiv@b+1
  4387  0DBA  3000               	movlw	0
  4388  0DBB  00B2               	movwf	___fldiv@b
  4389  0DBC  01BF               	clrf	___fldiv@sign
  4390  0DBD                     l1355:	
  4391  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0DBF  0840               	movf	___fldiv@new_exp,w
  4394  0DC0  00B6               	movwf	??___fldiv
  4395  0DC1  0836               	movf	??___fldiv,w
  4396  0DC2  00C6               	movwf	___fldiv@bexp
  4397  0DC3  1C46               	btfss	___fldiv@bexp,0
  4398  0DC4  2DC7               	goto	l4837
  4399  0DC5  17B4               	bsf	___fldiv@b+2,7
  4400  0DC6  2DCB               	goto	l1357
  4401  0DC7                     l4837:	
  4402  0DC7  307F               	movlw	127
  4403  0DC8  00B6               	movwf	??___fldiv
  4404  0DC9  0836               	movf	??___fldiv,w
  4405  0DCA  05B4               	andwf	___fldiv@b+2,f
  4406  0DCB                     l1357:	
  4407  0DCB  0846               	movf	___fldiv@bexp,w
  4408  0DCC  00B6               	movwf	??___fldiv
  4409  0DCD  1003               	clrc
  4410  0DCE  0C36               	rrf	??___fldiv,w
  4411  0DCF  00B7               	movwf	??___fldiv+1
  4412  0DD0  0837               	movf	??___fldiv+1,w
  4413  0DD1  00B5               	movwf	___fldiv@b+3
  4414  0DD2  2C90               	goto	L3
  4415  0DD3                     __end_of___fldiv:	
  4416                           
  4417                           	psect	text5
  4418  1BD4                     __ptext5:	
  4419 ;; *************** function _Package_Usart_is_for_me *****************
  4420 ;; Defined at:
  4421 ;;		line 8 in file "protocolo.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  retorno         1    0[BANK0 ] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 300/0
  4432 ;;		On exit  : 300/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       0       0       0       0
  4436 ;;      Locals:         0       1       0       0       0
  4437 ;;      Temps:          0       0       0       0       0
  4438 ;;      Totals:         0       1       0       0       0
  4439 ;;Total ram usage:        1 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_mediaLeituraPt100Umidadde
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _Package_Usart_is_for_me
  4451  1BD4                     _Package_Usart_is_for_me:	
  4452                           
  4453                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4457  1BD4  1C6C               	btfss	_generic_status,0
  4458  1BD5  2BE8               	goto	l4663
  4459                           
  4460                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4461  1BD6  1683               	bsf	3,5	;RP0=1, select bank3
  4462  1BD7  1703               	bsf	3,6	;RP1=1, select bank3
  4463  1BD8  0817               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  4464  1BD9  1283               	bcf	3,5	;RP0=0, select bank0
  4465  1BDA  1303               	bcf	3,6	;RP1=0, select bank0
  4466  1BDB  0669               	xorwf	_Board_Number,w
  4467  1BDC  1903               	skipnz
  4468  1BDD  2BE3               	goto	l804
  4469  1BDE  1683               	bsf	3,5	;RP0=1, select bank3
  4470  1BDF  1703               	bsf	3,6	;RP1=1, select bank3
  4471  1BE0  0A17               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  4472  1BE1  1D03               	btfss	3,2
  4473  1BE2  2BE8               	goto	l4663
  4474  1BE3                     l804:	
  4475                           
  4476                           ;protocolo.c: 13:             retorno=1;
  4477  1BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4478  1BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4479  1BE5  01A0               	clrf	Package_Usart_is_for_me@retorno
  4480  1BE6  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4481  1BE7  2BEB               	goto	l4667
  4482  1BE8                     l4663:	
  4483                           
  4484                           ;protocolo.c: 15:             retorno=0;
  4485  1BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4486  1BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4487  1BEA  01A0               	clrf	Package_Usart_is_for_me@retorno
  4488  1BEB                     l4667:	
  4489                           
  4490                           ;protocolo.c: 21:      return retorno;
  4491  1BEB  0820               	movf	Package_Usart_is_for_me@retorno,w
  4492  1BEC  0008               	return
  4493  1BED                     __end_of_Package_Usart_is_for_me:	
  4494                           
  4495                           	psect	text6
  4496  1169                     __ptext6:	
  4497 ;; *************** function _ADC_Media_10bits *****************
  4498 ;; Defined at:
  4499 ;;		line 20 in file "adc.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  canal           1    wreg     unsigned char 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  canal           1   19[BANK0 ] unsigned char 
  4504 ;;  value           2   20[BANK0 ] unsigned int 
  4505 ;;  i               1   22[BANK0 ] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  4   14[BANK0 ] float 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 300/0
  4512 ;;		On exit  : 300/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4515 ;;      Params:         0       4       0       0       0
  4516 ;;      Locals:         0       4       0       0       0
  4517 ;;      Temps:          0       1       0       0       0
  4518 ;;      Totals:         0       9       0       0       0
  4519 ;;Total ram usage:        9 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    2
  4522 ;; This function calls:
  4523 ;;		___lwdiv
  4524 ;;		___xxtofl
  4525 ;;		_captura
  4526 ;;		_my_delay_ms
  4527 ;; This function is called by:
  4528 ;;		_mediaLeituraPt100Umidadde
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function _ADC_Media_10bits
  4534  1169                     _ADC_Media_10bits:	
  4535                           
  4536                           ;incstack = 0
  4537                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4538                           ;ADC_Media_10bits@canal stored from wreg
  4539  1169  00B3               	movwf	ADC_Media_10bits@canal
  4540                           
  4541                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  4542  116A  0833               	movf	ADC_Media_10bits@canal,w
  4543  116B  00B2               	movwf	??_ADC_Media_10bits
  4544  116C  0DB2               	rlf	??_ADC_Media_10bits,f
  4545  116D  0DB2               	rlf	??_ADC_Media_10bits,f
  4546  116E  081F               	movf	31,w	;volatile
  4547  116F  0632               	xorwf	??_ADC_Media_10bits,w
  4548  1170  39C3               	andlw	-61
  4549  1171  0632               	xorwf	??_ADC_Media_10bits,w
  4550  1172  009F               	movwf	31	;volatile
  4551                           
  4552                           ;adc.c: 24:       my_delay_ms(1);
  4553  1173  3000               	movlw	0
  4554  1174  00A3               	movwf	my_delay_ms@time+3
  4555  1175  3000               	movlw	0
  4556  1176  00A2               	movwf	my_delay_ms@time+2
  4557  1177  3000               	movlw	0
  4558  1178  00A1               	movwf	my_delay_ms@time+1
  4559  1179  3001               	movlw	1
  4560  117A  00A0               	movwf	my_delay_ms@time
  4561  117B  160A  158A  271E  160A  118A  	fcall	_my_delay_ms
  4562                           
  4563                           ;adc.c: 26:       value=0;
  4564  1180  01B4               	clrf	ADC_Media_10bits@value
  4565  1181  01B5               	clrf	ADC_Media_10bits@value+1
  4566                           
  4567                           ;adc.c: 27:       for(i=1;i<=50;i++)
  4568  1182  01B6               	clrf	ADC_Media_10bits@i
  4569  1183  0AB6               	incf	ADC_Media_10bits@i,f
  4570  1184                     l4645:	
  4571                           
  4572                           ;adc.c: 28:           value+=captura();
  4573  1184  160A  158A  2347  160A  118A  	fcall	_captura
  4574  1189  0820               	movf	?_captura,w
  4575  118A  07B4               	addwf	ADC_Media_10bits@value,f
  4576  118B  1803               	skipnc
  4577  118C  0AB5               	incf	ADC_Media_10bits@value+1,f
  4578  118D  0821               	movf	?_captura+1,w
  4579  118E  07B5               	addwf	ADC_Media_10bits@value+1,f
  4580  118F  3001               	movlw	1
  4581  1190  00B2               	movwf	??_ADC_Media_10bits
  4582  1191  0832               	movf	??_ADC_Media_10bits,w
  4583  1192  07B6               	addwf	ADC_Media_10bits@i,f
  4584  1193  3033               	movlw	51
  4585  1194  0236               	subwf	ADC_Media_10bits@i,w
  4586  1195  1C03               	skipc
  4587  1196  2984               	goto	l4645
  4588                           
  4589                           ;adc.c: 29:       value/=(i-1);
  4590  1197  0836               	movf	ADC_Media_10bits@i,w
  4591  1198  3EFF               	addlw	255
  4592  1199  00A0               	movwf	___lwdiv@divisor
  4593  119A  30FF               	movlw	255
  4594  119B  1803               	skipnc
  4595  119C  3000               	movlw	0
  4596  119D  00A1               	movwf	___lwdiv@divisor+1
  4597  119E  0835               	movf	ADC_Media_10bits@value+1,w
  4598  119F  00A3               	movwf	___lwdiv@dividend+1
  4599  11A0  0834               	movf	ADC_Media_10bits@value,w
  4600  11A1  00A2               	movwf	___lwdiv@dividend
  4601  11A2  160A  118A  2072  160A  118A  	fcall	___lwdiv
  4602  11A7  0821               	movf	?___lwdiv+1,w
  4603  11A8  00B5               	movwf	ADC_Media_10bits@value+1
  4604  11A9  0820               	movf	?___lwdiv,w
  4605  11AA  00B4               	movwf	ADC_Media_10bits@value
  4606                           
  4607                           ;adc.c: 30:       return value;
  4608  11AB  0834               	movf	ADC_Media_10bits@value,w
  4609  11AC  00A0               	movwf	___xxtofl@val
  4610  11AD  0835               	movf	ADC_Media_10bits@value+1,w
  4611  11AE  00A1               	movwf	___xxtofl@val+1
  4612  11AF  01A2               	clrf	___xxtofl@val+2
  4613  11B0  01A3               	clrf	___xxtofl@val+3
  4614  11B1  3000               	movlw	0
  4615  11B2  160A  118A  2337   	fcall	___xxtofl
  4616  11B5  0823               	movf	?___xxtofl+3,w
  4617  11B6  00B1               	movwf	?_ADC_Media_10bits+3
  4618  11B7  0822               	movf	?___xxtofl+2,w
  4619  11B8  00B0               	movwf	?_ADC_Media_10bits+2
  4620  11B9  0821               	movf	?___xxtofl+1,w
  4621  11BA  00AF               	movwf	?_ADC_Media_10bits+1
  4622  11BB  0820               	movf	?___xxtofl,w
  4623  11BC  00AE               	movwf	?_ADC_Media_10bits
  4624  11BD  0008               	return
  4625  11BE                     __end_of_ADC_Media_10bits:	
  4626                           
  4627                           	psect	text7
  4628  1F1E                     __ptext7:	
  4629 ;; *************** function _my_delay_ms *****************
  4630 ;; Defined at:
  4631 ;;		line 5 in file "my_delay.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  time            4    0[BANK0 ] long 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  i               4    6[BANK0 ] long 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, btemp+1
  4640 ;; Tracked objects:
  4641 ;;		On entry : 300/0
  4642 ;;		On exit  : 300/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4645 ;;      Params:         0       4       0       0       0
  4646 ;;      Locals:         0       4       0       0       0
  4647 ;;      Temps:          0       2       0       0       0
  4648 ;;      Totals:         0      10       0       0       0
  4649 ;;Total ram usage:       10 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_mediaLeituraPt100Umidadde
  4656 ;;		_ADC_Media_10bits
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _my_delay_ms
  4662  1F1E                     _my_delay_ms:	
  4663                           
  4664                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  4668  1F1E  3000               	movlw	0
  4669  1F1F  00A9               	movwf	my_delay_ms@i+3
  4670  1F20  3000               	movlw	0
  4671  1F21  00A8               	movwf	my_delay_ms@i+2
  4672  1F22  3000               	movlw	0
  4673  1F23  00A7               	movwf	my_delay_ms@i+1
  4674  1F24  3000               	movlw	0
  4675  1F25  00A6               	movwf	my_delay_ms@i
  4676  1F26                     l3915:	
  4677  1F26  0829               	movf	my_delay_ms@i+3,w
  4678  1F27  3A80               	xorlw	128
  4679  1F28  00FF               	movwf	127
  4680  1F29  0823               	movf	my_delay_ms@time+3,w
  4681  1F2A  3A80               	xorlw	128
  4682  1F2B  027F               	subwf	127,w
  4683  1F2C  1D03               	skipz
  4684  1F2D  2F38               	goto	u3083
  4685  1F2E  0822               	movf	my_delay_ms@time+2,w
  4686  1F2F  0228               	subwf	my_delay_ms@i+2,w
  4687  1F30  1D03               	skipz
  4688  1F31  2F38               	goto	u3083
  4689  1F32  0821               	movf	my_delay_ms@time+1,w
  4690  1F33  0227               	subwf	my_delay_ms@i+1,w
  4691  1F34  1D03               	skipz
  4692  1F35  2F38               	goto	u3083
  4693  1F36  0820               	movf	my_delay_ms@time,w
  4694  1F37  0226               	subwf	my_delay_ms@i,w
  4695  1F38                     u3083:	
  4696  1F38  1803               	btfsc	3,0
  4697  1F39  0008               	return
  4698                           
  4699                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4700  1F3A  3003               	movlw	3
  4701  1F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4702  1F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4703  1F3D  00A5               	movwf	??_my_delay_ms+1
  4704  1F3E  3097               	movlw	151
  4705  1F3F  00A4               	movwf	??_my_delay_ms
  4706  1F40                     u5537:	
  4707  1F40  0BA4               	decfsz	??_my_delay_ms,f
  4708  1F41  2F40               	goto	u5537
  4709  1F42  0BA5               	decfsz	??_my_delay_ms+1,f
  4710  1F43  2F40               	goto	u5537
  4711                           
  4712                           ;my_delay.c: 10:             }
  4713  1F44  3001               	movlw	1
  4714  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  4715  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  4716  1F47  07A6               	addwf	my_delay_ms@i,f
  4717  1F48  3000               	movlw	0
  4718  1F49  1803               	skipnc
  4719  1F4A  3001               	movlw	1
  4720  1F4B  07A7               	addwf	my_delay_ms@i+1,f
  4721  1F4C  3000               	movlw	0
  4722  1F4D  1803               	skipnc
  4723  1F4E  3001               	movlw	1
  4724  1F4F  07A8               	addwf	my_delay_ms@i+2,f
  4725  1F50  3000               	movlw	0
  4726  1F51  1803               	skipnc
  4727  1F52  3001               	movlw	1
  4728  1F53  07A9               	addwf	my_delay_ms@i+3,f
  4729  1F54  2F26               	goto	l3915
  4730  1F55                     __end_of_my_delay_ms:	
  4731                           
  4732                           	psect	text8
  4733  1B47                     __ptext8:	
  4734 ;; *************** function _captura *****************
  4735 ;; Defined at:
  4736 ;;		line 123 in file "adc.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    0[BANK0 ] unsigned int 
  4743 ;; Registers used:
  4744 ;;		wreg
  4745 ;; Tracked objects:
  4746 ;;		On entry : 300/0
  4747 ;;		On exit  : 300/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         0       2       0       0       0
  4751 ;;      Locals:         0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0
  4753 ;;      Totals:         0       2       0       0       0
  4754 ;;Total ram usage:        2 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_ADC_Media_10bits
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _captura
  4766  1B47                     _captura:	
  4767                           
  4768                           ;adc.c: 124:     ADCON0bits.GO=1;
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _captura: [wreg]
  4772  1B47  149F               	bsf	31,1	;volatile
  4773  1B48                     l482:	
  4774                           ;adc.c: 128:           }
  4775                           
  4776                           
  4777                           ;adc.c: 125:     while(ADCON0bits.GO)
  4778  1B48  189F               	btfsc	31,1	;volatile
  4779  1B49  2B48               	goto	l482
  4780                           
  4781                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  4782  1B4A  081E               	movf	30,w	;volatile
  4783  1B4B  00A1               	movwf	?_captura+1
  4784  1B4C  1683               	bsf	3,5	;RP0=1, select bank1
  4785  1B4D  081E               	movf	30,w	;volatile
  4786  1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  4787  1B4F  00A0               	movwf	?_captura
  4788  1B50  0008               	return
  4789  1B51                     __end_of_captura:	
  4790                           
  4791                           	psect	text9
  4792  1337                     __ptext9:	
  4793 ;; *************** function ___xxtofl *****************
  4794 ;; Defined at:
  4795 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  sign            1    wreg     unsigned char 
  4798 ;;  val             4    0[BANK0 ] long 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  sign            1    8[BANK0 ] unsigned char 
  4801 ;;  arg             4   10[BANK0 ] unsigned long 
  4802 ;;  exp             1    9[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  4    0[BANK0 ] unsigned char 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 300/0
  4809 ;;		On exit  : 300/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4812 ;;      Params:         0       4       0       0       0
  4813 ;;      Locals:         0       6       0       0       0
  4814 ;;      Temps:          0       4       0       0       0
  4815 ;;      Totals:         0      14       0       0       0
  4816 ;;Total ram usage:       14 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_mediaLeituraPt100Umidadde
  4823 ;;		_ADC_Media_10bits
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function ___xxtofl
  4829  1337                     ___xxtofl:	
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4833                           ;___xxtofl@sign stored from wreg
  4834  1337  00A8               	movwf	___xxtofl@sign
  4835  1338  0828               	movf	___xxtofl@sign,w
  4836  1339  1D03               	btfss	3,2
  4837  133A  1FA3               	btfss	___xxtofl@val+3,7
  4838  133B  2B4C               	goto	l4219
  4839  133C  0920               	comf	___xxtofl@val,w
  4840  133D  00AA               	movwf	___xxtofl@arg
  4841  133E  0921               	comf	___xxtofl@val+1,w
  4842  133F  00AB               	movwf	___xxtofl@arg+1
  4843  1340  0922               	comf	___xxtofl@val+2,w
  4844  1341  00AC               	movwf	___xxtofl@arg+2
  4845  1342  0923               	comf	___xxtofl@val+3,w
  4846  1343  00AD               	movwf	___xxtofl@arg+3
  4847  1344  0AAA               	incf	___xxtofl@arg,f
  4848  1345  1903               	skipnz
  4849  1346  0AAB               	incf	___xxtofl@arg+1,f
  4850  1347  1903               	skipnz
  4851  1348  0AAC               	incf	___xxtofl@arg+2,f
  4852  1349  1903               	skipnz
  4853  134A  0AAD               	incf	___xxtofl@arg+3,f
  4854  134B  2B54               	goto	l1411
  4855  134C                     l4219:	
  4856  134C  0823               	movf	___xxtofl@val+3,w
  4857  134D  00AD               	movwf	___xxtofl@arg+3
  4858  134E  0822               	movf	___xxtofl@val+2,w
  4859  134F  00AC               	movwf	___xxtofl@arg+2
  4860  1350  0821               	movf	___xxtofl@val+1,w
  4861  1351  00AB               	movwf	___xxtofl@arg+1
  4862  1352  0820               	movf	___xxtofl@val,w
  4863  1353  00AA               	movwf	___xxtofl@arg
  4864  1354                     l1411:	
  4865  1354  0823               	movf	___xxtofl@val+3,w
  4866  1355  0422               	iorwf	___xxtofl@val+2,w
  4867  1356  0421               	iorwf	___xxtofl@val+1,w
  4868  1357  0420               	iorwf	___xxtofl@val,w
  4869  1358  1D03               	skipz
  4870  1359  2B63               	goto	l4225
  4871  135A  3000               	movlw	0
  4872  135B  00A3               	movwf	?___xxtofl+3
  4873  135C  3000               	movlw	0
  4874  135D  00A2               	movwf	?___xxtofl+2
  4875  135E  3000               	movlw	0
  4876  135F  00A1               	movwf	?___xxtofl+1
  4877  1360  3000               	movlw	0
  4878  1361  00A0               	movwf	?___xxtofl
  4879  1362  0008               	return
  4880  1363                     l4225:	
  4881  1363  3096               	movlw	150
  4882  1364  00A4               	movwf	??___xxtofl
  4883  1365  0824               	movf	??___xxtofl,w
  4884  1366  00A9               	movwf	___xxtofl@exp
  4885  1367                     l4229:	
  4886  1367  30FE               	movlw	254
  4887  1368  052D               	andwf	___xxtofl@arg+3,w
  4888  1369  1903               	btfsc	3,2
  4889  136A  2B94               	goto	l1417
  4890  136B  3001               	movlw	1
  4891  136C  00A4               	movwf	??___xxtofl
  4892  136D  0824               	movf	??___xxtofl,w
  4893  136E  07A9               	addwf	___xxtofl@exp,f
  4894  136F  3001               	movlw	1
  4895  1370                     u3785:	
  4896  1370  1003               	clrc
  4897  1371  0CAD               	rrf	___xxtofl@arg+3,f
  4898  1372  0CAC               	rrf	___xxtofl@arg+2,f
  4899  1373  0CAB               	rrf	___xxtofl@arg+1,f
  4900  1374  0CAA               	rrf	___xxtofl@arg,f
  4901  1375  3EFF               	addlw	-1
  4902  1376  1D03               	skipz
  4903  1377  2B70               	goto	u3785
  4904  1378  2B67               	goto	l4229
  4905  1379                     l4231:	
  4906  1379  3001               	movlw	1
  4907  137A  00A4               	movwf	??___xxtofl
  4908  137B  0824               	movf	??___xxtofl,w
  4909  137C  07A9               	addwf	___xxtofl@exp,f
  4910  137D  3001               	movlw	1
  4911  137E  07AA               	addwf	___xxtofl@arg,f
  4912  137F  3000               	movlw	0
  4913  1380  1803               	skipnc
  4914  1381  3001               	movlw	1
  4915  1382  07AB               	addwf	___xxtofl@arg+1,f
  4916  1383  3000               	movlw	0
  4917  1384  1803               	skipnc
  4918  1385  3001               	movlw	1
  4919  1386  07AC               	addwf	___xxtofl@arg+2,f
  4920  1387  3000               	movlw	0
  4921  1388  1803               	skipnc
  4922  1389  3001               	movlw	1
  4923  138A  07AD               	addwf	___xxtofl@arg+3,f
  4924  138B  3001               	movlw	1
  4925  138C                     u3805:	
  4926  138C  1003               	clrc
  4927  138D  0CAD               	rrf	___xxtofl@arg+3,f
  4928  138E  0CAC               	rrf	___xxtofl@arg+2,f
  4929  138F  0CAB               	rrf	___xxtofl@arg+1,f
  4930  1390  0CAA               	rrf	___xxtofl@arg,f
  4931  1391  3EFF               	addlw	-1
  4932  1392  1D03               	skipz
  4933  1393  2B8C               	goto	u3805
  4934  1394                     l1417:	
  4935  1394  30FF               	movlw	255
  4936  1395  052D               	andwf	___xxtofl@arg+3,w
  4937  1396  1903               	btfsc	3,2
  4938  1397  2BA8               	goto	l4239
  4939  1398  2B79               	goto	l4231
  4940  1399                     l4241:	
  4941  1399  3002               	movlw	2
  4942  139A  0229               	subwf	___xxtofl@exp,w
  4943  139B  1C03               	btfss	3,0
  4944  139C  2BAA               	goto	l1424
  4945  139D  3001               	movlw	1
  4946  139E  02A9               	subwf	___xxtofl@exp,f
  4947  139F  3001               	movlw	1
  4948  13A0  00A4               	movwf	??___xxtofl
  4949  13A1                     u3825:	
  4950  13A1  1003               	clrc
  4951  13A2  0DAA               	rlf	___xxtofl@arg,f
  4952  13A3  0DAB               	rlf	___xxtofl@arg+1,f
  4953  13A4  0DAC               	rlf	___xxtofl@arg+2,f
  4954  13A5  0DAD               	rlf	___xxtofl@arg+3,f
  4955  13A6  0BA4               	decfsz	??___xxtofl,f
  4956  13A7  2BA1               	goto	u3825
  4957  13A8                     l4239:	
  4958  13A8  1FAC               	btfss	___xxtofl@arg+2,7
  4959  13A9  2B99               	goto	l4241
  4960  13AA                     l1424:	
  4961  13AA  1829               	btfsc	___xxtofl@exp,0
  4962  13AB  2BB4               	goto	l1425
  4963  13AC  30FF               	movlw	255
  4964  13AD  05AA               	andwf	___xxtofl@arg,f
  4965  13AE  30FF               	movlw	255
  4966  13AF  05AB               	andwf	___xxtofl@arg+1,f
  4967  13B0  307F               	movlw	127
  4968  13B1  05AC               	andwf	___xxtofl@arg+2,f
  4969  13B2  30FF               	movlw	255
  4970  13B3  05AD               	andwf	___xxtofl@arg+3,f
  4971  13B4                     l1425:	
  4972  13B4  1003               	clrc
  4973  13B5  0CA9               	rrf	___xxtofl@exp,f
  4974  13B6  0829               	movf	___xxtofl@exp,w
  4975  13B7  00A4               	movwf	??___xxtofl
  4976  13B8  01A5               	clrf	??___xxtofl+1
  4977  13B9  01A6               	clrf	??___xxtofl+2
  4978  13BA  01A7               	clrf	??___xxtofl+3
  4979  13BB  3018               	movlw	24
  4980  13BC                     u3865:	
  4981  13BC  1003               	clrc
  4982  13BD  0DA4               	rlf	??___xxtofl,f
  4983  13BE  0DA5               	rlf	??___xxtofl+1,f
  4984  13BF  0DA6               	rlf	??___xxtofl+2,f
  4985  13C0  0DA7               	rlf	??___xxtofl+3,f
  4986  13C1  3EFF               	addlw	-1
  4987  13C2  1D03               	skipz
  4988  13C3  2BBC               	goto	u3865
  4989  13C4  0824               	movf	??___xxtofl,w
  4990  13C5  04AA               	iorwf	___xxtofl@arg,f
  4991  13C6  0825               	movf	??___xxtofl+1,w
  4992  13C7  04AB               	iorwf	___xxtofl@arg+1,f
  4993  13C8  0826               	movf	??___xxtofl+2,w
  4994  13C9  04AC               	iorwf	___xxtofl@arg+2,f
  4995  13CA  0827               	movf	??___xxtofl+3,w
  4996  13CB  04AD               	iorwf	___xxtofl@arg+3,f
  4997  13CC  0828               	movf	___xxtofl@sign,w
  4998  13CD  1D03               	btfss	3,2
  4999  13CE  1FA3               	btfss	___xxtofl@val+3,7
  5000  13CF  2BD1               	goto	l4253
  5001  13D0  17AD               	bsf	___xxtofl@arg+3,7
  5002  13D1                     l4253:	
  5003  13D1  082D               	movf	___xxtofl@arg+3,w
  5004  13D2  00A3               	movwf	?___xxtofl+3
  5005  13D3  082C               	movf	___xxtofl@arg+2,w
  5006  13D4  00A2               	movwf	?___xxtofl+2
  5007  13D5  082B               	movf	___xxtofl@arg+1,w
  5008  13D6  00A1               	movwf	?___xxtofl+1
  5009  13D7  082A               	movf	___xxtofl@arg,w
  5010  13D8  00A0               	movwf	?___xxtofl
  5011  13D9  0008               	return
  5012  13DA                     __end_of___xxtofl:	
  5013                           
  5014                           	psect	text10
  5015  10AE                     __ptext10:	
  5016 ;; *************** function _USART_init *****************
  5017 ;; Defined at:
  5018 ;;		line 18 in file "usart.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  i               1    6[BANK0 ] unsigned char 
  5023 ;;  erro            1    0        unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0
  5028 ;; Tracked objects:
  5029 ;;		On entry : 300/0
  5030 ;;		On exit  : 300/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5033 ;;      Params:         0       4       0       0       0
  5034 ;;      Locals:         0       2       0       0       0
  5035 ;;      Temps:          0       1       0       0       0
  5036 ;;      Totals:         0       7       0       0       0
  5037 ;;Total ram usage:        7 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_main
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           
  5048                           ;psect for function _USART_init
  5049  10AE                     _USART_init:	
  5050                           
  5051                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5052                           
  5053                           ;incstack = 0
  5054                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5055  10AE  304B               	movlw	75
  5056  10AF  0621               	xorwf	USART_init@baudrate+1,w
  5057  10B0  0420               	iorwf	USART_init@baudrate,w
  5058  10B1  0422               	iorwf	USART_init@baudrate+2,w
  5059  10B2  0423               	iorwf	USART_init@baudrate+3,w
  5060  10B3  1D03               	btfss	3,2
  5061  10B4  28BF               	goto	l5013
  5062                           
  5063                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5064  10B5  1798               	bsf	24,7	;volatile
  5065                           
  5066                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5067  10B6  1618               	bsf	24,4	;volatile
  5068                           
  5069                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5070  10B7  1683               	bsf	3,5	;RP0=1, select bank1
  5071  10B8  1518               	bsf	24,2	;volatile
  5072                           
  5073                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5074  10B9  1218               	bcf	24,4	;volatile
  5075                           
  5076                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5077  10BA  1318               	bcf	24,6	;volatile
  5078                           
  5079                           ;usart.c: 32:           SPBRG =12;
  5080  10BB  300C               	movlw	12
  5081  10BC  0099               	movwf	25	;volatile
  5082                           
  5083                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5084  10BD  170B               	bsf	11,6	;volatile
  5085  10BE  28D8               	goto	L4
  5086  10BF                     l5013:	
  5087                           ;usart.c: 35:           }
  5088                           
  5089                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5090                           
  5091  10BF  30C2               	movlw	194
  5092  10C0  0621               	xorwf	USART_init@baudrate+1,w
  5093  10C1  1D03               	skipz
  5094  10C2  28D9               	goto	l5033
  5095  10C3  0322               	decf	USART_init@baudrate+2,w
  5096  10C4  0420               	iorwf	USART_init@baudrate,w
  5097  10C5  0423               	iorwf	USART_init@baudrate+3,w
  5098  10C6  1D03               	btfss	3,2
  5099  10C7  28D9               	goto	l5033
  5100                           
  5101                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5102  10C8  3010               	movlw	16
  5103  10C9  1683               	bsf	3,5	;RP0=1, select bank1
  5104  10CA  0099               	movwf	25	;volatile
  5105                           
  5106                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5107  10CB  1703               	bsf	3,6	;RP1=1, select bank3
  5108  10CC  1587               	bsf	7,3	;volatile
  5109                           
  5110                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5111  10CD  1303               	bcf	3,6	;RP1=0, select bank1
  5112  10CE  1518               	bsf	24,2	;volatile
  5113                           
  5114                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5115  10CF  1283               	bcf	3,5	;RP0=0, select bank0
  5116  10D0  1798               	bsf	24,7	;volatile
  5117                           
  5118                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5119  10D1  1683               	bsf	3,5	;RP0=1, select bank1
  5120  10D2  1218               	bcf	24,4	;volatile
  5121                           
  5122                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5123  10D3  1318               	bcf	24,6	;volatile
  5124                           
  5125                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5126  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  5127  10D5  1618               	bsf	24,4	;volatile
  5128                           
  5129                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5130  10D6  170B               	bsf	11,6	;volatile
  5131                           
  5132                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5133  10D7  1683               	bsf	3,5	;RP0=1, select bank1
  5134  10D8                     L4:	
  5135  10D8  168C               	bsf	12,5	;volatile
  5136  10D9                     l5033:	
  5137                           
  5138                           ;usart.c: 68:      TRISC6= 1;
  5139  10D9  1683               	bsf	3,5	;RP0=1, select bank1
  5140  10DA  1707               	bsf	7,6	;volatile
  5141                           
  5142                           ;usart.c: 69:      TRISC7= 1;
  5143  10DB  1787               	bsf	7,7	;volatile
  5144                           
  5145                           ;usart.c: 71:      CREN=0;
  5146  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  5147  10DD  1218               	bcf	24,4	;volatile
  5148                           
  5149                           ;usart.c: 72:      CREN=1;
  5150  10DE  1618               	bsf	24,4	;volatile
  5151                           
  5152                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5153  10DF  01A6               	clrf	USART_init@i
  5154  10E0                     l5047:	
  5155  10E0  081A               	movf	26,w	;volatile
  5156  10E1  3001               	movlw	1
  5157  10E2  00A4               	movwf	??_USART_init
  5158  10E3  0824               	movf	??_USART_init,w
  5159  10E4  07A6               	addwf	USART_init@i,f
  5160  10E5  300F               	movlw	15
  5161  10E6  0226               	subwf	USART_init@i,w
  5162  10E7  1803               	btfsc	3,0
  5163  10E8  0008               	return
  5164  10E9  28E0               	goto	l5047
  5165  10EA                     __end_of_USART_init:	
  5166                           
  5167                           	psect	text11
  5168  1E21                     __ptext11:	
  5169 ;; *************** function _I2C_Master_Init *****************
  5170 ;; Defined at:
  5171 ;;		line 7 in file "I2C.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  c               4   14[BANK0 ] const unsigned long 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, pclath, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 300/0
  5182 ;;		On exit  : 300/100
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5185 ;;      Params:         0       4       0       0       0
  5186 ;;      Locals:         0       0       0       0       0
  5187 ;;      Temps:          0       4       0       0       0
  5188 ;;      Totals:         0       8       0       0       0
  5189 ;;Total ram usage:        8 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    2
  5192 ;; This function calls:
  5193 ;;		___lldiv
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _I2C_Master_Init
  5201  1E21                     _I2C_Master_Init:	
  5202                           
  5203                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5207  1E21  3028               	movlw	40
  5208  1E22  0094               	movwf	20	;volatile
  5209                           
  5210                           ;I2C.c: 11:   SSPCON2 = 0;
  5211  1E23  1683               	bsf	3,5	;RP0=1, select bank1
  5212  1E24  0191               	clrf	17	;volatile
  5213                           
  5214                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5215  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5216  1E26  082E               	movf	I2C_Master_Init@c,w
  5217  1E27  00B2               	movwf	??_I2C_Master_Init
  5218  1E28  082F               	movf	I2C_Master_Init@c+1,w
  5219  1E29  00B3               	movwf	??_I2C_Master_Init+1
  5220  1E2A  0830               	movf	I2C_Master_Init@c+2,w
  5221  1E2B  00B4               	movwf	??_I2C_Master_Init+2
  5222  1E2C  0831               	movf	I2C_Master_Init@c+3,w
  5223  1E2D  00B5               	movwf	??_I2C_Master_Init+3
  5224  1E2E  3002               	movlw	2
  5225  1E2F                     u4925:	
  5226  1E2F  1003               	clrc
  5227  1E30  0DB2               	rlf	??_I2C_Master_Init,f
  5228  1E31  0DB3               	rlf	??_I2C_Master_Init+1,f
  5229  1E32  0DB4               	rlf	??_I2C_Master_Init+2,f
  5230  1E33  0DB5               	rlf	??_I2C_Master_Init+3,f
  5231  1E34  3EFF               	addlw	-1
  5232  1E35  1D03               	skipz
  5233  1E36  2E2F               	goto	u4925
  5234  1E37  0835               	movf	??_I2C_Master_Init+3,w
  5235  1E38  00A3               	movwf	___lldiv@divisor+3
  5236  1E39  0834               	movf	??_I2C_Master_Init+2,w
  5237  1E3A  00A2               	movwf	___lldiv@divisor+2
  5238  1E3B  0833               	movf	??_I2C_Master_Init+1,w
  5239  1E3C  00A1               	movwf	___lldiv@divisor+1
  5240  1E3D  0832               	movf	??_I2C_Master_Init,w
  5241  1E3E  00A0               	movwf	___lldiv@divisor
  5242  1E3F  3000               	movlw	0
  5243  1E40  00A7               	movwf	___lldiv@dividend+3
  5244  1E41  307A               	movlw	122
  5245  1E42  00A6               	movwf	___lldiv@dividend+2
  5246  1E43  3012               	movlw	18
  5247  1E44  00A5               	movwf	___lldiv@dividend+1
  5248  1E45  3000               	movlw	0
  5249  1E46  00A4               	movwf	___lldiv@dividend
  5250  1E47  160A  118A  2275   	fcall	___lldiv
  5251  1E4A  0820               	movf	?___lldiv,w
  5252  1E4B  3EFF               	addlw	255
  5253  1E4C  1683               	bsf	3,5	;RP0=1, select bank1
  5254  1E4D  0093               	movwf	19	;volatile
  5255                           
  5256                           ;I2C.c: 13:   SSPSTAT = 0;
  5257  1E4E  0194               	clrf	20	;volatile
  5258                           
  5259                           ;I2C.c: 14:   TRISC3 = 1;
  5260  1E4F  1587               	bsf	7,3	;volatile
  5261                           
  5262                           ;I2C.c: 15:   TRISC4 = 1;
  5263  1E50  1607               	bsf	7,4	;volatile
  5264  1E51  0008               	return
  5265  1E52                     __end_of_I2C_Master_Init:	
  5266                           
  5267                           	psect	text12
  5268  1275                     __ptext12:	
  5269 ;; *************** function ___lldiv *****************
  5270 ;; Defined at:
  5271 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  divisor         4    0[BANK0 ] unsigned long 
  5274 ;;  dividend        4    4[BANK0 ] unsigned long 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  quotient        4    9[BANK0 ] unsigned long 
  5277 ;;  counter         1   13[BANK0 ] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  4    0[BANK0 ] unsigned long 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 300/0
  5284 ;;		On exit  : 300/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       8       0       0       0
  5288 ;;      Locals:         0       5       0       0       0
  5289 ;;      Temps:          0       1       0       0       0
  5290 ;;      Totals:         0      14       0       0       0
  5291 ;;Total ram usage:       14 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    1
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_I2C_Master_Init
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function ___lldiv
  5303  1275                     ___lldiv:	
  5304                           
  5305                           ;incstack = 0
  5306                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5307  1275  3000               	movlw	0
  5308  1276  00AC               	movwf	___lldiv@quotient+3
  5309  1277  3000               	movlw	0
  5310  1278  00AB               	movwf	___lldiv@quotient+2
  5311  1279  3000               	movlw	0
  5312  127A  00AA               	movwf	___lldiv@quotient+1
  5313  127B  3000               	movlw	0
  5314  127C  00A9               	movwf	___lldiv@quotient
  5315  127D  0823               	movf	___lldiv@divisor+3,w
  5316  127E  0422               	iorwf	___lldiv@divisor+2,w
  5317  127F  0421               	iorwf	___lldiv@divisor+1,w
  5318  1280  0420               	iorwf	___lldiv@divisor,w
  5319  1281  1903               	skipnz
  5320  1282  2ACA               	goto	l4691
  5321  1283  01AD               	clrf	___lldiv@counter
  5322  1284  0AAD               	incf	___lldiv@counter,f
  5323  1285                     l4677:	
  5324  1285  1BA3               	btfsc	___lldiv@divisor+3,7
  5325  1286  2A95               	goto	l4679
  5326  1287  3001               	movlw	1
  5327  1288  00A8               	movwf	??___lldiv
  5328  1289                     u4215:	
  5329  1289  1003               	clrc
  5330  128A  0DA0               	rlf	___lldiv@divisor,f
  5331  128B  0DA1               	rlf	___lldiv@divisor+1,f
  5332  128C  0DA2               	rlf	___lldiv@divisor+2,f
  5333  128D  0DA3               	rlf	___lldiv@divisor+3,f
  5334  128E  0BA8               	decfsz	??___lldiv,f
  5335  128F  2A89               	goto	u4215
  5336  1290  3001               	movlw	1
  5337  1291  00A8               	movwf	??___lldiv
  5338  1292  0828               	movf	??___lldiv,w
  5339  1293  07AD               	addwf	___lldiv@counter,f
  5340  1294  2A85               	goto	l4677
  5341  1295                     l4679:	
  5342  1295  3001               	movlw	1
  5343  1296  00A8               	movwf	??___lldiv
  5344  1297                     u4235:	
  5345  1297  1003               	clrc
  5346  1298  0DA9               	rlf	___lldiv@quotient,f
  5347  1299  0DAA               	rlf	___lldiv@quotient+1,f
  5348  129A  0DAB               	rlf	___lldiv@quotient+2,f
  5349  129B  0DAC               	rlf	___lldiv@quotient+3,f
  5350  129C  0BA8               	decfsz	??___lldiv,f
  5351  129D  2A97               	goto	u4235
  5352  129E  0823               	movf	___lldiv@divisor+3,w
  5353  129F  0227               	subwf	___lldiv@dividend+3,w
  5354  12A0  1D03               	skipz
  5355  12A1  2AAC               	goto	u4245
  5356  12A2  0822               	movf	___lldiv@divisor+2,w
  5357  12A3  0226               	subwf	___lldiv@dividend+2,w
  5358  12A4  1D03               	skipz
  5359  12A5  2AAC               	goto	u4245
  5360  12A6  0821               	movf	___lldiv@divisor+1,w
  5361  12A7  0225               	subwf	___lldiv@dividend+1,w
  5362  12A8  1D03               	skipz
  5363  12A9  2AAC               	goto	u4245
  5364  12AA  0820               	movf	___lldiv@divisor,w
  5365  12AB  0224               	subwf	___lldiv@dividend,w
  5366  12AC                     u4245:	
  5367  12AC  1C03               	skipc
  5368  12AD  2ABD               	goto	l4687
  5369  12AE  0820               	movf	___lldiv@divisor,w
  5370  12AF  02A4               	subwf	___lldiv@dividend,f
  5371  12B0  0821               	movf	___lldiv@divisor+1,w
  5372  12B1  1C03               	skipc
  5373  12B2  0F21               	incfsz	___lldiv@divisor+1,w
  5374  12B3  02A5               	subwf	___lldiv@dividend+1,f
  5375  12B4  0822               	movf	___lldiv@divisor+2,w
  5376  12B5  1C03               	skipc
  5377  12B6  0F22               	incfsz	___lldiv@divisor+2,w
  5378  12B7  02A6               	subwf	___lldiv@dividend+2,f
  5379  12B8  0823               	movf	___lldiv@divisor+3,w
  5380  12B9  1C03               	skipc
  5381  12BA  0F23               	incfsz	___lldiv@divisor+3,w
  5382  12BB  02A7               	subwf	___lldiv@dividend+3,f
  5383  12BC  1429               	bsf	___lldiv@quotient,0
  5384  12BD                     l4687:	
  5385  12BD  3001               	movlw	1
  5386  12BE                     u4255:	
  5387  12BE  1003               	clrc
  5388  12BF  0CA3               	rrf	___lldiv@divisor+3,f
  5389  12C0  0CA2               	rrf	___lldiv@divisor+2,f
  5390  12C1  0CA1               	rrf	___lldiv@divisor+1,f
  5391  12C2  0CA0               	rrf	___lldiv@divisor,f
  5392  12C3  3EFF               	addlw	-1
  5393  12C4  1D03               	skipz
  5394  12C5  2ABE               	goto	u4255
  5395  12C6  3001               	movlw	1
  5396  12C7  02AD               	subwf	___lldiv@counter,f
  5397  12C8  1D03               	btfss	3,2
  5398  12C9  2A95               	goto	l4679
  5399  12CA                     l4691:	
  5400  12CA  082C               	movf	___lldiv@quotient+3,w
  5401  12CB  00A3               	movwf	?___lldiv+3
  5402  12CC  082B               	movf	___lldiv@quotient+2,w
  5403  12CD  00A2               	movwf	?___lldiv+2
  5404  12CE  082A               	movf	___lldiv@quotient+1,w
  5405  12CF  00A1               	movwf	?___lldiv+1
  5406  12D0  0829               	movf	___lldiv@quotient,w
  5407  12D1  00A0               	movwf	?___lldiv
  5408  12D2  0008               	return
  5409  12D3                     __end_of___lldiv:	
  5410                           
  5411                           	psect	text13
  5412  0037                     __ptext13:	
  5413 ;; *************** function _Decodify_Command *****************
  5414 ;; Defined at:
  5415 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  ss             10   20[BANK1 ] unsigned char [10]
  5420 ;;  mm             10   10[BANK1 ] unsigned char [10]
  5421 ;;  hh             10    0[BANK1 ] unsigned char [10]
  5422 ;;  sizedata        1   40[BANK1 ] unsigned char 
  5423 ;;  add             1   32[BANK1 ] unsigned char 
  5424 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  5425 ;;  OutPut          4   35[BANK1 ] float 
  5426 ;;  tempint         2   33[BANK1 ] int 
  5427 ;;  dados           2   30[BANK1 ] int 
  5428 ;;  tempchar        1   39[BANK1 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 300/0
  5435 ;;		On exit  : 200/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         0       0       0       0       0
  5439 ;;      Locals:         0       0      45       0       0
  5440 ;;      Temps:          0       4       0       0       0
  5441 ;;      Totals:         0       4      45       0       0
  5442 ;;Total ram usage:       49 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    6
  5445 ;; This function calls:
  5446 ;;		_EEPROM_24C1025_Fill_All
  5447 ;;		_EEPROM_24C1025_Read_Buffer
  5448 ;;		_EEPROM_24C1025_Read_Byte
  5449 ;;		_EEPROM_24C1025_Read_Int
  5450 ;;		_EEPROM_24C1025_Read_Str
  5451 ;;		_EEPROM_24C1025_Write_Buffer
  5452 ;;		_EEPROM_24C1025_Write_Byte
  5453 ;;		_EEPROM_24C1025_Write_Int
  5454 ;;		_EEPROM_24C1025_Write_Str
  5455 ;;		_EEPROM_Read_Byte
  5456 ;;		_EEPROM_Read_Integer
  5457 ;;		_EEPROM_Read_String
  5458 ;;		_EEPROM_Write_Byte
  5459 ;;		_EEPROM_Write_Integer
  5460 ;;		_EEPROM_Write_String
  5461 ;;		_PROCULUS_Buzzer
  5462 ;;		_PROCULUS_Show_Screen
  5463 ;;		_PROCULUS_VP_Write_String
  5464 ;;		_Save_Log
  5465 ;;		_Send_Reply_OK
  5466 ;;		_Send_To_MB
  5467 ;;		_USART_put_buffer
  5468 ;;		_USART_put_int
  5469 ;;		_USART_put_string
  5470 ;;		_USART_putc
  5471 ;;		_USART_to_Protocol
  5472 ;;		___flmul
  5473 ;;		___fltol
  5474 ;;		_itoa
  5475 ;;		_strcat
  5476 ;;		_strcpy
  5477 ;;		_strlen
  5478 ;; This function is called by:
  5479 ;;		_main
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           
  5484                           ;psect for function _Decodify_Command
  5485  0037                     _Decodify_Command:	
  5486                           
  5487                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5491  0037  30DF               	movlw	(low (_usart_protocol| 0))& (0+255)
  5492  0038  160A  118A  2218  120A  118A  	fcall	_USART_to_Protocol
  5493                           
  5494                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5495  003D  1683               	bsf	3,5	;RP0=1, select bank1
  5496  003E  1303               	bcf	3,6	;RP1=0, select bank1
  5497  003F  0866               	movf	(_usart_protocol^(0+128)+7),w
  5498  0040  1283               	bcf	3,5	;RP0=0, select bank0
  5499  0041  00C8               	movwf	??_Decodify_Command
  5500  0042  0848               	movf	??_Decodify_Command,w
  5501  0043  1683               	bsf	3,5	;RP0=1, select bank1
  5502  0044  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5503                           
  5504                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5505  0045  0867               	movf	(_usart_protocol^(0+128)+8),w
  5506  0046  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0047  00C8               	movwf	??_Decodify_Command
  5508  0048  0848               	movf	??_Decodify_Command,w
  5509  0049  1683               	bsf	3,5	;RP0=1, select bank1
  5510  004A  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5511                           
  5512                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5513  004B  0868               	movf	(_usart_protocol^(0+128)+9),w
  5514  004C  1283               	bcf	3,5	;RP0=0, select bank0
  5515  004D  00C8               	movwf	??_Decodify_Command
  5516  004E  0848               	movf	??_Decodify_Command,w
  5517  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5518  0050  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5519                           
  5520                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5521  0051  0869               	movf	(_usart_protocol^(0+128)+10),w
  5522  0052  1283               	bcf	3,5	;RP0=0, select bank0
  5523  0053  00C8               	movwf	??_Decodify_Command
  5524  0054  0848               	movf	??_Decodify_Command,w
  5525  0055  1683               	bsf	3,5	;RP0=1, select bank1
  5526  0056  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5527                           
  5528                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  5529  0057  2C22               	goto	l5883
  5530  0058                     l5679:	
  5531                           
  5532                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  5533  0058  300B               	movlw	11
  5534  0059  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5535                           
  5536                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.10");
  5537  005E  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5538  005F  1283               	bcf	3,5	;RP0=0, select bank0
  5539  0060  00A1               	movwf	USART_put_string@vetor
  5540  0061  3080               	movlw	128
  5541  0062  00A2               	movwf	USART_put_string@vetor+1
  5542  0063  160A  158A  26B6   	fcall	_USART_put_string
  5543                           
  5544                           ;SlaveLiofilizadorVer1.c: 346:              break;
  5545  0066  0008               	return
  5546  0067                     l5683:	
  5547                           
  5548                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  5549  0067  1683               	bsf	3,5	;RP0=1, select bank1
  5550  0068  0865               	movf	(_usart_protocol^(0+128)+6),w
  5551  0069  1D03               	btfss	3,2
  5552  006A  2873               	goto	l5687
  5553                           
  5554                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  5555  006B  0854               	movf	(_Temperatura0+3)^(0+128),w
  5556  006C  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5557  006D  0853               	movf	(_Temperatura0+2)^(0+128),w
  5558  006E  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5559  006F  0852               	movf	(_Temperatura0+1)^(0+128),w
  5560  0070  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5561  0071  0851               	movf	_Temperatura0^(0+128),w
  5562  0072  287A               	goto	L5
  5563  0073                     l5687:	
  5564                           
  5565                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  5566  0073  0850               	movf	(_Umidade1+3)^(0+128),w
  5567  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5568  0075  084F               	movf	(_Umidade1+2)^(0+128),w
  5569  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5570  0077  084E               	movf	(_Umidade1+1)^(0+128),w
  5571  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5572  0079  084D               	movf	_Umidade1^(0+128),w
  5573  007A                     L5:	
  5574  007A  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  5575                           
  5576                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  5577  007B  3041               	movlw	65
  5578  007C  1283               	bcf	3,5	;RP0=0, select bank0
  5579  007D  00AC               	movwf	___flmul@b+3
  5580  007E  3020               	movlw	32
  5581  007F  00AB               	movwf	___flmul@b+2
  5582  0080  3000               	movlw	0
  5583  0081  00AA               	movwf	___flmul@b+1
  5584  0082  3000               	movlw	0
  5585  0083  00A9               	movwf	___flmul@b
  5586  0084  1683               	bsf	3,5	;RP0=1, select bank1
  5587  0085  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5588  0086  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0087  00B0               	movwf	___flmul@a+3
  5590  0088  1683               	bsf	3,5	;RP0=1, select bank1
  5591  0089  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5592  008A  1283               	bcf	3,5	;RP0=0, select bank0
  5593  008B  00AF               	movwf	___flmul@a+2
  5594  008C  1683               	bsf	3,5	;RP0=1, select bank1
  5595  008D  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5596  008E  1283               	bcf	3,5	;RP0=0, select bank0
  5597  008F  00AE               	movwf	___flmul@a+1
  5598  0090  1683               	bsf	3,5	;RP0=1, select bank1
  5599  0091  0843               	movf	Decodify_Command@OutPut^(0+128),w
  5600  0092  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0093  00AD               	movwf	___flmul@a
  5602  0094  120A  118A  2479  120A  118A  	fcall	___flmul
  5603  0099  082C               	movf	?___flmul+3,w
  5604  009A  1683               	bsf	3,5	;RP0=1, select bank1
  5605  009B  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5606  009C  1283               	bcf	3,5	;RP0=0, select bank0
  5607  009D  082B               	movf	?___flmul+2,w
  5608  009E  1683               	bsf	3,5	;RP0=1, select bank1
  5609  009F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5610  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  5611  00A1  082A               	movf	?___flmul+1,w
  5612  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  5613  00A3  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5614  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  5615  00A5  0829               	movf	?___flmul,w
  5616  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  5617  00A7  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  5618                           
  5619                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  5620  00A8  138B               	bcf	11,7	;volatile
  5621                           
  5622                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  5623  00A9  3002               	movlw	2
  5624  00AA  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5625                           
  5626                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  5627  00AF  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5628  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  5629  00B1  00A3               	movwf	___fltol@f1+3
  5630  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  5631  00B3  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5632  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  5633  00B5  00A2               	movwf	___fltol@f1+2
  5634  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  5635  00B7  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5636  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  5637  00B9  00A1               	movwf	___fltol@f1+1
  5638  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  5639  00BB  0843               	movf	Decodify_Command@OutPut^(0+128),w
  5640  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  5641  00BD  00A0               	movwf	___fltol@f1
  5642  00BE  120A  118A  276E  120A  118A  	fcall	___fltol
  5643  00C3  0821               	movf	?___fltol+1,w
  5644  00C4  00AC               	movwf	USART_put_int@value+1
  5645  00C5  0820               	movf	?___fltol,w
  5646  00C6  00AB               	movwf	USART_put_int@value
  5647  00C7  160A  158A  23A6   	fcall	_USART_put_int
  5648                           
  5649                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  5650  00CA  178B               	bsf	11,7	;volatile
  5651                           
  5652                           ;SlaveLiofilizadorVer1.c: 375:              break;
  5653  00CB  0008               	return
  5654  00CC                     l5699:	
  5655                           
  5656                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  5657  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  5658  00CD  0865               	movf	(_usart_protocol^(0+128)+6),w
  5659  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  5660  00CF  00C8               	movwf	??_Decodify_Command
  5661  00D0  0848               	movf	??_Decodify_Command,w
  5662  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  5663  00D2  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5664                           
  5665                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  5666  00D3  0866               	movf	(_usart_protocol^(0+128)+7),w
  5667  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  5668  00D5  00C8               	movwf	??_Decodify_Command
  5669  00D6  0848               	movf	??_Decodify_Command,w
  5670  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  5671  00D8  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5672                           
  5673                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  5674  00D9  0867               	movf	(_usart_protocol^(0+128)+8),w
  5675  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  5676  00DB  00C8               	movwf	??_Decodify_Command
  5677  00DC  0848               	movf	??_Decodify_Command,w
  5678  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  5679  00DE  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5680                           
  5681                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  5682  00DF  0868               	movf	(_usart_protocol^(0+128)+9),w
  5683  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5684  00E1  00C8               	movwf	??_Decodify_Command
  5685  00E2  0848               	movf	??_Decodify_Command,w
  5686  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  5687  00E4  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5688                           
  5689                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  5690  00E5  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5691  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5692  00E7  00C4               	movwf	Save_Log@add_datalog+3
  5693  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  5694  00E9  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5695  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  5696  00EB  00C3               	movwf	Save_Log@add_datalog+2
  5697  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  5698  00ED  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5699  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5700  00EF  00C2               	movwf	Save_Log@add_datalog+1
  5701  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  5702  00F1  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5703  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  5704  00F3  00C1               	movwf	Save_Log@add_datalog
  5705  00F4  160A  118A  21BE   	fcall	_Save_Log
  5706                           
  5707                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  5708  00F7  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  5709  00F8  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  5710                           
  5711                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  5712  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  5713  00FA  01D9               	clrf	_milisegundo^(0+128)	;volatile
  5714  00FB  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
  5715                           
  5716                           ;SlaveLiofilizadorVer1.c: 387:              break;
  5717  00FC  0008               	return
  5718  00FD                     l5707:	
  5719                           
  5720                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  5721  00FD  3002               	movlw	2
  5722  00FE  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5723                           
  5724                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  5725  0103  3002               	movlw	2
  5726  0104  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0105  00AB               	movwf	USART_put_int@value
  5728  0106  3000               	movlw	0
  5729  0107  00AC               	movwf	USART_put_int@value+1
  5730  0108  160A  158A  23A6   	fcall	_USART_put_int
  5731                           
  5732                           ;SlaveLiofilizadorVer1.c: 411:              break;
  5733  010B  0008               	return
  5734  010C                     l5711:	
  5735                           
  5736                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  5737  010C  1683               	bsf	3,5	;RP0=1, select bank1
  5738  010D  0866               	movf	(_usart_protocol^(0+128)+7),w
  5739  010E  1283               	bcf	3,5	;RP0=0, select bank0
  5740  010F  00C8               	movwf	??_Decodify_Command
  5741  0110  0848               	movf	??_Decodify_Command,w
  5742  0111  00A0               	movwf	EEPROM_Write_Byte@dado
  5743  0112  1683               	bsf	3,5	;RP0=1, select bank1
  5744  0113  0865               	movf	(_usart_protocol^(0+128)+6),w
  5745  0114  160A  158A  27C5  120A  118A  	fcall	_EEPROM_Write_Byte
  5746  0119                     L6:	
  5747                           
  5748                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  5749  0119  3003               	movlw	3
  5750  011A  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5751                           
  5752                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  5753  011F  160A  158A  233E   	fcall	_Send_Reply_OK
  5754                           
  5755                           ;SlaveLiofilizadorVer1.c: 432:              break;
  5756  0122  0008               	return
  5757  0123                     l5715:	
  5758                           
  5759                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  5760  0123  1683               	bsf	3,5	;RP0=1, select bank1
  5761  0124  0865               	movf	(_usart_protocol^(0+128)+6),w
  5762  0125  160A  158A  24FB  120A  118A  	fcall	_EEPROM_Read_Byte
  5763  012A  1303               	bcf	3,6	;RP1=0, select bank0
  5764  012B  00C8               	movwf	??_Decodify_Command
  5765  012C  0848               	movf	??_Decodify_Command,w
  5766  012D  1683               	bsf	3,5	;RP0=1, select bank1
  5767  012E  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  5768                           
  5769                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  5770  012F  3001               	movlw	1
  5771  0130  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5772                           
  5773                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  5774  0135  0847               	movf	Decodify_Command@tempchar^(0+128),w
  5775  0136  160A  158A  2372   	fcall	_USART_putc
  5776                           
  5777                           ;SlaveLiofilizadorVer1.c: 437:              break;
  5778  0139  0008               	return
  5779  013A                     l5721:	
  5780                           
  5781                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  5782  013A  1683               	bsf	3,5	;RP0=1, select bank1
  5783  013B  0865               	movf	(_usart_protocol^(0+128)+6),w
  5784  013C  1283               	bcf	3,5	;RP0=0, select bank0
  5785  013D  00C8               	movwf	??_Decodify_Command
  5786  013E  0848               	movf	??_Decodify_Command,w
  5787  013F  1683               	bsf	3,5	;RP0=1, select bank1
  5788  0140  00C0               	movwf	Decodify_Command@add^(0+128)
  5789                           
  5790                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  5791  0141  0867               	movf	(_usart_protocol^(0+128)+8),w
  5792  0142  1283               	bcf	3,5	;RP0=0, select bank0
  5793  0143  00C8               	movwf	??_Decodify_Command
  5794  0144  01C9               	clrf	??_Decodify_Command+1
  5795  0145  1683               	bsf	3,5	;RP0=1, select bank1
  5796  0146  0866               	movf	(_usart_protocol^(0+128)+7),w
  5797  0147  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0148  00CA               	movwf	??_Decodify_Command+2
  5799  0149  01CB               	clrf	??_Decodify_Command+3
  5800  014A  084A               	movf	??_Decodify_Command+2,w
  5801  014B  00CB               	movwf	??_Decodify_Command+3
  5802  014C  01CA               	clrf	??_Decodify_Command+2
  5803  014D  0848               	movf	??_Decodify_Command,w
  5804  014E  044A               	iorwf	??_Decodify_Command+2,w
  5805  014F  1683               	bsf	3,5	;RP0=1, select bank1
  5806  0150  00BE               	movwf	Decodify_Command@dados^(0+128)
  5807  0151  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0152  0849               	movf	??_Decodify_Command+1,w
  5809  0153  044B               	iorwf	??_Decodify_Command+3,w
  5810  0154  1683               	bsf	3,5	;RP0=1, select bank1
  5811  0155  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  5812                           
  5813                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  5814  0156  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  5815  0157  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0158  00A6               	movwf	EEPROM_Write_Integer@dado+1
  5817  0159  1683               	bsf	3,5	;RP0=1, select bank1
  5818  015A  083E               	movf	Decodify_Command@dados^(0+128),w
  5819  015B  1283               	bcf	3,5	;RP0=0, select bank0
  5820  015C  00A5               	movwf	EEPROM_Write_Integer@dado
  5821  015D  1683               	bsf	3,5	;RP0=1, select bank1
  5822  015E  0840               	movf	Decodify_Command@add^(0+128),w
  5823  015F  160A  158A  2652  120A  118A  	fcall	_EEPROM_Write_Integer
  5824  0164  2919               	goto	L6
  5825  0165                     l5731:	
  5826                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  5827                           
  5828                           
  5829                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  5830  0165  1683               	bsf	3,5	;RP0=1, select bank1
  5831  0166  0865               	movf	(_usart_protocol^(0+128)+6),w
  5832  0167  160A  158A  25CE  120A  118A  	fcall	_EEPROM_Read_Integer
  5833  016C  0824               	movf	?_EEPROM_Read_Integer+1,w
  5834  016D  1683               	bsf	3,5	;RP0=1, select bank1
  5835  016E  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  5836  016F  1283               	bcf	3,5	;RP0=0, select bank0
  5837  0170  0823               	movf	?_EEPROM_Read_Integer,w
  5838  0171                     L7:	
  5839  0171  1683               	bsf	3,5	;RP0=1, select bank1
  5840  0172  00C1               	movwf	Decodify_Command@tempint^(0+128)
  5841                           
  5842                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  5843  0173  3002               	movlw	2
  5844  0174  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5845                           
  5846                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  5847  0179  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  5848  017A  1283               	bcf	3,5	;RP0=0, select bank0
  5849  017B  00AC               	movwf	USART_put_int@value+1
  5850  017C  1683               	bsf	3,5	;RP0=1, select bank1
  5851  017D  0841               	movf	Decodify_Command@tempint^(0+128),w
  5852  017E  1283               	bcf	3,5	;RP0=0, select bank0
  5853  017F  00AB               	movwf	USART_put_int@value
  5854  0180  160A  158A  23A6   	fcall	_USART_put_int
  5855                           
  5856                           ;SlaveLiofilizadorVer1.c: 452:              break;
  5857  0183  0008               	return
  5858  0184                     l5737:	
  5859                           
  5860                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  5861  0184  30E6               	movlw	(low ((_usart_protocol| 0+7)))& (0+255)
  5862  0185  00C8               	movwf	??_Decodify_Command
  5863  0186  0848               	movf	??_Decodify_Command,w
  5864  0187  00A5               	movwf	EEPROM_Write_String@dado
  5865  0188  1683               	bsf	3,5	;RP0=1, select bank1
  5866  0189  0865               	movf	(_usart_protocol^(0+128)+6),w
  5867  018A  160A  158A  25F7  120A  118A  	fcall	_EEPROM_Write_String
  5868  018F  2919               	goto	L6
  5869  0190                     l5743:	
  5870                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  5871                           
  5872                           
  5873                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  5874  0190  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  5875  0191  00C8               	movwf	??_Decodify_Command
  5876  0192  0848               	movf	??_Decodify_Command,w
  5877  0193  00A3               	movwf	EEPROM_Read_String@dado
  5878  0194  1683               	bsf	3,5	;RP0=1, select bank1
  5879  0195  0865               	movf	(_usart_protocol^(0+128)+6),w
  5880  0196  160A  158A  249B  120A  118A  	fcall	_EEPROM_Read_String
  5881                           
  5882                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  5883  019B  3010               	movlw	16
  5884  019C                     L8:	
  5885  019C  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5886                           
  5887                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  5888  01A1  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  5889  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  5890  01A3  00A1               	movwf	USART_put_string@vetor
  5891  01A4  3001               	movlw	1
  5892  01A5  00A2               	movwf	USART_put_string@vetor+1
  5893  01A6  160A  158A  26B6   	fcall	_USART_put_string
  5894                           
  5895                           ;SlaveLiofilizadorVer1.c: 466:              break;
  5896  01A9  0008               	return
  5897  01AA                     l5749:	
  5898                           
  5899                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  5900  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  5901  01AB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5902  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  5903  01AD  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  5904  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  5905  01AF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5906  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  5907  01B1  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  5908  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  5909  01B3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5910  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  5911  01B5  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  5912  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  5913  01B7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5914  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  5915  01B9  00B6               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  5916  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  5917  01BB  086A               	movf	(_usart_protocol^(0+128)+11),w
  5918  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  5919  01BD  00C8               	movwf	??_Decodify_Command
  5920  01BE  0848               	movf	??_Decodify_Command,w
  5921  01BF  00BA               	movwf	EEPROM_24C1025_Write_Byte@data
  5922  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  5923  01C1  0865               	movf	(_usart_protocol^(0+128)+6),w
  5924  01C2  160A  158A  2391  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  5925  01C7  2919               	goto	L6
  5926  01C8                     l5755:	
  5927                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  5928                           
  5929                           
  5930                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  5931  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  5932  01C9  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5933  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  5934  01CB  00BB               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  5935  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  5936  01CD  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5937  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  5938  01CF  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  5939  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  5940  01D1  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5941  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  5942  01D3  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  5943  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  5944  01D5  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5945  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  5946  01D7  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  5947  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  5948  01D9  0865               	movf	(_usart_protocol^(0+128)+6),w
  5949  01DA  160A  158A  23BC  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  5950  01DF  00C8               	movwf	??_Decodify_Command
  5951  01E0  0848               	movf	??_Decodify_Command,w
  5952  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  5953  01E2  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  5954                           
  5955                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  5956  01E3  3001               	movlw	1
  5957  01E4  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  5958                           
  5959                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  5960  01E9  0847               	movf	Decodify_Command@tempchar^(0+128),w
  5961  01EA  160A  158A  2372   	fcall	_USART_putc
  5962                           
  5963                           ;SlaveLiofilizadorVer1.c: 484:              break;
  5964  01ED  0008               	return
  5965  01EE                     l5761:	
  5966                           
  5967                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  5968  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  5969  01EF  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5970  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  5971  01F1  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  5972  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  5973  01F3  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5974  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  5975  01F5  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  5976  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5977  01F7  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5978  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  5979  01F9  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  5980  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  5981  01FB  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5982  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  5983  01FD  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
  5984  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  5985  01FF  086B               	movf	(_usart_protocol^(0+128)+12),w
  5986  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5987  0201  00C8               	movwf	??_Decodify_Command
  5988  0202  01C9               	clrf	??_Decodify_Command+1
  5989  0203  1683               	bsf	3,5	;RP0=1, select bank1
  5990  0204  086A               	movf	(_usart_protocol^(0+128)+11),w
  5991  0205  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0206  00CA               	movwf	??_Decodify_Command+2
  5993  0207  01CB               	clrf	??_Decodify_Command+3
  5994  0208  084A               	movf	??_Decodify_Command+2,w
  5995  0209  00CB               	movwf	??_Decodify_Command+3
  5996  020A  01CA               	clrf	??_Decodify_Command+2
  5997  020B  0848               	movf	??_Decodify_Command,w
  5998  020C  044A               	iorwf	??_Decodify_Command+2,w
  5999  020D  00BA               	movwf	EEPROM_24C1025_Write_Int@data
  6000  020E  0849               	movf	??_Decodify_Command+1,w
  6001  020F  044B               	iorwf	??_Decodify_Command+3,w
  6002  0210  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
  6003  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6004  0212  0865               	movf	(_usart_protocol^(0+128)+6),w
  6005  0213  160A  158A  247C  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6006  0218  2919               	goto	L6
  6007  0219                     l5767:	
  6008                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6009                           
  6010                           
  6011                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6012  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6013  021A  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6014  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6015  021C  00BB               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6016  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6017  021E  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6018  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0220  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6020  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6021  0222  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6022  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0224  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6024  0225  1683               	bsf	3,5	;RP0=1, select bank1
  6025  0226  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6026  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0228  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6028  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6029  022A  0865               	movf	(_usart_protocol^(0+128)+6),w
  6030  022B  120A  118A  27D9  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6031  0230  0839               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6032  0231  1683               	bsf	3,5	;RP0=1, select bank1
  6033  0232  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6034  0233  1283               	bcf	3,5	;RP0=0, select bank0
  6035  0234  0838               	movf	?_EEPROM_24C1025_Read_Int,w
  6036  0235  2971               	goto	L7
  6037  0236                     l5773:	
  6038                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6039                           
  6040                           
  6041                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6042  0236  1683               	bsf	3,5	;RP0=1, select bank1
  6043  0237  086A               	movf	(_usart_protocol^(0+128)+11),w
  6044  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0239  00C8               	movwf	??_Decodify_Command
  6046  023A  0848               	movf	??_Decodify_Command,w
  6047  023B  1683               	bsf	3,5	;RP0=1, select bank1
  6048  023C  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  6049                           
  6050                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6051  023D  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6052  023E  1283               	bcf	3,5	;RP0=0, select bank0
  6053  023F  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6054  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6055  0241  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6056  0242  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0243  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6058  0244  1683               	bsf	3,5	;RP0=1, select bank1
  6059  0245  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6060  0246  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0247  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6062  0248  1683               	bsf	3,5	;RP0=1, select bank1
  6063  0249  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6064  024A  1283               	bcf	3,5	;RP0=0, select bank0
  6065  024B  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6066  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6067  024D  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6068  024E  1283               	bcf	3,5	;RP0=0, select bank0
  6069  024F  00C8               	movwf	??_Decodify_Command
  6070  0250  0848               	movf	??_Decodify_Command,w
  6071  0251  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6072  0252  30BE               	movlw	(low (_buffer| (0+256)))& (0+255)
  6073  0253  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6074  0254  3001               	movlw	1
  6075  0255  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6076  0256  1683               	bsf	3,5	;RP0=1, select bank1
  6077  0257  0865               	movf	(_usart_protocol^(0+128)+6),w
  6078  0258  120A  158A  22BB  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6079                           
  6080                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6081  025D  1683               	bsf	3,5	;RP0=1, select bank1
  6082  025E  1303               	bcf	3,6	;RP1=0, select bank1
  6083  025F  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6084  0260  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  6085                           
  6086                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6087  0265  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6088  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6089  0267  00C8               	movwf	??_Decodify_Command
  6090  0268  01C9               	clrf	??_Decodify_Command+1
  6091  0269  0848               	movf	??_Decodify_Command,w
  6092  026A  00A1               	movwf	USART_put_buffer@size
  6093  026B  0849               	movf	??_Decodify_Command+1,w
  6094  026C  00A2               	movwf	USART_put_buffer@size+1
  6095  026D  30BE               	movlw	(low (_buffer| (0+256)))& (0+255)
  6096  026E  160A  158A  2582   	fcall	_USART_put_buffer
  6097                           
  6098                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6099  0271  0008               	return
  6100  0272                     l5781:	
  6101                           
  6102                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6103  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6104  0273  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6105  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6106  0275  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6107  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6108  0277  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6109  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6110  0279  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6111  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6112  027B  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6113  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6114  027D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6115  027E  1683               	bsf	3,5	;RP0=1, select bank1
  6116  027F  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6117  0280  1283               	bcf	3,5	;RP0=0, select bank0
  6118  0281  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6119  0282  1683               	bsf	3,5	;RP0=1, select bank1
  6120  0283  086A               	movf	(_usart_protocol^(0+128)+11),w
  6121  0284  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0285  00C8               	movwf	??_Decodify_Command
  6123  0286  0848               	movf	??_Decodify_Command,w
  6124  0287  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6125  0288  30EB               	movlw	(low ((_usart_protocol| 0+12)))& (0+255)
  6126  0289  00C9               	movwf	??_Decodify_Command+1
  6127  028A  0849               	movf	??_Decodify_Command+1,w
  6128  028B  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6129  028C  1683               	bsf	3,5	;RP0=1, select bank1
  6130  028D  0865               	movf	(_usart_protocol^(0+128)+6),w
  6131  028E  160A  118A  26A3  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6132  0293  2919               	goto	L6
  6133  0294                     l5787:	
  6134                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  6135                           
  6136                           
  6137                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6138  0294  1683               	bsf	3,5	;RP0=1, select bank1
  6139  0295  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6140  0296  1283               	bcf	3,5	;RP0=0, select bank0
  6141  0297  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6142  0298  1683               	bsf	3,5	;RP0=1, select bank1
  6143  0299  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6144  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6145  029B  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6146  029C  1683               	bsf	3,5	;RP0=1, select bank1
  6147  029D  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6148  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6149  029F  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6150  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6151  02A1  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6152  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  6153  02A3  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6154  02A4  30EA               	movlw	(low ((_usart_protocol| 0+11)))& (0+255)
  6155  02A5  00C8               	movwf	??_Decodify_Command
  6156  02A6  0848               	movf	??_Decodify_Command,w
  6157  02A7  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6158  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  6159  02A9  0865               	movf	(_usart_protocol^(0+128)+6),w
  6160  02AA  160A  118A  25B1  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6161  02AF  2919               	goto	L6
  6162  02B0                     l5793:	
  6163                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  6164                           
  6165                           
  6166                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6167  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  6168  02B1  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6169  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  6170  02B3  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6171  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6172  02B5  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6173  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6174  02B7  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6175  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6176  02B9  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6177  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6178  02BB  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6179  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6180  02BD  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6181  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6182  02BF  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6183  02C0  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6184  02C1  00C8               	movwf	??_Decodify_Command
  6185  02C2  0848               	movf	??_Decodify_Command,w
  6186  02C3  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  6187  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  6188  02C5  0865               	movf	(_usart_protocol^(0+128)+6),w
  6189  02C6  120A  158A  214B  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6190                           
  6191                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  6192  02CB  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6193  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  6194  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  6195  02CE  00A0               	movwf	strlen@s
  6196  02CF  3001               	movlw	1
  6197  02D0  00A1               	movwf	strlen@s+1
  6198  02D1  160A  158A  2407  120A  118A  	fcall	_strlen
  6199  02D6  0820               	movf	?_strlen,w
  6200  02D7  299C               	goto	L8
  6201  02D8                     l5799:	
  6202                           
  6203                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6204  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  6205  02D9  0866               	movf	(_usart_protocol^(0+128)+7),w
  6206  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6207  02DB  00C8               	movwf	??_Decodify_Command
  6208  02DC  01C9               	clrf	??_Decodify_Command+1
  6209  02DD  0848               	movf	??_Decodify_Command,w
  6210  02DE  00C1               	movwf	EEPROM_24C1025_Fill_All@value
  6211  02DF  0849               	movf	??_Decodify_Command+1,w
  6212  02E0  00C2               	movwf	EEPROM_24C1025_Fill_All@value+1
  6213  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  6214  02E2  0865               	movf	(_usart_protocol^(0+128)+6),w
  6215  02E3  160A  118A  20EA  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6216  02E8  2919               	goto	L6
  6217  02E9                     l5805:	
  6218                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  6219                           
  6220                           
  6221                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  6222  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  6223  02EA  085D               	movf	_hora^(0+128),w	;volatile
  6224  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  6225  02EC  00C8               	movwf	??_Decodify_Command
  6226  02ED  01C9               	clrf	??_Decodify_Command+1
  6227  02EE  0848               	movf	??_Decodify_Command,w
  6228  02EF  00B1               	movwf	itoa@val
  6229  02F0  0849               	movf	??_Decodify_Command+1,w
  6230  02F1  00B2               	movwf	itoa@val+1
  6231  02F2  300A               	movlw	10
  6232  02F3  00B3               	movwf	itoa@base
  6233  02F4  3000               	movlw	0
  6234  02F5  00B4               	movwf	itoa@base+1
  6235  02F6  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  6236  02F7  160A  158A  24BA  120A  118A  	fcall	_itoa
  6237                           
  6238                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  6239  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  6240  02FD  085C               	movf	_minuto^(0+128),w	;volatile
  6241  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  6242  02FF  00C8               	movwf	??_Decodify_Command
  6243  0300  01C9               	clrf	??_Decodify_Command+1
  6244  0301  0848               	movf	??_Decodify_Command,w
  6245  0302  00B1               	movwf	itoa@val
  6246  0303  0849               	movf	??_Decodify_Command+1,w
  6247  0304  00B2               	movwf	itoa@val+1
  6248  0305  300A               	movlw	10
  6249  0306  00B3               	movwf	itoa@base
  6250  0307  3000               	movlw	0
  6251  0308  00B4               	movwf	itoa@base+1
  6252  0309  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  6253  030A  160A  158A  24BA  120A  118A  	fcall	_itoa
  6254                           
  6255                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  6256  030F  1683               	bsf	3,5	;RP0=1, select bank1
  6257  0310  085E               	movf	_segundo^(0+128),w	;volatile
  6258  0311  1283               	bcf	3,5	;RP0=0, select bank0
  6259  0312  00C8               	movwf	??_Decodify_Command
  6260  0313  01C9               	clrf	??_Decodify_Command+1
  6261  0314  0848               	movf	??_Decodify_Command,w
  6262  0315  00B1               	movwf	itoa@val
  6263  0316  0849               	movf	??_Decodify_Command+1,w
  6264  0317  00B2               	movwf	itoa@val+1
  6265  0318  300A               	movlw	10
  6266  0319  00B3               	movwf	itoa@base
  6267  031A  3000               	movlw	0
  6268  031B  00B4               	movwf	itoa@base+1
  6269  031C  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  6270  031D  160A  158A  24BA  120A  118A  	fcall	_itoa
  6271                           
  6272                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  6273  0322  3048               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  6274  0323  00C8               	movwf	??_Decodify_Command
  6275  0324  0848               	movf	??_Decodify_Command,w
  6276  0325  00A0               	movwf	strcpy@from
  6277  0326  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6278  0327  160A  158A  2440  120A  118A  	fcall	_strcpy
  6279                           
  6280                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  6281  032C  1683               	bsf	3,5	;RP0=1, select bank1
  6282  032D  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  6283  032E  1D03               	btfss	3,2
  6284  032F  2B3D               	goto	l5813
  6285                           
  6286                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  6287  0330  3047               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  6288  0331  1283               	bcf	3,5	;RP0=0, select bank0
  6289  0332  00A0               	movwf	strcat@from
  6290  0333  3080               	movlw	128
  6291  0334  00A1               	movwf	strcat@from+1
  6292  0335  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6293  0336  120A  158A  2004  120A  118A  	fcall	_strcat
  6294                           
  6295                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  6296  033B  1683               	bsf	3,5	;RP0=1, select bank1
  6297  033C  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  6298  033D                     l5813:	
  6299                           
  6300                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  6301  033D  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  6302  033E  1283               	bcf	3,5	;RP0=0, select bank0
  6303  033F  00A0               	movwf	strcat@from
  6304  0340  3000               	movlw	0
  6305  0341  00A1               	movwf	strcat@from+1
  6306  0342  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6307  0343  120A  158A  2004  120A  118A  	fcall	_strcat
  6308                           
  6309                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  6310  0348  304C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  6311  0349  00A0               	movwf	strcat@from
  6312  034A  3080               	movlw	128
  6313  034B  00A1               	movwf	strcat@from+1
  6314  034C  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6315  034D  120A  158A  2004  120A  118A  	fcall	_strcat
  6316                           
  6317                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  6318  0352  1683               	bsf	3,5	;RP0=1, select bank1
  6319  0353  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  6320  0354  1D03               	btfss	3,2
  6321  0355  2B63               	goto	l5823
  6322                           
  6323                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  6324  0356  3047               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  6325  0357  1283               	bcf	3,5	;RP0=0, select bank0
  6326  0358  00A0               	movwf	strcat@from
  6327  0359  3080               	movlw	128
  6328  035A  00A1               	movwf	strcat@from+1
  6329  035B  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6330  035C  120A  158A  2004  120A  118A  	fcall	_strcat
  6331                           
  6332                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  6333  0361  1683               	bsf	3,5	;RP0=1, select bank1
  6334  0362  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  6335  0363                     l5823:	
  6336                           
  6337                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  6338  0363  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  6339  0364  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0365  00A0               	movwf	strcat@from
  6341  0366  3000               	movlw	0
  6342  0367  00A1               	movwf	strcat@from+1
  6343  0368  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6344  0369  120A  158A  2004  120A  118A  	fcall	_strcat
  6345                           
  6346                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  6347  036E  304C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  6348  036F  00A0               	movwf	strcat@from
  6349  0370  3080               	movlw	128
  6350  0371  00A1               	movwf	strcat@from+1
  6351  0372  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6352  0373  120A  158A  2004  120A  118A  	fcall	_strcat
  6353                           
  6354                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  6355  0378  1683               	bsf	3,5	;RP0=1, select bank1
  6356  0379  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  6357  037A  1D03               	btfss	3,2
  6358  037B  2B89               	goto	l5833
  6359                           
  6360                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  6361  037C  3047               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  6362  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6363  037E  00A0               	movwf	strcat@from
  6364  037F  3080               	movlw	128
  6365  0380  00A1               	movwf	strcat@from+1
  6366  0381  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6367  0382  120A  158A  2004  120A  118A  	fcall	_strcat
  6368                           
  6369                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  6370  0387  1683               	bsf	3,5	;RP0=1, select bank1
  6371  0388  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  6372  0389                     l5833:	
  6373                           
  6374                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  6375  0389  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  6376  038A  1283               	bcf	3,5	;RP0=0, select bank0
  6377  038B  00A0               	movwf	strcat@from
  6378  038C  3000               	movlw	0
  6379  038D  00A1               	movwf	strcat@from+1
  6380  038E  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6381  038F  120A  158A  2004  120A  118A  	fcall	_strcat
  6382                           
  6383                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  6384  0394  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6385  0395  00A0               	movwf	strlen@s
  6386  0396  3001               	movlw	1
  6387  0397  00A1               	movwf	strlen@s+1
  6388  0398  160A  158A  2407  120A  118A  	fcall	_strlen
  6389  039D  0820               	movf	?_strlen,w
  6390  039E  160A  158A  25A6  120A  118A  	fcall	_Send_To_MB
  6391                           
  6392                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  6393  03A3  30DE               	movlw	(low (_texto| (0+256)))& (0+255)
  6394  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  6395  03A5  00A1               	movwf	USART_put_string@vetor
  6396  03A6  3001               	movlw	1
  6397  03A7  00A2               	movwf	USART_put_string@vetor+1
  6398  03A8  160A  158A  26B6  120A  118A  	fcall	_USART_put_string
  6399                           
  6400                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  6401  03AD  3000               	movlw	0
  6402  03AE  160A  158A  2372   	fcall	_USART_putc
  6403                           
  6404                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  6405  03B1  0008               	return
  6406  03B2                     l5841:	
  6407                           
  6408                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  6409  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  6410  03B3  0865               	movf	(_usart_protocol^(0+128)+6),w
  6411  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  6412  03B5  00C8               	movwf	??_Decodify_Command
  6413  03B6  0848               	movf	??_Decodify_Command,w
  6414  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  6415  03B8  00DD               	movwf	_hora^(0+128)	;volatile
  6416                           
  6417                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  6418  03B9  0866               	movf	(_usart_protocol^(0+128)+7),w
  6419  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  6420  03BB  00C8               	movwf	??_Decodify_Command
  6421  03BC  0848               	movf	??_Decodify_Command,w
  6422  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  6423  03BE  00DC               	movwf	_minuto^(0+128)	;volatile
  6424                           
  6425                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  6426  03BF  0867               	movf	(_usart_protocol^(0+128)+8),w
  6427  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6428  03C1  00C8               	movwf	??_Decodify_Command
  6429  03C2  0848               	movf	??_Decodify_Command,w
  6430  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  6431  03C4  00DE               	movwf	_segundo^(0+128)	;volatile
  6432  03C5  2919               	goto	L6
  6433  03C6                     l5847:	
  6434                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  6435                           
  6436                           
  6437                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6438  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6439  03C7  0865               	movf	(_usart_protocol^(0+128)+6),w
  6440  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  6441  03C9  00C8               	movwf	??_Decodify_Command
  6442  03CA  01C9               	clrf	??_Decodify_Command+1
  6443  03CB  0848               	movf	??_Decodify_Command,w
  6444  03CC  00B3               	movwf	PROCULUS_Show_Screen@screen
  6445  03CD  0849               	movf	??_Decodify_Command+1,w
  6446  03CE  00B4               	movwf	PROCULUS_Show_Screen@screen+1
  6447  03CF  160A  118A  205D  120A  118A  	fcall	_PROCULUS_Show_Screen
  6448  03D4  2919               	goto	L6
  6449  03D5                     l5853:	
  6450                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  6451                           
  6452                           
  6453                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6454  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  6455  03D6  0865               	movf	(_usart_protocol^(0+128)+6),w
  6456  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6457  03D8  00C8               	movwf	??_Decodify_Command
  6458  03D9  01C9               	clrf	??_Decodify_Command+1
  6459  03DA  0848               	movf	??_Decodify_Command,w
  6460  03DB  00C9               	movwf	??_Decodify_Command+1
  6461  03DC  01C8               	clrf	??_Decodify_Command
  6462  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  6463  03DE  0866               	movf	(_usart_protocol^(0+128)+7),w
  6464  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  6465  03E0  0748               	addwf	??_Decodify_Command,w
  6466  03E1  00B3               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6467  03E2  3000               	movlw	0
  6468  03E3  1803               	skipnc
  6469  03E4  3001               	movlw	1
  6470  03E5  0749               	addwf	??_Decodify_Command+1,w
  6471  03E6  00B4               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6472  03E7  160A  158A  253D  120A  118A  	fcall	_PROCULUS_Buzzer
  6473  03EC  2919               	goto	L6
  6474  03ED                     l5859:	
  6475                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  6476                           
  6477                           
  6478                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6479  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  6480  03EE  0865               	movf	(_usart_protocol^(0+128)+6),w
  6481  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  6482  03F0  00C8               	movwf	??_Decodify_Command
  6483  03F1  01C9               	clrf	??_Decodify_Command+1
  6484  03F2  0848               	movf	??_Decodify_Command,w
  6485  03F3  00C9               	movwf	??_Decodify_Command+1
  6486  03F4  01C8               	clrf	??_Decodify_Command
  6487  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  6488  03F6  0866               	movf	(_usart_protocol^(0+128)+7),w
  6489  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6490  03F8  0748               	addwf	??_Decodify_Command,w
  6491  03F9  00B5               	movwf	PROCULUS_VP_Write_String@vp
  6492  03FA  3000               	movlw	0
  6493  03FB  1803               	skipnc
  6494  03FC  3001               	movlw	1
  6495  03FD  0749               	addwf	??_Decodify_Command+1,w
  6496  03FE  00B6               	movwf	PROCULUS_VP_Write_String@vp+1
  6497  03FF  30E7               	movlw	(low ((_usart_protocol| 0+8)))& (0+255)
  6498  0400  00CA               	movwf	??_Decodify_Command+2
  6499  0401  084A               	movf	??_Decodify_Command+2,w
  6500  0402  00B7               	movwf	PROCULUS_VP_Write_String@text
  6501  0403  160A  158A  23ED  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6502  0408  2919               	goto	L6
  6503  0409                     l5865:	
  6504                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  6505                           
  6506                           
  6507                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  6508  0409  1683               	bsf	3,5	;RP0=1, select bank1
  6509  040A  0865               	movf	(_usart_protocol^(0+128)+6),w
  6510  040B  1D03               	btfss	3,2
  6511  040C  2C16               	goto	l5871
  6512                           
  6513                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  6514  040D  0866               	movf	(_usart_protocol^(0+128)+7),w
  6515  040E  1D03               	btfss	3,2
  6516  040F  2C13               	goto	l421
  6517                           
  6518                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  6519  0410  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0411  1007               	bcf	7,0	;volatile
  6521  0412  2919               	goto	L6
  6522  0413                     l421:	
  6523                           ;SlaveLiofilizadorVer1.c: 627:                 else
  6524                           
  6525                           
  6526                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  6527  0413  1283               	bcf	3,5	;RP0=0, select bank0
  6528  0414  1407               	bsf	7,0	;volatile
  6529  0415  2919               	goto	L6
  6530  0416                     l5871:	
  6531  0416  0365               	decf	(_usart_protocol^(0+128)+6),w
  6532  0417  1D03               	btfss	3,2
  6533  0418  2919               	goto	L6
  6534                           
  6535                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  6536  0419  0866               	movf	(_usart_protocol^(0+128)+7),w
  6537  041A  1D03               	btfss	3,2
  6538  041B  2C1F               	goto	l425
  6539                           
  6540                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  6541  041C  1283               	bcf	3,5	;RP0=0, select bank0
  6542  041D  1087               	bcf	7,1	;volatile
  6543  041E  2919               	goto	L6
  6544  041F                     l425:	
  6545                           ;SlaveLiofilizadorVer1.c: 634:                       else
  6546                           
  6547                           
  6548                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  6549  041F  1283               	bcf	3,5	;RP0=0, select bank0
  6550  0420  1487               	bsf	7,1	;volatile
  6551  0421  2919               	goto	L6
  6552  0422                     l5883:	
  6553                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  6554                           
  6555  0422  0863               	movf	(_usart_protocol^(0+128)+4),w
  6556  0423  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0424  00C8               	movwf	??_Decodify_Command
  6558  0425  01C9               	clrf	??_Decodify_Command+1
  6559                           
  6560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6561                           ; Switch size 1, requested type "simple"
  6562                           ; Number of cases is 1, Range of values is 0 to 0
  6563                           ; switch strategies available:
  6564                           ; Name         Instructions Cycles
  6565                           ; simple_byte            4     3 (average)
  6566                           ; direct_byte           11     8 (fixed)
  6567                           ; jumptable            260     6 (fixed)
  6568                           ;	Chosen strategy is simple_byte
  6569  0426  0849               	movf	??_Decodify_Command+1,w
  6570  0427  3A00               	xorlw	0	; case 0
  6571  0428  1903               	skipnz
  6572  0429  2C2B               	goto	l6029
  6573  042A  2C78               	goto	l427
  6574  042B                     l6029:	
  6575                           
  6576                           ; Switch size 1, requested type "simple"
  6577                           ; Number of cases is 25, Range of values is 2 to 43
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte           76    39 (average)
  6581                           ; direct_byte          137    11 (fixed)
  6582                           ; jumptable            263     9 (fixed)
  6583                           ;	Chosen strategy is simple_byte
  6584  042B  0848               	movf	??_Decodify_Command,w
  6585  042C  3A02               	xorlw	2	; case 2
  6586  042D  1903               	skipnz
  6587  042E  28CC               	goto	l5699
  6588  042F  3A01               	xorlw	1	; case 3
  6589  0430  1903               	skipnz
  6590  0431  28FD               	goto	l5707
  6591  0432  3A0B               	xorlw	11	; case 8
  6592  0433  1903               	skipnz
  6593  0434  290C               	goto	l5711
  6594  0435  3A01               	xorlw	1	; case 9
  6595  0436  1903               	skipnz
  6596  0437  2923               	goto	l5715
  6597  0438  3A03               	xorlw	3	; case 10
  6598  0439  1903               	skipnz
  6599  043A  293A               	goto	l5721
  6600  043B  3A01               	xorlw	1	; case 11
  6601  043C  1903               	skipnz
  6602  043D  2965               	goto	l5731
  6603  043E  3A07               	xorlw	7	; case 12
  6604  043F  1903               	skipnz
  6605  0440  2984               	goto	l5737
  6606  0441  3A01               	xorlw	1	; case 13
  6607  0442  1903               	skipnz
  6608  0443  2990               	goto	l5743
  6609  0444  3A1C               	xorlw	28	; case 17
  6610  0445  1903               	skipnz
  6611  0446  29AA               	goto	l5749
  6612  0447  3A03               	xorlw	3	; case 18
  6613  0448  1903               	skipnz
  6614  0449  29C8               	goto	l5755
  6615  044A  3A01               	xorlw	1	; case 19
  6616  044B  1903               	skipnz
  6617  044C  29EE               	goto	l5761
  6618  044D  3A07               	xorlw	7	; case 20
  6619  044E  1903               	skipnz
  6620  044F  2A19               	goto	l5767
  6621  0450  3A01               	xorlw	1	; case 21
  6622  0451  1903               	skipnz
  6623  0452  2A94               	goto	l5787
  6624  0453  3A03               	xorlw	3	; case 22
  6625  0454  1903               	skipnz
  6626  0455  2AB0               	goto	l5793
  6627  0456  3A01               	xorlw	1	; case 23
  6628  0457  1903               	skipnz
  6629  0458  2A72               	goto	l5781
  6630  0459  3A0F               	xorlw	15	; case 24
  6631  045A  1903               	skipnz
  6632  045B  2A36               	goto	l5773
  6633  045C  3A01               	xorlw	1	; case 25
  6634  045D  1903               	skipnz
  6635  045E  2AD8               	goto	l5799
  6636  045F  3A03               	xorlw	3	; case 26
  6637  0460  1903               	skipnz
  6638  0461  2867               	goto	l5683
  6639  0462  3A04               	xorlw	4	; case 30
  6640  0463  1903               	skipnz
  6641  0464  2BB2               	goto	l5841
  6642  0465  3A01               	xorlw	1	; case 31
  6643  0466  1903               	skipnz
  6644  0467  2AE9               	goto	l5805
  6645  0468  3A3F               	xorlw	63	; case 32
  6646  0469  1903               	skipnz
  6647  046A  2BC6               	goto	l5847
  6648  046B  3A01               	xorlw	1	; case 33
  6649  046C  1903               	skipnz
  6650  046D  2BD5               	goto	l5853
  6651  046E  3A05               	xorlw	5	; case 36
  6652  046F  1903               	skipnz
  6653  0470  2BED               	goto	l5859
  6654  0471  3A02               	xorlw	2	; case 38
  6655  0472  1903               	skipnz
  6656  0473  2C09               	goto	l5865
  6657  0474  3A0D               	xorlw	13	; case 43
  6658  0475  1903               	skipnz
  6659  0476  2858               	goto	l5679
  6660  0477  2C78               	goto	l427
  6661  0478                     l427:	
  6662  0478  0008               	return
  6663  0479                     __end_of_Decodify_Command:	
  6664                           
  6665                           	psect	text14
  6666  1C40                     __ptext14:	
  6667 ;; *************** function _strcpy *****************
  6668 ;; Defined at:
  6669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  to              1    wreg     PTR unsigned char 
  6672 ;;		 -> texto(16), 
  6673 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6674 ;;		 -> STR_2(1), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6677 ;;		 -> texto(16), 
  6678 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6679 ;;		 -> texto(16), 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      PTR unsigned char 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6684 ;; Tracked objects:
  6685 ;;		On entry : B00/0
  6686 ;;		On exit  : B00/800
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6689 ;;      Params:         0       1       0       0       0
  6690 ;;      Locals:         0       2       0       0       0
  6691 ;;      Temps:          0       1       0       0       0
  6692 ;;      Totals:         0       4       0       0       0
  6693 ;;Total ram usage:        4 bytes
  6694 ;; Hardware stack levels used:    2
  6695 ;; Hardware stack levels required when called:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_Decodify_Command
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _strcpy
  6705  1C40                     _strcpy:	
  6706                           
  6707                           ;incstack = 0
  6708                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6709                           ;strcpy@to stored from wreg
  6710  1C40  00A2               	movwf	strcpy@to
  6711  1C41  0822               	movf	strcpy@to,w
  6712  1C42  00A1               	movwf	??_strcpy
  6713  1C43  0821               	movf	??_strcpy,w
  6714  1C44  00A3               	movwf	strcpy@cp
  6715  1C45                     l4605:	
  6716  1C45  0820               	movf	strcpy@from,w
  6717  1C46  0084               	movwf	4
  6718  1C47  160A  118A  200A  160A  158A  	fcall	stringdir
  6719  1C4C  00A1               	movwf	??_strcpy
  6720  1C4D  0823               	movf	strcpy@cp,w
  6721  1C4E  0084               	movwf	4
  6722  1C4F  0821               	movf	??_strcpy,w
  6723  1C50  1783               	bsf	3,7	;select IRP bank2
  6724  1C51  0080               	movwf	0
  6725  1C52  0800               	movf	0,w
  6726  1C53  1903               	btfsc	3,2
  6727  1C54  0008               	return
  6728  1C55  3001               	movlw	1
  6729  1C56  00A1               	movwf	??_strcpy
  6730  1C57  0821               	movf	??_strcpy,w
  6731  1C58  07A3               	addwf	strcpy@cp,f
  6732  1C59  3001               	movlw	1
  6733  1C5A  00A1               	movwf	??_strcpy
  6734  1C5B  0821               	movf	??_strcpy,w
  6735  1C5C  07A0               	addwf	strcpy@from,f
  6736  1C5D  2C45               	goto	l4605
  6737  1C5E                     __end_of_strcpy:	
  6738                           
  6739                           	psect	text15
  6740  0804                     __ptext15:	
  6741 ;; *************** function _strcat *****************
  6742 ;; Defined at:
  6743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  to              1    wreg     PTR unsigned char 
  6746 ;;		 -> texto(16), 
  6747 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  6748 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6749 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  to              1    4[BANK0 ] PTR unsigned char 
  6752 ;;		 -> texto(16), 
  6753 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6754 ;;		 -> texto(16), 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      PTR unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6759 ;; Tracked objects:
  6760 ;;		On entry : B00/800
  6761 ;;		On exit  : B00/800
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6764 ;;      Params:         0       2       0       0       0
  6765 ;;      Locals:         0       2       0       0       0
  6766 ;;      Temps:          0       1       0       0       0
  6767 ;;      Totals:         0       5       0       0       0
  6768 ;;Total ram usage:        5 bytes
  6769 ;; Hardware stack levels used:    2
  6770 ;; Hardware stack levels required when called:    1
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_Decodify_Command
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _strcat
  6780  0804                     _strcat:	
  6781                           
  6782                           ;incstack = 0
  6783                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6784                           ;strcat@to stored from wreg
  6785  0804  00A4               	movwf	strcat@to
  6786  0805  0824               	movf	strcat@to,w
  6787  0806  00A2               	movwf	??_strcat
  6788  0807  0822               	movf	??_strcat,w
  6789  0808  00A3               	movwf	strcat@cp
  6790  0809                     l4611:	
  6791  0809  0823               	movf	strcat@cp,w
  6792  080A  0084               	movwf	4
  6793  080B  0800               	movf	0,w
  6794  080C  1903               	btfsc	3,2
  6795  080D  281D               	goto	l4617
  6796  080E  3001               	movlw	1
  6797  080F  00A2               	movwf	??_strcat
  6798  0810  0822               	movf	??_strcat,w
  6799  0811  07A3               	addwf	strcat@cp,f
  6800  0812  2809               	goto	l4611
  6801  0813                     l4613:	
  6802  0813  3001               	movlw	1
  6803  0814  00A2               	movwf	??_strcat
  6804  0815  0822               	movf	??_strcat,w
  6805  0816  07A3               	addwf	strcat@cp,f
  6806  0817  3001               	movlw	1
  6807  0818  07A0               	addwf	strcat@from,f
  6808  0819  1803               	skipnc
  6809  081A  0AA1               	incf	strcat@from+1,f
  6810  081B  3000               	movlw	0
  6811  081C  07A1               	addwf	strcat@from+1,f
  6812  081D                     l4617:	
  6813  081D  0821               	movf	strcat@from+1,w
  6814  081E  00FF               	movwf	127
  6815  081F  0820               	movf	strcat@from,w
  6816  0820  0084               	movwf	4
  6817  0821  160A  118A  2000  120A  158A  	fcall	stringtab
  6818  0826  00A2               	movwf	??_strcat
  6819  0827  0823               	movf	strcat@cp,w
  6820  0828  0084               	movwf	4
  6821  0829  0822               	movf	??_strcat,w
  6822  082A  1783               	bsf	3,7	;select IRP bank2
  6823  082B  0080               	movwf	0
  6824  082C  0800               	movf	0,w
  6825  082D  1903               	btfsc	3,2
  6826  082E  0008               	return
  6827  082F  2813               	goto	l4613
  6828  0830                     __end_of_strcat:	
  6829                           
  6830                           	psect	text16
  6831  1CBA                     __ptext16:	
  6832 ;; *************** function _itoa *****************
  6833 ;; Defined at:
  6834 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  buf             1    wreg     PTR unsigned char 
  6837 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6838 ;;  val             2   17[BANK0 ] int 
  6839 ;;  base            2   19[BANK0 ] int 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  6842 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6843 ;;  cp              1    0        PTR unsigned char 
  6844 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      PTR unsigned char 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 300/0
  6851 ;;		On exit  : B00/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6854 ;;      Params:         0       4       0       0       0
  6855 ;;      Locals:         0       2       0       0       0
  6856 ;;      Temps:          0       1       0       0       0
  6857 ;;      Totals:         0       7       0       0       0
  6858 ;;Total ram usage:        7 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    3
  6861 ;; This function calls:
  6862 ;;		_utoa
  6863 ;; This function is called by:
  6864 ;;		_Decodify_Command
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           
  6869                           ;psect for function _itoa
  6870  1CBA                     _itoa:	
  6871                           
  6872                           ;incstack = 0
  6873                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6874                           ;itoa@buf stored from wreg
  6875  1CBA  00B7               	movwf	itoa@buf
  6876  1CBB  1FB2               	btfss	itoa@val+1,7
  6877  1CBC  2CCD               	goto	l4597
  6878  1CBD  302D               	movlw	45
  6879  1CBE  00B5               	movwf	??_itoa
  6880  1CBF  0837               	movf	itoa@buf,w
  6881  1CC0  0084               	movwf	4
  6882  1CC1  0835               	movf	??_itoa,w
  6883  1CC2  1383               	bcf	3,7	;select IRP bank0
  6884  1CC3  0080               	movwf	0
  6885  1CC4  3001               	movlw	1
  6886  1CC5  00B5               	movwf	??_itoa
  6887  1CC6  0835               	movf	??_itoa,w
  6888  1CC7  07B7               	addwf	itoa@buf,f
  6889  1CC8  09B1               	comf	itoa@val,f
  6890  1CC9  09B2               	comf	itoa@val+1,f
  6891  1CCA  0AB1               	incf	itoa@val,f
  6892  1CCB  1903               	skipnz
  6893  1CCC  0AB2               	incf	itoa@val+1,f
  6894  1CCD                     l4597:	
  6895  1CCD  0832               	movf	itoa@val+1,w
  6896  1CCE  00A9               	movwf	utoa@val+1
  6897  1CCF  0831               	movf	itoa@val,w
  6898  1CD0  00A8               	movwf	utoa@val
  6899  1CD1  0834               	movf	itoa@base+1,w
  6900  1CD2  00AB               	movwf	utoa@base+1
  6901  1CD3  0833               	movf	itoa@base,w
  6902  1CD4  00AA               	movwf	utoa@base
  6903  1CD5  0837               	movf	itoa@buf,w
  6904  1CD6  160A  118A  22D3   	fcall	_utoa
  6905  1CD9  0008               	return
  6906  1CDA                     __end_of_itoa:	
  6907                           
  6908                           	psect	text17
  6909  12D3                     __ptext17:	
  6910 ;; *************** function _utoa *****************
  6911 ;; Defined at:
  6912 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  buf             1    wreg     PTR unsigned char 
  6915 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6916 ;;  val             2    8[BANK0 ] unsigned int 
  6917 ;;  base            2   10[BANK0 ] int 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  6920 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6921 ;;  v               2   13[BANK0 ] unsigned int 
  6922 ;;  c               1   15[BANK0 ] unsigned char 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      PTR unsigned char 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 300/0
  6929 ;;		On exit  : B00/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6932 ;;      Params:         0       4       0       0       0
  6933 ;;      Locals:         0       4       0       0       0
  6934 ;;      Temps:          0       1       0       0       0
  6935 ;;      Totals:         0       9       0       0       0
  6936 ;;Total ram usage:        9 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    2
  6939 ;; This function calls:
  6940 ;;		___lwdiv
  6941 ;;		___lwmod
  6942 ;; This function is called by:
  6943 ;;		_itoa
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function _utoa
  6949  12D3                     _utoa:	
  6950                           
  6951                           ;incstack = 0
  6952                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6953                           ;utoa@buf stored from wreg
  6954  12D3  00B0               	movwf	utoa@buf
  6955  12D4  0829               	movf	utoa@val+1,w
  6956  12D5  00AE               	movwf	utoa@v+1
  6957  12D6  0828               	movf	utoa@val,w
  6958  12D7  00AD               	movwf	utoa@v
  6959  12D8                     l4259:	
  6960  12D8  082B               	movf	utoa@base+1,w
  6961  12D9  00A1               	movwf	___lwdiv@divisor+1
  6962  12DA  082A               	movf	utoa@base,w
  6963  12DB  00A0               	movwf	___lwdiv@divisor
  6964  12DC  082E               	movf	utoa@v+1,w
  6965  12DD  00A3               	movwf	___lwdiv@dividend+1
  6966  12DE  082D               	movf	utoa@v,w
  6967  12DF  00A2               	movwf	___lwdiv@dividend
  6968  12E0  160A  118A  2072  160A  118A  	fcall	___lwdiv
  6969  12E5  0821               	movf	?___lwdiv+1,w
  6970  12E6  00AE               	movwf	utoa@v+1
  6971  12E7  0820               	movf	?___lwdiv,w
  6972  12E8  00AD               	movwf	utoa@v
  6973  12E9  3001               	movlw	1
  6974  12EA  00AC               	movwf	??_utoa
  6975  12EB  082C               	movf	??_utoa,w
  6976  12EC  07B0               	addwf	utoa@buf,f
  6977  12ED  082D               	movf	utoa@v,w
  6978  12EE  042E               	iorwf	utoa@v+1,w
  6979  12EF  1D03               	btfss	3,2
  6980  12F0  2AD8               	goto	l4259
  6981  12F1  0830               	movf	utoa@buf,w
  6982  12F2  0084               	movwf	4
  6983  12F3  1383               	bcf	3,7	;select IRP bank0
  6984  12F4  0180               	clrf	0
  6985  12F5  3001               	movlw	1
  6986  12F6  02B0               	subwf	utoa@buf,f
  6987  12F7                     l4269:	
  6988  12F7  082B               	movf	utoa@base+1,w
  6989  12F8  00A1               	movwf	___lwmod@divisor+1
  6990  12F9  082A               	movf	utoa@base,w
  6991  12FA  00A0               	movwf	___lwmod@divisor
  6992  12FB  0829               	movf	utoa@val+1,w
  6993  12FC  00A3               	movwf	___lwmod@dividend+1
  6994  12FD  0828               	movf	utoa@val,w
  6995  12FE  00A2               	movwf	___lwmod@dividend
  6996  12FF  160A  158A  2684  160A  118A  	fcall	___lwmod
  6997  1304  0820               	movf	?___lwmod,w
  6998  1305  00AC               	movwf	??_utoa
  6999  1306  082C               	movf	??_utoa,w
  7000  1307  00AF               	movwf	utoa@c
  7001  1308  082B               	movf	utoa@base+1,w
  7002  1309  00A1               	movwf	___lwdiv@divisor+1
  7003  130A  082A               	movf	utoa@base,w
  7004  130B  00A0               	movwf	___lwdiv@divisor
  7005  130C  0829               	movf	utoa@val+1,w
  7006  130D  00A3               	movwf	___lwdiv@dividend+1
  7007  130E  0828               	movf	utoa@val,w
  7008  130F  00A2               	movwf	___lwdiv@dividend
  7009  1310  160A  118A  2072  160A  118A  	fcall	___lwdiv
  7010  1315  0821               	movf	?___lwdiv+1,w
  7011  1316  00A9               	movwf	utoa@val+1
  7012  1317  0820               	movf	?___lwdiv,w
  7013  1318  00A8               	movwf	utoa@val
  7014  1319  300A               	movlw	10
  7015  131A  022F               	subwf	utoa@c,w
  7016  131B  1C03               	skipc
  7017  131C  2B21               	goto	l1438
  7018  131D  3007               	movlw	7
  7019  131E  00AC               	movwf	??_utoa
  7020  131F  082C               	movf	??_utoa,w
  7021  1320  07AF               	addwf	utoa@c,f
  7022  1321                     l1438:	
  7023  1321  3030               	movlw	48
  7024  1322  00AC               	movwf	??_utoa
  7025  1323  082C               	movf	??_utoa,w
  7026  1324  07AF               	addwf	utoa@c,f
  7027  1325  082F               	movf	utoa@c,w
  7028  1326  00AC               	movwf	??_utoa
  7029  1327  0830               	movf	utoa@buf,w
  7030  1328  0084               	movwf	4
  7031  1329  082C               	movf	??_utoa,w
  7032  132A  1383               	bcf	3,7	;select IRP bank0
  7033  132B  0080               	movwf	0
  7034  132C  3001               	movlw	1
  7035  132D  02B0               	subwf	utoa@buf,f
  7036  132E  0828               	movf	utoa@val,w
  7037  132F  0429               	iorwf	utoa@val+1,w
  7038  1330  1D03               	btfss	3,2
  7039  1331  2AF7               	goto	l4269
  7040                           
  7041                           ;	Return value of _utoa is never used
  7042  1332  3001               	movlw	1
  7043  1333  00AC               	movwf	??_utoa
  7044  1334  082C               	movf	??_utoa,w
  7045  1335  07B0               	addwf	utoa@buf,f
  7046  1336  0008               	return
  7047  1337                     __end_of_utoa:	
  7048                           
  7049                           	psect	text18
  7050  1E84                     __ptext18:	
  7051 ;; *************** function ___lwmod *****************
  7052 ;; Defined at:
  7053 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  divisor         2    0[BANK0 ] unsigned int 
  7056 ;;  dividend        2    2[BANK0 ] unsigned int 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  counter         1    5[BANK0 ] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  2    0[BANK0 ] unsigned int 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 300/0
  7065 ;;		On exit  : 300/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7068 ;;      Params:         0       4       0       0       0
  7069 ;;      Locals:         0       1       0       0       0
  7070 ;;      Temps:          0       1       0       0       0
  7071 ;;      Totals:         0       6       0       0       0
  7072 ;;Total ram usage:        6 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_utoa
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function ___lwmod
  7084  1E84                     ___lwmod:	
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7088  1E84  0820               	movf	___lwmod@divisor,w
  7089  1E85  0421               	iorwf	___lwmod@divisor+1,w
  7090  1E86  1903               	btfsc	3,2
  7091  1E87  2EB1               	goto	l3751
  7092  1E88  01A5               	clrf	___lwmod@counter
  7093  1E89  0AA5               	incf	___lwmod@counter,f
  7094  1E8A                     l3741:	
  7095  1E8A  1BA1               	btfsc	___lwmod@divisor+1,7
  7096  1E8B  2E98               	goto	l3743
  7097  1E8C  3001               	movlw	1
  7098  1E8D                     u2915:	
  7099  1E8D  1003               	clrc
  7100  1E8E  0DA0               	rlf	___lwmod@divisor,f
  7101  1E8F  0DA1               	rlf	___lwmod@divisor+1,f
  7102  1E90  3EFF               	addlw	-1
  7103  1E91  1D03               	skipz
  7104  1E92  2E8D               	goto	u2915
  7105  1E93  3001               	movlw	1
  7106  1E94  00A4               	movwf	??___lwmod
  7107  1E95  0824               	movf	??___lwmod,w
  7108  1E96  07A5               	addwf	___lwmod@counter,f
  7109  1E97  2E8A               	goto	l3741
  7110  1E98                     l3743:	
  7111  1E98  0821               	movf	___lwmod@divisor+1,w
  7112  1E99  0223               	subwf	___lwmod@dividend+1,w
  7113  1E9A  1D03               	skipz
  7114  1E9B  2E9E               	goto	u2935
  7115  1E9C  0820               	movf	___lwmod@divisor,w
  7116  1E9D  0222               	subwf	___lwmod@dividend,w
  7117  1E9E                     u2935:	
  7118  1E9E  1C03               	skipc
  7119  1E9F  2EA6               	goto	l3747
  7120  1EA0  0820               	movf	___lwmod@divisor,w
  7121  1EA1  02A2               	subwf	___lwmod@dividend,f
  7122  1EA2  0821               	movf	___lwmod@divisor+1,w
  7123  1EA3  1C03               	skipc
  7124  1EA4  03A3               	decf	___lwmod@dividend+1,f
  7125  1EA5  02A3               	subwf	___lwmod@dividend+1,f
  7126  1EA6                     l3747:	
  7127  1EA6  3001               	movlw	1
  7128  1EA7                     u2945:	
  7129  1EA7  1003               	clrc
  7130  1EA8  0CA1               	rrf	___lwmod@divisor+1,f
  7131  1EA9  0CA0               	rrf	___lwmod@divisor,f
  7132  1EAA  3EFF               	addlw	-1
  7133  1EAB  1D03               	skipz
  7134  1EAC  2EA7               	goto	u2945
  7135  1EAD  3001               	movlw	1
  7136  1EAE  02A5               	subwf	___lwmod@counter,f
  7137  1EAF  1D03               	btfss	3,2
  7138  1EB0  2E98               	goto	l3743
  7139  1EB1                     l3751:	
  7140  1EB1  0823               	movf	___lwmod@dividend+1,w
  7141  1EB2  00A1               	movwf	?___lwmod+1
  7142  1EB3  0822               	movf	___lwmod@dividend,w
  7143  1EB4  00A0               	movwf	?___lwmod
  7144  1EB5  0008               	return
  7145  1EB6                     __end_of___lwmod:	
  7146                           
  7147                           	psect	text19
  7148  0479                     __ptext19:	
  7149 ;; *************** function ___flmul *****************
  7150 ;; Defined at:
  7151 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  b               4    9[BANK0 ] unsigned int 
  7154 ;;  a               4   13[BANK0 ] unsigned int 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  prod            4   29[BANK0 ] struct .
  7157 ;;  grs             4   24[BANK0 ] unsigned long 
  7158 ;;  temp            2   33[BANK0 ] struct .
  7159 ;;  bexp            1   28[BANK0 ] unsigned char 
  7160 ;;  aexp            1   23[BANK0 ] unsigned char 
  7161 ;;  sign            1   22[BANK0 ] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  4    9[BANK0 ] unsigned char 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 300/0
  7168 ;;		On exit  : 300/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7171 ;;      Params:         0       8       0       0       0
  7172 ;;      Locals:         0      13       0       0       0
  7173 ;;      Temps:          0       5       0       0       0
  7174 ;;      Totals:         0      26       0       0       0
  7175 ;;Total ram usage:       26 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    2
  7178 ;; This function calls:
  7179 ;;		__Umul8_16
  7180 ;; This function is called by:
  7181 ;;		_Decodify_Command
  7182 ;;		_mediaLeituraPt100Umidadde
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function ___flmul
  7188  0479                     ___flmul:	
  7189                           
  7190                           ;incstack = 0
  7191                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7192  0479  082C               	movf	___flmul@b+3,w
  7193  047A  3980               	andlw	128
  7194  047B  00B1               	movwf	??___flmul
  7195  047C  0831               	movf	??___flmul,w
  7196  047D  00B6               	movwf	___flmul@sign
  7197  047E  082C               	movf	___flmul@b+3,w
  7198  047F  00B1               	movwf	??___flmul
  7199  0480  0731               	addwf	??___flmul,w
  7200  0481  00B2               	movwf	??___flmul+1
  7201  0482  0832               	movf	??___flmul+1,w
  7202  0483  00BC               	movwf	___flmul@bexp
  7203  0484  1BAB               	btfsc	___flmul@b+2,7
  7204  0485  143C               	bsf	___flmul@bexp,0
  7205  0486  083C               	movf	___flmul@bexp,w
  7206  0487  1903               	btfsc	3,2
  7207  0488  2C96               	goto	l4859
  7208  0489  0A3C               	incf	___flmul@bexp,w
  7209  048A  1D03               	btfss	3,2
  7210  048B  2C94               	goto	l4857
  7211  048C  3000               	movlw	0
  7212  048D  00AC               	movwf	___flmul@b+3
  7213  048E  3000               	movlw	0
  7214  048F  00AB               	movwf	___flmul@b+2
  7215  0490  3000               	movlw	0
  7216  0491  00AA               	movwf	___flmul@b+1
  7217  0492  3000               	movlw	0
  7218  0493  00A9               	movwf	___flmul@b
  7219  0494                     l4857:	
  7220  0494  17AB               	bsf	___flmul@b+2,7
  7221  0495  2C9E               	goto	l4861
  7222  0496                     l4859:	
  7223  0496  3000               	movlw	0
  7224  0497  00AC               	movwf	___flmul@b+3
  7225  0498  3000               	movlw	0
  7226  0499  00AB               	movwf	___flmul@b+2
  7227  049A  3000               	movlw	0
  7228  049B  00AA               	movwf	___flmul@b+1
  7229  049C  3000               	movlw	0
  7230  049D  00A9               	movwf	___flmul@b
  7231  049E                     l4861:	
  7232  049E  0830               	movf	___flmul@a+3,w
  7233  049F  3980               	andlw	128
  7234  04A0  00B1               	movwf	??___flmul
  7235  04A1  0831               	movf	??___flmul,w
  7236  04A2  06B6               	xorwf	___flmul@sign,f
  7237  04A3  0830               	movf	___flmul@a+3,w
  7238  04A4  00B1               	movwf	??___flmul
  7239  04A5  0731               	addwf	??___flmul,w
  7240  04A6  00B2               	movwf	??___flmul+1
  7241  04A7  0832               	movf	??___flmul+1,w
  7242  04A8  00B7               	movwf	___flmul@aexp
  7243  04A9  1BAF               	btfsc	___flmul@a+2,7
  7244  04AA  1437               	bsf	___flmul@aexp,0
  7245  04AB  0837               	movf	___flmul@aexp,w
  7246  04AC  1903               	btfsc	3,2
  7247  04AD  2CBB               	goto	l4877
  7248  04AE  0A37               	incf	___flmul@aexp,w
  7249  04AF  1D03               	btfss	3,2
  7250  04B0  2CB9               	goto	l4875
  7251  04B1  3000               	movlw	0
  7252  04B2  00B0               	movwf	___flmul@a+3
  7253  04B3  3000               	movlw	0
  7254  04B4  00AF               	movwf	___flmul@a+2
  7255  04B5  3000               	movlw	0
  7256  04B6  00AE               	movwf	___flmul@a+1
  7257  04B7  3000               	movlw	0
  7258  04B8  00AD               	movwf	___flmul@a
  7259  04B9                     l4875:	
  7260  04B9  17AF               	bsf	___flmul@a+2,7
  7261  04BA  2CC3               	goto	l4879
  7262  04BB                     l4877:	
  7263  04BB  3000               	movlw	0
  7264  04BC  00B0               	movwf	___flmul@a+3
  7265  04BD  3000               	movlw	0
  7266  04BE  00AF               	movwf	___flmul@a+2
  7267  04BF  3000               	movlw	0
  7268  04C0  00AE               	movwf	___flmul@a+1
  7269  04C1  3000               	movlw	0
  7270  04C2  00AD               	movwf	___flmul@a
  7271  04C3                     l4879:	
  7272  04C3  0837               	movf	___flmul@aexp,w
  7273  04C4  1D03               	btfss	3,2
  7274  04C5  083C               	movf	___flmul@bexp,w
  7275  04C6  1D03               	btfss	3,2
  7276  04C7  2CD1               	goto	l4887
  7277  04C8  3000               	movlw	0
  7278  04C9  00AC               	movwf	?___flmul+3
  7279  04CA  3000               	movlw	0
  7280  04CB  00AB               	movwf	?___flmul+2
  7281  04CC  3000               	movlw	0
  7282  04CD  00AA               	movwf	?___flmul+1
  7283  04CE  3000               	movlw	0
  7284  04CF  00A9               	movwf	?___flmul
  7285  04D0  0008               	return
  7286  04D1                     l4887:	
  7287  04D1  0829               	movf	___flmul@b,w
  7288  04D2  00B1               	movwf	??___flmul
  7289  04D3  0831               	movf	??___flmul,w
  7290  04D4  00A0               	movwf	__Umul8_16@multiplicand
  7291  04D5  082F               	movf	___flmul@a+2,w
  7292  04D6  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7293  04DB  0821               	movf	?__Umul8_16+1,w
  7294  04DC  00C2               	movwf	___flmul@temp+1
  7295  04DD  0820               	movf	?__Umul8_16,w
  7296  04DE  00C1               	movwf	___flmul@temp
  7297  04DF  0841               	movf	___flmul@temp,w
  7298  04E0  00B1               	movwf	??___flmul
  7299  04E1  01B2               	clrf	??___flmul+1
  7300  04E2  01B3               	clrf	??___flmul+2
  7301  04E3  01B4               	clrf	??___flmul+3
  7302  04E4  0834               	movf	??___flmul+3,w
  7303  04E5  00BB               	movwf	___flmul@grs+3
  7304  04E6  0833               	movf	??___flmul+2,w
  7305  04E7  00BA               	movwf	___flmul@grs+2
  7306  04E8  0832               	movf	??___flmul+1,w
  7307  04E9  00B9               	movwf	___flmul@grs+1
  7308  04EA  0831               	movf	??___flmul,w
  7309  04EB  00B8               	movwf	___flmul@grs
  7310  04EC  0842               	movf	___flmul@temp+1,w
  7311  04ED  00B1               	movwf	??___flmul
  7312  04EE  01B2               	clrf	??___flmul+1
  7313  04EF  01B3               	clrf	??___flmul+2
  7314  04F0  01B4               	clrf	??___flmul+3
  7315  04F1  0834               	movf	??___flmul+3,w
  7316  04F2  00C0               	movwf	___flmul@prod+3
  7317  04F3  0833               	movf	??___flmul+2,w
  7318  04F4  00BF               	movwf	___flmul@prod+2
  7319  04F5  0832               	movf	??___flmul+1,w
  7320  04F6  00BE               	movwf	___flmul@prod+1
  7321  04F7  0831               	movf	??___flmul,w
  7322  04F8  00BD               	movwf	___flmul@prod
  7323  04F9  082A               	movf	___flmul@b+1,w
  7324  04FA  00B1               	movwf	??___flmul
  7325  04FB  0831               	movf	??___flmul,w
  7326  04FC  00A0               	movwf	__Umul8_16@multiplicand
  7327  04FD  082E               	movf	___flmul@a+1,w
  7328  04FE  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7329  0503  0821               	movf	?__Umul8_16+1,w
  7330  0504  00C2               	movwf	___flmul@temp+1
  7331  0505  0820               	movf	?__Umul8_16,w
  7332  0506  00C1               	movwf	___flmul@temp
  7333  0507  0841               	movf	___flmul@temp,w
  7334  0508  00B1               	movwf	??___flmul
  7335  0509  01B2               	clrf	??___flmul+1
  7336  050A  01B3               	clrf	??___flmul+2
  7337  050B  01B4               	clrf	??___flmul+3
  7338  050C  0831               	movf	??___flmul,w
  7339  050D  07B8               	addwf	___flmul@grs,f
  7340  050E  0832               	movf	??___flmul+1,w
  7341  050F  1103               	clrz
  7342  0510  1803               	skipnc
  7343  0511  3E01               	addlw	1
  7344  0512  1D03               	btfss	3,2
  7345  0513  07B9               	addwf	___flmul@grs+1,f
  7346  0514  0833               	movf	??___flmul+2,w
  7347  0515  1103               	clrz
  7348  0516  1803               	skipnc
  7349  0517  3E01               	addlw	1
  7350  0518  1D03               	btfss	3,2
  7351  0519  07BA               	addwf	___flmul@grs+2,f
  7352  051A  0834               	movf	??___flmul+3,w
  7353  051B  1103               	clrz
  7354  051C  1803               	skipnc
  7355  051D  3E01               	addlw	1
  7356  051E  1D03               	btfss	3,2
  7357  051F  07BB               	addwf	___flmul@grs+3,f
  7358  0520  0842               	movf	___flmul@temp+1,w
  7359  0521  00B1               	movwf	??___flmul
  7360  0522  01B2               	clrf	??___flmul+1
  7361  0523  01B3               	clrf	??___flmul+2
  7362  0524  01B4               	clrf	??___flmul+3
  7363  0525  0831               	movf	??___flmul,w
  7364  0526  07BD               	addwf	___flmul@prod,f
  7365  0527  0832               	movf	??___flmul+1,w
  7366  0528  1103               	clrz
  7367  0529  1803               	skipnc
  7368  052A  3E01               	addlw	1
  7369  052B  1D03               	btfss	3,2
  7370  052C  07BE               	addwf	___flmul@prod+1,f
  7371  052D  0833               	movf	??___flmul+2,w
  7372  052E  1103               	clrz
  7373  052F  1803               	skipnc
  7374  0530  3E01               	addlw	1
  7375  0531  1D03               	btfss	3,2
  7376  0532  07BF               	addwf	___flmul@prod+2,f
  7377  0533  0834               	movf	??___flmul+3,w
  7378  0534  1103               	clrz
  7379  0535  1803               	skipnc
  7380  0536  3E01               	addlw	1
  7381  0537  1D03               	btfss	3,2
  7382  0538  07C0               	addwf	___flmul@prod+3,f
  7383  0539  082B               	movf	___flmul@b+2,w
  7384  053A  00B1               	movwf	??___flmul
  7385  053B  0831               	movf	??___flmul,w
  7386  053C  00A0               	movwf	__Umul8_16@multiplicand
  7387  053D  082D               	movf	___flmul@a,w
  7388  053E  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7389  0543  0821               	movf	?__Umul8_16+1,w
  7390  0544  00C2               	movwf	___flmul@temp+1
  7391  0545  0820               	movf	?__Umul8_16,w
  7392  0546  00C1               	movwf	___flmul@temp
  7393  0547  0841               	movf	___flmul@temp,w
  7394  0548  00B1               	movwf	??___flmul
  7395  0549  01B2               	clrf	??___flmul+1
  7396  054A  01B3               	clrf	??___flmul+2
  7397  054B  01B4               	clrf	??___flmul+3
  7398  054C  0831               	movf	??___flmul,w
  7399  054D  07B8               	addwf	___flmul@grs,f
  7400  054E  0832               	movf	??___flmul+1,w
  7401  054F  1103               	clrz
  7402  0550  1803               	skipnc
  7403  0551  3E01               	addlw	1
  7404  0552  1D03               	btfss	3,2
  7405  0553  07B9               	addwf	___flmul@grs+1,f
  7406  0554  0833               	movf	??___flmul+2,w
  7407  0555  1103               	clrz
  7408  0556  1803               	skipnc
  7409  0557  3E01               	addlw	1
  7410  0558  1D03               	btfss	3,2
  7411  0559  07BA               	addwf	___flmul@grs+2,f
  7412  055A  0834               	movf	??___flmul+3,w
  7413  055B  1103               	clrz
  7414  055C  1803               	skipnc
  7415  055D  3E01               	addlw	1
  7416  055E  1D03               	btfss	3,2
  7417  055F  07BB               	addwf	___flmul@grs+3,f
  7418  0560  0842               	movf	___flmul@temp+1,w
  7419  0561  00B1               	movwf	??___flmul
  7420  0562  01B2               	clrf	??___flmul+1
  7421  0563  01B3               	clrf	??___flmul+2
  7422  0564  01B4               	clrf	??___flmul+3
  7423  0565  0831               	movf	??___flmul,w
  7424  0566  07BD               	addwf	___flmul@prod,f
  7425  0567  0832               	movf	??___flmul+1,w
  7426  0568  1103               	clrz
  7427  0569  1803               	skipnc
  7428  056A  3E01               	addlw	1
  7429  056B  1D03               	btfss	3,2
  7430  056C  07BE               	addwf	___flmul@prod+1,f
  7431  056D  0833               	movf	??___flmul+2,w
  7432  056E  1103               	clrz
  7433  056F  1803               	skipnc
  7434  0570  3E01               	addlw	1
  7435  0571  1D03               	btfss	3,2
  7436  0572  07BF               	addwf	___flmul@prod+2,f
  7437  0573  0834               	movf	??___flmul+3,w
  7438  0574  1103               	clrz
  7439  0575  1803               	skipnc
  7440  0576  3E01               	addlw	1
  7441  0577  1D03               	btfss	3,2
  7442  0578  07C0               	addwf	___flmul@prod+3,f
  7443  0579  3008               	movlw	8
  7444  057A  00B1               	movwf	??___flmul
  7445  057B                     u4685:	
  7446  057B  1003               	clrc
  7447  057C  0DB8               	rlf	___flmul@grs,f
  7448  057D  0DB9               	rlf	___flmul@grs+1,f
  7449  057E  0DBA               	rlf	___flmul@grs+2,f
  7450  057F  0DBB               	rlf	___flmul@grs+3,f
  7451  0580  0BB1               	decfsz	??___flmul,f
  7452  0581  2D7B               	goto	u4685
  7453  0582  082A               	movf	___flmul@b+1,w
  7454  0583  00B1               	movwf	??___flmul
  7455  0584  0831               	movf	??___flmul,w
  7456  0585  00A0               	movwf	__Umul8_16@multiplicand
  7457  0586  082D               	movf	___flmul@a,w
  7458  0587  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7459  058C  0821               	movf	?__Umul8_16+1,w
  7460  058D  00C2               	movwf	___flmul@temp+1
  7461  058E  0820               	movf	?__Umul8_16,w
  7462  058F  00C1               	movwf	___flmul@temp
  7463  0590  0841               	movf	___flmul@temp,w
  7464  0591  00B1               	movwf	??___flmul
  7465  0592  0842               	movf	___flmul@temp+1,w
  7466  0593  00B2               	movwf	??___flmul+1
  7467  0594  01B3               	clrf	??___flmul+2
  7468  0595  01B4               	clrf	??___flmul+3
  7469  0596  0831               	movf	??___flmul,w
  7470  0597  07B8               	addwf	___flmul@grs,f
  7471  0598  0832               	movf	??___flmul+1,w
  7472  0599  1103               	clrz
  7473  059A  1803               	skipnc
  7474  059B  3E01               	addlw	1
  7475  059C  1D03               	btfss	3,2
  7476  059D  07B9               	addwf	___flmul@grs+1,f
  7477  059E  0833               	movf	??___flmul+2,w
  7478  059F  1103               	clrz
  7479  05A0  1803               	skipnc
  7480  05A1  3E01               	addlw	1
  7481  05A2  1D03               	btfss	3,2
  7482  05A3  07BA               	addwf	___flmul@grs+2,f
  7483  05A4  0834               	movf	??___flmul+3,w
  7484  05A5  1103               	clrz
  7485  05A6  1803               	skipnc
  7486  05A7  3E01               	addlw	1
  7487  05A8  1D03               	btfss	3,2
  7488  05A9  07BB               	addwf	___flmul@grs+3,f
  7489  05AA  0829               	movf	___flmul@b,w
  7490  05AB  00B1               	movwf	??___flmul
  7491  05AC  0831               	movf	??___flmul,w
  7492  05AD  00A0               	movwf	__Umul8_16@multiplicand
  7493  05AE  082E               	movf	___flmul@a+1,w
  7494  05AF  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7495  05B4  0821               	movf	?__Umul8_16+1,w
  7496  05B5  00C2               	movwf	___flmul@temp+1
  7497  05B6  0820               	movf	?__Umul8_16,w
  7498  05B7  00C1               	movwf	___flmul@temp
  7499  05B8  0841               	movf	___flmul@temp,w
  7500  05B9  00B1               	movwf	??___flmul
  7501  05BA  0842               	movf	___flmul@temp+1,w
  7502  05BB  00B2               	movwf	??___flmul+1
  7503  05BC  01B3               	clrf	??___flmul+2
  7504  05BD  01B4               	clrf	??___flmul+3
  7505  05BE  0831               	movf	??___flmul,w
  7506  05BF  07B8               	addwf	___flmul@grs,f
  7507  05C0  0832               	movf	??___flmul+1,w
  7508  05C1  1103               	clrz
  7509  05C2  1803               	skipnc
  7510  05C3  3E01               	addlw	1
  7511  05C4  1D03               	btfss	3,2
  7512  05C5  07B9               	addwf	___flmul@grs+1,f
  7513  05C6  0833               	movf	??___flmul+2,w
  7514  05C7  1103               	clrz
  7515  05C8  1803               	skipnc
  7516  05C9  3E01               	addlw	1
  7517  05CA  1D03               	btfss	3,2
  7518  05CB  07BA               	addwf	___flmul@grs+2,f
  7519  05CC  0834               	movf	??___flmul+3,w
  7520  05CD  1103               	clrz
  7521  05CE  1803               	skipnc
  7522  05CF  3E01               	addlw	1
  7523  05D0  1D03               	btfss	3,2
  7524  05D1  07BB               	addwf	___flmul@grs+3,f
  7525  05D2  3008               	movlw	8
  7526  05D3  00B1               	movwf	??___flmul
  7527  05D4                     u4715:	
  7528  05D4  1003               	clrc
  7529  05D5  0DB8               	rlf	___flmul@grs,f
  7530  05D6  0DB9               	rlf	___flmul@grs+1,f
  7531  05D7  0DBA               	rlf	___flmul@grs+2,f
  7532  05D8  0DBB               	rlf	___flmul@grs+3,f
  7533  05D9  0BB1               	decfsz	??___flmul,f
  7534  05DA  2DD4               	goto	u4715
  7535  05DB  0829               	movf	___flmul@b,w
  7536  05DC  00B1               	movwf	??___flmul
  7537  05DD  0831               	movf	??___flmul,w
  7538  05DE  00A0               	movwf	__Umul8_16@multiplicand
  7539  05DF  082D               	movf	___flmul@a,w
  7540  05E0  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7541  05E5  0821               	movf	?__Umul8_16+1,w
  7542  05E6  00C2               	movwf	___flmul@temp+1
  7543  05E7  0820               	movf	?__Umul8_16,w
  7544  05E8  00C1               	movwf	___flmul@temp
  7545  05E9  0841               	movf	___flmul@temp,w
  7546  05EA  00B1               	movwf	??___flmul
  7547  05EB  0842               	movf	___flmul@temp+1,w
  7548  05EC  00B2               	movwf	??___flmul+1
  7549  05ED  01B3               	clrf	??___flmul+2
  7550  05EE  01B4               	clrf	??___flmul+3
  7551  05EF  0831               	movf	??___flmul,w
  7552  05F0  07B8               	addwf	___flmul@grs,f
  7553  05F1  0832               	movf	??___flmul+1,w
  7554  05F2  1103               	clrz
  7555  05F3  1803               	skipnc
  7556  05F4  3E01               	addlw	1
  7557  05F5  1D03               	btfss	3,2
  7558  05F6  07B9               	addwf	___flmul@grs+1,f
  7559  05F7  0833               	movf	??___flmul+2,w
  7560  05F8  1103               	clrz
  7561  05F9  1803               	skipnc
  7562  05FA  3E01               	addlw	1
  7563  05FB  1D03               	btfss	3,2
  7564  05FC  07BA               	addwf	___flmul@grs+2,f
  7565  05FD  0834               	movf	??___flmul+3,w
  7566  05FE  1103               	clrz
  7567  05FF  1803               	skipnc
  7568  0600  3E01               	addlw	1
  7569  0601  1D03               	btfss	3,2
  7570  0602  07BB               	addwf	___flmul@grs+3,f
  7571  0603  082A               	movf	___flmul@b+1,w
  7572  0604  00B1               	movwf	??___flmul
  7573  0605  0831               	movf	??___flmul,w
  7574  0606  00A0               	movwf	__Umul8_16@multiplicand
  7575  0607  082F               	movf	___flmul@a+2,w
  7576  0608  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7577  060D  0821               	movf	?__Umul8_16+1,w
  7578  060E  00C2               	movwf	___flmul@temp+1
  7579  060F  0820               	movf	?__Umul8_16,w
  7580  0610  00C1               	movwf	___flmul@temp
  7581  0611  0841               	movf	___flmul@temp,w
  7582  0612  00B1               	movwf	??___flmul
  7583  0613  0842               	movf	___flmul@temp+1,w
  7584  0614  00B2               	movwf	??___flmul+1
  7585  0615  01B3               	clrf	??___flmul+2
  7586  0616  01B4               	clrf	??___flmul+3
  7587  0617  0831               	movf	??___flmul,w
  7588  0618  07BD               	addwf	___flmul@prod,f
  7589  0619  0832               	movf	??___flmul+1,w
  7590  061A  1103               	clrz
  7591  061B  1803               	skipnc
  7592  061C  3E01               	addlw	1
  7593  061D  1D03               	btfss	3,2
  7594  061E  07BE               	addwf	___flmul@prod+1,f
  7595  061F  0833               	movf	??___flmul+2,w
  7596  0620  1103               	clrz
  7597  0621  1803               	skipnc
  7598  0622  3E01               	addlw	1
  7599  0623  1D03               	btfss	3,2
  7600  0624  07BF               	addwf	___flmul@prod+2,f
  7601  0625  0834               	movf	??___flmul+3,w
  7602  0626  1103               	clrz
  7603  0627  1803               	skipnc
  7604  0628  3E01               	addlw	1
  7605  0629  1D03               	btfss	3,2
  7606  062A  07C0               	addwf	___flmul@prod+3,f
  7607  062B  082B               	movf	___flmul@b+2,w
  7608  062C  00B1               	movwf	??___flmul
  7609  062D  0831               	movf	??___flmul,w
  7610  062E  00A0               	movwf	__Umul8_16@multiplicand
  7611  062F  082E               	movf	___flmul@a+1,w
  7612  0630  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7613  0635  0821               	movf	?__Umul8_16+1,w
  7614  0636  00C2               	movwf	___flmul@temp+1
  7615  0637  0820               	movf	?__Umul8_16,w
  7616  0638  00C1               	movwf	___flmul@temp
  7617  0639  0841               	movf	___flmul@temp,w
  7618  063A  00B1               	movwf	??___flmul
  7619  063B  0842               	movf	___flmul@temp+1,w
  7620  063C  00B2               	movwf	??___flmul+1
  7621  063D  01B3               	clrf	??___flmul+2
  7622  063E  01B4               	clrf	??___flmul+3
  7623  063F  0831               	movf	??___flmul,w
  7624  0640  07BD               	addwf	___flmul@prod,f
  7625  0641  0832               	movf	??___flmul+1,w
  7626  0642  1103               	clrz
  7627  0643  1803               	skipnc
  7628  0644  3E01               	addlw	1
  7629  0645  1D03               	btfss	3,2
  7630  0646  07BE               	addwf	___flmul@prod+1,f
  7631  0647  0833               	movf	??___flmul+2,w
  7632  0648  1103               	clrz
  7633  0649  1803               	skipnc
  7634  064A  3E01               	addlw	1
  7635  064B  1D03               	btfss	3,2
  7636  064C  07BF               	addwf	___flmul@prod+2,f
  7637  064D  0834               	movf	??___flmul+3,w
  7638  064E  1103               	clrz
  7639  064F  1803               	skipnc
  7640  0650  3E01               	addlw	1
  7641  0651  1D03               	btfss	3,2
  7642  0652  07C0               	addwf	___flmul@prod+3,f
  7643  0653  082B               	movf	___flmul@b+2,w
  7644  0654  00B1               	movwf	??___flmul
  7645  0655  0831               	movf	??___flmul,w
  7646  0656  00A0               	movwf	__Umul8_16@multiplicand
  7647  0657  082F               	movf	___flmul@a+2,w
  7648  0658  160A  158A  255F  120A  118A  	fcall	__Umul8_16
  7649  065D  0821               	movf	?__Umul8_16+1,w
  7650  065E  00C2               	movwf	___flmul@temp+1
  7651  065F  0820               	movf	?__Umul8_16,w
  7652  0660  00C1               	movwf	___flmul@temp
  7653  0661  0841               	movf	___flmul@temp,w
  7654  0662  00B1               	movwf	??___flmul
  7655  0663  0842               	movf	___flmul@temp+1,w
  7656  0664  00B2               	movwf	??___flmul+1
  7657  0665  01B3               	clrf	??___flmul+2
  7658  0666  01B4               	clrf	??___flmul+3
  7659  0667  3008               	movlw	8
  7660  0668                     u4755:	
  7661  0668  1003               	clrc
  7662  0669  0DB1               	rlf	??___flmul,f
  7663  066A  0DB2               	rlf	??___flmul+1,f
  7664  066B  0DB3               	rlf	??___flmul+2,f
  7665  066C  0DB4               	rlf	??___flmul+3,f
  7666  066D  3EFF               	addlw	-1
  7667  066E  1D03               	skipz
  7668  066F  2E68               	goto	u4755
  7669  0670  0831               	movf	??___flmul,w
  7670  0671  07BD               	addwf	___flmul@prod,f
  7671  0672  0832               	movf	??___flmul+1,w
  7672  0673  1103               	clrz
  7673  0674  1803               	skipnc
  7674  0675  3E01               	addlw	1
  7675  0676  1D03               	btfss	3,2
  7676  0677  07BE               	addwf	___flmul@prod+1,f
  7677  0678  0833               	movf	??___flmul+2,w
  7678  0679  1103               	clrz
  7679  067A  1803               	skipnc
  7680  067B  3E01               	addlw	1
  7681  067C  1D03               	btfss	3,2
  7682  067D  07BF               	addwf	___flmul@prod+2,f
  7683  067E  0834               	movf	??___flmul+3,w
  7684  067F  1103               	clrz
  7685  0680  1803               	skipnc
  7686  0681  3E01               	addlw	1
  7687  0682  1D03               	btfss	3,2
  7688  0683  07C0               	addwf	___flmul@prod+3,f
  7689  0684  083B               	movf	___flmul@grs+3,w
  7690  0685  00B1               	movwf	??___flmul
  7691  0686  01B2               	clrf	??___flmul+1
  7692  0687  01B3               	clrf	??___flmul+2
  7693  0688  01B4               	clrf	??___flmul+3
  7694  0689  0831               	movf	??___flmul,w
  7695  068A  07BD               	addwf	___flmul@prod,f
  7696  068B  0832               	movf	??___flmul+1,w
  7697  068C  1103               	clrz
  7698  068D  1803               	skipnc
  7699  068E  3E01               	addlw	1
  7700  068F  1D03               	btfss	3,2
  7701  0690  07BE               	addwf	___flmul@prod+1,f
  7702  0691  0833               	movf	??___flmul+2,w
  7703  0692  1103               	clrz
  7704  0693  1803               	skipnc
  7705  0694  3E01               	addlw	1
  7706  0695  1D03               	btfss	3,2
  7707  0696  07BF               	addwf	___flmul@prod+2,f
  7708  0697  0834               	movf	??___flmul+3,w
  7709  0698  1103               	clrz
  7710  0699  1803               	skipnc
  7711  069A  3E01               	addlw	1
  7712  069B  1D03               	btfss	3,2
  7713  069C  07C0               	addwf	___flmul@prod+3,f
  7714  069D  3008               	movlw	8
  7715  069E  00B1               	movwf	??___flmul
  7716  069F                     u4785:	
  7717  069F  1003               	clrc
  7718  06A0  0DB8               	rlf	___flmul@grs,f
  7719  06A1  0DB9               	rlf	___flmul@grs+1,f
  7720  06A2  0DBA               	rlf	___flmul@grs+2,f
  7721  06A3  0DBB               	rlf	___flmul@grs+3,f
  7722  06A4  0BB1               	decfsz	??___flmul,f
  7723  06A5  2E9F               	goto	u4785
  7724  06A6  083C               	movf	___flmul@bexp,w
  7725  06A7  0737               	addwf	___flmul@aexp,w
  7726  06A8  00B1               	movwf	??___flmul
  7727  06A9  01B2               	clrf	??___flmul+1
  7728  06AA  0DB2               	rlf	??___flmul+1,f
  7729  06AB  0831               	movf	??___flmul,w
  7730  06AC  3E82               	addlw	130
  7731  06AD  00C1               	movwf	___flmul@temp
  7732  06AE  0832               	movf	??___flmul+1,w
  7733  06AF  1803               	skipnc
  7734  06B0  3E01               	addlw	1
  7735  06B1  3EFF               	addlw	255
  7736  06B2  00C2               	movwf	___flmul@temp+1
  7737  06B3                     l4939:	
  7738  06B3  1BBF               	btfsc	___flmul@prod+2,7
  7739  06B4  2ED0               	goto	l4941
  7740  06B5  3001               	movlw	1
  7741  06B6  00B1               	movwf	??___flmul
  7742  06B7                     u4795:	
  7743  06B7  1003               	clrc
  7744  06B8  0DBD               	rlf	___flmul@prod,f
  7745  06B9  0DBE               	rlf	___flmul@prod+1,f
  7746  06BA  0DBF               	rlf	___flmul@prod+2,f
  7747  06BB  0DC0               	rlf	___flmul@prod+3,f
  7748  06BC  0BB1               	decfsz	??___flmul,f
  7749  06BD  2EB7               	goto	u4795
  7750  06BE  1BBB               	btfsc	___flmul@grs+3,7
  7751  06BF  143D               	bsf	___flmul@prod,0
  7752  06C0  3001               	movlw	1
  7753  06C1  00B1               	movwf	??___flmul
  7754  06C2                     u4815:	
  7755  06C2  1003               	clrc
  7756  06C3  0DB8               	rlf	___flmul@grs,f
  7757  06C4  0DB9               	rlf	___flmul@grs+1,f
  7758  06C5  0DBA               	rlf	___flmul@grs+2,f
  7759  06C6  0DBB               	rlf	___flmul@grs+3,f
  7760  06C7  0BB1               	decfsz	??___flmul,f
  7761  06C8  2EC2               	goto	u4815
  7762  06C9  30FF               	movlw	255
  7763  06CA  07C1               	addwf	___flmul@temp,f
  7764  06CB  1803               	skipnc
  7765  06CC  0AC2               	incf	___flmul@temp+1,f
  7766  06CD  30FF               	movlw	255
  7767  06CE  07C2               	addwf	___flmul@temp+1,f
  7768  06CF  2EB3               	goto	l4939
  7769  06D0                     l4941:	
  7770  06D0  01B7               	clrf	___flmul@aexp
  7771  06D1  1FBB               	btfss	___flmul@grs+3,7
  7772  06D2  2EE9               	goto	l4951
  7773  06D3  30FF               	movlw	255
  7774  06D4  0538               	andwf	___flmul@grs,w
  7775  06D5  00B1               	movwf	??___flmul
  7776  06D6  30FF               	movlw	255
  7777  06D7  0539               	andwf	___flmul@grs+1,w
  7778  06D8  00B2               	movwf	??___flmul+1
  7779  06D9  30FF               	movlw	255
  7780  06DA  053A               	andwf	___flmul@grs+2,w
  7781  06DB  00B3               	movwf	??___flmul+2
  7782  06DC  307F               	movlw	127
  7783  06DD  053B               	andwf	___flmul@grs+3,w
  7784  06DE  00B4               	movwf	??___flmul+3
  7785  06DF  0834               	movf	??___flmul+3,w
  7786  06E0  0433               	iorwf	??___flmul+2,w
  7787  06E1  0432               	iorwf	??___flmul+1,w
  7788  06E2  0431               	iorwf	??___flmul,w
  7789  06E3  1903               	skipnz
  7790  06E4  183D               	btfsc	___flmul@prod,0
  7791  06E5  2EE7               	goto	l4947
  7792  06E6  2EE9               	goto	l4951
  7793  06E7                     l4947:	
  7794  06E7  01B7               	clrf	___flmul@aexp
  7795  06E8  0AB7               	incf	___flmul@aexp,f
  7796  06E9                     l4951:	
  7797  06E9  0837               	movf	___flmul@aexp,w
  7798  06EA  1903               	btfsc	3,2
  7799  06EB  2F1B               	goto	l4961
  7800  06EC  3001               	movlw	1
  7801  06ED  07BD               	addwf	___flmul@prod,f
  7802  06EE  3000               	movlw	0
  7803  06EF  1803               	skipnc
  7804  06F0  3001               	movlw	1
  7805  06F1  07BE               	addwf	___flmul@prod+1,f
  7806  06F2  3000               	movlw	0
  7807  06F3  1803               	skipnc
  7808  06F4  3001               	movlw	1
  7809  06F5  07BF               	addwf	___flmul@prod+2,f
  7810  06F6  3000               	movlw	0
  7811  06F7  1803               	skipnc
  7812  06F8  3001               	movlw	1
  7813  06F9  07C0               	addwf	___flmul@prod+3,f
  7814  06FA  1C40               	btfss	___flmul@prod+3,0
  7815  06FB  2F1B               	goto	l4961
  7816  06FC  083D               	movf	___flmul@prod,w
  7817  06FD  00B1               	movwf	??___flmul
  7818  06FE  083E               	movf	___flmul@prod+1,w
  7819  06FF  00B2               	movwf	??___flmul+1
  7820  0700  083F               	movf	___flmul@prod+2,w
  7821  0701  00B3               	movwf	??___flmul+2
  7822  0702  0840               	movf	___flmul@prod+3,w
  7823  0703  00B4               	movwf	??___flmul+3
  7824  0704  3001               	movlw	1
  7825  0705  00B5               	movwf	??___flmul+4
  7826  0706                     u4885:	
  7827  0706  0D34               	rlf	??___flmul+3,w
  7828  0707  0CB4               	rrf	??___flmul+3,f
  7829  0708  0CB3               	rrf	??___flmul+2,f
  7830  0709  0CB2               	rrf	??___flmul+1,f
  7831  070A  0CB1               	rrf	??___flmul,f
  7832  070B  0BB5               	decfsz	??___flmul+4,f
  7833  070C  2F06               	goto	u4885
  7834  070D  0834               	movf	??___flmul+3,w
  7835  070E  00C0               	movwf	___flmul@prod+3
  7836  070F  0833               	movf	??___flmul+2,w
  7837  0710  00BF               	movwf	___flmul@prod+2
  7838  0711  0832               	movf	??___flmul+1,w
  7839  0712  00BE               	movwf	___flmul@prod+1
  7840  0713  0831               	movf	??___flmul,w
  7841  0714  00BD               	movwf	___flmul@prod
  7842  0715  3001               	movlw	1
  7843  0716  07C1               	addwf	___flmul@temp,f
  7844  0717  1803               	skipnc
  7845  0718  0AC2               	incf	___flmul@temp+1,f
  7846  0719  3000               	movlw	0
  7847  071A  07C2               	addwf	___flmul@temp+1,f
  7848  071B                     l4961:	
  7849  071B  0842               	movf	___flmul@temp+1,w
  7850  071C  3A80               	xorlw	128
  7851  071D  00FF               	movwf	127
  7852  071E  3080               	movlw	128
  7853  071F  027F               	subwf	127,w
  7854  0720  1D03               	skipz
  7855  0721  2F24               	goto	u4895
  7856  0722  30FF               	movlw	255
  7857  0723  0241               	subwf	___flmul@temp,w
  7858  0724                     u4895:	
  7859  0724  1C03               	skipc
  7860  0725  2F31               	goto	l4965
  7861  0726  307F               	movlw	127
  7862  0727  1283               	bcf	3,5	;RP0=0, select bank0
  7863  0728  1303               	bcf	3,6	;RP1=0, select bank0
  7864  0729  00C0               	movwf	___flmul@prod+3
  7865  072A  3080               	movlw	128
  7866  072B  00BF               	movwf	___flmul@prod+2
  7867  072C  3000               	movlw	0
  7868  072D  00BE               	movwf	___flmul@prod+1
  7869  072E  3000               	movlw	0
  7870  072F  00BD               	movwf	___flmul@prod
  7871  0730  2F61               	goto	l1385
  7872  0731                     l4965:	
  7873  0731  1283               	bcf	3,5	;RP0=0, select bank0
  7874  0732  1303               	bcf	3,6	;RP1=0, select bank0
  7875  0733  0842               	movf	___flmul@temp+1,w
  7876  0734  3A80               	xorlw	128
  7877  0735  00FF               	movwf	127
  7878  0736  3080               	movlw	128
  7879  0737  027F               	subwf	127,w
  7880  0738  1D03               	skipz
  7881  0739  2F3C               	goto	u4905
  7882  073A  3001               	movlw	1
  7883  073B  0241               	subwf	___flmul@temp,w
  7884  073C                     u4905:	
  7885  073C  1803               	skipnc
  7886  073D  2F4A               	goto	l4971
  7887  073E  3000               	movlw	0
  7888  073F  1283               	bcf	3,5	;RP0=0, select bank0
  7889  0740  1303               	bcf	3,6	;RP1=0, select bank0
  7890  0741  00C0               	movwf	___flmul@prod+3
  7891  0742  3000               	movlw	0
  7892  0743  00BF               	movwf	___flmul@prod+2
  7893  0744  3000               	movlw	0
  7894  0745  00BE               	movwf	___flmul@prod+1
  7895  0746  3000               	movlw	0
  7896  0747  00BD               	movwf	___flmul@prod
  7897  0748  01B6               	clrf	___flmul@sign
  7898  0749  2F61               	goto	l1385
  7899  074A                     l4971:	
  7900  074A  1283               	bcf	3,5	;RP0=0, select bank0
  7901  074B  1303               	bcf	3,6	;RP1=0, select bank0
  7902  074C  0841               	movf	___flmul@temp,w
  7903  074D  00B1               	movwf	??___flmul
  7904  074E  0831               	movf	??___flmul,w
  7905  074F  00BC               	movwf	___flmul@bexp
  7906  0750  30FF               	movlw	255
  7907  0751  05BD               	andwf	___flmul@prod,f
  7908  0752  30FF               	movlw	255
  7909  0753  05BE               	andwf	___flmul@prod+1,f
  7910  0754  307F               	movlw	127
  7911  0755  05BF               	andwf	___flmul@prod+2,f
  7912  0756  3000               	movlw	0
  7913  0757  05C0               	andwf	___flmul@prod+3,f
  7914  0758  183C               	btfsc	___flmul@bexp,0
  7915  0759  17BF               	bsf	___flmul@prod+2,7
  7916  075A  083C               	movf	___flmul@bexp,w
  7917  075B  00B1               	movwf	??___flmul
  7918  075C  1003               	clrc
  7919  075D  0C31               	rrf	??___flmul,w
  7920  075E  00B2               	movwf	??___flmul+1
  7921  075F  0832               	movf	??___flmul+1,w
  7922  0760  00C0               	movwf	___flmul@prod+3
  7923  0761                     l1385:	
  7924  0761  0836               	movf	___flmul@sign,w
  7925  0762  00B1               	movwf	??___flmul
  7926  0763  0831               	movf	??___flmul,w
  7927  0764  04C0               	iorwf	___flmul@prod+3,f
  7928  0765  0840               	movf	___flmul@prod+3,w
  7929  0766  00AC               	movwf	?___flmul+3
  7930  0767  083F               	movf	___flmul@prod+2,w
  7931  0768  00AB               	movwf	?___flmul+2
  7932  0769  083E               	movf	___flmul@prod+1,w
  7933  076A  00AA               	movwf	?___flmul+1
  7934  076B  083D               	movf	___flmul@prod,w
  7935  076C  00A9               	movwf	?___flmul
  7936  076D  0008               	return
  7937  076E                     __end_of___flmul:	
  7938                           
  7939                           	psect	text20
  7940  1D5F                     __ptext20:	
  7941 ;; *************** function __Umul8_16 *****************
  7942 ;; Defined at:
  7943 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  multiplier      1    wreg     unsigned char 
  7946 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7949 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7950 ;;  product         2    4[BANK0 ] unsigned int 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  2    0[BANK0 ] unsigned int 
  7953 ;; Registers used:
  7954 ;;		wreg, status,2, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 300/0
  7957 ;;		On exit  : 300/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7960 ;;      Params:         0       2       0       0       0
  7961 ;;      Locals:         0       5       0       0       0
  7962 ;;      Temps:          0       2       0       0       0
  7963 ;;      Totals:         0       9       0       0       0
  7964 ;;Total ram usage:        9 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; Hardware stack levels required when called:    1
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		___flmul
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           
  7975                           ;psect for function __Umul8_16
  7976  1D5F                     __Umul8_16:	
  7977                           
  7978                           ;incstack = 0
  7979                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7980                           ;__Umul8_16@multiplier stored from wreg
  7981  1D5F  00A8               	movwf	__Umul8_16@multiplier
  7982  1D60  01A4               	clrf	__Umul8_16@product
  7983  1D61  01A5               	clrf	__Umul8_16@product+1
  7984  1D62  0820               	movf	__Umul8_16@multiplicand,w
  7985  1D63  00A2               	movwf	??__Umul8_16
  7986  1D64  01A3               	clrf	??__Umul8_16+1
  7987  1D65  0822               	movf	??__Umul8_16,w
  7988  1D66  00A6               	movwf	__Umul8_16@word_mpld
  7989  1D67  0823               	movf	??__Umul8_16+1,w
  7990  1D68  00A7               	movwf	__Umul8_16@word_mpld+1
  7991  1D69                     l4203:	
  7992  1D69  1C28               	btfss	__Umul8_16@multiplier,0
  7993  1D6A  2D71               	goto	l1481
  7994  1D6B  0826               	movf	__Umul8_16@word_mpld,w
  7995  1D6C  07A4               	addwf	__Umul8_16@product,f
  7996  1D6D  1803               	skipnc
  7997  1D6E  0AA5               	incf	__Umul8_16@product+1,f
  7998  1D6F  0827               	movf	__Umul8_16@word_mpld+1,w
  7999  1D70  07A5               	addwf	__Umul8_16@product+1,f
  8000  1D71                     l1481:	
  8001  1D71  3001               	movlw	1
  8002  1D72                     u3735:	
  8003  1D72  1003               	clrc
  8004  1D73  0DA6               	rlf	__Umul8_16@word_mpld,f
  8005  1D74  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8006  1D75  3EFF               	addlw	-1
  8007  1D76  1D03               	skipz
  8008  1D77  2D72               	goto	u3735
  8009  1D78  1003               	clrc
  8010  1D79  0CA8               	rrf	__Umul8_16@multiplier,f
  8011  1D7A  0828               	movf	__Umul8_16@multiplier,w
  8012  1D7B  1D03               	btfss	3,2
  8013  1D7C  2D69               	goto	l4203
  8014  1D7D  0825               	movf	__Umul8_16@product+1,w
  8015  1D7E  00A1               	movwf	?__Umul8_16+1
  8016  1D7F  0824               	movf	__Umul8_16@product,w
  8017  1D80  00A0               	movwf	?__Umul8_16
  8018  1D81  0008               	return
  8019  1D82                     __end_of__Umul8_16:	
  8020                           
  8021                           	psect	text21
  8022  1218                     __ptext21:	
  8023 ;; *************** function _USART_to_Protocol *****************
  8024 ;; Defined at:
  8025 ;;		line 77 in file "usart.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  usart_protoc    1    wreg     PTR struct .
  8028 ;;		 -> usart_protocol(16), 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  8031 ;;		 -> usart_protocol(16), 
  8032 ;;  i               2    2[BANK0 ] int 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 300/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8042 ;;      Params:         0       0       0       0       0
  8043 ;;      Locals:         0       3       0       0       0
  8044 ;;      Temps:          0       2       0       0       0
  8045 ;;      Totals:         0       5       0       0       0
  8046 ;;Total ram usage:        5 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    1
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_Decodify_Command
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           
  8057                           ;psect for function _USART_to_Protocol
  8058  1218                     _USART_to_Protocol:	
  8059                           
  8060                           ;incstack = 0
  8061                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  8062                           ;USART_to_Protocol@usart_protocol stored from wreg
  8063  1218  00A4               	movwf	USART_to_Protocol@usart_protocol
  8064                           
  8065                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  8066  1219  0824               	movf	USART_to_Protocol@usart_protocol,w
  8067  121A  0084               	movwf	4
  8068  121B  1683               	bsf	3,5	;RP0=1, select bank3
  8069  121C  1703               	bsf	3,6	;RP1=1, select bank3
  8070  121D  0815               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8071  121E  1383               	bcf	3,7	;select IRP bank0
  8072  121F  0080               	movwf	0
  8073  1220  0A84               	incf	4,f
  8074  1221  0814               	movf	_usart_buffer^(0+384),w	;volatile
  8075  1222  0080               	movwf	0
  8076                           
  8077                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8078  1223  0816               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8079  1224  1283               	bcf	3,5	;RP0=0, select bank0
  8080  1225  1303               	bcf	3,6	;RP1=0, select bank0
  8081  1226  00A0               	movwf	??_USART_to_Protocol
  8082  1227  0824               	movf	USART_to_Protocol@usart_protocol,w
  8083  1228  3E02               	addlw	2
  8084  1229  0084               	movwf	4
  8085  122A  0820               	movf	??_USART_to_Protocol,w
  8086  122B  0080               	movwf	0
  8087                           
  8088                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8089  122C  1683               	bsf	3,5	;RP0=1, select bank3
  8090  122D  1703               	bsf	3,6	;RP1=1, select bank3
  8091  122E  0817               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8092  122F  1283               	bcf	3,5	;RP0=0, select bank0
  8093  1230  1303               	bcf	3,6	;RP1=0, select bank0
  8094  1231  00A0               	movwf	??_USART_to_Protocol
  8095  1232  0824               	movf	USART_to_Protocol@usart_protocol,w
  8096  1233  3E03               	addlw	3
  8097  1234  0084               	movwf	4
  8098  1235  0820               	movf	??_USART_to_Protocol,w
  8099  1236  0080               	movwf	0
  8100                           
  8101                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8102  1237  1683               	bsf	3,5	;RP0=1, select bank3
  8103  1238  1703               	bsf	3,6	;RP1=1, select bank3
  8104  1239  0818               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8105  123A  1283               	bcf	3,5	;RP0=0, select bank0
  8106  123B  1303               	bcf	3,6	;RP1=0, select bank0
  8107  123C  00A0               	movwf	??_USART_to_Protocol
  8108  123D  0824               	movf	USART_to_Protocol@usart_protocol,w
  8109  123E  3E04               	addlw	4
  8110  123F  0084               	movwf	4
  8111  1240  0820               	movf	??_USART_to_Protocol,w
  8112  1241  0080               	movwf	0
  8113                           
  8114                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8115  1242  1683               	bsf	3,5	;RP0=1, select bank3
  8116  1243  1703               	bsf	3,6	;RP1=1, select bank3
  8117  1244  0819               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8118  1245  1283               	bcf	3,5	;RP0=0, select bank0
  8119  1246  1303               	bcf	3,6	;RP1=0, select bank0
  8120  1247  00A0               	movwf	??_USART_to_Protocol
  8121  1248  0824               	movf	USART_to_Protocol@usart_protocol,w
  8122  1249  3E05               	addlw	5
  8123  124A  0084               	movwf	4
  8124  124B  0820               	movf	??_USART_to_Protocol,w
  8125  124C  0080               	movwf	0
  8126                           
  8127                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8128  124D  01A2               	clrf	USART_to_Protocol@i
  8129  124E  01A3               	clrf	USART_to_Protocol@i+1
  8130  124F                     l4545:	
  8131  124F  0824               	movf	USART_to_Protocol@usart_protocol,w
  8132  1250  3E05               	addlw	5
  8133  1251  0084               	movwf	4
  8134  1252  0823               	movf	USART_to_Protocol@i+1,w
  8135  1253  3A80               	xorlw	128
  8136  1254  00A0               	movwf	??_USART_to_Protocol
  8137  1255  3080               	movlw	128
  8138  1256  0220               	subwf	??_USART_to_Protocol,w
  8139  1257  1D03               	skipz
  8140  1258  2A5B               	goto	u4085
  8141  1259  0800               	movf	0,w
  8142  125A  0222               	subwf	USART_to_Protocol@i,w
  8143  125B                     u4085:	
  8144  125B  1803               	btfsc	3,0
  8145  125C  0008               	return
  8146                           
  8147                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8148  125D  1283               	bcf	3,5	;RP0=0, select bank0
  8149  125E  1303               	bcf	3,6	;RP1=0, select bank0
  8150  125F  0822               	movf	USART_to_Protocol@i,w
  8151  1260  3E9A               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8152  1261  0084               	movwf	4
  8153  1262  1783               	bsf	3,7	;select IRP bank3
  8154  1263  0800               	movf	0,w
  8155  1264  00A0               	movwf	??_USART_to_Protocol
  8156  1265  0822               	movf	USART_to_Protocol@i,w
  8157  1266  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8158  1267  00A1               	movwf	??_USART_to_Protocol+1
  8159  1268  0821               	movf	??_USART_to_Protocol+1,w
  8160  1269  3E06               	addlw	6
  8161  126A  0084               	movwf	4
  8162  126B  0820               	movf	??_USART_to_Protocol,w
  8163  126C  1383               	bcf	3,7	;select IRP bank0
  8164  126D  0080               	movwf	0
  8165  126E  3001               	movlw	1
  8166  126F  07A2               	addwf	USART_to_Protocol@i,f
  8167  1270  1803               	skipnc
  8168  1271  0AA3               	incf	USART_to_Protocol@i+1,f
  8169  1272  3000               	movlw	0
  8170  1273  07A3               	addwf	USART_to_Protocol@i+1,f
  8171  1274  2A4F               	goto	l4545
  8172  1275                     __end_of_USART_to_Protocol:	
  8173                           
  8174                           	psect	text22
  8175  1D82                     __ptext22:	
  8176 ;; *************** function _USART_put_buffer *****************
  8177 ;; Defined at:
  8178 ;;		line 99 in file "usart.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  vetor           1    wreg     PTR unsigned char 
  8181 ;;		 -> buffer(32), 
  8182 ;;  size            2    1[BANK0 ] unsigned int 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  8185 ;;		 -> buffer(32), 
  8186 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  8187 ;;		 -> USART_put_buffer@vetor(1), 
  8188 ;;  loop            1    5[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 300/0
  8195 ;;		On exit  : 300/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8198 ;;      Params:         0       2       0       0       0
  8199 ;;      Locals:         0       3       0       0       0
  8200 ;;      Temps:          0       2       0       0       0
  8201 ;;      Totals:         0       7       0       0       0
  8202 ;;Total ram usage:        7 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    2
  8205 ;; This function calls:
  8206 ;;		_USART_putc
  8207 ;; This function is called by:
  8208 ;;		_Decodify_Command
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           
  8213                           ;psect for function _USART_put_buffer
  8214  1D82                     _USART_put_buffer:	
  8215                           
  8216                           ;incstack = 0
  8217                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8218                           ;USART_put_buffer@vetor stored from wreg
  8219  1D82  00A7               	movwf	USART_put_buffer@vetor
  8220                           
  8221                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8222  1D83  01A5               	clrf	USART_put_buffer@loop
  8223                           
  8224                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8225  1D84  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8226  1D85  00A3               	movwf	??_USART_put_buffer
  8227  1D86  0823               	movf	??_USART_put_buffer,w
  8228  1D87  00A6               	movwf	USART_put_buffer@ptr
  8229  1D88                     l4585:	
  8230                           ;usart.c: 105:     while(loop<size)
  8231                           
  8232                           
  8233                           ;usart.c: 105:     while(loop<size)
  8234  1D88  0825               	movf	USART_put_buffer@loop,w
  8235  1D89  00A3               	movwf	??_USART_put_buffer
  8236  1D8A  01A4               	clrf	??_USART_put_buffer+1
  8237  1D8B  0822               	movf	USART_put_buffer@size+1,w
  8238  1D8C  0224               	subwf	??_USART_put_buffer+1,w
  8239  1D8D  1D03               	skipz
  8240  1D8E  2D91               	goto	u4115
  8241  1D8F  0821               	movf	USART_put_buffer@size,w
  8242  1D90  0223               	subwf	??_USART_put_buffer,w
  8243  1D91                     u4115:	
  8244  1D91  1803               	btfsc	3,0
  8245  1D92  0008               	return
  8246                           
  8247                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8248  1D93  0826               	movf	USART_put_buffer@ptr,w
  8249  1D94  0084               	movwf	4
  8250  1D95  1383               	bcf	3,7	;select IRP bank0
  8251  1D96  0800               	movf	0,w
  8252  1D97  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8253                           
  8254                           ;usart.c: 108:         ptr++;
  8255  1D9C  3001               	movlw	1
  8256  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  8257  1D9E  00A3               	movwf	??_USART_put_buffer
  8258  1D9F  0823               	movf	??_USART_put_buffer,w
  8259  1DA0  07A6               	addwf	USART_put_buffer@ptr,f
  8260                           
  8261                           ;usart.c: 109:         loop++;
  8262  1DA1  3001               	movlw	1
  8263  1DA2  00A3               	movwf	??_USART_put_buffer
  8264  1DA3  0823               	movf	??_USART_put_buffer,w
  8265  1DA4  07A5               	addwf	USART_put_buffer@loop,f
  8266  1DA5  2D88               	goto	l4585
  8267  1DA6                     __end_of_USART_put_buffer:	
  8268                           
  8269                           	psect	text23
  8270  1DA6                     __ptext23:	
  8271 ;; *************** function _Send_To_MB *****************
  8272 ;; Defined at:
  8273 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  size            1    wreg     unsigned char 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  size            1    1[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 300/100
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8287 ;;      Params:         0       0       0       0       0
  8288 ;;      Locals:         0       1       0       0       0
  8289 ;;      Temps:          0       0       0       0       0
  8290 ;;      Totals:         0       1       0       0       0
  8291 ;;Total ram usage:        1 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    2
  8294 ;; This function calls:
  8295 ;;		_USART_putc
  8296 ;; This function is called by:
  8297 ;;		_Decodify_Command
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _Send_To_MB
  8303  1DA6                     _Send_To_MB:	
  8304                           
  8305                           ;incstack = 0
  8306                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8307                           ;Send_To_MB@size stored from wreg
  8308  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  8309  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  8310  1DA8  00A1               	movwf	Send_To_MB@size
  8311                           
  8312                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8313  1DA9  30AA               	movlw	170
  8314  1DAA  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8315                           
  8316                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8317  1DAF  30BB               	movlw	187
  8318  1DB0  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8319                           
  8320                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8321  1DB5  1283               	bcf	3,5	;RP0=0, select bank0
  8322  1DB6  0869               	movf	_Board_Number,w
  8323  1DB7  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8324                           
  8325                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8326  1DBC  3000               	movlw	0
  8327  1DBD  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8328                           
  8329                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8330  1DC2  0863               	movf	(_usart_protocol^(0+128)+4),w
  8331  1DC3  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8332                           
  8333                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8334  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  8335  1DC9  0821               	movf	Send_To_MB@size,w
  8336  1DCA  160A  158A  2372   	fcall	_USART_putc
  8337  1DCD  0008               	return
  8338  1DCE                     __end_of_Send_To_MB:	
  8339                           
  8340                           	psect	text24
  8341  1B3E                     __ptext24:	
  8342 ;; *************** function _Send_Reply_OK *****************
  8343 ;; Defined at:
  8344 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 200/100
  8355 ;;		On exit  : 300/100
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8358 ;;      Params:         0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    3
  8365 ;; This function calls:
  8366 ;;		_USART_put_string
  8367 ;; This function is called by:
  8368 ;;		_Decodify_Command
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function _Send_Reply_OK
  8374  1B3E                     _Send_Reply_OK:	
  8375                           
  8376                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  8377                           
  8378                           ;incstack = 0
  8379                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8380  1B3E  3049               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8381  1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8382  1B40  00A1               	movwf	USART_put_string@vetor
  8383  1B41  3080               	movlw	128
  8384  1B42  00A2               	movwf	USART_put_string@vetor+1
  8385  1B43  160A  158A  26B6   	fcall	_USART_put_string
  8386  1B46  0008               	return
  8387  1B47                     __end_of_Send_Reply_OK:	
  8388                           
  8389                           	psect	text25
  8390  1EB6                     __ptext25:	
  8391 ;; *************** function _USART_put_string *****************
  8392 ;; Defined at:
  8393 ;;		line 168 in file "usart.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8396 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8399 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 300/0
  8406 ;;		On exit  : 300/100
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8409 ;;      Params:         0       2       0       0       0
  8410 ;;      Locals:         0       2       0       0       0
  8411 ;;      Temps:          0       0       0       0       0
  8412 ;;      Totals:         0       4       0       0       0
  8413 ;;Total ram usage:        4 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    2
  8416 ;; This function calls:
  8417 ;;		_USART_putc
  8418 ;; This function is called by:
  8419 ;;		_Decodify_Command
  8420 ;;		_Send_Reply_OK
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           
  8425                           ;psect for function _USART_put_string
  8426  1EB6                     _USART_put_string:	
  8427                           
  8428                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8429                           
  8430                           ;incstack = 0
  8431                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8432  1EB6  0821               	movf	USART_put_string@vetor,w
  8433  1EB7  00A3               	movwf	USART_put_string@ptr
  8434  1EB8  0822               	movf	USART_put_string@vetor+1,w
  8435  1EB9  00A4               	movwf	USART_put_string@ptr+1
  8436  1EBA                     l3859:	
  8437                           ;usart.c: 172:     while(*(ptr)){
  8438                           
  8439                           
  8440                           ;usart.c: 172:     while(*(ptr)){
  8441  1EBA  0824               	movf	USART_put_string@ptr+1,w
  8442  1EBB  00FF               	movwf	127
  8443  1EBC  0823               	movf	USART_put_string@ptr,w
  8444  1EBD  0084               	movwf	4
  8445  1EBE  160A  118A  2000  160A  158A  	fcall	stringtab
  8446  1EC3  3A00               	xorlw	0
  8447  1EC4  1903               	btfsc	3,2
  8448  1EC5  2EDC               	goto	l3861
  8449                           
  8450                           ;usart.c: 173:         USART_putc(*(ptr));
  8451  1EC6  0824               	movf	USART_put_string@ptr+1,w
  8452  1EC7  00FF               	movwf	127
  8453  1EC8  0823               	movf	USART_put_string@ptr,w
  8454  1EC9  0084               	movwf	4
  8455  1ECA  160A  118A  2000  160A  158A  	fcall	stringtab
  8456  1ECF  160A  158A  2372  160A  158A  	fcall	_USART_putc
  8457                           
  8458                           ;usart.c: 174:         ptr++;
  8459  1ED4  3001               	movlw	1
  8460  1ED5  1283               	bcf	3,5	;RP0=0, select bank0
  8461  1ED6  07A3               	addwf	USART_put_string@ptr,f
  8462  1ED7  1803               	skipnc
  8463  1ED8  0AA4               	incf	USART_put_string@ptr+1,f
  8464  1ED9  3000               	movlw	0
  8465  1EDA  07A4               	addwf	USART_put_string@ptr+1,f
  8466  1EDB  2EBA               	goto	l3859
  8467  1EDC                     l3861:	
  8468                           
  8469                           ;usart.c: 176:     USART_putc(*(ptr));
  8470  1EDC  0824               	movf	USART_put_string@ptr+1,w
  8471  1EDD  00FF               	movwf	127
  8472  1EDE  0823               	movf	USART_put_string@ptr,w
  8473  1EDF  0084               	movwf	4
  8474  1EE0  160A  118A  2000  160A  158A  	fcall	stringtab
  8475  1EE5  160A  158A  2372   	fcall	_USART_putc
  8476  1EE8  0008               	return
  8477  1EE9                     __end_of_USART_put_string:	
  8478                           
  8479                           	psect	text26
  8480  11BE                     __ptext26:	
  8481 ;; *************** function _Save_Log *****************
  8482 ;; Defined at:
  8483 ;;		line 1028 in file "SlaveLiofilizadorVer1.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  add_datalog     4   33[BANK0 ] unsigned long 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 300/0
  8494 ;;		On exit  : 300/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8497 ;;      Params:         0       4       0       0       0
  8498 ;;      Locals:         0       0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0
  8500 ;;      Totals:         0       4       0       0       0
  8501 ;;Total ram usage:        4 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    5
  8504 ;; This function calls:
  8505 ;;		_EEPROM_24C1025_Write_Int
  8506 ;;		___fltol
  8507 ;;		___wmul
  8508 ;; This function is called by:
  8509 ;;		_Decodify_Command
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function _Save_Log
  8515  11BE                     _Save_Log:	
  8516                           
  8517                           ;SlaveLiofilizadorVer1.c: 1029:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) T
      +                          emperatura0*10);
  8518                           
  8519                           ;incstack = 0
  8520                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8521  11BE  0844               	movf	Save_Log@add_datalog+3,w
  8522  11BF  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8523  11C0  0843               	movf	Save_Log@add_datalog+2,w
  8524  11C1  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8525  11C2  0842               	movf	Save_Log@add_datalog+1,w
  8526  11C3  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8527  11C4  0841               	movf	Save_Log@add_datalog,w
  8528  11C5  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8529  11C6  1683               	bsf	3,5	;RP0=1, select bank1
  8530  11C7  0854               	movf	(_Temperatura0+3)^(0+128),w
  8531  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  8532  11C9  00A3               	movwf	___fltol@f1+3
  8533  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  8534  11CB  0853               	movf	(_Temperatura0+2)^(0+128),w
  8535  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  8536  11CD  00A2               	movwf	___fltol@f1+2
  8537  11CE  1683               	bsf	3,5	;RP0=1, select bank1
  8538  11CF  0852               	movf	(_Temperatura0+1)^(0+128),w
  8539  11D0  1283               	bcf	3,5	;RP0=0, select bank0
  8540  11D1  00A1               	movwf	___fltol@f1+1
  8541  11D2  1683               	bsf	3,5	;RP0=1, select bank1
  8542  11D3  0851               	movf	_Temperatura0^(0+128),w
  8543  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  8544  11D5  00A0               	movwf	___fltol@f1
  8545  11D6  120A  118A  276E  160A  118A  	fcall	___fltol
  8546  11DB  0821               	movf	?___fltol+1,w
  8547  11DC  00AC               	movwf	___wmul@multiplier+1
  8548  11DD  0820               	movf	?___fltol,w
  8549  11DE  00AB               	movwf	___wmul@multiplier
  8550  11DF  300A               	movlw	10
  8551  11E0  00AD               	movwf	___wmul@multiplicand
  8552  11E1  3000               	movlw	0
  8553  11E2  00AE               	movwf	___wmul@multiplicand+1
  8554  11E3  160A  158A  251C  160A  118A  	fcall	___wmul
  8555  11E8  082C               	movf	?___wmul+1,w
  8556  11E9  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
  8557  11EA  082B               	movf	?___wmul,w
  8558  11EB  00BA               	movwf	EEPROM_24C1025_Write_Int@data
  8559  11EC  3000               	movlw	0
  8560  11ED  160A  158A  247C  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8561                           
  8562                           ;SlaveLiofilizadorVer1.c: 1030:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) U
      +                          midade1);
  8563  11F2  0844               	movf	Save_Log@add_datalog+3,w
  8564  11F3  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8565  11F4  0843               	movf	Save_Log@add_datalog+2,w
  8566  11F5  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8567  11F6  0842               	movf	Save_Log@add_datalog+1,w
  8568  11F7  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8569  11F8  0841               	movf	Save_Log@add_datalog,w
  8570  11F9  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8571  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  8572  11FB  0850               	movf	(_Umidade1+3)^(0+128),w
  8573  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  8574  11FD  00A3               	movwf	___fltol@f1+3
  8575  11FE  1683               	bsf	3,5	;RP0=1, select bank1
  8576  11FF  084F               	movf	(_Umidade1+2)^(0+128),w
  8577  1200  1283               	bcf	3,5	;RP0=0, select bank0
  8578  1201  00A2               	movwf	___fltol@f1+2
  8579  1202  1683               	bsf	3,5	;RP0=1, select bank1
  8580  1203  084E               	movf	(_Umidade1+1)^(0+128),w
  8581  1204  1283               	bcf	3,5	;RP0=0, select bank0
  8582  1205  00A1               	movwf	___fltol@f1+1
  8583  1206  1683               	bsf	3,5	;RP0=1, select bank1
  8584  1207  084D               	movf	_Umidade1^(0+128),w
  8585  1208  1283               	bcf	3,5	;RP0=0, select bank0
  8586  1209  00A0               	movwf	___fltol@f1
  8587  120A  120A  118A  276E  160A  118A  	fcall	___fltol
  8588  120F  0821               	movf	?___fltol+1,w
  8589  1210  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
  8590  1211  0820               	movf	?___fltol,w
  8591  1212  00BA               	movwf	EEPROM_24C1025_Write_Int@data
  8592  1213  3001               	movlw	1
  8593  1214  160A  158A  247C   	fcall	_EEPROM_24C1025_Write_Int
  8594  1217  0008               	return
  8595  1218                     __end_of_Save_Log:	
  8596                           
  8597                           	psect	text27
  8598  1D1C                     __ptext27:	
  8599 ;; *************** function ___wmul *****************
  8600 ;; Defined at:
  8601 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  multiplier      2   11[BANK0 ] unsigned int 
  8604 ;;  multiplicand    2   13[BANK0 ] unsigned int 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  product         2   15[BANK0 ] unsigned int 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  2   11[BANK0 ] unsigned int 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 300/0
  8613 ;;		On exit  : 300/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8616 ;;      Params:         0       4       0       0       0
  8617 ;;      Locals:         0       2       0       0       0
  8618 ;;      Temps:          0       0       0       0       0
  8619 ;;      Totals:         0       6       0       0       0
  8620 ;;Total ram usage:        6 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_Save_Log
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           
  8631                           ;psect for function ___wmul
  8632  1D1C                     ___wmul:	
  8633                           
  8634                           ;incstack = 0
  8635                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8636  1D1C  01AF               	clrf	___wmul@product
  8637  1D1D  01B0               	clrf	___wmul@product+1
  8638  1D1E                     l3957:	
  8639  1D1E  1C2B               	btfss	___wmul@multiplier,0
  8640  1D1F  2D26               	goto	l984
  8641  1D20  082D               	movf	___wmul@multiplicand,w
  8642  1D21  07AF               	addwf	___wmul@product,f
  8643  1D22  1803               	skipnc
  8644  1D23  0AB0               	incf	___wmul@product+1,f
  8645  1D24  082E               	movf	___wmul@multiplicand+1,w
  8646  1D25  07B0               	addwf	___wmul@product+1,f
  8647  1D26                     l984:	
  8648  1D26  3001               	movlw	1
  8649  1D27                     u3135:	
  8650  1D27  1003               	clrc
  8651  1D28  0DAD               	rlf	___wmul@multiplicand,f
  8652  1D29  0DAE               	rlf	___wmul@multiplicand+1,f
  8653  1D2A  3EFF               	addlw	-1
  8654  1D2B  1D03               	skipz
  8655  1D2C  2D27               	goto	u3135
  8656  1D2D  3001               	movlw	1
  8657  1D2E                     u3145:	
  8658  1D2E  1003               	clrc
  8659  1D2F  0CAC               	rrf	___wmul@multiplier+1,f
  8660  1D30  0CAB               	rrf	___wmul@multiplier,f
  8661  1D31  3EFF               	addlw	-1
  8662  1D32  1D03               	skipz
  8663  1D33  2D2E               	goto	u3145
  8664  1D34  082B               	movf	___wmul@multiplier,w
  8665  1D35  042C               	iorwf	___wmul@multiplier+1,w
  8666  1D36  1D03               	btfss	3,2
  8667  1D37  2D1E               	goto	l3957
  8668  1D38  0830               	movf	___wmul@product+1,w
  8669  1D39  00AC               	movwf	?___wmul+1
  8670  1D3A  082F               	movf	___wmul@product,w
  8671  1D3B  00AB               	movwf	?___wmul
  8672  1D3C  0008               	return
  8673  1D3D                     __end_of___wmul:	
  8674                           
  8675                           	psect	text28
  8676  076E                     __ptext28:	
  8677 ;; *************** function ___fltol *****************
  8678 ;; Defined at:
  8679 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  f1              4    0[BANK0 ] unsigned int 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  exp1            1   10[BANK0 ] unsigned char 
  8684 ;;  sign1           1    9[BANK0 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  4    0[BANK0 ] long 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 300/0
  8691 ;;		On exit  : 300/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8694 ;;      Params:         0       4       0       0       0
  8695 ;;      Locals:         0       2       0       0       0
  8696 ;;      Temps:          0       5       0       0       0
  8697 ;;      Totals:         0      11       0       0       0
  8698 ;;Total ram usage:       11 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:    1
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		_Decodify_Command
  8705 ;;		_Save_Log
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           
  8710                           ;psect for function ___fltol
  8711  076E                     ___fltol:	
  8712                           
  8713                           ;incstack = 0
  8714                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8715  076E  1003               	clrc
  8716  076F  0D22               	rlf	___fltol@f1+2,w
  8717  0770  0D23               	rlf	___fltol@f1+3,w
  8718  0771  00A4               	movwf	??___fltol
  8719  0772  0824               	movf	??___fltol,w
  8720  0773  00AA               	movwf	___fltol@exp1
  8721  0774  082A               	movf	___fltol@exp1,w
  8722  0775  1D03               	btfss	3,2
  8723  0776  2F80               	goto	l3975
  8724  0777                     l3971:	
  8725  0777  3000               	movlw	0
  8726  0778  00A3               	movwf	?___fltol+3
  8727  0779  3000               	movlw	0
  8728  077A  00A2               	movwf	?___fltol+2
  8729  077B  3000               	movlw	0
  8730  077C  00A1               	movwf	?___fltol+1
  8731  077D  3000               	movlw	0
  8732  077E  00A0               	movwf	?___fltol
  8733  077F  0008               	return
  8734  0780                     l3975:	
  8735  0780  0820               	movf	___fltol@f1,w
  8736  0781  00A4               	movwf	??___fltol
  8737  0782  0821               	movf	___fltol@f1+1,w
  8738  0783  00A5               	movwf	??___fltol+1
  8739  0784  0822               	movf	___fltol@f1+2,w
  8740  0785  00A6               	movwf	??___fltol+2
  8741  0786  0823               	movf	___fltol@f1+3,w
  8742  0787  00A7               	movwf	??___fltol+3
  8743  0788  301F               	movlw	31
  8744  0789                     u3175:	
  8745  0789  1003               	clrc
  8746  078A  0CA7               	rrf	??___fltol+3,f
  8747  078B  0CA6               	rrf	??___fltol+2,f
  8748  078C  0CA5               	rrf	??___fltol+1,f
  8749  078D  0CA4               	rrf	??___fltol,f
  8750  078E  3EFF               	addlw	-1
  8751  078F  1D03               	skipz
  8752  0790  2F89               	goto	u3175
  8753  0791  0824               	movf	??___fltol,w
  8754  0792  00A8               	movwf	??___fltol+4
  8755  0793  0828               	movf	??___fltol+4,w
  8756  0794  00A9               	movwf	___fltol@sign1
  8757  0795  17A2               	bsf	___fltol@f1+2,7
  8758  0796  30FF               	movlw	255
  8759  0797  05A0               	andwf	___fltol@f1,f
  8760  0798  30FF               	movlw	255
  8761  0799  05A1               	andwf	___fltol@f1+1,f
  8762  079A  30FF               	movlw	255
  8763  079B  05A2               	andwf	___fltol@f1+2,f
  8764  079C  3000               	movlw	0
  8765  079D  05A3               	andwf	___fltol@f1+3,f
  8766  079E  3096               	movlw	150
  8767  079F  02AA               	subwf	___fltol@exp1,f
  8768  07A0  1FAA               	btfss	___fltol@exp1,7
  8769  07A1  2FB7               	goto	l3993
  8770  07A2  082A               	movf	___fltol@exp1,w
  8771  07A3  3A80               	xorlw	128
  8772  07A4  3E97               	addlw	151
  8773  07A5  1C03               	btfss	3,0
  8774  07A6  2F77               	goto	l3971
  8775  07A7                     l3991:	
  8776  07A7  3001               	movlw	1
  8777  07A8                     u3205:	
  8778  07A8  1003               	clrc
  8779  07A9  0CA3               	rrf	___fltol@f1+3,f
  8780  07AA  0CA2               	rrf	___fltol@f1+2,f
  8781  07AB  0CA1               	rrf	___fltol@f1+1,f
  8782  07AC  0CA0               	rrf	___fltol@f1,f
  8783  07AD  3EFF               	addlw	-1
  8784  07AE  1D03               	skipz
  8785  07AF  2FA8               	goto	u3205
  8786  07B0  3001               	movlw	1
  8787  07B1  00A4               	movwf	??___fltol
  8788  07B2  0824               	movf	??___fltol,w
  8789  07B3  07AA               	addwf	___fltol@exp1,f
  8790  07B4  1903               	btfsc	3,2
  8791  07B5  2FCA               	goto	l4001
  8792  07B6  2FA7               	goto	l3991
  8793  07B7                     l3993:	
  8794  07B7  3020               	movlw	32
  8795  07B8  022A               	subwf	___fltol@exp1,w
  8796  07B9  1803               	btfsc	3,0
  8797  07BA  2F77               	goto	l3971
  8798  07BB                     l1177:	
  8799  07BB  082A               	movf	___fltol@exp1,w
  8800  07BC  1903               	btfsc	3,2
  8801  07BD  2FCA               	goto	l4001
  8802  07BE  3001               	movlw	1
  8803  07BF  00A4               	movwf	??___fltol
  8804  07C0                     u3235:	
  8805  07C0  1003               	clrc
  8806  07C1  0DA0               	rlf	___fltol@f1,f
  8807  07C2  0DA1               	rlf	___fltol@f1+1,f
  8808  07C3  0DA2               	rlf	___fltol@f1+2,f
  8809  07C4  0DA3               	rlf	___fltol@f1+3,f
  8810  07C5  0BA4               	decfsz	??___fltol,f
  8811  07C6  2FC0               	goto	u3235
  8812  07C7  3001               	movlw	1
  8813  07C8  02AA               	subwf	___fltol@exp1,f
  8814  07C9  2FBB               	goto	l1177
  8815  07CA                     l4001:	
  8816  07CA  0829               	movf	___fltol@sign1,w
  8817  07CB  1903               	btfsc	3,2
  8818  07CC  0008               	return
  8819  07CD  09A0               	comf	___fltol@f1,f
  8820  07CE  09A1               	comf	___fltol@f1+1,f
  8821  07CF  09A2               	comf	___fltol@f1+2,f
  8822  07D0  09A3               	comf	___fltol@f1+3,f
  8823  07D1  0AA0               	incf	___fltol@f1,f
  8824  07D2  1903               	skipnz
  8825  07D3  0AA1               	incf	___fltol@f1+1,f
  8826  07D4  1903               	skipnz
  8827  07D5  0AA2               	incf	___fltol@f1+2,f
  8828  07D6  1903               	skipnz
  8829  07D7  0AA3               	incf	___fltol@f1+3,f
  8830  07D8  0008               	return
  8831  07D9                     __end_of___fltol:	
  8832                           
  8833                           	psect	text29
  8834  1BED                     __ptext29:	
  8835 ;; *************** function _PROCULUS_VP_Write_String *****************
  8836 ;; Defined at:
  8837 ;;		line 205 in file "proculus.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  vp              2   21[BANK0 ] unsigned int 
  8840 ;;  text            1   23[BANK0 ] PTR unsigned char 
  8841 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 300/0
  8850 ;;		On exit  : 300/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8853 ;;      Params:         0       3       0       0       0
  8854 ;;      Locals:         0       0       0       0       0
  8855 ;;      Temps:          0       2       0       0       0
  8856 ;;      Totals:         0       5       0       0       0
  8857 ;;Total ram usage:        5 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    4
  8860 ;; This function calls:
  8861 ;;		_PROCULUS_VP_Write
  8862 ;;		_strlen
  8863 ;; This function is called by:
  8864 ;;		_Decodify_Command
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _PROCULUS_VP_Write_String
  8870  1BED                     _PROCULUS_VP_Write_String:	
  8871                           
  8872                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8876  1BED  0836               	movf	PROCULUS_VP_Write_String@vp+1,w
  8877  1BEE  00B0               	movwf	PROCULUS_VP_Write@vp+1
  8878  1BEF  0835               	movf	PROCULUS_VP_Write_String@vp,w
  8879  1BF0  00AF               	movwf	PROCULUS_VP_Write@vp
  8880  1BF1  0837               	movf	PROCULUS_VP_Write_String@text,w
  8881  1BF2  00B8               	movwf	??_PROCULUS_VP_Write_String
  8882  1BF3  0838               	movf	??_PROCULUS_VP_Write_String,w
  8883  1BF4  00B1               	movwf	PROCULUS_VP_Write@vetor
  8884  1BF5  0837               	movf	PROCULUS_VP_Write_String@text,w
  8885  1BF6  00A0               	movwf	strlen@s
  8886  1BF7  3000               	movlw	0
  8887  1BF8  00A1               	movwf	strlen@s+1
  8888  1BF9  160A  158A  2407  160A  158A  	fcall	_strlen
  8889  1BFE  0820               	movf	?_strlen,w
  8890  1BFF  3E01               	addlw	1
  8891  1C00  00B9               	movwf	??_PROCULUS_VP_Write_String+1
  8892  1C01  0839               	movf	??_PROCULUS_VP_Write_String+1,w
  8893  1C02  00B2               	movwf	PROCULUS_VP_Write@size
  8894  1C03  160A  118A  2128   	fcall	_PROCULUS_VP_Write
  8895  1C06  0008               	return
  8896  1C07                     __end_of_PROCULUS_VP_Write_String:	
  8897                           
  8898                           	psect	text30
  8899  1C07                     __ptext30:	
  8900 ;; *************** function _strlen *****************
  8901 ;; Defined at:
  8902 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8905 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8908 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  2    0[BANK0 ] unsigned int 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 300/0
  8915 ;;		On exit  : 300/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8918 ;;      Params:         0       2       0       0       0
  8919 ;;      Locals:         0       2       0       0       0
  8920 ;;      Temps:          0       0       0       0       0
  8921 ;;      Totals:         0       4       0       0       0
  8922 ;;Total ram usage:        4 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_Decodify_Command
  8929 ;;		_PROCULUS_VP_Write_String
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function _strlen
  8935  1C07                     _strlen:	
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8939  1C07  0820               	movf	strlen@s,w
  8940  1C08  00A2               	movwf	strlen@cp
  8941  1C09  0821               	movf	strlen@s+1,w
  8942  1C0A  00A3               	movwf	strlen@cp+1
  8943  1C0B                     l5649:	
  8944  1C0B  0822               	movf	strlen@cp,w
  8945  1C0C  0084               	movwf	4
  8946  1C0D  1783               	bsf	3,7
  8947  1C0E  1C23               	btfss	strlen@cp+1,0
  8948  1C0F  1383               	bcf	3,7
  8949  1C10  0800               	movf	0,w
  8950  1C11  1903               	btfsc	3,2
  8951  1C12  2C1A               	goto	l5651
  8952  1C13  3001               	movlw	1
  8953  1C14  07A2               	addwf	strlen@cp,f
  8954  1C15  1803               	skipnc
  8955  1C16  0AA3               	incf	strlen@cp+1,f
  8956  1C17  3000               	movlw	0
  8957  1C18  07A3               	addwf	strlen@cp+1,f
  8958  1C19  2C0B               	goto	l5649
  8959  1C1A                     l5651:	
  8960  1C1A  0820               	movf	strlen@s,w
  8961  1C1B  0222               	subwf	strlen@cp,w
  8962  1C1C  00A0               	movwf	?_strlen
  8963  1C1D  0821               	movf	strlen@s+1,w
  8964  1C1E  1C03               	skipc
  8965  1C1F  0A21               	incf	strlen@s+1,w
  8966  1C20  0223               	subwf	strlen@cp+1,w
  8967  1C21  00A1               	movwf	?_strlen+1
  8968  1C22  0008               	return
  8969  1C23                     __end_of_strlen:	
  8970                           
  8971                           	psect	text31
  8972  1128                     __ptext31:	
  8973 ;; *************** function _PROCULUS_VP_Write *****************
  8974 ;; Defined at:
  8975 ;;		line 40 in file "proculus.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  vp              2   15[BANK0 ] unsigned int 
  8978 ;;  vetor           1   17[BANK0 ] PTR unsigned char 
  8979 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8980 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  8981 ;;  size            1   18[BANK0 ] unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  i               1   20[BANK0 ] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 300/0
  8990 ;;		On exit  : 300/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         0       4       0       0       0
  8994 ;;      Locals:         0       1       0       0       0
  8995 ;;      Temps:          0       1       0       0       0
  8996 ;;      Totals:         0       6       0       0       0
  8997 ;;Total ram usage:        6 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    3
  9000 ;; This function calls:
  9001 ;;		_PROCULUS_Delay
  9002 ;;		_USART_put_int
  9003 ;;		_USART_putc
  9004 ;; This function is called by:
  9005 ;;		_PROCULUS_VP_Write_String
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _PROCULUS_VP_Write
  9011  1128                     _PROCULUS_VP_Write:	
  9012                           
  9013                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9014                           
  9015                           ;incstack = 0
  9016                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9017  1128  30A5               	movlw	165
  9018  1129  00AB               	movwf	USART_put_int@value
  9019  112A  305A               	movlw	90
  9020  112B  00AC               	movwf	USART_put_int@value+1
  9021  112C  160A  158A  23A6  160A  118A  	fcall	_USART_put_int
  9022                           
  9023                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9024  1131  1283               	bcf	3,5	;RP0=0, select bank0
  9025  1132  0832               	movf	PROCULUS_VP_Write@size,w
  9026  1133  3E03               	addlw	3
  9027  1134  160A  158A  2372  160A  118A  	fcall	_USART_putc
  9028                           
  9029                           ;proculus.c: 43:      USART_putc(0x82);
  9030  1139  3082               	movlw	130
  9031  113A  160A  158A  2372  160A  118A  	fcall	_USART_putc
  9032                           
  9033                           ;proculus.c: 44:      USART_put_int(vp);
  9034  113F  1283               	bcf	3,5	;RP0=0, select bank0
  9035  1140  0830               	movf	PROCULUS_VP_Write@vp+1,w
  9036  1141  00AC               	movwf	USART_put_int@value+1
  9037  1142  082F               	movf	PROCULUS_VP_Write@vp,w
  9038  1143  00AB               	movwf	USART_put_int@value
  9039  1144  160A  158A  23A6  160A  118A  	fcall	_USART_put_int
  9040                           
  9041                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9042  1149  1283               	bcf	3,5	;RP0=0, select bank0
  9043  114A  01B4               	clrf	PROCULUS_VP_Write@i
  9044  114B                     l3951:	
  9045  114B  0832               	movf	PROCULUS_VP_Write@size,w
  9046  114C  0234               	subwf	PROCULUS_VP_Write@i,w
  9047  114D  1803               	btfsc	3,0
  9048  114E  2961               	goto	l3953
  9049                           
  9050                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9051  114F  0834               	movf	PROCULUS_VP_Write@i,w
  9052  1150  0731               	addwf	PROCULUS_VP_Write@vetor,w
  9053  1151  00B3               	movwf	??_PROCULUS_VP_Write
  9054  1152  0833               	movf	??_PROCULUS_VP_Write,w
  9055  1153  0084               	movwf	4
  9056  1154  1383               	bcf	3,7	;select IRP bank0
  9057  1155  0800               	movf	0,w
  9058  1156  160A  158A  2372  160A  118A  	fcall	_USART_putc
  9059  115B  3001               	movlw	1
  9060  115C  1283               	bcf	3,5	;RP0=0, select bank0
  9061  115D  00B3               	movwf	??_PROCULUS_VP_Write
  9062  115E  0833               	movf	??_PROCULUS_VP_Write,w
  9063  115F  07B4               	addwf	PROCULUS_VP_Write@i,f
  9064  1160  294B               	goto	l3951
  9065  1161                     l3953:	
  9066                           
  9067                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9068  1161  3001               	movlw	1
  9069  1162  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9070  1163  3000               	movlw	0
  9071  1164  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9072  1165  160A  158A  2423   	fcall	_PROCULUS_Delay
  9073  1168  0008               	return
  9074  1169                     __end_of_PROCULUS_VP_Write:	
  9075                           
  9076                           	psect	text32
  9077  105D                     __ptext32:	
  9078 ;; *************** function _PROCULUS_Show_Screen *****************
  9079 ;; Defined at:
  9080 ;;		line 243 in file "proculus.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  screen          2   19[BANK0 ] unsigned int 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  vetor           3   22[BANK0 ] unsigned char [3]
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 300/0
  9091 ;;		On exit  : 300/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9094 ;;      Params:         0       2       0       0       0
  9095 ;;      Locals:         0       3       0       0       0
  9096 ;;      Temps:          0       1       0       0       0
  9097 ;;      Totals:         0       6       0       0       0
  9098 ;;Total ram usage:        6 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:    4
  9101 ;; This function calls:
  9102 ;;		_PROCULUS_Control_Register_Write
  9103 ;; This function is called by:
  9104 ;;		_Decodify_Command
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _PROCULUS_Show_Screen
  9110  105D                     _PROCULUS_Show_Screen:	
  9111                           
  9112                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9116  105D  3003               	movlw	3
  9117  105E  00B5               	movwf	??_PROCULUS_Show_Screen
  9118  105F  0835               	movf	??_PROCULUS_Show_Screen,w
  9119  1060  00B6               	movwf	PROCULUS_Show_Screen@vetor
  9120                           
  9121                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9122  1061  0834               	movf	PROCULUS_Show_Screen@screen+1,w
  9123  1062  00B5               	movwf	??_PROCULUS_Show_Screen
  9124  1063  0835               	movf	??_PROCULUS_Show_Screen,w
  9125  1064  00B7               	movwf	PROCULUS_Show_Screen@vetor+1
  9126                           
  9127                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9128  1065  0833               	movf	PROCULUS_Show_Screen@screen,w
  9129  1066  00B5               	movwf	??_PROCULUS_Show_Screen
  9130  1067  0835               	movf	??_PROCULUS_Show_Screen,w
  9131  1068  00B8               	movwf	PROCULUS_Show_Screen@vetor+2
  9132                           
  9133                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9134  1069  3003               	movlw	3
  9135  106A  00B5               	movwf	??_PROCULUS_Show_Screen
  9136  106B  0835               	movf	??_PROCULUS_Show_Screen,w
  9137  106C  00AF               	movwf	PROCULUS_Control_Register_Write@size
  9138  106D  3036               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9139  106E  160A  158A  278D   	fcall	_PROCULUS_Control_Register_Write
  9140  1071  0008               	return
  9141  1072                     __end_of_PROCULUS_Show_Screen:	
  9142                           
  9143                           	psect	text33
  9144  1D3D                     __ptext33:	
  9145 ;; *************** function _PROCULUS_Buzzer *****************
  9146 ;; Defined at:
  9147 ;;		line 223 in file "proculus.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  time_ms_x_10    2   19[BANK0 ] unsigned int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  vetor           2   22[BANK0 ] unsigned char [2]
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      void 
  9154 ;; Registers used:
  9155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9156 ;; Tracked objects:
  9157 ;;		On entry : 300/0
  9158 ;;		On exit  : 300/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9161 ;;      Params:         0       2       0       0       0
  9162 ;;      Locals:         0       2       0       0       0
  9163 ;;      Temps:          0       1       0       0       0
  9164 ;;      Totals:         0       5       0       0       0
  9165 ;;Total ram usage:        5 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    4
  9168 ;; This function calls:
  9169 ;;		_PROCULUS_Control_Register_Write
  9170 ;;		___lwdiv
  9171 ;; This function is called by:
  9172 ;;		_Decodify_Command
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           
  9177                           ;psect for function _PROCULUS_Buzzer
  9178  1D3D                     _PROCULUS_Buzzer:	
  9179                           
  9180                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9184  1D3D  300A               	movlw	10
  9185  1D3E  00A0               	movwf	___lwdiv@divisor
  9186  1D3F  3000               	movlw	0
  9187  1D40  00A1               	movwf	___lwdiv@divisor+1
  9188  1D41  0834               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9189  1D42  00A3               	movwf	___lwdiv@dividend+1
  9190  1D43  0833               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9191  1D44  00A2               	movwf	___lwdiv@dividend
  9192  1D45  160A  118A  2072  160A  158A  	fcall	___lwdiv
  9193  1D4A  0821               	movf	?___lwdiv+1,w
  9194  1D4B  00B4               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9195  1D4C  0820               	movf	?___lwdiv,w
  9196  1D4D  00B3               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9197                           
  9198                           ;proculus.c: 226:      vetor[0]=0x02;
  9199  1D4E  3002               	movlw	2
  9200  1D4F  00B5               	movwf	??_PROCULUS_Buzzer
  9201  1D50  0835               	movf	??_PROCULUS_Buzzer,w
  9202  1D51  00B6               	movwf	PROCULUS_Buzzer@vetor
  9203                           
  9204                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9205  1D52  0833               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9206  1D53  00B5               	movwf	??_PROCULUS_Buzzer
  9207  1D54  0835               	movf	??_PROCULUS_Buzzer,w
  9208  1D55  00B7               	movwf	PROCULUS_Buzzer@vetor+1
  9209                           
  9210                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9211  1D56  3002               	movlw	2
  9212  1D57  00B5               	movwf	??_PROCULUS_Buzzer
  9213  1D58  0835               	movf	??_PROCULUS_Buzzer,w
  9214  1D59  00AF               	movwf	PROCULUS_Control_Register_Write@size
  9215  1D5A  3036               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9216  1D5B  160A  158A  278D   	fcall	_PROCULUS_Control_Register_Write
  9217  1D5E  0008               	return
  9218  1D5F                     __end_of_PROCULUS_Buzzer:	
  9219                           
  9220                           	psect	text34
  9221  1072                     __ptext34:	
  9222 ;; *************** function ___lwdiv *****************
  9223 ;; Defined at:
  9224 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  divisor         2    0[BANK0 ] unsigned int 
  9227 ;;  dividend        2    2[BANK0 ] unsigned int 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  quotient        2    5[BANK0 ] unsigned int 
  9230 ;;  counter         1    7[BANK0 ] unsigned char 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  2    0[BANK0 ] unsigned int 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0
  9235 ;; Tracked objects:
  9236 ;;		On entry : 300/0
  9237 ;;		On exit  : 300/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9240 ;;      Params:         0       4       0       0       0
  9241 ;;      Locals:         0       3       0       0       0
  9242 ;;      Temps:          0       1       0       0       0
  9243 ;;      Totals:         0       8       0       0       0
  9244 ;;Total ram usage:        8 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:    1
  9247 ;; This function calls:
  9248 ;;		Nothing
  9249 ;; This function is called by:
  9250 ;;		_ADC_Media_10bits
  9251 ;;		_PROCULUS_Buzzer
  9252 ;;		_utoa
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function ___lwdiv
  9258  1072                     ___lwdiv:	
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9262  1072  01A5               	clrf	___lwdiv@quotient
  9263  1073  01A6               	clrf	___lwdiv@quotient+1
  9264  1074  0820               	movf	___lwdiv@divisor,w
  9265  1075  0421               	iorwf	___lwdiv@divisor+1,w
  9266  1076  1903               	btfsc	3,2
  9267  1077  28A9               	goto	l3729
  9268  1078  01A7               	clrf	___lwdiv@counter
  9269  1079  0AA7               	incf	___lwdiv@counter,f
  9270  107A                     l3717:	
  9271  107A  1BA1               	btfsc	___lwdiv@divisor+1,7
  9272  107B  2888               	goto	l3719
  9273  107C  3001               	movlw	1
  9274  107D                     u2845:	
  9275  107D  1003               	clrc
  9276  107E  0DA0               	rlf	___lwdiv@divisor,f
  9277  107F  0DA1               	rlf	___lwdiv@divisor+1,f
  9278  1080  3EFF               	addlw	-1
  9279  1081  1D03               	skipz
  9280  1082  287D               	goto	u2845
  9281  1083  3001               	movlw	1
  9282  1084  00A4               	movwf	??___lwdiv
  9283  1085  0824               	movf	??___lwdiv,w
  9284  1086  07A7               	addwf	___lwdiv@counter,f
  9285  1087  287A               	goto	l3717
  9286  1088                     l3719:	
  9287  1088  3001               	movlw	1
  9288  1089                     u2865:	
  9289  1089  1003               	clrc
  9290  108A  0DA5               	rlf	___lwdiv@quotient,f
  9291  108B  0DA6               	rlf	___lwdiv@quotient+1,f
  9292  108C  3EFF               	addlw	-1
  9293  108D  1D03               	skipz
  9294  108E  2889               	goto	u2865
  9295  108F  0821               	movf	___lwdiv@divisor+1,w
  9296  1090  0223               	subwf	___lwdiv@dividend+1,w
  9297  1091  1D03               	skipz
  9298  1092  2895               	goto	u2875
  9299  1093  0820               	movf	___lwdiv@divisor,w
  9300  1094  0222               	subwf	___lwdiv@dividend,w
  9301  1095                     u2875:	
  9302  1095  1C03               	skipc
  9303  1096  289E               	goto	l3725
  9304  1097  0820               	movf	___lwdiv@divisor,w
  9305  1098  02A2               	subwf	___lwdiv@dividend,f
  9306  1099  0821               	movf	___lwdiv@divisor+1,w
  9307  109A  1C03               	skipc
  9308  109B  03A3               	decf	___lwdiv@dividend+1,f
  9309  109C  02A3               	subwf	___lwdiv@dividend+1,f
  9310  109D  1425               	bsf	___lwdiv@quotient,0
  9311  109E                     l3725:	
  9312  109E  3001               	movlw	1
  9313  109F                     u2885:	
  9314  109F  1003               	clrc
  9315  10A0  0CA1               	rrf	___lwdiv@divisor+1,f
  9316  10A1  0CA0               	rrf	___lwdiv@divisor,f
  9317  10A2  3EFF               	addlw	-1
  9318  10A3  1D03               	skipz
  9319  10A4  289F               	goto	u2885
  9320  10A5  3001               	movlw	1
  9321  10A6  02A7               	subwf	___lwdiv@counter,f
  9322  10A7  1D03               	btfss	3,2
  9323  10A8  2888               	goto	l3719
  9324  10A9                     l3729:	
  9325  10A9  0826               	movf	___lwdiv@quotient+1,w
  9326  10AA  00A1               	movwf	?___lwdiv+1
  9327  10AB  0825               	movf	___lwdiv@quotient,w
  9328  10AC  00A0               	movwf	?___lwdiv
  9329  10AD  0008               	return
  9330  10AE                     __end_of___lwdiv:	
  9331                           
  9332                           	psect	text35
  9333  1F8D                     __ptext35:	
  9334 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9335 ;; Defined at:
  9336 ;;		line 13 in file "proculus.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  vetor           1    wreg     PTR unsigned char 
  9339 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9340 ;;  size            1   15[BANK0 ] unsigned char 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  vetor           1   17[BANK0 ] PTR unsigned char 
  9343 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9344 ;;  i               1   18[BANK0 ] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 300/0
  9351 ;;		On exit  : 300/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9354 ;;      Params:         0       1       0       0       0
  9355 ;;      Locals:         0       2       0       0       0
  9356 ;;      Temps:          0       1       0       0       0
  9357 ;;      Totals:         0       4       0       0       0
  9358 ;;Total ram usage:        4 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    3
  9361 ;; This function calls:
  9362 ;;		_PROCULUS_Delay
  9363 ;;		_USART_put_int
  9364 ;;		_USART_putc
  9365 ;; This function is called by:
  9366 ;;		_PROCULUS_Buzzer
  9367 ;;		_PROCULUS_Show_Screen
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           
  9372                           ;psect for function _PROCULUS_Control_Register_Write
  9373  1F8D                     _PROCULUS_Control_Register_Write:	
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9377                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9378  1F8D  00B1               	movwf	PROCULUS_Control_Register_Write@vetor
  9379                           
  9380                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9381  1F8E  30A5               	movlw	165
  9382  1F8F  00AB               	movwf	USART_put_int@value
  9383  1F90  305A               	movlw	90
  9384  1F91  00AC               	movwf	USART_put_int@value+1
  9385  1F92  160A  158A  23A6  160A  158A  	fcall	_USART_put_int
  9386                           
  9387                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9388  1F97  1283               	bcf	3,5	;RP0=0, select bank0
  9389  1F98  082F               	movf	PROCULUS_Control_Register_Write@size,w
  9390  1F99  3E01               	addlw	1
  9391  1F9A  160A  158A  2372  160A  158A  	fcall	_USART_putc
  9392                           
  9393                           ;proculus.c: 16:      USART_putc(0x80);
  9394  1F9F  3080               	movlw	128
  9395  1FA0  160A  158A  2372  160A  158A  	fcall	_USART_putc
  9396                           
  9397                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9398  1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  9399  1FA6  01B2               	clrf	PROCULUS_Control_Register_Write@i
  9400  1FA7                     l3935:	
  9401  1FA7  082F               	movf	PROCULUS_Control_Register_Write@size,w
  9402  1FA8  0232               	subwf	PROCULUS_Control_Register_Write@i,w
  9403  1FA9  1803               	btfsc	3,0
  9404  1FAA  2FBD               	goto	l3937
  9405                           
  9406                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9407  1FAB  0832               	movf	PROCULUS_Control_Register_Write@i,w
  9408  1FAC  0731               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9409  1FAD  00B0               	movwf	??_PROCULUS_Control_Register_Write
  9410  1FAE  0830               	movf	??_PROCULUS_Control_Register_Write,w
  9411  1FAF  0084               	movwf	4
  9412  1FB0  1383               	bcf	3,7	;select IRP bank0
  9413  1FB1  0800               	movf	0,w
  9414  1FB2  160A  158A  2372  160A  158A  	fcall	_USART_putc
  9415  1FB7  3001               	movlw	1
  9416  1FB8  1283               	bcf	3,5	;RP0=0, select bank0
  9417  1FB9  00B0               	movwf	??_PROCULUS_Control_Register_Write
  9418  1FBA  0830               	movf	??_PROCULUS_Control_Register_Write,w
  9419  1FBB  07B2               	addwf	PROCULUS_Control_Register_Write@i,f
  9420  1FBC  2FA7               	goto	l3935
  9421  1FBD                     l3937:	
  9422                           
  9423                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9424  1FBD  3001               	movlw	1
  9425  1FBE  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9426  1FBF  3000               	movlw	0
  9427  1FC0  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9428  1FC1  160A  158A  2423   	fcall	_PROCULUS_Delay
  9429  1FC4  0008               	return
  9430  1FC5                     __end_of_PROCULUS_Control_Register_Write:	
  9431                           
  9432                           	psect	text36
  9433  1BA6                     __ptext36:	
  9434 ;; *************** function _USART_put_int *****************
  9435 ;; Defined at:
  9436 ;;		line 138 in file "usart.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  value           2   11[BANK0 ] int 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  dado            1   14[BANK0 ] PTR unsigned char 
  9441 ;;		 -> USART_put_int@value(2), 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9446 ;; Tracked objects:
  9447 ;;		On entry : 300/0
  9448 ;;		On exit  : 300/100
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9451 ;;      Params:         0       2       0       0       0
  9452 ;;      Locals:         0       1       0       0       0
  9453 ;;      Temps:          0       1       0       0       0
  9454 ;;      Totals:         0       4       0       0       0
  9455 ;;Total ram usage:        4 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    2
  9458 ;; This function calls:
  9459 ;;		_USART_putc
  9460 ;; This function is called by:
  9461 ;;		_Decodify_Command
  9462 ;;		_PROCULUS_Control_Register_Write
  9463 ;;		_PROCULUS_VP_Write
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           
  9468                           ;psect for function _USART_put_int
  9469  1BA6                     _USART_put_int:	
  9470                           
  9471                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9472                           
  9473                           ;incstack = 0
  9474                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9475  1BA6  302B               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9476  1BA7  00AD               	movwf	??_USART_put_int
  9477  1BA8  082D               	movf	??_USART_put_int,w
  9478  1BA9  00AE               	movwf	USART_put_int@dado
  9479                           
  9480                           ;usart.c: 141:      USART_putc(*(dado+1));
  9481  1BAA  0A2E               	incf	USART_put_int@dado,w
  9482  1BAB  0084               	movwf	4
  9483  1BAC  1383               	bcf	3,7	;select IRP bank0
  9484  1BAD  0800               	movf	0,w
  9485  1BAE  160A  158A  2372  160A  158A  	fcall	_USART_putc
  9486                           
  9487                           ;usart.c: 142:      USART_putc(*dado);
  9488  1BB3  1283               	bcf	3,5	;RP0=0, select bank0
  9489  1BB4  082E               	movf	USART_put_int@dado,w
  9490  1BB5  0084               	movwf	4
  9491  1BB6  1383               	bcf	3,7	;select IRP bank0
  9492  1BB7  0800               	movf	0,w
  9493  1BB8  160A  158A  2372   	fcall	_USART_putc
  9494  1BBB  0008               	return
  9495  1BBC                     __end_of_USART_put_int:	
  9496                           
  9497                           	psect	text37
  9498  1B72                     __ptext37:	
  9499 ;; *************** function _USART_putc *****************
  9500 ;; Defined at:
  9501 ;;		line 89 in file "usart.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  value           1    wreg     unsigned char 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  value           1    0[BANK0 ] unsigned char 
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 200/100
  9512 ;;		On exit  : 300/100
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9515 ;;      Params:         0       0       0       0       0
  9516 ;;      Locals:         0       1       0       0       0
  9517 ;;      Temps:          0       0       0       0       0
  9518 ;;      Totals:         0       1       0       0       0
  9519 ;;Total ram usage:        1 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    1
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_Decodify_Command
  9526 ;;		_Send_To_MB
  9527 ;;		_PROCULUS_Control_Register_Write
  9528 ;;		_PROCULUS_VP_Write
  9529 ;;		_USART_put_buffer
  9530 ;;		_USART_put_int
  9531 ;;		_USART_put_string
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function _USART_putc
  9537  1B72                     _USART_putc:	
  9538                           
  9539                           ;incstack = 0
  9540                           ; Regs used in _USART_putc: [wreg]
  9541                           ;USART_putc@value stored from wreg
  9542  1B72  1283               	bcf	3,5	;RP0=0, select bank0
  9543  1B73  00A0               	movwf	USART_putc@value
  9544                           
  9545                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  9546  1B74  3014               	movlw	20
  9547  1B75  00E6               	movwf	_Delay_Led_Usart	;volatile
  9548  1B76  3000               	movlw	0
  9549  1B77  00E7               	movwf	_Delay_Led_Usart+1	;volatile
  9550  1B78                     l867:	
  9551                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  9552                           
  9553  1B78  1683               	bsf	3,5	;RP0=1, select bank1
  9554  1B79  1C98               	btfss	24,1	;volatile
  9555  1B7A  2B78               	goto	l867
  9556                           
  9557                           ;usart.c: 93:     TXREG=value;
  9558  1B7B  1283               	bcf	3,5	;RP0=0, select bank0
  9559  1B7C  0820               	movf	USART_putc@value,w
  9560  1B7D  0099               	movwf	25	;volatile
  9561                           
  9562                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  9563  1B7E  1683               	bsf	3,5	;RP0=1, select bank1
  9564  1B7F  1698               	bsf	24,5	;volatile
  9565  1B80  0008               	return
  9566  1B81                     __end_of_USART_putc:	
  9567                           
  9568                           	psect	text38
  9569  1C23                     __ptext38:	
  9570 ;; *************** function _PROCULUS_Delay *****************
  9571 ;; Defined at:
  9572 ;;		line 267 in file "proculus.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  i               2    4[BANK0 ] unsigned int 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2
  9581 ;; Tracked objects:
  9582 ;;		On entry : 300/0
  9583 ;;		On exit  : 300/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9586 ;;      Params:         0       2       0       0       0
  9587 ;;      Locals:         0       2       0       0       0
  9588 ;;      Temps:          0       2       0       0       0
  9589 ;;      Totals:         0       6       0       0       0
  9590 ;;Total ram usage:        6 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    1
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_PROCULUS_Control_Register_Write
  9597 ;;		_PROCULUS_VP_Write
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function _PROCULUS_Delay
  9603  1C23                     _PROCULUS_Delay:	
  9604                           
  9605                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9609  1C23  01A4               	clrf	PROCULUS_Delay@i
  9610  1C24  01A5               	clrf	PROCULUS_Delay@i+1
  9611  1C25                     l787:	
  9612  1C25  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9613  1C26  0225               	subwf	PROCULUS_Delay@i+1,w
  9614  1C27  1D03               	skipz
  9615  1C28  2C2B               	goto	u2825
  9616  1C29  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9617  1C2A  0224               	subwf	PROCULUS_Delay@i,w
  9618  1C2B                     u2825:	
  9619  1C2B  1803               	btfsc	3,0
  9620  1C2C  0008               	return
  9621                           
  9622                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9623  1C2D  3003               	movlw	3
  9624  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  9625  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  9626  1C30  00A3               	movwf	??_PROCULUS_Delay+1
  9627  1C31  3097               	movlw	151
  9628  1C32  00A2               	movwf	??_PROCULUS_Delay
  9629  1C33                     u5547:	
  9630  1C33  0BA2               	decfsz	??_PROCULUS_Delay,f
  9631  1C34  2C33               	goto	u5547
  9632  1C35  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9633  1C36  2C33               	goto	u5547
  9634                           
  9635                           ;proculus.c: 270:     }
  9636  1C37  3001               	movlw	1
  9637  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  9638  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  9639  1C3A  07A4               	addwf	PROCULUS_Delay@i,f
  9640  1C3B  1803               	skipnc
  9641  1C3C  0AA5               	incf	PROCULUS_Delay@i+1,f
  9642  1C3D  3000               	movlw	0
  9643  1C3E  07A5               	addwf	PROCULUS_Delay@i+1,f
  9644  1C3F  2C25               	goto	l787
  9645  1C40                     __end_of_PROCULUS_Delay:	
  9646                           
  9647                           	psect	text39
  9648  1DF7                     __ptext39:	
  9649 ;; *************** function _EEPROM_Write_String *****************
  9650 ;; Defined at:
  9651 ;;		line 97 in file "eeprom.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  addr            1    wreg     unsigned char 
  9654 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9655 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  addr            1    7[BANK0 ] unsigned char 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 300/100
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9667 ;;      Params:         0       1       0       0       0
  9668 ;;      Locals:         0       1       0       0       0
  9669 ;;      Temps:          0       1       0       0       0
  9670 ;;      Totals:         0       3       0       0       0
  9671 ;;Total ram usage:        3 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    2
  9674 ;; This function calls:
  9675 ;;		_EEPROM_Write_Byte
  9676 ;; This function is called by:
  9677 ;;		_Decodify_Command
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _EEPROM_Write_String
  9683  1DF7                     _EEPROM_Write_String:	
  9684                           
  9685                           ;incstack = 0
  9686                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9687                           ;EEPROM_Write_String@addr stored from wreg
  9688  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  9689  1DF8  00A7               	movwf	EEPROM_Write_String@addr
  9690  1DF9                     l4561:	
  9691                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9692                           
  9693                           
  9694                           ;eeprom.c: 99:     while(*dado)
  9695  1DF9  0825               	movf	EEPROM_Write_String@dado,w
  9696  1DFA  0084               	movwf	4
  9697  1DFB  1383               	bcf	3,7	;select IRP bank0
  9698  1DFC  0800               	movf	0,w
  9699  1DFD  1903               	btfsc	3,2
  9700  1DFE  2E16               	goto	l4563
  9701                           
  9702                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9703  1DFF  0825               	movf	EEPROM_Write_String@dado,w
  9704  1E00  0084               	movwf	4
  9705  1E01  0800               	movf	0,w
  9706  1E02  00A6               	movwf	??_EEPROM_Write_String
  9707  1E03  0826               	movf	??_EEPROM_Write_String,w
  9708  1E04  00A0               	movwf	EEPROM_Write_Byte@dado
  9709  1E05  0827               	movf	EEPROM_Write_String@addr,w
  9710  1E06  160A  158A  27C5  160A  158A  	fcall	_EEPROM_Write_Byte
  9711                           
  9712                           ;eeprom.c: 102:      addr++;
  9713  1E0B  3001               	movlw	1
  9714  1E0C  1283               	bcf	3,5	;RP0=0, select bank0
  9715  1E0D  1303               	bcf	3,6	;RP1=0, select bank0
  9716  1E0E  00A6               	movwf	??_EEPROM_Write_String
  9717  1E0F  0826               	movf	??_EEPROM_Write_String,w
  9718  1E10  07A7               	addwf	EEPROM_Write_String@addr,f
  9719                           
  9720                           ;eeprom.c: 103:      dado++;
  9721  1E11  3001               	movlw	1
  9722  1E12  00A6               	movwf	??_EEPROM_Write_String
  9723  1E13  0826               	movf	??_EEPROM_Write_String,w
  9724  1E14  07A5               	addwf	EEPROM_Write_String@dado,f
  9725  1E15  2DF9               	goto	l4561
  9726  1E16                     l4563:	
  9727                           
  9728                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9729  1E16  0825               	movf	EEPROM_Write_String@dado,w
  9730  1E17  0084               	movwf	4
  9731  1E18  0800               	movf	0,w
  9732  1E19  00A6               	movwf	??_EEPROM_Write_String
  9733  1E1A  0826               	movf	??_EEPROM_Write_String,w
  9734  1E1B  00A0               	movwf	EEPROM_Write_Byte@dado
  9735  1E1C  0827               	movf	EEPROM_Write_String@addr,w
  9736  1E1D  160A  158A  27C5   	fcall	_EEPROM_Write_Byte
  9737  1E20  0008               	return
  9738  1E21                     __end_of_EEPROM_Write_String:	
  9739                           
  9740                           	psect	text40
  9741  1E52                     __ptext40:	
  9742 ;; *************** function _EEPROM_Write_Integer *****************
  9743 ;; Defined at:
  9744 ;;		line 68 in file "eeprom.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  addr            1    wreg     unsigned char 
  9747 ;;  dado            2    5[BANK0 ] unsigned int 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  addr            1   11[BANK0 ] unsigned char 
  9750 ;;  i               1   12[BANK0 ] unsigned char 
  9751 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9752 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9753 ;;  addr_memo       1    0        unsigned char 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  1    wreg      void 
  9756 ;; Registers used:
  9757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 200/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9763 ;;      Params:         0       2       0       0       0
  9764 ;;      Locals:         0       4       0       0       0
  9765 ;;      Temps:          0       2       0       0       0
  9766 ;;      Totals:         0       8       0       0       0
  9767 ;;Total ram usage:        8 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    2
  9770 ;; This function calls:
  9771 ;;		_EEPROM_Write_Byte
  9772 ;; This function is called by:
  9773 ;;		_main
  9774 ;;		_Decodify_Command
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _EEPROM_Write_Integer
  9780  1E52                     _EEPROM_Write_Integer:	
  9781                           
  9782                           ;incstack = 0
  9783                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9784                           ;EEPROM_Write_Integer@addr stored from wreg
  9785  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  9786  1E53  00AB               	movwf	EEPROM_Write_Integer@addr
  9787                           
  9788                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9789  1E54  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9790  1E55  00A7               	movwf	??_EEPROM_Write_Integer
  9791  1E56  0827               	movf	??_EEPROM_Write_Integer,w
  9792  1E57  00AA               	movwf	EEPROM_Write_Integer@ptr
  9793                           
  9794                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9795  1E58  01AC               	clrf	EEPROM_Write_Integer@i
  9796  1E59                     l4517:	
  9797                           
  9798                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9799  1E59  082A               	movf	EEPROM_Write_Integer@ptr,w
  9800  1E5A  0084               	movwf	4
  9801  1E5B  1383               	bcf	3,7	;select IRP bank0
  9802  1E5C  0800               	movf	0,w
  9803  1E5D  00A7               	movwf	??_EEPROM_Write_Integer
  9804  1E5E  0827               	movf	??_EEPROM_Write_Integer,w
  9805  1E5F  00A0               	movwf	EEPROM_Write_Byte@dado
  9806  1E60  082B               	movf	EEPROM_Write_Integer@addr,w
  9807  1E61  160A  158A  27C5  160A  158A  	fcall	_EEPROM_Write_Byte
  9808  1E66  3001               	movlw	1
  9809  1E67  1283               	bcf	3,5	;RP0=0, select bank0
  9810  1E68  1303               	bcf	3,6	;RP1=0, select bank0
  9811  1E69  00A7               	movwf	??_EEPROM_Write_Integer
  9812  1E6A  0827               	movf	??_EEPROM_Write_Integer,w
  9813  1E6B  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9814  1E6C  3001               	movlw	1
  9815  1E6D  00A7               	movwf	??_EEPROM_Write_Integer
  9816  1E6E  0827               	movf	??_EEPROM_Write_Integer,w
  9817  1E6F  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9818  1E70  3001               	movlw	1
  9819  1E71  00A7               	movwf	??_EEPROM_Write_Integer
  9820  1E72  0827               	movf	??_EEPROM_Write_Integer,w
  9821  1E73  07AC               	addwf	EEPROM_Write_Integer@i,f
  9822  1E74  3002               	movlw	2
  9823  1E75  022C               	subwf	EEPROM_Write_Integer@i,w
  9824  1E76  1C03               	skipc
  9825  1E77  2E59               	goto	l4517
  9826                           
  9827                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9828  1E78  304E               	movlw	78
  9829  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  9830  1E7A  1303               	bcf	3,6	;RP1=0, select bank0
  9831  1E7B  00A8               	movwf	??_EEPROM_Write_Integer+1
  9832  1E7C  30EA               	movlw	234
  9833  1E7D  00A7               	movwf	??_EEPROM_Write_Integer
  9834  1E7E                     u5557:	
  9835  1E7E  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9836  1E7F  2E7E               	goto	u5557
  9837  1E80  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9838  1E81  2E7E               	goto	u5557
  9839  1E82  0000               	nop
  9840  1E83  0008               	return
  9841  1E84                     __end_of_EEPROM_Write_Integer:	
  9842                           
  9843                           	psect	text41
  9844  1FC5                     __ptext41:	
  9845 ;; *************** function _EEPROM_Write_Byte *****************
  9846 ;; Defined at:
  9847 ;;		line 21 in file "eeprom.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  addr            1    wreg     unsigned char 
  9850 ;;  dado            1    0[BANK0 ] unsigned char 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;  addr            1    3[BANK0 ] unsigned char 
  9853 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0
  9858 ;; Tracked objects:
  9859 ;;		On entry : 200/100
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9863 ;;      Params:         0       1       0       0       0
  9864 ;;      Locals:         0       2       0       0       0
  9865 ;;      Temps:          0       2       0       0       0
  9866 ;;      Totals:         0       5       0       0       0
  9867 ;;Total ram usage:        5 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    1
  9870 ;; This function calls:
  9871 ;;		Nothing
  9872 ;; This function is called by:
  9873 ;;		_Decodify_Command
  9874 ;;		_EEPROM_Write_Integer
  9875 ;;		_EEPROM_Write_String
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _EEPROM_Write_Byte
  9881  1FC5                     _EEPROM_Write_Byte:	
  9882                           
  9883                           ;incstack = 0
  9884                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9885                           ;EEPROM_Write_Byte@addr stored from wreg
  9886  1FC5  1283               	bcf	3,5	;RP0=0, select bank0
  9887  1FC6  00A3               	movwf	EEPROM_Write_Byte@addr
  9888                           
  9889                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9890  1FC7  3014               	movlw	20
  9891  1FC8  00FA               	movwf	_Delay_Led_Memory	;volatile
  9892  1FC9  3000               	movlw	0
  9893  1FCA  00FB               	movwf	_Delay_Led_Memory+1	;volatile
  9894  1FCB                     l506:	
  9895                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9896                           
  9897  1FCB  1683               	bsf	3,5	;RP0=1, select bank3
  9898  1FCC  1703               	bsf	3,6	;RP1=1, select bank3
  9899  1FCD  188C               	btfsc	12,1	;volsfr
  9900  1FCE  2FCB               	goto	l506
  9901                           
  9902                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9903  1FCF  1F8B               	btfss	11,7	;volatile
  9904  1FD0  2FD6               	goto	l3867
  9905                           
  9906                           ;eeprom.c: 28:           last_GIE=1;
  9907  1FD1  1283               	bcf	3,5	;RP0=0, select bank0
  9908  1FD2  1303               	bcf	3,6	;RP1=0, select bank0
  9909  1FD3  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9910  1FD4  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9911  1FD5  2FD9               	goto	l3869
  9912  1FD6                     l3867:	
  9913                           
  9914                           ;eeprom.c: 30:           last_GIE=0;
  9915  1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  9916  1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  9917  1FD8  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9918  1FD9                     l3869:	
  9919                           
  9920                           ;eeprom.c: 32:        EEADR=addr;
  9921  1FD9  0823               	movf	EEPROM_Write_Byte@addr,w
  9922  1FDA  1703               	bsf	3,6	;RP1=1, select bank2
  9923  1FDB  008D               	movwf	13	;volatile
  9924                           
  9925                           ;eeprom.c: 33:        EEDATA=dado;
  9926  1FDC  1303               	bcf	3,6	;RP1=0, select bank0
  9927  1FDD  0820               	movf	EEPROM_Write_Byte@dado,w
  9928  1FDE  1703               	bsf	3,6	;RP1=1, select bank2
  9929  1FDF  008C               	movwf	12	;volatile
  9930                           
  9931                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9932  1FE0  1683               	bsf	3,5	;RP0=1, select bank3
  9933  1FE1  138C               	bcf	12,7	;volsfr
  9934                           
  9935                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9936  1FE2  150C               	bsf	12,2	;volsfr
  9937                           
  9938                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9939  1FE3  138B               	bcf	11,7	;volatile
  9940                           
  9941                           ;eeprom.c: 37:        EECON2=0x55;
  9942  1FE4  3055               	movlw	85
  9943  1FE5  008D               	movwf	13	;volsfr
  9944                           
  9945                           ;eeprom.c: 38:        EECON2=0xAA;
  9946  1FE6  30AA               	movlw	170
  9947  1FE7  008D               	movwf	13	;volsfr
  9948                           
  9949                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9950  1FE8  148C               	bsf	12,1	;volsfr
  9951                           
  9952                           ;eeprom.c: 41:        if(last_GIE==1)
  9953  1FE9  1283               	bcf	3,5	;RP0=0, select bank0
  9954  1FEA  1303               	bcf	3,6	;RP1=0, select bank0
  9955  1FEB  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9956  1FEC  1D03               	btfss	3,2
  9957  1FED  2FF0               	goto	l511
  9958                           
  9959                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9960  1FEE  178B               	bsf	11,7	;volatile
  9961  1FEF  2FF1               	goto	l512
  9962  1FF0                     l511:	
  9963                           ;eeprom.c: 43:        else
  9964                           
  9965                           
  9966                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9967  1FF0  138B               	bcf	11,7	;volatile
  9968  1FF1                     l512:	
  9969                           
  9970                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9971  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
  9972  1FF2  1703               	bsf	3,6	;RP1=1, select bank3
  9973  1FF3  110C               	bcf	12,2	;volsfr
  9974                           
  9975                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9976  1FF4  304E               	movlw	78
  9977  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  9978  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  9979  1FF7  00A2               	movwf	??_EEPROM_Write_Byte+1
  9980  1FF8  30EA               	movlw	234
  9981  1FF9  00A1               	movwf	??_EEPROM_Write_Byte
  9982  1FFA                     u5567:	
  9983  1FFA  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9984  1FFB  2FFA               	goto	u5567
  9985  1FFC  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9986  1FFD  2FFA               	goto	u5567
  9987  1FFE  0000               	nop
  9988  1FFF  0008               	return
  9989  2000                     __end_of_EEPROM_Write_Byte:	
  9990                           
  9991                           	psect	text42
  9992  1C9B                     __ptext42:	
  9993 ;; *************** function _EEPROM_Read_String *****************
  9994 ;; Defined at:
  9995 ;;		line 109 in file "eeprom.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  addr            1    wreg     unsigned char 
  9998 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9999 ;;		 -> texto(16), 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  addr            1    5[BANK0 ] unsigned char 
 10002 ;;  c               1    6[BANK0 ] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 300/100
 10009 ;;		On exit  : B00/800
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10012 ;;      Params:         0       1       0       0       0
 10013 ;;      Locals:         0       2       0       0       0
 10014 ;;      Temps:          0       1       0       0       0
 10015 ;;      Totals:         0       4       0       0       0
 10016 ;;Total ram usage:        4 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    2
 10019 ;; This function calls:
 10020 ;;		_EEPROM_Read_Byte
 10021 ;; This function is called by:
 10022 ;;		_Decodify_Command
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           
 10027                           ;psect for function _EEPROM_Read_String
 10028  1C9B                     _EEPROM_Read_String:	
 10029                           
 10030                           ;incstack = 0
 10031                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10032                           ;EEPROM_Read_String@addr stored from wreg
 10033  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
 10034  1C9C  00A5               	movwf	EEPROM_Read_String@addr
 10035  1C9D                     l538:	
 10036                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10037                           
 10038                           
 10039                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10040  1C9D  0825               	movf	EEPROM_Read_String@addr,w
 10041  1C9E  160A  158A  24FB  160A  158A  	fcall	_EEPROM_Read_Byte
 10042  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
 10043  1CA4  00A4               	movwf	??_EEPROM_Read_String
 10044  1CA5  0824               	movf	??_EEPROM_Read_String,w
 10045  1CA6  00A6               	movwf	EEPROM_Read_String@c
 10046  1CA7  3001               	movlw	1
 10047  1CA8  00A4               	movwf	??_EEPROM_Read_String
 10048  1CA9  0824               	movf	??_EEPROM_Read_String,w
 10049  1CAA  07A5               	addwf	EEPROM_Read_String@addr,f
 10050                           
 10051                           ;eeprom.c: 114:         *(dado++)=c;
 10052  1CAB  0826               	movf	EEPROM_Read_String@c,w
 10053  1CAC  00A4               	movwf	??_EEPROM_Read_String
 10054  1CAD  0823               	movf	EEPROM_Read_String@dado,w
 10055  1CAE  0084               	movwf	4
 10056  1CAF  0824               	movf	??_EEPROM_Read_String,w
 10057  1CB0  1783               	bsf	3,7	;select IRP bank2
 10058  1CB1  0080               	movwf	0
 10059  1CB2  3001               	movlw	1
 10060  1CB3  00A4               	movwf	??_EEPROM_Read_String
 10061  1CB4  0824               	movf	??_EEPROM_Read_String,w
 10062  1CB5  07A3               	addwf	EEPROM_Read_String@dado,f
 10063                           
 10064                           ;eeprom.c: 116:       }while(c);
 10065  1CB6  0826               	movf	EEPROM_Read_String@c,w
 10066  1CB7  1903               	btfsc	3,2
 10067  1CB8  0008               	return
 10068  1CB9  2C9D               	goto	l538
 10069  1CBA                     __end_of_EEPROM_Read_String:	
 10070                           
 10071                           	psect	text43
 10072  1DCE                     __ptext43:	
 10073 ;; *************** function _EEPROM_Read_Integer *****************
 10074 ;; Defined at:
 10075 ;;		line 81 in file "eeprom.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;  addr            1    wreg     unsigned char 
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;  addr            1    6[BANK0 ] unsigned char 
 10080 ;;  result          2    8[BANK0 ] unsigned int 
 10081 ;;  i               1   10[BANK0 ] unsigned char 
 10082 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10083 ;;		 -> EEPROM_Read_Integer@result(2), 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  2    3[BANK0 ] unsigned int 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 200/0
 10090 ;;		On exit  : B00/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10093 ;;      Params:         0       2       0       0       0
 10094 ;;      Locals:         0       5       0       0       0
 10095 ;;      Temps:          0       1       0       0       0
 10096 ;;      Totals:         0       8       0       0       0
 10097 ;;Total ram usage:        8 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    2
 10100 ;; This function calls:
 10101 ;;		_EEPROM_Read_Byte
 10102 ;; This function is called by:
 10103 ;;		_main
 10104 ;;		_Decodify_Command
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function _EEPROM_Read_Integer
 10110  1DCE                     _EEPROM_Read_Integer:	
 10111                           
 10112                           ;incstack = 0
 10113                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10114                           ;EEPROM_Read_Integer@addr stored from wreg
 10115  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
 10116  1DCF  00A6               	movwf	EEPROM_Read_Integer@addr
 10117                           
 10118                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10119  1DD0  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10120  1DD1  00A5               	movwf	??_EEPROM_Read_Integer
 10121  1DD2  0825               	movf	??_EEPROM_Read_Integer,w
 10122  1DD3  00A7               	movwf	EEPROM_Read_Integer@ptr
 10123                           
 10124                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10125  1DD4  01AA               	clrf	EEPROM_Read_Integer@i
 10126  1DD5                     l4493:	
 10127                           
 10128                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10129  1DD5  0826               	movf	EEPROM_Read_Integer@addr,w
 10130  1DD6  160A  158A  24FB  160A  158A  	fcall	_EEPROM_Read_Byte
 10131  1DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10132  1DDC  00A5               	movwf	??_EEPROM_Read_Integer
 10133  1DDD  0827               	movf	EEPROM_Read_Integer@ptr,w
 10134  1DDE  0084               	movwf	4
 10135  1DDF  0825               	movf	??_EEPROM_Read_Integer,w
 10136  1DE0  1383               	bcf	3,7	;select IRP bank0
 10137  1DE1  0080               	movwf	0
 10138  1DE2  3001               	movlw	1
 10139  1DE3  00A5               	movwf	??_EEPROM_Read_Integer
 10140  1DE4  0825               	movf	??_EEPROM_Read_Integer,w
 10141  1DE5  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10142  1DE6  3001               	movlw	1
 10143  1DE7  00A5               	movwf	??_EEPROM_Read_Integer
 10144  1DE8  0825               	movf	??_EEPROM_Read_Integer,w
 10145  1DE9  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10146  1DEA  3001               	movlw	1
 10147  1DEB  00A5               	movwf	??_EEPROM_Read_Integer
 10148  1DEC  0825               	movf	??_EEPROM_Read_Integer,w
 10149  1DED  07AA               	addwf	EEPROM_Read_Integer@i,f
 10150  1DEE  3002               	movlw	2
 10151  1DEF  022A               	subwf	EEPROM_Read_Integer@i,w
 10152  1DF0  1C03               	skipc
 10153  1DF1  2DD5               	goto	l4493
 10154                           
 10155                           ;eeprom.c: 89:       return result;
 10156  1DF2  0829               	movf	EEPROM_Read_Integer@result+1,w
 10157  1DF3  00A4               	movwf	?_EEPROM_Read_Integer+1
 10158  1DF4  0828               	movf	EEPROM_Read_Integer@result,w
 10159  1DF5  00A3               	movwf	?_EEPROM_Read_Integer
 10160  1DF6  0008               	return
 10161  1DF7                     __end_of_EEPROM_Read_Integer:	
 10162                           
 10163                           	psect	text44
 10164  1CFB                     __ptext44:	
 10165 ;; *************** function _EEPROM_Read_Byte *****************
 10166 ;; Defined at:
 10167 ;;		line 52 in file "eeprom.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  addr            1    wreg     unsigned char 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  addr            1    2[BANK0 ] unsigned char 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      unsigned char 
 10174 ;; Registers used:
 10175 ;;		wreg
 10176 ;; Tracked objects:
 10177 ;;		On entry : 200/100
 10178 ;;		On exit  : 300/200
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10181 ;;      Params:         0       0       0       0       0
 10182 ;;      Locals:         0       1       0       0       0
 10183 ;;      Temps:          0       2       0       0       0
 10184 ;;      Totals:         0       3       0       0       0
 10185 ;;Total ram usage:        3 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:    1
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_Decodify_Command
 10192 ;;		_EEPROM_Read_Integer
 10193 ;;		_EEPROM_Read_String
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           
 10198                           ;psect for function _EEPROM_Read_Byte
 10199  1CFB                     _EEPROM_Read_Byte:	
 10200                           
 10201                           ;incstack = 0
 10202                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10203                           ;EEPROM_Read_Byte@addr stored from wreg
 10204  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
 10205  1CFC  00A2               	movwf	EEPROM_Read_Byte@addr
 10206                           
 10207                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10208  1CFD  3014               	movlw	20
 10209  1CFE  00FA               	movwf	_Delay_Led_Memory	;volatile
 10210  1CFF  3000               	movlw	0
 10211  1D00  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10212  1D01                     l516:	
 10213                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10214                           
 10215  1D01  1683               	bsf	3,5	;RP0=1, select bank3
 10216  1D02  1703               	bsf	3,6	;RP1=1, select bank3
 10217  1D03  188C               	btfsc	12,1	;volsfr
 10218  1D04  2D01               	goto	l516
 10219                           
 10220                           ;eeprom.c: 57:    EEADR=addr;
 10221  1D05  1283               	bcf	3,5	;RP0=0, select bank0
 10222  1D06  1303               	bcf	3,6	;RP1=0, select bank0
 10223  1D07  0822               	movf	EEPROM_Read_Byte@addr,w
 10224  1D08  1703               	bsf	3,6	;RP1=1, select bank2
 10225  1D09  008D               	movwf	13	;volatile
 10226                           
 10227                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10228  1D0A  1683               	bsf	3,5	;RP0=1, select bank3
 10229  1D0B  138C               	bcf	12,7	;volsfr
 10230                           
 10231                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10232  1D0C  140C               	bsf	12,0	;volsfr
 10233                           
 10234                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10235  1D0D  304E               	movlw	78
 10236  1D0E  1283               	bcf	3,5	;RP0=0, select bank0
 10237  1D0F  1303               	bcf	3,6	;RP1=0, select bank0
 10238  1D10  00A1               	movwf	??_EEPROM_Read_Byte+1
 10239  1D11  30EA               	movlw	234
 10240  1D12  00A0               	movwf	??_EEPROM_Read_Byte
 10241  1D13                     u5577:	
 10242  1D13  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10243  1D14  2D13               	goto	u5577
 10244  1D15  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10245  1D16  2D13               	goto	u5577
 10246  1D17  0000               	nop
 10247                           
 10248                           ;eeprom.c: 61:    return EEDATA;
 10249  1D18  1283               	bcf	3,5	;RP0=0, select bank2
 10250  1D19  1703               	bsf	3,6	;RP1=1, select bank2
 10251  1D1A  080C               	movf	12,w	;volatile
 10252  1D1B  0008               	return
 10253  1D1C                     __end_of_EEPROM_Read_Byte:	
 10254                           
 10255                           	psect	text45
 10256  15B1                     __ptext45:	
 10257 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10258 ;; Defined at:
 10259 ;;		line 146 in file "EEPROM_24C1025.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  chip_add        1    wreg     unsigned char 
 10262 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10263 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10264 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10267 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10268 ;;  range           1   18[BANK0 ] unsigned char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 300/100
 10275 ;;		On exit  : 300/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10278 ;;      Params:         0       5       0       0       0
 10279 ;;      Locals:         0       3       0       0       0
 10280 ;;      Temps:          0       2       0       0       0
 10281 ;;      Totals:         0      10       0       0       0
 10282 ;;Total ram usage:       10 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    3
 10285 ;; This function calls:
 10286 ;;		_I2C_Master_Start
 10287 ;;		_I2C_Master_Stop
 10288 ;;		_I2C_Master_Write
 10289 ;;		_my_delay_ms_WDT
 10290 ;; This function is called by:
 10291 ;;		_Decodify_Command
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           
 10296                           ;psect for function _EEPROM_24C1025_Write_Str
 10297  15B1                     _EEPROM_24C1025_Write_Str:	
 10298                           
 10299                           ;incstack = 0
 10300                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10301                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10302  15B1  1283               	bcf	3,5	;RP0=0, select bank0
 10303  15B2  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10304                           
 10305                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
 10306  15B3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10307  15B4  1D03               	btfss	3,2
 10308  15B5  0008               	return
 10309  15B6  3002               	movlw	2
 10310  15B7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10311  15B8  1D03               	skipz
 10312  15B9  2DC2               	goto	u3923
 10313  15BA  3000               	movlw	0
 10314  15BB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10315  15BC  1D03               	skipz
 10316  15BD  2DC2               	goto	u3923
 10317  15BE  3000               	movlw	0
 10318  15BF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10319  15C0  1D03               	skipz
 10320  15C1  2DC2               	goto	u3923
 10321  15C2                     u3923:	
 10322  15C2  1803               	btfsc	3,0
 10323  15C3  0008               	return
 10324  15C4                     L9:	
 10325                           
 10326                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10327  15C4  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10328  15C5  1D03               	btfss	3,2
 10329  15C6  2DD5               	goto	l4295
 10330  15C7  3001               	movlw	1
 10331  15C8  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10332  15C9  1D03               	skipz
 10333  15CA  2DD3               	goto	u3933
 10334  15CB  3000               	movlw	0
 10335  15CC  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10336  15CD  1D03               	skipz
 10337  15CE  2DD3               	goto	u3933
 10338  15CF  3000               	movlw	0
 10339  15D0  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10340  15D1  1D03               	skipz
 10341  15D2  2DD3               	goto	u3933
 10342  15D3                     u3933:	
 10343  15D3  1C03               	btfss	3,0
 10344  15D4  2DDA               	goto	l4297
 10345  15D5                     l4295:	
 10346  15D5  3008               	movlw	8
 10347  15D6  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10348  15D7  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10349  15D8  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10350  15D9  2DDB               	goto	l4299
 10351  15DA                     l4297:	
 10352  15DA  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10353  15DB                     l4299:	
 10354                           
 10355                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
 10356  15DB  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10357  15DC  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10358  15DD  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10359  15DE  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10360                           
 10361                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
 10362  15DF  1003               	clrc
 10363  15E0  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10364                           
 10365                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
 10366  15E1  30A0               	movlw	160
 10367  15E2  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10368  15E3  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10369  15E4  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10370                           
 10371                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
 10372  15E5  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10373  15E6  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10374  15E7  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10375  15E8  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10376                           
 10377                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
 10378  15E9  160A  158A  2381  160A  118A  	fcall	_I2C_Master_Start
 10379                           
 10380                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
 10381  15EE  1283               	bcf	3,5	;RP0=0, select bank0
 10382  15EF  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10383  15F0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10384  15F1  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10385  15F2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10386  15F3  00A3               	movwf	I2C_Master_Write@d
 10387  15F4  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10388  15F5  00A4               	movwf	I2C_Master_Write@d+1
 10389  15F6  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10390                           
 10391                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
 10392  15FB  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10393  15FC  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10394  15FD  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10395  15FE  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10396  15FF  00A3               	movwf	I2C_Master_Write@d
 10397  1600  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10398  1601  00A4               	movwf	I2C_Master_Write@d+1
 10399  1602  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10400                           
 10401                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
 10402  1607  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10403  1608  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10404  1609  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10405  160A  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10406  160B  00A3               	movwf	I2C_Master_Write@d
 10407  160C  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10408  160D  00A4               	movwf	I2C_Master_Write@d+1
 10409  160E  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10410  1613                     l4359:	
 10411                           ;EEPROM_24C1025.c: 162:      while(*data)
 10412                           
 10413                           
 10414                           ;EEPROM_24C1025.c: 162:      while(*data)
 10415  1613  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10416  1614  0084               	movwf	4
 10417  1615  1383               	bcf	3,7	;select IRP bank0
 10418  1616  0800               	movf	0,w
 10419  1617  1903               	btfsc	3,2
 10420  1618  2E89               	goto	l4361
 10421  1619  0064               	clrwdt	;# 
 10422                           
 10423                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
 10424  161A  1283               	bcf	3,5	;RP0=0, select bank0
 10425  161B  1303               	bcf	3,6	;RP1=0, select bank0
 10426  161C  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10427  161D  1D03               	btfss	3,2
 10428  161E  0008               	return
 10429  161F  3002               	movlw	2
 10430  1620  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10431  1621  1D03               	skipz
 10432  1622  2E2B               	goto	u3943
 10433  1623  3000               	movlw	0
 10434  1624  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10435  1625  1D03               	skipz
 10436  1626  2E2B               	goto	u3943
 10437  1627  3000               	movlw	0
 10438  1628  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10439  1629  1D03               	skipz
 10440  162A  2E2B               	goto	u3943
 10441  162B                     u3943:	
 10442  162B  1803               	btfsc	3,0
 10443  162C  0008               	return
 10444                           
 10445                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
 10446  162D  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10447  162E  3E01               	addlw	1
 10448  162F  397F               	andlw	127
 10449  1630  1D03               	btfss	3,2
 10450  1631  2E67               	goto	l4353
 10451                           
 10452                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
 10453  1632  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10454  1633  0084               	movwf	4
 10455  1634  1383               	bcf	3,7	;select IRP bank0
 10456  1635  0800               	movf	0,w
 10457  1636  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10458  1637  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10459  1638  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10460  1639  00A3               	movwf	I2C_Master_Write@d
 10461  163A  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10462  163B  00A4               	movwf	I2C_Master_Write@d+1
 10463  163C  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10464                           
 10465                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
 10466  1641  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Stop
 10467                           
 10468                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
 10469  1646  3000               	movlw	0
 10470  1647  1283               	bcf	3,5	;RP0=0, select bank0
 10471  1648  00A3               	movwf	my_delay_ms_WDT@time+3
 10472  1649  3000               	movlw	0
 10473  164A  00A2               	movwf	my_delay_ms_WDT@time+2
 10474  164B  3000               	movlw	0
 10475  164C  00A1               	movwf	my_delay_ms_WDT@time+1
 10476  164D  3005               	movlw	5
 10477  164E  00A0               	movwf	my_delay_ms_WDT@time
 10478  164F  160A  158A  2755  160A  118A  	fcall	_my_delay_ms_WDT
 10479                           
 10480                           ;EEPROM_24C1025.c: 172:             mem_add++;
 10481  1654  3001               	movlw	1
 10482  1655  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10483  1656  3000               	movlw	0
 10484  1657  1803               	skipnc
 10485  1658  3001               	movlw	1
 10486  1659  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10487  165A  3000               	movlw	0
 10488  165B  1803               	skipnc
 10489  165C  3001               	movlw	1
 10490  165D  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10491  165E  3000               	movlw	0
 10492  165F  1803               	skipnc
 10493  1660  3001               	movlw	1
 10494  1661  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10495                           
 10496                           ;EEPROM_24C1025.c: 173:             data++;
 10497  1662  3001               	movlw	1
 10498  1663  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10499  1664  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10500  1665  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10501  1666  2DC4               	goto	L9
 10502  1667                     l4353:	
 10503                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10504                           
 10505                           
 10506                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
 10507  1667  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10508  1668  0084               	movwf	4
 10509  1669  1383               	bcf	3,7	;select IRP bank0
 10510  166A  0800               	movf	0,w
 10511  166B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10512  166C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10513  166D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10514  166E  00A3               	movwf	I2C_Master_Write@d
 10515  166F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10516  1670  00A4               	movwf	I2C_Master_Write@d+1
 10517  1671  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10518                           
 10519                           ;EEPROM_24C1025.c: 188:             data++;
 10520  1676  3001               	movlw	1
 10521  1677  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10522  1678  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10523  1679  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10524                           
 10525                           ;EEPROM_24C1025.c: 189:             mem_add++;
 10526  167A  3001               	movlw	1
 10527  167B  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10528  167C  3000               	movlw	0
 10529  167D  1803               	skipnc
 10530  167E  3001               	movlw	1
 10531  167F  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10532  1680  3000               	movlw	0
 10533  1681  1803               	skipnc
 10534  1682  3001               	movlw	1
 10535  1683  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10536  1684  3000               	movlw	0
 10537  1685  1803               	skipnc
 10538  1686  3001               	movlw	1
 10539  1687  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10540  1688  2E13               	goto	l4359
 10541  1689                     l4361:	
 10542                           
 10543                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
 10544  1689  3000               	movlw	0
 10545  168A  00A3               	movwf	I2C_Master_Write@d
 10546  168B  00A4               	movwf	I2C_Master_Write@d+1
 10547  168C  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 10548                           
 10549                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
 10550  1691  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Stop
 10551                           
 10552                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
 10553  1696  3000               	movlw	0
 10554  1697  1283               	bcf	3,5	;RP0=0, select bank0
 10555  1698  00A3               	movwf	my_delay_ms_WDT@time+3
 10556  1699  3000               	movlw	0
 10557  169A  00A2               	movwf	my_delay_ms_WDT@time+2
 10558  169B  3000               	movlw	0
 10559  169C  00A1               	movwf	my_delay_ms_WDT@time+1
 10560  169D  3005               	movlw	5
 10561  169E  00A0               	movwf	my_delay_ms_WDT@time
 10562  169F  160A  158A  2755   	fcall	_my_delay_ms_WDT
 10563  16A2  0008               	return
 10564  16A3                     __end_of_EEPROM_24C1025_Write_Str:	
 10565                           
 10566                           	psect	text46
 10567  1B91                     __ptext46:	
 10568 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10569 ;; Defined at:
 10570 ;;		line 268 in file "EEPROM_24C1025.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  chip_add        1    wreg     unsigned char 
 10573 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10574 ;;  data            1   26[BANK0 ] unsigned char 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10581 ;; Tracked objects:
 10582 ;;		On entry : 300/100
 10583 ;;		On exit  : 300/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10586 ;;      Params:         0       5       0       0       0
 10587 ;;      Locals:         0       1       0       0       0
 10588 ;;      Temps:          0       1       0       0       0
 10589 ;;      Totals:         0       7       0       0       0
 10590 ;;Total ram usage:        7 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    4
 10593 ;; This function calls:
 10594 ;;		_EEPROM_24C1025_Write_Buffer
 10595 ;; This function is called by:
 10596 ;;		_Decodify_Command
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _EEPROM_24C1025_Write_Byte
 10602  1B91                     _EEPROM_24C1025_Write_Byte:	
 10603                           
 10604                           ;incstack = 0
 10605                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10606                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10607  1B91  1283               	bcf	3,5	;RP0=0, select bank0
 10608  1B92  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10609                           
 10610                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10611  1B93  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10612  1B94  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10613  1B95  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10614  1B96  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10615  1B97  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10616  1B98  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10617  1B99  0836               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10618  1B9A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10619  1B9B  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10620  1B9C  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10621  1B9D  303A               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10622  1B9E  00BB               	movwf	??_EEPROM_24C1025_Write_Byte
 10623  1B9F  083B               	movf	??_EEPROM_24C1025_Write_Byte,w
 10624  1BA0  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10625  1BA1  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10626  1BA2  160A  118A  26A3   	fcall	_EEPROM_24C1025_Write_Buffer
 10627  1BA5  0008               	return
 10628  1BA6                     __end_of_EEPROM_24C1025_Write_Byte:	
 10629                           
 10630                           	psect	text47
 10631  094B                     __ptext47:	
 10632 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10633 ;; Defined at:
 10634 ;;		line 201 in file "EEPROM_24C1025.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  chip_add        1    wreg     unsigned char 
 10637 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10638 ;;  texto           1   14[BANK0 ] PTR unsigned char 
 10639 ;;		 -> texto(16), 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10642 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10643 ;;  range           1   19[BANK0 ] unsigned char 
 10644 ;;  cnt             1   17[BANK0 ] unsigned char 
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  1    wreg      void 
 10647 ;; Registers used:
 10648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10649 ;; Tracked objects:
 10650 ;;		On entry : 300/100
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10654 ;;      Params:         0       5       0       0       0
 10655 ;;      Locals:         0       4       0       0       0
 10656 ;;      Temps:          0       2       0       0       0
 10657 ;;      Totals:         0      11       0       0       0
 10658 ;;Total ram usage:       11 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; Hardware stack levels required when called:    3
 10661 ;; This function calls:
 10662 ;;		_I2C_Master_Read
 10663 ;;		_I2C_Master_RepeatedStart
 10664 ;;		_I2C_Master_Start
 10665 ;;		_I2C_Master_Stop
 10666 ;;		_I2C_Master_Write
 10667 ;;		_my_delay_ms_WDT
 10668 ;; This function is called by:
 10669 ;;		_Decodify_Command
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _EEPROM_24C1025_Read_Str
 10675  094B                     _EEPROM_24C1025_Read_Str:	
 10676                           
 10677                           ;incstack = 0
 10678                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10679                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10680  094B  1283               	bcf	3,5	;RP0=0, select bank0
 10681  094C  00B2               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10682                           
 10683                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
 10684  094D  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10685                           
 10686                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
 10687  094E  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10688  094F  1D03               	btfss	3,2
 10689  0950  0008               	return
 10690  0951  3002               	movlw	2
 10691  0952  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10692  0953  1D03               	skipz
 10693  0954  295D               	goto	u3983
 10694  0955  3000               	movlw	0
 10695  0956  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10696  0957  1D03               	skipz
 10697  0958  295D               	goto	u3983
 10698  0959  3000               	movlw	0
 10699  095A  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10700  095B  1D03               	skipz
 10701  095C  295D               	goto	u3983
 10702  095D                     u3983:	
 10703  095D  1803               	btfsc	3,0
 10704  095E  0008               	return
 10705                           
 10706                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10707  095F  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10708  0960  1D03               	btfss	3,2
 10709  0961  2970               	goto	l4373
 10710  0962  3001               	movlw	1
 10711  0963  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10712  0964  1D03               	skipz
 10713  0965  296E               	goto	u3993
 10714  0966  3000               	movlw	0
 10715  0967  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10716  0968  1D03               	skipz
 10717  0969  296E               	goto	u3993
 10718  096A  3000               	movlw	0
 10719  096B  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10720  096C  1D03               	skipz
 10721  096D  296E               	goto	u3993
 10722  096E                     u3993:	
 10723  096E  1C03               	btfss	3,0
 10724  096F  2975               	goto	l4375
 10725  0970                     l4373:	
 10726  0970  3008               	movlw	8
 10727  0971  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10728  0972  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10729  0973  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 10730  0974  2976               	goto	l4377
 10731  0975                     l4375:	
 10732  0975  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10733  0976                     l4377:	
 10734                           
 10735                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
 10736  0976  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10737  0977  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10738  0978  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10739  0979  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10740                           
 10741                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
 10742  097A  1003               	clrc
 10743  097B  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10744                           
 10745                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
 10746  097C  30A0               	movlw	160
 10747  097D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10748  097E  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10749  097F  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10750                           
 10751                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
 10752  0980  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10753                           
 10754                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
 10755  0981  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 10756  0982  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10757  0983  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10758  0984  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10759                           
 10760                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
 10761  0985  160A  158A  2381  120A  158A  	fcall	_I2C_Master_Start
 10762                           
 10763                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
 10764  098A  1283               	bcf	3,5	;RP0=0, select bank0
 10765  098B  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10766  098C  39FE               	andlw	254
 10767  098D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10768  098E  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10769  098F  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10770  0990  00A3               	movwf	I2C_Master_Write@d
 10771  0991  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10772  0992  00A4               	movwf	I2C_Master_Write@d+1
 10773  0993  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10774                           
 10775                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
 10776  0998  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10777  0999  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10778  099A  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10779  099B  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10780  099C  00A3               	movwf	I2C_Master_Write@d
 10781  099D  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10782  099E  00A4               	movwf	I2C_Master_Write@d+1
 10783  099F  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10784                           
 10785                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
 10786  09A4  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10787  09A5  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10788  09A6  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10789  09A7  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10790  09A8  00A3               	movwf	I2C_Master_Write@d
 10791  09A9  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10792  09AA  00A4               	movwf	I2C_Master_Write@d+1
 10793  09AB  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10794                           
 10795                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
 10796  09B0  160A  158A  2367  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10797                           
 10798                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
 10799  09B5  1283               	bcf	3,5	;RP0=0, select bank0
 10800  09B6  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10801  09B7  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10802  09B8  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10803  09B9  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10804  09BA  00A3               	movwf	I2C_Master_Write@d
 10805  09BB  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10806  09BC  00A4               	movwf	I2C_Master_Write@d+1
 10807  09BD  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10808                           
 10809                           ;EEPROM_24C1025.c: 222:      cnt=0;
 10810  09C2  01B1               	clrf	EEPROM_24C1025_Read_Str@cnt
 10811  09C3                     l69:	
 10812                           ;EEPROM_24C1025.c: 223:      do{
 10813                           
 10814  09C3  0064               	clrwdt	;# 
 10815                           
 10816                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10817  09C4  1283               	bcf	3,5	;RP0=0, select bank0
 10818  09C5  1303               	bcf	3,6	;RP1=0, select bank0
 10819  09C6  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10820  09C7  1D03               	btfss	3,2
 10821  09C8  2AA4               	goto	l4455
 10822  09C9  3002               	movlw	2
 10823  09CA  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10824  09CB  1D03               	skipz
 10825  09CC  29D5               	goto	u4003
 10826  09CD  3000               	movlw	0
 10827  09CE  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10828  09CF  1D03               	skipz
 10829  09D0  29D5               	goto	u4003
 10830  09D1  3000               	movlw	0
 10831  09D2  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10832  09D3  1D03               	skipz
 10833  09D4  29D5               	goto	u4003
 10834  09D5                     u4003:	
 10835  09D5  1803               	btfsc	3,0
 10836  09D6  2AA4               	goto	l4455
 10837                           
 10838                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10839  09D7  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10840  09D8  3E01               	addlw	1
 10841  09D9  397F               	andlw	127
 10842  09DA  1D03               	btfss	3,2
 10843  09DB  2A74               	goto	l4443
 10844                           
 10845                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
 10846  09DC  3000               	movlw	0
 10847  09DD  00A3               	movwf	I2C_Master_Read@a
 10848  09DE  00A4               	movwf	I2C_Master_Read@a+1
 10849  09DF  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 10850  09E4  0823               	movf	?_I2C_Master_Read,w
 10851  09E5  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10852  09E6  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 10853  09E7  0084               	movwf	4
 10854  09E8  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10855  09E9  1783               	bsf	3,7	;select IRP bank2
 10856  09EA  0080               	movwf	0
 10857                           
 10858                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10859  09EB  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Stop
 10860                           
 10861                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
 10862  09F0  3000               	movlw	0
 10863  09F1  1283               	bcf	3,5	;RP0=0, select bank0
 10864  09F2  00A3               	movwf	my_delay_ms_WDT@time+3
 10865  09F3  3000               	movlw	0
 10866  09F4  00A2               	movwf	my_delay_ms_WDT@time+2
 10867  09F5  3000               	movlw	0
 10868  09F6  00A1               	movwf	my_delay_ms_WDT@time+1
 10869  09F7  3005               	movlw	5
 10870  09F8  00A0               	movwf	my_delay_ms_WDT@time
 10871  09F9  160A  158A  2755  120A  158A  	fcall	_my_delay_ms_WDT
 10872                           
 10873                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10874  09FE  3001               	movlw	1
 10875  09FF  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10876  0A00  3000               	movlw	0
 10877  0A01  1803               	skipnc
 10878  0A02  3001               	movlw	1
 10879  0A03  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10880  0A04  3000               	movlw	0
 10881  0A05  1803               	skipnc
 10882  0A06  3001               	movlw	1
 10883  0A07  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10884  0A08  3000               	movlw	0
 10885  0A09  1803               	skipnc
 10886  0A0A  3001               	movlw	1
 10887  0A0B  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10888                           
 10889                           ;EEPROM_24C1025.c: 233:              texto++;
 10890  0A0C  3001               	movlw	1
 10891  0A0D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10892  0A0E  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10893  0A0F  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 10894                           
 10895                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10896  0A10  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10897  0A11  1D03               	btfss	3,2
 10898  0A12  2A21               	goto	l4417
 10899  0A13  3001               	movlw	1
 10900  0A14  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10901  0A15  1D03               	skipz
 10902  0A16  2A1F               	goto	u4023
 10903  0A17  3000               	movlw	0
 10904  0A18  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10905  0A19  1D03               	skipz
 10906  0A1A  2A1F               	goto	u4023
 10907  0A1B  3000               	movlw	0
 10908  0A1C  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10909  0A1D  1D03               	skipz
 10910  0A1E  2A1F               	goto	u4023
 10911  0A1F                     u4023:	
 10912  0A1F  1C03               	btfss	3,0
 10913  0A20  2A26               	goto	l4419
 10914  0A21                     l4417:	
 10915  0A21  3008               	movlw	8
 10916  0A22  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10917  0A23  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10918  0A24  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 10919  0A25  2A27               	goto	l4421
 10920  0A26                     l4419:	
 10921  0A26  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 10922  0A27                     l4421:	
 10923                           
 10924                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10925  0A27  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10926  0A28  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10927  0A29  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10928  0A2A  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10929                           
 10930                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10931  0A2B  1003               	clrc
 10932  0A2C  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10933                           
 10934                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10935  0A2D  30A0               	movlw	160
 10936  0A2E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10937  0A2F  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10938  0A30  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10939                           
 10940                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10941  0A31  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10942                           
 10943                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10944  0A32  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 10945  0A33  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10946  0A34  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10947  0A35  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10948                           
 10949                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10950  0A36  160A  158A  2381  120A  158A  	fcall	_I2C_Master_Start
 10951                           
 10952                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10953  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
 10954  0A3C  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10955  0A3D  39FE               	andlw	254
 10956  0A3E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10957  0A3F  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10958  0A40  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10959  0A41  00A3               	movwf	I2C_Master_Write@d
 10960  0A42  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10961  0A43  00A4               	movwf	I2C_Master_Write@d+1
 10962  0A44  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10963                           
 10964                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10965  0A49  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10966  0A4A  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10967  0A4B  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10968  0A4C  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10969  0A4D  00A3               	movwf	I2C_Master_Write@d
 10970  0A4E  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10971  0A4F  00A4               	movwf	I2C_Master_Write@d+1
 10972  0A50  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10973                           
 10974                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10975  0A55  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10976  0A56  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10977  0A57  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10978  0A58  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10979  0A59  00A3               	movwf	I2C_Master_Write@d
 10980  0A5A  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10981  0A5B  00A4               	movwf	I2C_Master_Write@d+1
 10982  0A5C  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10983                           
 10984                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10985  0A61  160A  158A  2367  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10986                           
 10987                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 10988  0A66  1283               	bcf	3,5	;RP0=0, select bank0
 10989  0A67  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10990  0A68  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 10991  0A69  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 10992  0A6A  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 10993  0A6B  00A3               	movwf	I2C_Master_Write@d
 10994  0A6C  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10995  0A6D  00A4               	movwf	I2C_Master_Write@d+1
 10996  0A6E  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 10997                           
 10998                           ;EEPROM_24C1025.c: 247:              }
 10999  0A73  2A9B               	goto	l4453
 11000  0A74                     l4443:	
 11001                           
 11002                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
 11003  0A74  3001               	movlw	1
 11004  0A75  00A3               	movwf	I2C_Master_Read@a
 11005  0A76  3000               	movlw	0
 11006  0A77  00A4               	movwf	I2C_Master_Read@a+1
 11007  0A78  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 11008  0A7D  0823               	movf	?_I2C_Master_Read,w
 11009  0A7E  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11010  0A7F  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 11011  0A80  0084               	movwf	4
 11012  0A81  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11013  0A82  1783               	bsf	3,7	;select IRP bank2
 11014  0A83  0080               	movwf	0
 11015                           
 11016                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
 11017  0A84  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 11018  0A85  0084               	movwf	4
 11019  0A86  0800               	movf	0,w
 11020  0A87  1903               	btfsc	3,2
 11021  0A88  2AA4               	goto	l4455
 11022                           
 11023                           ;EEPROM_24C1025.c: 252:              texto++;
 11024  0A89  3001               	movlw	1
 11025  0A8A  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11026  0A8B  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11027  0A8C  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11028                           
 11029                           ;EEPROM_24C1025.c: 253:              mem_add++;
 11030  0A8D  3001               	movlw	1
 11031  0A8E  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11032  0A8F  3000               	movlw	0
 11033  0A90  1803               	skipnc
 11034  0A91  3001               	movlw	1
 11035  0A92  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11036  0A93  3000               	movlw	0
 11037  0A94  1803               	skipnc
 11038  0A95  3001               	movlw	1
 11039  0A96  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11040  0A97  3000               	movlw	0
 11041  0A98  1803               	skipnc
 11042  0A99  3001               	movlw	1
 11043  0A9A  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11044  0A9B                     l4453:	
 11045                           
 11046                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 11047  0A9B  3001               	movlw	1
 11048  0A9C  07B1               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11049  0A9D  30FF               	movlw	-1
 11050  0A9E  0731               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11051  0A9F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11052  0AA0  3040               	movlw	64
 11053  0AA1  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
 11054  0AA2  1C03               	skipc
 11055  0AA3  29C3               	goto	l69
 11056  0AA4                     l4455:	
 11057                           
 11058                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 11059  0AA4  3000               	movlw	0
 11060  0AA5  00A3               	movwf	I2C_Master_Read@a
 11061  0AA6  00A4               	movwf	I2C_Master_Read@a+1
 11062  0AA7  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 11063                           
 11064                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 11065  0AAC  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Stop
 11066                           
 11067                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11068  0AB1  30B9               	movlw	185
 11069  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
 11070  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
 11071  0AB4  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11072  0AB5                     u5587:	
 11073  0AB5  2AB6               	nop2
 11074  0AB6  2AB7               	nop2
 11075  0AB7  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11076  0AB8  2AB5               	goto	u5587
 11077  0AB9  2ABA               	nop2
 11078  0ABA  0008               	return
 11079  0ABB                     __end_of_EEPROM_24C1025_Read_Str:	
 11080                           
 11081                           	psect	text48
 11082  07D9                     __ptext48:	
 11083 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11084 ;; Defined at:
 11085 ;;		line 287 in file "EEPROM_24C1025.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  chip_add        1    wreg     unsigned char 
 11088 ;;  mem_add         4   24[BANK0 ] unsigned long 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  chip_add        1   30[BANK0 ] unsigned char 
 11091 ;;  data            2   31[BANK0 ] unsigned char [2]
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2   24[BANK0 ] unsigned int 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 300/100
 11098 ;;		On exit  : 300/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11101 ;;      Params:         0       4       0       0       0
 11102 ;;      Locals:         0       3       0       0       0
 11103 ;;      Temps:          0       2       0       0       0
 11104 ;;      Totals:         0       9       0       0       0
 11105 ;;Total ram usage:        9 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    4
 11108 ;; This function calls:
 11109 ;;		_EEPROM_24C1025_Read_Buffer
 11110 ;; This function is called by:
 11111 ;;		_Decodify_Command
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _EEPROM_24C1025_Read_Int
 11117  07D9                     _EEPROM_24C1025_Read_Int:	
 11118                           
 11119                           ;incstack = 0
 11120                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11121                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11122  07D9  1283               	bcf	3,5	;RP0=0, select bank0
 11123  07DA  00BE               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11124                           
 11125                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11126  07DB  083B               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11127  07DC  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11128  07DD  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11129  07DE  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11130  07DF  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11131  07E0  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11132  07E1  0838               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11133  07E2  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11134  07E3  3002               	movlw	2
 11135  07E4  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 11136  07E5  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 11137  07E6  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11138  07E7  303F               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11139  07E8  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11140  07E9  3000               	movlw	0
 11141  07EA  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11142  07EB  083E               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11143  07EC  120A  158A  22BB   	fcall	_EEPROM_24C1025_Read_Buffer
 11144                           
 11145                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 11146  07EF  1283               	bcf	3,5	;RP0=0, select bank0
 11147  07F0  1303               	bcf	3,6	;RP1=0, select bank0
 11148  07F1  083F               	movf	EEPROM_24C1025_Read_Int@data,w
 11149  07F2  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 11150  07F3  01BD               	clrf	??_EEPROM_24C1025_Read_Int+1
 11151  07F4  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 11152  07F5  00BD               	movwf	??_EEPROM_24C1025_Read_Int+1
 11153  07F6  01BC               	clrf	??_EEPROM_24C1025_Read_Int
 11154  07F7  0840               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11155  07F8  073C               	addwf	??_EEPROM_24C1025_Read_Int,w
 11156  07F9  00B8               	movwf	?_EEPROM_24C1025_Read_Int
 11157  07FA  3000               	movlw	0
 11158  07FB  1803               	skipnc
 11159  07FC  3001               	movlw	1
 11160  07FD  073D               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11161  07FE  00B9               	movwf	?_EEPROM_24C1025_Read_Int+1
 11162  07FF  0008               	return
 11163  0800                     __end_of_EEPROM_24C1025_Read_Int:	
 11164                           
 11165                           	psect	text49
 11166  1BBC                     __ptext49:	
 11167 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11168 ;; Defined at:
 11169 ;;		line 273 in file "EEPROM_24C1025.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  chip_add        1    wreg     unsigned char 
 11172 ;;  mem_add         4   24[BANK0 ] unsigned long 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11175 ;;  data            1   29[BANK0 ] unsigned char 
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      unsigned char 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 300/100
 11182 ;;		On exit  : 300/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11185 ;;      Params:         0       4       0       0       0
 11186 ;;      Locals:         0       2       0       0       0
 11187 ;;      Temps:          0       0       0       0       0
 11188 ;;      Totals:         0       6       0       0       0
 11189 ;;Total ram usage:        6 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    4
 11192 ;; This function calls:
 11193 ;;		_EEPROM_24C1025_Read_Buffer
 11194 ;; This function is called by:
 11195 ;;		_Decodify_Command
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           
 11200                           ;psect for function _EEPROM_24C1025_Read_Byte
 11201  1BBC                     _EEPROM_24C1025_Read_Byte:	
 11202                           
 11203                           ;incstack = 0
 11204                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11205                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11206  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
 11207  1BBD  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11208                           
 11209                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11210  1BBE  083B               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11211  1BBF  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11212  1BC0  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11213  1BC1  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11214  1BC2  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11215  1BC3  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11216  1BC4  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11217  1BC5  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11218  1BC6  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11219  1BC7  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11220  1BC8  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11221  1BC9  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11222  1BCA  3000               	movlw	0
 11223  1BCB  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11224  1BCC  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11225  1BCD  120A  158A  22BB   	fcall	_EEPROM_24C1025_Read_Buffer
 11226                           
 11227                           ;EEPROM_24C1025.c: 276:     return data;
 11228  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
 11229  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
 11230  1BD2  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11231  1BD3  0008               	return
 11232  1BD4                     __end_of_EEPROM_24C1025_Read_Byte:	
 11233                           
 11234                           	psect	text50
 11235  0ABB                     __ptext50:	
 11236 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11237 ;; Defined at:
 11238 ;;		line 77 in file "EEPROM_24C1025.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  chip_add        1    wreg     unsigned char 
 11241 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11242 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11243 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11244 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11247 ;;  cnt             1   20[BANK0 ] unsigned char 
 11248 ;;  ctrl            1   23[BANK0 ] unsigned char 
 11249 ;;  range           1   22[BANK0 ] unsigned char 
 11250 ;;  cnt             1    0        unsigned char 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      void 
 11253 ;; Registers used:
 11254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11255 ;; Tracked objects:
 11256 ;;		On entry : 200/100
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11260 ;;      Params:         0       7       0       0       0
 11261 ;;      Locals:         0       5       0       0       0
 11262 ;;      Temps:          0       2       0       0       0
 11263 ;;      Totals:         0      14       0       0       0
 11264 ;;Total ram usage:       14 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:    3
 11267 ;; This function calls:
 11268 ;;		_I2C_Master_Read
 11269 ;;		_I2C_Master_RepeatedStart
 11270 ;;		_I2C_Master_Start
 11271 ;;		_I2C_Master_Stop
 11272 ;;		_I2C_Master_Write
 11273 ;;		_my_delay_ms_WDT
 11274 ;; This function is called by:
 11275 ;;		_EEPROM_24C1025_Read_Byte
 11276 ;;		_EEPROM_24C1025_Read_Int
 11277 ;;		_Decodify_Command
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281                           
 11282                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11283  0ABB                     _EEPROM_24C1025_Read_Buffer:	
 11284                           
 11285                           ;incstack = 0
 11286                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11287                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11288  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
 11289  0ABC  00B5               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11290                           
 11291                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11292  0ABD  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11293                           
 11294                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11295  0ABE  3014               	movlw	20
 11296  0ABF  00FA               	movwf	_Delay_Led_Memory	;volatile
 11297  0AC0  3000               	movlw	0
 11298  0AC1  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11299                           
 11300                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11301  0AC2  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11302  0AC3  1D03               	btfss	3,2
 11303  0AC4  0008               	return
 11304  0AC5  3002               	movlw	2
 11305  0AC6  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11306  0AC7  1D03               	skipz
 11307  0AC8  2AD1               	goto	u5313
 11308  0AC9  3000               	movlw	0
 11309  0ACA  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11310  0ACB  1D03               	skipz
 11311  0ACC  2AD1               	goto	u5313
 11312  0ACD  3000               	movlw	0
 11313  0ACE  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11314  0ACF  1D03               	skipz
 11315  0AD0  2AD1               	goto	u5313
 11316  0AD1                     u5313:	
 11317  0AD1  1803               	btfsc	3,0
 11318  0AD2  0008               	return
 11319                           
 11320                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11321  0AD3  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11322  0AD4  1D03               	btfss	3,2
 11323  0AD5  2AE4               	goto	l5561
 11324  0AD6  3001               	movlw	1
 11325  0AD7  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11326  0AD8  1D03               	skipz
 11327  0AD9  2AE2               	goto	u5323
 11328  0ADA  3000               	movlw	0
 11329  0ADB  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11330  0ADC  1D03               	skipz
 11331  0ADD  2AE2               	goto	u5323
 11332  0ADE  3000               	movlw	0
 11333  0ADF  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11334  0AE0  1D03               	skipz
 11335  0AE1  2AE2               	goto	u5323
 11336  0AE2                     u5323:	
 11337  0AE2  1C03               	btfss	3,0
 11338  0AE3  2AE9               	goto	l5563
 11339  0AE4                     l5561:	
 11340  0AE4  3008               	movlw	8
 11341  0AE5  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11342  0AE6  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11343  0AE7  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 11344  0AE8  2AEA               	goto	l5565
 11345  0AE9                     l5563:	
 11346  0AE9  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11347  0AEA                     l5565:	
 11348                           
 11349                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11350  0AEA  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11351  0AEB  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11352  0AEC  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11353  0AED  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11354                           
 11355                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11356  0AEE  1003               	clrc
 11357  0AEF  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11358                           
 11359                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11360  0AF0  30A0               	movlw	160
 11361  0AF1  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11362  0AF2  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11363  0AF3  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11364                           
 11365                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11366  0AF4  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11367                           
 11368                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11369  0AF5  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11370  0AF6  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11371  0AF7  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11372  0AF8  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11373                           
 11374                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11375  0AF9  160A  158A  2381  120A  158A  	fcall	_I2C_Master_Start
 11376                           
 11377                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11378  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
 11379  0AFF  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11380  0B00  39FE               	andlw	254
 11381  0B01  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11382  0B02  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11383  0B03  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11384  0B04  00A3               	movwf	I2C_Master_Write@d
 11385  0B05  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11386  0B06  00A4               	movwf	I2C_Master_Write@d+1
 11387  0B07  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11388                           
 11389                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11390  0B0C  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11391  0B0D  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11392  0B0E  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11393  0B0F  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11394  0B10  00A3               	movwf	I2C_Master_Write@d
 11395  0B11  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11396  0B12  00A4               	movwf	I2C_Master_Write@d+1
 11397  0B13  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11398                           
 11399                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11400  0B18  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11401  0B19  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11402  0B1A  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11403  0B1B  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11404  0B1C  00A3               	movwf	I2C_Master_Write@d
 11405  0B1D  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11406  0B1E  00A4               	movwf	I2C_Master_Write@d+1
 11407  0B1F  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11408                           
 11409                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11410  0B24  160A  158A  2367  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11411                           
 11412                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11413  0B29  1283               	bcf	3,5	;RP0=0, select bank0
 11414  0B2A  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11415  0B2B  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11416  0B2C  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11417  0B2D  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11418  0B2E  00A3               	movwf	I2C_Master_Write@d
 11419  0B2F  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11420  0B30  00A4               	movwf	I2C_Master_Write@d+1
 11421  0B31  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11422                           
 11423                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11424  0B36  01B4               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 11425  0B37                     l5639:	
 11426  0B37  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11427  0B38  0234               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 11428  0B39  1803               	btfsc	3,0
 11429  0B3A  2C1B               	goto	l5641
 11430  0B3B  0064               	clrwdt	;# 
 11431                           
 11432                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11433  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
 11434  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
 11435  0B3E  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11436  0B3F  1D03               	btfss	3,2
 11437  0B40  2C1B               	goto	l5641
 11438  0B41  3002               	movlw	2
 11439  0B42  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11440  0B43  1D03               	skipz
 11441  0B44  2B4D               	goto	u5333
 11442  0B45  3000               	movlw	0
 11443  0B46  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11444  0B47  1D03               	skipz
 11445  0B48  2B4D               	goto	u5333
 11446  0B49  3000               	movlw	0
 11447  0B4A  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11448  0B4B  1D03               	skipz
 11449  0B4C  2B4D               	goto	u5333
 11450  0B4D                     u5333:	
 11451  0B4D  1803               	btfsc	3,0
 11452  0B4E  2C1B               	goto	l5641
 11453                           
 11454                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11455  0B4F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11456  0B50  3E01               	addlw	1
 11457  0B51  397F               	andlw	127
 11458  0B52  1D03               	btfss	3,2
 11459  0B53  2BF0               	goto	l5631
 11460                           
 11461                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11462  0B54  3000               	movlw	0
 11463  0B55  00A3               	movwf	I2C_Master_Read@a
 11464  0B56  00A4               	movwf	I2C_Master_Read@a+1
 11465  0B57  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 11466  0B5C  0823               	movf	?_I2C_Master_Read,w
 11467  0B5D  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11468  0B5E  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11469  0B5F  0084               	movwf	4
 11470  0B60  1783               	bsf	3,7
 11471  0B61  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 11472  0B62  1383               	bcf	3,7
 11473  0B63  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11474  0B64  0080               	movwf	0
 11475                           
 11476                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11477  0B65  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Stop
 11478                           
 11479                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11480  0B6A  3000               	movlw	0
 11481  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
 11482  0B6C  00A3               	movwf	my_delay_ms_WDT@time+3
 11483  0B6D  3000               	movlw	0
 11484  0B6E  00A2               	movwf	my_delay_ms_WDT@time+2
 11485  0B6F  3000               	movlw	0
 11486  0B70  00A1               	movwf	my_delay_ms_WDT@time+1
 11487  0B71  3005               	movlw	5
 11488  0B72  00A0               	movwf	my_delay_ms_WDT@time
 11489  0B73  160A  158A  2755  120A  158A  	fcall	_my_delay_ms_WDT
 11490                           
 11491                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11492  0B78  3001               	movlw	1
 11493  0B79  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11494  0B7A  3000               	movlw	0
 11495  0B7B  1803               	skipnc
 11496  0B7C  3001               	movlw	1
 11497  0B7D  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11498  0B7E  3000               	movlw	0
 11499  0B7F  1803               	skipnc
 11500  0B80  3001               	movlw	1
 11501  0B81  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11502  0B82  3000               	movlw	0
 11503  0B83  1803               	skipnc
 11504  0B84  3001               	movlw	1
 11505  0B85  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11506                           
 11507                           ;EEPROM_24C1025.c: 115:              data++;
 11508  0B86  3001               	movlw	1
 11509  0B87  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11510  0B88  1803               	skipnc
 11511  0B89  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11512  0B8A  3000               	movlw	0
 11513  0B8B  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 11514                           
 11515                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11516  0B8C  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11517  0B8D  1D03               	btfss	3,2
 11518  0B8E  2B9D               	goto	l5605
 11519  0B8F  3001               	movlw	1
 11520  0B90  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11521  0B91  1D03               	skipz
 11522  0B92  2B9B               	goto	u5353
 11523  0B93  3000               	movlw	0
 11524  0B94  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11525  0B95  1D03               	skipz
 11526  0B96  2B9B               	goto	u5353
 11527  0B97  3000               	movlw	0
 11528  0B98  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11529  0B99  1D03               	skipz
 11530  0B9A  2B9B               	goto	u5353
 11531  0B9B                     u5353:	
 11532  0B9B  1C03               	btfss	3,0
 11533  0B9C  2BA2               	goto	l5607
 11534  0B9D                     l5605:	
 11535  0B9D  3008               	movlw	8
 11536  0B9E  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11537  0B9F  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11538  0BA0  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 11539  0BA1  2BA3               	goto	l5609
 11540  0BA2                     l5607:	
 11541  0BA2  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 11542  0BA3                     l5609:	
 11543                           
 11544                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11545  0BA3  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11546  0BA4  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11547  0BA5  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11548  0BA6  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11549                           
 11550                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11551  0BA7  1003               	clrc
 11552  0BA8  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11553                           
 11554                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11555  0BA9  30A0               	movlw	160
 11556  0BAA  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11557  0BAB  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11558  0BAC  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11559                           
 11560                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11561  0BAD  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11562                           
 11563                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11564  0BAE  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11565  0BAF  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11566  0BB0  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11567  0BB1  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11568                           
 11569                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11570  0BB2  160A  158A  2381  120A  158A  	fcall	_I2C_Master_Start
 11571                           
 11572                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11573  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
 11574  0BB8  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11575  0BB9  39FE               	andlw	254
 11576  0BBA  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11577  0BBB  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11578  0BBC  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11579  0BBD  00A3               	movwf	I2C_Master_Write@d
 11580  0BBE  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11581  0BBF  00A4               	movwf	I2C_Master_Write@d+1
 11582  0BC0  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11583                           
 11584                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11585  0BC5  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11586  0BC6  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11587  0BC7  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11588  0BC8  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11589  0BC9  00A3               	movwf	I2C_Master_Write@d
 11590  0BCA  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11591  0BCB  00A4               	movwf	I2C_Master_Write@d+1
 11592  0BCC  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11593                           
 11594                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11595  0BD1  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11596  0BD2  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11597  0BD3  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11598  0BD4  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11599  0BD5  00A3               	movwf	I2C_Master_Write@d
 11600  0BD6  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11601  0BD7  00A4               	movwf	I2C_Master_Write@d+1
 11602  0BD8  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11603                           
 11604                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11605  0BDD  160A  158A  2367  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11606                           
 11607                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11608  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
 11609  0BE3  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11610  0BE4  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11611  0BE5  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11612  0BE6  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11613  0BE7  00A3               	movwf	I2C_Master_Write@d
 11614  0BE8  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11615  0BE9  00A4               	movwf	I2C_Master_Write@d+1
 11616  0BEA  160A  158A  235C  120A  158A  	fcall	_I2C_Master_Write
 11617                           
 11618                           ;EEPROM_24C1025.c: 129:              }
 11619  0BEF  2C16               	goto	l5637
 11620  0BF0                     l5631:	
 11621                           
 11622                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11623  0BF0  3001               	movlw	1
 11624  0BF1  00A3               	movwf	I2C_Master_Read@a
 11625  0BF2  3000               	movlw	0
 11626  0BF3  00A4               	movwf	I2C_Master_Read@a+1
 11627  0BF4  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 11628  0BF9  0823               	movf	?_I2C_Master_Read,w
 11629  0BFA  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11630  0BFB  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11631  0BFC  0084               	movwf	4
 11632  0BFD  1783               	bsf	3,7
 11633  0BFE  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 11634  0BFF  1383               	bcf	3,7
 11635  0C00  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11636  0C01  0080               	movwf	0
 11637                           
 11638                           ;EEPROM_24C1025.c: 133:              data++;
 11639  0C02  3001               	movlw	1
 11640  0C03  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11641  0C04  1803               	skipnc
 11642  0C05  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11643  0C06  3000               	movlw	0
 11644  0C07  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 11645                           
 11646                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11647  0C08  3001               	movlw	1
 11648  0C09  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11649  0C0A  3000               	movlw	0
 11650  0C0B  1803               	skipnc
 11651  0C0C  3001               	movlw	1
 11652  0C0D  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11653  0C0E  3000               	movlw	0
 11654  0C0F  1803               	skipnc
 11655  0C10  3001               	movlw	1
 11656  0C11  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11657  0C12  3000               	movlw	0
 11658  0C13  1803               	skipnc
 11659  0C14  3001               	movlw	1
 11660  0C15  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11661  0C16                     l5637:	
 11662                           
 11663                           ;EEPROM_24C1025.c: 136:         }
 11664  0C16  3001               	movlw	1
 11665  0C17  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11666  0C18  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11667  0C19  07B4               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 11668  0C1A  2B37               	goto	l5639
 11669  0C1B                     l5641:	
 11670                           
 11671                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11672  0C1B  3000               	movlw	0
 11673  0C1C  00A3               	movwf	I2C_Master_Read@a
 11674  0C1D  00A4               	movwf	I2C_Master_Read@a+1
 11675  0C1E  160A  158A  26E9  120A  158A  	fcall	_I2C_Master_Read
 11676                           
 11677                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11678  0C23  160A  158A  2335  120A  158A  	fcall	_I2C_Master_Stop
 11679                           
 11680                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11681  0C28  30B9               	movlw	185
 11682  0C29  1283               	bcf	3,5	;RP0=0, select bank0
 11683  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
 11684  0C2B  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 11685  0C2C                     u5597:	
 11686  0C2C  2C2D               	nop2
 11687  0C2D  2C2E               	nop2
 11688  0C2E  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11689  0C2F  2C2C               	goto	u5597
 11690  0C30  2C31               	nop2
 11691  0C31  0008               	return
 11692  0C32                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11693                           
 11694                           	psect	text51
 11695  1B67                     __ptext51:	
 11696 ;; *************** function _I2C_Master_RepeatedStart *****************
 11697 ;; Defined at:
 11698 ;;		line 62 in file "I2C.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0, pclath, cstack
 11707 ;; Tracked objects:
 11708 ;;		On entry : 300/0
 11709 ;;		On exit  : 200/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11712 ;;      Params:         0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0
 11715 ;;      Totals:         0       0       0       0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    2
 11719 ;; This function calls:
 11720 ;;		_I2C_Master_Wait
 11721 ;; This function is called by:
 11722 ;;		_EEPROM_24C1025_Read_Buffer
 11723 ;;		_EEPROM_24C1025_Read_Str
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           
 11728                           ;psect for function _I2C_Master_RepeatedStart
 11729  1B67                     _I2C_Master_RepeatedStart:	
 11730                           
 11731                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11732                           
 11733                           ;incstack = 0
 11734                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11735  1B67  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 11736  1B6C  3A00               	xorlw	0
 11737  1B6D  1903               	skipnz
 11738  1B6E  0008               	return
 11739                           
 11740                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11741  1B6F  1683               	bsf	3,5	;RP0=1, select bank1
 11742  1B70  1491               	bsf	17,1	;volatile
 11743  1B71  0008               	return
 11744  1B72                     __end_of_I2C_Master_RepeatedStart:	
 11745                           
 11746                           	psect	text52
 11747  1EE9                     __ptext52:	
 11748 ;; *************** function _I2C_Master_Read *****************
 11749 ;; Defined at:
 11750 ;;		line 87 in file "I2C.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  a               2    3[BANK0 ] unsigned short 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  temp            2    7[BANK0 ] unsigned short 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  2    3[BANK0 ] unsigned short 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2, status,0, pclath, cstack
 11759 ;; Tracked objects:
 11760 ;;		On entry : 300/0
 11761 ;;		On exit  : 300/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11764 ;;      Params:         0       2       0       0       0
 11765 ;;      Locals:         0       2       0       0       0
 11766 ;;      Temps:          0       2       0       0       0
 11767 ;;      Totals:         0       6       0       0       0
 11768 ;;Total ram usage:        6 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    2
 11771 ;; This function calls:
 11772 ;;		_I2C_Master_Wait
 11773 ;; This function is called by:
 11774 ;;		_EEPROM_24C1025_Read_Buffer
 11775 ;;		_EEPROM_24C1025_Read_Str
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function _I2C_Master_Read
 11781  1EE9                     _I2C_Master_Read:	
 11782                           
 11783                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11784                           
 11785                           ;incstack = 0
 11786                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11787  1EE9  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 11788  1EEE  3A00               	xorlw	0
 11789  1EEF  1683               	bsf	3,5	;RP0=1, select bank1
 11790  1EF0  1D03               	btfss	3,2
 11791  1EF1  1591               	bsf	17,3	;volatile
 11792                           
 11793                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11794  1EF2  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 11795  1EF7  3A00               	xorlw	0
 11796  1EF8  1903               	skipnz
 11797  1EF9  2F01               	goto	l3681
 11798  1EFA  0813               	movf	19,w	;volatile
 11799  1EFB  00A5               	movwf	??_I2C_Master_Read
 11800  1EFC  01A6               	clrf	??_I2C_Master_Read+1
 11801  1EFD  0825               	movf	??_I2C_Master_Read,w
 11802  1EFE  00A7               	movwf	I2C_Master_Read@temp
 11803  1EFF  0826               	movf	??_I2C_Master_Read+1,w
 11804  1F00  00A8               	movwf	I2C_Master_Read@temp+1
 11805  1F01                     l3681:	
 11806                           
 11807                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11808  1F01  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 11809  1F06  3A00               	xorlw	0
 11810  1F07  1903               	skipnz
 11811  1F08  2F1B               	goto	l3693
 11812                           
 11813                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11814  1F09  0823               	movf	I2C_Master_Read@a,w
 11815  1F0A  0424               	iorwf	I2C_Master_Read@a+1,w
 11816  1F0B  1D03               	btfss	3,2
 11817  1F0C  2F11               	goto	u2800
 11818  1F0D  1683               	bsf	3,5	;RP0=1, select bank1
 11819  1F0E  1303               	bcf	3,6	;RP1=0, select bank1
 11820  1F0F  1691               	bsf	17,5	;volatile
 11821  1F10  2F14               	goto	l3685
 11822  1F11                     u2800:	
 11823  1F11  1683               	bsf	3,5	;RP0=1, select bank1
 11824  1F12  1303               	bcf	3,6	;RP1=0, select bank1
 11825  1F13  1291               	bcf	17,5	;volatile
 11826  1F14                     l3685:	
 11827                           
 11828                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11829  1F14  1611               	bsf	17,4	;volatile
 11830                           
 11831                           ;I2C.c: 96:     return temp;
 11832  1F15  1283               	bcf	3,5	;RP0=0, select bank0
 11833  1F16  0828               	movf	I2C_Master_Read@temp+1,w
 11834  1F17  00A4               	movwf	?_I2C_Master_Read+1
 11835  1F18  0827               	movf	I2C_Master_Read@temp,w
 11836  1F19  00A3               	movwf	?_I2C_Master_Read
 11837  1F1A  0008               	return
 11838  1F1B                     l3693:	
 11839                           
 11840                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11841  1F1B  01A3               	clrf	?_I2C_Master_Read
 11842  1F1C  01A4               	clrf	?_I2C_Master_Read+1
 11843  1F1D  0008               	return
 11844  1F1E                     __end_of_I2C_Master_Read:	
 11845                           
 11846                           	psect	text53
 11847  10EA                     __ptext53:	
 11848 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11849 ;; Defined at:
 11850 ;;		line 294 in file "EEPROM_24C1025.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  chip_add        1    wreg     unsigned char 
 11853 ;;  value           2   33[BANK0 ] unsigned int 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  chip_add        1   35[BANK0 ] unsigned char 
 11856 ;;  mem_add         4   36[BANK0 ] unsigned long 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      void 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11861 ;; Tracked objects:
 11862 ;;		On entry : 300/100
 11863 ;;		On exit  : 300/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11866 ;;      Params:         0       2       0       0       0
 11867 ;;      Locals:         0       5       0       0       0
 11868 ;;      Temps:          0       0       0       0       0
 11869 ;;      Totals:         0       7       0       0       0
 11870 ;;Total ram usage:        7 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:    5
 11873 ;; This function calls:
 11874 ;;		_EEPROM_24C1025_Write_Int
 11875 ;; This function is called by:
 11876 ;;		_Decodify_Command
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function _EEPROM_24C1025_Fill_All
 11882  10EA                     _EEPROM_24C1025_Fill_All:	
 11883                           
 11884                           ;incstack = 0
 11885                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11886                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11887  10EA  1283               	bcf	3,5	;RP0=0, select bank0
 11888  10EB  00C3               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11889                           
 11890                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11891  10EC  3000               	movlw	0
 11892  10ED  00C7               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11893  10EE  3000               	movlw	0
 11894  10EF  00C6               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11895  10F0  3000               	movlw	0
 11896  10F1  00C5               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11897  10F2  3000               	movlw	0
 11898  10F3  00C4               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11899  10F4                     l4479:	
 11900                           
 11901                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11902  10F4  0847               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11903  10F5  00B9               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11904  10F6  0846               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11905  10F7  00B8               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11906  10F8  0845               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11907  10F9  00B7               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11908  10FA  0844               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11909  10FB  00B6               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11910  10FC  0842               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11911  10FD  00BB               	movwf	EEPROM_24C1025_Write_Int@data+1
 11912  10FE  0841               	movf	EEPROM_24C1025_Fill_All@value,w
 11913  10FF  00BA               	movwf	EEPROM_24C1025_Write_Int@data
 11914  1100  0843               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11915  1101  160A  158A  247C  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
 11916  1106  0064               	clrwdt	;# 
 11917                           
 11918                           ;EEPROM_24C1025.c: 300:         }
 11919  1107  3002               	movlw	2
 11920  1108  1283               	bcf	3,5	;RP0=0, select bank0
 11921  1109  1303               	bcf	3,6	;RP1=0, select bank0
 11922  110A  07C4               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11923  110B  3000               	movlw	0
 11924  110C  1803               	skipnc
 11925  110D  3001               	movlw	1
 11926  110E  07C5               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11927  110F  3000               	movlw	0
 11928  1110  1803               	skipnc
 11929  1111  3001               	movlw	1
 11930  1112  07C6               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11931  1113  3000               	movlw	0
 11932  1114  1803               	skipnc
 11933  1115  3001               	movlw	1
 11934  1116  07C7               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11935  1117  0847               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11936  1118  1D03               	btfss	3,2
 11937  1119  0008               	return
 11938  111A  0846               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11939  111B  1D03               	btfss	3,2
 11940  111C  0008               	return
 11941  111D  3004               	movlw	4
 11942  111E  0245               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11943  111F  1D03               	skipz
 11944  1120  2925               	goto	u4053
 11945  1121  3000               	movlw	0
 11946  1122  0244               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11947  1123  1D03               	skipz
 11948  1124  2925               	goto	u4053
 11949  1125                     u4053:	
 11950  1125  1803               	btfsc	3,0
 11951  1126  0008               	return
 11952  1127  28F4               	goto	l4479
 11953  1128                     __end_of_EEPROM_24C1025_Fill_All:	
 11954                           
 11955                           	psect	text54
 11956  1C7C                     __ptext54:	
 11957 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11958 ;; Defined at:
 11959 ;;		line 279 in file "EEPROM_24C1025.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  chip_add        1    wreg     unsigned char 
 11962 ;;  mem_add         4   22[BANK0 ] unsigned long 
 11963 ;;  data            2   26[BANK0 ] int 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  chip_add        1   30[BANK0 ] unsigned char 
 11966 ;;  local           2   31[BANK0 ] unsigned char [2]
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 200/100
 11973 ;;		On exit  : 300/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11976 ;;      Params:         0       6       0       0       0
 11977 ;;      Locals:         0       3       0       0       0
 11978 ;;      Temps:          0       2       0       0       0
 11979 ;;      Totals:         0      11       0       0       0
 11980 ;;Total ram usage:       11 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    4
 11983 ;; This function calls:
 11984 ;;		_EEPROM_24C1025_Write_Buffer
 11985 ;; This function is called by:
 11986 ;;		_EEPROM_24C1025_Fill_All
 11987 ;;		_Decodify_Command
 11988 ;;		_Save_Log
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           
 11993                           ;psect for function _EEPROM_24C1025_Write_Int
 11994  1C7C                     _EEPROM_24C1025_Write_Int:	
 11995                           
 11996                           ;incstack = 0
 11997                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11998                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11999  1C7C  1283               	bcf	3,5	;RP0=0, select bank0
 12000  1C7D  00BE               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12001                           
 12002                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 12003  1C7E  083B               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12004  1C7F  00BC               	movwf	??_EEPROM_24C1025_Write_Int
 12005  1C80  083C               	movf	??_EEPROM_24C1025_Write_Int,w
 12006  1C81  00BF               	movwf	EEPROM_24C1025_Write_Int@local
 12007                           
 12008                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 12009  1C82  083A               	movf	EEPROM_24C1025_Write_Int@data,w
 12010  1C83  00BC               	movwf	??_EEPROM_24C1025_Write_Int
 12011  1C84  083C               	movf	??_EEPROM_24C1025_Write_Int,w
 12012  1C85  00C0               	movwf	EEPROM_24C1025_Write_Int@local+1
 12013                           
 12014                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12015  1C86  0839               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12016  1C87  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12017  1C88  0838               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12018  1C89  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12019  1C8A  0837               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12020  1C8B  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12021  1C8C  0836               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12022  1C8D  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12023  1C8E  3002               	movlw	2
 12024  1C8F  00BC               	movwf	??_EEPROM_24C1025_Write_Int
 12025  1C90  083C               	movf	??_EEPROM_24C1025_Write_Int,w
 12026  1C91  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12027  1C92  303F               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12028  1C93  00BD               	movwf	??_EEPROM_24C1025_Write_Int+1
 12029  1C94  083D               	movf	??_EEPROM_24C1025_Write_Int+1,w
 12030  1C95  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12031  1C96  083E               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12032  1C97  160A  118A  26A3   	fcall	_EEPROM_24C1025_Write_Buffer
 12033  1C9A  0008               	return
 12034  1C9B                     __end_of_EEPROM_24C1025_Write_Int:	
 12035                           
 12036                           	psect	text55
 12037  16A3                     __ptext55:	
 12038 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12039 ;; Defined at:
 12040 ;;		line 14 in file "EEPROM_24C1025.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  chip_add        1    wreg     unsigned char 
 12043 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12044 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12045 ;;  data            1   15[BANK0 ] PTR unsigned char 
 12046 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  chip_add        1   19[BANK0 ] unsigned char 
 12049 ;;  ctrl            1   21[BANK0 ] unsigned char 
 12050 ;;  range           1   20[BANK0 ] unsigned char 
 12051 ;;  count           1   18[BANK0 ] unsigned char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 200/100
 12058 ;;		On exit  : 300/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12061 ;;      Params:         0       6       0       0       0
 12062 ;;      Locals:         0       4       0       0       0
 12063 ;;      Temps:          0       2       0       0       0
 12064 ;;      Totals:         0      12       0       0       0
 12065 ;;Total ram usage:       12 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    3
 12068 ;; This function calls:
 12069 ;;		_I2C_Master_Start
 12070 ;;		_I2C_Master_Stop
 12071 ;;		_I2C_Master_Write
 12072 ;;		_my_delay_ms_WDT
 12073 ;; This function is called by:
 12074 ;;		_EEPROM_24C1025_Write_Byte
 12075 ;;		_EEPROM_24C1025_Write_Int
 12076 ;;		_Decodify_Command
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           
 12081                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12082  16A3                     _EEPROM_24C1025_Write_Buffer:	
 12083                           
 12084                           ;incstack = 0
 12085                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12086                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12087  16A3  1283               	bcf	3,5	;RP0=0, select bank0
 12088  16A4  00B3               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12089                           
 12090                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
 12091  16A5  3014               	movlw	20
 12092  16A6  00FA               	movwf	_Delay_Led_Memory	;volatile
 12093  16A7  3000               	movlw	0
 12094  16A8  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12095                           
 12096                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
 12097  16A9  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12098  16AA  1D03               	btfss	3,2
 12099  16AB  0008               	return
 12100  16AC  3002               	movlw	2
 12101  16AD  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12102  16AE  1D03               	skipz
 12103  16AF  2EB8               	goto	u2703
 12104  16B0  3000               	movlw	0
 12105  16B1  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12106  16B2  1D03               	skipz
 12107  16B3  2EB8               	goto	u2703
 12108  16B4  3000               	movlw	0
 12109  16B5  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12110  16B6  1D03               	skipz
 12111  16B7  2EB8               	goto	u2703
 12112  16B8                     u2703:	
 12113  16B8  1803               	btfsc	3,0
 12114  16B9  0008               	return
 12115                           
 12116                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12117  16BA  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12118  16BB  1D03               	btfss	3,2
 12119  16BC  2ECB               	goto	l3595
 12120  16BD  3001               	movlw	1
 12121  16BE  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12122  16BF  1D03               	skipz
 12123  16C0  2EC9               	goto	u2713
 12124  16C1  3000               	movlw	0
 12125  16C2  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12126  16C3  1D03               	skipz
 12127  16C4  2EC9               	goto	u2713
 12128  16C5  3000               	movlw	0
 12129  16C6  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12130  16C7  1D03               	skipz
 12131  16C8  2EC9               	goto	u2713
 12132  16C9                     u2713:	
 12133  16C9  1C03               	btfss	3,0
 12134  16CA  2ED0               	goto	l3597
 12135  16CB                     l3595:	
 12136  16CB  3008               	movlw	8
 12137  16CC  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12138  16CD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12139  16CE  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
 12140  16CF  2ED1               	goto	l3599
 12141  16D0                     l3597:	
 12142  16D0  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
 12143  16D1                     l3599:	
 12144                           
 12145                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
 12146  16D1  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12147  16D2  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12148  16D3  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12149  16D4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12150                           
 12151                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
 12152  16D5  1003               	clrc
 12153  16D6  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12154                           
 12155                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
 12156  16D7  30A0               	movlw	160
 12157  16D8  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12158  16D9  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12159  16DA  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12160                           
 12161                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
 12162  16DB  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12163  16DC  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12164  16DD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12165  16DE  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12166                           
 12167                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
 12168  16DF  160A  158A  2381  160A  118A  	fcall	_I2C_Master_Start
 12169                           
 12170                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
 12171  16E4  1283               	bcf	3,5	;RP0=0, select bank0
 12172  16E5  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12173  16E6  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12174  16E7  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12175  16E8  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12176  16E9  00A3               	movwf	I2C_Master_Write@d
 12177  16EA  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12178  16EB  00A4               	movwf	I2C_Master_Write@d+1
 12179  16EC  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12180                           
 12181                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
 12182  16F1  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12183  16F2  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12184  16F3  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12185  16F4  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12186  16F5  00A3               	movwf	I2C_Master_Write@d
 12187  16F6  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12188  16F7  00A4               	movwf	I2C_Master_Write@d+1
 12189  16F8  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12190                           
 12191                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
 12192  16FD  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12193  16FE  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12194  16FF  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12195  1700  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12196  1701  00A3               	movwf	I2C_Master_Write@d
 12197  1702  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12198  1703  00A4               	movwf	I2C_Master_Write@d+1
 12199  1704  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12200                           
 12201                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
 12202  1709  01B2               	clrf	EEPROM_24C1025_Write_Buffer@count
 12203  170A                     l3661:	
 12204  170A  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12205  170B  3EFF               	addlw	255
 12206  170C  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12207  170D  30FF               	movlw	255
 12208  170E  1803               	skipnc
 12209  170F  3000               	movlw	0
 12210  1710  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12211  1711  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12212  1712  3A80               	xorlw	128
 12213  1713  3C80               	sublw	128
 12214  1714  1D03               	skipz
 12215  1715  2F18               	goto	u2755
 12216  1716  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12217  1717  0232               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12218  1718                     u2755:	
 12219  1718  1803               	btfsc	3,0
 12220  1719  2FDD               	goto	l3663
 12221  171A  0064               	clrwdt	;# 
 12222                           
 12223                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
 12224  171B  1283               	bcf	3,5	;RP0=0, select bank0
 12225  171C  1303               	bcf	3,6	;RP1=0, select bank0
 12226  171D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12227  171E  1D03               	btfss	3,2
 12228  171F  0008               	return
 12229  1720  3002               	movlw	2
 12230  1721  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12231  1722  1D03               	skipz
 12232  1723  2F2C               	goto	u2723
 12233  1724  3000               	movlw	0
 12234  1725  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12235  1726  1D03               	skipz
 12236  1727  2F2C               	goto	u2723
 12237  1728  3000               	movlw	0
 12238  1729  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12239  172A  1D03               	skipz
 12240  172B  2F2C               	goto	u2723
 12241  172C                     u2723:	
 12242  172C  1803               	btfsc	3,0
 12243  172D  0008               	return
 12244                           
 12245                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
 12246  172E  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12247  172F  3E01               	addlw	1
 12248  1730  397F               	andlw	127
 12249  1731  1D03               	btfss	3,2
 12250  1732  2FB7               	goto	l3653
 12251                           
 12252                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
 12253  1733  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12254  1734  0084               	movwf	4
 12255  1735  1383               	bcf	3,7	;select IRP bank0
 12256  1736  0800               	movf	0,w
 12257  1737  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12258  1738  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12259  1739  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12260  173A  00A3               	movwf	I2C_Master_Write@d
 12261  173B  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12262  173C  00A4               	movwf	I2C_Master_Write@d+1
 12263  173D  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12264                           
 12265                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
 12266  1742  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Stop
 12267                           
 12268                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
 12269  1747  3000               	movlw	0
 12270  1748  1283               	bcf	3,5	;RP0=0, select bank0
 12271  1749  00A3               	movwf	my_delay_ms_WDT@time+3
 12272  174A  3000               	movlw	0
 12273  174B  00A2               	movwf	my_delay_ms_WDT@time+2
 12274  174C  3000               	movlw	0
 12275  174D  00A1               	movwf	my_delay_ms_WDT@time+1
 12276  174E  3005               	movlw	5
 12277  174F  00A0               	movwf	my_delay_ms_WDT@time
 12278  1750  160A  158A  2755  160A  118A  	fcall	_my_delay_ms_WDT
 12279                           
 12280                           ;EEPROM_24C1025.c: 47:             mem_add++;
 12281  1755  3001               	movlw	1
 12282  1756  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12283  1757  3000               	movlw	0
 12284  1758  1803               	skipnc
 12285  1759  3001               	movlw	1
 12286  175A  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12287  175B  3000               	movlw	0
 12288  175C  1803               	skipnc
 12289  175D  3001               	movlw	1
 12290  175E  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12291  175F  3000               	movlw	0
 12292  1760  1803               	skipnc
 12293  1761  3001               	movlw	1
 12294  1762  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12295                           
 12296                           ;EEPROM_24C1025.c: 48:             data++;
 12297  1763  3001               	movlw	1
 12298  1764  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12299  1765  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12300  1766  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12301                           
 12302                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12303  1767  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12304  1768  1D03               	btfss	3,2
 12305  1769  2F78               	goto	l3633
 12306  176A  3001               	movlw	1
 12307  176B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12308  176C  1D03               	skipz
 12309  176D  2F76               	goto	u2743
 12310  176E  3000               	movlw	0
 12311  176F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12312  1770  1D03               	skipz
 12313  1771  2F76               	goto	u2743
 12314  1772  3000               	movlw	0
 12315  1773  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12316  1774  1D03               	skipz
 12317  1775  2F76               	goto	u2743
 12318  1776                     u2743:	
 12319  1776  1C03               	btfss	3,0
 12320  1777  2F7D               	goto	l3635
 12321  1778                     l3633:	
 12322  1778  3008               	movlw	8
 12323  1779  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12324  177A  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12325  177B  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
 12326  177C  2F7E               	goto	l3637
 12327  177D                     l3635:	
 12328  177D  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
 12329  177E                     l3637:	
 12330                           
 12331                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
 12332  177E  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12333  177F  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12334  1780  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12335  1781  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12336                           
 12337                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
 12338  1782  1003               	clrc
 12339  1783  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12340                           
 12341                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
 12342  1784  30A0               	movlw	160
 12343  1785  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12344  1786  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12345  1787  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12346                           
 12347                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
 12348  1788  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12349  1789  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12350  178A  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12351  178B  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12352                           
 12353                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
 12354  178C  160A  158A  2381  160A  118A  	fcall	_I2C_Master_Start
 12355                           
 12356                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
 12357  1791  1283               	bcf	3,5	;RP0=0, select bank0
 12358  1792  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12359  1793  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12360  1794  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12361  1795  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12362  1796  00A3               	movwf	I2C_Master_Write@d
 12363  1797  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12364  1798  00A4               	movwf	I2C_Master_Write@d+1
 12365  1799  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12366                           
 12367                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
 12368  179E  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12369  179F  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12370  17A0  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12371  17A1  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12372  17A2  00A3               	movwf	I2C_Master_Write@d
 12373  17A3  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12374  17A4  00A4               	movwf	I2C_Master_Write@d+1
 12375  17A5  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12376                           
 12377                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
 12378  17AA  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12379  17AB  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12380  17AC  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12381  17AD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12382  17AE  00A3               	movwf	I2C_Master_Write@d
 12383  17AF  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12384  17B0  00A4               	movwf	I2C_Master_Write@d+1
 12385  17B1  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12386                           
 12387                           ;EEPROM_24C1025.c: 59:             }
 12388  17B6  2FD8               	goto	l3659
 12389  17B7                     l3653:	
 12390                           
 12391                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
 12392  17B7  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12393  17B8  0084               	movwf	4
 12394  17B9  1383               	bcf	3,7	;select IRP bank0
 12395  17BA  0800               	movf	0,w
 12396  17BB  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12397  17BC  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12398  17BD  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12399  17BE  00A3               	movwf	I2C_Master_Write@d
 12400  17BF  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12401  17C0  00A4               	movwf	I2C_Master_Write@d+1
 12402  17C1  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12403                           
 12404                           ;EEPROM_24C1025.c: 63:             data++;
 12405  17C6  3001               	movlw	1
 12406  17C7  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12407  17C8  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12408  17C9  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12409                           
 12410                           ;EEPROM_24C1025.c: 64:             mem_add++;
 12411  17CA  3001               	movlw	1
 12412  17CB  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12413  17CC  3000               	movlw	0
 12414  17CD  1803               	skipnc
 12415  17CE  3001               	movlw	1
 12416  17CF  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12417  17D0  3000               	movlw	0
 12418  17D1  1803               	skipnc
 12419  17D2  3001               	movlw	1
 12420  17D3  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12421  17D4  3000               	movlw	0
 12422  17D5  1803               	skipnc
 12423  17D6  3001               	movlw	1
 12424  17D7  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12425  17D8                     l3659:	
 12426                           
 12427                           ;EEPROM_24C1025.c: 66:      }
 12428  17D8  3001               	movlw	1
 12429  17D9  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12430  17DA  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12431  17DB  07B2               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12432  17DC  2F0A               	goto	l3661
 12433  17DD                     l3663:	
 12434                           
 12435                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
 12436  17DD  1283               	bcf	3,5	;RP0=0, select bank0
 12437  17DE  1303               	bcf	3,6	;RP1=0, select bank0
 12438  17DF  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12439  17E0  0084               	movwf	4
 12440  17E1  1383               	bcf	3,7	;select IRP bank0
 12441  17E2  0800               	movf	0,w
 12442  17E3  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
 12443  17E4  01B1               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12444  17E5  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12445  17E6  00A3               	movwf	I2C_Master_Write@d
 12446  17E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12447  17E8  00A4               	movwf	I2C_Master_Write@d+1
 12448  17E9  160A  158A  235C  160A  118A  	fcall	_I2C_Master_Write
 12449                           
 12450                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
 12451  17EE  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Stop
 12452                           
 12453                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
 12454  17F3  3000               	movlw	0
 12455  17F4  1283               	bcf	3,5	;RP0=0, select bank0
 12456  17F5  00A3               	movwf	my_delay_ms_WDT@time+3
 12457  17F6  3000               	movlw	0
 12458  17F7  00A2               	movwf	my_delay_ms_WDT@time+2
 12459  17F8  3000               	movlw	0
 12460  17F9  00A1               	movwf	my_delay_ms_WDT@time+1
 12461  17FA  3005               	movlw	5
 12462  17FB  00A0               	movwf	my_delay_ms_WDT@time
 12463  17FC  160A  158A  2755   	fcall	_my_delay_ms_WDT
 12464  17FF  0008               	return
 12465  1800                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12466                           
 12467                           	psect	text56
 12468  1F55                     __ptext56:	
 12469 ;; *************** function _my_delay_ms_WDT *****************
 12470 ;; Defined at:
 12471 ;;		line 13 in file "my_delay.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  time            4    0[BANK0 ] long 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  i               4    6[BANK0 ] long 
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, btemp+1
 12480 ;; Tracked objects:
 12481 ;;		On entry : 300/0
 12482 ;;		On exit  : 300/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12485 ;;      Params:         0       4       0       0       0
 12486 ;;      Locals:         0       4       0       0       0
 12487 ;;      Temps:          0       2       0       0       0
 12488 ;;      Totals:         0      10       0       0       0
 12489 ;;Total ram usage:       10 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    1
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_EEPROM_24C1025_Write_Buffer
 12496 ;;		_EEPROM_24C1025_Read_Buffer
 12497 ;;		_EEPROM_24C1025_Write_Str
 12498 ;;		_EEPROM_24C1025_Read_Str
 12499 ;;		_main
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           
 12504                           ;psect for function _my_delay_ms_WDT
 12505  1F55                     _my_delay_ms_WDT:	
 12506                           
 12507                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12508                           
 12509                           ;incstack = 0
 12510                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12511  1F55  3000               	movlw	0
 12512  1F56  00A9               	movwf	my_delay_ms_WDT@i+3
 12513  1F57  3000               	movlw	0
 12514  1F58  00A8               	movwf	my_delay_ms_WDT@i+2
 12515  1F59  3000               	movlw	0
 12516  1F5A  00A7               	movwf	my_delay_ms_WDT@i+1
 12517  1F5B  3000               	movlw	0
 12518  1F5C  00A6               	movwf	my_delay_ms_WDT@i
 12519  1F5D                     l3577:	
 12520  1F5D  0829               	movf	my_delay_ms_WDT@i+3,w
 12521  1F5E  3A80               	xorlw	128
 12522  1F5F  00FF               	movwf	127
 12523  1F60  0823               	movf	my_delay_ms_WDT@time+3,w
 12524  1F61  3A80               	xorlw	128
 12525  1F62  027F               	subwf	127,w
 12526  1F63  1D03               	skipz
 12527  1F64  2F6F               	goto	u2683
 12528  1F65  0822               	movf	my_delay_ms_WDT@time+2,w
 12529  1F66  0228               	subwf	my_delay_ms_WDT@i+2,w
 12530  1F67  1D03               	skipz
 12531  1F68  2F6F               	goto	u2683
 12532  1F69  0821               	movf	my_delay_ms_WDT@time+1,w
 12533  1F6A  0227               	subwf	my_delay_ms_WDT@i+1,w
 12534  1F6B  1D03               	skipz
 12535  1F6C  2F6F               	goto	u2683
 12536  1F6D  0820               	movf	my_delay_ms_WDT@time,w
 12537  1F6E  0226               	subwf	my_delay_ms_WDT@i,w
 12538  1F6F                     u2683:	
 12539  1F6F  1803               	btfsc	3,0
 12540  1F70  0008               	return
 12541  1F71  0064               	clrwdt	;# 
 12542                           
 12543                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12544  1F72  3003               	movlw	3
 12545  1F73  1283               	bcf	3,5	;RP0=0, select bank0
 12546  1F74  1303               	bcf	3,6	;RP1=0, select bank0
 12547  1F75  00A5               	movwf	??_my_delay_ms_WDT+1
 12548  1F76  3097               	movlw	151
 12549  1F77  00A4               	movwf	??_my_delay_ms_WDT
 12550  1F78                     u5607:	
 12551  1F78  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12552  1F79  2F78               	goto	u5607
 12553  1F7A  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12554  1F7B  2F78               	goto	u5607
 12555                           
 12556                           ;my_delay.c: 19:             }
 12557  1F7C  3001               	movlw	1
 12558  1F7D  1283               	bcf	3,5	;RP0=0, select bank0
 12559  1F7E  1303               	bcf	3,6	;RP1=0, select bank0
 12560  1F7F  07A6               	addwf	my_delay_ms_WDT@i,f
 12561  1F80  3000               	movlw	0
 12562  1F81  1803               	skipnc
 12563  1F82  3001               	movlw	1
 12564  1F83  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12565  1F84  3000               	movlw	0
 12566  1F85  1803               	skipnc
 12567  1F86  3001               	movlw	1
 12568  1F87  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12569  1F88  3000               	movlw	0
 12570  1F89  1803               	skipnc
 12571  1F8A  3001               	movlw	1
 12572  1F8B  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12573  1F8C  2F5D               	goto	l3577
 12574  1F8D                     __end_of_my_delay_ms_WDT:	
 12575                           
 12576                           	psect	text57
 12577  1B5C                     __ptext57:	
 12578 ;; *************** function _I2C_Master_Write *****************
 12579 ;; Defined at:
 12580 ;;		line 79 in file "I2C.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  d               2    3[BANK0 ] unsigned int 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;		None
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1    wreg      void 
 12587 ;; Registers used:
 12588 ;;		wreg, status,2, status,0, pclath, cstack
 12589 ;; Tracked objects:
 12590 ;;		On entry : 300/0
 12591 ;;		On exit  : 300/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12594 ;;      Params:         0       2       0       0       0
 12595 ;;      Locals:         0       0       0       0       0
 12596 ;;      Temps:          0       0       0       0       0
 12597 ;;      Totals:         0       2       0       0       0
 12598 ;;Total ram usage:        2 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:    2
 12601 ;; This function calls:
 12602 ;;		_I2C_Master_Wait
 12603 ;; This function is called by:
 12604 ;;		_EEPROM_24C1025_Write_Buffer
 12605 ;;		_EEPROM_24C1025_Read_Buffer
 12606 ;;		_EEPROM_24C1025_Write_Str
 12607 ;;		_EEPROM_24C1025_Read_Str
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           
 12612                           ;psect for function _I2C_Master_Write
 12613  1B5C                     _I2C_Master_Write:	
 12614                           
 12615                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12616                           
 12617                           ;incstack = 0
 12618                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12619  1B5C  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 12620  1B61  3A00               	xorlw	0
 12621  1B62  1903               	skipnz
 12622  1B63  0008               	return
 12623                           
 12624                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12625  1B64  0823               	movf	I2C_Master_Write@d,w
 12626  1B65  0093               	movwf	19	;volatile
 12627  1B66  0008               	return
 12628  1B67                     __end_of_I2C_Master_Write:	
 12629                           
 12630                           	psect	text58
 12631  1B35                     __ptext58:	
 12632 ;; *************** function _I2C_Master_Stop *****************
 12633 ;; Defined at:
 12634 ;;		line 70 in file "I2C.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;		None
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		wreg, status,2, status,0, pclath, cstack
 12643 ;; Tracked objects:
 12644 ;;		On entry : 300/0
 12645 ;;		On exit  : 200/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12648 ;;      Params:         0       0       0       0       0
 12649 ;;      Locals:         0       0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0
 12651 ;;      Totals:         0       0       0       0       0
 12652 ;;Total ram usage:        0 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    2
 12655 ;; This function calls:
 12656 ;;		_I2C_Master_Wait
 12657 ;; This function is called by:
 12658 ;;		_EEPROM_24C1025_Write_Buffer
 12659 ;;		_EEPROM_24C1025_Read_Buffer
 12660 ;;		_EEPROM_24C1025_Write_Str
 12661 ;;		_EEPROM_24C1025_Read_Str
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           
 12665                           
 12666                           ;psect for function _I2C_Master_Stop
 12667  1B35                     _I2C_Master_Stop:	
 12668                           
 12669                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12670                           
 12671                           ;incstack = 0
 12672                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12673  1B35  160A  158A  24DA   	fcall	_I2C_Master_Wait
 12674  1B38  3A00               	xorlw	0
 12675                           
 12676                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12677  1B39  1683               	bsf	3,5	;RP0=1, select bank1
 12678  1B3A  1D03               	btfss	3,2
 12679  1B3B  1511               	bsf	17,2	;volatile
 12680                           
 12681                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12682                           
 12683                           ;I2C.c: 75:     }
 12684  1B3C  178B               	bsf	11,7	;volatile
 12685  1B3D  0008               	return
 12686  1B3E                     __end_of_I2C_Master_Stop:	
 12687                           
 12688                           	psect	text59
 12689  1B81                     __ptext59:	
 12690 ;; *************** function _I2C_Master_Start *****************
 12691 ;; Defined at:
 12692 ;;		line 52 in file "I2C.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;		None
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;		None
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  1    wreg      void 
 12699 ;; Registers used:
 12700 ;;		wreg, status,2, status,0, pclath, cstack
 12701 ;; Tracked objects:
 12702 ;;		On entry : 300/0
 12703 ;;		On exit  : 200/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12706 ;;      Params:         0       0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0
 12709 ;;      Totals:         0       0       0       0       0
 12710 ;;Total ram usage:        0 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    2
 12713 ;; This function calls:
 12714 ;;		_I2C_Master_Wait
 12715 ;; This function is called by:
 12716 ;;		_EEPROM_24C1025_Write_Buffer
 12717 ;;		_EEPROM_24C1025_Read_Buffer
 12718 ;;		_EEPROM_24C1025_Write_Str
 12719 ;;		_EEPROM_24C1025_Read_Str
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           
 12724                           ;psect for function _I2C_Master_Start
 12725  1B81                     _I2C_Master_Start:	
 12726                           
 12727                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12728                           
 12729                           ;incstack = 0
 12730                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12731  1B81  138B               	bcf	11,7	;volatile
 12732                           
 12733                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12734  1B82  3014               	movlw	20
 12735  1B83  00FA               	movwf	_Delay_Led_Memory	;volatile
 12736  1B84  3000               	movlw	0
 12737  1B85  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12738                           
 12739                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12740  1B86  160A  158A  24DA  160A  158A  	fcall	_I2C_Master_Wait
 12741  1B8B  3A00               	xorlw	0
 12742  1B8C  1903               	skipnz
 12743  1B8D  0008               	return
 12744                           
 12745                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12746  1B8E  1683               	bsf	3,5	;RP0=1, select bank1
 12747  1B8F  1411               	bsf	17,0	;volatile
 12748  1B90  0008               	return
 12749  1B91                     __end_of_I2C_Master_Start:	
 12750                           
 12751                           	psect	text60
 12752  1CDA                     __ptext60:	
 12753 ;; *************** function _I2C_Master_Wait *****************
 12754 ;; Defined at:
 12755 ;;		line 37 in file "I2C.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;		None
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  tempo           1    2[BANK0 ] unsigned char 
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      unsigned char 
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0
 12764 ;; Tracked objects:
 12765 ;;		On entry : 200/0
 12766 ;;		On exit  : 300/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12769 ;;      Params:         0       0       0       0       0
 12770 ;;      Locals:         0       1       0       0       0
 12771 ;;      Temps:          0       2       0       0       0
 12772 ;;      Totals:         0       3       0       0       0
 12773 ;;Total ram usage:        3 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:    1
 12776 ;; This function calls:
 12777 ;;		Nothing
 12778 ;; This function is called by:
 12779 ;;		_I2C_Master_Start
 12780 ;;		_I2C_Master_RepeatedStart
 12781 ;;		_I2C_Master_Stop
 12782 ;;		_I2C_Master_Write
 12783 ;;		_I2C_Master_Read
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           
 12788                           ;psect for function _I2C_Master_Wait
 12789  1CDA                     _I2C_Master_Wait:	
 12790                           
 12791                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12792                           
 12793                           ;incstack = 0
 12794                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12795  1CDA  30C8               	movlw	200
 12796  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
 12797  1CDC  00A0               	movwf	??_I2C_Master_Wait
 12798  1CDD  0820               	movf	??_I2C_Master_Wait,w
 12799  1CDE  00A2               	movwf	I2C_Master_Wait@tempo
 12800                           
 12801                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12802  1CDF  2CEC               	goto	l3549
 12803  1CE0                     l3545:	
 12804                           
 12805                           ;I2C.c: 44:          tempo--;
 12806  1CE0  3001               	movlw	1
 12807  1CE1  02A2               	subwf	I2C_Master_Wait@tempo,f
 12808                           
 12809                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12810  1CE2  3003               	movlw	3
 12811  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
 12812  1CE4  1303               	bcf	3,6	;RP1=0, select bank0
 12813  1CE5  00A1               	movwf	??_I2C_Master_Wait+1
 12814  1CE6  3097               	movlw	151
 12815  1CE7  00A0               	movwf	??_I2C_Master_Wait
 12816  1CE8                     u5617:	
 12817  1CE8  0BA0               	decfsz	??_I2C_Master_Wait,f
 12818  1CE9  2CE8               	goto	u5617
 12819  1CEA  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12820  1CEB  2CE8               	goto	u5617
 12821  1CEC                     l3549:	
 12822                           
 12823                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12824  1CEC  1683               	bsf	3,5	;RP0=1, select bank1
 12825  1CED  1303               	bcf	3,6	;RP1=0, select bank1
 12826  1CEE  1914               	btfsc	20,2	;volatile
 12827  1CEF  2CF4               	goto	l3543
 12828  1CF0  0811               	movf	17,w	;volatile
 12829  1CF1  391F               	andlw	31
 12830  1CF2  1903               	btfsc	3,2
 12831  1CF3  2CF8               	goto	l3553
 12832  1CF4                     l3543:	
 12833                           
 12834                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12835  1CF4  1283               	bcf	3,5	;RP0=0, select bank0
 12836  1CF5  0822               	movf	I2C_Master_Wait@tempo,w
 12837  1CF6  1D03               	btfss	3,2
 12838  1CF7  2CE0               	goto	l3545
 12839  1CF8                     l3553:	
 12840                           
 12841                           ;I2C.c: 49:   return tempo ;
 12842  1CF8  1283               	bcf	3,5	;RP0=0, select bank0
 12843  1CF9  0822               	movf	I2C_Master_Wait@tempo,w
 12844  1CFA  0008               	return
 12845  1CFB                     __end_of_I2C_Master_Wait:	
 12846                           
 12847                           	psect	text61
 12848  1B51                     __ptext61:	
 12849 ;; *************** function _ADC_init *****************
 12850 ;; Defined at:
 12851 ;;		line 10 in file "adc.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;		None
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;		None
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  1    wreg      void 
 12858 ;; Registers used:
 12859 ;;		wreg, status,2, status,0
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/100
 12862 ;;		On exit  : 300/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12865 ;;      Params:         0       0       0       0       0
 12866 ;;      Locals:         0       0       0       0       0
 12867 ;;      Temps:          0       0       0       0       0
 12868 ;;      Totals:         0       0       0       0       0
 12869 ;;Total ram usage:        0 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; Hardware stack levels required when called:    1
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_main
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879                           
 12880                           ;psect for function _ADC_init
 12881  1B51                     _ADC_init:	
 12882                           
 12883                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12884                           
 12885                           ;incstack = 0
 12886                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12887  1B51  30C0               	movlw	192
 12888  1B52  1283               	bcf	3,5	;RP0=0, select bank0
 12889  1B53  1303               	bcf	3,6	;RP1=0, select bank0
 12890  1B54  049F               	iorwf	31,f	;volatile
 12891                           
 12892                           ;adc.c: 12:      ADCON1=0b10000000;
 12893  1B55  3080               	movlw	128
 12894  1B56  1683               	bsf	3,5	;RP0=1, select bank1
 12895  1B57  009F               	movwf	31	;volatile
 12896                           
 12897                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12898  1B58  179F               	bsf	31,7	;volatile
 12899                           
 12900                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12901  1B59  1283               	bcf	3,5	;RP0=0, select bank0
 12902  1B5A  141F               	bsf	31,0	;volatile
 12903  1B5B  0008               	return
 12904  1B5C                     __end_of_ADC_init:	
 12905                           
 12906                           	psect	text62
 12907  13DA                     __ptext62:	
 12908 ;; *************** function _isr *****************
 12909 ;; Defined at:
 12910 ;;		line 29 in file "isr.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  tempo           2    6[COMMON] unsigned int 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 300/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12924 ;;      Params:         0       0       0       0       0
 12925 ;;      Locals:         2       0       0       0       0
 12926 ;;      Temps:          6       0       0       0       0
 12927 ;;      Totals:         8       0       0       0       0
 12928 ;;Total ram usage:        8 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		Interrupt level 1
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           
 12938                           ;psect for function _isr
 12939  13DA                     _isr:	
 12940                           
 12941                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12942  13DA  188B               	btfsc	11,1	;volatile
 12943                           
 12944                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12945  13DB  108B               	bcf	11,1	;volatile
 12946                           
 12947                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12948                           
 12949                           ;isr.c: 37:       }
 12950  13DC  1C0C               	btfss	12,0	;volatile
 12951  13DD  2C50               	goto	i1l5495
 12952                           
 12953                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12954  13DE  30B1               	movlw	177
 12955  13DF  008F               	movwf	15	;volatile
 12956                           
 12957                           ;isr.c: 42:                 TMR1L=0xF3;
 12958  13E0  30F3               	movlw	243
 12959  13E1  008E               	movwf	14	;volatile
 12960                           
 12961                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12962  13E2  100C               	bcf	12,0	;volatile
 12963                           
 12964                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12965  13E3  1FEC               	btfss	_generic_status,7
 12966  13E4  2BE7               	goto	i1l5451
 12967                           
 12968                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12969  13E5  13EC               	bcf	_generic_status,7
 12970  13E6  0064               	clrwdt	;# 
 12971  13E7                     i1l5451:	
 12972                           
 12973                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12974  13E7  300A               	movlw	10
 12975  13E8  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12976  13E9  1803               	skipnc
 12977  13EA  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12978  13EB  3000               	movlw	0
 12979  13EC  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12980                           
 12981                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12982  13ED  3003               	movlw	3
 12983  13EE  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12984  13EF  30E8               	movlw	232
 12985  13F0  1903               	skipnz
 12986  13F1  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12987  13F2  1C03               	skipc
 12988  13F3  2BF6               	goto	i1l5455
 12989                           
 12990                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12991  13F4  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12992  13F5  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12993  13F6                     i1l5455:	
 12994                           
 12995                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12996  13F6  3001               	movlw	1
 12997  13F7  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12998  13F8  30F4               	movlw	244
 12999  13F9  1903               	skipnz
 13000  13FA  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13001  13FB  1803               	skipnc
 13002  13FC  2C01               	goto	i1l631
 13003                           
 13004                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13005  13FD  1283               	bcf	3,5	;RP0=0, select bank0
 13006  13FE  1303               	bcf	3,6	;RP1=0, select bank0
 13007  13FF  1786               	bsf	6,7	;volatile
 13008  1400  2C04               	goto	i1l5459
 13009  1401                     i1l631:	
 13010                           ;isr.c: 56:                 else
 13011                           
 13012                           
 13013                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13014  1401  1283               	bcf	3,5	;RP0=0, select bank0
 13015  1402  1303               	bcf	3,6	;RP1=0, select bank0
 13016  1403  1386               	bcf	6,7	;volatile
 13017  1404                     i1l5459:	
 13018                           
 13019                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13020  1404  0866               	movf	_Delay_Led_Usart,w	;volatile
 13021  1405  0467               	iorwf	_Delay_Led_Usart+1,w	;volatile
 13022  1406  1903               	btfsc	3,2
 13023  1407  2C10               	goto	i1l633
 13024                           
 13025                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13026  1408  300A               	movlw	10
 13027  1409  02E6               	subwf	_Delay_Led_Usart,f	;volatile
 13028  140A  3000               	movlw	0
 13029  140B  1C03               	skipc
 13030  140C  03E7               	decf	_Delay_Led_Usart+1,f	;volatile
 13031  140D  02E7               	subwf	_Delay_Led_Usart+1,f	;volatile
 13032                           
 13033                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13034  140E  1706               	bsf	6,6	;volatile
 13035                           
 13036                           ;isr.c: 63:                    }
 13037  140F  2C11               	goto	i1l5465
 13038  1410                     i1l633:	
 13039                           ;isr.c: 64:                 else{
 13040                           
 13041                           
 13042                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13043  1410  1306               	bcf	6,6	;volatile
 13044  1411                     i1l5465:	
 13045                           
 13046                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13047  1411  087A               	movf	_Delay_Led_Memory,w	;volatile
 13048  1412  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13049  1413  1903               	btfsc	3,2
 13050  1414  2C1D               	goto	i1l635
 13051                           
 13052                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13053  1415  300A               	movlw	10
 13054  1416  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13055  1417  3000               	movlw	0
 13056  1418  1C03               	skipc
 13057  1419  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13058  141A  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13059                           
 13060                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13061  141B  1686               	bsf	6,5	;volatile
 13062                           
 13063                           ;isr.c: 71:                    }
 13064  141C  2C1E               	goto	i1l5471
 13065  141D                     i1l635:	
 13066                           ;isr.c: 72:                 else{
 13067                           
 13068                           
 13069                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13070  141D  1286               	bcf	6,5	;volatile
 13071  141E                     i1l5471:	
 13072                           
 13073                           ;isr.c: 77:                 tempodecorrido+=10;
 13074  141E  300A               	movlw	10
 13075  141F  1683               	bsf	3,5	;RP0=1, select bank3
 13076  1420  1703               	bsf	3,6	;RP1=1, select bank3
 13077  1421  0792               	addwf	_tempodecorrido^(0+384),f	;volatile
 13078  1422  1803               	skipnc
 13079  1423  0A93               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13080  1424  3000               	movlw	0
 13081  1425  0793               	addwf	(_tempodecorrido+1)^(0+384),f	;volatile
 13082                           
 13083                           ;isr.c: 78:                 milisegundo+=10;
 13084  1426  300A               	movlw	10
 13085  1427  1303               	bcf	3,6	;RP1=0, select bank1
 13086  1428  07D9               	addwf	_milisegundo^(0+128),f	;volatile
 13087  1429  1803               	skipnc
 13088  142A  0ADA               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13089  142B  3000               	movlw	0
 13090  142C  07DA               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13091                           
 13092                           ;isr.c: 79:                 if(milisegundo==1000){
 13093  142D  30E8               	movlw	232
 13094  142E  0659               	xorwf	_milisegundo^(0+128),w	;volatile
 13095  142F  3003               	movlw	3
 13096  1430  1903               	skipnz
 13097  1431  065A               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13098  1432  1D03               	btfss	3,2
 13099  1433  2C50               	goto	i1l5495
 13100                           
 13101                           ;isr.c: 80:                    milisegundo=0;
 13102  1434  01D9               	clrf	_milisegundo^(0+128)	;volatile
 13103  1435  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13104                           
 13105                           ;isr.c: 81:                    segundo++;
 13106  1436  3001               	movlw	1
 13107  1437  00F0               	movwf	??_isr
 13108  1438  0870               	movf	??_isr,w
 13109  1439  07DE               	addwf	_segundo^(0+128),f	;volatile
 13110                           
 13111                           ;isr.c: 88:                    if(segundo==60){
 13112  143A  303C               	movlw	60
 13113  143B  065E               	xorwf	_segundo^(0+128),w	;volatile
 13114  143C  1D03               	btfss	3,2
 13115  143D  2C50               	goto	i1l5495
 13116                           
 13117                           ;isr.c: 89:                       segundo=0;
 13118  143E  01DE               	clrf	_segundo^(0+128)	;volatile
 13119                           
 13120                           ;isr.c: 90:                       minuto++;
 13121  143F  3001               	movlw	1
 13122  1440  00F0               	movwf	??_isr
 13123  1441  0870               	movf	??_isr,w
 13124  1442  07DC               	addwf	_minuto^(0+128),f	;volatile
 13125                           
 13126                           ;isr.c: 91:                       if(minuto==60){
 13127  1443  303C               	movlw	60
 13128  1444  065C               	xorwf	_minuto^(0+128),w	;volatile
 13129  1445  1D03               	btfss	3,2
 13130  1446  2C50               	goto	i1l5495
 13131                           
 13132                           ;isr.c: 92:                          minuto=0;
 13133  1447  01DC               	clrf	_minuto^(0+128)	;volatile
 13134                           
 13135                           ;isr.c: 93:                          hora++;
 13136  1448  3001               	movlw	1
 13137  1449  00F0               	movwf	??_isr
 13138  144A  0870               	movf	??_isr,w
 13139  144B  07DD               	addwf	_hora^(0+128),f	;volatile
 13140                           
 13141                           ;isr.c: 94:                          if(hora==24){
 13142  144C  3018               	movlw	24
 13143  144D  065D               	xorwf	_hora^(0+128),w	;volatile
 13144  144E  1903               	btfsc	3,2
 13145                           
 13146                           ;isr.c: 95:                             hora=0;
 13147  144F  01DD               	clrf	_hora^(0+128)	;volatile
 13148  1450                     i1l5495:	
 13149                           ;isr.c: 99:                 }
 13150                           
 13151                           
 13152                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13153  1450  1283               	bcf	3,5	;RP0=0, select bank0
 13154  1451  1E8C               	btfss	12,5	;volatile
 13155  1452  2CB8               	goto	i1l649
 13156                           
 13157                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13158  1453  146C               	bsf	_generic_status,0
 13159                           
 13160                           ;isr.c: 109:         tempo=30;
 13161  1454  301E               	movlw	30
 13162  1455  00F6               	movwf	isr@tempo
 13163  1456  3000               	movlw	0
 13164  1457  00F7               	movwf	isr@tempo+1
 13165                           
 13166                           ;isr.c: 110:         count=0;
 13167  1458  1683               	bsf	3,5	;RP0=1, select bank1
 13168  1459  01D5               	clrf	_count^(0+128)	;volatile
 13169  145A  01D6               	clrf	(_count+1)^(0+128)	;volatile
 13170                           
 13171                           ;isr.c: 111:         pointer=usart_buffer;
 13172  145B  3094               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13173  145C  00F0               	movwf	??_isr
 13174  145D  0870               	movf	??_isr,w
 13175  145E  00DB               	movwf	_pointer^(0+128)
 13176  145F                     i1l5517:	
 13177                           ;isr.c: 112:         while(tempo)
 13178                           
 13179                           
 13180                           ;isr.c: 112:         while(tempo)
 13181  145F  0876               	movf	isr@tempo,w
 13182  1460  0477               	iorwf	isr@tempo+1,w
 13183  1461  1903               	btfsc	3,2
 13184  1462  2C92               	goto	i1l5519
 13185                           
 13186                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13187  1463  1283               	bcf	3,5	;RP0=0, select bank0
 13188  1464  1303               	bcf	3,6	;RP1=0, select bank0
 13189  1465  1E8C               	btfss	12,5	;volatile
 13190  1466  2C8B               	goto	i1l5515
 13191                           
 13192                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13193  1467  081A               	movf	26,w	;volatile
 13194  1468  00F0               	movwf	??_isr
 13195  1469  1683               	bsf	3,5	;RP0=1, select bank1
 13196  146A  085B               	movf	_pointer^(0+128),w
 13197  146B  0084               	movwf	4
 13198  146C  0870               	movf	??_isr,w
 13199  146D  1783               	bsf	3,7	;select IRP bank2
 13200  146E  0080               	movwf	0
 13201                           
 13202                           ;isr.c: 118:                 if(count<32+10 -1)
 13203  146F  0856               	movf	(_count+1)^(0+128),w	;volatile
 13204  1470  3A80               	xorlw	128
 13205  1471  00FF               	movwf	127
 13206  1472  3080               	movlw	128
 13207  1473  027F               	subwf	127,w
 13208  1474  1D03               	skipz
 13209  1475  2C78               	goto	u528_25
 13210  1476  3029               	movlw	41
 13211  1477  0255               	subwf	_count^(0+128),w	;volatile
 13212  1478                     u528_25:	
 13213  1478  1803               	skipnc
 13214  1479  2C86               	goto	i1l5513
 13215                           
 13216                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13217  147A  3001               	movlw	1
 13218  147B  1683               	bsf	3,5	;RP0=1, select bank1
 13219  147C  1303               	bcf	3,6	;RP1=0, select bank1
 13220  147D  07D5               	addwf	_count^(0+128),f	;volatile
 13221  147E  1803               	skipnc
 13222  147F  0AD6               	incf	(_count+1)^(0+128),f	;volatile
 13223  1480  3000               	movlw	0
 13224  1481  07D6               	addwf	(_count+1)^(0+128),f	;volatile
 13225                           
 13226                           ;isr.c: 121:                    pointer++;
 13227  1482  3001               	movlw	1
 13228  1483  00F0               	movwf	??_isr
 13229  1484  0870               	movf	??_isr,w
 13230  1485  07DB               	addwf	_pointer^(0+128),f
 13231  1486                     i1l5513:	
 13232                           
 13233                           ;isr.c: 123:                 tempo=30;
 13234  1486  301E               	movlw	30
 13235  1487  00F6               	movwf	isr@tempo
 13236  1488  3000               	movlw	0
 13237  1489  00F7               	movwf	isr@tempo+1
 13238                           
 13239                           ;isr.c: 124:             }
 13240  148A  2C5F               	goto	i1l5517
 13241  148B                     i1l5515:	
 13242                           
 13243                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13244  148B  3001               	movlw	1
 13245  148C  02F6               	subwf	isr@tempo,f
 13246  148D  3000               	movlw	0
 13247  148E  1C03               	skipc
 13248  148F  03F7               	decf	isr@tempo+1,f
 13249  1490  02F7               	subwf	isr@tempo+1,f
 13250  1491  2C5F               	goto	i1l5517
 13251  1492                     i1l5519:	
 13252                           
 13253                           ;isr.c: 131:         (*pointer)=0;
 13254  1492  1683               	bsf	3,5	;RP0=1, select bank1
 13255  1493  1303               	bcf	3,6	;RP1=0, select bank1
 13256  1494  085B               	movf	_pointer^(0+128),w
 13257  1495  0084               	movwf	4
 13258  1496  1783               	bsf	3,7	;select IRP bank2
 13259  1497  0180               	clrf	0
 13260                           
 13261                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13262  1498  1283               	bcf	3,5	;RP0=0, select bank0
 13263  1499  1C98               	btfss	24,1	;volatile
 13264  149A  2CB8               	goto	i1l649
 13265                           
 13266                           ;isr.c: 134:            CREN=0;
 13267  149B  1218               	bcf	24,4	;volatile
 13268                           
 13269                           ;isr.c: 135:            CREN=1;
 13270  149C  1618               	bsf	24,4	;volatile
 13271                           
 13272                           ;isr.c: 136:            tempo=RCREG;
 13273  149D  081A               	movf	26,w	;volatile
 13274  149E  00F0               	movwf	??_isr
 13275  149F  01F1               	clrf	??_isr+1
 13276  14A0  0870               	movf	??_isr,w
 13277  14A1  00F6               	movwf	isr@tempo
 13278  14A2  0871               	movf	??_isr+1,w
 13279  14A3  00F7               	movwf	isr@tempo+1
 13280                           
 13281                           ;isr.c: 137:            tempo=RCREG;
 13282  14A4  081A               	movf	26,w	;volatile
 13283  14A5  00F0               	movwf	??_isr
 13284  14A6  01F1               	clrf	??_isr+1
 13285  14A7  0870               	movf	??_isr,w
 13286  14A8  00F6               	movwf	isr@tempo
 13287  14A9  0871               	movf	??_isr+1,w
 13288  14AA  00F7               	movwf	isr@tempo+1
 13289                           
 13290                           ;isr.c: 138:            tempo=RCREG;
 13291  14AB  081A               	movf	26,w	;volatile
 13292  14AC  00F0               	movwf	??_isr
 13293  14AD  01F1               	clrf	??_isr+1
 13294  14AE  0870               	movf	??_isr,w
 13295  14AF  00F6               	movwf	isr@tempo
 13296  14B0  0871               	movf	??_isr+1,w
 13297  14B1  00F7               	movwf	isr@tempo+1
 13298                           
 13299                           ;isr.c: 139:            usart_buffer[0]=0;
 13300  14B2  1683               	bsf	3,5	;RP0=1, select bank3
 13301  14B3  1703               	bsf	3,6	;RP1=1, select bank3
 13302  14B4  0194               	clrf	_usart_buffer^(0+384)	;volatile
 13303                           
 13304                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13305  14B5  1283               	bcf	3,5	;RP0=0, select bank0
 13306  14B6  1303               	bcf	3,6	;RP1=0, select bank0
 13307  14B7  14EC               	bsf	_generic_status,1
 13308  14B8                     i1l649:	
 13309  14B8  0875               	movf	??_isr+5,w
 13310  14B9  00FF               	movwf	127
 13311  14BA  0874               	movf	??_isr+4,w
 13312  14BB  008A               	movwf	10
 13313  14BC  0873               	movf	??_isr+3,w
 13314  14BD  0084               	movwf	4
 13315  14BE  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13316  14BF  0083               	movwf	3
 13317  14C0  0EFE               	swapf	126,f
 13318  14C1  0E7E               	swapf	126,w
 13319  14C2  0009               	retfie
 13320  14C3                     __end_of_isr:	
 13321  007E                     btemp	set	126	;btemp
 13322  007E                     wtemp0	set	126
 13323                           
 13324                           	psect	intentry
 13325  0004                     __pintentry:	
 13326                           ;incstack = 0
 13327                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13328                           
 13329  0004                     interrupt_function:	
 13330  007E                     saved_w	set	btemp
 13331  0004  00FE               	movwf	btemp
 13332  0005  0E03               	swapf	3,w
 13333  0006  00F2               	movwf	??_isr+2
 13334  0007  0804               	movf	4,w
 13335  0008  00F3               	movwf	??_isr+3
 13336  0009  080A               	movf	10,w
 13337  000A  00F4               	movwf	??_isr+4
 13338  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13339  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13340  000D  087F               	movf	btemp+1,w
 13341  000E  00F5               	movwf	??_isr+5
 13342  000F  160A  118A  2BDA   	ljmp	_isr


Data Sizes:
    Strings     13
    Constant    64
    Data        0
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     70      77
    BANK1            80     45      79
    BANK3            96      0      94
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK3[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(1) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK3[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mediaLeituraPt100Umidadde
    _mediaLeituraPt100Umidadde->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _itoa->_utoa
    _utoa->___lwdiv
    ___flmul->__Umul8_16
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___wmul->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  108904
                                             65 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           14    14      0   16039
                                             51 BANK0     14    14      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3745
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3548
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1803
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1781
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    49    49      0   90488
                                             40 BANK0      4     4      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2286
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1568
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3856
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     492
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     492
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4    7673
                                             33 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                             11 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             5     2      3    2988
                                             21 BANK0      5     2      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     250
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    6     2      4    2465
                                             15 BANK0      6     2      4
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             19 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2523
                                             19 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             15 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             11 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    5527
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            7     2      5    6326
                                             22 BANK0      7     2      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6505
                                             10 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7661
                                             24 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    7627
                                             24 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    7401
                                             10 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     862
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    7040
                                             33 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            11     5      6    6852
                                             22 BANK0     11     5      6
        _EEPROM_24C1025_Write_Buffer
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         12     6      6    6105
                                             10 BANK0     12     6      6
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     578
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4290
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
       ___fltol
       ___wmul
         ___fltol (ARG)
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     107       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5E       9       97.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0     107      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 12:28:15 2020

                              _USART_putc 1B72                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 0047                              ___fldiv@bexp 0046  
                                       pc 0002                              ___fldiv@sign 003F  
                                      l69 09C3           EEPROM_24C1025_Read_Buffer@range 0036  
        EEPROM_24C1025_Write_Str@chip_add 0031                                        fsr 0004  
                     ___wmul@multiplicand 002D                             _USART_put_int 1BA6  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 101C              PROCULUS_VP_Write_String@text 0037  
                                     l421 0413                                       l511 1FF0  
                                     l512 1FF1                                       l425 041F  
                                     l506 1FCB                                       l427 0478  
                                     l516 1D01                                       l538 1C9D  
                                     l482 1B48                                       l804 1BE3  
                                     l787 1C25                                       l867 1B78  
                                     l984 1D26                              __CFG_CPD$OFF 0000  
      EEPROM_24C1025_Read_Buffer@chip_add 0035                  Decodify_Command@sizedata 00C8  
                                     _isr 13DA                                       fsr0 0004  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 2000  
                        _ADC_Media_10bits 1169                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0037                              ___flmul@bexp 003C  
                  PROCULUS_VP_Write@vetor 0031              ?_EEPROM_24C1025_Write_Buffer 002A  
                            ___flmul@sign 0036                              ___flmul@temp 0041  
                            ___flmul@prod 003D   __end_of_PROCULUS_Control_Register_Write 1FC5  
__size_of_PROCULUS_Control_Register_Write 0038         ??_PROCULUS_Control_Register_Write 0030  
        ?_PROCULUS_Control_Register_Write 002F           _PROCULUS_Control_Register_Write 1F8D  
                            __CFG_LVP$OFF 0000                              ___fltol@exp1 002A  
                         __end_of_MAX_ADC 1024                                      l1311 0FDD  
                                    l1411 1354                                      l1333 0C7E  
                                    l1319 0FF5                                      l1424 13AA  
                                    l1177 07BB                                      l4001 07CA  
                                    l1425 13B4                                      l1417 1394  
                                    l1281 0EBC                                      l1355 0DBD  
                                    l1283 0E9A                                      l1357 0DCB  
                                    l4101 0EB6                                      l1277 0E23  
                                    l1438 1321                                      l4023 0DF1  
                                    l1481 1D71                                      l1385 0761  
                                    l4025 0DF9                                      l1298 0F75  
                                    l4203 1D69                                      l4043 0E18  
                                    l4019 0DEE                                      l5013 10BF  
                                    l4117 0EEB                                      l4109 0ECA  
                                    l4053 0E2D                                      l4231 1379  
                                    l4119 0EED                                      l4127 0EFD  
                                    l4047 0E1B                                      l5033 10D9  
                                    l4241 1399                                      l4225 1363  
                                    l4153 0F96                                      l4145 0F87  
                                    l4137 0F67                                      l4161 0F9F  
                                    l4219 134C                                      l4171 0FAA  
                                    l4091 0EA5                                      l4083 0E69  
                                    l4421 0A27                                      l4253 13D1  
                                    l4229 1367                                      l4093 0EA7  
                                    l3543 1CF4                                      l5047 10E0  
                                    l4239 13A8                                      l4167 0FA8  
                                    l4159 0F9D                                      l3545 1CE0  
                                    l3553 1CF8                                      l3633 1778  
                                    l4417 0A21                                      l4361 1689  
                                    l4353 1667                                      l4193 0FF1  
                                    l5065 0851                                      l3635 177D  
                                    l4419 0A26                                      l4443 0A74  
                                    l4259 12D8                                      l4611 0809  
                                    l5083 0899                                      l5075 0884  
                                    l3549 1CEC                                      l3637 177E  
                                    l3653 17B7                                      l3661 170A  
                                    l4453 0A9B                                      l4373 0970  
                                    l4517 1E59                                      l3725 109E  
                                    l3717 107A                                      l3741 1E8A  
                                    l4269 12F7                                      l4613 0813  
                                    l4605 1C45                                      l6029 042B  
                                    l4189 0FED                                      l3663 17DD  
                                    l4455 0AA4                                      l4375 0975  
                                    l4359 1613                                      l4295 15D5  
                                    l3719 1088                                      l3743 1E98  
                                    l3751 1EB1                                      l3577 1F5D  
                                    l3681 1F01                                      l4377 0976  
                                    l4297 15DA                                      l4561 1DF9  
                                    l3729 10A9                                      l4545 124F  
                                    l4617 081D                                      l4801 0D3F  
                                    l4721 0C58                                      l5097 093B  
                                    l3659 17D8                                      l3595 16CB  
                                    l4299 15DB                                      l4563 1E16  
                                    l3747 1EA6                                      l3915 1F26  
                                    l4811 0D58                                      l4715 0C4D  
                                    l3597 16D0                                      l3685 1F14  
                                    l3693 1F1B                                      l5605 0B9D  
                                    l4493 1DD5                                      l3861 1EDC  
                                    l4645 1184                                      l4821 0D8A  
                                    l3599 16D1                                      l4479 10F4  
                                    l5607 0BA2                                      l5631 0BF0  
                                    l3935 1FA7                                      l3951 114B  
                                    l5711 010C                                      l4663 1BE8  
                                    l4807 0D56                                      l4735 0C73  
                                    l4719 0C50                                      l5609 0BA3  
                                    l5641 0C1B                                      l5561 0AE4  
                                    l3937 1FBD                                      l3953 1161  
                                    l4585 1D88                                      l5721 013A  
                                    l4825 0DA3                                      l5563 0AE9  
                                    l3867 1FD6                                      l5651 1C1A  
                                    l3971 0777                                      l3859 1EBA  
                                    l5731 0165                                      l5715 0123  
                                    l5707 00FD                                      l4691 12CA  
                                    l4667 1BEB                                      l4755 0CA9  
                                    l4739 0C76                                      l5637 0C16  
                                    l5565 0AEA                                      l3869 1FD9  
                                    l3957 1D1E                                      l4941 06D0  
                                    l4861 049E                                      l4597 1CCD  
                                    l5813 033D                                      l5805 02E9  
                                    l4677 1285                                      l4837 0DC7  
                                    l4781 0D17                                      l4749 0C9D  
                                    l5639 0B37                                      l3991 07A7  
                                    l3975 0780                                      l4951 06E9  
                                    l5823 0363                                      l5743 0190  
                                    l4687 12BD                                      l4679 1295  
                                    l4775 0CF8                                      l4783 0CD4  
                                    l5649 1C0B                                      l3993 07B7  
                                    l4961 071B                                      l4857 0494  
                                    l5841 03B2                                      l5833 0389  
                                    l5761 01EE                                      l5737 0184  
                                    l4785 0D1C                                      l4971 074A  
                                    l4947 06E7                                      l4939 06B3  
                                    l4875 04B9                                      l4859 0496  
                                    l5755 01C8                                      l5683 0067  
                                    ?_isr 0070                                      l4965 0731  
                                    l4877 04BB                                      l5853 03D5  
                                    l5781 0272                                      l5773 0236  
                                    l5749 01AA                                      l4887 04D1  
                                    l4879 04C3                                      l5871 0416  
                                    l5847 03C6                                      l5767 0219  
                                    l5687 0073                                      l5679 0058  
                                    l4799 0D22                                      l5865 0409  
                                    l5793 02B0                                      l5859 03ED  
                                    l5787 0294                                      l5699 00CC  
                                    l5883 0422                                      l5799 02D8  
                                    l5959 154B                                      l5985 1575  
                                    _BETA 1048                                      STR_1 1050  
                            __CFG_WDTE$ON 0000                                      STR_2 1057  
                                    STR_3 1056                                      STR_4 105B  
                                    STR_5 1056                                      STR_6 105B  
                                    STR_7 1056                                      STR_8 1058  
                             _statuspower 006B                                      _CREN 00C4  
                                    u4003 09D5                                      u3205 07A8  
                                    u4023 0A1F                                      u3135 1D27  
                                    u3145 1D2E                                      u3235 07C0  
                                    u4115 1D91                                      u3083 1F38  
                                    u4053 1125                                      u3501 0F28  
                                    u3405 0EAB                                      u3510 0F3C  
                                    u3502 0F29                                      u2703 16B8  
                                    u3175 0789                                      u4215 1289  
                                    u3511 0F3D                                      u3503 0F2E  
                                    u2800 1F11                                      u3512 0F42  
                                    u3504 0F2F                                      u3360 0E89  
                                    u2713 16C9                                      u3513 0F43  
                                    u3505 0F34                                      u3506 0F35  
                                    u3370 0E8A                                      u2723 172C  
                                    u4235 1297                                      u3355 0E7D  
                                    u4085 125B                                      u4245 12AC  
                                    u4405 0D06                                      u2743 1776  
                                    u4255 12BE                                      u5313 0AD1  
                                    u2825 1C2B                                      u2683 1F6F  
                                    u2755 1718                                      u5323 0AE2  
                                    u2915 1E8D                                      u4435 0D26  
                                    u3555 0F89                                      u5333 0B4D  
                                    u2845 107D                                      u3805 138C  
                                    u4525 0D75                                      u4365 0CDD  
                                    u3493 0F0F                                      u3485 0EF1  
                                    u3735 1D72                                      u2935 1E9E  
                                    u4535 0D93                                      u4455 0D31  
                                    u4375 0CE6                                      u3655 0FC7  
                                    u5353 0B9B                                      u2865 1089  
                                    u2945 1EA7                                      u3825 13A1  
                                    u4545 0DAE                                      u3923 15C2  
                                    u2875 1095                                      u4715 05D4  
                                    u4395 0CF1                                      u3933 15D3  
                                    u2885 109F                                      u5607 1F78  
                                    u3943 162B                                      u4815 06C2  
                                    u5527 14CB                                      u5617 1CE8  
                                    u4905 073C                                      u3865 13BC  
                                    u3785 1370                                      u5537 1F40  
                                    u5547 1C33                                      u4755 0668  
                                    u5557 1E7E                                      u4685 057B  
                                    u4925 1E2F                                      u3983 095D  
                                    u5567 1FFA                                      u3993 096E  
                                    u5577 1D13                                      u4785 069F  
                                    u5587 0AB5                                      u4795 06B7  
                                    u5597 0C2C                                      u4885 0706  
                                    u4895 0724                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0036                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 1B72  
                                    _main 14C3                                      _hora 00DD  
                                    _itoa 1CBA         __size_of_EEPROM_24C1025_Write_Int 001F  
                                    btemp 007E                                      _utoa 12D3  
       __size_of_EEPROM_24C1025_Write_Str 00F2                 ?_EEPROM_24C1025_Write_Int 0036  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 002A  
             __size_of_EEPROM_Read_String 001F                                      start 0012  
                        __end_of_ADC_init 1B5C                          _BALANCE_RESISTOR 104C  
                         ___fldiv@new_exp 0040        EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                   ??_isr 0070                          ?_I2C_Master_Init 002E  
                        ?_I2C_Master_Read 0023                          ?_I2C_Master_Wait 0070  
                        ?_I2C_Master_Stop 0070                            ?_USART_put_int 002B  
                           ___fltol@sign1 0029                           __end_of___fladd 1000  
                                   ?_main 0070                           __end_of___fldiv 0DD3  
                                   ?_itoa 0031                                     _EEADR 010D  
                         __end_of___flmul 076E                           __end_of___flsub 1C7C  
                         __end_of___fltol 07D9                                     _ANSEL 0188  
                         __end_of___lldiv 12D3                                     ?_utoa 0028  
                                   _T1CON 0010                           __end_of___lwdiv 10AE  
                         __end_of___lwmod 1EB6                                     i1l631 1401  
                                   i1l633 1410                                     i1l635 141D  
                                   i1l649 14B8                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 003E                                     _TRISE 0089  
                                   _TXREG 0019                     ADC_Media_10bits@canal 0033  
                         __end_of_captura 1B51                             __CFG_PWRTE$ON 0000  
                            _usart_buffer 0194                     ADC_Media_10bits@value 0034  
               EEPROM_Read_Integer@result 0028                                     _canal 006A  
            __size_of_EEPROM_Read_Integer 0029                                     _count 00D5  
                                   _errno 0190             ??_EEPROM_24C1025_Write_Buffer 0030  
      __size_of_EEPROM_24C1025_Write_Byte 0015                                     _texto 01DE  
              ?_EEPROM_24C1025_Write_Byte 0036                                     pclath 000A  
                                   utoa@c 002F                                     utoa@v 002D  
                                   status 0003                                     wtemp0 007E  
         EEPROM_24C1025_Read_Byte@mem_add 0038                              __end_of_BETA 104C  
                 __size_of_PROCULUS_Delay 001D                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 001A                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 0035  
                             ?_USART_putc 0070                              __end_of_main 15B1  
                            __end_of_itoa 1CDA                              __end_of_utoa 1337  
                          Send_To_MB@size 0021                          _USART_put_buffer 1D82  
                __end_of_EEPROM_Read_Byte 1D1C                                    ??_main 0061  
                                  ??_itoa 0035                          __end_of_Save_Log 1218  
                                  ??_utoa 002C                          _USART_put_string 1EB6  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0070  
               EEPROM_Write_Byte@last_GIE 0024                         ?_I2C_Master_Write 0023  
                      ??_I2C_Master_Start 0023                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0025                 PROCULUS_Show_Screen@vetor 0036  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 1DA6                     EEPROM_Write_Integer@i 002C  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1072  
              mediaLeituraPt100Umidadde@i 005C                                    i1l5513 1486  
                                  i1l5515 148B                                    i1l5451 13E7  
                                  i1l5517 145F                                    i1l5519 1492  
                                  i1l5471 141E                                    i1l5455 13F6  
                                  i1l5465 1411                                    i1l5459 1404  
                                  i1l5495 1450         __end_of_EEPROM_24C1025_Write_Byte 1BA6  
                                  u528_25 1478                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0041                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 0044                          __end_of___xxtofl 13DA  
                      PROCULUS_VP_Write@i 0034                  __end_of_Decodify_Command 0479  
                ?_EEPROM_24C1025_Read_Int 0038                  ?_EEPROM_24C1025_Read_Str 002A  
                _I2C_Master_RepeatedStart 1B67                ?_mediaLeituraPt100Umidadde 0070  
    __size_of_EEPROM_24C1025_Write_Buffer 015D                                 ??___fladd 003F  
                                  ___wmul 1D1C                                 ??___fldiv 0036  
                               ??___flmul 0031                                 ??___flsub 0053  
                               ??___fltol 0024                           ??_USART_put_int 002D  
                               ??___lldiv 0028                                    _header 00D7  
                       __end_of_ROOM_TEMP 1020                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 01BE  
                       _USART_to_Protocol 1218                           USART_putc@value 0020  
       EEPROM_24C1025_Read_Buffer@cnt_103 0034                                    _minuto 00DC  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00C9                                    _strcat 0804  
                                  _strcpy 1C40                                    _strlen 1C07  
       EEPROM_24C1025_Read_Buffer@mem_add 002A          __end_of_EEPROM_24C1025_Read_Byte 1BD4  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 003C                                 ?_ADC_init 0070  
          mediaLeituraPt100Umidadde@canal 005B                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 000F  
                            ___xxtofl@arg 002A                              ___xxtofl@exp 0029  
                            ___xxtofl@val 0020                          __end_oflog@coeff 1048  
                 __end_of__initialization 0033       PROCULUS_Control_Register_Write@size 002F  
                              ___fltol@f1 0020                              _Board_Number 0069  
                __end_of_ADC_Media_10bits 11BE                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 1275  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 1050  
        __end_of_EEPROM_24C1025_Write_Int 1C9B                        Decodify_Command@hh 00A0  
                      Decodify_Command@mm 00AA          __end_of_EEPROM_24C1025_Write_Str 16A3  
                      Decodify_Command@ss 00B4                      USART_put_buffer@loop 0025  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1E21           __end_of_EEPROM_24C1025_Fill_All 1128  
                             ?_Send_To_MB 0070                    __size_of_Send_Reply_OK 0009  
                              __pbssBANK0 0066                                __pbssBANK1 00CD  
                              __pbssBANK3 0190                        _RESISTOR_ROOM_TEMP 1018  
         __end_of_EEPROM_24C1025_Read_Int 0800           __end_of_EEPROM_24C1025_Read_Str 0ABB  
                ?_Package_Usart_is_for_me 0070                                 ?_Save_Log 0041  
                          _PROCULUS_Delay 1C23                         __end_of__Umul8_16 1D82  
                              __pmaintext 14C3                       Save_Log@add_datalog 0041  
                     _EEPROM_Read_Integer 1DCE                                   ?___wmul 002B  
              PROCULUS_Show_Screen@screen 0033                                __pintentry 0004  
                    _PROCULUS_Show_Screen 105D                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                               ?___xxtofl 0020                                   _MAX_ADC 1020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00BE  
             EEPROM_24C1025_Read_Int@data 003F                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1C07                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 1BBC  
                              __stringtab 1000                       PROCULUS_VP_Write@vp 002F  
             ??_EEPROM_24C1025_Write_Byte 003B                  __end_of_USART_put_buffer 1DA6  
              __end_of_EEPROM_Read_String 1CBA                    __end_of_PROCULUS_Delay 1C40  
                __end_of_USART_put_string 1EE9                      __size_of_my_delay_ms 0037  
                              ??_Save_Log 0045                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0034  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 005D  
             PROCULUS_Buzzer@time_ms_x_10 0033                                   ___fladd 0DD3  
                                 ___fldiv 0C32                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 0479                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1C5E                                   ___fltol 076E  
                                 ___lldiv 1275                           __size_of___wmul 0021  
                                 ___lwdiv 1072                                   ___lwmod 1E84  
                           _Send_Reply_OK 1B3E                       __size_of_Send_To_MB 0028  
                   ?_PROCULUS_Show_Screen 0033                                   _captura 1B47  
                        _statuspower_memo 007C                                   __ptext1 0830  
                                 __ptext2 1C5E                                   __ptext3 0DD3  
                                 __ptext4 0C32                                   __ptext5 1BD4  
                                 __ptext6 1169                                   __ptext7 1F1E  
                                 __ptext8 1B47                                   __ptext9 1337  
                       ??_PROCULUS_Buzzer 0035                                   _destino 0068  
                       ?_EEPROM_Read_Byte 0070                           __size_of_strcat 002C  
                         __size_of_strcpy 001E                           __size_of_strlen 001C  
                            __size_of_isr 00E9                                ??___xxtofl 0024  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 00DE  
                __size_of_I2C_Master_Init 0031                  __size_of_I2C_Master_Read 0035  
                          _usart_protocol 00DF                     ??_EEPROM_Read_Integer 0025  
                __size_of_I2C_Master_Wait 0021                  __size_of_I2C_Master_Stop 0009  
           EEPROM_24C1025_Write_Int@local 003F                                   _pointer 00DB  
           EEPROM_24C1025_Write_Byte@data 003A                                   clrloop0 1B2E  
                      __end_of_USART_init 10EA           __end_of_Package_Usart_is_for_me 1BED  
                      __end_of_USART_putc 1B81                         ADC_Media_10bits@i 0036  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 1C7C  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 15B1  
              ??_I2C_Master_RepeatedStart 0023                                   itoa@buf 0037  
                                 itoa@val 0031                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0035                 __size_of_I2C_Master_Start 0010  
               __size_of_I2C_Master_Write 000B                         ?_Decodify_Command 0070  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002D  
                      ??_Decodify_Command 0048                                 _RCSTAbits 0018  
             ??_mediaLeituraPt100Umidadde 0053                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0023                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 1B91  
                                 utoa@val 0028           mediaLeituraPt100Umidadde@tensao 0057  
        __size_of_EEPROM_24C1025_Fill_All 003E                                   strlen@s 0020  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 007A              ??_EEPROM_24C1025_Read_Buffer 0031  
           EEPROM_24C1025_Write_Str@range 0032                                 _ROOM_TEMP 101C  
                             ___fladd@grs 004A          __size_of_EEPROM_24C1025_Read_Int 0027  
        __size_of_EEPROM_24C1025_Read_Str 0170                             ___xxtofl@sign 0028  
     __end_of_EEPROM_24C1025_Write_Buffer 1800               _EEPROM_24C1025_Write_Buffer 16A3  
                             ___fldiv@grs 0042                               ___fldiv@rem 003B  
    PROCULUS_Control_Register_Write@vetor 0031          EEPROM_24C1025_Write_Buffer@count 0032  
         EEPROM_24C1025_Write_Int@mem_add 0036          EEPROM_24C1025_Write_Buffer@range 0034  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00C1  
                   PROCULUS_VP_Write@size 0032           EEPROM_24C1025_Read_Str@chip_add 0032  
                             ___flmul@grs 0038                  _PROCULUS_VP_Write_String 1BED  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 0177  
                       ?_ADC_Media_10bits 002E                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0035                        ??_ADC_Media_10bits 0032  
                          __end_of___wmul 1D3D                     __end_of_USART_put_int 1BBC  
                             _BAUDCTLbits 0187                            __end_of_strcat 0830  
                          __end_of_strcpy 1C5E                            __end_of_strlen 1C23  
                     start_initialization 0015                 _mediaLeituraPt100Umidadde 0830  
                             __end_of_isr 14C3                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0025                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0023              __end_of_EEPROM_Write_Integer 1E84  
        EEPROM_24C1025_Write_Int@chip_add 003E                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0027  
                         ??_Send_Reply_OK 0025                         __size_of_Save_Log 005A  
                    I2C_Master_Wait@tempo 0022                                  ??___wmul 002F  
                               __Umul8_16 1D5F             mediaLeituraPt100Umidadde@Temp 005D  
                      __end_of_Send_To_MB 1DCE          __size_of_Package_Usart_is_for_me 0019  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 003C  
      EEPROM_24C1025_Write_Buffer@mem_add 002A                                 ___fladd@a 003B  
                               ___fladd@b 0037          EEPROM_24C1025_Write_Byte@mem_add 0036  
                               ___fldiv@a 002E                                 ___fldiv@b 0032  
                               ___flmul@a 002D                                 ___flmul@b 0029  
                             __pbssCOMMON 0078                                 ___flsub@a 004B  
                               ___flsub@b 004F                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                       _PROCULUS_VP_Write 1128                         __size_of___xxtofl 00A3  
                      ?_PROCULUS_VP_Write 002F                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 002A  
                        _I2C_Master_Start 1B81                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 1B5C                       ??_PROCULUS_VP_Write 0033  
                          _tempodecorrido 0192                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1D3D                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 0037                                  ?___fldiv 002E  
                 _EEPROM_24C1025_Fill_All 10EA                                  ?___flmul 0029  
                                ?___flsub 004B                                  ?___fltol 0020  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 1C9B                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 0C32  
              _EEPROM_24C1025_Read_Buffer 0ABB                                  ?_captura 0020  
                               __pstrings 1000                           _my_delay_ms_WDT 1F55  
                 _EEPROM_24C1025_Read_Int 07D9                   _EEPROM_24C1025_Read_Str 094B  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 003C  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 1169                EEPROM_24C1025_Read_Str@cnt 0031  
                                _ADC_init 1B51                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0037  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0021  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                          ___wmul@product 002F                      ??_EEPROM_Read_String 0024  
                               clear_ram0 1B2D                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0032  
                  Decodify_Command@OutPut 00C3                           _PT100_TRANSLADA 1010  
                         _Delay_Led_Usart 0066              EEPROM_24C1025_Read_Byte@data 003D  
             __end_of_EEPROM_Read_Integer 1DF7                                _ADCON0bits 001F  
                             __stringbase 100F                                _ADCON1bits 009F  
                       ___wmul@multiplier 002B                 __size_of_Decodify_Command 0442  
                    _EEPROM_Write_Integer 1E52            EEPROM_24C1025_Read_Int@mem_add 0038  
                               main@reset 0064                ??_PROCULUS_VP_Write_String 0038  
                     I2C_Master_Read@temp 0027                   __end_of_PROCULUS_Buzzer 1D5F  
      __size_of_mediaLeituraPt100Umidadde 011B                            _generic_status 006C  
                              _EECON1bits 018C                                  _Save_Log 11BE  
               ??_EEPROM_24C1025_Fill_All 0043                       __end_of_my_delay_ms 1F55  
            EEPROM_24C1025_Read_Str@range 0033              EEPROM_24C1025_Read_Str@texto 002E  
                                _Umidade1 00CD                   __end_of_my_delay_ms_WDT 1F8D  
                            my_delay_ms@i 0026                               ??__Umul8_16 0022  
       __size_of_I2C_Master_RepeatedStart 000B                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 003C                   _Package_Usart_is_for_me 1BD4  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002F  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                        __end_of__stringtab 1010  
     EEPROM_24C1025_Write_Buffer@chip_add 0033                       USART_put_string@ptr 0023  
                        __size_of_captura 000A                     ?_EEPROM_Write_Integer 0025  
                            _Temperatura0 00D1                           _I2C_Master_Init 1E21  
                         _I2C_Master_Read 1EE9                                  ___xxtofl 1337  
              __size_of_PROCULUS_VP_Write 0041                           _I2C_Master_Wait 1CDA  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 003C  
                         _I2C_Master_Stop 1B35                 __size_of_ADC_Media_10bits 0055  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0027  
                                __ptext10 10AE                                  __ptext11 1E21  
                                __ptext20 1D5F                                  __ptext12 1275  
                                __ptext21 1218                                  __ptext13 0037  
                                __ptext30 1C07                                  __ptext22 1D82  
                                __ptext14 1C40                                  __ptext31 1128  
                                __ptext23 1DA6                                  __ptext15 0804  
                                __ptext40 1E52                                  __ptext32 105D  
                                __ptext24 1B3E                                  __ptext16 1CBA  
                                __ptext41 1FC5                                  __ptext33 1D3D  
                                __ptext25 1EB6                                  __ptext17 12D3  
                                __ptext50 0ABB                                  __ptext42 1C9B  
                                __ptext34 1072                                  __ptext26 11BE  
                                __ptext18 1E84                                  __ptext51 1B67  
                                __ptext43 1DCE                                  __ptext35 1F8D  
                                __ptext27 1D1C                                  __ptext19 0479  
                                __ptext60 1CDA                                  __ptext52 1EE9  
                                __ptext44 1CFB                                  __ptext36 1BA6  
                                __ptext28 076E                                  __ptext61 1B51  
                                __ptext53 10EA                                  __ptext45 15B1  
                                __ptext37 1B72                                  __ptext29 1BED  
                                __ptext62 13DA                                  __ptext54 1C7C  
                                __ptext46 1B91                                  __ptext38 1C23  
                                __ptext55 16A3                                  __ptext47 094B  
                                __ptext39 1DF7                                  __ptext56 1F55  
                                __ptext48 07D9                                  __ptext57 1B5C  
                                __ptext49 1BBC                                  __ptext58 1B35  
                                __ptext59 1B81                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 002B                            _PT100_CONSTANT 1014  
                              strcpy@from 0020                             __size_of_main 00EE  
                           __size_of_itoa 0020                             __size_of_utoa 0064  
            EEPROM_24C1025_Fill_All@value 0041                PROCULUS_VP_Write_String@vp 0035  
                 __end_of_PT100_TRANSLADA 1014       EEPROM_24C1025_Write_Buffer@sizedata 002E  
                             _milisegundo 00D9         __end_of_mediaLeituraPt100Umidadde 094B  
                          _Delay_Led_Tmr0 0078             __size_of_PROCULUS_Show_Screen 0015  
                     _EEPROM_Write_String 1DF7                                  log@coeff 1024  
                __end_of_I2C_Master_Start 1B91                  __end_of_I2C_Master_Write 1B67  
                              _INTCONbits 000B                    __end_of_PT100_CONSTANT 1018  
                                isr@tempo 0076                                  itoa@base 0033  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0033  
                       USART_put_int@dado 002E                          _EEPROM_Read_Byte 1CFB  
                             _my_delay_ms 1F1E                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 0016              EEPROM_24C1025_Write_Int@data 003A  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0027  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
                               stringcode 100A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 1B47                   __end_of_I2C_Master_Init 1E52  
                 __end_of_I2C_Master_Read 1F1E                   __end_of_I2C_Master_Wait 1CFB  
                 __end_of_I2C_Master_Stop 1B3E              EEPROM_24C1025_Write_Str@data 002E  
            EEPROM_24C1025_Write_Str@ctrl 0033                 __size_of_USART_put_buffer 0024  
             ?_EEPROM_24C1025_Read_Buffer 002A           EEPROM_24C1025_Fill_All@chip_add 0043  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 002A  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0037                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0023  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0022                                  strcpy@to 0022  
                         ___lwmod@counter 0025                                  stringdir 100A  
                                stringtab 1000                               _SSPCON2bits 0091  
                       _EEPROM_Write_Byte 1FC5            EEPROM_24C1025_Read_Str@mem_add 002A  
                           ___fladd@signs 0047                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 0048  
                            ___fladd@bexp 0049         __size_of_EEPROM_24C1025_Read_Byte 0018  
               ?_EEPROM_24C1025_Read_Byte 0038                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 10AE  
