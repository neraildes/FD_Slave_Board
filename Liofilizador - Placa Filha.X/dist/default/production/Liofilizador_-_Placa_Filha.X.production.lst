

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 20 09:49:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text22,local,class=CODE,merge=1,delta=2
    25                           	psect	text23,local,class=CODE,merge=1,delta=2
    26                           	psect	text30,local,class=CODE,merge=1,delta=2
    27                           	psect	text32,local,class=CODE,merge=1,delta=2
    28                           	psect	text44,local,class=CODE,merge=1,delta=2
    29                           	psect	text46,local,class=CODE,merge=1,delta=2
    30                           	psect	text49,local,class=CODE,merge=1,delta=2
    31                           	psect	text52,local,class=CODE,merge=1,delta=2
    32                           	psect	text56,local,class=CODE,merge=1,delta=2
    33                           	psect	text67,local,class=CODE,merge=1,delta=2
    34                           	psect	text73,local,class=CODE,merge=1,delta=2
    35                           	psect	text74,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	pa_nodes0,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0089                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  008F                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0094                     	;# 
   504  0095                     	;# 
   505  0096                     	;# 
   506  0097                     	;# 
   507  0098                     	;# 
   508  0099                     	;# 
   509  009A                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  0105                     	;# 
   516  0107                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0185                     	;# 
   525  0187                     	;# 
   526  0188                     	;# 
   527  0189                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0089                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  008F                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0094                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009A                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0105                     	;# 
   592  0107                     	;# 
   593  0108                     	;# 
   594  0109                     	;# 
   595  010C                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0185                     	;# 
   601  0187                     	;# 
   602  0188                     	;# 
   603  0189                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  000E                     	;# 
   621  000F                     	;# 
   622  0010                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0015                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  0081                     	;# 
   641  0085                     	;# 
   642  0086                     	;# 
   643  0087                     	;# 
   644  0089                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008F                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  0105                     	;# 
   668  0107                     	;# 
   669  0108                     	;# 
   670  0109                     	;# 
   671  010C                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010F                     	;# 
   676  0185                     	;# 
   677  0187                     	;# 
   678  0188                     	;# 
   679  0189                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000E                     	;# 
   697  000F                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0015                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001B                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  0081                     	;# 
   717  0085                     	;# 
   718  0086                     	;# 
   719  0087                     	;# 
   720  0089                     	;# 
   721  008C                     	;# 
   722  008D                     	;# 
   723  008E                     	;# 
   724  008F                     	;# 
   725  0090                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0093                     	;# 
   731  0094                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  0105                     	;# 
   744  0107                     	;# 
   745  0108                     	;# 
   746  0109                     	;# 
   747  010C                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0187                     	;# 
   754  0188                     	;# 
   755  0189                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001D                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  0081                     	;# 
   793  0085                     	;# 
   794  0086                     	;# 
   795  0087                     	;# 
   796  0089                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0093                     	;# 
   807  0094                     	;# 
   808  0095                     	;# 
   809  0096                     	;# 
   810  0097                     	;# 
   811  0098                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  009F                     	;# 
   819  0105                     	;# 
   820  0107                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  0185                     	;# 
   829  0187                     	;# 
   830  0188                     	;# 
   831  0189                     	;# 
   832  018C                     	;# 
   833  018D                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000D                     	;# 
   847  000E                     	;# 
   848  000E                     	;# 
   849  000F                     	;# 
   850  0010                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0014                     	;# 
   855  0015                     	;# 
   856  0015                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001B                     	;# 
   864  001C                     	;# 
   865  001D                     	;# 
   866  001E                     	;# 
   867  001F                     	;# 
   868  0081                     	;# 
   869  0085                     	;# 
   870  0086                     	;# 
   871  0087                     	;# 
   872  0089                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  009F                     	;# 
   895  0105                     	;# 
   896  0107                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010E                     	;# 
   903  010F                     	;# 
   904  0185                     	;# 
   905  0187                     	;# 
   906  0188                     	;# 
   907  0189                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  000E                     	;# 
   925  000F                     	;# 
   926  0010                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0013                     	;# 
   930  0014                     	;# 
   931  0015                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  001D                     	;# 
   942  001E                     	;# 
   943  001F                     	;# 
   944  0081                     	;# 
   945  0085                     	;# 
   946  0086                     	;# 
   947  0087                     	;# 
   948  0089                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  008E                     	;# 
   952  008F                     	;# 
   953  0090                     	;# 
   954  0091                     	;# 
   955  0092                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  009F                     	;# 
   971  0105                     	;# 
   972  0107                     	;# 
   973  0108                     	;# 
   974  0109                     	;# 
   975  010C                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  010F                     	;# 
   980  0185                     	;# 
   981  0187                     	;# 
   982  0188                     	;# 
   983  0189                     	;# 
   984  018C                     	;# 
   985  018D                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000E                     	;# 
  1001  000F                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0015                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  0081                     	;# 
  1021  0085                     	;# 
  1022  0086                     	;# 
  1023  0087                     	;# 
  1024  0089                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  008F                     	;# 
  1029  0090                     	;# 
  1030  0091                     	;# 
  1031  0092                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  0105                     	;# 
  1048  0107                     	;# 
  1049  0108                     	;# 
  1050  0109                     	;# 
  1051  010C                     	;# 
  1052  010C                     	;# 
  1053  010D                     	;# 
  1054  010E                     	;# 
  1055  010F                     	;# 
  1056  0185                     	;# 
  1057  0187                     	;# 
  1058  0188                     	;# 
  1059  0189                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000D                     	;# 
  1075  000E                     	;# 
  1076  000E                     	;# 
  1077  000F                     	;# 
  1078  0010                     	;# 
  1079  0011                     	;# 
  1080  0012                     	;# 
  1081  0013                     	;# 
  1082  0014                     	;# 
  1083  0015                     	;# 
  1084  0015                     	;# 
  1085  0016                     	;# 
  1086  0017                     	;# 
  1087  0018                     	;# 
  1088  0019                     	;# 
  1089  001A                     	;# 
  1090  001B                     	;# 
  1091  001B                     	;# 
  1092  001C                     	;# 
  1093  001D                     	;# 
  1094  001E                     	;# 
  1095  001F                     	;# 
  1096  0081                     	;# 
  1097  0085                     	;# 
  1098  0086                     	;# 
  1099  0087                     	;# 
  1100  0089                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  008F                     	;# 
  1105  0090                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0093                     	;# 
  1109  0093                     	;# 
  1110  0093                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  009F                     	;# 
  1123  0105                     	;# 
  1124  0107                     	;# 
  1125  0108                     	;# 
  1126  0109                     	;# 
  1127  010C                     	;# 
  1128  010C                     	;# 
  1129  010D                     	;# 
  1130  010E                     	;# 
  1131  010F                     	;# 
  1132  0185                     	;# 
  1133  0187                     	;# 
  1134  0188                     	;# 
  1135  0189                     	;# 
  1136  018C                     	;# 
  1137  018D                     	;# 
  1138                           
  1139                           	psect	idataBANK3
  1140  0000                     __pidataBANK3:	
  1141                           
  1142                           	psect	strings
  1143  1800                     __pstrings:	
  1144  1800                     stringtab:	
  1145  1800                     __stringtab:	
  1146                           
  1147                           ;	String table - string pointers are 1 byte each
  1148  1800  1BFF               	btfsc	btemp+1,7
  1149  1801  280A               	ljmp	stringcode
  1150  1802  1383               	bcf	3,7
  1151  1803  187F               	btfsc	btemp+1,0
  1152  1804  1783               	bsf	3,7
  1153  1805  0800               	movf	0,w
  1154  1806  0A84               	incf	4,f
  1155  1807  1903               	skipnz
  1156  1808  0AFF               	incf	btemp+1,f
  1157  1809  0008               	return
  1158  180A                     stringcode:	
  1159  180A                     stringdir:	
  1160  180A  3018               	movlw	high stringdir
  1161  180B  008A               	movwf	10
  1162  180C  0804               	movf	4,w
  1163  180D  0A84               	incf	4,f
  1164  180E  0782               	addwf	2,f
  1165  180F                     __stringbase:	
  1166  180F  3400               	retlw	0
  1167  1810                     __end_of__stringtab:	
  1168  1810                     log@coeff:	
  1169  1810  3400               	retlw	0
  1170  1811  3400               	retlw	0
  1171  1812  3400               	retlw	0
  1172  1813  3400               	retlw	0
  1173  1814  34C4               	retlw	196
  1174  1815  34FF               	retlw	255
  1175  1816  347F               	retlw	127
  1176  1817  343F               	retlw	63
  1177  1818  3480               	retlw	128
  1178  1819  34EF               	retlw	239
  1179  181A  34FF               	retlw	255
  1180  181B  34BE               	retlw	190
  1181  181C  3490               	retlw	144
  1182  181D  34E1               	retlw	225
  1183  181E  34A9               	retlw	169
  1184  181F  343E               	retlw	62
  1185  1820  34EC               	retlw	236
  1186  1821  3482               	retlw	130
  1187  1822  3476               	retlw	118
  1188  1823  34BE               	retlw	190
  1189  1824  3482               	retlw	130
  1190  1825  34AD               	retlw	173
  1191  1826  342B               	retlw	43
  1192  1827  343E               	retlw	62
  1193  1828  340E               	retlw	14
  1194  1829  343C               	retlw	60
  1195  182A  34C3               	retlw	195
  1196  182B  34BD               	retlw	189
  1197  182C  3487               	retlw	135
  1198  182D  34D1               	retlw	209
  1199  182E  3413               	retlw	19
  1200  182F  343D               	retlw	61
  1201  1830  3441               	retlw	65
  1202  1831  3478               	retlw	120
  1203  1832  34D3               	retlw	211
  1204  1833  34BB               	retlw	187
  1205  1834                     __end_oflog@coeff:	
  1206  1834                     _BETA:	
  1207                           
  1208                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1209  1834  3400               	retlw	0
  1210  1835  3460               	retlw	96
  1211  1836  3478               	retlw	120
  1212  1837  3445               	retlw	69
  1213  1838                     __end_of_BETA:	
  1214  1838                     _BALANCE_RESISTOR:	
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1217  1838  3400               	retlw	0
  1218  1839  3440               	retlw	64
  1219  183A  341C               	retlw	28
  1220  183B  3446               	retlw	70
  1221  183C                     __end_of_BALANCE_RESISTOR:	
  1222  0019                     _TXREG	set	25
  1223  0018                     _RCSTAbits	set	24
  1224  001A                     _RCREG	set	26
  1225  000E                     _TMR1L	set	14
  1226  000F                     _TMR1H	set	15
  1227  000C                     _PIR1bits	set	12
  1228  001E                     _ADRESH	set	30
  1229  001F                     _ADCON0bits	set	31
  1230  0005                     _PORTAbits	set	5
  1231  0007                     _PORTCbits	set	7
  1232  0010                     _T1CON	set	16
  1233  000B                     _INTCONbits	set	11
  1234  0006                     _PORTBbits	set	6
  1235  0009                     _PORTE	set	9
  1236  0007                     _PORTC	set	7
  1237  0005                     _PORTA	set	5
  1238  0013                     _SSPBUF	set	19
  1239  0014                     _SSPCON	set	20
  1240  0006                     _PORTB	set	6
  1241  00C4                     _CREN	set	196
  1242  0081                     _TMR1CS	set	129
  1243  0085                     _T1CKPS1	set	133
  1244  0084                     _T1CKPS0	set	132
  1245  008C                     _PIE1bits	set	140
  1246  0099                     _SPBRG	set	153
  1247  0098                     _TXSTAbits	set	152
  1248  009E                     _ADRESL	set	158
  1249  009F                     _ADCON1bits	set	159
  1250  009F                     _ADCON1	set	159
  1251  0095                     _WPUB	set	149
  1252  0081                     _OPTION_REGbits	set	129
  1253  0089                     _TRISE	set	137
  1254  0087                     _TRISC	set	135
  1255  0086                     _TRISB	set	134
  1256  0085                     _TRISA	set	133
  1257  008F                     _OSCCONbits	set	143
  1258  0094                     _SSPSTAT	set	148
  1259  0093                     _SSPADD	set	147
  1260  0091                     _SSPCON2	set	145
  1261  043F                     _TRISC7	set	1087
  1262  043E                     _TRISC6	set	1086
  1263  0460                     _TMR1IE	set	1120
  1264  048C                     _ACKEN	set	1164
  1265  048D                     _ACKDT	set	1165
  1266  048B                     _RCEN	set	1163
  1267  048A                     _PEN	set	1162
  1268  0489                     _RSEN	set	1161
  1269  0488                     _SEN	set	1160
  1270  043C                     _TRISC4	set	1084
  1271  043B                     _TRISC3	set	1083
  1272  010C                     _EEDATA	set	268
  1273  010D                     _EEADR	set	269
  1274  0187                     _BAUDCTLbits	set	391
  1275  018D                     _EECON2	set	397
  1276  018C                     _EECON1bits	set	396
  1277  0189                     _ANSELH	set	393
  1278  0188                     _ANSEL	set	392
  1279  183C                     STR_1:	
  1280  183C  3476               	retlw	118	;'v'
  1281  183D  3431               	retlw	49	;'1'
  1282  183E  342E               	retlw	46	;'.'
  1283  183F  3430               	retlw	48	;'0'
  1284  1840  342E               	retlw	46	;'.'
  1285  1841  3431               	retlw	49	;'1'
  1286  1842  3430               	retlw	48	;'0'
  1287  1843  3400               	retlw	0
  1288  1844                     STR_8:	
  1289  1844  344F               	retlw	79	;'O'
  1290  1845  344B               	retlw	75	;'K'
  1291  1846  3400               	retlw	0
  1292  1847                     STR_4:	
  1293  1847  343A               	retlw	58	;':'
  1294  1848  3400               	retlw	0
  1295  1843                     
  1296                           ; #config settings
  1297  0000                     
  1298                           	psect	cinit
  1299  0015                     start_initialization:	
  1300  0015                     __initialization:	
  1301                           
  1302                           ; Initialize objects allocated to BANK3
  1303  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1304  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1305                           
  1306                           ;initializer for _RL1Status
  1307  0017  3001               	movlw	1
  1308  0018  00DD               	movwf	__pdataBANK3& (0+127)
  1309                           
  1310                           ;initializer for _RL0Status
  1311  0019  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  1312  001A  3090               	movlw	low __pbssBANK3
  1313                           
  1314                           ; Clear objects allocated to BANK3
  1315  001B  1783               	bsf	3,7	;select IRP bank2
  1316  001C  0084               	movwf	4
  1317  001D  30DD               	movlw	low (__pbssBANK3+77)
  1318  001E  160A  118A  2008  120A  118A  	fcall	clear_ram0
  1319                           
  1320                           ; Clear objects allocated to BANK2
  1321  0023  3010               	movlw	low __pbssBANK2
  1322  0024  0084               	movwf	4
  1323  0025  305A               	movlw	low (__pbssBANK2+74)
  1324  0026  160A  118A  2008   	fcall	clear_ram0
  1325                           
  1326                           ; Clear objects allocated to BANK1
  1327  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1328  002A  01EF               	clrf	__pbssBANK1& (0+127)
  1329                           
  1330                           ; Clear objects allocated to COMMON
  1331  002B  01F0               	clrf	__pbssCOMMON& (0+127)
  1332  002C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1333  002D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1334  002E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1335  002F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1336  0030  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1337  0031  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1338  0032                     end_of_initialization:	
  1339                           ;End of C runtime variable initialization code
  1340                           
  1341  0032                     __end_of__initialization:	
  1342  0032  0183               	clrf	3
  1343  0033  120A  118A  2EEB   	ljmp	l8012	;jump to C main() function
  1344                           
  1345                           	psect	bssCOMMON
  1346  0070                     __pbssCOMMON:	
  1347  0070                     _SetPoint0:	
  1348  0070                     	ds	4
  1349  0074                     _TempoCNT_1:	
  1350  0074                     	ds	1
  1351  0075                     _hora:	
  1352  0075                     	ds	1
  1353  0076                     _segundo:	
  1354  0076                     	ds	1
  1355                           
  1356                           	psect	bssBANK1
  1357  00EF                     __pbssBANK1:	
  1358  00EF                     _TempoCNT_0:	
  1359  00EF                     	ds	1
  1360                           
  1361                           	psect	bssBANK3
  1362  0190                     __pbssBANK3:	
  1363  0190                     _Temperatura1:	
  1364  0190                     	ds	4
  1365  0194                     _Temperatura0:	
  1366  0194                     	ds	4
  1367  0198                     _SetPoint1:	
  1368  0198                     	ds	4
  1369  019C                     _Histerese0:	
  1370  019C                     	ds	4
  1371  01A0                     _tempodecorrido:	
  1372  01A0                     	ds	2
  1373  01A2                     _count:	
  1374  01A2                     	ds	2
  1375  01A4                     _header:	
  1376  01A4                     	ds	2
  1377  01A6                     _Status1:	
  1378  01A6                     	ds	2
  1379  01A8                     _Status0:	
  1380  01A8                     	ds	2
  1381  01AA                     _milisegundo:	
  1382  01AA                     	ds	2
  1383  01AC                     _Delay_Led_Usart:	
  1384  01AC                     	ds	2
  1385  01AE                     _Delay_Led_Tmr0:	
  1386  01AE                     	ds	2
  1387  01B0                     _Delay_Led_Memory:	
  1388  01B0                     	ds	2
  1389  01B2                     _pointer:	
  1390  01B2                     	ds	1
  1391  01B3                     _destino:	
  1392  01B3                     	ds	1
  1393  01B4                     _Board_Number:	
  1394  01B4                     	ds	1
  1395  01B5                     _canal:	
  1396  01B5                     	ds	1
  1397  01B6                     _TempoOFF_1:	
  1398  01B6                     	ds	1
  1399  01B7                     _TempoON_1:	
  1400  01B7                     	ds	1
  1401  01B8                     _Histerese1:	
  1402  01B8                     	ds	1
  1403  01B9                     _TempoOFF_0:	
  1404  01B9                     	ds	1
  1405  01BA                     _TempoON_0:	
  1406  01BA                     	ds	1
  1407  01BB                     _minuto:	
  1408  01BB                     	ds	1
  1409  01BC                     _generic_status:	
  1410  01BC                     	ds	1
  1411  01BD                     _texto:	
  1412  01BD                     	ds	16
  1413  01CD                     _usart_protocol:	
  1414  01CD                     	ds	16
  1415                           
  1416                           	psect	dataBANK3
  1417  01DD                     __pdataBANK3:	
  1418  01DD                     _RL1Status:	
  1419  01DD                     	ds	1
  1420  01DE                     _RL0Status:	
  1421  01DE                     	ds	1
  1422                           
  1423                           	psect	bssBANK2
  1424  0110                     __pbssBANK2:	
  1425  0110                     _usart_buffer:	
  1426  0110                     	ds	42
  1427  013A                     _buffer:	
  1428  013A                     	ds	32
  1429                           
  1430                           	psect	clrtext
  1431  1008                     clear_ram0:	
  1432                           ;	Called with FSR containing the base address, and
  1433                           ;	W with the last address+1
  1434                           
  1435  1008  0064               	clrwdt	;clear the watchdog before getting into this loop
  1436  1009                     clrloop0:	
  1437  1009  0180               	clrf	0	;clear RAM location pointed to by FSR
  1438  100A  0A84               	incf	4,f	;increment pointer
  1439  100B  0604               	xorwf	4,w	;XOR with final address
  1440  100C  1903               	btfsc	3,2	;have we reached the end yet?
  1441  100D  3400               	retlw	0	;all done for this memory range, return
  1442  100E  0604               	xorwf	4,w	;XOR again to restore value
  1443  100F  2809               	goto	clrloop0	;do the next byte
  1444                           
  1445                           	psect	cstackBANK1
  1446  00A0                     __pcstackBANK1:	
  1447  00A0                     ?_eval_poly:	
  1448  00A0                     ?___fldiv:	
  1449                           ; 4 bytes @ 0x0
  1450                           
  1451  00A0                     ___fldiv@a:	
  1452                           ; 4 bytes @ 0x0
  1453                           
  1454  00A0                     eval_poly@x:	
  1455                           ; 4 bytes @ 0x0
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x0
  1459  00A0                     	ds	4
  1460  00A4                     eval_poly@d:	
  1461  00A4                     ___fldiv@b:	
  1462                           ; 1 bytes @ 0x4
  1463                           
  1464                           
  1465                           ; 4 bytes @ 0x4
  1466  00A4                     	ds	1
  1467  00A5                     eval_poly@n:	
  1468                           
  1469                           ; 2 bytes @ 0x5
  1470  00A5                     	ds	2
  1471  00A7                     ??_eval_poly:	
  1472                           
  1473                           ; 1 bytes @ 0x7
  1474  00A7                     	ds	1
  1475  00A8                     ??___fldiv:	
  1476                           
  1477                           ; 1 bytes @ 0x8
  1478  00A8                     	ds	4
  1479  00AC                     ___fldiv@rem:	
  1480  00AC                     eval_poly@res:	
  1481                           ; 4 bytes @ 0xC
  1482                           
  1483                           
  1484                           ; 4 bytes @ 0xC
  1485  00AC                     	ds	4
  1486  00B0                     ?_log:	
  1487  00B0                     ___fldiv@sign:	
  1488                           ; 4 bytes @ 0x10
  1489                           
  1490  00B0                     log@x:	
  1491                           ; 1 bytes @ 0x10
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0x10
  1495  00B0                     	ds	1
  1496  00B1                     ___fldiv@new_exp:	
  1497                           
  1498                           ; 2 bytes @ 0x11
  1499  00B1                     	ds	2
  1500  00B3                     ___fldiv@grs:	
  1501                           
  1502                           ; 4 bytes @ 0x13
  1503  00B3                     	ds	4
  1504  00B7                     ___fldiv@bexp:	
  1505                           
  1506                           ; 1 bytes @ 0x17
  1507  00B7                     	ds	1
  1508  00B8                     ___fldiv@aexp:	
  1509                           
  1510                           ; 1 bytes @ 0x18
  1511  00B8                     	ds	1
  1512  00B9                     ??_Load_Work:	
  1513  00B9                     ?_ADC_Read_NTC:	
  1514                           ; 1 bytes @ 0x19
  1515                           
  1516                           
  1517                           ; 4 bytes @ 0x19
  1518  00B9                     	ds	4
  1519  00BD                     Decodify_Command@hh:	
  1520                           
  1521                           ; 10 bytes @ 0x1D
  1522  00BD                     	ds	1
  1523  00BE                     ADC_Read_NTC@calc:	
  1524                           
  1525                           ; 4 bytes @ 0x1E
  1526  00BE                     	ds	4
  1527  00C2                     ADC_Read_NTC@B:	
  1528                           
  1529                           ; 2 bytes @ 0x22
  1530  00C2                     	ds	2
  1531  00C4                     ADC_Read_NTC@resistencia:	
  1532                           
  1533                           ; 4 bytes @ 0x24
  1534  00C4                     	ds	3
  1535  00C7                     Decodify_Command@mm:	
  1536                           
  1537                           ; 10 bytes @ 0x27
  1538  00C7                     	ds	1
  1539  00C8                     ADC_Read_NTC@i:	
  1540                           
  1541                           ; 1 bytes @ 0x28
  1542  00C8                     	ds	1
  1543  00C9                     ADC_Read_NTC@value:	
  1544                           
  1545                           ; 2 bytes @ 0x29
  1546  00C9                     	ds	2
  1547  00CB                     ADC_Read_NTC@temperatura:	
  1548                           
  1549                           ; 4 bytes @ 0x2B
  1550  00CB                     	ds	4
  1551  00CF                     ??_mediatemperaturaNTC:	
  1552                           
  1553                           ; 1 bytes @ 0x2F
  1554  00CF                     	ds	1
  1555  00D0                     _mediatemperaturaNTC$2335:	
  1556                           
  1557                           ; 4 bytes @ 0x30
  1558  00D0                     	ds	1
  1559  00D1                     Decodify_Command@ss:	
  1560                           
  1561                           ; 10 bytes @ 0x31
  1562  00D1                     	ds	3
  1563  00D4                     mediatemperaturaNTC@canal:	
  1564                           
  1565                           ; 1 bytes @ 0x34
  1566  00D4                     	ds	1
  1567  00D5                     mediatemperaturaNTC@Temp:	
  1568                           
  1569                           ; 4 bytes @ 0x35
  1570  00D5                     	ds	4
  1571  00D9                     mediatemperaturaNTC@i:	
  1572                           
  1573                           ; 1 bytes @ 0x39
  1574  00D9                     	ds	2
  1575  00DB                     Decodify_Command@dados:	
  1576                           
  1577                           ; 2 bytes @ 0x3B
  1578  00DB                     	ds	2
  1579  00DD                     Decodify_Command@add:	
  1580                           
  1581                           ; 1 bytes @ 0x3D
  1582  00DD                     	ds	1
  1583  00DE                     Decodify_Command@tempint:	
  1584                           
  1585                           ; 2 bytes @ 0x3E
  1586  00DE                     	ds	2
  1587  00E0                     Decodify_Command@OutPut:	
  1588                           
  1589                           ; 4 bytes @ 0x40
  1590  00E0                     	ds	4
  1591  00E4                     Decodify_Command@tempchar:	
  1592                           
  1593                           ; 1 bytes @ 0x44
  1594  00E4                     	ds	1
  1595  00E5                     Decodify_Command@sizedata:	
  1596                           
  1597                           ; 1 bytes @ 0x45
  1598  00E5                     	ds	1
  1599  00E6                     Decodify_Command@add_24LCxxxx:	
  1600                           
  1601                           ; 4 bytes @ 0x46
  1602  00E6                     	ds	4
  1603  00EA                     ??_main:	
  1604                           
  1605                           ; 1 bytes @ 0x4A
  1606  00EA                     	ds	3
  1607  00ED                     main@reset:	
  1608                           
  1609                           ; 2 bytes @ 0x4D
  1610  00ED                     	ds	2
  1611                           
  1612                           	psect	cstackCOMMON
  1613  0077                     __pcstackCOMMON:	
  1614  0077                     ?_I2C_Master_Start:	
  1615  0077                     ?_I2C_Master_Stop:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0077                     ?_I2C_Master_RepeatedStart:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0077                     ?_ADC_init:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0077                     ?_Load_Work:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0077                     ?_mediatemperaturaNTC:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0077                     ?_Auto_Relay0:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0077                     ?_Auto_Relay1:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0077                     ?_Decodify_Command:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0077                     ?_USART_to_Protocol:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0077                     ?_Send_To_MB:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0077                     ?_Send_Reply_OK:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0077                     ?_EEPROM_Read_Byte:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0077                     ?_USART_putc:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0077                     ?_Package_Usart_is_for_me:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0077                     ?_Rele0Ligado:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0077                     ?_Rele1Ligado:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0077                     ?_Rele0Desligado:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0077                     ?_Rele1Desligado:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0077                     ?_I2C_Master_Wait:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0077                     ?_main:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0077                     ?_isr:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0077                     ??_isr:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0077                     ADC_Read_NTC@canal:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684                           
  1685                           ; 1 bytes @ 0x0
  1686  0077                     	ds	4
  1687  007B                     isr@tempo:	
  1688                           
  1689                           ; 2 bytes @ 0x4
  1690  007B                     	ds	2
  1691                           
  1692                           	psect	cstackBANK0
  1693  0020                     __pcstackBANK0:	
  1694  0020                     ?___fleq:	
  1695  0020                     ??_I2C_Master_Start:	
  1696                           ; 1 bit 
  1697                           
  1698  0020                     ?_I2C_Master_Write:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0020                     ??_I2C_Master_Stop:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0020                     ??_I2C_Master_RepeatedStart:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0020                     ?_my_delay_ms_WDT:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0020                     ??_ADC_init:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0020                     ?_USART_init:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0020                     ??_USART_to_Protocol:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0020                     ?_EEPROM_Write_Byte:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0020                     ??_EEPROM_Read_Byte:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0020                     ??_USART_putc:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0020                     ?_strcpy:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0020                     ?_strcat:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0020                     ?_my_delay_ms:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0020                     ??_Package_Usart_is_for_me:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0020                     ??_Rele0Ligado:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0020                     ??_Rele1Ligado:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0020                     ??_Rele0Desligado:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0020                     ??_Rele1Desligado:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0020                     ?_PROCULUS_Delay:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0020                     ??_I2C_Master_Wait:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0020                     ?_I2C_Master_Read:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0020                     ?_strlen:	
  1762                           ; 2 bytes @ 0x0
  1763                           
  1764  0020                     ?_captura:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0020                     ?__Umul8_16:	
  1768                           ; 2 bytes @ 0x0
  1769                           
  1770  0020                     ?___lwdiv:	
  1771                           ; 2 bytes @ 0x0
  1772                           
  1773  0020                     ?___lwmod:	
  1774                           ; 2 bytes @ 0x0
  1775                           
  1776  0020                     ?___lldiv:	
  1777                           ; 2 bytes @ 0x0
  1778                           
  1779  0020                     ?___fltol:	
  1780                           ; 4 bytes @ 0x0
  1781                           
  1782  0020                     EEPROM_Write_Byte@dado:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785  0020                     Package_Usart_is_for_me@retorno:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0020                     USART_putc@value:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0020                     strcpy@from:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0020                     __Umul8_16@multiplicand:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0020                     I2C_Master_Write@d:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     I2C_Master_Read@a:	
  1801                           ; 2 bytes @ 0x0
  1802                           
  1803  0020                     PROCULUS_Delay@tempo_ms:	
  1804                           ; 2 bytes @ 0x0
  1805                           
  1806  0020                     ___lwdiv@divisor:	
  1807                           ; 2 bytes @ 0x0
  1808                           
  1809  0020                     ___lwmod@divisor:	
  1810                           ; 2 bytes @ 0x0
  1811                           
  1812  0020                     strcat@from:	
  1813                           ; 2 bytes @ 0x0
  1814                           
  1815  0020                     my_delay_ms@time:	
  1816                           ; 2 bytes @ 0x0
  1817                           
  1818  0020                     my_delay_ms_WDT@time:	
  1819                           ; 4 bytes @ 0x0
  1820                           
  1821  0020                     USART_init@baudrate:	
  1822                           ; 4 bytes @ 0x0
  1823                           
  1824  0020                     ___lldiv@divisor:	
  1825                           ; 4 bytes @ 0x0
  1826                           
  1827  0020                     ___fleq@ff1:	
  1828                           ; 4 bytes @ 0x0
  1829                           
  1830  0020                     ___fltol@f1:	
  1831                           ; 4 bytes @ 0x0
  1832                           
  1833                           
  1834                           ; 4 bytes @ 0x0
  1835  0020                     	ds	1
  1836  0021                     ??_Send_To_MB:	
  1837  0021                     ?_USART_put_string:	
  1838                           ; 1 bytes @ 0x1
  1839                           
  1840  0021                     ??_EEPROM_Write_Byte:	
  1841                           ; 1 bytes @ 0x1
  1842                           
  1843  0021                     ?_USART_put_buffer:	
  1844                           ; 1 bytes @ 0x1
  1845                           
  1846  0021                     ??_strcpy:	
  1847                           ; 1 bytes @ 0x1
  1848                           
  1849  0021                     Send_To_MB@size:	
  1850                           ; 1 bytes @ 0x1
  1851                           
  1852  0021                     USART_put_buffer@size:	
  1853                           ; 1 bytes @ 0x1
  1854                           
  1855  0021                     USART_put_string@vetor:	
  1856                           ; 2 bytes @ 0x1
  1857                           
  1858                           
  1859                           ; 2 bytes @ 0x1
  1860  0021                     	ds	1
  1861  0022                     ??_I2C_Master_Write:	
  1862  0022                     ??_I2C_Master_Read:	
  1863                           ; 1 bytes @ 0x2
  1864                           
  1865  0022                     ??_strcat:	
  1866                           ; 1 bytes @ 0x2
  1867                           
  1868  0022                     ??_captura:	
  1869                           ; 1 bytes @ 0x2
  1870                           
  1871  0022                     ??_PROCULUS_Delay:	
  1872                           ; 1 bytes @ 0x2
  1873                           
  1874  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1875                           ; 1 bytes @ 0x2
  1876                           
  1877  0022                     ?_EEPROM_24C1025_Write_Str:	
  1878                           ; 1 bytes @ 0x2
  1879                           
  1880  0022                     EEPROM_Read_Byte@addr:	
  1881                           ; 1 bytes @ 0x2
  1882                           
  1883  0022                     strcpy@to:	
  1884                           ; 1 bytes @ 0x2
  1885                           
  1886  0022                     I2C_Master_Read@temp:	
  1887                           ; 1 bytes @ 0x2
  1888                           
  1889  0022                     USART_to_Protocol@i:	
  1890                           ; 2 bytes @ 0x2
  1891                           
  1892  0022                     ___lwdiv@dividend:	
  1893                           ; 2 bytes @ 0x2
  1894                           
  1895  0022                     ___lwmod@dividend:	
  1896                           ; 2 bytes @ 0x2
  1897                           
  1898  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1899                           ; 2 bytes @ 0x2
  1900                           
  1901  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1902                           ; 4 bytes @ 0x2
  1903                           
  1904                           
  1905                           ; 4 bytes @ 0x2
  1906  0022                     	ds	1
  1907  0023                     ??_USART_put_string:	
  1908  0023                     ?_EEPROM_Read_String:	
  1909                           ; 1 bytes @ 0x3
  1910                           
  1911  0023                     ??_USART_put_buffer:	
  1912                           ; 1 bytes @ 0x3
  1913                           
  1914  0023                     ??_strlen:	
  1915                           ; 1 bytes @ 0x3
  1916                           
  1917  0023                     ??__Umul8_16:	
  1918                           ; 1 bytes @ 0x3
  1919                           
  1920  0023                     ?_EEPROM_Read_Integer:	
  1921                           ; 1 bytes @ 0x3
  1922                           
  1923  0023                     EEPROM_Write_Byte@addr:	
  1924                           ; 2 bytes @ 0x3
  1925                           
  1926  0023                     EEPROM_Read_String@dado:	
  1927                           ; 1 bytes @ 0x3
  1928                           
  1929  0023                     strcat@cp:	
  1930                           ; 1 bytes @ 0x3
  1931                           
  1932  0023                     strcpy@cp:	
  1933                           ; 1 bytes @ 0x3
  1934                           
  1935  0023                     strlen@cp:	
  1936                           ; 1 bytes @ 0x3
  1937                           
  1938  0023                     USART_put_string@ptr:	
  1939                           ; 1 bytes @ 0x3
  1940                           
  1941  0023                     __Umul8_16@product:	
  1942                           ; 2 bytes @ 0x3
  1943                           
  1944                           
  1945                           ; 2 bytes @ 0x3
  1946  0023                     	ds	1
  1947  0024                     ??_my_delay_ms_WDT:	
  1948  0024                     ??_USART_init:	
  1949                           ; 1 bytes @ 0x4
  1950                           
  1951  0024                     ??_EEPROM_Read_String:	
  1952                           ; 1 bytes @ 0x4
  1953                           
  1954  0024                     ??_my_delay_ms:	
  1955                           ; 1 bytes @ 0x4
  1956                           
  1957  0024                     ?_EEPROM_24C1025_Read_Buffer:	
  1958                           ; 1 bytes @ 0x4
  1959                           
  1960  0024                     ?_EEPROM_24C1025_Read_Str:	
  1961                           ; 1 bytes @ 0x4
  1962                           
  1963  0024                     ??___fltol:	
  1964                           ; 1 bytes @ 0x4
  1965                           
  1966  0024                     ??___lwdiv:	
  1967                           ; 1 bytes @ 0x4
  1968                           
  1969  0024                     ??___lwmod:	
  1970                           ; 1 bytes @ 0x4
  1971                           
  1972  0024                     EEPROM_Write_Byte@last_GIE:	
  1973                           ; 1 bytes @ 0x4
  1974                           
  1975  0024                     EEPROM_Read_String@addr:	
  1976                           ; 1 bytes @ 0x4
  1977                           
  1978  0024                     USART_init@i:	
  1979                           ; 1 bytes @ 0x4
  1980                           
  1981  0024                     USART_to_Protocol@usart_protocol:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0024                     ___lwdiv@counter:	
  1985                           ; 1 bytes @ 0x4
  1986                           
  1987  0024                     ___lwmod@counter:	
  1988                           ; 1 bytes @ 0x4
  1989                           
  1990  0024                     strcat@to:	
  1991                           ; 1 bytes @ 0x4
  1992                           
  1993  0024                     strlen@s:	
  1994                           ; 1 bytes @ 0x4
  1995                           
  1996  0024                     PROCULUS_Delay@i:	
  1997                           ; 1 bytes @ 0x4
  1998                           
  1999  0024                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2000                           ; 2 bytes @ 0x4
  2001                           
  2002  0024                     EEPROM_24C1025_Read_Str@mem_add:	
  2003                           ; 4 bytes @ 0x4
  2004                           
  2005  0024                     ___lldiv@dividend:	
  2006                           ; 4 bytes @ 0x4
  2007                           
  2008  0024                     ___fleq@ff2:	
  2009                           ; 4 bytes @ 0x4
  2010                           
  2011                           
  2012                           ; 4 bytes @ 0x4
  2013  0024                     	ds	1
  2014  0025                     ?_EEPROM_Write_Integer:	
  2015  0025                     ??_Send_Reply_OK:	
  2016                           ; 1 bytes @ 0x5
  2017                           
  2018  0025                     ?_EEPROM_Write_String:	
  2019                           ; 1 bytes @ 0x5
  2020                           
  2021  0025                     EEPROM_Write_String@dado:	
  2022                           ; 1 bytes @ 0x5
  2023                           
  2024  0025                     EEPROM_Read_String@c:	
  2025                           ; 1 bytes @ 0x5
  2026                           
  2027  0025                     USART_put_buffer@vetor:	
  2028                           ; 1 bytes @ 0x5
  2029                           
  2030  0025                     EEPROM_Write_Integer@dado:	
  2031                           ; 1 bytes @ 0x5
  2032                           
  2033  0025                     ___lwdiv@quotient:	
  2034                           ; 2 bytes @ 0x5
  2035                           
  2036  0025                     __Umul8_16@word_mpld:	
  2037                           ; 2 bytes @ 0x5
  2038                           
  2039                           
  2040                           ; 2 bytes @ 0x5
  2041  0025                     	ds	1
  2042  0026                     ??_EEPROM_Read_Integer:	
  2043  0026                     ??_EEPROM_Write_String:	
  2044                           ; 1 bytes @ 0x6
  2045                           
  2046  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2047                           ; 1 bytes @ 0x6
  2048                           
  2049  0026                     EEPROM_24C1025_Write_Str@data:	
  2050                           ; 1 bytes @ 0x6
  2051                           
  2052  0026                     EEPROM_Read_Integer@addr:	
  2053                           ; 1 bytes @ 0x6
  2054                           
  2055  0026                     EEPROM_Write_String@addr:	
  2056                           ; 1 bytes @ 0x6
  2057                           
  2058  0026                     USART_put_buffer@loop:	
  2059                           ; 1 bytes @ 0x6
  2060                           
  2061  0026                     my_delay_ms@i:	
  2062                           ; 1 bytes @ 0x6
  2063                           
  2064  0026                     my_delay_ms_WDT@i:	
  2065                           ; 4 bytes @ 0x6
  2066                           
  2067                           
  2068                           ; 4 bytes @ 0x6
  2069  0026                     	ds	1
  2070  0027                     ??_EEPROM_Write_Integer:	
  2071  0027                     ?_utoa:	
  2072                           ; 1 bytes @ 0x7
  2073                           
  2074  0027                     ??_EEPROM_24C1025_Write_Str:	
  2075                           ; 1 bytes @ 0x7
  2076                           
  2077  0027                     EEPROM_Read_Integer@ptr:	
  2078                           ; 1 bytes @ 0x7
  2079                           
  2080  0027                     USART_put_buffer@ptr:	
  2081                           ; 1 bytes @ 0x7
  2082                           
  2083  0027                     __Umul8_16@multiplier:	
  2084                           ; 1 bytes @ 0x7
  2085                           
  2086  0027                     EEPROM_24C1025_Write_Buffer@data:	
  2087                           ; 1 bytes @ 0x7
  2088                           
  2089  0027                     utoa@val:	
  2090                           ; 2 bytes @ 0x7
  2091                           
  2092                           
  2093                           ; 2 bytes @ 0x7
  2094  0027                     	ds	1
  2095  0028                     ??___lldiv:	
  2096  0028                     ??___fleq:	
  2097                           ; 1 bytes @ 0x8
  2098                           
  2099  0028                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2100                           ; 1 bytes @ 0x8
  2101                           
  2102  0028                     EEPROM_24C1025_Read_Str@texto:	
  2103                           ; 1 bytes @ 0x8
  2104                           
  2105  0028                     ___fltol@sign1:	
  2106                           ; 1 bytes @ 0x8
  2107                           
  2108  0028                     EEPROM_Read_Integer@result:	
  2109                           ; 1 bytes @ 0x8
  2110                           
  2111  0028                     ___lldiv@quotient:	
  2112                           ; 2 bytes @ 0x8
  2113                           
  2114                           
  2115                           ; 4 bytes @ 0x8
  2116  0028                     	ds	1
  2117  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  2118  0029                     ??_EEPROM_24C1025_Read_Str:	
  2119                           ; 1 bytes @ 0x9
  2120                           
  2121  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  2122                           ; 1 bytes @ 0x9
  2123                           
  2124  0029                     EEPROM_Write_Integer@addr:	
  2125                           ; 1 bytes @ 0x9
  2126                           
  2127  0029                     ___fltol@exp1:	
  2128                           ; 1 bytes @ 0x9
  2129                           
  2130  0029                     EEPROM_24C1025_Read_Buffer@data:	
  2131                           ; 1 bytes @ 0x9
  2132                           
  2133  0029                     utoa@base:	
  2134                           ; 2 bytes @ 0x9
  2135                           
  2136                           
  2137                           ; 2 bytes @ 0x9
  2138  0029                     	ds	1
  2139  002A                     ?_USART_put_int:	
  2140  002A                     ?___wmul:	
  2141                           ; 1 bytes @ 0xA
  2142                           
  2143  002A                     EEPROM_24C1025_Write_Str@range:	
  2144                           ; 2 bytes @ 0xA
  2145                           
  2146  002A                     EEPROM_Write_Integer@ptr:	
  2147                           ; 1 bytes @ 0xA
  2148                           
  2149  002A                     EEPROM_Read_Integer@i:	
  2150                           ; 1 bytes @ 0xA
  2151                           
  2152  002A                     USART_put_int@value:	
  2153                           ; 1 bytes @ 0xA
  2154                           
  2155  002A                     ___wmul@multiplier:	
  2156                           ; 2 bytes @ 0xA
  2157                           
  2158                           
  2159                           ; 2 bytes @ 0xA
  2160  002A                     	ds	1
  2161  002B                     ??_utoa:	
  2162  002B                     ??_EEPROM_24C1025_Read_Buffer:	
  2163                           ; 1 bytes @ 0xB
  2164                           
  2165  002B                     ?___xxtofl:	
  2166                           ; 1 bytes @ 0xB
  2167                           
  2168  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2169                           ; 4 bytes @ 0xB
  2170                           
  2171  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2172                           ; 1 bytes @ 0xB
  2173                           
  2174  002B                     EEPROM_24C1025_Read_Str@cnt:	
  2175                           ; 1 bytes @ 0xB
  2176                           
  2177  002B                     EEPROM_Write_Integer@i:	
  2178                           ; 1 bytes @ 0xB
  2179                           
  2180  002B                     utoa@v:	
  2181                           ; 1 bytes @ 0xB
  2182                           
  2183  002B                     ___xxtofl@val:	
  2184                           ; 2 bytes @ 0xB
  2185                           
  2186                           
  2187                           ; 4 bytes @ 0xB
  2188  002B                     	ds	1
  2189  002C                     ??_USART_put_int:	
  2190  002C                     ?_frexp:	
  2191                           ; 1 bytes @ 0xC
  2192                           
  2193  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2194                           ; 4 bytes @ 0xC
  2195                           
  2196  002C                     EEPROM_24C1025_Read_Str@chip_add:	
  2197                           ; 1 bytes @ 0xC
  2198                           
  2199  002C                     USART_put_int@dado:	
  2200                           ; 1 bytes @ 0xC
  2201                           
  2202  002C                     ___lldiv@counter:	
  2203                           ; 1 bytes @ 0xC
  2204                           
  2205  002C                     ___wmul@multiplicand:	
  2206                           ; 1 bytes @ 0xC
  2207                           
  2208  002C                     frexp@value:	
  2209                           ; 2 bytes @ 0xC
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0xC
  2213  002C                     	ds	1
  2214  002D                     ?_I2C_Master_Init:	
  2215  002D                     ?_PROCULUS_Control_Register_Write:	
  2216                           ; 1 bytes @ 0xD
  2217                           
  2218  002D                     ?_PROCULUS_VP_Write:	
  2219                           ; 1 bytes @ 0xD
  2220                           
  2221  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2222                           ; 1 bytes @ 0xD
  2223                           
  2224  002D                     EEPROM_24C1025_Read_Buffer@cnt_98:	
  2225                           ; 1 bytes @ 0xD
  2226                           
  2227  002D                     EEPROM_24C1025_Read_Str@range:	
  2228                           ; 1 bytes @ 0xD
  2229                           
  2230  002D                     PROCULUS_Control_Register_Write@size:	
  2231                           ; 1 bytes @ 0xD
  2232                           
  2233  002D                     utoa@c:	
  2234                           ; 1 bytes @ 0xD
  2235                           
  2236  002D                     PROCULUS_VP_Write@vp:	
  2237                           ; 1 bytes @ 0xD
  2238                           
  2239  002D                     I2C_Master_Init@c:	
  2240                           ; 2 bytes @ 0xD
  2241                           
  2242                           
  2243                           ; 4 bytes @ 0xD
  2244  002D                     	ds	1
  2245  002E                     ??_PROCULUS_Control_Register_Write:	
  2246  002E                     ??___wmul:	
  2247                           ; 1 bytes @ 0xE
  2248                           
  2249  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2250                           ; 1 bytes @ 0xE
  2251                           
  2252  002E                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2253                           ; 1 bytes @ 0xE
  2254                           
  2255  002E                     EEPROM_24C1025_Read_Str@ctrl:	
  2256                           ; 1 bytes @ 0xE
  2257                           
  2258  002E                     utoa@buf:	
  2259                           ; 1 bytes @ 0xE
  2260                           
  2261  002E                     ___wmul@product:	
  2262                           ; 1 bytes @ 0xE
  2263                           
  2264                           
  2265                           ; 2 bytes @ 0xE
  2266  002E                     	ds	1
  2267  002F                     ?_itoa:	
  2268  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2269                           ; 1 bytes @ 0xF
  2270                           
  2271  002F                     ??___xxtofl:	
  2272                           ; 1 bytes @ 0xF
  2273                           
  2274  002F                     EEPROM_24C1025_Read_Buffer@range:	
  2275                           ; 1 bytes @ 0xF
  2276                           
  2277  002F                     PROCULUS_Control_Register_Write@vetor:	
  2278                           ; 1 bytes @ 0xF
  2279                           
  2280  002F                     PROCULUS_VP_Write@vetor:	
  2281                           ; 1 bytes @ 0xF
  2282                           
  2283  002F                     itoa@val:	
  2284                           ; 2 bytes @ 0xF
  2285                           
  2286  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2287                           ; 2 bytes @ 0xF
  2288                           
  2289                           
  2290                           ; 4 bytes @ 0xF
  2291  002F                     	ds	1
  2292  0030                     ?_EEPROM_24C1025_Write_Int:	
  2293  0030                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2294                           ; 1 bytes @ 0x10
  2295                           
  2296  0030                     PROCULUS_Control_Register_Write@i:	
  2297                           ; 1 bytes @ 0x10
  2298                           
  2299  0030                     frexp@eptr:	
  2300                           ; 1 bytes @ 0x10
  2301                           
  2302  0030                     EEPROM_24C1025_Write_Int@mem_add:	
  2303                           ; 1 bytes @ 0x10
  2304                           
  2305                           
  2306                           ; 4 bytes @ 0x10
  2307  0030                     	ds	1
  2308  0031                     ?_PROCULUS_Show_Screen:	
  2309  0031                     ?_PROCULUS_Buzzer:	
  2310                           ; 1 bytes @ 0x11
  2311                           
  2312  0031                     ??_frexp:	
  2313                           ; 1 bytes @ 0x11
  2314                           
  2315  0031                     ?_EEPROM_24C1025_Read_Byte:	
  2316                           ; 1 bytes @ 0x11
  2317                           
  2318  0031                     ??_I2C_Master_Init:	
  2319                           ; 1 bytes @ 0x11
  2320                           
  2321  0031                     ?_EEPROM_24C1025_Read_Int:	
  2322                           ; 1 bytes @ 0x11
  2323                           
  2324  0031                     PROCULUS_VP_Write@size:	
  2325                           ; 2 bytes @ 0x11
  2326                           
  2327  0031                     PROCULUS_Buzzer@time_ms_x_10:	
  2328                           ; 1 bytes @ 0x11
  2329                           
  2330  0031                     PROCULUS_Show_Screen@screen:	
  2331                           ; 2 bytes @ 0x11
  2332                           
  2333  0031                     itoa@base:	
  2334                           ; 2 bytes @ 0x11
  2335                           
  2336  0031                     EEPROM_24C1025_Read_Byte@mem_add:	
  2337                           ; 2 bytes @ 0x11
  2338                           
  2339  0031                     EEPROM_24C1025_Read_Int@mem_add:	
  2340                           ; 4 bytes @ 0x11
  2341                           
  2342                           
  2343                           ; 4 bytes @ 0x11
  2344  0031                     	ds	1
  2345  0032                     ??_PROCULUS_VP_Write:	
  2346                           
  2347                           ; 1 bytes @ 0x12
  2348  0032                     	ds	1
  2349  0033                     ??_itoa:	
  2350  0033                     ??_PROCULUS_Show_Screen:	
  2351                           ; 1 bytes @ 0x13
  2352                           
  2353  0033                     ??_PROCULUS_Buzzer:	
  2354                           ; 1 bytes @ 0x13
  2355                           
  2356  0033                     EEPROM_24C1025_Write_Byte@data:	
  2357                           ; 1 bytes @ 0x13
  2358                           
  2359  0033                     ___xxtofl@sign:	
  2360                           ; 1 bytes @ 0x13
  2361                           
  2362  0033                     PROCULUS_Buzzer@vetor:	
  2363                           ; 1 bytes @ 0x13
  2364                           
  2365  0033                     PROCULUS_Show_Screen@vetor:	
  2366                           ; 2 bytes @ 0x13
  2367                           
  2368                           
  2369                           ; 3 bytes @ 0x13
  2370  0033                     	ds	1
  2371  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2372  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2373                           ; 1 bytes @ 0x14
  2374                           
  2375  0034                     PROCULUS_VP_Write@i:	
  2376                           ; 1 bytes @ 0x14
  2377                           
  2378  0034                     ___xxtofl@exp:	
  2379                           ; 1 bytes @ 0x14
  2380                           
  2381  0034                     itoa@buf:	
  2382                           ; 1 bytes @ 0x14
  2383                           
  2384  0034                     EEPROM_24C1025_Write_Int@data:	
  2385                           ; 1 bytes @ 0x14
  2386                           
  2387                           
  2388                           ; 2 bytes @ 0x14
  2389  0034                     	ds	1
  2390  0035                     ?_PROCULUS_VP_Write_String:	
  2391  0035                     ??_EEPROM_24C1025_Read_Byte:	
  2392                           ; 1 bytes @ 0x15
  2393                           
  2394  0035                     ??_EEPROM_24C1025_Read_Int:	
  2395                           ; 1 bytes @ 0x15
  2396                           
  2397  0035                     EEPROM_24C1025_Read_Byte@chip_add:	
  2398                           ; 1 bytes @ 0x15
  2399                           
  2400  0035                     EEPROM_24C1025_Read_Int@chip_add:	
  2401                           ; 1 bytes @ 0x15
  2402                           
  2403  0035                     PROCULUS_VP_Write_String@vp:	
  2404                           ; 1 bytes @ 0x15
  2405                           
  2406  0035                     ___xxtofl@arg:	
  2407                           ; 2 bytes @ 0x15
  2408                           
  2409                           
  2410                           ; 4 bytes @ 0x15
  2411  0035                     	ds	1
  2412  0036                     ??_EEPROM_24C1025_Write_Int:	
  2413  0036                     EEPROM_24C1025_Read_Byte@data:	
  2414                           ; 1 bytes @ 0x16
  2415                           
  2416  0036                     EEPROM_24C1025_Write_Int@chip_add:	
  2417                           ; 1 bytes @ 0x16
  2418                           
  2419  0036                     EEPROM_24C1025_Read_Int@data:	
  2420                           ; 1 bytes @ 0x16
  2421                           
  2422                           
  2423                           ; 2 bytes @ 0x16
  2424  0036                     	ds	1
  2425  0037                     PROCULUS_VP_Write_String@text:	
  2426  0037                     EEPROM_24C1025_Write_Int@local:	
  2427                           ; 1 bytes @ 0x17
  2428                           
  2429                           
  2430                           ; 2 bytes @ 0x17
  2431  0037                     	ds	1
  2432  0038                     ??_PROCULUS_VP_Write_String:	
  2433                           
  2434                           ; 1 bytes @ 0x18
  2435  0038                     	ds	1
  2436  0039                     ?_Save_Log:	
  2437  0039                     ?_EEPROM_24C1025_Fill_All:	
  2438                           ; 1 bytes @ 0x19
  2439                           
  2440  0039                     ?___fladd:	
  2441                           ; 1 bytes @ 0x19
  2442                           
  2443  0039                     EEPROM_24C1025_Fill_All@value:	
  2444                           ; 4 bytes @ 0x19
  2445                           
  2446  0039                     Save_Log@add_datalog:	
  2447                           ; 2 bytes @ 0x19
  2448                           
  2449  0039                     ___fladd@b:	
  2450                           ; 4 bytes @ 0x19
  2451                           
  2452                           
  2453                           ; 4 bytes @ 0x19
  2454  0039                     	ds	2
  2455  003B                     ??_EEPROM_24C1025_Fill_All:	
  2456  003B                     EEPROM_24C1025_Fill_All@chip_add:	
  2457                           ; 1 bytes @ 0x1B
  2458                           
  2459                           
  2460                           ; 1 bytes @ 0x1B
  2461  003B                     	ds	1
  2462  003C                     EEPROM_24C1025_Fill_All@mem_add:	
  2463                           
  2464                           ; 4 bytes @ 0x1C
  2465  003C                     	ds	1
  2466  003D                     ??_Save_Log:	
  2467  003D                     ___fladd@a:	
  2468                           ; 1 bytes @ 0x1D
  2469                           
  2470                           
  2471                           ; 4 bytes @ 0x1D
  2472  003D                     	ds	4
  2473  0041                     ??___fladd:	
  2474                           
  2475                           ; 1 bytes @ 0x21
  2476  0041                     	ds	8
  2477  0049                     ___fladd@signs:	
  2478                           
  2479                           ; 1 bytes @ 0x29
  2480  0049                     	ds	1
  2481  004A                     ___fladd@aexp:	
  2482                           
  2483                           ; 1 bytes @ 0x2A
  2484  004A                     	ds	1
  2485  004B                     ___fladd@bexp:	
  2486                           
  2487                           ; 1 bytes @ 0x2B
  2488  004B                     	ds	1
  2489  004C                     ___fladd@grs:	
  2490                           
  2491                           ; 1 bytes @ 0x2C
  2492  004C                     	ds	1
  2493  004D                     ?___flsub:	
  2494  004D                     ___flsub@a:	
  2495                           ; 4 bytes @ 0x2D
  2496                           
  2497                           
  2498                           ; 4 bytes @ 0x2D
  2499  004D                     	ds	4
  2500  0051                     ___flsub@b:	
  2501                           
  2502                           ; 4 bytes @ 0x31
  2503  0051                     	ds	4
  2504  0055                     ?___flge:	
  2505  0055                     ??___flsub:	
  2506                           ; 1 bit 
  2507                           
  2508  0055                     ?___flmul:	
  2509                           ; 1 bytes @ 0x35
  2510                           
  2511  0055                     ___flge@ff1:	
  2512                           ; 4 bytes @ 0x35
  2513                           
  2514  0055                     ___flmul@b:	
  2515                           ; 4 bytes @ 0x35
  2516                           
  2517                           
  2518                           ; 4 bytes @ 0x35
  2519  0055                     	ds	4
  2520  0059                     ___flge@ff2:	
  2521  0059                     ___flmul@a:	
  2522                           ; 4 bytes @ 0x39
  2523                           
  2524                           
  2525                           ; 4 bytes @ 0x39
  2526  0059                     	ds	4
  2527  005D                     ??___flge:	
  2528  005D                     ??___flmul:	
  2529                           ; 1 bytes @ 0x3D
  2530                           
  2531                           
  2532                           ; 1 bytes @ 0x3D
  2533  005D                     	ds	4
  2534  0061                     ??_Auto_Relay0:	
  2535  0061                     ??_Auto_Relay1:	
  2536                           ; 1 bytes @ 0x41
  2537                           
  2538  0061                     ___flmul@sign:	
  2539                           ; 1 bytes @ 0x41
  2540                           
  2541                           
  2542                           ; 1 bytes @ 0x41
  2543  0061                     	ds	1
  2544  0062                     ___flmul@aexp:	
  2545                           
  2546                           ; 1 bytes @ 0x42
  2547  0062                     	ds	1
  2548  0063                     ___flmul@bexp:	
  2549                           
  2550                           ; 1 bytes @ 0x43
  2551  0063                     	ds	1
  2552  0064                     ___flmul@grs:	
  2553                           
  2554                           ; 4 bytes @ 0x44
  2555  0064                     	ds	4
  2556  0068                     ___flmul@prod:	
  2557                           
  2558                           ; 4 bytes @ 0x48
  2559  0068                     	ds	4
  2560  006C                     ___flmul@temp:	
  2561                           
  2562                           ; 2 bytes @ 0x4C
  2563  006C                     	ds	2
  2564  006E                     ??_Decodify_Command:	
  2565  006E                     ??_log:	
  2566                           ; 1 bytes @ 0x4E
  2567                           
  2568  006E                     log@exponent:	
  2569                           ; 1 bytes @ 0x4E
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x4E
  2573  006E                     	ds	2
  2574  0070                     ??_ADC_Read_NTC:	
  2575                           
  2576                           	psect	maintext
  2577  06EB                     __pmaintext:	
  2578                           ; 1 bytes @ 0x50
  2579 ;;
  2580 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2581 ;;
  2582 ;; *************** function _main *****************
  2583 ;; Defined at:
  2584 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  reset           2   77[BANK1 ] unsigned int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : B00/0
  2595 ;;		On exit  : 300/300
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       0       2       0       0
  2600 ;;      Temps:          0       0       3       0       0
  2601 ;;      Totals:         0       0       5       0       0
  2602 ;;Total ram usage:        5 bytes
  2603 ;; Hardware stack levels required when called:    7
  2604 ;; This function calls:
  2605 ;;		_ADC_init
  2606 ;;		_Auto_Relay0
  2607 ;;		_Auto_Relay1
  2608 ;;		_Decodify_Command
  2609 ;;		_EEPROM_Read_Integer
  2610 ;;		_EEPROM_Write_Integer
  2611 ;;		_I2C_Master_Init
  2612 ;;		_Load_Work
  2613 ;;		_USART_init
  2614 ;;		_mediatemperaturaNTC
  2615 ;;		_my_delay_ms_WDT
  2616 ;; This function is called by:
  2617 ;;		Startup code after reset
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _main
  2623  06EB                     _main:	
  2624  06EB                     l8012:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2627                           
  2628                           
  2629                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2630  06EB  3002               	movlw	2
  2631  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  2632  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  2633  06EE  00EC               	movwf	(??_main^(0+128)+2)
  2634  06EF  3004               	movlw	4
  2635  06F0  00EB               	movwf	(??_main^(0+128)+1)
  2636  06F1  30B9               	movlw	185
  2637  06F2  00EA               	movwf	??_main^(0+128)
  2638  06F3                     u7647:	
  2639  06F3  0BEA               	decfsz	??_main^(0+128),f
  2640  06F4  2EF3               	goto	u7647
  2641  06F5  0BEB               	decfsz	(??_main^(0+128)+1),f
  2642  06F6  2EF3               	goto	u7647
  2643  06F7  0BEC               	decfsz	(??_main^(0+128)+2),f
  2644  06F8  2EF3               	goto	u7647
  2645  06F9  2EFA               	nop2
  2646                           
  2647                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2648  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2649  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2650  06FC  160F               	bsf	15,4	;volatile
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2653  06FD  168F               	bsf	15,5	;volatile
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2656  06FE  170F               	bsf	15,6	;volatile
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2659  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0700  0185               	clrf	5	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2663  0701  0186               	clrf	6	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2666  0702  0187               	clrf	7	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2669  0703  0189               	clrf	9	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2672  0704  30EF               	movlw	239
  2673  0705  1683               	bsf	3,5	;RP0=1, select bank1
  2674  0706  0085               	movwf	5	;volatile
  2675                           
  2676                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2677  0707  300F               	movlw	15
  2678  0708  0086               	movwf	6	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2681  0709  30F0               	movlw	240
  2682  070A  0087               	movwf	7	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2685  070B  30FF               	movlw	255
  2686  070C  0089               	movwf	9	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2689  070D  3011               	movlw	17
  2690  070E  1703               	bsf	3,6	;RP1=1, select bank3
  2691  070F  0088               	movwf	8	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2694  0710  0189               	clrf	9	;volatile
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2697  0711  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0712  1381               	bcf	1,7	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2701  0713  300F               	movlw	15
  2702  0714  0095               	movwf	21	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2705  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0716  1786               	bsf	6,7	;volatile
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2709  0717  1706               	bsf	6,6	;volatile
  2710                           
  2711                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2712  0718  1686               	bsf	6,5	;volatile
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2715  0719  3003               	movlw	3
  2716  071A  01A3               	clrf	my_delay_ms_WDT@time+3
  2717  071B  01A2               	clrf	my_delay_ms_WDT@time+2
  2718  071C  00A1               	movwf	my_delay_ms_WDT@time+1
  2719  071D  30E8               	movlw	232
  2720  071E  00A0               	movwf	my_delay_ms_WDT@time
  2721  071F  160A  158A  2488  120A  118A  	fcall	_my_delay_ms_WDT
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2724  0724  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0725  1281               	bcf	1,5	;volatile
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2728  0726  1581               	bsf	1,3	;volatile
  2729                           
  2730                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2731  0727  1401               	bsf	1,0	;volatile
  2732                           
  2733                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2734  0728  1481               	bsf	1,1	;volatile
  2735                           
  2736                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2737  0729  1501               	bsf	1,2	;volatile
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2740  072A  128B               	bcf	11,5	;volatile
  2741                           
  2742                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2743  072B  120B               	bcf	11,4	;volatile
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2746  072C  178B               	bsf	11,7	;volatile
  2747                           
  2748                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2749  072D  170B               	bsf	11,6	;volatile
  2750                           
  2751                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2752  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2753  072F  1610               	bsf	16,4	;volatile
  2754                           
  2755                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2756  0730  1690               	bsf	16,5	;volatile
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2759  0731  1090               	bcf	16,1	;volatile
  2760                           
  2761                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2762  0732  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0733  140C               	bsf	12,0	;volatile
  2764                           
  2765                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2766  0734  3001               	movlw	1
  2767  0735  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0736  0090               	movwf	16	;volatile
  2769  0737  0064               	clrwdt	;# 
  2770                           
  2771                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2772  0738  120A  158A  2004  120A  118A  	fcall	_ADC_init
  2773                           
  2774                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2775  073D  3001               	movlw	1
  2776  073E  01B0               	clrf	I2C_Master_Init@c+3
  2777  073F  00AF               	movwf	I2C_Master_Init@c+2
  2778  0740  3086               	movlw	134
  2779  0741  00AE               	movwf	I2C_Master_Init@c+1
  2780  0742  30A0               	movlw	160
  2781  0743  00AD               	movwf	I2C_Master_Init@c
  2782  0744  160A  158A  25AC  120A  118A  	fcall	_I2C_Master_Init
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2785  0749  1283               	bcf	3,5	;RP0=0, select bank0
  2786  074A  3001               	movlw	1
  2787  074B  01A3               	clrf	USART_init@baudrate+3
  2788  074C  00A2               	movwf	USART_init@baudrate+2
  2789  074D  30C2               	movlw	194
  2790  074E  00A1               	movwf	USART_init@baudrate+1
  2791  074F  01A0               	clrf	USART_init@baudrate
  2792  0750  160A  158A  24B5  120A  118A  	fcall	_USART_init
  2793                           
  2794                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2795  0755  3010               	movlw	16
  2796  0756  120A  158A  26E9  120A  118A  	fcall	_EEPROM_Read_Integer
  2797  075B  0824               	movf	?_EEPROM_Read_Integer+1,w
  2798  075C  1683               	bsf	3,5	;RP0=1, select bank1
  2799  075D  00EE               	movwf	(main@reset+1)^(0+128)
  2800  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2801  075F  0823               	movf	?_EEPROM_Read_Integer,w
  2802  0760  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0761  00ED               	movwf	main@reset^(0+128)
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2806  0762  0F6D               	incfsz	main@reset^(0+128),w
  2807  0763  2F70               	goto	l8082
  2808  0764  0A6E               	incf	(main@reset+1)^(0+128),w
  2809  0765  1D03               	btfss	3,2
  2810  0766  2F70               	goto	l8082
  2811  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0768  3010               	movlw	16
  2813  0769  01A5               	clrf	EEPROM_Write_Integer@dado
  2814  076A  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2815  076B  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2816  0770                     l8082:	
  2817                           
  2818                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2819  0770  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0771  1303               	bcf	3,6	;RP1=0, select bank1
  2821  0772  0AED               	incf	main@reset^(0+128),f
  2822  0773  1903               	skipnz
  2823  0774  0AEE               	incf	(main@reset+1)^(0+128),f
  2824                           
  2825                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2826  0775  086E               	movf	(main@reset+1)^(0+128),w
  2827  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0777  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2829  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0779  086D               	movf	main@reset^(0+128),w
  2831  077A  1283               	bcf	3,5	;RP0=0, select bank0
  2832  077B  00A5               	movwf	EEPROM_Write_Integer@dado
  2833  077C  3010               	movlw	16
  2834  077D  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2835                           
  2836                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2837  0782  1683               	bsf	3,5	;RP0=1, select bank3
  2838  0783  1703               	bsf	3,6	;RP1=1, select bank3
  2839  0784  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2840  0785  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2841                           
  2842                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2843  0786  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2844  0787  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2845                           
  2846                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2847  0788  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2848  0789  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2849                           
  2850                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2851  078A  01F6               	clrf	_segundo	;volatile
  2852                           
  2853                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2854  078B  01F5               	clrf	_hora	;volatile
  2855                           
  2856                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2857  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2858  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2859  078E  1007               	bcf	7,0	;volatile
  2860                           
  2861                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2862  078F  1087               	bcf	7,1	;volatile
  2863                           
  2864                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2865  0790  1105               	bcf	5,2	;volatile
  2866                           
  2867                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2868  0791  1185               	bcf	5,3	;volatile
  2869                           
  2870                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2871  0792  0906               	comf	6,w	;volatile
  2872  0793  1683               	bsf	3,5	;RP0=1, select bank3
  2873  0794  1703               	bsf	3,6	;RP1=1, select bank3
  2874  0795  00B4               	movwf	_Board_Number^(0+384)
  2875  0796  300F               	movlw	15
  2876  0797  05B4               	andwf	_Board_Number^(0+384),f
  2877                           
  2878                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2879  0798  01B5               	clrf	_canal^(0+384)
  2880  0799  0AB5               	incf	_canal^(0+384),f
  2881                           
  2882                           ;SlaveLiofilizadorVer1.c: 239:      Load_Work();
  2883  079A  120A  158A  25F0  120A  118A  	fcall	_Load_Work
  2884                           
  2885                           ;SlaveLiofilizadorVer1.c: 240:      generic_status.flag_global_hot=0;
  2886  079F  1683               	bsf	3,5	;RP0=1, select bank3
  2887  07A0  133C               	bcf	_generic_status^(0+384),6
  2888  07A1                     l8112:	
  2889  07A1  3002               	movlw	2
  2890                           
  2891                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2892  07A2  17BC               	bsf	_generic_status^(0+384),7
  2893  07A3  0AB5               	incf	_canal^(0+384),f
  2894  07A4  0635               	xorwf	_canal^(0+384),w
  2895  07A5  1903               	btfsc	3,2
  2896  07A6  01B5               	clrf	_canal^(0+384)
  2897                           
  2898                           ;SlaveLiofilizadorVer1.c: 254:          mediatemperaturaNTC(canal);
  2899  07A7  0835               	movf	_canal^(0+384),w
  2900  07A8  160A  118A  2010  120A  118A  	fcall	_mediatemperaturaNTC
  2901                           
  2902                           ;SlaveLiofilizadorVer1.c: 257:          if(generic_status.flag_global_hot)
  2903  07AD  1703               	bsf	3,6	;RP1=1, select bank3
  2904  07AE  1F3C               	btfss	_generic_status^(0+384),6
  2905  07AF  2FBB               	goto	l418
  2906                           
  2907                           ;SlaveLiofilizadorVer1.c: 258:             {;SlaveLiofilizadorVer1.c: 259:              
      +                          Auto_Relay0();
  2908  07B0  120A  118A  242F  120A  118A  	fcall	_Auto_Relay0
  2909                           
  2910                           ;SlaveLiofilizadorVer1.c: 260:              Auto_Relay1();
  2911  07B5  120A  118A  2488  120A  118A  	fcall	_Auto_Relay1
  2912                           
  2913                           ;SlaveLiofilizadorVer1.c: 261:             }
  2914  07BA  2FBF               	goto	l419
  2915  07BB                     l418:	
  2916                           ;SlaveLiofilizadorVer1.c: 262:          else
  2917                           
  2918                           
  2919                           ;SlaveLiofilizadorVer1.c: 263:             {;SlaveLiofilizadorVer1.c: 264:             P
      +                          ORTCbits.RC0=0;
  2920  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2921  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2922  07BD  1007               	bcf	7,0	;volatile
  2923                           
  2924                           ;SlaveLiofilizadorVer1.c: 265:             PORTCbits.RC1=0;
  2925  07BE  1087               	bcf	7,1	;volatile
  2926  07BF                     l419:	
  2927                           ;SlaveLiofilizadorVer1.c: 266:             }
  2928                           
  2929                           
  2930                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2931  07BF  1683               	bsf	3,5	;RP0=1, select bank3
  2932  07C0  1703               	bsf	3,6	;RP1=1, select bank3
  2933  07C1  1C3C               	btfss	_generic_status^(0+384),0
  2934  07C2  2FA1               	goto	l8112
  2935                           
  2936                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2937  07C3  1283               	bcf	3,5	;RP0=0, select bank2
  2938  07C4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2939  07C5  1683               	bsf	3,5	;RP0=1, select bank3
  2940  07C6  00A5               	movwf	(_header+1)^(0+384)
  2941  07C7  1283               	bcf	3,5	;RP0=0, select bank2
  2942  07C8  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2943  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  2944  07CA  00A4               	movwf	_header^(0+384)
  2945                           
  2946                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2947  07CB  3ABB               	xorlw	187
  2948  07CC  30AA               	movlw	170
  2949  07CD  1903               	skipnz
  2950  07CE  0625               	xorwf	(_header+1)^(0+384),w
  2951  07CF  1D03               	btfss	3,2
  2952  07D0  2FA1               	goto	l8112
  2953                           
  2954                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2955  07D1  1283               	bcf	3,5	;RP0=0, select bank2
  2956  07D2  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2957  07D3  1683               	bsf	3,5	;RP0=1, select bank3
  2958  07D4  00B3               	movwf	_destino^(0+384)
  2959                           
  2960                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2961  07D5  0634               	xorwf	_Board_Number^(0+384),w
  2962  07D6  1903               	skipnz
  2963  07D7  2FDA               	goto	l8132
  2964  07D8  0F33               	incfsz	_destino^(0+384),w
  2965  07D9  2FA1               	goto	l8112
  2966  07DA                     l8132:	
  2967                           
  2968                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2969  07DA  3014               	movlw	20
  2970  07DB  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2971  07DC  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2972                           
  2973                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2974  07DD  120A  158A  2045  120A  118A  	fcall	_Decodify_Command
  2975                           
  2976                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2977  07E2  1683               	bsf	3,5	;RP0=1, select bank3
  2978  07E3  1703               	bsf	3,6	;RP1=1, select bank3
  2979  07E4  103C               	bcf	_generic_status^(0+384),0
  2980                           
  2981                           ;SlaveLiofilizadorVer1.c: 297:             }
  2982  07E5  2FA1               	goto	l8112
  2983  07E6                     __end_of_main:	
  2984                           
  2985                           	psect	text1
  2986  1C88                     __ptext1:	
  2987 ;; *************** function _my_delay_ms_WDT *****************
  2988 ;; Defined at:
  2989 ;;		line 13 in file "my_delay.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  time            4    0[BANK0 ] long 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  i               4    6[BANK0 ] long 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, btemp+1
  2998 ;; Tracked objects:
  2999 ;;		On entry : 300/0
  3000 ;;		On exit  : 300/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       4       0       0       0
  3004 ;;      Locals:         0       4       0       0       0
  3005 ;;      Temps:          0       2       0       0       0
  3006 ;;      Totals:         0      10       0       0       0
  3007 ;;Total ram usage:       10 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function _my_delay_ms_WDT
  3019  1C88                     _my_delay_ms_WDT:	
  3020                           
  3021                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  3025  1C88  01A6               	clrf	my_delay_ms_WDT@i
  3026  1C89  01A7               	clrf	my_delay_ms_WDT@i+1
  3027  1C8A  01A8               	clrf	my_delay_ms_WDT@i+2
  3028  1C8B  01A9               	clrf	my_delay_ms_WDT@i+3
  3029  1C8C                     l7620:	
  3030  1C8C  0829               	movf	my_delay_ms_WDT@i+3,w
  3031  1C8D  3A80               	xorlw	128
  3032  1C8E  00FF               	movwf	127
  3033  1C8F  0823               	movf	my_delay_ms_WDT@time+3,w
  3034  1C90  3A80               	xorlw	128
  3035  1C91  027F               	subwf	127,w
  3036  1C92  1D03               	skipz
  3037  1C93  2C9E               	goto	u7223
  3038  1C94  0822               	movf	my_delay_ms_WDT@time+2,w
  3039  1C95  0228               	subwf	my_delay_ms_WDT@i+2,w
  3040  1C96  1D03               	skipz
  3041  1C97  2C9E               	goto	u7223
  3042  1C98  0821               	movf	my_delay_ms_WDT@time+1,w
  3043  1C99  0227               	subwf	my_delay_ms_WDT@i+1,w
  3044  1C9A  1D03               	skipz
  3045  1C9B  2C9E               	goto	u7223
  3046  1C9C  0820               	movf	my_delay_ms_WDT@time,w
  3047  1C9D  0226               	subwf	my_delay_ms_WDT@i,w
  3048  1C9E                     u7223:	
  3049  1C9E  1803               	btfsc	3,0
  3050  1C9F  0008               	return
  3051  1CA0  0064               	clrwdt	;# 
  3052                           
  3053                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  3054  1CA1  3003               	movlw	3
  3055  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
  3056  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
  3057  1CA4  00A5               	movwf	??_my_delay_ms_WDT+1
  3058  1CA5  3097               	movlw	151
  3059  1CA6  00A4               	movwf	??_my_delay_ms_WDT
  3060  1CA7                     u7657:	
  3061  1CA7  0BA4               	decfsz	??_my_delay_ms_WDT,f
  3062  1CA8  2CA7               	goto	u7657
  3063  1CA9  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  3064  1CAA  2CA7               	goto	u7657
  3065                           
  3066                           ;my_delay.c: 19:             }
  3067  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3068  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3069  1CAD  0AA6               	incf	my_delay_ms_WDT@i,f
  3070  1CAE  1903               	skipnz
  3071  1CAF  0AA7               	incf	my_delay_ms_WDT@i+1,f
  3072  1CB0  1903               	skipnz
  3073  1CB1  0AA8               	incf	my_delay_ms_WDT@i+2,f
  3074  1CB2  1903               	skipnz
  3075  1CB3  0AA9               	incf	my_delay_ms_WDT@i+3,f
  3076  1CB4  2C8C               	goto	l7620
  3077  1CB5                     __end_of_my_delay_ms_WDT:	
  3078                           
  3079                           	psect	text2
  3080  1010                     __ptext2:	
  3081 ;; *************** function _mediatemperaturaNTC *****************
  3082 ;; Defined at:
  3083 ;;		line 680 in file "SlaveLiofilizadorVer1.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  canal           1    wreg     unsigned char 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  canal           1   52[BANK1 ] unsigned char 
  3088 ;;  Temp            4   53[BANK1 ] float 
  3089 ;;  i               1   57[BANK1 ] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 300/300
  3096 ;;		On exit  : 100/100
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       0       0       0       0
  3100 ;;      Locals:         0       0      10       0       0
  3101 ;;      Temps:          0       0       1       0       0
  3102 ;;      Totals:         0       0      11       0       0
  3103 ;;Total ram usage:       11 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    6
  3106 ;; This function calls:
  3107 ;;		_ADC_Read_NTC
  3108 ;;		_Package_Usart_is_for_me
  3109 ;;		_Rele0Ligado
  3110 ;;		_Rele1Ligado
  3111 ;;		___fladd
  3112 ;;		___fldiv
  3113 ;;		___xxtofl
  3114 ;;		_my_delay_ms
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _mediatemperaturaNTC
  3122  1010                     _mediatemperaturaNTC:	
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3126                           ;mediatemperaturaNTC@canal stored from wreg
  3127  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3128  1011  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3129                           
  3130                           ;SlaveLiofilizadorVer1.c: 680: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 681:      {;SlaveLiofilizadorVer1.c: 682:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 683:      char i;;SlaveLiofilizadorVer1.c: 685:      ADCON0bits.CHS=canal;
  3131  1012  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3132  1013  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3133  1014  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3134  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3135  1016  081F               	movf	31,w	;volatile
  3136  1017  1683               	bsf	3,5	;RP0=1, select bank1
  3137  1018  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3138  1019  39C3               	andlw	-61
  3139  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3140  101B  1283               	bcf	3,5	;RP0=0, select bank0
  3141  101C  009F               	movwf	31	;volatile
  3142                           
  3143                           ;SlaveLiofilizadorVer1.c: 686:      my_delay_ms(1);
  3144  101D  01A0               	clrf	my_delay_ms@time
  3145  101E  0AA0               	incf	my_delay_ms@time,f
  3146  101F  01A1               	clrf	my_delay_ms@time+1
  3147  1020  01A2               	clrf	my_delay_ms@time+2
  3148  1021  01A3               	clrf	my_delay_ms@time+3
  3149  1022  27D4  160A  118A   	fcall	_my_delay_ms
  3150                           
  3151                           ;SlaveLiofilizadorVer1.c: 688:      Temp=0;
  3152  1025  1683               	bsf	3,5	;RP0=1, select bank1
  3153  1026  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3154  1027  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3155  1028  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3156  1029  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3157                           
  3158                           ;SlaveLiofilizadorVer1.c: 690:      for(i=1;i<15;i++)
  3159  102A  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3160  102B  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3161  102C                     l7692:	
  3162                           
  3163                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3164  102C  2337  160A  118A   	fcall	_ADC_Read_NTC
  3165  102F  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3166  1030  00D3               	movwf	(_mediatemperaturaNTC$2335+3)^(0+128)
  3167  1031  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3168  1032  00D2               	movwf	(_mediatemperaturaNTC$2335+2)^(0+128)
  3169  1033  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3170  1034  00D1               	movwf	(_mediatemperaturaNTC$2335+1)^(0+128)
  3171  1035  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3172  1036  00D0               	movwf	_mediatemperaturaNTC$2335^(0+128)
  3173                           
  3174                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3175  1037  0853               	movf	(_mediatemperaturaNTC$2335+3)^(0+128),w
  3176  1038  1283               	bcf	3,5	;RP0=0, select bank0
  3177  1039  00BC               	movwf	___fladd@b+3
  3178  103A  1683               	bsf	3,5	;RP0=1, select bank1
  3179  103B  0852               	movf	(_mediatemperaturaNTC$2335+2)^(0+128),w
  3180  103C  1283               	bcf	3,5	;RP0=0, select bank0
  3181  103D  00BB               	movwf	___fladd@b+2
  3182  103E  1683               	bsf	3,5	;RP0=1, select bank1
  3183  103F  0851               	movf	(_mediatemperaturaNTC$2335+1)^(0+128),w
  3184  1040  1283               	bcf	3,5	;RP0=0, select bank0
  3185  1041  00BA               	movwf	___fladd@b+1
  3186  1042  1683               	bsf	3,5	;RP0=1, select bank1
  3187  1043  0850               	movf	_mediatemperaturaNTC$2335^(0+128),w
  3188  1044  1283               	bcf	3,5	;RP0=0, select bank0
  3189  1045  00B9               	movwf	___fladd@b
  3190  1046  1683               	bsf	3,5	;RP0=1, select bank1
  3191  1047  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3192  1048  1283               	bcf	3,5	;RP0=0, select bank0
  3193  1049  00C0               	movwf	___fladd@a+3
  3194  104A  1683               	bsf	3,5	;RP0=1, select bank1
  3195  104B  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3196  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3197  104D  00BF               	movwf	___fladd@a+2
  3198  104E  1683               	bsf	3,5	;RP0=1, select bank1
  3199  104F  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3200  1050  1283               	bcf	3,5	;RP0=0, select bank0
  3201  1051  00BE               	movwf	___fladd@a+1
  3202  1052  1683               	bsf	3,5	;RP0=1, select bank1
  3203  1053  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3204  1054  1283               	bcf	3,5	;RP0=0, select bank0
  3205  1055  00BD               	movwf	___fladd@a
  3206  1056  21C8  160A  118A   	fcall	___fladd
  3207  1059  083C               	movf	?___fladd+3,w
  3208  105A  1683               	bsf	3,5	;RP0=1, select bank1
  3209  105B  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3210  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3211  105D  083B               	movf	?___fladd+2,w
  3212  105E  1683               	bsf	3,5	;RP0=1, select bank1
  3213  105F  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3214  1060  1283               	bcf	3,5	;RP0=0, select bank0
  3215  1061  083A               	movf	?___fladd+1,w
  3216  1062  1683               	bsf	3,5	;RP0=1, select bank1
  3217  1063  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3218  1064  1283               	bcf	3,5	;RP0=0, select bank0
  3219  1065  0839               	movf	?___fladd,w
  3220  1066  1683               	bsf	3,5	;RP0=1, select bank1
  3221  1067  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3222                           
  3223                           ;SlaveLiofilizadorVer1.c: 693:          if(Package_Usart_is_for_me()==1) break;
  3224  1068  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3225  106B  3A01               	xorlw	1
  3226  106C  1903               	btfsc	3,2
  3227  106D  2895               	goto	l7720
  3228                           
  3229                           ;SlaveLiofilizadorVer1.c: 695:          if(generic_status.flag_global_hot)
  3230  106E  1683               	bsf	3,5	;RP0=1, select bank3
  3231  106F  1703               	bsf	3,6	;RP1=1, select bank3
  3232  1070  1F3C               	btfss	_generic_status^(0+384),6
  3233  1071  288E               	goto	l7716
  3234                           
  3235                           ;SlaveLiofilizadorVer1.c: 696:            {;SlaveLiofilizadorVer1.c: 698:            if(
      +                          (TempoCNT_0==0)&&
  3236  1072  1303               	bcf	3,6	;RP1=0, select bank1
  3237  1073  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3238  1074  1D03               	btfss	3,2
  3239  1075  2880               	goto	l7708
  3240  1076  1703               	bsf	3,6	;RP1=1, select bank3
  3241  1077  0B5E               	decfsz	_RL0Status^(0+384),w
  3242  1078  2880               	goto	l7708
  3243  1079  0328               	decf	_Status0^(0+384),w
  3244  107A  0429               	iorwf	(_Status0+1)^(0+384),w
  3245  107B  1D03               	btfss	3,2
  3246  107C  2880               	goto	l7708
  3247                           
  3248                           ;SlaveLiofilizadorVer1.c: 700:               (Status0==1)) Rele0Ligado();
  3249  107D  20F0  160A  118A   	fcall	_Rele0Ligado
  3250  1080                     l7708:	
  3251                           
  3252                           ;SlaveLiofilizadorVer1.c: 702:            if((TempoCNT_1==0)&&
  3253  1080  0874               	movf	_TempoCNT_1,w	;volatile
  3254  1081  1D03               	btfss	3,2
  3255  1082  288E               	goto	l7716
  3256  1083  1683               	bsf	3,5	;RP0=1, select bank3
  3257  1084  1703               	bsf	3,6	;RP1=1, select bank3
  3258  1085  0B5D               	decfsz	_RL1Status^(0+384),w
  3259  1086  288E               	goto	l7716
  3260  1087  0326               	decf	_Status1^(0+384),w
  3261  1088  0427               	iorwf	(_Status1+1)^(0+384),w
  3262  1089  1D03               	btfss	3,2
  3263  108A  288E               	goto	l7716
  3264                           
  3265                           ;SlaveLiofilizadorVer1.c: 704:               (Status1==1)) Rele1Ligado();
  3266  108B  2107  160A  118A   	fcall	_Rele1Ligado
  3267  108E                     l7716:	
  3268                           
  3269                           ;SlaveLiofilizadorVer1.c: 707:          }
  3270  108E  1683               	bsf	3,5	;RP0=1, select bank1
  3271  108F  1303               	bcf	3,6	;RP1=0, select bank1
  3272  1090  300F               	movlw	15
  3273  1091  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3274  1092  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3275  1093  1C03               	skipc
  3276  1094  282C               	goto	l7692
  3277  1095                     l7720:	
  3278                           
  3279                           ;SlaveLiofilizadorVer1.c: 708:      if(i<10)
  3280  1095  300A               	movlw	10
  3281  1096  1683               	bsf	3,5	;RP0=1, select bank1
  3282  1097  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3283  1098  1C03               	btfss	3,0
  3284  1099  0008               	return
  3285                           
  3286                           ;SlaveLiofilizadorVer1.c: 713:      if(i==15)
  3287  109A  300F               	movlw	15
  3288  109B  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3289  109C  1D03               	btfss	3,2
  3290  109D  28AD               	goto	l7728
  3291                           
  3292                           ;SlaveLiofilizadorVer1.c: 714:         Temp/=(i-1);
  3293  109E  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3294  109F  3EFF               	addlw	255
  3295  10A0  1283               	bcf	3,5	;RP0=0, select bank0
  3296  10A1  00AB               	movwf	___xxtofl@val
  3297  10A2  30FF               	movlw	255
  3298  10A3  1803               	skipnc
  3299  10A4  3000               	movlw	0
  3300  10A5  00AC               	movwf	___xxtofl@val+1
  3301  10A6  01AD               	clrf	___xxtofl@val+2
  3302  10A7  1BAC               	btfsc	___xxtofl@val+1,7
  3303  10A8  03AD               	decf	___xxtofl@val+2,f
  3304  10A9  082D               	movf	___xxtofl@val+2,w
  3305  10AA  00AE               	movwf	___xxtofl@val+3
  3306  10AB  3001               	movlw	1
  3307  10AC  28B4               	goto	L1
  3308  10AD                     l7728:	
  3309                           
  3310                           ;SlaveLiofilizadorVer1.c: 716:         Temp/=(i);
  3311  10AD  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3312  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3313  10AF  120A  118A  25CC  160A  118A  	fcall	PL62	;call to abstracted procedure
  3314  10B4                     L1:	
  3315  10B4  24A9  160A  118A   	fcall	___xxtofl
  3316  10B7  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3317  10BA  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3318  10BB  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3319  10BC  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3320  10BD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3321  10BE  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3322  10BF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3323  10C0  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3324  10C1  00A4               	movwf	___fldiv@b^(0+128)
  3325  10C2  2517  160A  118A   	fcall	___fldiv
  3326  10C5  0823               	movf	(?___fldiv+3)^(0+128),w
  3327  10C6  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3328  10C7  0822               	movf	(?___fldiv+2)^(0+128),w
  3329  10C8  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3330  10C9  0821               	movf	(?___fldiv+1)^(0+128),w
  3331  10CA  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3332  10CB  0820               	movf	?___fldiv^(0+128),w
  3333  10CC  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3334                           
  3335                           ;SlaveLiofilizadorVer1.c: 718:      if(canal==0)
  3336  10CD  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3337  10CE  1D03               	btfss	3,2
  3338  10CF  28E0               	goto	l7734
  3339                           
  3340                           ;SlaveLiofilizadorVer1.c: 719:         {;SlaveLiofilizadorVer1.c: 720:         Temperatu
      +                          ra0=Temp;
  3341  10D0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3342  10D1  1703               	bsf	3,6	;RP1=1, select bank3
  3343  10D2  0097               	movwf	(_Temperatura0+3)^(0+384)
  3344  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  3345  10D4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3346  10D5  1703               	bsf	3,6	;RP1=1, select bank3
  3347  10D6  0096               	movwf	(_Temperatura0+2)^(0+384)
  3348  10D7  1303               	bcf	3,6	;RP1=0, select bank1
  3349  10D8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3350  10D9  1703               	bsf	3,6	;RP1=1, select bank3
  3351  10DA  0095               	movwf	(_Temperatura0+1)^(0+384)
  3352  10DB  1303               	bcf	3,6	;RP1=0, select bank1
  3353  10DC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3354  10DD  1703               	bsf	3,6	;RP1=1, select bank3
  3355  10DE  0094               	movwf	_Temperatura0^(0+384)
  3356                           
  3357                           ;SlaveLiofilizadorVer1.c: 721:         }
  3358  10DF  0008               	return
  3359  10E0                     l7734:	
  3360                           
  3361                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra1=Temp;
  3362  10E0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3363  10E1  1703               	bsf	3,6	;RP1=1, select bank3
  3364  10E2  0093               	movwf	(_Temperatura1+3)^(0+384)
  3365  10E3  1303               	bcf	3,6	;RP1=0, select bank1
  3366  10E4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3367  10E5  1703               	bsf	3,6	;RP1=1, select bank3
  3368  10E6  0092               	movwf	(_Temperatura1+2)^(0+384)
  3369  10E7  1303               	bcf	3,6	;RP1=0, select bank1
  3370  10E8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3371  10E9  1703               	bsf	3,6	;RP1=1, select bank3
  3372  10EA  0091               	movwf	(_Temperatura1+1)^(0+384)
  3373  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3374  10EC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3375  10ED  1703               	bsf	3,6	;RP1=1, select bank3
  3376  10EE  0090               	movwf	_Temperatura1^(0+384)
  3377  10EF  0008               	return
  3378  10F0                     __end_of_mediatemperaturaNTC:	
  3379  10F0                     __ptext71:	
  3380 ;; *************** function _Rele0Ligado *****************
  3381 ;; Defined at:
  3382 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 300/300
  3393 ;;		On exit  : 200/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_mediatemperaturaNTC
  3407 ;;		_Auto_Relay0
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _Rele0Ligado
  3413  10F0                     _Rele0Ligado:	
  3414  10F0                     l7548:	
  3415                           ;incstack = 0
  3416                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3417                           
  3418                           
  3419                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3420  10F0  1303               	bcf	3,6	;RP1=0, select bank1
  3421  10F1  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3422  10F2  1D03               	btfss	3,2
  3423  10F3  0008               	return
  3424                           
  3425                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3426  10F4  1283               	bcf	3,5	;RP0=0, select bank0
  3427  10F5  1807               	btfsc	7,0	;volatile
  3428  10F6  28FF               	goto	l7556
  3429                           
  3430                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoON_0;
  3431  10F7  1683               	bsf	3,5	;RP0=1, select bank3
  3432  10F8  1703               	bsf	3,6	;RP1=1, select bank3
  3433  10F9  083A               	movf	_TempoON_0^(0+384),w
  3434  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  3435  10FB  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3436                           
  3437                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=1;
  3438  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  3439  10FD  1407               	bsf	7,0	;volatile
  3440                           
  3441                           ;SlaveLiofilizadorVer1.c: 948:               }
  3442  10FE  0008               	return
  3443  10FF                     l7556:	
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 950:               {;SlaveLiofilizadorVer1.c: 951:            
      +                             TempoCNT_0=TempoOFF_0;
  3446  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3447  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3448  1101  0839               	movf	_TempoOFF_0^(0+384),w
  3449  1102  1303               	bcf	3,6	;RP1=0, select bank1
  3450  1103  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3451                           
  3452                           ;SlaveLiofilizadorVer1.c: 952:               PORTCbits.RC0=0;
  3453  1104  1283               	bcf	3,5	;RP0=0, select bank0
  3454  1105  1007               	bcf	7,0	;volatile
  3455  1106  0008               	return
  3456  1107                     __end_of_Rele0Ligado:	
  3457  1107                     __ptext65:	
  3458 ;; *************** function _Rele1Ligado *****************
  3459 ;; Defined at:
  3460 ;;		line 958 in file "SlaveLiofilizadorVer1.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/300
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_mediatemperaturaNTC
  3485 ;;		_Auto_Relay1
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _Rele1Ligado
  3491  1107                     _Rele1Ligado:	
  3492  1107                     l7560:	
  3493                           ;incstack = 0
  3494                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3495                           
  3496                           
  3497                           ;SlaveLiofilizadorVer1.c: 961:         if(TempoCNT_1==0)
  3498  1107  0874               	movf	_TempoCNT_1,w	;volatile
  3499  1108  1D03               	btfss	3,2
  3500  1109  0008               	return
  3501                           
  3502                           ;SlaveLiofilizadorVer1.c: 962:             {;SlaveLiofilizadorVer1.c: 965:             i
      +                          f(PORTCbits.RC1==0)
  3503  110A  1283               	bcf	3,5	;RP0=0, select bank0
  3504  110B  1303               	bcf	3,6	;RP1=0, select bank0
  3505  110C  1887               	btfsc	7,1	;volatile
  3506  110D  2916               	goto	l7568
  3507                           
  3508                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoON_1;
  3509  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3510  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3511  1110  0837               	movf	_TempoON_1^(0+384),w
  3512  1111  00F4               	movwf	_TempoCNT_1	;volatile
  3513                           
  3514                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=1;
  3515  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3516  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3517  1114  1487               	bsf	7,1	;volatile
  3518                           
  3519                           ;SlaveLiofilizadorVer1.c: 969:               }
  3520  1115  0008               	return
  3521  1116                     l7568:	
  3522                           
  3523                           ;SlaveLiofilizadorVer1.c: 971:               {;SlaveLiofilizadorVer1.c: 972:            
      +                             TempoCNT_1=TempoOFF_1;
  3524  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3525  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3526  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3527  1119  00F4               	movwf	_TempoCNT_1	;volatile
  3528                           
  3529                           ;SlaveLiofilizadorVer1.c: 973:               PORTCbits.RC1=0;
  3530  111A  1283               	bcf	3,5	;RP0=0, select bank0
  3531  111B  1303               	bcf	3,6	;RP1=0, select bank0
  3532  111C  1087               	bcf	7,1	;volatile
  3533  111D  0008               	return
  3534  111E                     __end_of_Rele1Ligado:	
  3535  111E                     __ptext9:	
  3536 ;; *************** function _eval_poly *****************
  3537 ;; Defined at:
  3538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  x               4    0[BANK1 ] PTR int 
  3541 ;;  d               1    4[BANK1 ] PTR const 
  3542 ;;		 -> log@coeff(36), 
  3543 ;;  n               2    5[BANK1 ] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  res             4   12[BANK1 ] int 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  4    0[BANK1 ] int 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 300/100
  3552 ;;		On exit  : 300/100
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       0       7       0       0
  3556 ;;      Locals:         0       0       4       0       0
  3557 ;;      Temps:          0       0       5       0       0
  3558 ;;      Totals:         0       0      16       0       0
  3559 ;;Total ram usage:       16 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    3
  3562 ;; This function calls:
  3563 ;;		___fladd
  3564 ;;		___flmul
  3565 ;; This function is called by:
  3566 ;;		_log
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _eval_poly
  3572  111E                     _eval_poly:	
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3576  111E  0825               	movf	eval_poly@n^(0+128),w
  3577  111F  00A7               	movwf	??_eval_poly^(0+128)
  3578  1120  3001               	movlw	1
  3579  1121  1003               	clrc
  3580  1122                     L2:	
  3581  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3582  1123  3EFF               	addlw	-1
  3583  1124  1003               	clrc
  3584  1125  1D03               	skipz
  3585  1126  2922               	goto	L2
  3586  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3587  1128  0724               	addwf	eval_poly@d^(0+128),w
  3588  1129  0084               	movwf	4
  3589  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3590  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3591  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3592  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3593  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3594  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3595  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3596  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3597  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3598  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3599  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3600  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3601  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3602  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3603  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3604  1149                     L4:	
  3605  1149  00AC               	movwf	eval_poly@res^(0+128)
  3606  114A  0825               	movf	eval_poly@n^(0+128),w
  3607  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3608  114C  1903               	btfsc	3,2
  3609  114D  29BF               	goto	l6680
  3610  114E  30FF               	movlw	-1
  3611  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3612  1150  1C03               	skipc
  3613  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3614  1152  0825               	movf	eval_poly@n^(0+128),w
  3615  1153  00A7               	movwf	??_eval_poly^(0+128)
  3616  1154  3001               	movlw	1
  3617  1155  1003               	clrc
  3618  1156                     L3:	
  3619  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3620  1157  3EFF               	addlw	-1
  3621  1158  1003               	clrc
  3622  1159  1D03               	skipz
  3623  115A  2956               	goto	L3
  3624  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3625  115C  0724               	addwf	eval_poly@d^(0+128),w
  3626  115D  0084               	movwf	4
  3627  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3628  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3629  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3630  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3631  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3632  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3633  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3634  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3635  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3636  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3637  1178  00BC               	movwf	___fladd@b+3
  3638  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3639  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3640  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3641  117C  00BB               	movwf	___fladd@b+2
  3642  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3643  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3644  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3645  1180  00BA               	movwf	___fladd@b+1
  3646  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3647  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3648  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3649  1184  00B9               	movwf	___fladd@b
  3650  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3651  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3652  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3653  1188  00D8               	movwf	___flmul@b+3
  3654  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3655  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3656  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3657  118C  00D7               	movwf	___flmul@b+2
  3658  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3659  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3660  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3661  1190  00D6               	movwf	___flmul@b+1
  3662  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3663  1192  082C               	movf	eval_poly@res^(0+128),w
  3664  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3665  1194  00D5               	movwf	___flmul@b
  3666  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3667  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3668  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3669  1198  00DC               	movwf	___flmul@a+3
  3670  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3671  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3672  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3673  119C  00DB               	movwf	___flmul@a+2
  3674  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3675  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3676  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3677  11A0  00DA               	movwf	___flmul@a+1
  3678  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3679  11A2  0820               	movf	eval_poly@x^(0+128),w
  3680  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3681  11A4  00D9               	movwf	___flmul@a
  3682  11A5  120A  158A  23DC  160A  118A  	fcall	___flmul
  3683  11AA  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  3684  11AD  21C8  160A  118A   	fcall	___fladd
  3685  11B0  083C               	movf	?___fladd+3,w
  3686  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3687  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3688  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3689  11B4  083B               	movf	?___fladd+2,w
  3690  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3691  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3692  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3693  11B8  083A               	movf	?___fladd+1,w
  3694  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3695  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3696  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3697  11BC  0839               	movf	?___fladd,w
  3698  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3699  11BE  2949               	goto	L4
  3700  11BF                     l6680:	
  3701  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3702  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3703  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3704  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3705  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3706  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3707  11C5  082C               	movf	eval_poly@res^(0+128),w
  3708  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3709  11C7  0008               	return
  3710  11C8                     __end_of_eval_poly:	
  3711  11C8                     __ptext69:	
  3712 ;; *************** function ___fladd *****************
  3713 ;; Defined at:
  3714 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  b               4   25[BANK0 ] void 
  3717 ;;  a               4   29[BANK0 ] void 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  grs             1   44[BANK0 ] unsigned char 
  3720 ;;  bexp            1   43[BANK0 ] unsigned char 
  3721 ;;  aexp            1   42[BANK0 ] unsigned char 
  3722 ;;  signs           1   41[BANK0 ] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  4   25[BANK0 ] unsigned char 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, btemp+1
  3727 ;; Tracked objects:
  3728 ;;		On entry : 300/0
  3729 ;;		On exit  : 300/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3732 ;;      Params:         0       8       0       0       0
  3733 ;;      Locals:         0       4       0       0       0
  3734 ;;      Temps:          0       8       0       0       0
  3735 ;;      Totals:         0      20       0       0       0
  3736 ;;Total ram usage:       20 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_mediatemperaturaNTC
  3743 ;;		_ADC_Read_NTC
  3744 ;;		___flsub
  3745 ;;		_log
  3746 ;;		_eval_poly
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function ___fladd
  3752  11C8                     ___fladd:	
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3756  11C8  083C               	movf	___fladd@b+3,w
  3757  11C9  00C9               	movwf	___fladd@signs
  3758  11CA  3080               	movlw	128
  3759  11CB  05C9               	andwf	___fladd@signs,f
  3760  11CC  1003               	clrc
  3761  11CD  0D3C               	rlf	___fladd@b+3,w
  3762  11CE  00CB               	movwf	___fladd@bexp
  3763  11CF  1BBB               	btfsc	___fladd@b+2,7
  3764  11D0  144B               	bsf	___fladd@bexp,0
  3765  11D1  084B               	movf	___fladd@bexp,w
  3766  11D2  1903               	btfsc	3,2
  3767  11D3  29DC               	goto	l1323
  3768  11D4  0F4B               	incfsz	___fladd@bexp,w
  3769  11D5  29DA               	goto	l1324
  3770  11D6  01B9               	clrf	___fladd@b
  3771  11D7  01BA               	clrf	___fladd@b+1
  3772  11D8  01BB               	clrf	___fladd@b+2
  3773  11D9  01BC               	clrf	___fladd@b+3
  3774  11DA                     l1324:	
  3775  11DA  17BB               	bsf	___fladd@b+2,7
  3776  11DB  29DF               	goto	L19
  3777  11DC                     l1323:	
  3778  11DC  01B9               	clrf	___fladd@b
  3779  11DD  01BA               	clrf	___fladd@b+1
  3780  11DE  01BB               	clrf	___fladd@b+2
  3781  11DF                     L19:	
  3782  11DF  01BC               	clrf	___fladd@b+3
  3783  11E0  0840               	movf	___fladd@a+3,w
  3784  11E1  00CA               	movwf	___fladd@aexp
  3785  11E2  3080               	movlw	128
  3786  11E3  05CA               	andwf	___fladd@aexp,f
  3787  11E4  084A               	movf	___fladd@aexp,w
  3788  11E5  0649               	xorwf	___fladd@signs,w
  3789  11E6  1D03               	btfss	3,2
  3790  11E7  1749               	bsf	___fladd@signs,6
  3791  11E8  1003               	clrc
  3792  11E9  0D40               	rlf	___fladd@a+3,w
  3793  11EA  00CA               	movwf	___fladd@aexp
  3794  11EB  1BBF               	btfsc	___fladd@a+2,7
  3795  11EC  144A               	bsf	___fladd@aexp,0
  3796  11ED  084A               	movf	___fladd@aexp,w
  3797  11EE  1903               	btfsc	3,2
  3798  11EF  29F8               	goto	l1328
  3799  11F0  0F4A               	incfsz	___fladd@aexp,w
  3800  11F1  29F6               	goto	l1329
  3801  11F2  01BD               	clrf	___fladd@a
  3802  11F3  01BE               	clrf	___fladd@a+1
  3803  11F4  01BF               	clrf	___fladd@a+2
  3804  11F5  01C0               	clrf	___fladd@a+3
  3805  11F6                     l1329:	
  3806  11F6  17BF               	bsf	___fladd@a+2,7
  3807  11F7  29FB               	goto	L20
  3808  11F8                     l1328:	
  3809  11F8  01BD               	clrf	___fladd@a
  3810  11F9  01BE               	clrf	___fladd@a+1
  3811  11FA  01BF               	clrf	___fladd@a+2
  3812  11FB                     L20:	
  3813  11FB  01C0               	clrf	___fladd@a+3
  3814  11FC  084B               	movf	___fladd@bexp,w
  3815  11FD  024A               	subwf	___fladd@aexp,w
  3816  11FE  1803               	skipnc
  3817  11FF  2A22               	goto	l6188
  3818  1200  1F49               	btfss	___fladd@signs,6
  3819  1201  2A04               	goto	l6158
  3820  1202  3080               	movlw	128
  3821  1203  06C9               	xorwf	___fladd@signs,f
  3822  1204                     l6158:	
  3823  1204  084B               	movf	___fladd@bexp,w
  3824  1205  00CC               	movwf	___fladd@grs
  3825  1206  084A               	movf	___fladd@aexp,w
  3826  1207  00CB               	movwf	___fladd@bexp
  3827  1208  084C               	movf	___fladd@grs,w
  3828  1209  00CA               	movwf	___fladd@aexp
  3829  120A  0839               	movf	___fladd@b,w
  3830  120B  00CC               	movwf	___fladd@grs
  3831  120C  083D               	movf	___fladd@a,w
  3832  120D  00B9               	movwf	___fladd@b
  3833  120E  084C               	movf	___fladd@grs,w
  3834  120F  00BD               	movwf	___fladd@a
  3835  1210  083A               	movf	___fladd@b+1,w
  3836  1211  00CC               	movwf	___fladd@grs
  3837  1212  083E               	movf	___fladd@a+1,w
  3838  1213  00BA               	movwf	___fladd@b+1
  3839  1214  084C               	movf	___fladd@grs,w
  3840  1215  00BE               	movwf	___fladd@a+1
  3841  1216  083B               	movf	___fladd@b+2,w
  3842  1217  00CC               	movwf	___fladd@grs
  3843  1218  083F               	movf	___fladd@a+2,w
  3844  1219  00BB               	movwf	___fladd@b+2
  3845  121A  084C               	movf	___fladd@grs,w
  3846  121B  00BF               	movwf	___fladd@a+2
  3847  121C  083C               	movf	___fladd@b+3,w
  3848  121D  00CC               	movwf	___fladd@grs
  3849  121E  0840               	movf	___fladd@a+3,w
  3850  121F  00BC               	movwf	___fladd@b+3
  3851  1220  084C               	movf	___fladd@grs,w
  3852  1221  00C0               	movwf	___fladd@a+3
  3853  1222                     l6188:	
  3854  1222  01CC               	clrf	___fladd@grs
  3855  1223  084A               	movf	___fladd@aexp,w
  3856  1224  00C1               	movwf	??___fladd
  3857  1225  01C2               	clrf	??___fladd+1
  3858  1226  0842               	movf	??___fladd+1,w
  3859  1227  00C4               	movwf	??___fladd+3
  3860  1228  084B               	movf	___fladd@bexp,w
  3861  1229  0241               	subwf	??___fladd,w
  3862  122A  00C3               	movwf	??___fladd+2
  3863  122B  1C03               	skipc
  3864  122C  03C4               	decf	??___fladd+3,f
  3865  122D  0844               	movf	??___fladd+3,w
  3866  122E  3A80               	xorlw	128
  3867  122F  00FF               	movwf	127
  3868  1230  3080               	movlw	128
  3869  1231  027F               	subwf	127,w
  3870  1232  1D03               	skipz
  3871  1233  2A36               	goto	u5365
  3872  1234  301A               	movlw	26
  3873  1235  0243               	subwf	??___fladd+2,w
  3874  1236                     u5365:	
  3875  1236  1C03               	skipc
  3876  1237  2A57               	goto	l6204
  3877  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3878  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3879  123A  083C               	movf	___fladd@b+3,w
  3880  123B  043B               	iorwf	___fladd@b+2,w
  3881  123C  043A               	iorwf	___fladd@b+1,w
  3882  123D  0439               	iorwf	___fladd@b,w
  3883  123E  1903               	btfsc	3,2
  3884  123F  2A42               	goto	u5370
  3885  1240  3001               	movlw	1
  3886  1241  2A43               	goto	u5380
  3887  1242                     u5370:	
  3888  1242  3000               	movlw	0
  3889  1243                     u5380:	
  3890  1243  00CC               	movwf	___fladd@grs
  3891  1244  01B9               	clrf	___fladd@b
  3892  1245  01BA               	clrf	___fladd@b+1
  3893  1246  01BB               	clrf	___fladd@b+2
  3894  1247  01BC               	clrf	___fladd@b+3
  3895  1248  084A               	movf	___fladd@aexp,w
  3896  1249  00CB               	movwf	___fladd@bexp
  3897  124A  2A5D               	goto	l1334
  3898  124B                     l1336:	
  3899  124B  1C4C               	btfss	___fladd@grs,0
  3900  124C  2A52               	goto	l1337
  3901  124D  1003               	clrc
  3902  124E  0C4C               	rrf	___fladd@grs,w
  3903  124F  3801               	iorlw	1
  3904  1250  00CC               	movwf	___fladd@grs
  3905  1251  2A54               	goto	l1338
  3906  1252                     l1337:	
  3907  1252  1003               	clrc
  3908  1253  0CCC               	rrf	___fladd@grs,f
  3909  1254                     l1338:	
  3910  1254  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3911  1257                     l6204:	
  3912  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3913  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3914  1259  084A               	movf	___fladd@aexp,w
  3915  125A  024B               	subwf	___fladd@bexp,w
  3916  125B  1C03               	skipc
  3917  125C  2A4B               	goto	l1336
  3918  125D                     l1334:	
  3919  125D  1B49               	btfsc	___fladd@signs,6
  3920  125E  2A86               	goto	l6224
  3921  125F  084B               	movf	___fladd@bexp,w
  3922  1260  1D03               	btfss	3,2
  3923  1261  2A63               	goto	l6210
  3924  1262  2FCF               	ljmp	PL78	;call to abstracted procedure
  3925  1263                     l6210:	
  3926  1263  083D               	movf	___fladd@a,w
  3927  1264  07B9               	addwf	___fladd@b,f
  3928  1265  083E               	movf	___fladd@a+1,w
  3929  1266  1103               	clrz
  3930  1267  1803               	skipnc
  3931  1268  3E01               	addlw	1
  3932  1269  1D03               	btfss	3,2
  3933  126A  07BA               	addwf	___fladd@b+1,f
  3934  126B  083F               	movf	___fladd@a+2,w
  3935  126C  1103               	clrz
  3936  126D  1803               	skipnc
  3937  126E  3E01               	addlw	1
  3938  126F  1D03               	btfss	3,2
  3939  1270  07BB               	addwf	___fladd@b+2,f
  3940  1271  0840               	movf	___fladd@a+3,w
  3941  1272  1103               	clrz
  3942  1273  1803               	skipnc
  3943  1274  3E01               	addlw	1
  3944  1275  1D03               	btfss	3,2
  3945  1276  07BC               	addwf	___fladd@b+3,f
  3946  1277  1C3C               	btfss	___fladd@b+3,0
  3947  1278  2B02               	goto	l6254
  3948  1279  1C4C               	btfss	___fladd@grs,0
  3949  127A  2A80               	goto	l1345
  3950  127B  1003               	clrc
  3951  127C  0C4C               	rrf	___fladd@grs,w
  3952  127D  3801               	iorlw	1
  3953  127E  00CC               	movwf	___fladd@grs
  3954  127F  2A82               	goto	l1346
  3955  1280                     l1345:	
  3956  1280  1003               	clrc
  3957  1281  0CCC               	rrf	___fladd@grs,f
  3958  1282                     l1346:	
  3959  1282  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3960  1285  2B02               	goto	l6254
  3961  1286                     l6224:	
  3962  1286  083C               	movf	___fladd@b+3,w
  3963  1287  3A80               	xorlw	128
  3964  1288  00FF               	movwf	127
  3965  1289  0840               	movf	___fladd@a+3,w
  3966  128A  3A80               	xorlw	128
  3967  128B  027F               	subwf	127,w
  3968  128C  1D03               	skipz
  3969  128D  2A98               	goto	u5483
  3970  128E  083F               	movf	___fladd@a+2,w
  3971  128F  023B               	subwf	___fladd@b+2,w
  3972  1290  1D03               	skipz
  3973  1291  2A98               	goto	u5483
  3974  1292  083E               	movf	___fladd@a+1,w
  3975  1293  023A               	subwf	___fladd@b+1,w
  3976  1294  1D03               	skipz
  3977  1295  2A98               	goto	u5483
  3978  1296  083D               	movf	___fladd@a,w
  3979  1297  0239               	subwf	___fladd@b,w
  3980  1298                     u5483:	
  3981  1298  1803               	skipnc
  3982  1299  2AD8               	goto	l6234
  3983  129A  30FF               	movlw	255
  3984  129B  00C1               	movwf	??___fladd
  3985  129C  00C2               	movwf	??___fladd+1
  3986  129D  00C3               	movwf	??___fladd+2
  3987  129E  00C4               	movwf	??___fladd+3
  3988  129F  083D               	movf	___fladd@a,w
  3989  12A0  00C5               	movwf	??___fladd+4
  3990  12A1  083E               	movf	___fladd@a+1,w
  3991  12A2  00C6               	movwf	??___fladd+5
  3992  12A3  083F               	movf	___fladd@a+2,w
  3993  12A4  00C7               	movwf	??___fladd+6
  3994  12A5  0840               	movf	___fladd@a+3,w
  3995  12A6  00C8               	movwf	??___fladd+7
  3996  12A7  0839               	movf	___fladd@b,w
  3997  12A8  02C5               	subwf	??___fladd+4,f
  3998  12A9  083A               	movf	___fladd@b+1,w
  3999  12AA  1C03               	skipc
  4000  12AB  0F3A               	incfsz	___fladd@b+1,w
  4001  12AC  02C6               	subwf	??___fladd+5,f
  4002  12AD  083B               	movf	___fladd@b+2,w
  4003  12AE  1C03               	skipc
  4004  12AF  0F3B               	incfsz	___fladd@b+2,w
  4005  12B0  02C7               	subwf	??___fladd+6,f
  4006  12B1  083C               	movf	___fladd@b+3,w
  4007  12B2  1C03               	skipc
  4008  12B3  0F3C               	incfsz	___fladd@b+3,w
  4009  12B4  02C8               	subwf	??___fladd+7,f
  4010  12B5  0845               	movf	??___fladd+4,w
  4011  12B6  07C1               	addwf	??___fladd,f
  4012  12B7  0846               	movf	??___fladd+5,w
  4013  12B8  1803               	skipnc
  4014  12B9  0F46               	incfsz	??___fladd+5,w
  4015  12BA  07C2               	addwf	??___fladd+1,f
  4016  12BB  0847               	movf	??___fladd+6,w
  4017  12BC  1803               	skipnc
  4018  12BD  0F47               	incfsz	??___fladd+6,w
  4019  12BE  07C3               	addwf	??___fladd+2,f
  4020  12BF  0848               	movf	??___fladd+7,w
  4021  12C0  1803               	skipnc
  4022  12C1  0A48               	incf	??___fladd+7,w
  4023  12C2  07C4               	addwf	??___fladd+3,f
  4024  12C3  0844               	movf	??___fladd+3,w
  4025  12C4  00BC               	movwf	___fladd@b+3
  4026  12C5  0843               	movf	??___fladd+2,w
  4027  12C6  00BB               	movwf	___fladd@b+2
  4028  12C7  0842               	movf	??___fladd+1,w
  4029  12C8  00BA               	movwf	___fladd@b+1
  4030  12C9  0841               	movf	??___fladd,w
  4031  12CA  00B9               	movwf	___fladd@b
  4032  12CB  3080               	movlw	128
  4033  12CC  06C9               	xorwf	___fladd@signs,f
  4034  12CD  09CC               	comf	___fladd@grs,f
  4035  12CE  0FCC               	incfsz	___fladd@grs,f
  4036  12CF  2AE6               	goto	l1351
  4037  12D0  0AB9               	incf	___fladd@b,f
  4038  12D1  1903               	skipnz
  4039  12D2  0ABA               	incf	___fladd@b+1,f
  4040  12D3  1903               	skipnz
  4041  12D4  0ABB               	incf	___fladd@b+2,f
  4042  12D5  1903               	skipnz
  4043  12D6  0ABC               	incf	___fladd@b+3,f
  4044  12D7  2AE6               	goto	l1351
  4045  12D8                     l6234:	
  4046  12D8  083D               	movf	___fladd@a,w
  4047  12D9  02B9               	subwf	___fladd@b,f
  4048  12DA  083E               	movf	___fladd@a+1,w
  4049  12DB  1C03               	skipc
  4050  12DC  0F3E               	incfsz	___fladd@a+1,w
  4051  12DD  02BA               	subwf	___fladd@b+1,f
  4052  12DE  083F               	movf	___fladd@a+2,w
  4053  12DF  1C03               	skipc
  4054  12E0  0F3F               	incfsz	___fladd@a+2,w
  4055  12E1  02BB               	subwf	___fladd@b+2,f
  4056  12E2  0840               	movf	___fladd@a+3,w
  4057  12E3  1C03               	skipc
  4058  12E4  0F40               	incfsz	___fladd@a+3,w
  4059  12E5  02BC               	subwf	___fladd@b+3,f
  4060  12E6                     l1351:	
  4061  12E6  083C               	movf	___fladd@b+3,w
  4062  12E7  043B               	iorwf	___fladd@b+2,w
  4063  12E8  043A               	iorwf	___fladd@b+1,w
  4064  12E9  0439               	iorwf	___fladd@b,w
  4065  12EA  1D03               	skipz
  4066  12EB  2B00               	goto	l6252
  4067  12EC  084C               	movf	___fladd@grs,w
  4068  12ED  1D03               	btfss	3,2
  4069  12EE  2B00               	goto	l6252
  4070  12EF  2FCF               	ljmp	PL78	;call to abstracted procedure
  4071  12F0                     l6240:	
  4072  12F0  1003               	clrc
  4073  12F1  0DB9               	rlf	___fladd@b,f
  4074  12F2  0DBA               	rlf	___fladd@b+1,f
  4075  12F3  0DBB               	rlf	___fladd@b+2,f
  4076  12F4  0DBC               	rlf	___fladd@b+3,f
  4077  12F5  1BCC               	btfsc	___fladd@grs,7
  4078  12F6  1439               	bsf	___fladd@b,0
  4079  12F7  1C4C               	btfss	___fladd@grs,0
  4080  12F8  2AFB               	goto	l1356
  4081  12F9  1403               	setc
  4082  12FA  2AFC               	goto	L21
  4083  12FB                     l1356:	
  4084  12FB  1003               	clrc
  4085  12FC                     L21:	
  4086  12FC  0DCC               	rlf	___fladd@grs,f
  4087  12FD  084B               	movf	___fladd@bexp,w
  4088  12FE  1D03               	btfss	3,2
  4089  12FF  03CB               	decf	___fladd@bexp,f
  4090  1300                     l6252:	
  4091  1300  1FBB               	btfss	___fladd@b+2,7
  4092  1301  2AF0               	goto	l6240
  4093  1302                     l6254:	
  4094  1302  01CA               	clrf	___fladd@aexp
  4095  1303  1FCC               	btfss	___fladd@grs,7
  4096  1304  2B0D               	goto	l6264
  4097  1305  084C               	movf	___fladd@grs,w
  4098  1306  397F               	andlw	127
  4099  1307  1903               	btfsc	3,2
  4100  1308  1839               	btfsc	___fladd@b,0
  4101  1309  2B0B               	goto	l6260
  4102  130A  2B0D               	goto	l6264
  4103  130B                     l6260:	
  4104  130B  01CA               	clrf	___fladd@aexp
  4105  130C  0ACA               	incf	___fladd@aexp,f
  4106  130D                     l6264:	
  4107  130D  084A               	movf	___fladd@aexp,w
  4108  130E  1903               	btfsc	3,2
  4109  130F  2B20               	goto	l6276
  4110  1310  0AB9               	incf	___fladd@b,f
  4111  1311  1903               	skipnz
  4112  1312  0ABA               	incf	___fladd@b+1,f
  4113  1313  1903               	skipnz
  4114  1314  0ABB               	incf	___fladd@b+2,f
  4115  1315  1903               	skipnz
  4116  1316  0ABC               	incf	___fladd@b+3,f
  4117  1317  1C3C               	btfss	___fladd@b+3,0
  4118  1318  2B20               	goto	l6276
  4119  1319  0D3C               	rlf	___fladd@b+3,w
  4120  131A  0CBC               	rrf	___fladd@b+3,f
  4121  131B  0CBB               	rrf	___fladd@b+2,f
  4122  131C  0CBA               	rrf	___fladd@b+1,f
  4123  131D  0CB9               	rrf	___fladd@b,f
  4124  131E  0F4B               	incfsz	___fladd@bexp,w
  4125  131F  0ACB               	incf	___fladd@bexp,f
  4126  1320                     l6276:	
  4127  1320  0A4B               	incf	___fladd@bexp,w
  4128  1321  1D03               	btfss	3,2
  4129  1322  084B               	movf	___fladd@bexp,w
  4130  1323  1D03               	btfss	3,2
  4131  1324  2B2C               	goto	l6284
  4132  1325  01B9               	clrf	___fladd@b
  4133  1326  01BA               	clrf	___fladd@b+1
  4134  1327  01BB               	clrf	___fladd@b+2
  4135  1328  01BC               	clrf	___fladd@b+3
  4136  1329  084B               	movf	___fladd@bexp,w
  4137  132A  1903               	btfsc	3,2
  4138  132B  01C9               	clrf	___fladd@signs
  4139  132C                     l6284:	
  4140  132C  1C4B               	btfss	___fladd@bexp,0
  4141  132D  2B30               	goto	l1371
  4142  132E  17BB               	bsf	___fladd@b+2,7
  4143  132F  2B31               	goto	l6288
  4144  1330                     l1371:	
  4145  1330  13BB               	bcf	___fladd@b+2,7
  4146  1331                     l6288:	
  4147  1331  1003               	clrc
  4148  1332  0C4B               	rrf	___fladd@bexp,w
  4149  1333  00BC               	movwf	___fladd@b+3
  4150  1334  1BC9               	btfsc	___fladd@signs,7
  4151  1335  17BC               	bsf	___fladd@b+3,7
  4152  1336  0008               	return
  4153  1337                     __end_of___fladd:	
  4154  1337                     __ptext5:	
  4155 ;; *************** function _ADC_Read_NTC *****************
  4156 ;; Defined at:
  4157 ;;		line 56 in file "adc.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  canal           1    wreg     unsigned char 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  canal           1    0[COMMON] unsigned char 
  4162 ;;  temperatura     4   43[BANK1 ] float 
  4163 ;;  resistencia     4   36[BANK1 ] float 
  4164 ;;  calc            4   30[BANK1 ] float 
  4165 ;;  value           2   41[BANK1 ] unsigned int 
  4166 ;;  B               2   34[BANK1 ] int 
  4167 ;;  i               1   40[BANK1 ] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  4   25[BANK1 ] float 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 300/100
  4174 ;;		On exit  : 300/100
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4177 ;;      Params:         0       0       5       0       0
  4178 ;;      Locals:         0       0      17       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         0       0      22       0       0
  4181 ;;Total ram usage:       22 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    5
  4184 ;; This function calls:
  4185 ;;		___fladd
  4186 ;;		___fldiv
  4187 ;;		___flmul
  4188 ;;		___flsub
  4189 ;;		___lwdiv
  4190 ;;		___xxtofl
  4191 ;;		_captura
  4192 ;;		_log
  4193 ;; This function is called by:
  4194 ;;		_mediatemperaturaNTC
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _ADC_Read_NTC
  4200  1337                     _ADC_Read_NTC:	
  4201                           
  4202                           ;adc.c: 57:     int B = 3975;
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4206  1337  3087               	movlw	135
  4207  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4208  1339  300F               	movlw	15
  4209  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4210                           
  4211                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4212  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4213  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4214                           
  4215                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4216  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4217  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4218  133F                     l7502:	
  4219                           
  4220                           ;adc.c: 66:         value+=captura();
  4221  133F  267E  160A  118A   	fcall	_captura
  4222  1342  0820               	movf	?_captura,w
  4223  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4224  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4225  1345  1803               	skipnc
  4226  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4227  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4228  1348  0821               	movf	?_captura+1,w
  4229  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4230  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4231  134B  3033               	movlw	51
  4232  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4233  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4234  134E  1C03               	skipc
  4235  134F  2B3F               	goto	l7502
  4236                           
  4237                           ;adc.c: 67:     value/=(i-1);
  4238  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4239  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4240  1352  00A0               	movwf	___lwdiv@divisor
  4241  1353  30FF               	movlw	255
  4242  1354  01A1               	clrf	___lwdiv@divisor+1
  4243  1355  07A0               	addwf	___lwdiv@divisor,f
  4244  1356  1803               	skipnc
  4245  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4246  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4247  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4248  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4249  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4250  135C  00A3               	movwf	___lwdiv@dividend+1
  4251  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4252  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4253  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4254  1360  00A2               	movwf	___lwdiv@dividend
  4255  1361  2654  160A  118A   	fcall	___lwdiv
  4256  1364  0821               	movf	?___lwdiv+1,w
  4257  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4258  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4259  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4260  1368  0820               	movf	?___lwdiv,w
  4261  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4262  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4263                           
  4264                           ;adc.c: 68:     resistencia =(1023.0-value);
  4265  136B  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4266  136E  24A9  160A  118A   	fcall	___xxtofl
  4267  1371  278F  160A  118A   	fcall	PL24	;call to abstracted procedure
  4268  1374  3044               	movlw	68
  4269  1375  00D4               	movwf	___flsub@b+3
  4270  1376  307F               	movlw	127
  4271  1377  00D3               	movwf	___flsub@b+2
  4272  1378  30C0               	movlw	192
  4273  1379  00D2               	movwf	___flsub@b+1
  4274  137A  01D1               	clrf	___flsub@b
  4275  137B  2638  160A  118A   	fcall	___flsub
  4276  137E  0850               	movf	?___flsub+3,w
  4277  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4278  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4279  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4280  1382  084F               	movf	?___flsub+2,w
  4281  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4282  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4283  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4284  1386  084E               	movf	?___flsub+1,w
  4285  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4286  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4287  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4288  138A  084D               	movf	?___flsub,w
  4289  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4290  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4291                           
  4292                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4293  138D  3046               	movlw	70
  4294  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4295  138F  00D4               	movwf	___flsub@b+3
  4296  1390  301C               	movlw	28
  4297  1391  00D3               	movwf	___flsub@b+2
  4298  1392  3040               	movlw	64
  4299  1393  00D2               	movwf	___flsub@b+1
  4300  1394  01D1               	clrf	___flsub@b
  4301  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4302  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4303  1397  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4304  139A  24A9  160A  118A   	fcall	___xxtofl
  4305  139D  278F  160A  118A   	fcall	PL24	;call to abstracted procedure
  4306  13A0  2638               	fcall	___flsub
  4307  13A1  0850               	movf	?___flsub+3,w
  4308  13A2  00D8               	movwf	___flmul@b+3
  4309  13A3  084F               	movf	?___flsub+2,w
  4310  13A4  00D7               	movwf	___flmul@b+2
  4311  13A5  084E               	movf	?___flsub+1,w
  4312  13A6  00D6               	movwf	___flmul@b+1
  4313  13A7  084D               	movf	?___flsub,w
  4314  13A8  00D5               	movwf	___flmul@b
  4315  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4316  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4317  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4318  13AC  00DC               	movwf	___flmul@a+3
  4319  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4320  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4321  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4322  13B0  00DB               	movwf	___flmul@a+2
  4323  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4324  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4325  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4326  13B4  00DA               	movwf	___flmul@a+1
  4327  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4328  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4329  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4330  13B8  00D9               	movwf	___flmul@a
  4331  13B9  120A  158A  23DC  160A  118A  	fcall	___flmul
  4332  13BE  0858               	movf	?___flmul+3,w
  4333  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4334  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4335  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4336  13C2  0857               	movf	?___flmul+2,w
  4337  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4338  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4339  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4340  13C6  0856               	movf	?___flmul+1,w
  4341  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4342  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4343  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4344  13CA  0855               	movf	?___flmul,w
  4345  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4346  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4347                           
  4348                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4349  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4350  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4351  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4352  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4353  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4354  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4355  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4356  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4357  13D5  3046               	movlw	70
  4358  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4359  13D7  00D8               	movwf	___flmul@b+3
  4360  13D8  301C               	movlw	28
  4361  13D9  00D7               	movwf	___flmul@b+2
  4362  13DA  3040               	movlw	64
  4363  13DB  00D6               	movwf	___flmul@b+1
  4364  13DC  01D5               	clrf	___flmul@b
  4365  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4366  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4367  13DF  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4368  13E2  24A9  160A  118A   	fcall	___xxtofl
  4369  13E5  27AA               	fcall	PL42	;call to abstracted procedure
  4370  13E6  120A  158A  23DC  160A  118A  	fcall	___flmul
  4371  13EB  0858               	movf	?___flmul+3,w
  4372  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4373  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4374  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4375  13EF  0857               	movf	?___flmul+2,w
  4376  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4377  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4378  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4379  13F3  0856               	movf	?___flmul+1,w
  4380  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4381  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4382  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4383  13F7  0855               	movf	?___flmul,w
  4384  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4385  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4386  13FA  2517  160A  118A   	fcall	___fldiv
  4387  13FD  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4388                           
  4389                           ;adc.c: 71:     calc=temperatura;
  4390  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4391  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4392  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4393  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4394  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4395  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4396  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4397  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4398                           
  4399                           ;adc.c: 72:     temperatura =log(calc);
  4400  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4401  1409  00B3               	movwf	(log@x+3)^(0+128)
  4402  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4403  140B  00B2               	movwf	(log@x+2)^(0+128)
  4404  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4405  140D  00B1               	movwf	(log@x+1)^(0+128)
  4406  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4407  140F  00B0               	movwf	log@x^(0+128)
  4408  1410  268C  160A  118A   	fcall	_log
  4409  1413  0833               	movf	(?_log+3)^(0+128),w
  4410  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4411  1415  0832               	movf	(?_log+2)^(0+128),w
  4412  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4413  1417  0831               	movf	(?_log+1)^(0+128),w
  4414  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4415  1419  0830               	movf	?_log^(0+128),w
  4416  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4417                           
  4418                           ;adc.c: 73:     temperatura/=B;
  4419  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4420  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4421  141D  00AB               	movwf	___xxtofl@val
  4422  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4423  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4424  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4425  1421  27BC  160A  118A   	fcall	PL52	;call to abstracted procedure
  4426  1424  24A9  160A  118A   	fcall	___xxtofl
  4427  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4428  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4429  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4430  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4431  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4432  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4433  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4434  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4435  1431  00A4               	movwf	___fldiv@b^(0+128)
  4436  1432  2517  160A  118A   	fcall	___fldiv
  4437  1435  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4438                           
  4439                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4440  1438  303B               	movlw	59
  4441  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4442  143A  00BC               	movwf	___fladd@b+3
  4443  143B  305B               	movlw	91
  4444  143C  00BB               	movwf	___fladd@b+2
  4445  143D  30CF               	movlw	207
  4446  143E  00BA               	movwf	___fladd@b+1
  4447  143F  300F               	movlw	15
  4448  1440  00B9               	movwf	___fladd@b
  4449  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4450  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4451  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4452  1444  00C0               	movwf	___fladd@a+3
  4453  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4454  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4455  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4456  1448  00BF               	movwf	___fladd@a+2
  4457  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4458  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4459  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4460  144C  00BE               	movwf	___fladd@a+1
  4461  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4462  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4463  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4464  1450  00BD               	movwf	___fladd@a
  4465  1451  21C8  160A  118A   	fcall	___fladd
  4466  1454  083C               	movf	?___fladd+3,w
  4467  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4468  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4469  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4470  1458  083B               	movf	?___fladd+2,w
  4471  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4472  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4473  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4474  145C  083A               	movf	?___fladd+1,w
  4475  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4476  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4477  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4478  1460  0839               	movf	?___fladd,w
  4479  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4480  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4481                           
  4482                           ;adc.c: 75:     temperatura =1/temperatura;
  4483  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4484  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4485  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4486  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4487  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4488  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4489  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4490  146A  00A0               	movwf	___fldiv@a^(0+128)
  4491  146B  303F               	movlw	63
  4492  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4493  146D  3080               	movlw	128
  4494  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4495  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4496  1470  01A4               	clrf	___fldiv@b^(0+128)
  4497  1471  2517  160A  118A   	fcall	___fldiv
  4498  1474  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4499                           
  4500                           ;adc.c: 76:     temperatura-=273.15;
  4501  1477  3043               	movlw	67
  4502  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4503  1479  00D0               	movwf	___flsub@a+3
  4504  147A  3088               	movlw	136
  4505  147B  00CF               	movwf	___flsub@a+2
  4506  147C  3093               	movlw	147
  4507  147D  00CE               	movwf	___flsub@a+1
  4508  147E  3033               	movlw	51
  4509  147F  00CD               	movwf	___flsub@a
  4510  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4511  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4512  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4513  1483  00D4               	movwf	___flsub@b+3
  4514  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4515  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4516  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4517  1487  00D3               	movwf	___flsub@b+2
  4518  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4519  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4520  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4521  148B  00D2               	movwf	___flsub@b+1
  4522  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4523  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4524  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4525  148F  00D1               	movwf	___flsub@b
  4526  1490  2638               	fcall	___flsub
  4527  1491  0850               	movf	?___flsub+3,w
  4528  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4529  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4530  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4531  1495  084F               	movf	?___flsub+2,w
  4532  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4533  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4534  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4535  1499  084E               	movf	?___flsub+1,w
  4536  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4537  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4538  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4539  149D  084D               	movf	?___flsub,w
  4540  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4541  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4542                           
  4543                           ;adc.c: 78:     return temperatura;
  4544  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4545  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4546  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4547  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4548  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4549  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4550  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4551  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4552  14A8  0008               	return
  4553  14A9                     __end_of_ADC_Read_NTC:	
  4554  14A9                     __ptext64:	
  4555 ;; *************** function ___xxtofl *****************
  4556 ;; Defined at:
  4557 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  sign            1    wreg     unsigned char 
  4560 ;;  val             4   11[BANK0 ] long 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  sign            1   19[BANK0 ] unsigned char 
  4563 ;;  arg             4   21[BANK0 ] unsigned long 
  4564 ;;  exp             1   20[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  4   11[BANK0 ] unsigned char 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 300/0
  4571 ;;		On exit  : 300/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       4       0       0       0
  4575 ;;      Locals:         0       6       0       0       0
  4576 ;;      Temps:          0       4       0       0       0
  4577 ;;      Totals:         0      14       0       0       0
  4578 ;;Total ram usage:       14 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_mediatemperaturaNTC
  4585 ;;		_Auto_Relay1
  4586 ;;		_Load_Work
  4587 ;;		_ADC_Read_NTC
  4588 ;;		_log
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function ___xxtofl
  4594  14A9                     ___xxtofl:	
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4598                           ;___xxtofl@sign stored from wreg
  4599  14A9  00B3               	movwf	___xxtofl@sign
  4600  14AA  0833               	movf	___xxtofl@sign,w
  4601  14AB  1D03               	btfss	3,2
  4602  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4603  14AD  2CBE               	goto	l6620
  4604  14AE  092B               	comf	___xxtofl@val,w
  4605  14AF  00B5               	movwf	___xxtofl@arg
  4606  14B0  092C               	comf	___xxtofl@val+1,w
  4607  14B1  00B6               	movwf	___xxtofl@arg+1
  4608  14B2  092D               	comf	___xxtofl@val+2,w
  4609  14B3  00B7               	movwf	___xxtofl@arg+2
  4610  14B4  092E               	comf	___xxtofl@val+3,w
  4611  14B5  00B8               	movwf	___xxtofl@arg+3
  4612  14B6  0AB5               	incf	___xxtofl@arg,f
  4613  14B7  1903               	skipnz
  4614  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4615  14B9  1903               	skipnz
  4616  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4617  14BB  1903               	skipnz
  4618  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4619  14BD  2CC6               	goto	l1464
  4620  14BE                     l6620:	
  4621  14BE  082E               	movf	___xxtofl@val+3,w
  4622  14BF  00B8               	movwf	___xxtofl@arg+3
  4623  14C0  082D               	movf	___xxtofl@val+2,w
  4624  14C1  00B7               	movwf	___xxtofl@arg+2
  4625  14C2  082C               	movf	___xxtofl@val+1,w
  4626  14C3  00B6               	movwf	___xxtofl@arg+1
  4627  14C4  082B               	movf	___xxtofl@val,w
  4628  14C5  00B5               	movwf	___xxtofl@arg
  4629  14C6                     l1464:	
  4630  14C6  082E               	movf	___xxtofl@val+3,w
  4631  14C7  042D               	iorwf	___xxtofl@val+2,w
  4632  14C8  042C               	iorwf	___xxtofl@val+1,w
  4633  14C9  042B               	iorwf	___xxtofl@val,w
  4634  14CA  1D03               	skipz
  4635  14CB  2CD1               	goto	l6624
  4636  14CC  01AB               	clrf	?___xxtofl
  4637  14CD  01AC               	clrf	?___xxtofl+1
  4638  14CE  01AD               	clrf	?___xxtofl+2
  4639  14CF  01AE               	clrf	?___xxtofl+3
  4640  14D0  0008               	return
  4641  14D1                     l6624:	
  4642  14D1  3096               	movlw	150
  4643  14D2  00B4               	movwf	___xxtofl@exp
  4644  14D3                     l6628:	
  4645  14D3  30FE               	movlw	254
  4646  14D4  0538               	andwf	___xxtofl@arg+3,w
  4647  14D5  1903               	btfsc	3,2
  4648  14D6  2CE7               	goto	l6632
  4649  14D7  0AB4               	incf	___xxtofl@exp,f
  4650  14D8  27C9  160A  118A   	fcall	PL76	;call to abstracted procedure
  4651  14DB  2CD3               	goto	l6628
  4652  14DC                     l6630:	
  4653  14DC  0AB4               	incf	___xxtofl@exp,f
  4654  14DD  0AB5               	incf	___xxtofl@arg,f
  4655  14DE  1903               	skipnz
  4656  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4657  14E0  1903               	skipnz
  4658  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4659  14E2  1903               	skipnz
  4660  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4661  14E4  27C9  160A  118A   	fcall	PL76	;call to abstracted procedure
  4662  14E7                     l6632:	
  4663  14E7  30FF               	movlw	255
  4664  14E8  0538               	andwf	___xxtofl@arg+3,w
  4665  14E9  1903               	btfsc	3,2
  4666  14EA  2CF6               	goto	l6636
  4667  14EB  2CDC               	goto	l6630
  4668  14EC                     l6638:	
  4669  14EC  3002               	movlw	2
  4670  14ED  0234               	subwf	___xxtofl@exp,w
  4671  14EE  1C03               	btfss	3,0
  4672  14EF  2CF8               	goto	l1477
  4673  14F0  03B4               	decf	___xxtofl@exp,f
  4674  14F1  1003               	clrc
  4675  14F2  0DB5               	rlf	___xxtofl@arg,f
  4676  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4677  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4678  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4679  14F6                     l6636:	
  4680  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4681  14F7  2CEC               	goto	l6638
  4682  14F8                     l1477:	
  4683  14F8  1C34               	btfss	___xxtofl@exp,0
  4684  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4685  14FA  1003               	clrc
  4686  14FB  0CB4               	rrf	___xxtofl@exp,f
  4687  14FC  0834               	movf	___xxtofl@exp,w
  4688  14FD  00B2               	movwf	??___xxtofl+3
  4689  14FE  01B1               	clrf	??___xxtofl+2
  4690  14FF  01B0               	clrf	??___xxtofl+1
  4691  1500  01AF               	clrf	??___xxtofl
  4692  1501  082F               	movf	??___xxtofl,w
  4693  1502  04B5               	iorwf	___xxtofl@arg,f
  4694  1503  0830               	movf	??___xxtofl+1,w
  4695  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4696  1505  0831               	movf	??___xxtofl+2,w
  4697  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4698  1507  0832               	movf	??___xxtofl+3,w
  4699  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4700  1509  0833               	movf	___xxtofl@sign,w
  4701  150A  1D03               	btfss	3,2
  4702  150B  1FAE               	btfss	___xxtofl@val+3,7
  4703  150C  2D0E               	goto	l6650
  4704  150D  17B8               	bsf	___xxtofl@arg+3,7
  4705  150E                     l6650:	
  4706  150E  0838               	movf	___xxtofl@arg+3,w
  4707  150F  00AE               	movwf	?___xxtofl+3
  4708  1510  0837               	movf	___xxtofl@arg+2,w
  4709  1511  00AD               	movwf	?___xxtofl+2
  4710  1512  0836               	movf	___xxtofl@arg+1,w
  4711  1513  00AC               	movwf	?___xxtofl+1
  4712  1514  0835               	movf	___xxtofl@arg,w
  4713  1515  00AB               	movwf	?___xxtofl
  4714  1516  0008               	return
  4715  1517                     __end_of___xxtofl:	
  4716  1517                     __ptext41:	
  4717 ;; *************** function ___fldiv *****************
  4718 ;; Defined at:
  4719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  a               4    0[BANK1 ] void 
  4722 ;;  b               4    4[BANK1 ] void 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  grs             4   19[BANK1 ] unsigned long 
  4725 ;;  rem             4   12[BANK1 ] unsigned long 
  4726 ;;  new_exp         2   17[BANK1 ] int 
  4727 ;;  aexp            1   24[BANK1 ] unsigned char 
  4728 ;;  bexp            1   23[BANK1 ] unsigned char 
  4729 ;;  sign            1   16[BANK1 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4    0[BANK1 ] unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, btemp+1
  4734 ;; Tracked objects:
  4735 ;;		On entry : 300/100
  4736 ;;		On exit  : 300/100
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       8       0       0
  4740 ;;      Locals:         0       0      13       0       0
  4741 ;;      Temps:          0       0       4       0       0
  4742 ;;      Totals:         0       0      25       0       0
  4743 ;;Total ram usage:       25 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_mediatemperaturaNTC
  4750 ;;		_Load_Work
  4751 ;;		_ADC_Read_NTC
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function ___fldiv
  4757  1517                     ___fldiv:	
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4761  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4762  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4763  1519  3080               	movlw	128
  4764  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4765  151B  1003               	clrc
  4766  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4767  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4768  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4769  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4770  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4771  1521  1903               	btfsc	3,2
  4772  1522  2D2C               	goto	l1380
  4773  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4774  1524  2D29               	goto	l1381
  4775  1525  01A4               	clrf	___fldiv@b^(0+128)
  4776  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4777  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4778  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4779  1529                     l1381:	
  4780  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4781  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4782  152B  2D30               	goto	l6986
  4783  152C                     l1380:	
  4784  152C  01A4               	clrf	___fldiv@b^(0+128)
  4785  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4786  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4787  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4788  1530                     l6986:	
  4789  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4790  1531  3980               	andlw	128
  4791  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4792  1533  1003               	clrc
  4793  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4794  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4795  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4796  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4797  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4798  1539  1903               	btfsc	3,2
  4799  153A  2D44               	goto	l1384
  4800  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4801  153C  2D41               	goto	l1385
  4802  153D  01A0               	clrf	___fldiv@a^(0+128)
  4803  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4804  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4805  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4806  1541                     l1385:	
  4807  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4808  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4809  1543  2D48               	goto	l7000
  4810  1544                     l1384:	
  4811  1544  01A0               	clrf	___fldiv@a^(0+128)
  4812  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4813  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4814  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4815  1548                     l7000:	
  4816  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4817  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4818  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4819  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4820  154C  1D03               	skipz
  4821  154D  2D61               	goto	l7012
  4822  154E  3080               	movlw	128
  4823  154F  01A4               	clrf	___fldiv@b^(0+128)
  4824  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4825  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4826  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4827  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4828  1554  307F               	movlw	127
  4829  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4830  1556                     L17:	
  4831  1556  0830               	movf	___fldiv@sign^(0+128),w
  4832  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4833  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4834  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4835  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4836  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4837  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4838  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4839  155E  0824               	movf	___fldiv@b^(0+128),w
  4840  155F  00A0               	movwf	?___fldiv^(0+128)
  4841  1560  0008               	return
  4842  1561                     l7012:	
  4843  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4844  1562  1D03               	btfss	3,2
  4845  1563  2D69               	goto	l7020
  4846  1564  01A0               	clrf	?___fldiv^(0+128)
  4847  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4848  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4849  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4850  1568  0008               	return
  4851  1569                     l7020:	
  4852  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4853  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4854  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4855  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4856  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4857  156E  1C03               	skipc
  4858  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4859  1570  307F               	movlw	127
  4860  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4861  1572  1803               	skipnc
  4862  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4863  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4864  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4865  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4866  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4867  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4868  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4869  157A  0824               	movf	___fldiv@b^(0+128),w
  4870  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4871  157C  01A4               	clrf	___fldiv@b^(0+128)
  4872  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4873  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4874  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4875  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4876  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4877  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4878  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4879  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4880  1585                     l7046:	
  4881  1585  301A               	movlw	26
  4882  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4883  1587  1803               	btfsc	3,0
  4884  1588  2DBE               	goto	l7048
  4885  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4886  158A  1903               	btfsc	3,2
  4887  158B  2D9D               	goto	l7038
  4888  158C  1003               	clrc
  4889  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4890  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4891  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4892  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4893  1591  1003               	clrc
  4894  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4895  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4896  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4897  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4898  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4899  1597  1424               	bsf	___fldiv@b^(0+128),0
  4900  1598  1003               	clrc
  4901  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4902  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4903  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4904  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4905  159D                     l7038:	
  4906  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4907  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4908  159F  1D03               	skipz
  4909  15A0  2DAB               	goto	u6695
  4910  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4911  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4912  15A3  1D03               	skipz
  4913  15A4  2DAB               	goto	u6695
  4914  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4915  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4916  15A7  1D03               	skipz
  4917  15A8  2DAB               	goto	u6695
  4918  15A9  0820               	movf	___fldiv@a^(0+128),w
  4919  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4920  15AB                     u6695:	
  4921  15AB  1C03               	skipc
  4922  15AC  2DBC               	goto	l7044
  4923  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4924  15AE  0820               	movf	___fldiv@a^(0+128),w
  4925  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4926  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4927  15B1  1C03               	skipc
  4928  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4929  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4930  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4931  15B5  1C03               	skipc
  4932  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4933  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4934  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4935  15B9  1C03               	skipc
  4936  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4937  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4938  15BC                     l7044:	
  4939  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4940  15BD  2D85               	goto	l7046
  4941  15BE                     l7048:	
  4942  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4943  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4944  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4945  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4946  15C2  1D03               	btfss	3,2
  4947  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4948  15C4                     l7062:	
  4949  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4950  15C5  2DD7               	goto	l7064
  4951  15C6  1003               	clrc
  4952  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4953  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4954  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4955  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4956  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4957  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4958  15CD  30FF               	movlw	-1
  4959  15CE  1003               	clrc
  4960  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4961  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4962  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4963  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4964  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4965  15D4  1C03               	skipc
  4966  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4967  15D6  2DC4               	goto	l7062
  4968  15D7                     l7064:	
  4969  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4970  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4971  15D9  2DED               	goto	l7074
  4972  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4973  15DB  00A8               	movwf	??___fldiv^(0+128)
  4974  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4975  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4976  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4977  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4978  15E0  307F               	movlw	127
  4979  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4980  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4981  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4982  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4983  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4984  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4985  15E7  1903               	skipnz
  4986  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4987  15E9  2DEB               	goto	l7070
  4988  15EA  2DED               	goto	l7074
  4989  15EB                     l7070:	
  4990  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4991  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4992  15ED                     l7074:	
  4993  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4994  15EE  1903               	btfsc	3,2
  4995  15EF  2E01               	goto	l7084
  4996  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4997  15F1  1903               	skipnz
  4998  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4999  15F3  1903               	skipnz
  5000  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  5001  15F5  1903               	skipnz
  5002  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  5003  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  5004  15F8  2E01               	goto	l7084
  5005  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  5006  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  5007  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  5008  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  5009  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  5010  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  5011  15FF  1903               	skipnz
  5012  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  5013  1601                     l7084:	
  5014  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  5015  1602  3A80               	xorlw	128
  5016  1603  00FF               	movwf	127
  5017  1604  3080               	movlw	128
  5018  1605  027F               	subwf	127,w
  5019  1606  1D03               	skipz
  5020  1607  2E0A               	goto	u6795
  5021  1608  30FF               	movlw	255
  5022  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  5023  160A                     u6795:	
  5024  160A  1C03               	skipc
  5025  160B  2E15               	goto	l7090
  5026  160C  30FF               	movlw	255
  5027  160D  1683               	bsf	3,5	;RP0=1, select bank1
  5028  160E  1303               	bcf	3,6	;RP1=0, select bank1
  5029  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  5030  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  5031  1611  01A4               	clrf	___fldiv@b^(0+128)
  5032  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  5033  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  5034  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  5035  1615                     l7090:	
  5036  1615  1683               	bsf	3,5	;RP0=1, select bank1
  5037  1616  1303               	bcf	3,6	;RP1=0, select bank1
  5038  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  5039  1618  3A80               	xorlw	128
  5040  1619  00FF               	movwf	127
  5041  161A  3080               	movlw	128
  5042  161B  027F               	subwf	127,w
  5043  161C  1D03               	skipz
  5044  161D  2E20               	goto	u6805
  5045  161E  3001               	movlw	1
  5046  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  5047  1620                     u6805:	
  5048  1620  1803               	skipnc
  5049  1621  2E2B               	goto	l7096
  5050  1622  1683               	bsf	3,5	;RP0=1, select bank1
  5051  1623  1303               	bcf	3,6	;RP1=0, select bank1
  5052  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  5053  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  5054  1626  01A4               	clrf	___fldiv@b^(0+128)
  5055  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  5056  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  5057  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  5058  162A  01B0               	clrf	___fldiv@sign^(0+128)
  5059  162B                     l7096:	
  5060  162B  1683               	bsf	3,5	;RP0=1, select bank1
  5061  162C  1303               	bcf	3,6	;RP1=0, select bank1
  5062  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  5063  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  5064  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  5065  1630  2E33               	goto	l1409
  5066  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  5067  1632  2E34               	goto	l7102
  5068  1633                     l1409:	
  5069  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  5070  1634                     l7102:	
  5071  1634  1003               	clrc
  5072  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  5073  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  5074  1637  2D56               	goto	L17
  5075  1638                     __end_of___fldiv:	
  5076  1638                     __ptext68:	
  5077 ;; *************** function ___flsub *****************
  5078 ;; Defined at:
  5079 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  a               4   45[BANK0 ] void 
  5082 ;;  b               4   49[BANK0 ] void 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4   45[BANK0 ] void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 300/0
  5091 ;;		On exit  : 300/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5094 ;;      Params:         0       8       0       0       0
  5095 ;;      Locals:         0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0
  5097 ;;      Totals:         0       8       0       0       0
  5098 ;;Total ram usage:        8 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    2
  5101 ;; This function calls:
  5102 ;;		___fladd
  5103 ;; This function is called by:
  5104 ;;		_Auto_Relay0
  5105 ;;		_Auto_Relay1
  5106 ;;		_ADC_Read_NTC
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function ___flsub
  5112  1638                     ___flsub:	
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5116  1638  3080               	movlw	128
  5117  1639  06D0               	xorwf	___flsub@a+3,f
  5118  163A  0854               	movf	___flsub@b+3,w
  5119  163B  00BC               	movwf	___fladd@b+3
  5120  163C  0853               	movf	___flsub@b+2,w
  5121  163D  00BB               	movwf	___fladd@b+2
  5122  163E  0852               	movf	___flsub@b+1,w
  5123  163F  00BA               	movwf	___fladd@b+1
  5124  1640  0851               	movf	___flsub@b,w
  5125  1641  00B9               	movwf	___fladd@b
  5126  1642  0850               	movf	___flsub@a+3,w
  5127  1643  00C0               	movwf	___fladd@a+3
  5128  1644  084F               	movf	___flsub@a+2,w
  5129  1645  00BF               	movwf	___fladd@a+2
  5130  1646  084E               	movf	___flsub@a+1,w
  5131  1647  00BE               	movwf	___fladd@a+1
  5132  1648  084D               	movf	___flsub@a,w
  5133  1649  00BD               	movwf	___fladd@a
  5134  164A  21C8               	fcall	___fladd
  5135  164B  083C               	movf	?___fladd+3,w
  5136  164C  00D0               	movwf	?___flsub+3
  5137  164D  083B               	movf	?___fladd+2,w
  5138  164E  00CF               	movwf	?___flsub+2
  5139  164F  083A               	movf	?___fladd+1,w
  5140  1650  00CE               	movwf	?___flsub+1
  5141  1651  0839               	movf	?___fladd,w
  5142  1652  00CD               	movwf	?___flsub
  5143  1653  0008               	return
  5144  1654                     __end_of___flsub:	
  5145  1654                     __ptext35:	
  5146 ;; *************** function ___lwdiv *****************
  5147 ;; Defined at:
  5148 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  divisor         2    0[BANK0 ] unsigned int 
  5151 ;;  dividend        2    2[BANK0 ] unsigned int 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  quotient        2    5[BANK0 ] unsigned int 
  5154 ;;  counter         1    4[BANK0 ] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    0[BANK0 ] unsigned int 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 300/0
  5161 ;;		On exit  : 300/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         0       4       0       0       0
  5165 ;;      Locals:         0       3       0       0       0
  5166 ;;      Temps:          0       0       0       0       0
  5167 ;;      Totals:         0       7       0       0       0
  5168 ;;Total ram usage:        7 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_ADC_Read_NTC
  5175 ;;		_PROCULUS_Buzzer
  5176 ;;		_utoa
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function ___lwdiv
  5182  1654                     ___lwdiv:	
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5186  1654  01A5               	clrf	___lwdiv@quotient
  5187  1655  01A6               	clrf	___lwdiv@quotient+1
  5188  1656  0820               	movf	___lwdiv@divisor,w
  5189  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5190  1658  1903               	btfsc	3,2
  5191  1659  2E79               	goto	l6590
  5192  165A  01A4               	clrf	___lwdiv@counter
  5193  165B                     L15:	
  5194  165B  0AA4               	incf	___lwdiv@counter,f
  5195  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5196  165D  2E62               	goto	l6578
  5197  165E  1003               	clrc
  5198  165F  0DA0               	rlf	___lwdiv@divisor,f
  5199  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5200  1661  2E5B               	goto	L15
  5201  1662                     l6578:	
  5202  1662  1003               	clrc
  5203  1663  0DA5               	rlf	___lwdiv@quotient,f
  5204  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5205  1665  0821               	movf	___lwdiv@divisor+1,w
  5206  1666  0223               	subwf	___lwdiv@dividend+1,w
  5207  1667  1D03               	skipz
  5208  1668  2E6B               	goto	u6125
  5209  1669  0820               	movf	___lwdiv@divisor,w
  5210  166A  0222               	subwf	___lwdiv@dividend,w
  5211  166B                     u6125:	
  5212  166B  1C03               	skipc
  5213  166C  2E75               	goto	L16
  5214  166D  0820               	movf	___lwdiv@divisor,w
  5215  166E  02A2               	subwf	___lwdiv@dividend,f
  5216  166F  0821               	movf	___lwdiv@divisor+1,w
  5217  1670  1C03               	skipc
  5218  1671  03A3               	decf	___lwdiv@dividend+1,f
  5219  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5220  1673  1425               	bsf	___lwdiv@quotient,0
  5221  1674  1003               	clrc
  5222  1675                     L16:	
  5223  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5224  1676  0CA0               	rrf	___lwdiv@divisor,f
  5225  1677  0BA4               	decfsz	___lwdiv@counter,f
  5226  1678  2E62               	goto	l6578
  5227  1679                     l6590:	
  5228  1679  0826               	movf	___lwdiv@quotient+1,w
  5229  167A  00A1               	movwf	?___lwdiv+1
  5230  167B  0825               	movf	___lwdiv@quotient,w
  5231  167C  00A0               	movwf	?___lwdiv
  5232  167D  0008               	return
  5233  167E                     __end_of___lwdiv:	
  5234  167E                     __ptext10:	
  5235 ;; *************** function _captura *****************
  5236 ;; Defined at:
  5237 ;;		line 123 in file "adc.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  2    0[BANK0 ] unsigned int 
  5244 ;; Registers used:
  5245 ;;		wreg
  5246 ;; Tracked objects:
  5247 ;;		On entry : 300/100
  5248 ;;		On exit  : 300/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       2       0       0       0
  5252 ;;      Locals:         0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0
  5254 ;;      Totals:         0       2       0       0       0
  5255 ;;Total ram usage:        2 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_ADC_Read_NTC
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _captura
  5267  167E                     _captura:	
  5268                           
  5269                           ;adc.c: 124:     ADCON0bits.GO=1;
  5270                           
  5271                           ;incstack = 0
  5272                           ; Regs used in _captura: [wreg]
  5273  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5274  167F  149F               	bsf	31,1	;volatile
  5275  1680                     l581:	
  5276                           ;adc.c: 128:           }
  5277                           
  5278                           
  5279                           ;adc.c: 125:     while(ADCON0bits.GO)
  5280  1680  189F               	btfsc	31,1	;volatile
  5281  1681  2E80               	goto	l581
  5282                           
  5283                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5284  1682  081E               	movf	30,w	;volatile
  5285  1683  00A1               	movwf	?_captura+1
  5286  1684  01A0               	clrf	?_captura
  5287  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5288  1686  081E               	movf	30,w	;volatile
  5289  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5290  1688  07A0               	addwf	?_captura,f
  5291  1689  1803               	skipnc
  5292  168A  0AA1               	incf	?_captura+1,f
  5293  168B  0008               	return
  5294  168C                     __end_of_captura:	
  5295  168C                     __ptext6:	
  5296 ;; *************** function _log *****************
  5297 ;; Defined at:
  5298 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  x               4   16[BANK1 ] float 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  exponent        2   78[BANK0 ] int 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  4   16[BANK1 ] int 
  5305 ;; Registers used:
  5306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 300/100
  5309 ;;		On exit  : 300/100
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5312 ;;      Params:         0       0       4       0       0
  5313 ;;      Locals:         0       2       0       0       0
  5314 ;;      Temps:          0       0       0       0       0
  5315 ;;      Totals:         0       2       4       0       0
  5316 ;;Total ram usage:        6 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    4
  5319 ;; This function calls:
  5320 ;;		___fladd
  5321 ;;		___fleq
  5322 ;;		___flge
  5323 ;;		___flmul
  5324 ;;		___xxtofl
  5325 ;;		_eval_poly
  5326 ;;		_frexp
  5327 ;; This function is called by:
  5328 ;;		_ADC_Read_NTC
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _log
  5334  168C                     _log:	
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5338  168C  0833               	movf	(log@x+3)^(0+128),w
  5339  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5340  168E  00D8               	movwf	___flge@ff1+3
  5341  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5342  1690  0832               	movf	(log@x+2)^(0+128),w
  5343  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5344  1692  00D7               	movwf	___flge@ff1+2
  5345  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5346  1694  0831               	movf	(log@x+1)^(0+128),w
  5347  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5348  1696  00D6               	movwf	___flge@ff1+1
  5349  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5350  1698  0830               	movf	log@x^(0+128),w
  5351  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5352  169A  00D5               	movwf	___flge@ff1
  5353  169B  01D9               	clrf	___flge@ff2
  5354  169C  01DA               	clrf	___flge@ff2+1
  5355  169D  01DB               	clrf	___flge@ff2+2
  5356  169E  01DC               	clrf	___flge@ff2+3
  5357  169F  120A  118A  24FB  160A  118A  	fcall	___flge
  5358  16A4  1803               	btfsc	3,0
  5359  16A5  2EA7               	goto	l6866
  5360  16A6  2FC3               	ljmp	PL58	;call to abstracted procedure
  5361  16A7                     l6866:	
  5362  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5363  16A8  0833               	movf	(log@x+3)^(0+128),w
  5364  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5365  16AA  00A3               	movwf	___fleq@ff1+3
  5366  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5367  16AC  0832               	movf	(log@x+2)^(0+128),w
  5368  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5369  16AE  00A2               	movwf	___fleq@ff1+2
  5370  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5371  16B0  0831               	movf	(log@x+1)^(0+128),w
  5372  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5373  16B2  00A1               	movwf	___fleq@ff1+1
  5374  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5375  16B4  0830               	movf	log@x^(0+128),w
  5376  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5377  16B6  160A  158A  271A  160A  118A  	fcall	PL64	;call to abstracted procedure
  5378  16BB  160A  158A  26E4  160A  118A  	fcall	___fleq
  5379  16C0  1C03               	btfss	3,0
  5380  16C1  2EC3               	goto	l6870
  5381  16C2  2FC3               	ljmp	PL58	;call to abstracted procedure
  5382  16C3                     l6870:	
  5383  16C3  30BF               	movlw	191
  5384  16C4  00BC               	movwf	___fladd@b+3
  5385  16C5  3080               	movlw	128
  5386  16C6  00BB               	movwf	___fladd@b+2
  5387  16C7  3040               	movlw	64
  5388  16C8  01BA               	clrf	___fladd@b+1
  5389  16C9  01B9               	clrf	___fladd@b
  5390  16CA  00D8               	movwf	___flmul@b+3
  5391  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5392  16CC  01D7               	clrf	___flmul@b+2
  5393  16CD  01D6               	clrf	___flmul@b+1
  5394  16CE  01D5               	clrf	___flmul@b
  5395  16CF  00B0               	movwf	frexp@eptr
  5396  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5397  16D1  0833               	movf	(log@x+3)^(0+128),w
  5398  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5399  16D3  00AF               	movwf	frexp@value+3
  5400  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5401  16D5  0832               	movf	(log@x+2)^(0+128),w
  5402  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5403  16D7  00AE               	movwf	frexp@value+2
  5404  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5405  16D9  0831               	movf	(log@x+1)^(0+128),w
  5406  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5407  16DB  00AD               	movwf	frexp@value+1
  5408  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5409  16DD  0830               	movf	log@x^(0+128),w
  5410  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5411  16DF  00AC               	movwf	frexp@value
  5412  16E0  160A  158A  269D  160A  118A  	fcall	_frexp
  5413  16E5  082F               	movf	?_frexp+3,w
  5414  16E6  00DC               	movwf	___flmul@a+3
  5415  16E7  082E               	movf	?_frexp+2,w
  5416  16E8  00DB               	movwf	___flmul@a+2
  5417  16E9  082D               	movf	?_frexp+1,w
  5418  16EA  00DA               	movwf	___flmul@a+1
  5419  16EB  082C               	movf	?_frexp,w
  5420  16EC  00D9               	movwf	___flmul@a
  5421  16ED  120A  158A  23DC  160A  118A  	fcall	___flmul
  5422  16F2  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  5423  16F5  21C8  160A  118A   	fcall	___fladd
  5424  16F8  083C               	movf	?___fladd+3,w
  5425  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5426  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5427  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5428  16FC  083B               	movf	?___fladd+2,w
  5429  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5430  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5431  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5432  1700  083A               	movf	?___fladd+1,w
  5433  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5434  1702  00B1               	movwf	(log@x+1)^(0+128)
  5435  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5436  1704  0839               	movf	?___fladd,w
  5437  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5438  1706  00B0               	movwf	log@x^(0+128)
  5439  1707  30FF               	movlw	-1
  5440  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5441  1709  07EE               	addwf	log@exponent,f
  5442  170A  1C03               	skipc
  5443  170B  03EF               	decf	log@exponent+1,f
  5444  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5445  170D  0833               	movf	(log@x+3)^(0+128),w
  5446  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5447  170F  0832               	movf	(log@x+2)^(0+128),w
  5448  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5449  1711  0831               	movf	(log@x+1)^(0+128),w
  5450  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5451  1713  0830               	movf	log@x^(0+128),w
  5452  1714  00A0               	movwf	eval_poly@x^(0+128)
  5453  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5454  1716  00A4               	movwf	eval_poly@d^(0+128)
  5455  1717  3008               	movlw	8
  5456  1718  00A5               	movwf	eval_poly@n^(0+128)
  5457  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5458  171A  211E  160A  118A   	fcall	_eval_poly
  5459  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5460  171E  00B3               	movwf	(log@x+3)^(0+128)
  5461  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5462  1720  00B2               	movwf	(log@x+2)^(0+128)
  5463  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5464  1722  00B1               	movwf	(log@x+1)^(0+128)
  5465  1723  0820               	movf	?_eval_poly^(0+128),w
  5466  1724  00B0               	movwf	log@x^(0+128)
  5467  1725  0833               	movf	(log@x+3)^(0+128),w
  5468  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5469  1727  00BC               	movwf	___fladd@b+3
  5470  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5471  1729  0832               	movf	(log@x+2)^(0+128),w
  5472  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5473  172B  00BB               	movwf	___fladd@b+2
  5474  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5475  172D  0831               	movf	(log@x+1)^(0+128),w
  5476  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5477  172F  00BA               	movwf	___fladd@b+1
  5478  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5479  1731  0830               	movf	log@x^(0+128),w
  5480  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5481  1733  00B9               	movwf	___fladd@b
  5482  1734  303F               	movlw	63
  5483  1735  00D8               	movwf	___flmul@b+3
  5484  1736  3031               	movlw	49
  5485  1737  00D7               	movwf	___flmul@b+2
  5486  1738  3072               	movlw	114
  5487  1739  00D6               	movwf	___flmul@b+1
  5488  173A  3018               	movlw	24
  5489  173B  00D5               	movwf	___flmul@b
  5490  173C  086E               	movf	log@exponent,w
  5491  173D  00AB               	movwf	___xxtofl@val
  5492  173E  086F               	movf	log@exponent+1,w
  5493  173F  27BC  160A  118A   	fcall	PL52	;call to abstracted procedure
  5494  1742  24A9  160A  118A   	fcall	___xxtofl
  5495  1745  27AA               	fcall	PL42	;call to abstracted procedure
  5496  1746  120A  158A  23DC  160A  118A  	fcall	___flmul
  5497  174B  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  5498  174E  21C8               	fcall	___fladd
  5499  174F  083C               	movf	?___fladd+3,w
  5500  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5501  1751  00B3               	movwf	(?_log+3)^(0+128)
  5502  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5503  1753  083B               	movf	?___fladd+2,w
  5504  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5505  1755  00B2               	movwf	(?_log+2)^(0+128)
  5506  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5507  1757  083A               	movf	?___fladd+1,w
  5508  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5509  1759  00B1               	movwf	(?_log+1)^(0+128)
  5510  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5511  175B  0839               	movf	?___fladd,w
  5512  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5513  175D  00B0               	movwf	?_log^(0+128)
  5514  175E  0008               	return
  5515  175F                     __end_of_log:	
  5516  175F                     __ptext4:	
  5517 ;; *************** function _Package_Usart_is_for_me *****************
  5518 ;; Defined at:
  5519 ;;		line 8 in file "protocolo.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  retorno         1    0[BANK0 ] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      unsigned char 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 300/100
  5530 ;;		On exit  : 300/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5533 ;;      Params:         0       0       0       0       0
  5534 ;;      Locals:         0       1       0       0       0
  5535 ;;      Temps:          0       0       0       0       0
  5536 ;;      Totals:         0       1       0       0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    1
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_mediatemperaturaNTC
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           
  5548                           ;psect for function _Package_Usart_is_for_me
  5549  175F                     _Package_Usart_is_for_me:	
  5550                           
  5551                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5555  175F  1703               	bsf	3,6	;RP1=1, select bank3
  5556  1760  1C3C               	btfss	_generic_status^(0+384),0
  5557  1761  2F70               	goto	l7540
  5558                           
  5559                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5560  1762  1283               	bcf	3,5	;RP0=0, select bank2
  5561  1763  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5562  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5563  1765  0634               	xorwf	_Board_Number^(0+384),w
  5564  1766  1903               	skipnz
  5565  1767  2F6B               	goto	l869
  5566  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5567  1769  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5568  176A  2F70               	goto	l7540
  5569  176B                     l869:	
  5570                           
  5571                           ;protocolo.c: 13:             retorno=1;
  5572  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5573  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5574  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5575  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5576  176F  2F73               	goto	l7544
  5577  1770                     l7540:	
  5578                           
  5579                           ;protocolo.c: 15:             retorno=0;
  5580  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5581  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5582  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5583  1773                     l7544:	
  5584                           
  5585                           ;protocolo.c: 21:      return retorno;
  5586  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5587  1774  0008               	return
  5588  1775                     __end_of_Package_Usart_is_for_me:	
  5589  1775                     PL18:	
  5590  1775  082E               	movf	?___xxtofl+3,w
  5591  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5592  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5593  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5594  1779  082D               	movf	?___xxtofl+2,w
  5595  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5596  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5597  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5598  177D  082C               	movf	?___xxtofl+1,w
  5599  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5600  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5601  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5602  1781  082B               	movf	?___xxtofl,w
  5603  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5604  1783  00A0               	movwf	___fldiv@a^(0+128)
  5605  1784  0008               	return
  5606  1785                     __end_ofPL18:	
  5607  1785                     PL20:	
  5608  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5609  1786  00AB               	movwf	___xxtofl@val
  5610  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5611  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5612  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5613  178A  00AC               	movwf	___xxtofl@val+1
  5614  178B  3000               	movlw	0
  5615  178C  01AD               	clrf	___xxtofl@val+2
  5616  178D  01AE               	clrf	___xxtofl@val+3
  5617  178E  0008               	return
  5618  178F                     __end_ofPL20:	
  5619  178F                     PL24:	
  5620  178F  082E               	movf	?___xxtofl+3,w
  5621  1790  00D0               	movwf	___flsub@a+3
  5622  1791  082D               	movf	?___xxtofl+2,w
  5623  1792  00CF               	movwf	___flsub@a+2
  5624  1793  082C               	movf	?___xxtofl+1,w
  5625  1794  00CE               	movwf	___flsub@a+1
  5626  1795  082B               	movf	?___xxtofl,w
  5627  1796  00CD               	movwf	___flsub@a
  5628  1797  0008               	return
  5629  1798                     __end_ofPL24:	
  5630  1798                     PL26:	
  5631  1798  0823               	movf	(?___fldiv+3)^(0+128),w
  5632  1799  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5633  179A  0822               	movf	(?___fldiv+2)^(0+128),w
  5634  179B  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5635  179C  0821               	movf	(?___fldiv+1)^(0+128),w
  5636  179D  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5637  179E  0820               	movf	?___fldiv^(0+128),w
  5638  179F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5639  17A0  0008               	return
  5640  17A1                     __end_ofPL26:	
  5641  17A1                     PL28:	
  5642  17A1  0858               	movf	?___flmul+3,w
  5643  17A2  00C0               	movwf	___fladd@a+3
  5644  17A3  0857               	movf	?___flmul+2,w
  5645  17A4  00BF               	movwf	___fladd@a+2
  5646  17A5  0856               	movf	?___flmul+1,w
  5647  17A6  00BE               	movwf	___fladd@a+1
  5648  17A7  0855               	movf	?___flmul,w
  5649  17A8  00BD               	movwf	___fladd@a
  5650  17A9  0008               	return
  5651  17AA                     __end_ofPL28:	
  5652  17AA                     PL42:	
  5653  17AA  082E               	movf	?___xxtofl+3,w
  5654  17AB  00DC               	movwf	___flmul@a+3
  5655  17AC  082D               	movf	?___xxtofl+2,w
  5656  17AD  00DB               	movwf	___flmul@a+2
  5657  17AE  082C               	movf	?___xxtofl+1,w
  5658  17AF  00DA               	movwf	___flmul@a+1
  5659  17B0  082B               	movf	?___xxtofl,w
  5660  17B1  00D9               	movwf	___flmul@a
  5661  17B2  0008               	return
  5662  17B3                     __end_ofPL42:	
  5663  17B3                     PL44:	
  5664  17B3  1839               	btfsc	___fladd@b,0
  5665  17B4  17CC               	bsf	___fladd@grs,7
  5666  17B5  0D3C               	rlf	___fladd@b+3,w
  5667  17B6  0CBC               	rrf	___fladd@b+3,f
  5668  17B7  0CBB               	rrf	___fladd@b+2,f
  5669  17B8  0CBA               	rrf	___fladd@b+1,f
  5670  17B9  0CB9               	rrf	___fladd@b,f
  5671  17BA  0ACB               	incf	___fladd@bexp,f
  5672  17BB  0008               	return
  5673  17BC                     __end_ofPL44:	
  5674  17BC                     PL52:	
  5675  17BC  00AC               	movwf	___xxtofl@val+1
  5676  17BD  3000               	movlw	0
  5677  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5678  17BF  30FF               	movlw	255
  5679  17C0  00AD               	movwf	___xxtofl@val+2
  5680  17C1  00AE               	movwf	___xxtofl@val+3
  5681  17C2  3401               	retlw	1
  5682  17C3                     __end_ofPL52:	
  5683  17C3                     PL58:	
  5684  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5685  17C4  01B0               	clrf	?_log^(0+128)
  5686  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5687  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5688  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5689  17C8  0008               	return
  5690  17C9                     __end_ofPL58:	
  5691  17C9                     PL76:	
  5692  17C9  1003               	clrc
  5693  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5694  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5695  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5696  17CD  0CB5               	rrf	___xxtofl@arg,f
  5697  17CE  0008               	return
  5698  17CF                     __end_ofPL76:	
  5699  17CF                     PL78:	
  5700  17CF  01B9               	clrf	?___fladd
  5701  17D0  01BA               	clrf	?___fladd+1
  5702  17D1  01BB               	clrf	?___fladd+2
  5703  17D2  01BC               	clrf	?___fladd+3
  5704  17D3  0008               	return
  5705  17D4                     __end_ofPL78:	
  5706  17D4                     __ptext3:	
  5707 ;; *************** function _my_delay_ms *****************
  5708 ;; Defined at:
  5709 ;;		line 5 in file "my_delay.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  time            4    0[BANK0 ] long 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  i               4    6[BANK0 ] long 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0, btemp+1
  5718 ;; Tracked objects:
  5719 ;;		On entry : 300/0
  5720 ;;		On exit  : 300/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5723 ;;      Params:         0       4       0       0       0
  5724 ;;      Locals:         0       4       0       0       0
  5725 ;;      Temps:          0       2       0       0       0
  5726 ;;      Totals:         0      10       0       0       0
  5727 ;;Total ram usage:       10 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_mediatemperaturaNTC
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _my_delay_ms
  5739  17D4                     _my_delay_ms:	
  5740                           
  5741                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5745  17D4  01A6               	clrf	my_delay_ms@i
  5746  17D5  01A7               	clrf	my_delay_ms@i+1
  5747  17D6  01A8               	clrf	my_delay_ms@i+2
  5748  17D7  01A9               	clrf	my_delay_ms@i+3
  5749  17D8                     l7490:	
  5750  17D8  0829               	movf	my_delay_ms@i+3,w
  5751  17D9  3A80               	xorlw	128
  5752  17DA  00FF               	movwf	127
  5753  17DB  0823               	movf	my_delay_ms@time+3,w
  5754  17DC  3A80               	xorlw	128
  5755  17DD  027F               	subwf	127,w
  5756  17DE  1D03               	skipz
  5757  17DF  2FEA               	goto	u7083
  5758  17E0  0822               	movf	my_delay_ms@time+2,w
  5759  17E1  0228               	subwf	my_delay_ms@i+2,w
  5760  17E2  1D03               	skipz
  5761  17E3  2FEA               	goto	u7083
  5762  17E4  0821               	movf	my_delay_ms@time+1,w
  5763  17E5  0227               	subwf	my_delay_ms@i+1,w
  5764  17E6  1D03               	skipz
  5765  17E7  2FEA               	goto	u7083
  5766  17E8  0820               	movf	my_delay_ms@time,w
  5767  17E9  0226               	subwf	my_delay_ms@i,w
  5768  17EA                     u7083:	
  5769  17EA  1803               	btfsc	3,0
  5770  17EB  0008               	return
  5771                           
  5772                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5773  17EC  3003               	movlw	3
  5774  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5775  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5776  17EF  00A5               	movwf	??_my_delay_ms+1
  5777  17F0  3097               	movlw	151
  5778  17F1  00A4               	movwf	??_my_delay_ms
  5779  17F2                     u7667:	
  5780  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5781  17F3  2FF2               	goto	u7667
  5782  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5783  17F5  2FF2               	goto	u7667
  5784                           
  5785                           ;my_delay.c: 10:             }
  5786  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5787  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5788  17F8  0AA6               	incf	my_delay_ms@i,f
  5789  17F9  1903               	skipnz
  5790  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5791  17FB  1903               	skipnz
  5792  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5793  17FD  1903               	skipnz
  5794  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5795  17FF  2FD8               	goto	l7490
  5796  1800                     __end_of_my_delay_ms:	
  5797                           
  5798                           	psect	text7
  5799  1E9D                     __ptext7:	
  5800 ;; *************** function _frexp *****************
  5801 ;; Defined at:
  5802 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  value           4   12[BANK0 ] int 
  5805 ;;  eptr            1   16[BANK0 ] PTR int 
  5806 ;;		 -> log@exponent(2), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  4   12[BANK0 ] PTR int 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 300/0
  5815 ;;		On exit  : B00/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5818 ;;      Params:         0       5       0       0       0
  5819 ;;      Locals:         0       0       0       0       0
  5820 ;;      Temps:          0       2       0       0       0
  5821 ;;      Totals:         0       7       0       0       0
  5822 ;;Total ram usage:        7 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    2
  5825 ;; This function calls:
  5826 ;;		___fleq
  5827 ;; This function is called by:
  5828 ;;		_log
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _frexp
  5834  1E9D                     _frexp:	
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5838  1E9D  082F               	movf	frexp@value+3,w
  5839  1E9E  00A3               	movwf	___fleq@ff1+3
  5840  1E9F  082E               	movf	frexp@value+2,w
  5841  1EA0  00A2               	movwf	___fleq@ff1+2
  5842  1EA1  082D               	movf	frexp@value+1,w
  5843  1EA2  00A1               	movwf	___fleq@ff1+1
  5844  1EA3  082C               	movf	frexp@value,w
  5845  1EA4  271A  160A  158A   	fcall	PL64	;call to abstracted procedure
  5846  1EA7  26E4  160A  158A   	fcall	___fleq
  5847  1EAA  1C03               	btfss	3,0
  5848  1EAB  2EB7               	goto	l6662
  5849  1EAC  0830               	movf	frexp@eptr,w
  5850  1EAD  0084               	movwf	4
  5851  1EAE  1383               	bcf	3,7	;select IRP bank0
  5852  1EAF  0180               	clrf	0
  5853  1EB0  0A84               	incf	4,f
  5854  1EB1  0180               	clrf	0
  5855  1EB2  01AC               	clrf	?_frexp
  5856  1EB3  01AD               	clrf	?_frexp+1
  5857  1EB4  01AE               	clrf	?_frexp+2
  5858  1EB5  01AF               	clrf	?_frexp+3
  5859  1EB6  0008               	return
  5860  1EB7                     l6662:	
  5861  1EB7  082F               	movf	frexp@value+3,w
  5862  1EB8  397F               	andlw	127
  5863  1EB9  00B1               	movwf	??_frexp
  5864  1EBA  01B2               	clrf	??_frexp+1
  5865  1EBB  1003               	clrc
  5866  1EBC  0DB1               	rlf	??_frexp,f
  5867  1EBD  0DB2               	rlf	??_frexp+1,f
  5868  1EBE  0830               	movf	frexp@eptr,w
  5869  1EBF  0084               	movwf	4
  5870  1EC0  0831               	movf	??_frexp,w
  5871  1EC1  1383               	bcf	3,7	;select IRP bank0
  5872  1EC2  0080               	movwf	0
  5873  1EC3  0A84               	incf	4,f
  5874  1EC4  0832               	movf	??_frexp+1,w
  5875  1EC5  0080               	movwf	0
  5876  1EC6  0D2E               	rlf	frexp@value+2,w
  5877  1EC7  0D2E               	rlf	frexp@value+2,w
  5878  1EC8  3901               	andlw	1
  5879  1EC9  00B1               	movwf	??_frexp
  5880  1ECA  01B2               	clrf	??_frexp+1
  5881  1ECB  0830               	movf	frexp@eptr,w
  5882  1ECC  0084               	movwf	4
  5883  1ECD  0831               	movf	??_frexp,w
  5884  1ECE  0480               	iorwf	0,f
  5885  1ECF  0A84               	incf	4,f
  5886  1ED0  0832               	movf	??_frexp+1,w
  5887  1ED1  0480               	iorwf	0,f
  5888  1ED2  0830               	movf	frexp@eptr,w
  5889  1ED3  0084               	movwf	4
  5890  1ED4  3082               	movlw	130
  5891  1ED5  0780               	addwf	0,f
  5892  1ED6  0F84               	incfsz	4,f
  5893  1ED7  0800               	movf	0,w
  5894  1ED8  1803               	skipnc
  5895  1ED9  0A00               	incf	0,w
  5896  1EDA  00FF               	movwf	127
  5897  1EDB  3EFF               	addlw	255
  5898  1EDC  0080               	movwf	0
  5899  1EDD  0384               	decf	4,f
  5900  1EDE  082F               	movf	frexp@value+3,w
  5901  1EDF  3980               	andlw	-128
  5902  1EE0  383F               	iorlw	63
  5903  1EE1  00AF               	movwf	frexp@value+3
  5904  1EE2  13AE               	bcf	frexp@value+2,7
  5905  1EE3  0008               	return
  5906  1EE4                     __end_of_frexp:	
  5907  1EE4                     __ptext8:	
  5908 ;; *************** function ___fleq *****************
  5909 ;; Defined at:
  5910 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  ff1             4    0[BANK0 ] PTR int 
  5913 ;;  ff2             4    4[BANK0 ] PTR int 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 300/0
  5922 ;;		On exit  : 300/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5925 ;;      Params:         0       8       0       0       0
  5926 ;;      Locals:         0       0       0       0       0
  5927 ;;      Temps:          0       4       0       0       0
  5928 ;;      Totals:         0      12       0       0       0
  5929 ;;Total ram usage:       12 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_log
  5936 ;;		_frexp
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function ___fleq
  5942  1EE4                     ___fleq:	
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5946  1EE4  3080               	movlw	128
  5947  1EE5  01A8               	clrf	??___fleq
  5948  1EE6  01A9               	clrf	??___fleq+1
  5949  1EE7  0522               	andwf	___fleq@ff1+2,w
  5950  1EE8  00AA               	movwf	??___fleq+2
  5951  1EE9  307F               	movlw	127
  5952  1EEA  0523               	andwf	___fleq@ff1+3,w
  5953  1EEB  00AB               	movwf	??___fleq+3
  5954  1EEC  042A               	iorwf	??___fleq+2,w
  5955  1EED  0429               	iorwf	??___fleq+1,w
  5956  1EEE  0428               	iorwf	??___fleq,w
  5957  1EEF  1D03               	skipz
  5958  1EF0  2EF5               	goto	l6100
  5959  1EF1  01A0               	clrf	___fleq@ff1
  5960  1EF2  01A1               	clrf	___fleq@ff1+1
  5961  1EF3  01A2               	clrf	___fleq@ff1+2
  5962  1EF4  01A3               	clrf	___fleq@ff1+3
  5963  1EF5                     l6100:	
  5964  1EF5  3080               	movlw	128
  5965  1EF6  01A8               	clrf	??___fleq
  5966  1EF7  01A9               	clrf	??___fleq+1
  5967  1EF8  0526               	andwf	___fleq@ff2+2,w
  5968  1EF9  00AA               	movwf	??___fleq+2
  5969  1EFA  307F               	movlw	127
  5970  1EFB  0527               	andwf	___fleq@ff2+3,w
  5971  1EFC  00AB               	movwf	??___fleq+3
  5972  1EFD  042A               	iorwf	??___fleq+2,w
  5973  1EFE  0429               	iorwf	??___fleq+1,w
  5974  1EFF  0428               	iorwf	??___fleq,w
  5975  1F00  1D03               	skipz
  5976  1F01  2F06               	goto	l6104
  5977  1F02  01A4               	clrf	___fleq@ff2
  5978  1F03  01A5               	clrf	___fleq@ff2+1
  5979  1F04  01A6               	clrf	___fleq@ff2+2
  5980  1F05  01A7               	clrf	___fleq@ff2+3
  5981  1F06                     l6104:	
  5982  1F06  0827               	movf	___fleq@ff2+3,w
  5983  1F07  0623               	xorwf	___fleq@ff1+3,w
  5984  1F08  1D03               	skipz
  5985  1F09  2F14               	goto	u5265
  5986  1F0A  0826               	movf	___fleq@ff2+2,w
  5987  1F0B  0622               	xorwf	___fleq@ff1+2,w
  5988  1F0C  1D03               	skipz
  5989  1F0D  2F14               	goto	u5265
  5990  1F0E  0825               	movf	___fleq@ff2+1,w
  5991  1F0F  0621               	xorwf	___fleq@ff1+1,w
  5992  1F10  1D03               	skipz
  5993  1F11  2F14               	goto	u5265
  5994  1F12  0824               	movf	___fleq@ff2,w
  5995  1F13  0620               	xorwf	___fleq@ff1,w
  5996  1F14                     u5265:	
  5997  1F14  1903               	skipnz
  5998  1F15  2F18               	goto	l6108
  5999  1F16  1003               	clrc
  6000  1F17  0008               	return
  6001  1F18                     l6108:	
  6002  1F18  1403               	setc
  6003  1F19  0008               	return
  6004  1F1A                     __end_of___fleq:	
  6005  1F1A                     PL64:	
  6006  1F1A  00A0               	movwf	___fleq@ff1
  6007  1F1B  01A4               	clrf	___fleq@ff2
  6008  1F1C  01A5               	clrf	___fleq@ff2+1
  6009  1F1D  01A6               	clrf	___fleq@ff2+2
  6010  1F1E  01A7               	clrf	___fleq@ff2+3
  6011  1F1F  0008               	return
  6012  1F20                     __end_ofPL64:	
  6013                           
  6014                           	psect	text11
  6015  1CB5                     __ptext11:	
  6016 ;; *************** function _USART_init *****************
  6017 ;; Defined at:
  6018 ;;		line 18 in file "usart.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  baudrate        4    0[BANK0 ] unsigned long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  i               1    4[BANK0 ] unsigned char 
  6023 ;;  erro            1    0        unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 300/0
  6030 ;;		On exit  : 300/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6033 ;;      Params:         0       4       0       0       0
  6034 ;;      Locals:         0       1       0       0       0
  6035 ;;      Temps:          0       0       0       0       0
  6036 ;;      Totals:         0       5       0       0       0
  6037 ;;Total ram usage:        5 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _USART_init
  6049  1CB5                     _USART_init:	
  6050                           
  6051                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  6055  1CB5  304B               	movlw	75
  6056  1CB6  0621               	xorwf	USART_init@baudrate+1,w
  6057  1CB7  0420               	iorwf	USART_init@baudrate,w
  6058  1CB8  0422               	iorwf	USART_init@baudrate+2,w
  6059  1CB9  0423               	iorwf	USART_init@baudrate+3,w
  6060  1CBA  1D03               	btfss	3,2
  6061  1CBB  2CC6               	goto	l7640
  6062                           
  6063                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  6064  1CBC  1798               	bsf	24,7	;volatile
  6065                           
  6066                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  6067  1CBD  1618               	bsf	24,4	;volatile
  6068                           
  6069                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  6070  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  6071  1CBF  1518               	bsf	24,2	;volatile
  6072                           
  6073                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  6074  1CC0  1218               	bcf	24,4	;volatile
  6075                           
  6076                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  6077  1CC1  1318               	bcf	24,6	;volatile
  6078                           
  6079                           ;usart.c: 32:           SPBRG =12;
  6080  1CC2  300C               	movlw	12
  6081  1CC3  0099               	movwf	25	;volatile
  6082                           
  6083                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  6084  1CC4  170B               	bsf	11,6	;volatile
  6085  1CC5  2CDF               	goto	L5
  6086  1CC6                     l7640:	
  6087                           ;usart.c: 35:           }
  6088                           
  6089                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6090                           
  6091  1CC6  30C2               	movlw	194
  6092  1CC7  0621               	xorwf	USART_init@baudrate+1,w
  6093  1CC8  1D03               	skipz
  6094  1CC9  2CE0               	goto	l7660
  6095  1CCA  0322               	decf	USART_init@baudrate+2,w
  6096  1CCB  0420               	iorwf	USART_init@baudrate,w
  6097  1CCC  0423               	iorwf	USART_init@baudrate+3,w
  6098  1CCD  1D03               	btfss	3,2
  6099  1CCE  2CE0               	goto	l7660
  6100                           
  6101                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6102  1CCF  3010               	movlw	16
  6103  1CD0  1683               	bsf	3,5	;RP0=1, select bank1
  6104  1CD1  0099               	movwf	25	;volatile
  6105                           
  6106                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6107  1CD2  1703               	bsf	3,6	;RP1=1, select bank3
  6108  1CD3  1587               	bsf	7,3	;volatile
  6109                           
  6110                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6111  1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  6112  1CD5  1518               	bsf	24,2	;volatile
  6113                           
  6114                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6115  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  6116  1CD7  1798               	bsf	24,7	;volatile
  6117                           
  6118                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6119  1CD8  1683               	bsf	3,5	;RP0=1, select bank1
  6120  1CD9  1218               	bcf	24,4	;volatile
  6121                           
  6122                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6123  1CDA  1318               	bcf	24,6	;volatile
  6124                           
  6125                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6126  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  6127  1CDC  1618               	bsf	24,4	;volatile
  6128                           
  6129                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6130  1CDD  170B               	bsf	11,6	;volatile
  6131                           
  6132                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6133  1CDE  1683               	bsf	3,5	;RP0=1, select bank1
  6134  1CDF                     L5:	
  6135  1CDF  168C               	bsf	12,5	;volatile
  6136  1CE0                     l7660:	
  6137                           
  6138                           ;usart.c: 68:      TRISC6= 1;
  6139  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
  6140  1CE1  1707               	bsf	7,6	;volatile
  6141                           
  6142                           ;usart.c: 69:      TRISC7= 1;
  6143  1CE2  1787               	bsf	7,7	;volatile
  6144                           
  6145                           ;usart.c: 71:      CREN=0;
  6146  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6147  1CE4  1218               	bcf	24,4	;volatile
  6148                           
  6149                           ;usart.c: 72:      CREN=1;
  6150  1CE5  1618               	bsf	24,4	;volatile
  6151                           
  6152                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6153  1CE6  01A4               	clrf	USART_init@i
  6154  1CE7                     l7674:	
  6155  1CE7  081A               	movf	26,w	;volatile
  6156  1CE8  300F               	movlw	15
  6157  1CE9  0AA4               	incf	USART_init@i,f
  6158  1CEA  0224               	subwf	USART_init@i,w
  6159  1CEB  1803               	btfsc	3,0
  6160  1CEC  0008               	return
  6161  1CED  2CE7               	goto	l7674
  6162  1CEE                     __end_of_USART_init:	
  6163                           
  6164                           	psect	text12
  6165  1DAC                     __ptext12:	
  6166 ;; *************** function _I2C_Master_Init *****************
  6167 ;; Defined at:
  6168 ;;		line 7 in file "I2C.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  c               4   13[BANK0 ] const unsigned long 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 300/0
  6179 ;;		On exit  : 300/100
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0       4       0       0       0
  6183 ;;      Locals:         0       0       0       0       0
  6184 ;;      Temps:          0       4       0       0       0
  6185 ;;      Totals:         0       8       0       0       0
  6186 ;;Total ram usage:        8 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    2
  6189 ;; This function calls:
  6190 ;;		___lldiv
  6191 ;; This function is called by:
  6192 ;;		_main
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function _I2C_Master_Init
  6198  1DAC                     _I2C_Master_Init:	
  6199                           
  6200                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6201                           
  6202                           ;incstack = 0
  6203                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6204  1DAC  3028               	movlw	40
  6205  1DAD  0094               	movwf	20	;volatile
  6206                           
  6207                           ;I2C.c: 11:   SSPCON2 = 0;
  6208  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  6209  1DAF  0191               	clrf	17	;volatile
  6210                           
  6211                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6212  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  6213  1DB1  082D               	movf	I2C_Master_Init@c,w
  6214  1DB2  00B1               	movwf	??_I2C_Master_Init
  6215  1DB3  082E               	movf	I2C_Master_Init@c+1,w
  6216  1DB4  00B2               	movwf	??_I2C_Master_Init+1
  6217  1DB5  082F               	movf	I2C_Master_Init@c+2,w
  6218  1DB6  00B3               	movwf	??_I2C_Master_Init+2
  6219  1DB7  0830               	movf	I2C_Master_Init@c+3,w
  6220  1DB8  00B4               	movwf	??_I2C_Master_Init+3
  6221  1DB9  3002               	movlw	2
  6222  1DBA                     u7215:	
  6223  1DBA  1003               	clrc
  6224  1DBB  0DB1               	rlf	??_I2C_Master_Init,f
  6225  1DBC  0DB2               	rlf	??_I2C_Master_Init+1,f
  6226  1DBD  0DB3               	rlf	??_I2C_Master_Init+2,f
  6227  1DBE  0DB4               	rlf	??_I2C_Master_Init+3,f
  6228  1DBF  3EFF               	addlw	-1
  6229  1DC0  1D03               	skipz
  6230  1DC1  2DBA               	goto	u7215
  6231  1DC2  0834               	movf	??_I2C_Master_Init+3,w
  6232  1DC3  00A3               	movwf	___lldiv@divisor+3
  6233  1DC4  0833               	movf	??_I2C_Master_Init+2,w
  6234  1DC5  00A2               	movwf	___lldiv@divisor+2
  6235  1DC6  0832               	movf	??_I2C_Master_Init+1,w
  6236  1DC7  00A1               	movwf	___lldiv@divisor+1
  6237  1DC8  0831               	movf	??_I2C_Master_Init,w
  6238  1DC9  00A0               	movwf	___lldiv@divisor
  6239  1DCA  307A               	movlw	122
  6240  1DCB  01A7               	clrf	___lldiv@dividend+3
  6241  1DCC  00A6               	movwf	___lldiv@dividend+2
  6242  1DCD  3012               	movlw	18
  6243  1DCE  00A5               	movwf	___lldiv@dividend+1
  6244  1DCF  01A4               	clrf	___lldiv@dividend
  6245  1DD0  25D9               	fcall	___lldiv
  6246  1DD1  0820               	movf	?___lldiv,w
  6247  1DD2  3EFF               	addlw	255
  6248  1DD3  1683               	bsf	3,5	;RP0=1, select bank1
  6249  1DD4  0093               	movwf	19	;volatile
  6250                           
  6251                           ;I2C.c: 13:   SSPSTAT = 0;
  6252  1DD5  0194               	clrf	20	;volatile
  6253                           
  6254                           ;I2C.c: 14:   TRISC3 = 1;
  6255  1DD6  1587               	bsf	7,3	;volatile
  6256                           
  6257                           ;I2C.c: 15:   TRISC4 = 1;
  6258  1DD7  1607               	bsf	7,4	;volatile
  6259  1DD8  0008               	return
  6260  1DD9                     __end_of_I2C_Master_Init:	
  6261  1DD9                     __ptext13:	
  6262 ;; *************** function ___lldiv *****************
  6263 ;; Defined at:
  6264 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  divisor         4    0[BANK0 ] unsigned long 
  6267 ;;  dividend        4    4[BANK0 ] unsigned long 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  quotient        4    8[BANK0 ] unsigned long 
  6270 ;;  counter         1   12[BANK0 ] unsigned char 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  4    0[BANK0 ] unsigned long 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 300/0
  6277 ;;		On exit  : 300/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6280 ;;      Params:         0       8       0       0       0
  6281 ;;      Locals:         0       5       0       0       0
  6282 ;;      Temps:          0       0       0       0       0
  6283 ;;      Totals:         0      13       0       0       0
  6284 ;;Total ram usage:       13 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    1
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_I2C_Master_Init
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           
  6295                           ;psect for function ___lldiv
  6296  1DD9                     ___lldiv:	
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6300  1DD9  01A8               	clrf	___lldiv@quotient
  6301  1DDA  01A9               	clrf	___lldiv@quotient+1
  6302  1DDB  01AA               	clrf	___lldiv@quotient+2
  6303  1DDC  01AB               	clrf	___lldiv@quotient+3
  6304  1DDD  0823               	movf	___lldiv@divisor+3,w
  6305  1DDE  0422               	iorwf	___lldiv@divisor+2,w
  6306  1DDF  0421               	iorwf	___lldiv@divisor+1,w
  6307  1DE0  0420               	iorwf	___lldiv@divisor,w
  6308  1DE1  1903               	skipnz
  6309  1DE2  2E18               	goto	l7598
  6310  1DE3  01AC               	clrf	___lldiv@counter
  6311  1DE4                     L6:	
  6312  1DE4  0AAC               	incf	___lldiv@counter,f
  6313  1DE5  1BA3               	btfsc	___lldiv@divisor+3,7
  6314  1DE6  2DED               	goto	l7586
  6315  1DE7  1003               	clrc
  6316  1DE8  0DA0               	rlf	___lldiv@divisor,f
  6317  1DE9  0DA1               	rlf	___lldiv@divisor+1,f
  6318  1DEA  0DA2               	rlf	___lldiv@divisor+2,f
  6319  1DEB  0DA3               	rlf	___lldiv@divisor+3,f
  6320  1DEC  2DE4               	goto	L6
  6321  1DED                     l7586:	
  6322  1DED  1003               	clrc
  6323  1DEE  0DA8               	rlf	___lldiv@quotient,f
  6324  1DEF  0DA9               	rlf	___lldiv@quotient+1,f
  6325  1DF0  0DAA               	rlf	___lldiv@quotient+2,f
  6326  1DF1  0DAB               	rlf	___lldiv@quotient+3,f
  6327  1DF2  0823               	movf	___lldiv@divisor+3,w
  6328  1DF3  0227               	subwf	___lldiv@dividend+3,w
  6329  1DF4  1D03               	skipz
  6330  1DF5  2E00               	goto	u7195
  6331  1DF6  0822               	movf	___lldiv@divisor+2,w
  6332  1DF7  0226               	subwf	___lldiv@dividend+2,w
  6333  1DF8  1D03               	skipz
  6334  1DF9  2E00               	goto	u7195
  6335  1DFA  0821               	movf	___lldiv@divisor+1,w
  6336  1DFB  0225               	subwf	___lldiv@dividend+1,w
  6337  1DFC  1D03               	skipz
  6338  1DFD  2E00               	goto	u7195
  6339  1DFE  0820               	movf	___lldiv@divisor,w
  6340  1DFF  0224               	subwf	___lldiv@dividend,w
  6341  1E00                     u7195:	
  6342  1E00  1C03               	skipc
  6343  1E01  2E12               	goto	L7
  6344  1E02  0820               	movf	___lldiv@divisor,w
  6345  1E03  02A4               	subwf	___lldiv@dividend,f
  6346  1E04  0821               	movf	___lldiv@divisor+1,w
  6347  1E05  1C03               	skipc
  6348  1E06  0F21               	incfsz	___lldiv@divisor+1,w
  6349  1E07  02A5               	subwf	___lldiv@dividend+1,f
  6350  1E08  0822               	movf	___lldiv@divisor+2,w
  6351  1E09  1C03               	skipc
  6352  1E0A  0F22               	incfsz	___lldiv@divisor+2,w
  6353  1E0B  02A6               	subwf	___lldiv@dividend+2,f
  6354  1E0C  0823               	movf	___lldiv@divisor+3,w
  6355  1E0D  1C03               	skipc
  6356  1E0E  0F23               	incfsz	___lldiv@divisor+3,w
  6357  1E0F  02A7               	subwf	___lldiv@dividend+3,f
  6358  1E10  1428               	bsf	___lldiv@quotient,0
  6359  1E11  1003               	clrc
  6360  1E12                     L7:	
  6361  1E12  0CA3               	rrf	___lldiv@divisor+3,f
  6362  1E13  0CA2               	rrf	___lldiv@divisor+2,f
  6363  1E14  0CA1               	rrf	___lldiv@divisor+1,f
  6364  1E15  0CA0               	rrf	___lldiv@divisor,f
  6365  1E16  0BAC               	decfsz	___lldiv@counter,f
  6366  1E17  2DED               	goto	l7586
  6367  1E18                     l7598:	
  6368  1E18  082B               	movf	___lldiv@quotient+3,w
  6369  1E19  00A3               	movwf	?___lldiv+3
  6370  1E1A  082A               	movf	___lldiv@quotient+2,w
  6371  1E1B  00A2               	movwf	?___lldiv+2
  6372  1E1C  0829               	movf	___lldiv@quotient+1,w
  6373  1E1D  00A1               	movwf	?___lldiv+1
  6374  1E1E  0828               	movf	___lldiv@quotient,w
  6375  1E1F  00A0               	movwf	?___lldiv
  6376  1E20  0008               	return
  6377  1E21                     __end_of___lldiv:	
  6378                           
  6379                           	psect	text15
  6380  1C57                     __ptext15:	
  6381 ;; *************** function _strcpy *****************
  6382 ;; Defined at:
  6383 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  to              1    wreg     PTR unsigned char 
  6386 ;;		 -> texto(16), 
  6387 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6388 ;;		 -> STR_2(1), 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6391 ;;		 -> texto(16), 
  6392 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6393 ;;		 -> texto(16), 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      PTR unsigned char 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6398 ;; Tracked objects:
  6399 ;;		On entry : B00/0
  6400 ;;		On exit  : B00/800
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6403 ;;      Params:         0       1       0       0       0
  6404 ;;      Locals:         0       2       0       0       0
  6405 ;;      Temps:          0       1       0       0       0
  6406 ;;      Totals:         0       4       0       0       0
  6407 ;;Total ram usage:        4 bytes
  6408 ;; Hardware stack levels used:    2
  6409 ;; Hardware stack levels required when called:    1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_Decodify_Command
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           
  6418                           ;psect for function _strcpy
  6419  1C57                     _strcpy:	
  6420                           
  6421                           ;incstack = 0
  6422                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6423                           ;strcpy@to stored from wreg
  6424  1C57  00A2               	movwf	strcpy@to
  6425  1C58  00A3               	movwf	strcpy@cp
  6426  1C59                     l7458:	
  6427  1C59  0820               	movf	strcpy@from,w
  6428  1C5A  0084               	movwf	4
  6429  1C5B  160A  158A  200A  160A  158A  	fcall	stringdir
  6430  1C60  00A1               	movwf	??_strcpy
  6431  1C61  0823               	movf	strcpy@cp,w
  6432  1C62  0084               	movwf	4
  6433  1C63  0821               	movf	??_strcpy,w
  6434  1C64  1783               	bsf	3,7	;select IRP bank2
  6435  1C65  0080               	movwf	0
  6436  1C66  0800               	movf	0,w
  6437  1C67  1903               	btfsc	3,2
  6438  1C68  0008               	return
  6439  1C69  0AA3               	incf	strcpy@cp,f
  6440  1C6A  0AA0               	incf	strcpy@from,f
  6441  1C6B  2C59               	goto	l7458
  6442  1C6C                     __end_of_strcpy:	
  6443                           
  6444                           	psect	text18
  6445  1D39                     __ptext18:	
  6446 ;; *************** function _utoa *****************
  6447 ;; Defined at:
  6448 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  buf             1    wreg     PTR unsigned char 
  6451 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6452 ;;  val             2    7[BANK0 ] unsigned int 
  6453 ;;  base            2    9[BANK0 ] int 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6456 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6457 ;;  v               2   11[BANK0 ] unsigned int 
  6458 ;;  c               1   13[BANK0 ] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      PTR unsigned char 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 300/0
  6465 ;;		On exit  : B00/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6468 ;;      Params:         0       4       0       0       0
  6469 ;;      Locals:         0       4       0       0       0
  6470 ;;      Temps:          0       0       0       0       0
  6471 ;;      Totals:         0       8       0       0       0
  6472 ;;Total ram usage:        8 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    2
  6475 ;; This function calls:
  6476 ;;		___lwdiv
  6477 ;;		___lwmod
  6478 ;; This function is called by:
  6479 ;;		_itoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           
  6484                           ;psect for function _utoa
  6485  1D39                     _utoa:	
  6486                           
  6487                           ;incstack = 0
  6488                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6489                           ;utoa@buf stored from wreg
  6490  1D39  00AE               	movwf	utoa@buf
  6491  1D3A  0828               	movf	utoa@val+1,w
  6492  1D3B  00AC               	movwf	utoa@v+1
  6493  1D3C  0827               	movf	utoa@val,w
  6494  1D3D  00AB               	movwf	utoa@v
  6495  1D3E                     l7110:	
  6496  1D3E  082A               	movf	utoa@base+1,w
  6497  1D3F  00A1               	movwf	___lwdiv@divisor+1
  6498  1D40  0829               	movf	utoa@base,w
  6499  1D41  00A0               	movwf	___lwdiv@divisor
  6500  1D42  082C               	movf	utoa@v+1,w
  6501  1D43  00A3               	movwf	___lwdiv@dividend+1
  6502  1D44  082B               	movf	utoa@v,w
  6503  1D45  00A2               	movwf	___lwdiv@dividend
  6504  1D46  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6505  1D4B  0821               	movf	?___lwdiv+1,w
  6506  1D4C  00AC               	movwf	utoa@v+1
  6507  1D4D  0820               	movf	?___lwdiv,w
  6508  1D4E  00AB               	movwf	utoa@v
  6509  1D4F  0AAE               	incf	utoa@buf,f
  6510  1D50  042C               	iorwf	utoa@v+1,w
  6511  1D51  1D03               	btfss	3,2
  6512  1D52  2D3E               	goto	l7110
  6513  1D53  082E               	movf	utoa@buf,w
  6514  1D54  0084               	movwf	4
  6515  1D55  1383               	bcf	3,7	;select IRP bank0
  6516  1D56  0180               	clrf	0
  6517  1D57  03AE               	decf	utoa@buf,f
  6518  1D58                     l7120:	
  6519  1D58  082A               	movf	utoa@base+1,w
  6520  1D59  00A1               	movwf	___lwmod@divisor+1
  6521  1D5A  0829               	movf	utoa@base,w
  6522  1D5B  00A0               	movwf	___lwmod@divisor
  6523  1D5C  0828               	movf	utoa@val+1,w
  6524  1D5D  00A3               	movwf	___lwmod@dividend+1
  6525  1D5E  0827               	movf	utoa@val,w
  6526  1D5F  00A2               	movwf	___lwmod@dividend
  6527  1D60  2588               	fcall	___lwmod
  6528  1D61  0820               	movf	?___lwmod,w
  6529  1D62  00AD               	movwf	utoa@c
  6530  1D63  082A               	movf	utoa@base+1,w
  6531  1D64  00A1               	movwf	___lwdiv@divisor+1
  6532  1D65  0829               	movf	utoa@base,w
  6533  1D66  00A0               	movwf	___lwdiv@divisor
  6534  1D67  0828               	movf	utoa@val+1,w
  6535  1D68  00A3               	movwf	___lwdiv@dividend+1
  6536  1D69  0827               	movf	utoa@val,w
  6537  1D6A  00A2               	movwf	___lwdiv@dividend
  6538  1D6B  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6539  1D70  0821               	movf	?___lwdiv+1,w
  6540  1D71  00A8               	movwf	utoa@val+1
  6541  1D72  0820               	movf	?___lwdiv,w
  6542  1D73  00A7               	movwf	utoa@val
  6543  1D74  300A               	movlw	10
  6544  1D75  022D               	subwf	utoa@c,w
  6545  1D76  1C03               	skipc
  6546  1D77  2D7A               	goto	l1491
  6547  1D78  3007               	movlw	7
  6548  1D79  07AD               	addwf	utoa@c,f
  6549  1D7A                     l1491:	
  6550  1D7A  3030               	movlw	48
  6551  1D7B  07AD               	addwf	utoa@c,f
  6552  1D7C  082E               	movf	utoa@buf,w
  6553  1D7D  0084               	movwf	4
  6554  1D7E  082D               	movf	utoa@c,w
  6555  1D7F  1383               	bcf	3,7	;select IRP bank0
  6556  1D80  0080               	movwf	0
  6557  1D81  03AE               	decf	utoa@buf,f
  6558  1D82  0827               	movf	utoa@val,w
  6559  1D83  0428               	iorwf	utoa@val+1,w
  6560  1D84  1D03               	btfss	3,2
  6561  1D85  2D58               	goto	l7120
  6562                           
  6563                           ;	Return value of _utoa is never used
  6564  1D86  0AAE               	incf	utoa@buf,f
  6565  1D87  0008               	return
  6566  1D88                     __end_of_utoa:	
  6567  1D88                     __ptext19:	
  6568 ;; *************** function ___lwmod *****************
  6569 ;; Defined at:
  6570 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  divisor         2    0[BANK0 ] unsigned int 
  6573 ;;  dividend        2    2[BANK0 ] unsigned int 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  counter         1    4[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  2    0[BANK0 ] unsigned int 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 300/0
  6582 ;;		On exit  : 300/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6585 ;;      Params:         0       4       0       0       0
  6586 ;;      Locals:         0       1       0       0       0
  6587 ;;      Temps:          0       0       0       0       0
  6588 ;;      Totals:         0       5       0       0       0
  6589 ;;Total ram usage:        5 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    1
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_utoa
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function ___lwmod
  6601  1D88                     ___lwmod:	
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6605  1D88  0820               	movf	___lwmod@divisor,w
  6606  1D89  0421               	iorwf	___lwmod@divisor+1,w
  6607  1D8A  1903               	btfsc	3,2
  6608  1D8B  2DA7               	goto	l6610
  6609  1D8C  01A4               	clrf	___lwmod@counter
  6610  1D8D                     L12:	
  6611  1D8D  0AA4               	incf	___lwmod@counter,f
  6612  1D8E  1BA1               	btfsc	___lwmod@divisor+1,7
  6613  1D8F  2D94               	goto	l6602
  6614  1D90  1003               	clrc
  6615  1D91  0DA0               	rlf	___lwmod@divisor,f
  6616  1D92  0DA1               	rlf	___lwmod@divisor+1,f
  6617  1D93  2D8D               	goto	L12
  6618  1D94                     l6602:	
  6619  1D94  0821               	movf	___lwmod@divisor+1,w
  6620  1D95  0223               	subwf	___lwmod@dividend+1,w
  6621  1D96  1D03               	skipz
  6622  1D97  2D9A               	goto	u6165
  6623  1D98  0820               	movf	___lwmod@divisor,w
  6624  1D99  0222               	subwf	___lwmod@dividend,w
  6625  1D9A                     u6165:	
  6626  1D9A  1C03               	skipc
  6627  1D9B  2DA3               	goto	L13
  6628  1D9C  0820               	movf	___lwmod@divisor,w
  6629  1D9D  02A2               	subwf	___lwmod@dividend,f
  6630  1D9E  0821               	movf	___lwmod@divisor+1,w
  6631  1D9F  1C03               	skipc
  6632  1DA0  03A3               	decf	___lwmod@dividend+1,f
  6633  1DA1  02A3               	subwf	___lwmod@dividend+1,f
  6634  1DA2  1003               	clrc
  6635  1DA3                     L13:	
  6636  1DA3  0CA1               	rrf	___lwmod@divisor+1,f
  6637  1DA4  0CA0               	rrf	___lwmod@divisor,f
  6638  1DA5  0BA4               	decfsz	___lwmod@counter,f
  6639  1DA6  2D94               	goto	l6602
  6640  1DA7                     l6610:	
  6641  1DA7  0823               	movf	___lwmod@dividend+1,w
  6642  1DA8  00A1               	movwf	?___lwmod+1
  6643  1DA9  0822               	movf	___lwmod@dividend,w
  6644  1DAA  00A0               	movwf	?___lwmod
  6645  1DAB  0008               	return
  6646  1DAC                     __end_of___lwmod:	
  6647                           
  6648                           	psect	text22
  6649  1CEE                     __ptext22:	
  6650 ;; *************** function _USART_to_Protocol *****************
  6651 ;; Defined at:
  6652 ;;		line 77 in file "usart.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  usart_protoc    1    wreg     PTR struct .
  6655 ;;		 -> usart_protocol(16), 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6658 ;;		 -> usart_protocol(16), 
  6659 ;;  i               2    2[BANK0 ] int 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 300/300
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6669 ;;      Params:         0       0       0       0       0
  6670 ;;      Locals:         0       3       0       0       0
  6671 ;;      Temps:          0       2       0       0       0
  6672 ;;      Totals:         0       5       0       0       0
  6673 ;;Total ram usage:        5 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_Decodify_Command
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           
  6684                           ;psect for function _USART_to_Protocol
  6685  1CEE                     _USART_to_Protocol:	
  6686                           
  6687                           ;incstack = 0
  6688                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6689                           ;USART_to_Protocol@usart_protocol stored from wreg
  6690  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
  6691  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
  6692  1CF0  00A4               	movwf	USART_to_Protocol@usart_protocol
  6693                           
  6694                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6695  1CF1  0084               	movwf	4
  6696  1CF2  1703               	bsf	3,6	;RP1=1, select bank2
  6697  1CF3  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6698  1CF4  1783               	bsf	3,7	;select IRP bank2
  6699  1CF5  0080               	movwf	0
  6700  1CF6  0A84               	incf	4,f
  6701  1CF7  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6702  1CF8  0080               	movwf	0
  6703                           
  6704                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6705  1CF9  1303               	bcf	3,6	;RP1=0, select bank0
  6706  1CFA  0824               	movf	USART_to_Protocol@usart_protocol,w
  6707  1CFB  3E02               	addlw	2
  6708  1CFC  0084               	movwf	4
  6709  1CFD  1703               	bsf	3,6	;RP1=1, select bank2
  6710  1CFE  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6711  1CFF  0080               	movwf	0
  6712                           
  6713                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6714  1D00  1303               	bcf	3,6	;RP1=0, select bank0
  6715  1D01  0824               	movf	USART_to_Protocol@usart_protocol,w
  6716  1D02  3E03               	addlw	3
  6717  1D03  0084               	movwf	4
  6718  1D04  1703               	bsf	3,6	;RP1=1, select bank2
  6719  1D05  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6720  1D06  0080               	movwf	0
  6721                           
  6722                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6723  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  6724  1D08  0824               	movf	USART_to_Protocol@usart_protocol,w
  6725  1D09  3E04               	addlw	4
  6726  1D0A  0084               	movwf	4
  6727  1D0B  1703               	bsf	3,6	;RP1=1, select bank2
  6728  1D0C  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6729  1D0D  0080               	movwf	0
  6730                           
  6731                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6732  1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  6733  1D0F  0824               	movf	USART_to_Protocol@usart_protocol,w
  6734  1D10  3E05               	addlw	5
  6735  1D11  0084               	movwf	4
  6736  1D12  1703               	bsf	3,6	;RP1=1, select bank2
  6737  1D13  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6738  1D14  0080               	movwf	0
  6739                           
  6740                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6741  1D15  1303               	bcf	3,6	;RP1=0, select bank0
  6742  1D16  01A2               	clrf	USART_to_Protocol@i
  6743  1D17  01A3               	clrf	USART_to_Protocol@i+1
  6744  1D18                     l7398:	
  6745  1D18  0824               	movf	USART_to_Protocol@usart_protocol,w
  6746  1D19  3E05               	addlw	5
  6747  1D1A  0084               	movwf	4
  6748  1D1B  0823               	movf	USART_to_Protocol@i+1,w
  6749  1D1C  3A80               	xorlw	128
  6750  1D1D  00A0               	movwf	??_USART_to_Protocol
  6751  1D1E  3080               	movlw	128
  6752  1D1F  0220               	subwf	??_USART_to_Protocol,w
  6753  1D20  1D03               	skipz
  6754  1D21  2D24               	goto	u7005
  6755  1D22  0800               	movf	0,w
  6756  1D23  0222               	subwf	USART_to_Protocol@i,w
  6757  1D24                     u7005:	
  6758  1D24  1803               	btfsc	3,0
  6759  1D25  0008               	return
  6760                           
  6761                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6762  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  6763  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  6764  1D28  0822               	movf	USART_to_Protocol@i,w
  6765  1D29  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6766  1D2A  0084               	movwf	4
  6767  1D2B  1783               	bsf	3,7	;select IRP bank2
  6768  1D2C  0800               	movf	0,w
  6769  1D2D  00A0               	movwf	??_USART_to_Protocol
  6770  1D2E  0822               	movf	USART_to_Protocol@i,w
  6771  1D2F  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6772  1D30  00A1               	movwf	??_USART_to_Protocol+1
  6773  1D31  3E06               	addlw	6
  6774  1D32  0084               	movwf	4
  6775  1D33  0820               	movf	??_USART_to_Protocol,w
  6776  1D34  0080               	movwf	0
  6777  1D35  0AA2               	incf	USART_to_Protocol@i,f
  6778  1D36  1903               	skipnz
  6779  1D37  0AA3               	incf	USART_to_Protocol@i+1,f
  6780  1D38  2D18               	goto	l7398
  6781  1D39                     __end_of_USART_to_Protocol:	
  6782                           
  6783                           	psect	text23
  6784  1C6C                     __ptext23:	
  6785 ;; *************** function _USART_put_buffer *****************
  6786 ;; Defined at:
  6787 ;;		line 99 in file "usart.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  vetor           1    wreg     PTR unsigned char 
  6790 ;;		 -> buffer(32), 
  6791 ;;  size            2    1[BANK0 ] unsigned int 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  6794 ;;		 -> buffer(32), 
  6795 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  6796 ;;		 -> USART_put_buffer@vetor(1), 
  6797 ;;  loop            1    6[BANK0 ] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 300/0
  6804 ;;		On exit  : 300/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6807 ;;      Params:         0       2       0       0       0
  6808 ;;      Locals:         0       3       0       0       0
  6809 ;;      Temps:          0       2       0       0       0
  6810 ;;      Totals:         0       7       0       0       0
  6811 ;;Total ram usage:        7 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    2
  6814 ;; This function calls:
  6815 ;;		_USART_putc
  6816 ;; This function is called by:
  6817 ;;		_Decodify_Command
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _USART_put_buffer
  6823  1C6C                     _USART_put_buffer:	
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6827                           ;USART_put_buffer@vetor stored from wreg
  6828  1C6C  00A5               	movwf	USART_put_buffer@vetor
  6829  1C6D  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6830                           
  6831                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6832  1C6E  01A6               	clrf	USART_put_buffer@loop
  6833                           
  6834                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6835  1C6F  00A7               	movwf	USART_put_buffer@ptr
  6836  1C70                     l7438:	
  6837                           ;usart.c: 105:     while(loop<size)
  6838                           
  6839                           
  6840                           ;usart.c: 105:     while(loop<size)
  6841  1C70  0826               	movf	USART_put_buffer@loop,w
  6842  1C71  00A3               	movwf	??_USART_put_buffer
  6843  1C72  01A4               	clrf	??_USART_put_buffer+1
  6844  1C73  0822               	movf	USART_put_buffer@size+1,w
  6845  1C74  0224               	subwf	??_USART_put_buffer+1,w
  6846  1C75  1D03               	skipz
  6847  1C76  2C79               	goto	u7035
  6848  1C77  0821               	movf	USART_put_buffer@size,w
  6849  1C78  0223               	subwf	??_USART_put_buffer,w
  6850  1C79                     u7035:	
  6851  1C79  1803               	btfsc	3,0
  6852  1C7A  0008               	return
  6853                           
  6854                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6855  1C7B  0827               	movf	USART_put_buffer@ptr,w
  6856  1C7C  0084               	movwf	4
  6857  1C7D  1383               	bcf	3,7	;select IRP bank0
  6858  1C7E  0800               	movf	0,w
  6859  1C7F  120A  158A  2587  160A  158A  	fcall	_USART_putc
  6860                           
  6861                           ;usart.c: 108:         ptr++;
  6862  1C84  1283               	bcf	3,5	;RP0=0, select bank0
  6863  1C85  0AA7               	incf	USART_put_buffer@ptr,f
  6864                           
  6865                           ;usart.c: 109:         loop++;
  6866  1C86  0AA6               	incf	USART_put_buffer@loop,f
  6867  1C87  2C70               	goto	l7438
  6868  1C88                     __end_of_USART_put_buffer:	
  6869                           
  6870                           	psect	text30
  6871  1C31                     __ptext30:	
  6872 ;; *************** function _PROCULUS_VP_Write_String *****************
  6873 ;; Defined at:
  6874 ;;		line 205 in file "proculus.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  vp              2   21[BANK0 ] unsigned int 
  6877 ;;  text            1   23[BANK0 ] PTR unsigned char 
  6878 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 300/0
  6887 ;;		On exit  : 300/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         0       3       0       0       0
  6891 ;;      Locals:         0       0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0
  6893 ;;      Totals:         0       3       0       0       0
  6894 ;;Total ram usage:        3 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    4
  6897 ;; This function calls:
  6898 ;;		_PROCULUS_VP_Write
  6899 ;;		_strlen
  6900 ;; This function is called by:
  6901 ;;		_Decodify_Command
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _PROCULUS_VP_Write_String
  6907  1C31                     _PROCULUS_VP_Write_String:	
  6908                           
  6909                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6910                           
  6911                           ;incstack = 0
  6912                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6913  1C31  0836               	movf	PROCULUS_VP_Write_String@vp+1,w
  6914  1C32  00AE               	movwf	PROCULUS_VP_Write@vp+1
  6915  1C33  0835               	movf	PROCULUS_VP_Write_String@vp,w
  6916  1C34  00AD               	movwf	PROCULUS_VP_Write@vp
  6917  1C35  0837               	movf	PROCULUS_VP_Write_String@text,w
  6918  1C36  00AF               	movwf	PROCULUS_VP_Write@vetor
  6919  1C37  3001               	movlw	1
  6920  1C38  00B0               	movwf	PROCULUS_VP_Write@vetor+1
  6921  1C39  0837               	movf	PROCULUS_VP_Write_String@text,w
  6922  1C3A  120A  158A  25B2   	fcall	_strlen
  6923  1C3D  0820               	movf	?_strlen,w
  6924  1C3E  3E01               	addlw	1
  6925  1C3F  00B1               	movwf	PROCULUS_VP_Write@size
  6926  1C40  120A  158A  280F   	ljmp	l6896
  6927  1C43                     __end_of_PROCULUS_VP_Write_String:	
  6928                           
  6929                           	psect	text32
  6930  080F                     __ptext32:	
  6931 ;; *************** function _PROCULUS_VP_Write *****************
  6932 ;; Defined at:
  6933 ;;		line 40 in file "proculus.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  vp              2   13[BANK0 ] unsigned int 
  6936 ;;  vetor           2   15[BANK0 ] PTR unsigned char 
  6937 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6938 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6939 ;;  size            1   17[BANK0 ] unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  i               1   20[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : B00/800
  6948 ;;		On exit  : 300/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       5       0       0       0
  6952 ;;      Locals:         0       1       0       0       0
  6953 ;;      Temps:          0       2       0       0       0
  6954 ;;      Totals:         0       8       0       0       0
  6955 ;;Total ram usage:        8 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    3
  6958 ;; This function calls:
  6959 ;;		_PROCULUS_Delay
  6960 ;;		_USART_put_int
  6961 ;;		_USART_putc
  6962 ;; This function is called by:
  6963 ;;		_PROCULUS_VP_Write_String
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function _PROCULUS_VP_Write
  6969  080F                     _PROCULUS_VP_Write:	
  6970  080F                     l6896:	
  6971                           ;incstack = 0
  6972                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6973                           
  6974                           
  6975                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6976  080F  30A5               	movlw	165
  6977  0810  00AA               	movwf	USART_put_int@value
  6978  0811  305A               	movlw	90
  6979  0812  00AB               	movwf	USART_put_int@value+1
  6980  0813  2704  120A  158A   	fcall	_USART_put_int
  6981                           
  6982                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6983  0816  1283               	bcf	3,5	;RP0=0, select bank0
  6984  0817  0831               	movf	PROCULUS_VP_Write@size,w
  6985  0818  3E03               	addlw	3
  6986  0819  2587  120A  158A   	fcall	_USART_putc
  6987                           
  6988                           ;proculus.c: 43:      USART_putc(0x82);
  6989  081C  3082               	movlw	130
  6990  081D  2587  120A  158A   	fcall	_USART_putc
  6991                           
  6992                           ;proculus.c: 44:      USART_put_int(vp);
  6993  0820  1283               	bcf	3,5	;RP0=0, select bank0
  6994  0821  082E               	movf	PROCULUS_VP_Write@vp+1,w
  6995  0822  00AB               	movwf	USART_put_int@value+1
  6996  0823  082D               	movf	PROCULUS_VP_Write@vp,w
  6997  0824  00AA               	movwf	USART_put_int@value
  6998  0825  2704  120A  158A   	fcall	_USART_put_int
  6999                           
  7000                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  7001  0828  1283               	bcf	3,5	;RP0=0, select bank0
  7002  0829  01B4               	clrf	PROCULUS_VP_Write@i
  7003  082A                     l6908:	
  7004  082A  0831               	movf	PROCULUS_VP_Write@size,w
  7005  082B  0234               	subwf	PROCULUS_VP_Write@i,w
  7006  082C  1803               	btfsc	3,0
  7007  082D  2841               	goto	l6910
  7008                           
  7009                           ;proculus.c: 46:          USART_putc(vetor[i]);
  7010  082E  0834               	movf	PROCULUS_VP_Write@i,w
  7011  082F  072F               	addwf	PROCULUS_VP_Write@vetor,w
  7012  0830  00B2               	movwf	??_PROCULUS_VP_Write
  7013  0831  0830               	movf	PROCULUS_VP_Write@vetor+1,w
  7014  0832  1803               	skipnc
  7015  0833  3E01               	addlw	1
  7016  0834  00B3               	movwf	??_PROCULUS_VP_Write+1
  7017  0835  0832               	movf	??_PROCULUS_VP_Write,w
  7018  0836  0084               	movwf	4
  7019  0837  1783               	bsf	3,7
  7020  0838  1C33               	btfss	??_PROCULUS_VP_Write+1,0
  7021  0839  1383               	bcf	3,7
  7022  083A  0800               	movf	0,w
  7023  083B  2587  120A  158A   	fcall	_USART_putc
  7024  083E  1283               	bcf	3,5	;RP0=0, select bank0
  7025  083F  0AB4               	incf	PROCULUS_VP_Write@i,f
  7026  0840  282A               	goto	l6908
  7027  0841                     l6910:	
  7028                           
  7029                           ;proculus.c: 48:      PROCULUS_Delay(1);
  7030  0841  01A0               	clrf	PROCULUS_Delay@tempo_ms
  7031  0842  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  7032  0843  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  7033  0844  2FE6               	ljmp	l6540
  7034  0845                     __end_of_PROCULUS_VP_Write:	
  7035  0845                     __ptext14:	
  7036 ;; *************** function _Decodify_Command *****************
  7037 ;; Defined at:
  7038 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  ss             10   49[BANK1 ] unsigned char [10]
  7043 ;;  mm             10   39[BANK1 ] unsigned char [10]
  7044 ;;  hh             10   29[BANK1 ] unsigned char [10]
  7045 ;;  sizedata        1   69[BANK1 ] unsigned char 
  7046 ;;  add             1   61[BANK1 ] unsigned char 
  7047 ;;  add_24LCxxxx    4   70[BANK1 ] unsigned long 
  7048 ;;  OutPut          4   64[BANK1 ] float 
  7049 ;;  tempint         2   62[BANK1 ] int 
  7050 ;;  dados           2   59[BANK1 ] int 
  7051 ;;  tempchar        1   68[BANK1 ] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 300/300
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7061 ;;      Params:         0       0       0       0       0
  7062 ;;      Locals:         0       0      45       0       0
  7063 ;;      Temps:          0       2       0       0       0
  7064 ;;      Totals:         0       2      45       0       0
  7065 ;;Total ram usage:       47 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    6
  7068 ;; This function calls:
  7069 ;;		_EEPROM_24C1025_Fill_All
  7070 ;;		_EEPROM_24C1025_Read_Buffer
  7071 ;;		_EEPROM_24C1025_Read_Byte
  7072 ;;		_EEPROM_24C1025_Read_Int
  7073 ;;		_EEPROM_24C1025_Read_Str
  7074 ;;		_EEPROM_24C1025_Write_Buffer
  7075 ;;		_EEPROM_24C1025_Write_Byte
  7076 ;;		_EEPROM_24C1025_Write_Int
  7077 ;;		_EEPROM_24C1025_Write_Str
  7078 ;;		_EEPROM_Read_Byte
  7079 ;;		_EEPROM_Read_Integer
  7080 ;;		_EEPROM_Read_String
  7081 ;;		_EEPROM_Write_Byte
  7082 ;;		_EEPROM_Write_Integer
  7083 ;;		_EEPROM_Write_String
  7084 ;;		_Load_Work
  7085 ;;		_PROCULUS_Buzzer
  7086 ;;		_PROCULUS_Show_Screen
  7087 ;;		_PROCULUS_VP_Write_String
  7088 ;;		_Save_Log
  7089 ;;		_Send_Reply_OK
  7090 ;;		_Send_To_MB
  7091 ;;		_USART_put_buffer
  7092 ;;		_USART_put_int
  7093 ;;		_USART_put_string
  7094 ;;		_USART_putc
  7095 ;;		_USART_to_Protocol
  7096 ;;		___flmul
  7097 ;;		___fltol
  7098 ;;		_itoa
  7099 ;;		_strcat
  7100 ;;		_strcpy
  7101 ;;		_strlen
  7102 ;; This function is called by:
  7103 ;;		_main
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           
  7108                           ;psect for function _Decodify_Command
  7109  0845                     _Decodify_Command:	
  7110                           
  7111                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7115  0845  30CD               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  7116  0846  160A  158A  24EE  120A  158A  	fcall	_USART_to_Protocol
  7117                           
  7118                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  7119  084B  1683               	bsf	3,5	;RP0=1, select bank3
  7120  084C  1703               	bsf	3,6	;RP1=1, select bank3
  7121  084D  0854               	movf	(_usart_protocol^(0+384)+7),w
  7122  084E  1303               	bcf	3,6	;RP1=0, select bank1
  7123  084F  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7124                           
  7125                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  7126  0850  1703               	bsf	3,6	;RP1=1, select bank3
  7127  0851  0855               	movf	(_usart_protocol^(0+384)+8),w
  7128  0852  1303               	bcf	3,6	;RP1=0, select bank1
  7129  0853  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7130                           
  7131                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  7132  0854  1703               	bsf	3,6	;RP1=1, select bank3
  7133  0855  0856               	movf	(_usart_protocol^(0+384)+9),w
  7134  0856  1303               	bcf	3,6	;RP1=0, select bank1
  7135  0857  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7136                           
  7137                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  7138  0858  1703               	bsf	3,6	;RP1=1, select bank3
  7139  0859  0857               	movf	(_usart_protocol^(0+384)+10),w
  7140  085A  1303               	bcf	3,6	;RP1=0, select bank1
  7141  085B  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7142                           
  7143                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  7144  085C  2B7D               	goto	l8004
  7145  085D                     l7794:	
  7146                           
  7147                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  7148  085D  300B               	movlw	11
  7149  085E  2530  120A  158A   	fcall	_Send_To_MB
  7150                           
  7151                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.10");
  7152  0861  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7153  0862  1283               	bcf	3,5	;RP0=0, select bank0
  7154  0863  00A1               	movwf	USART_put_string@vetor
  7155  0864  3080               	movlw	128
  7156  0865  00A2               	movwf	USART_put_string@vetor+1
  7157  0866  2DC5               	ljmp	l6808
  7158  0867                     l7798:	
  7159                           ;SlaveLiofilizadorVer1.c: 346:              break;
  7160                           
  7161                           
  7162                           ;SlaveLiofilizadorVer1.c: 349:              if(usart_protocol.value[0]==0)
  7163  0867  1683               	bsf	3,5	;RP0=1, select bank3
  7164  0868  1703               	bsf	3,6	;RP1=1, select bank3
  7165  0869  0853               	movf	(_usart_protocol^(0+384)+6),w
  7166  086A  1D03               	btfss	3,2
  7167  086B  287A               	goto	l7802
  7168                           
  7169                           ;SlaveLiofilizadorVer1.c: 350:                 OutPut=Temperatura0;
  7170  086C  0817               	movf	(_Temperatura0+3)^(0+384),w
  7171  086D  1303               	bcf	3,6	;RP1=0, select bank1
  7172  086E  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7173  086F  1703               	bsf	3,6	;RP1=1, select bank3
  7174  0870  0816               	movf	(_Temperatura0+2)^(0+384),w
  7175  0871  1303               	bcf	3,6	;RP1=0, select bank1
  7176  0872  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7177  0873  1703               	bsf	3,6	;RP1=1, select bank3
  7178  0874  0815               	movf	(_Temperatura0+1)^(0+384),w
  7179  0875  1303               	bcf	3,6	;RP1=0, select bank1
  7180  0876  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7181  0877  1703               	bsf	3,6	;RP1=1, select bank3
  7182  0878  0814               	movf	_Temperatura0^(0+384),w
  7183  0879  2887               	goto	L8
  7184  087A                     l7802:	
  7185                           
  7186                           ;SlaveLiofilizadorVer1.c: 352:                 OutPut=Temperatura1;
  7187  087A  0813               	movf	(_Temperatura1+3)^(0+384),w
  7188  087B  1303               	bcf	3,6	;RP1=0, select bank1
  7189  087C  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7190  087D  1703               	bsf	3,6	;RP1=1, select bank3
  7191  087E  0812               	movf	(_Temperatura1+2)^(0+384),w
  7192  087F  1303               	bcf	3,6	;RP1=0, select bank1
  7193  0880  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7194  0881  1703               	bsf	3,6	;RP1=1, select bank3
  7195  0882  0811               	movf	(_Temperatura1+1)^(0+384),w
  7196  0883  1303               	bcf	3,6	;RP1=0, select bank1
  7197  0884  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7198  0885  1703               	bsf	3,6	;RP1=1, select bank3
  7199  0886  0810               	movf	_Temperatura1^(0+384),w
  7200  0887                     L8:	
  7201  0887  1303               	bcf	3,6	;RP1=0, select bank1
  7202  0888  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7203                           
  7204                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  7205  0889  3041               	movlw	65
  7206  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7207  088B  00D8               	movwf	___flmul@b+3
  7208  088C  3020               	movlw	32
  7209  088D  00D7               	movwf	___flmul@b+2
  7210  088E  01D6               	clrf	___flmul@b+1
  7211  088F  01D5               	clrf	___flmul@b
  7212  0890  1683               	bsf	3,5	;RP0=1, select bank1
  7213  0891  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7214  0892  1283               	bcf	3,5	;RP0=0, select bank0
  7215  0893  00DC               	movwf	___flmul@a+3
  7216  0894  1683               	bsf	3,5	;RP0=1, select bank1
  7217  0895  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7218  0896  1283               	bcf	3,5	;RP0=0, select bank0
  7219  0897  00DB               	movwf	___flmul@a+2
  7220  0898  1683               	bsf	3,5	;RP0=1, select bank1
  7221  0899  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7222  089A  1283               	bcf	3,5	;RP0=0, select bank0
  7223  089B  00DA               	movwf	___flmul@a+1
  7224  089C  1683               	bsf	3,5	;RP0=1, select bank1
  7225  089D  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7226  089E  1283               	bcf	3,5	;RP0=0, select bank0
  7227  089F  00D9               	movwf	___flmul@a
  7228  08A0  23DC  120A  158A   	fcall	___flmul
  7229  08A3  0858               	movf	?___flmul+3,w
  7230  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  7231  08A5  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7232  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  7233  08A7  0857               	movf	?___flmul+2,w
  7234  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  7235  08A9  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7236  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  7237  08AB  0856               	movf	?___flmul+1,w
  7238  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  7239  08AD  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7240  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  7241  08AF  0855               	movf	?___flmul,w
  7242  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  7243  08B1  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7244                           
  7245                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  7246  08B2  138B               	bcf	11,7	;volatile
  7247                           
  7248                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  7249  08B3  3002               	movlw	2
  7250  08B4  2530               	fcall	_Send_To_MB
  7251                           
  7252                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  7253  08B5  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7254  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  7255  08B7  00A3               	movwf	___fltol@f1+3
  7256  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  7257  08B9  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7258  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  7259  08BB  00A2               	movwf	___fltol@f1+2
  7260  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  7261  08BD  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7262  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7263  08BF  00A1               	movwf	___fltol@f1+1
  7264  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  7265  08C1  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7266  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7267  08C3  00A0               	movwf	___fltol@f1
  7268  08C4  120A  118A  2658  120A  158A  	fcall	___fltol
  7269  08C9  0821               	movf	?___fltol+1,w
  7270  08CA  00AB               	movwf	USART_put_int@value+1
  7271  08CB  0820               	movf	?___fltol,w
  7272  08CC  00AA               	movwf	USART_put_int@value
  7273  08CD  2704               	fcall	_USART_put_int
  7274                           
  7275                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  7276  08CE  178B               	bsf	11,7	;volatile
  7277                           
  7278                           ;SlaveLiofilizadorVer1.c: 375:              break;
  7279  08CF  0008               	return
  7280  08D0                     l7814:	
  7281                           
  7282                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  7283  08D0  1683               	bsf	3,5	;RP0=1, select bank3
  7284  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7285  08D2  0853               	movf	(_usart_protocol^(0+384)+6),w
  7286  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7287  08D4  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7288                           
  7289                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  7290  08D5  1703               	bsf	3,6	;RP1=1, select bank3
  7291  08D6  0854               	movf	(_usart_protocol^(0+384)+7),w
  7292  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  7293  08D8  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7294                           
  7295                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  7296  08D9  1703               	bsf	3,6	;RP1=1, select bank3
  7297  08DA  0855               	movf	(_usart_protocol^(0+384)+8),w
  7298  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  7299  08DC  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7300                           
  7301                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  7302  08DD  1703               	bsf	3,6	;RP1=1, select bank3
  7303  08DE  0856               	movf	(_usart_protocol^(0+384)+9),w
  7304  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  7305  08E0  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7306                           
  7307                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  7308  08E1  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7309  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7310  08E3  00BC               	movwf	Save_Log@add_datalog+3
  7311  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  7312  08E5  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7313  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  7314  08E7  00BB               	movwf	Save_Log@add_datalog+2
  7315  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  7316  08E9  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7317  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  7318  08EB  00BA               	movwf	Save_Log@add_datalog+1
  7319  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  7320  08ED  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7321  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  7322  08EF  00B9               	movwf	Save_Log@add_datalog
  7323  08F0  120A  118A  2604   	fcall	_Save_Log
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  7326  08F3  1683               	bsf	3,5	;RP0=1, select bank3
  7327  08F4  1703               	bsf	3,6	;RP1=1, select bank3
  7328  08F5  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  7329  08F6  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  7330                           
  7331                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  7332  08F7  01AA               	clrf	_milisegundo^(0+384)	;volatile
  7333  08F8  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  7334                           
  7335                           ;SlaveLiofilizadorVer1.c: 387:              break;
  7336  08F9  0008               	return
  7337  08FA                     l7822:	
  7338                           
  7339                           ;SlaveLiofilizadorVer1.c: 391:              if(usart_protocol.value[0]==0)
  7340  08FA  1683               	bsf	3,5	;RP0=1, select bank3
  7341  08FB  1703               	bsf	3,6	;RP1=1, select bank3
  7342  08FC  0853               	movf	(_usart_protocol^(0+384)+6),w
  7343  08FD  1D03               	btfss	3,2
  7344  08FE  2901               	goto	l438
  7345                           
  7346                           ;SlaveLiofilizadorVer1.c: 392:                 generic_status.flag_global_hot=0;
  7347  08FF  133C               	bcf	_generic_status^(0+384),6
  7348  0900  0008               	return
  7349  0901                     l438:	
  7350                           ;SlaveLiofilizadorVer1.c: 393:              else
  7351                           
  7352                           
  7353                           ;SlaveLiofilizadorVer1.c: 394:                 generic_status.flag_global_hot=1;
  7354  0901  173C               	bsf	_generic_status^(0+384),6
  7355  0902  0008               	return
  7356  0903                     l7826:	
  7357                           
  7358                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  7359  0903  3002               	movlw	2
  7360  0904  2530  120A  158A   	fcall	_Send_To_MB
  7361                           
  7362                           ;SlaveLiofilizadorVer1.c: 409:              USART_put_int(3);
  7363  0907  3003               	movlw	3
  7364  0908  1283               	bcf	3,5	;RP0=0, select bank0
  7365  0909  00AA               	movwf	USART_put_int@value
  7366  090A  01AB               	clrf	USART_put_int@value+1
  7367  090B  2F04               	ljmp	l6524
  7368  090C                     l7830:	
  7369                           ;SlaveLiofilizadorVer1.c: 411:              break;
  7370                           
  7371                           
  7372                           ;SlaveLiofilizadorVer1.c: 420:              Send_To_MB(3);
  7373  090C  3003               	movlw	3
  7374  090D  2530  120A  158A   	fcall	_Send_To_MB
  7375                           
  7376                           ;SlaveLiofilizadorVer1.c: 421:              Send_Reply_OK();
  7377  0910  2713  120A  158A   	fcall	_Send_Reply_OK
  7378                           
  7379                           ;SlaveLiofilizadorVer1.c: 422:              Load_Work();
  7380  0913  2DF0               	ljmp	l7356
  7381  0914                     l7836:	
  7382                           ;SlaveLiofilizadorVer1.c: 423:              break;
  7383                           
  7384                           
  7385                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  7386  0914  1683               	bsf	3,5	;RP0=1, select bank3
  7387  0915  1703               	bsf	3,6	;RP1=1, select bank3
  7388  0916  0854               	movf	(_usart_protocol^(0+384)+7),w
  7389  0917  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0918  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0919  00A0               	movwf	EEPROM_Write_Byte@dado
  7392  091A  1683               	bsf	3,5	;RP0=1, select bank3
  7393  091B  1703               	bsf	3,6	;RP1=1, select bank3
  7394  091C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7395  091D  160A  158A  265C  120A  158A  	fcall	_EEPROM_Write_Byte
  7396  0922                     L9:	
  7397                           
  7398                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  7399  0922  3003               	movlw	3
  7400  0923  2530  120A  158A   	fcall	_Send_To_MB
  7401                           
  7402                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  7403  0926  2F13               	ljmp	l7404
  7404  0927                     l7840:	
  7405                           ;SlaveLiofilizadorVer1.c: 432:              break;
  7406                           
  7407                           
  7408                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  7409  0927  1683               	bsf	3,5	;RP0=1, select bank3
  7410  0928  1703               	bsf	3,6	;RP1=1, select bank3
  7411  0929  0853               	movf	(_usart_protocol^(0+384)+6),w
  7412  092A  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  7413  092D  1683               	bsf	3,5	;RP0=1, select bank1
  7414  092E  1303               	bcf	3,6	;RP1=0, select bank1
  7415  092F  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7416                           
  7417                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  7418  0930  3001               	movlw	1
  7419  0931  2530  120A  158A   	fcall	_Send_To_MB
  7420                           
  7421                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  7422  0934  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7423  0935  2D87               	ljmp	_USART_putc
  7424  0936                     l7846:	
  7425                           ;SlaveLiofilizadorVer1.c: 437:              break;
  7426                           
  7427                           
  7428                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  7429  0936  1683               	bsf	3,5	;RP0=1, select bank3
  7430  0937  1703               	bsf	3,6	;RP1=1, select bank3
  7431  0938  0853               	movf	(_usart_protocol^(0+384)+6),w
  7432  0939  1303               	bcf	3,6	;RP1=0, select bank1
  7433  093A  00DD               	movwf	Decodify_Command@add^(0+128)
  7434                           
  7435                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  7436  093B  1703               	bsf	3,6	;RP1=1, select bank3
  7437  093C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7438  093D  1303               	bcf	3,6	;RP1=0, select bank1
  7439  093E  00DC               	movwf	(Decodify_Command@dados+1)^(0+128)
  7440  093F  1703               	bsf	3,6	;RP1=1, select bank3
  7441  0940  0855               	movf	(_usart_protocol^(0+384)+8),w
  7442  0941  1303               	bcf	3,6	;RP1=0, select bank1
  7443  0942  00DB               	movwf	Decodify_Command@dados^(0+128)
  7444                           
  7445                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  7446  0943  085C               	movf	(Decodify_Command@dados+1)^(0+128),w
  7447  0944  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0945  00A6               	movwf	EEPROM_Write_Integer@dado+1
  7449  0946  1683               	bsf	3,5	;RP0=1, select bank1
  7450  0947  085B               	movf	Decodify_Command@dados^(0+128),w
  7451  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7452  0949  00A5               	movwf	EEPROM_Write_Integer@dado
  7453  094A  1683               	bsf	3,5	;RP0=1, select bank1
  7454  094B  085D               	movf	Decodify_Command@add^(0+128),w
  7455  094C  160A  158A  2621  120A  158A  	fcall	_EEPROM_Write_Integer
  7456  0951  2922               	goto	L9
  7457  0952                     l7854:	
  7458                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  7459                           
  7460                           
  7461                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  7462  0952  1683               	bsf	3,5	;RP0=1, select bank3
  7463  0953  1703               	bsf	3,6	;RP1=1, select bank3
  7464  0954  0853               	movf	(_usart_protocol^(0+384)+6),w
  7465  0955  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  7466  0958  0824               	movf	?_EEPROM_Read_Integer+1,w
  7467  0959  1683               	bsf	3,5	;RP0=1, select bank1
  7468  095A  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7469  095B  1283               	bcf	3,5	;RP0=0, select bank0
  7470  095C  0823               	movf	?_EEPROM_Read_Integer,w
  7471  095D                     L10:	
  7472  095D  1683               	bsf	3,5	;RP0=1, select bank1
  7473  095E  00DE               	movwf	Decodify_Command@tempint^(0+128)
  7474                           
  7475                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  7476  095F  3002               	movlw	2
  7477  0960  2530  120A  158A   	fcall	_Send_To_MB
  7478                           
  7479                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  7480  0963  085F               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7481  0964  1283               	bcf	3,5	;RP0=0, select bank0
  7482  0965  00AB               	movwf	USART_put_int@value+1
  7483  0966  1683               	bsf	3,5	;RP0=1, select bank1
  7484  0967  085E               	movf	Decodify_Command@tempint^(0+128),w
  7485  0968  1283               	bcf	3,5	;RP0=0, select bank0
  7486  0969  00AA               	movwf	USART_put_int@value
  7487  096A  2F04               	ljmp	l6524
  7488  096B                     l7860:	
  7489                           ;SlaveLiofilizadorVer1.c: 452:              break;
  7490                           
  7491                           
  7492                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  7493  096B  30D4               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7494  096C  00A5               	movwf	EEPROM_Write_String@dado
  7495  096D  1683               	bsf	3,5	;RP0=1, select bank3
  7496  096E  1703               	bsf	3,6	;RP1=1, select bank3
  7497  096F  0853               	movf	(_usart_protocol^(0+384)+6),w
  7498  0970  160A  158A  2644  120A  158A  	fcall	_EEPROM_Write_String
  7499  0975  2922               	goto	L9
  7500  0976                     l7866:	
  7501                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  7502                           
  7503                           
  7504                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  7505  0976  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7506  0977  00A3               	movwf	EEPROM_Read_String@dado
  7507  0978  1683               	bsf	3,5	;RP0=1, select bank3
  7508  0979  1703               	bsf	3,6	;RP1=1, select bank3
  7509  097A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7510  097B  120A  118A  27E6  120A  158A  	fcall	_EEPROM_Read_String
  7511                           
  7512                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  7513  0980  3010               	movlw	16
  7514  0981                     L11:	
  7515  0981  2530  120A  158A   	fcall	_Send_To_MB
  7516                           
  7517                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  7518  0984  2796  120A  158A   	fcall	PL70	;call to abstracted procedure
  7519  0987  2DC5               	ljmp	l6808
  7520  0988                     l7872:	
  7521                           ;SlaveLiofilizadorVer1.c: 466:              break;
  7522                           
  7523                           
  7524                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7525  0988  1683               	bsf	3,5	;RP0=1, select bank1
  7526  0989  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7527  098A  1283               	bcf	3,5	;RP0=0, select bank0
  7528  098B  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7529  098C  1683               	bsf	3,5	;RP0=1, select bank1
  7530  098D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7531  098E  1283               	bcf	3,5	;RP0=0, select bank0
  7532  098F  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7533  0990  1683               	bsf	3,5	;RP0=1, select bank1
  7534  0991  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7535  0992  1283               	bcf	3,5	;RP0=0, select bank0
  7536  0993  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7537  0994  1683               	bsf	3,5	;RP0=1, select bank1
  7538  0995  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7539  0996  1283               	bcf	3,5	;RP0=0, select bank0
  7540  0997  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7541  0998  1683               	bsf	3,5	;RP0=1, select bank3
  7542  0999  1703               	bsf	3,6	;RP1=1, select bank3
  7543  099A  0858               	movf	(_usart_protocol^(0+384)+11),w
  7544  099B  1283               	bcf	3,5	;RP0=0, select bank0
  7545  099C  1303               	bcf	3,6	;RP1=0, select bank0
  7546  099D  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  7547  099E  1683               	bsf	3,5	;RP0=1, select bank3
  7548  099F  1703               	bsf	3,6	;RP1=1, select bank3
  7549  09A0  0853               	movf	(_usart_protocol^(0+384)+6),w
  7550  09A1  160A  158A  2443  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  7551  09A6  2922               	goto	L9
  7552  09A7                     l7878:	
  7553                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  7554                           
  7555                           
  7556                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7557  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  7558  09A8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7559  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  7560  09AA  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7561  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  7562  09AC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7563  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  7564  09AE  00B3               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7565  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  7566  09B0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7567  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  7568  09B2  00B2               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7569  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  7570  09B4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7571  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  7572  09B6  00B1               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7573  09B7  1683               	bsf	3,5	;RP0=1, select bank3
  7574  09B8  1703               	bsf	3,6	;RP1=1, select bank3
  7575  09B9  0853               	movf	(_usart_protocol^(0+384)+6),w
  7576  09BA  120A  118A  2036  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  7577  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  7578  09C0  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7579                           
  7580                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  7581  09C1  3001               	movlw	1
  7582  09C2  2530  120A  158A   	fcall	_Send_To_MB
  7583                           
  7584                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  7585  09C5  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7586  09C6  2D87               	ljmp	_USART_putc
  7587  09C7                     l7884:	
  7588                           ;SlaveLiofilizadorVer1.c: 484:              break;
  7589                           
  7590                           
  7591                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7592  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  7593  09C8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7594  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7595  09CA  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7596  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  7597  09CC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7598  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  7599  09CE  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7600  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  7601  09D0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7602  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  7603  09D2  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7604  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  7605  09D4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7606  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  7607  09D6  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7608  09D7  1683               	bsf	3,5	;RP0=1, select bank3
  7609  09D8  1703               	bsf	3,6	;RP1=1, select bank3
  7610  09D9  0858               	movf	(_usart_protocol^(0+384)+11),w
  7611  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  7612  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  7613  09DC  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
  7614  09DD  1683               	bsf	3,5	;RP0=1, select bank3
  7615  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  7616  09DF  0859               	movf	(_usart_protocol^(0+384)+12),w
  7617  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  7618  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  7619  09E2  00B4               	movwf	EEPROM_24C1025_Write_Int@data
  7620  09E3  1683               	bsf	3,5	;RP0=1, select bank3
  7621  09E4  1703               	bsf	3,6	;RP1=1, select bank3
  7622  09E5  0853               	movf	(_usart_protocol^(0+384)+6),w
  7623  09E6  120A  118A  26A7  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7624  09EB  2922               	goto	L9
  7625  09EC                     l7890:	
  7626                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  7627                           
  7628                           
  7629                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7630  09EC  1683               	bsf	3,5	;RP0=1, select bank1
  7631  09ED  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7632  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  7633  09EF  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7634  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  7635  09F1  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7636  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  7637  09F3  00B3               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7638  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  7639  09F5  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7640  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  7641  09F7  00B2               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7642  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  7643  09F9  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7644  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  7645  09FB  00B1               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7646  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  7647  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  7648  09FE  0853               	movf	(_usart_protocol^(0+384)+6),w
  7649  09FF  120A  118A  204C  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  7650  0A04  0832               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7651  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  7652  0A06  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7653  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7654  0A08  0831               	movf	?_EEPROM_24C1025_Read_Int,w
  7655  0A09  295D               	goto	L10
  7656  0A0A                     l7896:	
  7657                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7658                           
  7659                           
  7660                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7661  0A0A  1683               	bsf	3,5	;RP0=1, select bank3
  7662  0A0B  1703               	bsf	3,6	;RP1=1, select bank3
  7663  0A0C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7664  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  7665  0A0E  00E5               	movwf	Decodify_Command@sizedata^(0+128)
  7666                           
  7667                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7668  0A0F  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7669  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  7670  0A11  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7671  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  7672  0A13  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7673  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7674  0A15  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7675  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7676  0A17  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7677  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7678  0A19  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7679  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7680  0A1B  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7681  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7682  0A1D  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7683  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7684  0A1F  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7685  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7686  0A21  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7687  0A22  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7688  0A23  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
  7689  0A24  3001               	movlw	1
  7690  0A25  00AA               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7691  0A26  1683               	bsf	3,5	;RP0=1, select bank3
  7692  0A27  1703               	bsf	3,6	;RP1=1, select bank3
  7693  0A28  0853               	movf	(_usart_protocol^(0+384)+6),w
  7694  0A29  120A  118A  21E7  120A  158A  	fcall	_EEPROM_24C1025_Read_Buffer
  7695                           
  7696                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7697  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  7698  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  7699  0A30  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7700  0A31  2530               	fcall	_Send_To_MB
  7701                           
  7702                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7703  0A32  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7704  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  7705  0A34  00A1               	movwf	USART_put_buffer@size
  7706  0A35  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7707  0A36  01A2               	clrf	USART_put_buffer@size+1
  7708  0A37  160A  158A  2C6C   	ljmp	_USART_put_buffer
  7709  0A3A                     l7904:	
  7710                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7711                           
  7712                           
  7713                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7714  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7715  0A3B  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7716  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7717  0A3D  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7718  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7719  0A3F  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7720  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7721  0A41  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7722  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  7723  0A43  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7724  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  7725  0A45  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7726  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7727  0A47  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7728  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7729  0A49  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7730  0A4A  1683               	bsf	3,5	;RP0=1, select bank3
  7731  0A4B  1703               	bsf	3,6	;RP1=1, select bank3
  7732  0A4C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7733  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  7735  0A4F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7736  0A50  30D9               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7737  0A51  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7738  0A52  3001               	movlw	1
  7739  0A53  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7740  0A54  1683               	bsf	3,5	;RP0=1, select bank3
  7741  0A55  1703               	bsf	3,6	;RP1=1, select bank3
  7742  0A56  0853               	movf	(_usart_protocol^(0+384)+6),w
  7743  0A57  120A  118A  22CA  120A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
  7744  0A5C  2922               	goto	L9
  7745  0A5D                     l7910:	
  7746                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7747                           
  7748                           
  7749                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7750  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  7751  0A5E  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7752  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  7753  0A60  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7754  0A61  1683               	bsf	3,5	;RP0=1, select bank1
  7755  0A62  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7756  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  7757  0A64  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7758  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  7759  0A66  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7760  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  7761  0A68  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7762  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  7763  0A6A  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7764  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  7765  0A6C  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7766  0A6D  30D8               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7767  0A6E  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  7768  0A6F  1683               	bsf	3,5	;RP0=1, select bank3
  7769  0A70  1703               	bsf	3,6	;RP1=1, select bank3
  7770  0A71  0853               	movf	(_usart_protocol^(0+384)+6),w
  7771  0A72  120A  118A  2065  120A  158A  	fcall	_EEPROM_24C1025_Write_Str
  7772  0A77  2922               	goto	L9
  7773  0A78                     l7916:	
  7774                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7775                           
  7776                           
  7777                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7778  0A78  1683               	bsf	3,5	;RP0=1, select bank1
  7779  0A79  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7780  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  7781  0A7B  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7782  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  7783  0A7D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7784  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  7785  0A7F  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7786  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  7787  0A81  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7788  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0A83  00A5               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7790  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  7791  0A85  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7792  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  7793  0A87  00A4               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7794  0A88  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7795  0A89  00A8               	movwf	EEPROM_24C1025_Read_Str@texto
  7796  0A8A  1683               	bsf	3,5	;RP0=1, select bank3
  7797  0A8B  1703               	bsf	3,6	;RP1=1, select bank3
  7798  0A8C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7799  0A8D  120A  118A  2102  120A  158A  	fcall	_EEPROM_24C1025_Read_Str
  7800                           
  7801                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7802  0A92  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7803  0A93  25B2  120A  158A   	fcall	_strlen
  7804  0A96  0820               	movf	?_strlen,w
  7805  0A97  2981               	goto	L11
  7806  0A98                     l7920:	
  7807                           
  7808                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7809  0A98  1683               	bsf	3,5	;RP0=1, select bank3
  7810  0A99  1703               	bsf	3,6	;RP1=1, select bank3
  7811  0A9A  0854               	movf	(_usart_protocol^(0+384)+7),w
  7812  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  7813  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  7814  0A9D  00B9               	movwf	EEPROM_24C1025_Fill_All@value
  7815  0A9E  01BA               	clrf	EEPROM_24C1025_Fill_All@value+1
  7816  0A9F  1683               	bsf	3,5	;RP0=1, select bank3
  7817  0AA0  1703               	bsf	3,6	;RP1=1, select bank3
  7818  0AA1  0853               	movf	(_usart_protocol^(0+384)+6),w
  7819  0AA2  120A  118A  25D2  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7820  0AA7  2922               	goto	L9
  7821  0AA8                     l7926:	
  7822                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7823                           
  7824                           
  7825                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7826  0AA8  0875               	movf	_hora,w	;volatile
  7827  0AA9  00AF               	movwf	itoa@val
  7828  0AAA  300A               	movlw	10
  7829  0AAB  01B0               	clrf	itoa@val+1
  7830  0AAC  00B1               	movwf	itoa@base
  7831  0AAD  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7832  0AAE  01B2               	clrf	itoa@base+1
  7833  0AAF  2598  120A  158A   	fcall	_itoa
  7834                           
  7835                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7836  0AB2  1683               	bsf	3,5	;RP0=1, select bank3
  7837  0AB3  1703               	bsf	3,6	;RP1=1, select bank3
  7838  0AB4  083B               	movf	_minuto^(0+384),w	;volatile
  7839  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  7840  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  7841  0AB7  00AF               	movwf	itoa@val
  7842  0AB8  300A               	movlw	10
  7843  0AB9  01B0               	clrf	itoa@val+1
  7844  0ABA  00B1               	movwf	itoa@base
  7845  0ABB  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7846  0ABC  01B2               	clrf	itoa@base+1
  7847  0ABD  2598  120A  158A   	fcall	_itoa
  7848                           
  7849                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7850  0AC0  0876               	movf	_segundo,w	;volatile
  7851  0AC1  00AF               	movwf	itoa@val
  7852  0AC2  300A               	movlw	10
  7853  0AC3  01B0               	clrf	itoa@val+1
  7854  0AC4  00B1               	movwf	itoa@base
  7855  0AC5  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7856  0AC6  01B2               	clrf	itoa@base+1
  7857  0AC7  2598               	fcall	_itoa
  7858                           
  7859                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7860  0AC8  3034               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
  7861  0AC9  00A0               	movwf	strcpy@from
  7862  0ACA  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7863  0ACB  160A  158A  2457  120A  158A  	fcall	_strcpy
  7864                           
  7865                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7866  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  7867  0AD1  083E               	movf	(Decodify_Command@hh^(0+128)+1),w
  7868  0AD2  1D03               	btfss	3,2
  7869  0AD3  2ADC               	goto	l7934
  7870                           
  7871                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7872  0AD4  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7873  0AD7  2567  120A  158A   	fcall	_strcat
  7874                           
  7875                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7876  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  7877  0ADB  01BF               	clrf	(Decodify_Command@hh^(0+128)+2)
  7878  0ADC                     l7934:	
  7879                           
  7880                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7881  0ADC  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7882  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  7883  0ADE  00A0               	movwf	strcat@from
  7884  0ADF  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7885  0AE0  01A1               	clrf	strcat@from+1
  7886  0AE1  2567  120A  158A   	fcall	_strcat
  7887                           
  7888                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7889  0AE4  2791  120A  158A   	fcall	PL66	;call to abstracted procedure
  7890  0AE7  2567  120A  158A   	fcall	_strcat
  7891                           
  7892                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7893  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  7894  0AEB  0848               	movf	(Decodify_Command@mm^(0+128)+1),w
  7895  0AEC  1D03               	btfss	3,2
  7896  0AED  2AF6               	goto	l7944
  7897                           
  7898                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7899  0AEE  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7900  0AF1  2567  120A  158A   	fcall	_strcat
  7901                           
  7902                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7903  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  7904  0AF5  01C9               	clrf	(Decodify_Command@mm^(0+128)+2)
  7905  0AF6                     l7944:	
  7906                           
  7907                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7908  0AF6  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7909  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  7910  0AF8  00A0               	movwf	strcat@from
  7911  0AF9  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7912  0AFA  01A1               	clrf	strcat@from+1
  7913  0AFB  2567  120A  158A   	fcall	_strcat
  7914                           
  7915                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7916  0AFE  2791  120A  158A   	fcall	PL66	;call to abstracted procedure
  7917  0B01  2567  120A  158A   	fcall	_strcat
  7918                           
  7919                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7920  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  7921  0B05  0852               	movf	(Decodify_Command@ss^(0+128)+1),w
  7922  0B06  1D03               	btfss	3,2
  7923  0B07  2B10               	goto	l7954
  7924                           
  7925                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7926  0B08  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7927  0B0B  2567  120A  158A   	fcall	_strcat
  7928                           
  7929                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7930  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  7931  0B0F  01D3               	clrf	(Decodify_Command@ss^(0+128)+2)
  7932  0B10                     l7954:	
  7933                           
  7934                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7935  0B10  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7936  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7937  0B12  00A0               	movwf	strcat@from
  7938  0B13  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7939  0B14  01A1               	clrf	strcat@from+1
  7940  0B15  2567  120A  158A   	fcall	_strcat
  7941                           
  7942                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7943  0B18  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7944  0B19  25B2  120A  158A   	fcall	_strlen
  7945  0B1C  0820               	movf	?_strlen,w
  7946  0B1D  2530  120A  158A   	fcall	_Send_To_MB
  7947                           
  7948                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7949  0B20  2796  120A  158A   	fcall	PL70	;call to abstracted procedure
  7950  0B23  25C5  120A  158A   	fcall	_USART_put_string
  7951                           
  7952                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7953  0B26  3000               	movlw	0
  7954  0B27  2D87               	ljmp	_USART_putc
  7955  0B28                     l7962:	
  7956                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7957                           
  7958                           
  7959                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7960  0B28  1683               	bsf	3,5	;RP0=1, select bank3
  7961  0B29  1703               	bsf	3,6	;RP1=1, select bank3
  7962  0B2A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7963  0B2B  00F5               	movwf	_hora	;volatile
  7964                           
  7965                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7966  0B2C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7967  0B2D  00BB               	movwf	_minuto^(0+384)	;volatile
  7968                           
  7969                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7970  0B2E  0855               	movf	(_usart_protocol^(0+384)+8),w
  7971  0B2F  00F6               	movwf	_segundo	;volatile
  7972  0B30  2922               	goto	L9
  7973  0B31                     l7968:	
  7974                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7975                           
  7976                           
  7977                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7978  0B31  1683               	bsf	3,5	;RP0=1, select bank3
  7979  0B32  1703               	bsf	3,6	;RP1=1, select bank3
  7980  0B33  0853               	movf	(_usart_protocol^(0+384)+6),w
  7981  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7982  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7983  0B36  00B1               	movwf	PROCULUS_Show_Screen@screen
  7984  0B37  01B2               	clrf	PROCULUS_Show_Screen@screen+1
  7985  0B38  279C  120A  158A   	fcall	_PROCULUS_Show_Screen
  7986  0B3B  2922               	goto	L9
  7987  0B3C                     l7974:	
  7988                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7989                           
  7990                           
  7991                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7992  0B3C  1683               	bsf	3,5	;RP0=1, select bank3
  7993  0B3D  1703               	bsf	3,6	;RP1=1, select bank3
  7994  0B3E  0853               	movf	(_usart_protocol^(0+384)+6),w
  7995  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7996  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7997  0B41  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7998  0B42  1683               	bsf	3,5	;RP0=1, select bank3
  7999  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  8000  0B44  0854               	movf	(_usart_protocol^(0+384)+7),w
  8001  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  8002  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  8003  0B47  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8004  0B48  27A6  120A  158A   	fcall	_PROCULUS_Buzzer
  8005  0B4B  2922               	goto	L9
  8006  0B4C                     l7980:	
  8007                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  8008                           
  8009                           
  8010                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  8011  0B4C  1683               	bsf	3,5	;RP0=1, select bank3
  8012  0B4D  1703               	bsf	3,6	;RP1=1, select bank3
  8013  0B4E  0853               	movf	(_usart_protocol^(0+384)+6),w
  8014  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  8015  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  8016  0B51  00B6               	movwf	PROCULUS_VP_Write_String@vp+1
  8017  0B52  1683               	bsf	3,5	;RP0=1, select bank3
  8018  0B53  1703               	bsf	3,6	;RP1=1, select bank3
  8019  0B54  0854               	movf	(_usart_protocol^(0+384)+7),w
  8020  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8021  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  8022  0B57  00B5               	movwf	PROCULUS_VP_Write_String@vp
  8023  0B58  30D5               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  8024  0B59  00B7               	movwf	PROCULUS_VP_Write_String@text
  8025  0B5A  160A  158A  2431  120A  158A  	fcall	_PROCULUS_VP_Write_String
  8026  0B5F  2922               	goto	L9
  8027  0B60                     l7986:	
  8028                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  8029                           
  8030                           
  8031                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  8032  0B60  1683               	bsf	3,5	;RP0=1, select bank3
  8033  0B61  1703               	bsf	3,6	;RP1=1, select bank3
  8034  0B62  0853               	movf	(_usart_protocol^(0+384)+6),w
  8035  0B63  1D03               	btfss	3,2
  8036  0B64  2B70               	goto	l7992
  8037                           
  8038                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  8039  0B65  0854               	movf	(_usart_protocol^(0+384)+7),w
  8040  0B66  1D03               	btfss	3,2
  8041  0B67  2B6C               	goto	l467
  8042                           
  8043                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  8044  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  8045  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  8046  0B6A  1007               	bcf	7,0	;volatile
  8047  0B6B  2922               	goto	L9
  8048  0B6C                     l467:	
  8049                           ;SlaveLiofilizadorVer1.c: 627:                 else
  8050                           
  8051                           
  8052                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  8053  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  8054  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  8055  0B6E  1407               	bsf	7,0	;volatile
  8056  0B6F  2922               	goto	L9
  8057  0B70                     l7992:	
  8058  0B70  0B53               	decfsz	(_usart_protocol^(0+384)+6),w
  8059  0B71  2922               	goto	L9
  8060                           
  8061                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  8062  0B72  0854               	movf	(_usart_protocol^(0+384)+7),w
  8063  0B73  1D03               	btfss	3,2
  8064  0B74  2B79               	goto	l471
  8065                           
  8066                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  8067  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  8068  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  8069  0B77  1087               	bcf	7,1	;volatile
  8070  0B78  2922               	goto	L9
  8071  0B79                     l471:	
  8072                           ;SlaveLiofilizadorVer1.c: 634:                       else
  8073                           
  8074                           
  8075                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  8076  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  8077  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  8078  0B7B  1487               	bsf	7,1	;volatile
  8079  0B7C  2922               	goto	L9
  8080  0B7D                     l8004:	
  8081                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  8082                           
  8083  0B7D  1703               	bsf	3,6	;RP1=1, select bank3
  8084  0B7E  0851               	movf	(_usart_protocol^(0+384)+4),w
  8085  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8086  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  8087  0B81  00EE               	movwf	??_Decodify_Command
  8088  0B82  01EF               	clrf	??_Decodify_Command+1
  8089                           
  8090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8091                           ; Switch size 1, requested type "space"
  8092                           ; Number of cases is 1, Range of values is 0 to 0
  8093                           ; switch strategies available:
  8094                           ; Name         Instructions Cycles
  8095                           ; simple_byte            4     3 (average)
  8096                           ; direct_byte           11     8 (fixed)
  8097                           ; jumptable            260     6 (fixed)
  8098                           ;	Chosen strategy is simple_byte
  8099  0B83  086F               	movf	??_Decodify_Command+1,w
  8100  0B84  3A00               	xorlw	0	; case 0
  8101  0B85  1903               	skipnz
  8102  0B86  2B88               	goto	l8168
  8103  0B87  2BDB               	goto	l473
  8104  0B88                     l8168:	
  8105                           
  8106                           ; Switch size 1, requested type "space"
  8107                           ; Number of cases is 27, Range of values is 1 to 43
  8108                           ; switch strategies available:
  8109                           ; Name         Instructions Cycles
  8110                           ; simple_byte           82    42 (average)
  8111                           ; direct_byte          140    11 (fixed)
  8112                           ; jumptable            263     9 (fixed)
  8113                           ;	Chosen strategy is simple_byte
  8114  0B88  086E               	movf	??_Decodify_Command,w
  8115  0B89  3A01               	xorlw	1	; case 1
  8116  0B8A  1903               	skipnz
  8117  0B8B  290C               	goto	l7830
  8118  0B8C  3A03               	xorlw	3	; case 2
  8119  0B8D  1903               	skipnz
  8120  0B8E  28D0               	goto	l7814
  8121  0B8F  3A01               	xorlw	1	; case 3
  8122  0B90  1903               	skipnz
  8123  0B91  2903               	goto	l7826
  8124  0B92  3A0B               	xorlw	11	; case 8
  8125  0B93  1903               	skipnz
  8126  0B94  2914               	goto	l7836
  8127  0B95  3A01               	xorlw	1	; case 9
  8128  0B96  1903               	skipnz
  8129  0B97  2927               	goto	l7840
  8130  0B98  3A03               	xorlw	3	; case 10
  8131  0B99  1903               	skipnz
  8132  0B9A  2936               	goto	l7846
  8133  0B9B  3A01               	xorlw	1	; case 11
  8134  0B9C  1903               	skipnz
  8135  0B9D  2952               	goto	l7854
  8136  0B9E  3A07               	xorlw	7	; case 12
  8137  0B9F  1903               	skipnz
  8138  0BA0  296B               	goto	l7860
  8139  0BA1  3A01               	xorlw	1	; case 13
  8140  0BA2  1903               	skipnz
  8141  0BA3  2976               	goto	l7866
  8142  0BA4  3A1C               	xorlw	28	; case 17
  8143  0BA5  1903               	skipnz
  8144  0BA6  2988               	goto	l7872
  8145  0BA7  3A03               	xorlw	3	; case 18
  8146  0BA8  1903               	skipnz
  8147  0BA9  29A7               	goto	l7878
  8148  0BAA  3A01               	xorlw	1	; case 19
  8149  0BAB  1903               	skipnz
  8150  0BAC  29C7               	goto	l7884
  8151  0BAD  3A07               	xorlw	7	; case 20
  8152  0BAE  1903               	skipnz
  8153  0BAF  29EC               	goto	l7890
  8154  0BB0  3A01               	xorlw	1	; case 21
  8155  0BB1  1903               	skipnz
  8156  0BB2  2A5D               	goto	l7910
  8157  0BB3  3A03               	xorlw	3	; case 22
  8158  0BB4  1903               	skipnz
  8159  0BB5  2A78               	goto	l7916
  8160  0BB6  3A01               	xorlw	1	; case 23
  8161  0BB7  1903               	skipnz
  8162  0BB8  2A3A               	goto	l7904
  8163  0BB9  3A0F               	xorlw	15	; case 24
  8164  0BBA  1903               	skipnz
  8165  0BBB  2A0A               	goto	l7896
  8166  0BBC  3A01               	xorlw	1	; case 25
  8167  0BBD  1903               	skipnz
  8168  0BBE  2A98               	goto	l7920
  8169  0BBF  3A03               	xorlw	3	; case 26
  8170  0BC0  1903               	skipnz
  8171  0BC1  2867               	goto	l7798
  8172  0BC2  3A04               	xorlw	4	; case 30
  8173  0BC3  1903               	skipnz
  8174  0BC4  2B28               	goto	l7962
  8175  0BC5  3A01               	xorlw	1	; case 31
  8176  0BC6  1903               	skipnz
  8177  0BC7  2AA8               	goto	l7926
  8178  0BC8  3A3F               	xorlw	63	; case 32
  8179  0BC9  1903               	skipnz
  8180  0BCA  2B31               	goto	l7968
  8181  0BCB  3A01               	xorlw	1	; case 33
  8182  0BCC  1903               	skipnz
  8183  0BCD  2B3C               	goto	l7974
  8184  0BCE  3A05               	xorlw	5	; case 36
  8185  0BCF  1903               	skipnz
  8186  0BD0  2B4C               	goto	l7980
  8187  0BD1  3A02               	xorlw	2	; case 38
  8188  0BD2  1903               	skipnz
  8189  0BD3  2B60               	goto	l7986
  8190  0BD4  3A0C               	xorlw	12	; case 42
  8191  0BD5  1903               	skipnz
  8192  0BD6  28FA               	goto	l7822
  8193  0BD7  3A01               	xorlw	1	; case 43
  8194  0BD8  1903               	skipnz
  8195  0BD9  285D               	goto	l7794
  8196  0BDA  2BDB               	goto	l473
  8197  0BDB                     l473:	
  8198  0BDB  0008               	return
  8199  0BDC                     __end_of_Decodify_Command:	
  8200  0BDC                     __ptext20:	
  8201 ;; *************** function ___flmul *****************
  8202 ;; Defined at:
  8203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  b               4   53[BANK0 ] unsigned int 
  8206 ;;  a               4   57[BANK0 ] unsigned int 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  prod            4   72[BANK0 ] struct .
  8209 ;;  grs             4   68[BANK0 ] unsigned long 
  8210 ;;  temp            2   76[BANK0 ] struct .
  8211 ;;  bexp            1   67[BANK0 ] unsigned char 
  8212 ;;  aexp            1   66[BANK0 ] unsigned char 
  8213 ;;  sign            1   65[BANK0 ] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  4   53[BANK0 ] unsigned char 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 300/0
  8220 ;;		On exit  : 300/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8223 ;;      Params:         0       8       0       0       0
  8224 ;;      Locals:         0      13       0       0       0
  8225 ;;      Temps:          0       4       0       0       0
  8226 ;;      Totals:         0      25       0       0       0
  8227 ;;Total ram usage:       25 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    2
  8230 ;; This function calls:
  8231 ;;		__Umul8_16
  8232 ;; This function is called by:
  8233 ;;		_Decodify_Command
  8234 ;;		_ADC_Read_NTC
  8235 ;;		_log
  8236 ;;		_eval_poly
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function ___flmul
  8242  0BDC                     ___flmul:	
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8246  0BDC  0858               	movf	___flmul@b+3,w
  8247  0BDD  00E1               	movwf	___flmul@sign
  8248  0BDE  3080               	movlw	128
  8249  0BDF  05E1               	andwf	___flmul@sign,f
  8250  0BE0  1003               	clrc
  8251  0BE1  0D58               	rlf	___flmul@b+3,w
  8252  0BE2  00E3               	movwf	___flmul@bexp
  8253  0BE3  1BD7               	btfsc	___flmul@b+2,7
  8254  0BE4  1463               	bsf	___flmul@bexp,0
  8255  0BE5  0863               	movf	___flmul@bexp,w
  8256  0BE6  1903               	btfsc	3,2
  8257  0BE7  2BF0               	goto	l1416
  8258  0BE8  0F63               	incfsz	___flmul@bexp,w
  8259  0BE9  2BEE               	goto	l1417
  8260  0BEA  01D5               	clrf	___flmul@b
  8261  0BEB  01D6               	clrf	___flmul@b+1
  8262  0BEC  01D7               	clrf	___flmul@b+2
  8263  0BED  01D8               	clrf	___flmul@b+3
  8264  0BEE                     l1417:	
  8265  0BEE  17D7               	bsf	___flmul@b+2,7
  8266  0BEF  2BF4               	goto	l6310
  8267  0BF0                     l1416:	
  8268  0BF0  01D5               	clrf	___flmul@b
  8269  0BF1  01D6               	clrf	___flmul@b+1
  8270  0BF2  01D7               	clrf	___flmul@b+2
  8271  0BF3  01D8               	clrf	___flmul@b+3
  8272  0BF4                     l6310:	
  8273  0BF4  085C               	movf	___flmul@a+3,w
  8274  0BF5  3980               	andlw	128
  8275  0BF6  06E1               	xorwf	___flmul@sign,f
  8276  0BF7  1003               	clrc
  8277  0BF8  0D5C               	rlf	___flmul@a+3,w
  8278  0BF9  00E2               	movwf	___flmul@aexp
  8279  0BFA  1BDB               	btfsc	___flmul@a+2,7
  8280  0BFB  1462               	bsf	___flmul@aexp,0
  8281  0BFC  0862               	movf	___flmul@aexp,w
  8282  0BFD  1903               	btfsc	3,2
  8283  0BFE  2C07               	goto	l1420
  8284  0BFF  0F62               	incfsz	___flmul@aexp,w
  8285  0C00  2C05               	goto	l1421
  8286  0C01  01D9               	clrf	___flmul@a
  8287  0C02  01DA               	clrf	___flmul@a+1
  8288  0C03  01DB               	clrf	___flmul@a+2
  8289  0C04  01DC               	clrf	___flmul@a+3
  8290  0C05                     l1421:	
  8291  0C05  17DB               	bsf	___flmul@a+2,7
  8292  0C06  2C0B               	goto	l6322
  8293  0C07                     l1420:	
  8294  0C07  01D9               	clrf	___flmul@a
  8295  0C08  01DA               	clrf	___flmul@a+1
  8296  0C09  01DB               	clrf	___flmul@a+2
  8297  0C0A  01DC               	clrf	___flmul@a+3
  8298  0C0B                     l6322:	
  8299  0C0B  0862               	movf	___flmul@aexp,w
  8300  0C0C  1D03               	btfss	3,2
  8301  0C0D  0863               	movf	___flmul@bexp,w
  8302  0C0E  1D03               	btfss	3,2
  8303  0C0F  2C15               	goto	l6326
  8304  0C10  01D5               	clrf	?___flmul
  8305  0C11  01D6               	clrf	?___flmul+1
  8306  0C12  01D7               	clrf	?___flmul+2
  8307  0C13  01D8               	clrf	?___flmul+3
  8308  0C14  0008               	return
  8309  0C15                     l6326:	
  8310  0C15  0855               	movf	___flmul@b,w
  8311  0C16  00A0               	movwf	__Umul8_16@multiplicand
  8312  0C17  085B               	movf	___flmul@a+2,w
  8313  0C18  254C  120A  158A   	fcall	__Umul8_16
  8314  0C1B  0821               	movf	?__Umul8_16+1,w
  8315  0C1C  00ED               	movwf	___flmul@temp+1
  8316  0C1D  0820               	movf	?__Umul8_16,w
  8317  0C1E  00EC               	movwf	___flmul@temp
  8318  0C1F  00E4               	movwf	___flmul@grs
  8319  0C20  01E5               	clrf	___flmul@grs+1
  8320  0C21  01E6               	clrf	___flmul@grs+2
  8321  0C22  01E7               	clrf	___flmul@grs+3
  8322  0C23  086D               	movf	___flmul@temp+1,w
  8323  0C24  00E8               	movwf	___flmul@prod
  8324  0C25  01E9               	clrf	___flmul@prod+1
  8325  0C26  01EA               	clrf	___flmul@prod+2
  8326  0C27  01EB               	clrf	___flmul@prod+3
  8327  0C28  0856               	movf	___flmul@b+1,w
  8328  0C29  00A0               	movwf	__Umul8_16@multiplicand
  8329  0C2A  085A               	movf	___flmul@a+1,w
  8330  0C2B  254C  120A  158A   	fcall	__Umul8_16
  8331  0C2E  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8332  0C31  1803               	skipnc
  8333  0C32  07E9               	addwf	___flmul@prod+1,f
  8334  0C33  1803               	skipnc
  8335  0C34  07EA               	addwf	___flmul@prod+2,f
  8336  0C35  1803               	skipnc
  8337  0C36  07EB               	addwf	___flmul@prod+3,f
  8338  0C37  0857               	movf	___flmul@b+2,w
  8339  0C38  00A0               	movwf	__Umul8_16@multiplicand
  8340  0C39  0859               	movf	___flmul@a,w
  8341  0C3A  254C  120A  158A   	fcall	__Umul8_16
  8342  0C3D  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8343  0C40  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8344  0C43  0856               	movf	___flmul@b+1,w
  8345  0C44  00A0               	movwf	__Umul8_16@multiplicand
  8346  0C45  0859               	movf	___flmul@a,w
  8347  0C46  254C  120A  158A   	fcall	__Umul8_16
  8348  0C49  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8349  0C4C  1803               	skipnc
  8350  0C4D  3E01               	addlw	1
  8351  0C4E  1D03               	btfss	3,2
  8352  0C4F  07E7               	addwf	___flmul@grs+3,f
  8353  0C50  0855               	movf	___flmul@b,w
  8354  0C51  00A0               	movwf	__Umul8_16@multiplicand
  8355  0C52  085A               	movf	___flmul@a+1,w
  8356  0C53  254C  120A  158A   	fcall	__Umul8_16
  8357  0C56  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8358  0C59  1803               	skipnc
  8359  0C5A  3E01               	addlw	1
  8360  0C5B  1D03               	btfss	3,2
  8361  0C5C  07E7               	addwf	___flmul@grs+3,f
  8362  0C5D  0866               	movf	___flmul@grs+2,w
  8363  0C5E  00E7               	movwf	___flmul@grs+3
  8364  0C5F  0865               	movf	___flmul@grs+1,w
  8365  0C60  00E6               	movwf	___flmul@grs+2
  8366  0C61  0864               	movf	___flmul@grs,w
  8367  0C62  00E5               	movwf	___flmul@grs+1
  8368  0C63  01E4               	clrf	___flmul@grs
  8369  0C64  0855               	movf	___flmul@b,w
  8370  0C65  00A0               	movwf	__Umul8_16@multiplicand
  8371  0C66  0859               	movf	___flmul@a,w
  8372  0C67  254C  120A  158A   	fcall	__Umul8_16
  8373  0C6A  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8374  0C6D  1803               	skipnc
  8375  0C6E  3E01               	addlw	1
  8376  0C6F  1D03               	btfss	3,2
  8377  0C70  07E7               	addwf	___flmul@grs+3,f
  8378  0C71  0856               	movf	___flmul@b+1,w
  8379  0C72  00A0               	movwf	__Umul8_16@multiplicand
  8380  0C73  085B               	movf	___flmul@a+2,w
  8381  0C74  254C  120A  158A   	fcall	__Umul8_16
  8382  0C77  0821               	movf	?__Umul8_16+1,w
  8383  0C78  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8384  0C7B  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8385  0C7E  278A  120A  158A   	fcall	PL56	;call to abstracted procedure
  8386  0C81  085A               	movf	___flmul@a+1,w
  8387  0C82  254C  120A  158A   	fcall	__Umul8_16
  8388  0C85  0821               	movf	?__Umul8_16+1,w
  8389  0C86  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8390  0C89  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8391  0C8C  278A  120A  158A   	fcall	PL56	;call to abstracted procedure
  8392  0C8F  085B               	movf	___flmul@a+2,w
  8393  0C90  254C  120A  158A   	fcall	__Umul8_16
  8394  0C93  0821               	movf	?__Umul8_16+1,w
  8395  0C94  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8396  0C97  085F               	movf	??___flmul+2,w
  8397  0C98  00E0               	movwf	??___flmul+3
  8398  0C99  085E               	movf	??___flmul+1,w
  8399  0C9A  00DF               	movwf	??___flmul+2
  8400  0C9B  085D               	movf	??___flmul,w
  8401  0C9C  00DE               	movwf	??___flmul+1
  8402  0C9D  01DD               	clrf	??___flmul
  8403  0C9E  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8404  0CA1  1803               	skipnc
  8405  0CA2  3E01               	addlw	1
  8406  0CA3  1D03               	btfss	3,2
  8407  0CA4  07EB               	addwf	___flmul@prod+3,f
  8408  0CA5  0867               	movf	___flmul@grs+3,w
  8409  0CA6  07E8               	addwf	___flmul@prod,f
  8410  0CA7  3001               	movlw	1
  8411  0CA8  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8412  0CAB  0863               	movf	___flmul@bexp,w
  8413  0CAC  00EC               	movwf	___flmul@temp
  8414  0CAD  01ED               	clrf	___flmul@temp+1
  8415  0CAE  0862               	movf	___flmul@aexp,w
  8416  0CAF  07EC               	addwf	___flmul@temp,f
  8417  0CB0  1803               	skipnc
  8418  0CB1  0AED               	incf	___flmul@temp+1,f
  8419  0CB2  3082               	movlw	-126
  8420  0CB3                     L14:	
  8421  0CB3  07EC               	addwf	___flmul@temp,f
  8422  0CB4  1C03               	skipc
  8423  0CB5  03ED               	decf	___flmul@temp+1,f
  8424  0CB6  1BEA               	btfsc	___flmul@prod+2,7
  8425  0CB7  2CC6               	goto	l6374
  8426  0CB8  1003               	clrc
  8427  0CB9  0DE8               	rlf	___flmul@prod,f
  8428  0CBA  0DE9               	rlf	___flmul@prod+1,f
  8429  0CBB  0DEA               	rlf	___flmul@prod+2,f
  8430  0CBC  0DEB               	rlf	___flmul@prod+3,f
  8431  0CBD  1BE7               	btfsc	___flmul@grs+3,7
  8432  0CBE  1468               	bsf	___flmul@prod,0
  8433  0CBF  30FF               	movlw	-1
  8434  0CC0  1003               	clrc
  8435  0CC1  0DE4               	rlf	___flmul@grs,f
  8436  0CC2  0DE5               	rlf	___flmul@grs+1,f
  8437  0CC3  0DE6               	rlf	___flmul@grs+2,f
  8438  0CC4  0DE7               	rlf	___flmul@grs+3,f
  8439  0CC5  2CB3               	goto	L14
  8440  0CC6                     l6374:	
  8441  0CC6  01E2               	clrf	___flmul@aexp
  8442  0CC7  1FE7               	btfss	___flmul@grs+3,7
  8443  0CC8  2CDB               	goto	l6384
  8444  0CC9  0864               	movf	___flmul@grs,w
  8445  0CCA  00DD               	movwf	??___flmul
  8446  0CCB  0865               	movf	___flmul@grs+1,w
  8447  0CCC  00DE               	movwf	??___flmul+1
  8448  0CCD  0866               	movf	___flmul@grs+2,w
  8449  0CCE  00DF               	movwf	??___flmul+2
  8450  0CCF  307F               	movlw	127
  8451  0CD0  0567               	andwf	___flmul@grs+3,w
  8452  0CD1  00E0               	movwf	??___flmul+3
  8453  0CD2  045F               	iorwf	??___flmul+2,w
  8454  0CD3  045E               	iorwf	??___flmul+1,w
  8455  0CD4  045D               	iorwf	??___flmul,w
  8456  0CD5  1903               	skipnz
  8457  0CD6  1868               	btfsc	___flmul@prod,0
  8458  0CD7  2CD9               	goto	l6380
  8459  0CD8  2CDB               	goto	l6384
  8460  0CD9                     l6380:	
  8461  0CD9  01E2               	clrf	___flmul@aexp
  8462  0CDA  0AE2               	incf	___flmul@aexp,f
  8463  0CDB                     l6384:	
  8464  0CDB  0862               	movf	___flmul@aexp,w
  8465  0CDC  1903               	btfsc	3,2
  8466  0CDD  2CEF               	goto	l6394
  8467  0CDE  0AE8               	incf	___flmul@prod,f
  8468  0CDF  1903               	skipnz
  8469  0CE0  0AE9               	incf	___flmul@prod+1,f
  8470  0CE1  1903               	skipnz
  8471  0CE2  0AEA               	incf	___flmul@prod+2,f
  8472  0CE3  1903               	skipnz
  8473  0CE4  0AEB               	incf	___flmul@prod+3,f
  8474  0CE5  1C6B               	btfss	___flmul@prod+3,0
  8475  0CE6  2CEF               	goto	l6394
  8476  0CE7  0D6B               	rlf	___flmul@prod+3,w
  8477  0CE8  0CEB               	rrf	___flmul@prod+3,f
  8478  0CE9  0CEA               	rrf	___flmul@prod+2,f
  8479  0CEA  0CE9               	rrf	___flmul@prod+1,f
  8480  0CEB  0CE8               	rrf	___flmul@prod,f
  8481  0CEC  0AEC               	incf	___flmul@temp,f
  8482  0CED  1903               	skipnz
  8483  0CEE  0AED               	incf	___flmul@temp+1,f
  8484  0CEF                     l6394:	
  8485  0CEF  086D               	movf	___flmul@temp+1,w
  8486  0CF0  3A80               	xorlw	128
  8487  0CF1  00FF               	movwf	127
  8488  0CF2  3080               	movlw	128
  8489  0CF3  027F               	subwf	127,w
  8490  0CF4  1D03               	skipz
  8491  0CF5  2CF8               	goto	u5905
  8492  0CF6  30FF               	movlw	255
  8493  0CF7  026C               	subwf	___flmul@temp,w
  8494  0CF8                     u5905:	
  8495  0CF8  1C03               	skipc
  8496  0CF9  2D03               	goto	l6398
  8497  0CFA  307F               	movlw	127
  8498  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  8499  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  8500  0CFD  00EB               	movwf	___flmul@prod+3
  8501  0CFE  3080               	movlw	128
  8502  0CFF  00EA               	movwf	___flmul@prod+2
  8503  0D00  01E9               	clrf	___flmul@prod+1
  8504  0D01  01E8               	clrf	___flmul@prod
  8505  0D02  2D25               	goto	l1438
  8506  0D03                     l6398:	
  8507  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  8508  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  8509  0D05  086D               	movf	___flmul@temp+1,w
  8510  0D06  3A80               	xorlw	128
  8511  0D07  00FF               	movwf	127
  8512  0D08  3080               	movlw	128
  8513  0D09  027F               	subwf	127,w
  8514  0D0A  1D03               	skipz
  8515  0D0B  2D0E               	goto	u5915
  8516  0D0C  3001               	movlw	1
  8517  0D0D  026C               	subwf	___flmul@temp,w
  8518  0D0E                     u5915:	
  8519  0D0E  1803               	skipnc
  8520  0D0F  2D18               	goto	l6404
  8521  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  8522  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  8523  0D12  01E8               	clrf	___flmul@prod
  8524  0D13  01E9               	clrf	___flmul@prod+1
  8525  0D14  01EA               	clrf	___flmul@prod+2
  8526  0D15  01EB               	clrf	___flmul@prod+3
  8527  0D16  01E1               	clrf	___flmul@sign
  8528  0D17  2D25               	goto	l1438
  8529  0D18                     l6404:	
  8530  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  8531  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  8532  0D1A  086C               	movf	___flmul@temp,w
  8533  0D1B  00E3               	movwf	___flmul@bexp
  8534  0D1C  307F               	movlw	127
  8535  0D1D  05EA               	andwf	___flmul@prod+2,f
  8536  0D1E  3000               	movlw	0
  8537  0D1F  01EB               	clrf	___flmul@prod+3
  8538  0D20  1863               	btfsc	___flmul@bexp,0
  8539  0D21  17EA               	bsf	___flmul@prod+2,7
  8540  0D22  1003               	clrc
  8541  0D23  0C63               	rrf	___flmul@bexp,w
  8542  0D24  00EB               	movwf	___flmul@prod+3
  8543  0D25                     l1438:	
  8544  0D25  0861               	movf	___flmul@sign,w
  8545  0D26  04EB               	iorwf	___flmul@prod+3,f
  8546  0D27  086B               	movf	___flmul@prod+3,w
  8547  0D28  00D8               	movwf	?___flmul+3
  8548  0D29  086A               	movf	___flmul@prod+2,w
  8549  0D2A  00D7               	movwf	?___flmul+2
  8550  0D2B  0869               	movf	___flmul@prod+1,w
  8551  0D2C  00D6               	movwf	?___flmul+1
  8552  0D2D  0868               	movf	___flmul@prod,w
  8553  0D2E  00D5               	movwf	?___flmul
  8554  0D2F  0008               	return
  8555  0D30                     __end_of___flmul:	
  8556  0D30                     __ptext24:	
  8557 ;; *************** function _Send_To_MB *****************
  8558 ;; Defined at:
  8559 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  size            1    wreg     unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  size            1    1[BANK0 ] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 300/100
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8573 ;;      Params:         0       0       0       0       0
  8574 ;;      Locals:         0       1       0       0       0
  8575 ;;      Temps:          0       0       0       0       0
  8576 ;;      Totals:         0       1       0       0       0
  8577 ;;Total ram usage:        1 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    2
  8580 ;; This function calls:
  8581 ;;		_USART_putc
  8582 ;; This function is called by:
  8583 ;;		_Decodify_Command
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _Send_To_MB
  8589  0D30                     _Send_To_MB:	
  8590                           
  8591                           ;incstack = 0
  8592                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8593                           ;Send_To_MB@size stored from wreg
  8594  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  8595  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  8596  0D32  00A1               	movwf	Send_To_MB@size
  8597                           
  8598                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8599  0D33  30AA               	movlw	170
  8600  0D34  2587  120A  158A   	fcall	_USART_putc
  8601                           
  8602                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8603  0D37  30BB               	movlw	187
  8604  0D38  2587  120A  158A   	fcall	_USART_putc
  8605                           
  8606                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8607  0D3B  1703               	bsf	3,6	;RP1=1, select bank3
  8608  0D3C  0834               	movf	_Board_Number^(0+384),w
  8609  0D3D  2587  120A  158A   	fcall	_USART_putc
  8610                           
  8611                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8612  0D40  3000               	movlw	0
  8613  0D41  2587  120A  158A   	fcall	_USART_putc
  8614                           
  8615                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8616  0D44  1703               	bsf	3,6	;RP1=1, select bank3
  8617  0D45  0851               	movf	(_usart_protocol^(0+384)+4),w
  8618  0D46  2587  120A  158A   	fcall	_USART_putc
  8619                           
  8620                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8621  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  8622  0D4A  0821               	movf	Send_To_MB@size,w
  8623  0D4B  2D87               	ljmp	_USART_putc
  8624  0D4C                     __end_of_Send_To_MB:	
  8625  0D4C                     __ptext21:	
  8626 ;; *************** function __Umul8_16 *****************
  8627 ;; Defined at:
  8628 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  multiplier      1    wreg     unsigned char 
  8631 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  multiplier      1    7[BANK0 ] unsigned char 
  8634 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  8635 ;;  product         2    3[BANK0 ] unsigned int 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  2    0[BANK0 ] unsigned int 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 300/0
  8642 ;;		On exit  : 300/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8645 ;;      Params:         0       3       0       0       0
  8646 ;;      Locals:         0       5       0       0       0
  8647 ;;      Temps:          0       0       0       0       0
  8648 ;;      Totals:         0       8       0       0       0
  8649 ;;Total ram usage:        8 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:    1
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		___flmul
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function __Umul8_16
  8661  0D4C                     __Umul8_16:	
  8662                           
  8663                           ;incstack = 0
  8664                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8665                           ;__Umul8_16@multiplier stored from wreg
  8666  0D4C  00A7               	movwf	__Umul8_16@multiplier
  8667  0D4D  01A3               	clrf	__Umul8_16@product
  8668  0D4E  01A4               	clrf	__Umul8_16@product+1
  8669  0D4F  0820               	movf	__Umul8_16@multiplicand,w
  8670  0D50  00A5               	movwf	__Umul8_16@word_mpld
  8671  0D51  01A6               	clrf	__Umul8_16@word_mpld+1
  8672  0D52                     l6062:	
  8673  0D52  1C27               	btfss	__Umul8_16@multiplier,0
  8674  0D53  2D5A               	goto	l6066
  8675  0D54  0825               	movf	__Umul8_16@word_mpld,w
  8676  0D55  07A3               	addwf	__Umul8_16@product,f
  8677  0D56  1803               	skipnc
  8678  0D57  0AA4               	incf	__Umul8_16@product+1,f
  8679  0D58  0826               	movf	__Umul8_16@word_mpld+1,w
  8680  0D59  07A4               	addwf	__Umul8_16@product+1,f
  8681  0D5A                     l6066:	
  8682  0D5A  1003               	clrc
  8683  0D5B  0DA5               	rlf	__Umul8_16@word_mpld,f
  8684  0D5C  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  8685  0D5D  1003               	clrc
  8686  0D5E  0CA7               	rrf	__Umul8_16@multiplier,f
  8687  0D5F  0827               	movf	__Umul8_16@multiplier,w
  8688  0D60  1D03               	btfss	3,2
  8689  0D61  2D52               	goto	l6062
  8690  0D62  0824               	movf	__Umul8_16@product+1,w
  8691  0D63  00A1               	movwf	?__Umul8_16+1
  8692  0D64  0823               	movf	__Umul8_16@product,w
  8693  0D65  00A0               	movwf	?__Umul8_16
  8694  0D66  0008               	return
  8695  0D67                     __end_of__Umul8_16:	
  8696  0D67                     __ptext16:	
  8697 ;; *************** function _strcat *****************
  8698 ;; Defined at:
  8699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  to              1    wreg     PTR unsigned char 
  8702 ;;		 -> texto(16), 
  8703 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  8704 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8705 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  to              1    4[BANK0 ] PTR unsigned char 
  8708 ;;		 -> texto(16), 
  8709 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  8710 ;;		 -> texto(16), 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      PTR unsigned char 
  8713 ;; Registers used:
  8714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8715 ;; Tracked objects:
  8716 ;;		On entry : B00/800
  8717 ;;		On exit  : B00/800
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8720 ;;      Params:         0       2       0       0       0
  8721 ;;      Locals:         0       2       0       0       0
  8722 ;;      Temps:          0       1       0       0       0
  8723 ;;      Totals:         0       5       0       0       0
  8724 ;;Total ram usage:        5 bytes
  8725 ;; Hardware stack levels used:    2
  8726 ;; Hardware stack levels required when called:    1
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_Decodify_Command
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _strcat
  8736  0D67                     _strcat:	
  8737                           
  8738                           ;incstack = 0
  8739                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8740                           ;strcat@to stored from wreg
  8741  0D67  00A4               	movwf	strcat@to
  8742  0D68  00A3               	movwf	strcat@cp
  8743  0D69                     l7464:	
  8744  0D69  0823               	movf	strcat@cp,w
  8745  0D6A  0084               	movwf	4
  8746  0D6B  0800               	movf	0,w
  8747  0D6C  1903               	btfsc	3,2
  8748  0D6D  2D74               	goto	l7468
  8749  0D6E  0AA3               	incf	strcat@cp,f
  8750  0D6F  2D69               	goto	l7464
  8751  0D70                     l7466:	
  8752  0D70  0AA3               	incf	strcat@cp,f
  8753  0D71  0AA0               	incf	strcat@from,f
  8754  0D72  1903               	skipnz
  8755  0D73  0AA1               	incf	strcat@from+1,f
  8756  0D74                     l7468:	
  8757  0D74  0821               	movf	strcat@from+1,w
  8758  0D75  00FF               	movwf	127
  8759  0D76  0820               	movf	strcat@from,w
  8760  0D77  0084               	movwf	4
  8761  0D78  160A  158A  2000  120A  158A  	fcall	stringtab
  8762  0D7D  00A2               	movwf	??_strcat
  8763  0D7E  0823               	movf	strcat@cp,w
  8764  0D7F  0084               	movwf	4
  8765  0D80  0822               	movf	??_strcat,w
  8766  0D81  1783               	bsf	3,7	;select IRP bank2
  8767  0D82  0080               	movwf	0
  8768  0D83  0800               	movf	0,w
  8769  0D84  1903               	btfsc	3,2
  8770  0D85  0008               	return
  8771  0D86  2D70               	goto	l7466
  8772  0D87                     __end_of_strcat:	
  8773  0D87                     __ptext38:	
  8774 ;; *************** function _USART_putc *****************
  8775 ;; Defined at:
  8776 ;;		line 89 in file "usart.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  value           1    wreg     unsigned char 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  value           1    0[BANK0 ] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/100
  8787 ;;		On exit  : 300/100
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         0       0       0       0       0
  8791 ;;      Locals:         0       1       0       0       0
  8792 ;;      Temps:          0       0       0       0       0
  8793 ;;      Totals:         0       1       0       0       0
  8794 ;;Total ram usage:        1 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    1
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_Decodify_Command
  8801 ;;		_Send_To_MB
  8802 ;;		_PROCULUS_Control_Register_Write
  8803 ;;		_PROCULUS_VP_Write
  8804 ;;		_USART_put_buffer
  8805 ;;		_USART_put_int
  8806 ;;		_USART_put_string
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _USART_putc
  8812  0D87                     _USART_putc:	
  8813                           
  8814                           ;incstack = 0
  8815                           ; Regs used in _USART_putc: [wreg]
  8816                           ;USART_putc@value stored from wreg
  8817  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  8818  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  8819  0D89  00A0               	movwf	USART_putc@value
  8820                           
  8821                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8822  0D8A  3014               	movlw	20
  8823  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  8824  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  8825  0D8D  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  8826  0D8E  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  8827  0D8F                     l927:	
  8828                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8829                           
  8830  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  8831  0D90  1C98               	btfss	24,1	;volatile
  8832  0D91  2D8F               	goto	l927
  8833                           
  8834                           ;usart.c: 93:     TXREG=value;
  8835  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  8836  0D93  0820               	movf	USART_putc@value,w
  8837  0D94  0099               	movwf	25	;volatile
  8838                           
  8839                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8840  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  8841  0D96  1698               	bsf	24,5	;volatile
  8842  0D97  0008               	return
  8843  0D98                     __end_of_USART_putc:	
  8844  0D98                     __ptext17:	
  8845 ;; *************** function _itoa *****************
  8846 ;; Defined at:
  8847 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;  buf             1    wreg     PTR unsigned char 
  8850 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8851 ;;  val             2   15[BANK0 ] int 
  8852 ;;  base            2   17[BANK0 ] int 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  8855 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8856 ;;  cp              1    0        PTR unsigned char 
  8857 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      PTR unsigned char 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 300/0
  8864 ;;		On exit  : B00/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8867 ;;      Params:         0       4       0       0       0
  8868 ;;      Locals:         0       2       0       0       0
  8869 ;;      Temps:          0       0       0       0       0
  8870 ;;      Totals:         0       6       0       0       0
  8871 ;;Total ram usage:        6 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    3
  8874 ;; This function calls:
  8875 ;;		_utoa
  8876 ;; This function is called by:
  8877 ;;		_Decodify_Command
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           
  8882                           ;psect for function _itoa
  8883  0D98                     _itoa:	
  8884                           
  8885                           ;incstack = 0
  8886                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8887                           ;itoa@buf stored from wreg
  8888  0D98  00B4               	movwf	itoa@buf
  8889  0D99  1FB0               	btfss	itoa@val+1,7
  8890  0D9A  2DA6               	goto	l7450
  8891  0D9B  0834               	movf	itoa@buf,w
  8892  0D9C  0084               	movwf	4
  8893  0D9D  302D               	movlw	45
  8894  0D9E  1383               	bcf	3,7	;select IRP bank0
  8895  0D9F  0080               	movwf	0
  8896  0DA0  0AB4               	incf	itoa@buf,f
  8897  0DA1  09AF               	comf	itoa@val,f
  8898  0DA2  09B0               	comf	itoa@val+1,f
  8899  0DA3  0AAF               	incf	itoa@val,f
  8900  0DA4  1903               	skipnz
  8901  0DA5  0AB0               	incf	itoa@val+1,f
  8902  0DA6                     l7450:	
  8903  0DA6  0830               	movf	itoa@val+1,w
  8904  0DA7  00A8               	movwf	utoa@val+1
  8905  0DA8  082F               	movf	itoa@val,w
  8906  0DA9  00A7               	movwf	utoa@val
  8907  0DAA  0832               	movf	itoa@base+1,w
  8908  0DAB  00AA               	movwf	utoa@base+1
  8909  0DAC  0831               	movf	itoa@base,w
  8910  0DAD  00A9               	movwf	utoa@base
  8911  0DAE  0834               	movf	itoa@buf,w
  8912  0DAF  160A  158A  2D39   	ljmp	_utoa
  8913  0DB2                     __end_of_itoa:	
  8914  0DB2                     __ptext31:	
  8915 ;; *************** function _strlen *****************
  8916 ;; Defined at:
  8917 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  s               1    wreg     PTR const unsigned char 
  8920 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8923 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8924 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8925 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  2    0[BANK0 ] unsigned int 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/300
  8932 ;;		On exit  : B00/800
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8935 ;;      Params:         0       3       0       0       0
  8936 ;;      Locals:         0       2       0       0       0
  8937 ;;      Temps:          0       0       0       0       0
  8938 ;;      Totals:         0       5       0       0       0
  8939 ;;Total ram usage:        5 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    1
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_Decodify_Command
  8946 ;;		_PROCULUS_VP_Write_String
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function _strlen
  8952  0DB2                     _strlen:	
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8956                           ;strlen@s stored from wreg
  8957  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  8958  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  8959  0DB4  00A4               	movwf	strlen@s
  8960  0DB5  00A3               	movwf	strlen@cp
  8961  0DB6                     l6850:	
  8962  0DB6  0823               	movf	strlen@cp,w
  8963  0DB7  0084               	movwf	4
  8964  0DB8  1783               	bsf	3,7	;select IRP bank2
  8965  0DB9  0800               	movf	0,w
  8966  0DBA  1903               	btfsc	3,2
  8967  0DBB  2DBE               	goto	l6852
  8968  0DBC  0AA3               	incf	strlen@cp,f
  8969  0DBD  2DB6               	goto	l6850
  8970  0DBE                     l6852:	
  8971  0DBE  0824               	movf	strlen@s,w
  8972  0DBF  0223               	subwf	strlen@cp,w
  8973  0DC0  00A0               	movwf	?_strlen
  8974  0DC1  01A1               	clrf	?_strlen+1
  8975  0DC2  1BA0               	btfsc	?_strlen,7
  8976  0DC3  03A1               	decf	?_strlen+1,f
  8977  0DC4  0008               	return
  8978  0DC5                     __end_of_strlen:	
  8979  0DC5                     __ptext26:	
  8980 ;; *************** function _USART_put_string *****************
  8981 ;; Defined at:
  8982 ;;		line 168 in file "usart.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8985 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8988 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 300/0
  8995 ;;		On exit  : 300/100
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8998 ;;      Params:         0       2       0       0       0
  8999 ;;      Locals:         0       2       0       0       0
  9000 ;;      Temps:          0       0       0       0       0
  9001 ;;      Totals:         0       4       0       0       0
  9002 ;;Total ram usage:        4 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    2
  9005 ;; This function calls:
  9006 ;;		_USART_putc
  9007 ;; This function is called by:
  9008 ;;		_Decodify_Command
  9009 ;;		_Send_Reply_OK
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           
  9014                           ;psect for function _USART_put_string
  9015  0DC5                     _USART_put_string:	
  9016  0DC5                     l6808:	
  9017                           ;incstack = 0
  9018                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9019                           
  9020                           
  9021                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  9022  0DC5  0821               	movf	USART_put_string@vetor,w
  9023  0DC6  00A3               	movwf	USART_put_string@ptr
  9024  0DC7  0822               	movf	USART_put_string@vetor+1,w
  9025  0DC8  00A4               	movwf	USART_put_string@ptr+1
  9026  0DC9                     l6814:	
  9027                           ;usart.c: 172:     while(*(ptr)){
  9028                           
  9029                           
  9030                           ;usart.c: 172:     while(*(ptr)){
  9031  0DC9  0824               	movf	USART_put_string@ptr+1,w
  9032  0DCA  00FF               	movwf	127
  9033  0DCB  0823               	movf	USART_put_string@ptr,w
  9034  0DCC  0084               	movwf	4
  9035  0DCD  160A  158A  2000  120A  158A  	fcall	stringtab
  9036  0DD2  3A00               	xorlw	0
  9037  0DD3  1903               	btfsc	3,2
  9038  0DD4  2DE6               	goto	l6816
  9039                           
  9040                           ;usart.c: 173:         USART_putc(*(ptr));
  9041  0DD5  0824               	movf	USART_put_string@ptr+1,w
  9042  0DD6  00FF               	movwf	127
  9043  0DD7  0823               	movf	USART_put_string@ptr,w
  9044  0DD8  0084               	movwf	4
  9045  0DD9  160A  158A  2000  120A  158A  	fcall	stringtab
  9046  0DDE  2587  120A  158A   	fcall	_USART_putc
  9047                           
  9048                           ;usart.c: 174:         ptr++;
  9049  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  9050  0DE2  0AA3               	incf	USART_put_string@ptr,f
  9051  0DE3  1903               	skipnz
  9052  0DE4  0AA4               	incf	USART_put_string@ptr+1,f
  9053  0DE5  2DC9               	goto	l6814
  9054  0DE6                     l6816:	
  9055                           
  9056                           ;usart.c: 176:     USART_putc(*(ptr));
  9057  0DE6  0824               	movf	USART_put_string@ptr+1,w
  9058  0DE7  00FF               	movwf	127
  9059  0DE8  0823               	movf	USART_put_string@ptr,w
  9060  0DE9  0084               	movwf	4
  9061  0DEA  160A  158A  2000  120A  158A  	fcall	stringtab
  9062  0DEF  2D87               	ljmp	_USART_putc
  9063  0DF0                     __end_of_USART_put_string:	
  9064  0DF0                     __ptext40:	
  9065 ;; *************** function _Load_Work *****************
  9066 ;; Defined at:
  9067 ;;		line 982 in file "SlaveLiofilizadorVer1.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 100/300
  9078 ;;		On exit  : 300/200
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          0       0       4       0       0
  9084 ;;      Totals:         0       0       4       0       0
  9085 ;;Total ram usage:        4 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    3
  9088 ;; This function calls:
  9089 ;;		_EEPROM_Read_Byte
  9090 ;;		_EEPROM_Read_Integer
  9091 ;;		___fldiv
  9092 ;;		___xxtofl
  9093 ;; This function is called by:
  9094 ;;		_main
  9095 ;;		_Decodify_Command
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _Load_Work
  9101  0DF0                     _Load_Work:	
  9102  0DF0                     l7356:	
  9103                           ;incstack = 0
  9104                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9105                           
  9106                           
  9107                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0 = EEPROM_Read_Integer(0);
  9108  0DF0  3000               	movlw	0
  9109  0DF1  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9110  0DF4  274E               	fcall	PL14	;call to abstracted procedure
  9111  0DF5  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9112  0DFA  082E               	movf	?___xxtofl+3,w
  9113  0DFB  00F3               	movwf	_SetPoint0+3	;volatile
  9114  0DFC  082D               	movf	?___xxtofl+2,w
  9115  0DFD  00F2               	movwf	_SetPoint0+2	;volatile
  9116  0DFE  082C               	movf	?___xxtofl+1,w
  9117  0DFF  00F1               	movwf	_SetPoint0+1	;volatile
  9118  0E00  082B               	movf	?___xxtofl,w
  9119  0E01  00F0               	movwf	_SetPoint0	;volatile
  9120                           
  9121                           ;SlaveLiofilizadorVer1.c: 986:      SetPoint0/=10;
  9122  0E02  3041               	movlw	65
  9123  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  9124  0E04  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9125  0E05  3020               	movlw	32
  9126  0E06  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9127  0E07  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9128  0E08  01A0               	clrf	___fldiv@a^(0+128)
  9129  0E09  0873               	movf	_SetPoint0+3,w	;volatile
  9130  0E0A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9131  0E0B  0872               	movf	_SetPoint0+2,w	;volatile
  9132  0E0C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9133  0E0D  0871               	movf	_SetPoint0+1,w	;volatile
  9134  0E0E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9135  0E0F  0870               	movf	_SetPoint0,w	;volatile
  9136  0E10  00A4               	movwf	___fldiv@b^(0+128)
  9137  0E11  160A  118A  2517  120A  158A  	fcall	___fldiv
  9138  0E16  0823               	movf	(?___fldiv+3)^(0+128),w
  9139  0E17  00F3               	movwf	_SetPoint0+3	;volatile
  9140  0E18  0822               	movf	(?___fldiv+2)^(0+128),w
  9141  0E19  00F2               	movwf	_SetPoint0+2	;volatile
  9142  0E1A  0821               	movf	(?___fldiv+1)^(0+128),w
  9143  0E1B  00F1               	movwf	_SetPoint0+1	;volatile
  9144  0E1C  0820               	movf	?___fldiv^(0+128),w
  9145  0E1D  00F0               	movwf	_SetPoint0	;volatile
  9146                           
  9147                           ;SlaveLiofilizadorVer1.c: 987:      TempoON_0 = EEPROM_Read_Byte(2);
  9148  0E1E  3002               	movlw	2
  9149  0E1F  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9150  0E22  1683               	bsf	3,5	;RP0=1, select bank3
  9151  0E23  00BA               	movwf	_TempoON_0^(0+384)
  9152                           
  9153                           ;SlaveLiofilizadorVer1.c: 988:      TempoOFF_0= EEPROM_Read_Byte(3);
  9154  0E24  3003               	movlw	3
  9155  0E25  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9156  0E28  1683               	bsf	3,5	;RP0=1, select bank3
  9157  0E29  00B9               	movwf	_TempoOFF_0^(0+384)
  9158                           
  9159                           ;SlaveLiofilizadorVer1.c: 989:      Histerese0= EEPROM_Read_Byte(4);
  9160  0E2A  3004               	movlw	4
  9161  0E2B  26C8               	fcall	_EEPROM_Read_Byte
  9162  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  9163  0E2D  00AB               	movwf	___xxtofl@val
  9164  0E2E  3000               	movlw	0
  9165  0E2F  01AC               	clrf	___xxtofl@val+1
  9166  0E30  01AD               	clrf	___xxtofl@val+2
  9167  0E31  01AE               	clrf	___xxtofl@val+3
  9168  0E32  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9169  0E37  082E               	movf	?___xxtofl+3,w
  9170  0E38  1683               	bsf	3,5	;RP0=1, select bank3
  9171  0E39  1703               	bsf	3,6	;RP1=1, select bank3
  9172  0E3A  009F               	movwf	(_Histerese0+3)^(0+384)
  9173  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  9174  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  9175  0E3D  082D               	movf	?___xxtofl+2,w
  9176  0E3E  1683               	bsf	3,5	;RP0=1, select bank3
  9177  0E3F  1703               	bsf	3,6	;RP1=1, select bank3
  9178  0E40  009E               	movwf	(_Histerese0+2)^(0+384)
  9179  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  9180  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  9181  0E43  082C               	movf	?___xxtofl+1,w
  9182  0E44  1683               	bsf	3,5	;RP0=1, select bank3
  9183  0E45  1703               	bsf	3,6	;RP1=1, select bank3
  9184  0E46  009D               	movwf	(_Histerese0+1)^(0+384)
  9185  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  9187  0E49  082B               	movf	?___xxtofl,w
  9188  0E4A  1683               	bsf	3,5	;RP0=1, select bank3
  9189  0E4B  1703               	bsf	3,6	;RP1=1, select bank3
  9190  0E4C  009C               	movwf	_Histerese0^(0+384)
  9191                           
  9192                           ;SlaveLiofilizadorVer1.c: 990:      Status0 = EEPROM_Read_Integer(5);
  9193  0E4D  3005               	movlw	5
  9194  0E4E  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9195  0E51  0824               	movf	?_EEPROM_Read_Integer+1,w
  9196  0E52  1683               	bsf	3,5	;RP0=1, select bank3
  9197  0E53  1703               	bsf	3,6	;RP1=1, select bank3
  9198  0E54  00A9               	movwf	(_Status0+1)^(0+384)
  9199  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  9200  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  9201  0E57  0823               	movf	?_EEPROM_Read_Integer,w
  9202  0E58  1683               	bsf	3,5	;RP0=1, select bank3
  9203  0E59  1703               	bsf	3,6	;RP1=1, select bank3
  9204  0E5A  00A8               	movwf	_Status0^(0+384)
  9205                           
  9206                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1 = EEPROM_Read_Integer(7);
  9207  0E5B  3007               	movlw	7
  9208  0E5C  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9209  0E5F  274E               	fcall	PL14	;call to abstracted procedure
  9210  0E60  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9211  0E65  082E               	movf	?___xxtofl+3,w
  9212  0E66  1683               	bsf	3,5	;RP0=1, select bank3
  9213  0E67  1703               	bsf	3,6	;RP1=1, select bank3
  9214  0E68  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9215  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  9216  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9217  0E6B  082D               	movf	?___xxtofl+2,w
  9218  0E6C  1683               	bsf	3,5	;RP0=1, select bank3
  9219  0E6D  1703               	bsf	3,6	;RP1=1, select bank3
  9220  0E6E  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9221  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  9222  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  9223  0E71  082C               	movf	?___xxtofl+1,w
  9224  0E72  1683               	bsf	3,5	;RP0=1, select bank3
  9225  0E73  1703               	bsf	3,6	;RP1=1, select bank3
  9226  0E74  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9227  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9228  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  9229  0E77  082B               	movf	?___xxtofl,w
  9230  0E78  1683               	bsf	3,5	;RP0=1, select bank3
  9231  0E79  1703               	bsf	3,6	;RP1=1, select bank3
  9232  0E7A  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9233                           
  9234                           ;SlaveLiofilizadorVer1.c: 993:      SetPoint1/=10;
  9235  0E7B  3041               	movlw	65
  9236  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  9237  0E7D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9238  0E7E  3020               	movlw	32
  9239  0E7F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9240  0E80  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9241  0E81  01A0               	clrf	___fldiv@a^(0+128)
  9242  0E82  1703               	bsf	3,6	;RP1=1, select bank3
  9243  0E83  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
  9244  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  9245  0E85  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9246  0E86  1703               	bsf	3,6	;RP1=1, select bank3
  9247  0E87  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
  9248  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  9249  0E89  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9250  0E8A  1703               	bsf	3,6	;RP1=1, select bank3
  9251  0E8B  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
  9252  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  9253  0E8D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9254  0E8E  1703               	bsf	3,6	;RP1=1, select bank3
  9255  0E8F  0818               	movf	_SetPoint1^(0+384),w	;volatile
  9256  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  9257  0E91  00A4               	movwf	___fldiv@b^(0+128)
  9258  0E92  160A  118A  2517  120A  158A  	fcall	___fldiv
  9259  0E97  0823               	movf	(?___fldiv+3)^(0+128),w
  9260  0E98  1703               	bsf	3,6	;RP1=1, select bank3
  9261  0E99  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9262  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  9263  0E9B  0822               	movf	(?___fldiv+2)^(0+128),w
  9264  0E9C  1703               	bsf	3,6	;RP1=1, select bank3
  9265  0E9D  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9266  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  9267  0E9F  0821               	movf	(?___fldiv+1)^(0+128),w
  9268  0EA0  1703               	bsf	3,6	;RP1=1, select bank3
  9269  0EA1  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9270  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  9271  0EA3  0820               	movf	?___fldiv^(0+128),w
  9272  0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  9273  0EA5  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9274                           
  9275                           ;SlaveLiofilizadorVer1.c: 994:      TempoON_1 = EEPROM_Read_Byte(9);
  9276  0EA6  3009               	movlw	9
  9277  0EA7  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9278  0EAA  1683               	bsf	3,5	;RP0=1, select bank3
  9279  0EAB  00B7               	movwf	_TempoON_1^(0+384)
  9280                           
  9281                           ;SlaveLiofilizadorVer1.c: 995:      TempoOFF_1= EEPROM_Read_Byte(10);
  9282  0EAC  300A               	movlw	10
  9283  0EAD  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9284  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  9285  0EB1  00B6               	movwf	_TempoOFF_1^(0+384)
  9286                           
  9287                           ;SlaveLiofilizadorVer1.c: 996:      Histerese1= EEPROM_Read_Byte(11);
  9288  0EB2  300B               	movlw	11
  9289  0EB3  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9290  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  9291  0EB7  00B8               	movwf	_Histerese1^(0+384)
  9292                           
  9293                           ;SlaveLiofilizadorVer1.c: 997:      Status1 = EEPROM_Read_Integer(12);
  9294  0EB8  300C               	movlw	12
  9295  0EB9  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9296  0EBC  0824               	movf	?_EEPROM_Read_Integer+1,w
  9297  0EBD  1683               	bsf	3,5	;RP0=1, select bank3
  9298  0EBE  1703               	bsf	3,6	;RP1=1, select bank3
  9299  0EBF  00A7               	movwf	(_Status1+1)^(0+384)
  9300  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  9301  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  9302  0EC2  0823               	movf	?_EEPROM_Read_Integer,w
  9303  0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  9304  0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  9305  0EC5  00A6               	movwf	_Status1^(0+384)
  9306                           
  9307                           ;SlaveLiofilizadorVer1.c: 999:      statuspower.bits=EEPROM_Read_Byte(14);
  9308  0EC6  300E               	movlw	14
  9309  0EC7  2EC8               	ljmp	_EEPROM_Read_Byte
  9310  0EC8                     __end_of_Load_Work:	
  9311  0EC8                     __ptext47:	
  9312 ;; *************** function _EEPROM_Read_Byte *****************
  9313 ;; Defined at:
  9314 ;;		line 52 in file "eeprom.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;  addr            1    wreg     unsigned char 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  addr            1    2[BANK0 ] unsigned char 
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      unsigned char 
  9321 ;; Registers used:
  9322 ;;		wreg
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/300
  9325 ;;		On exit  : 300/200
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9328 ;;      Params:         0       0       0       0       0
  9329 ;;      Locals:         0       1       0       0       0
  9330 ;;      Temps:          0       2       0       0       0
  9331 ;;      Totals:         0       3       0       0       0
  9332 ;;Total ram usage:        3 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    1
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_Decodify_Command
  9339 ;;		_Load_Work
  9340 ;;		_EEPROM_Read_Integer
  9341 ;;		_EEPROM_Read_String
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           
  9346                           ;psect for function _EEPROM_Read_Byte
  9347  0EC8                     _EEPROM_Read_Byte:	
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9351                           ;EEPROM_Read_Byte@addr stored from wreg
  9352  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  9353  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  9354  0ECA  00A2               	movwf	EEPROM_Read_Byte@addr
  9355                           
  9356                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9357  0ECB  3014               	movlw	20
  9358  0ECC  1683               	bsf	3,5	;RP0=1, select bank3
  9359  0ECD  1703               	bsf	3,6	;RP1=1, select bank3
  9360  0ECE  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9361  0ECF  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9362  0ED0                     l615:	
  9363                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9364                           
  9365  0ED0  188C               	btfsc	12,1	;volsfr
  9366  0ED1  2ED0               	goto	l615
  9367                           
  9368                           ;eeprom.c: 57:    EEADR=addr;
  9369  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  9370  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  9371  0ED4  0822               	movf	EEPROM_Read_Byte@addr,w
  9372  0ED5  1703               	bsf	3,6	;RP1=1, select bank2
  9373  0ED6  008D               	movwf	13	;volatile
  9374                           
  9375                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9376  0ED7  1683               	bsf	3,5	;RP0=1, select bank3
  9377  0ED8  138C               	bcf	12,7	;volsfr
  9378                           
  9379                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9380  0ED9  140C               	bsf	12,0	;volsfr
  9381                           
  9382                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9383  0EDA  304E               	movlw	78
  9384  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  9385  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  9386  0EDD  00A1               	movwf	??_EEPROM_Read_Byte+1
  9387  0EDE  30EA               	movlw	234
  9388  0EDF  00A0               	movwf	??_EEPROM_Read_Byte
  9389  0EE0                     u7707:	
  9390  0EE0  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9391  0EE1  2EE0               	goto	u7707
  9392  0EE2  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9393  0EE3  2EE0               	goto	u7707
  9394  0EE4  0000               	nop
  9395                           
  9396                           ;eeprom.c: 61:    return EEDATA;
  9397  0EE5  1283               	bcf	3,5	;RP0=0, select bank2
  9398  0EE6  1703               	bsf	3,6	;RP1=1, select bank2
  9399  0EE7  080C               	movf	12,w	;volatile
  9400  0EE8  0008               	return
  9401  0EE9                     __end_of_EEPROM_Read_Byte:	
  9402  0EE9                     __ptext42:	
  9403 ;; *************** function _EEPROM_Read_Integer *****************
  9404 ;; Defined at:
  9405 ;;		line 81 in file "eeprom.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  addr            1    wreg     unsigned char 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  addr            1    6[BANK0 ] unsigned char 
  9410 ;;  result          2    8[BANK0 ] unsigned int 
  9411 ;;  i               1   10[BANK0 ] unsigned char 
  9412 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9413 ;;		 -> EEPROM_Read_Integer@result(2), 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  2    3[BANK0 ] unsigned int 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : B00/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9423 ;;      Params:         0       3       0       0       0
  9424 ;;      Locals:         0       5       0       0       0
  9425 ;;      Temps:          0       0       0       0       0
  9426 ;;      Totals:         0       8       0       0       0
  9427 ;;Total ram usage:        8 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    2
  9430 ;; This function calls:
  9431 ;;		_EEPROM_Read_Byte
  9432 ;; This function is called by:
  9433 ;;		_main
  9434 ;;		_Decodify_Command
  9435 ;;		_Load_Work
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           
  9440                           ;psect for function _EEPROM_Read_Integer
  9441  0EE9                     _EEPROM_Read_Integer:	
  9442                           
  9443                           ;incstack = 0
  9444                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9445                           ;EEPROM_Read_Integer@addr stored from wreg
  9446  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  9447  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  9448  0EEB  00A6               	movwf	EEPROM_Read_Integer@addr
  9449                           
  9450                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9451  0EEC  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9452  0EED  00A7               	movwf	EEPROM_Read_Integer@ptr
  9453                           
  9454                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9455  0EEE  01AA               	clrf	EEPROM_Read_Integer@i
  9456  0EEF                     l6792:	
  9457                           
  9458                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9459  0EEF  0827               	movf	EEPROM_Read_Integer@ptr,w
  9460  0EF0  0084               	movwf	4
  9461  0EF1  0826               	movf	EEPROM_Read_Integer@addr,w
  9462  0EF2  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9463  0EF5  1383               	bcf	3,7	;select IRP bank0
  9464  0EF6  0080               	movwf	0
  9465  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  9466  0EF8  3002               	movlw	2
  9467  0EF9  0AA6               	incf	EEPROM_Read_Integer@addr,f
  9468  0EFA  0AA7               	incf	EEPROM_Read_Integer@ptr,f
  9469  0EFB  0AAA               	incf	EEPROM_Read_Integer@i,f
  9470  0EFC  022A               	subwf	EEPROM_Read_Integer@i,w
  9471  0EFD  1C03               	skipc
  9472  0EFE  2EEF               	goto	l6792
  9473                           
  9474                           ;eeprom.c: 89:       return result;
  9475  0EFF  0829               	movf	EEPROM_Read_Integer@result+1,w
  9476  0F00  00A4               	movwf	?_EEPROM_Read_Integer+1
  9477  0F01  0828               	movf	EEPROM_Read_Integer@result,w
  9478  0F02  00A3               	movwf	?_EEPROM_Read_Integer
  9479  0F03  0008               	return
  9480  0F04                     __end_of_EEPROM_Read_Integer:	
  9481  0F04                     __ptext37:	
  9482 ;; *************** function _USART_put_int *****************
  9483 ;; Defined at:
  9484 ;;		line 138 in file "usart.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  value           2   10[BANK0 ] int 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  dado            1   12[BANK0 ] PTR unsigned char 
  9489 ;;		 -> USART_put_int@value(2), 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 300/0
  9496 ;;		On exit  : 300/100
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9499 ;;      Params:         0       2       0       0       0
  9500 ;;      Locals:         0       1       0       0       0
  9501 ;;      Temps:          0       0       0       0       0
  9502 ;;      Totals:         0       3       0       0       0
  9503 ;;Total ram usage:        3 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    2
  9506 ;; This function calls:
  9507 ;;		_USART_putc
  9508 ;; This function is called by:
  9509 ;;		_Decodify_Command
  9510 ;;		_PROCULUS_Control_Register_Write
  9511 ;;		_PROCULUS_VP_Write
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           
  9516                           ;psect for function _USART_put_int
  9517  0F04                     _USART_put_int:	
  9518  0F04                     l6524:	
  9519                           ;incstack = 0
  9520                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9521                           
  9522                           
  9523                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9524  0F04  302A               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9525  0F05  00AC               	movwf	USART_put_int@dado
  9526                           
  9527                           ;usart.c: 141:      USART_putc(*(dado+1));
  9528  0F06  0A2C               	incf	USART_put_int@dado,w
  9529  0F07  0084               	movwf	4
  9530  0F08  1383               	bcf	3,7	;select IRP bank0
  9531  0F09  0800               	movf	0,w
  9532  0F0A  2587  120A  158A   	fcall	_USART_putc
  9533                           
  9534                           ;usart.c: 142:      USART_putc(*dado);
  9535  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  9536  0F0E  082C               	movf	USART_put_int@dado,w
  9537  0F0F  0084               	movwf	4
  9538  0F10  1383               	bcf	3,7	;select IRP bank0
  9539  0F11  0800               	movf	0,w
  9540  0F12  2D87               	ljmp	_USART_putc
  9541  0F13                     __end_of_USART_put_int:	
  9542  0F13                     __ptext25:	
  9543 ;; *************** function _Send_Reply_OK *****************
  9544 ;; Defined at:
  9545 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;		None
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9554 ;; Tracked objects:
  9555 ;;		On entry : 100/100
  9556 ;;		On exit  : 300/100
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9559 ;;      Params:         0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0
  9562 ;;      Totals:         0       0       0       0       0
  9563 ;;Total ram usage:        0 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; Hardware stack levels required when called:    3
  9566 ;; This function calls:
  9567 ;;		_USART_put_string
  9568 ;; This function is called by:
  9569 ;;		_Decodify_Command
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           
  9574                           ;psect for function _Send_Reply_OK
  9575  0F13                     _Send_Reply_OK:	
  9576  0F13                     l7404:	
  9577                           ;incstack = 0
  9578                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9579                           
  9580                           
  9581                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  9582  0F13  3035               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  9583  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  9584  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  9585  0F16  00A1               	movwf	USART_put_string@vetor
  9586  0F17  3080               	movlw	128
  9587  0F18  00A2               	movwf	USART_put_string@vetor+1
  9588  0F19  2DC5               	ljmp	l6808
  9589  0F1A                     __end_of_Send_Reply_OK:	
  9590  0F1A                     PL6:	
  9591  0F1A  0821               	movf	?__Umul8_16+1,w
  9592  0F1B  00ED               	movwf	___flmul@temp+1
  9593  0F1C  0820               	movf	?__Umul8_16,w
  9594  0F1D  00EC               	movwf	___flmul@temp
  9595  0F1E  00DD               	movwf	??___flmul
  9596  0F1F  086D               	movf	___flmul@temp+1,w
  9597  0F20  00DE               	movwf	??___flmul+1
  9598  0F21  01DF               	clrf	??___flmul+2
  9599  0F22  01E0               	clrf	??___flmul+3
  9600  0F23  085D               	movf	??___flmul,w
  9601  0F24  07E4               	addwf	___flmul@grs,f
  9602  0F25  085E               	movf	??___flmul+1,w
  9603  0F26  1103               	clrz
  9604  0F27  1803               	skipnc
  9605  0F28  3E01               	addlw	1
  9606  0F29  1D03               	btfss	3,2
  9607  0F2A  07E5               	addwf	___flmul@grs+1,f
  9608  0F2B  085F               	movf	??___flmul+2,w
  9609  0F2C  1103               	clrz
  9610  0F2D  1803               	skipnc
  9611  0F2E  3E01               	addlw	1
  9612  0F2F  1D03               	btfss	3,2
  9613  0F30  07E6               	addwf	___flmul@grs+2,f
  9614  0F31  0860               	movf	??___flmul+3,w
  9615  0F32  1103               	clrz
  9616  0F33  0008               	return
  9617  0F34                     __end_ofPL6:	
  9618  0F34                     PL8:	
  9619  0F34  00ED               	movwf	___flmul@temp+1
  9620  0F35  0820               	movf	?__Umul8_16,w
  9621  0F36  00EC               	movwf	___flmul@temp
  9622  0F37  00DD               	movwf	??___flmul
  9623  0F38  086D               	movf	___flmul@temp+1,w
  9624  0F39  00DE               	movwf	??___flmul+1
  9625  0F3A  01DF               	clrf	??___flmul+2
  9626  0F3B  01E0               	clrf	??___flmul+3
  9627  0F3C  0008               	return
  9628  0F3D                     __end_ofPL8:	
  9629  0F3D                     PL12:	
  9630  0F3D  085D               	movf	??___flmul,w
  9631  0F3E  07E8               	addwf	___flmul@prod,f
  9632  0F3F  085E               	movf	??___flmul+1,w
  9633  0F40  1103               	clrz
  9634  0F41  1803               	skipnc
  9635  0F42  3E01               	addlw	1
  9636  0F43  1D03               	btfss	3,2
  9637  0F44  07E9               	addwf	___flmul@prod+1,f
  9638  0F45  085F               	movf	??___flmul+2,w
  9639  0F46  1103               	clrz
  9640  0F47  1803               	skipnc
  9641  0F48  3E01               	addlw	1
  9642  0F49  1D03               	btfss	3,2
  9643  0F4A  07EA               	addwf	___flmul@prod+2,f
  9644  0F4B  0860               	movf	??___flmul+3,w
  9645  0F4C  1103               	clrz
  9646  0F4D  0008               	return
  9647  0F4E                     __end_ofPL12:	
  9648  0F4E                     PL14:	
  9649  0F4E  0823               	movf	?_EEPROM_Read_Integer,w
  9650  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  9651  0F50  00B9               	movwf	??_Load_Work^(0+128)
  9652  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  9653  0F52  0824               	movf	?_EEPROM_Read_Integer+1,w
  9654  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  9655  0F54  00BA               	movwf	(??_Load_Work^(0+128)+1)
  9656  0F55  01BB               	clrf	(??_Load_Work^(0+128)+2)
  9657  0F56  01BC               	clrf	(??_Load_Work^(0+128)+3)
  9658  0F57  083C               	movf	(??_Load_Work+3)^(0+128),w
  9659  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  9660  0F59  00AE               	movwf	___xxtofl@val+3
  9661  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  9662  0F5B  083B               	movf	(??_Load_Work+2)^(0+128),w
  9663  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  9664  0F5D  00AD               	movwf	___xxtofl@val+2
  9665  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  9666  0F5F  083A               	movf	(??_Load_Work+1)^(0+128),w
  9667  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  9668  0F61  00AC               	movwf	___xxtofl@val+1
  9669  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  9670  0F63  0839               	movf	??_Load_Work^(0+128),w
  9671  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  9672  0F65  00AB               	movwf	___xxtofl@val
  9673  0F66  3400               	retlw	0
  9674  0F67                     __end_ofPL14:	
  9675  0F67                     PL16:	
  9676  0F67  0821               	movf	?__Umul8_16+1,w
  9677  0F68  00ED               	movwf	___flmul@temp+1
  9678  0F69  0820               	movf	?__Umul8_16,w
  9679  0F6A  00EC               	movwf	___flmul@temp
  9680  0F6B  07E4               	addwf	___flmul@grs,f
  9681  0F6C  3001               	movlw	1
  9682  0F6D  1803               	skipnc
  9683  0F6E  07E5               	addwf	___flmul@grs+1,f
  9684  0F6F  1803               	skipnc
  9685  0F70  07E6               	addwf	___flmul@grs+2,f
  9686  0F71  1803               	skipnc
  9687  0F72  07E7               	addwf	___flmul@grs+3,f
  9688  0F73  086D               	movf	___flmul@temp+1,w
  9689  0F74  07E8               	addwf	___flmul@prod,f
  9690  0F75  3401               	retlw	1
  9691  0F76                     __end_ofPL16:	
  9692  0F76                     PL22:	
  9693  0F76  1803               	skipnc
  9694  0F77  07E9               	addwf	___flmul@prod+1,f
  9695  0F78  1803               	skipnc
  9696  0F79  07EA               	addwf	___flmul@prod+2,f
  9697  0F7A  1803               	skipnc
  9698  0F7B  07EB               	addwf	___flmul@prod+3,f
  9699  0F7C  0866               	movf	___flmul@grs+2,w
  9700  0F7D  00E7               	movwf	___flmul@grs+3
  9701  0F7E  0865               	movf	___flmul@grs+1,w
  9702  0F7F  00E6               	movwf	___flmul@grs+2
  9703  0F80  0864               	movf	___flmul@grs,w
  9704  0F81  00E5               	movwf	___flmul@grs+1
  9705  0F82  01E4               	clrf	___flmul@grs
  9706  0F83  0008               	return
  9707  0F84                     __end_ofPL22:	
  9708  0F84                     PL46:	
  9709  0F84  3033               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  9710  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  9711  0F86  00A0               	movwf	strcat@from
  9712  0F87  3080               	movlw	128
  9713  0F88  00A1               	movwf	strcat@from+1
  9714  0F89  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9715  0F8A                     __end_ofPL46:	
  9716  0F8A                     PL56:	
  9717  0F8A  1803               	skipnc
  9718  0F8B  3E01               	addlw	1
  9719  0F8C  1D03               	btfss	3,2
  9720  0F8D  07EB               	addwf	___flmul@prod+3,f
  9721  0F8E  0857               	movf	___flmul@b+2,w
  9722  0F8F  00A0               	movwf	__Umul8_16@multiplicand
  9723  0F90  0008               	return
  9724  0F91                     __end_ofPL56:	
  9725  0F91                     PL66:	
  9726  0F91  3038               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  9727  0F92  00A0               	movwf	strcat@from
  9728  0F93  3080               	movlw	128
  9729  0F94  00A1               	movwf	strcat@from+1
  9730  0F95  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9731  0F96                     __end_ofPL66:	
  9732  0F96                     PL70:	
  9733  0F96  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  9734  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  9735  0F98  00A1               	movwf	USART_put_string@vetor
  9736  0F99  3001               	movlw	1
  9737  0F9A  00A2               	movwf	USART_put_string@vetor+1
  9738  0F9B  0008               	return
  9739  0F9C                     __end_ofPL70:	
  9740  0F9C                     __ptext33:	
  9741 ;; *************** function _PROCULUS_Show_Screen *****************
  9742 ;; Defined at:
  9743 ;;		line 243 in file "proculus.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  screen          2   17[BANK0 ] unsigned int 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  vetor           3   19[BANK0 ] unsigned char [3]
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 300/0
  9754 ;;		On exit  : 300/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9757 ;;      Params:         0       2       0       0       0
  9758 ;;      Locals:         0       3       0       0       0
  9759 ;;      Temps:          0       0       0       0       0
  9760 ;;      Totals:         0       5       0       0       0
  9761 ;;Total ram usage:        5 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    4
  9764 ;; This function calls:
  9765 ;;		_PROCULUS_Control_Register_Write
  9766 ;; This function is called by:
  9767 ;;		_Decodify_Command
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           
  9772                           ;psect for function _PROCULUS_Show_Screen
  9773  0F9C                     _PROCULUS_Show_Screen:	
  9774                           
  9775                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9776                           
  9777                           ;incstack = 0
  9778                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9779  0F9C  3003               	movlw	3
  9780  0F9D  00B3               	movwf	PROCULUS_Show_Screen@vetor
  9781                           
  9782                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9783  0F9E  0832               	movf	PROCULUS_Show_Screen@screen+1,w
  9784  0F9F  00B4               	movwf	PROCULUS_Show_Screen@vetor+1
  9785                           
  9786                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9787  0FA0  0831               	movf	PROCULUS_Show_Screen@screen,w
  9788  0FA1  00B5               	movwf	PROCULUS_Show_Screen@vetor+2
  9789                           
  9790                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9791  0FA2  3003               	movlw	3
  9792  0FA3  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9793  0FA4  3033               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9794  0FA5  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9795  0FA6                     __end_of_PROCULUS_Show_Screen:	
  9796  0FA6                     __ptext34:	
  9797 ;; *************** function _PROCULUS_Buzzer *****************
  9798 ;; Defined at:
  9799 ;;		line 223 in file "proculus.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  time_ms_x_10    2   17[BANK0 ] unsigned int 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  vetor           2   19[BANK0 ] unsigned char [2]
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9808 ;; Tracked objects:
  9809 ;;		On entry : 300/0
  9810 ;;		On exit  : 300/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9813 ;;      Params:         0       2       0       0       0
  9814 ;;      Locals:         0       2       0       0       0
  9815 ;;      Temps:          0       0       0       0       0
  9816 ;;      Totals:         0       4       0       0       0
  9817 ;;Total ram usage:        4 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; Hardware stack levels required when called:    4
  9820 ;; This function calls:
  9821 ;;		_PROCULUS_Control_Register_Write
  9822 ;;		___lwdiv
  9823 ;; This function is called by:
  9824 ;;		_Decodify_Command
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function _PROCULUS_Buzzer
  9830  0FA6                     _PROCULUS_Buzzer:	
  9831                           
  9832                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9833                           
  9834                           ;incstack = 0
  9835                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9836  0FA6  300A               	movlw	10
  9837  0FA7  00A0               	movwf	___lwdiv@divisor
  9838  0FA8  01A1               	clrf	___lwdiv@divisor+1
  9839  0FA9  0832               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9840  0FAA  00A3               	movwf	___lwdiv@dividend+1
  9841  0FAB  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9842  0FAC  00A2               	movwf	___lwdiv@dividend
  9843  0FAD  160A  118A  2654  120A  158A  	fcall	___lwdiv
  9844  0FB2  0821               	movf	?___lwdiv+1,w
  9845  0FB3  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9846  0FB4  0820               	movf	?___lwdiv,w
  9847  0FB5  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9848                           
  9849                           ;proculus.c: 226:      vetor[0]=0x02;
  9850  0FB6  3002               	movlw	2
  9851  0FB7  00B3               	movwf	PROCULUS_Buzzer@vetor
  9852                           
  9853                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9854  0FB8  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9855  0FB9  00B4               	movwf	PROCULUS_Buzzer@vetor+1
  9856                           
  9857                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9858  0FBA  3002               	movlw	2
  9859  0FBB  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9860  0FBC  3033               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9861  0FBD  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9862  0FBE                     __end_of_PROCULUS_Buzzer:	
  9863  0FBE                     __ptext36:	
  9864 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9865 ;; Defined at:
  9866 ;;		line 13 in file "proculus.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  vetor           1    wreg     PTR unsigned char 
  9869 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9870 ;;  size            1   13[BANK0 ] unsigned char 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  vetor           1   15[BANK0 ] PTR unsigned char 
  9873 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9874 ;;  i               1   16[BANK0 ] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 300/0
  9881 ;;		On exit  : 300/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9884 ;;      Params:         0       1       0       0       0
  9885 ;;      Locals:         0       2       0       0       0
  9886 ;;      Temps:          0       1       0       0       0
  9887 ;;      Totals:         0       4       0       0       0
  9888 ;;Total ram usage:        4 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:    3
  9891 ;; This function calls:
  9892 ;;		_PROCULUS_Delay
  9893 ;;		_USART_put_int
  9894 ;;		_USART_putc
  9895 ;; This function is called by:
  9896 ;;		_PROCULUS_Buzzer
  9897 ;;		_PROCULUS_Show_Screen
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _PROCULUS_Control_Register_Write
  9903  0FBE                     _PROCULUS_Control_Register_Write:	
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9907                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9908  0FBE  00AF               	movwf	PROCULUS_Control_Register_Write@vetor
  9909                           
  9910                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9911  0FBF  30A5               	movlw	165
  9912  0FC0  00AA               	movwf	USART_put_int@value
  9913  0FC1  305A               	movlw	90
  9914  0FC2  00AB               	movwf	USART_put_int@value+1
  9915  0FC3  2704  120A  158A   	fcall	_USART_put_int
  9916                           
  9917                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9918  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  9919  0FC7  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9920  0FC8  3E01               	addlw	1
  9921  0FC9  2587  120A  158A   	fcall	_USART_putc
  9922                           
  9923                           ;proculus.c: 16:      USART_putc(0x80);
  9924  0FCC  3080               	movlw	128
  9925  0FCD  2587  120A  158A   	fcall	_USART_putc
  9926                           
  9927                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9928  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  9929  0FD1  01B0               	clrf	PROCULUS_Control_Register_Write@i
  9930  0FD2                     l6892:	
  9931  0FD2  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9932  0FD3  0230               	subwf	PROCULUS_Control_Register_Write@i,w
  9933  0FD4  1803               	btfsc	3,0
  9934  0FD5  2FE2               	goto	l6894
  9935                           
  9936                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9937  0FD6  0830               	movf	PROCULUS_Control_Register_Write@i,w
  9938  0FD7  072F               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9939  0FD8  00AE               	movwf	??_PROCULUS_Control_Register_Write
  9940  0FD9  0084               	movwf	4
  9941  0FDA  1383               	bcf	3,7	;select IRP bank0
  9942  0FDB  0800               	movf	0,w
  9943  0FDC  2587  120A  158A   	fcall	_USART_putc
  9944  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  9945  0FE0  0AB0               	incf	PROCULUS_Control_Register_Write@i,f
  9946  0FE1  2FD2               	goto	l6892
  9947  0FE2                     l6894:	
  9948                           
  9949                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9950  0FE2  01A0               	clrf	PROCULUS_Delay@tempo_ms
  9951  0FE3  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  9952  0FE4  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  9953  0FE5  2FE6               	ljmp	l6540
  9954  0FE6                     __end_of_PROCULUS_Control_Register_Write:	
  9955  0FE6                     __ptext39:	
  9956 ;; *************** function _PROCULUS_Delay *****************
  9957 ;; Defined at:
  9958 ;;		line 267 in file "proculus.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  i               2    4[BANK0 ] unsigned int 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      void 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0
  9967 ;; Tracked objects:
  9968 ;;		On entry : 300/800
  9969 ;;		On exit  : 300/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9972 ;;      Params:         0       2       0       0       0
  9973 ;;      Locals:         0       2       0       0       0
  9974 ;;      Temps:          0       2       0       0       0
  9975 ;;      Totals:         0       6       0       0       0
  9976 ;;Total ram usage:        6 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:    1
  9979 ;; This function calls:
  9980 ;;		Nothing
  9981 ;; This function is called by:
  9982 ;;		_PROCULUS_Control_Register_Write
  9983 ;;		_PROCULUS_VP_Write
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           
  9988                           ;psect for function _PROCULUS_Delay
  9989  0FE6                     _PROCULUS_Delay:	
  9990  0FE6                     l6540:	
  9991                           ;incstack = 0
  9992                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9993                           
  9994                           
  9995                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9996  0FE6  01A4               	clrf	PROCULUS_Delay@i
  9997  0FE7  01A5               	clrf	PROCULUS_Delay@i+1
  9998  0FE8                     l6546:	
  9999  0FE8  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10000  0FE9  0225               	subwf	PROCULUS_Delay@i+1,w
 10001  0FEA  1D03               	skipz
 10002  0FEB  2FEE               	goto	u6025
 10003  0FEC  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10004  0FED  0224               	subwf	PROCULUS_Delay@i,w
 10005  0FEE                     u6025:	
 10006  0FEE  1803               	btfsc	3,0
 10007  0FEF  0008               	return
 10008                           
 10009                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10010  0FF0  3003               	movlw	3
 10011  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
 10012  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
 10013  0FF3  00A3               	movwf	??_PROCULUS_Delay+1
 10014  0FF4  3097               	movlw	151
 10015  0FF5  00A2               	movwf	??_PROCULUS_Delay
 10016  0FF6                     u7677:	
 10017  0FF6  0BA2               	decfsz	??_PROCULUS_Delay,f
 10018  0FF7  2FF6               	goto	u7677
 10019  0FF8  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10020  0FF9  2FF6               	goto	u7677
 10021                           
 10022                           ;proculus.c: 270:     }
 10023  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
 10024  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
 10025  0FFC  0AA4               	incf	PROCULUS_Delay@i,f
 10026  0FFD  1903               	skipnz
 10027  0FFE  0AA5               	incf	PROCULUS_Delay@i+1,f
 10028  0FFF  2FE8               	goto	l6546
 10029  1000                     __end_of_PROCULUS_Delay:	
 10030                           
 10031                           	psect	text44
 10032  1E21                     __ptext44:	
 10033 ;; *************** function _EEPROM_Write_Integer *****************
 10034 ;; Defined at:
 10035 ;;		line 68 in file "eeprom.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  addr            1    wreg     unsigned char 
 10038 ;;  dado            2    5[BANK0 ] unsigned int 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  addr            1    9[BANK0 ] unsigned char 
 10041 ;;  i               1   11[BANK0 ] unsigned char 
 10042 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10043 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10044 ;;  addr_memo       1    0        unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 200/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10054 ;;      Params:         0       2       0       0       0
 10055 ;;      Locals:         0       3       0       0       0
 10056 ;;      Temps:          0       2       0       0       0
 10057 ;;      Totals:         0       7       0       0       0
 10058 ;;Total ram usage:        7 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    2
 10061 ;; This function calls:
 10062 ;;		_EEPROM_Write_Byte
 10063 ;; This function is called by:
 10064 ;;		_main
 10065 ;;		_Decodify_Command
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           
 10070                           ;psect for function _EEPROM_Write_Integer
 10071  1E21                     _EEPROM_Write_Integer:	
 10072                           
 10073                           ;incstack = 0
 10074                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10075                           ;EEPROM_Write_Integer@addr stored from wreg
 10076  1E21  1283               	bcf	3,5	;RP0=0, select bank0
 10077  1E22  00A9               	movwf	EEPROM_Write_Integer@addr
 10078                           
 10079                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10080  1E23  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10081  1E24  00AA               	movwf	EEPROM_Write_Integer@ptr
 10082                           
 10083                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10084  1E25  01AB               	clrf	EEPROM_Write_Integer@i
 10085  1E26                     l7344:	
 10086                           
 10087                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10088  1E26  082A               	movf	EEPROM_Write_Integer@ptr,w
 10089  1E27  0084               	movwf	4
 10090  1E28  1383               	bcf	3,7	;select IRP bank0
 10091  1E29  0800               	movf	0,w
 10092  1E2A  00A0               	movwf	EEPROM_Write_Byte@dado
 10093  1E2B  0829               	movf	EEPROM_Write_Integer@addr,w
 10094  1E2C  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10095  1E2F  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1E30  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1E31  3002               	movlw	2
 10098  1E32  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 10099  1E33  0AA9               	incf	EEPROM_Write_Integer@addr,f
 10100  1E34  0AAB               	incf	EEPROM_Write_Integer@i,f
 10101  1E35  022B               	subwf	EEPROM_Write_Integer@i,w
 10102  1E36  1C03               	skipc
 10103  1E37  2E26               	goto	l7344
 10104                           
 10105                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10106  1E38  304E               	movlw	78
 10107  1E39  1283               	bcf	3,5	;RP0=0, select bank0
 10108  1E3A  1303               	bcf	3,6	;RP1=0, select bank0
 10109  1E3B  00A8               	movwf	??_EEPROM_Write_Integer+1
 10110  1E3C  30EA               	movlw	234
 10111  1E3D  00A7               	movwf	??_EEPROM_Write_Integer
 10112  1E3E                     u7687:	
 10113  1E3E  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10114  1E3F  2E3E               	goto	u7687
 10115  1E40  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10116  1E41  2E3E               	goto	u7687
 10117  1E42  0000               	nop
 10118  1E43  0008               	return
 10119  1E44                     __end_of_EEPROM_Write_Integer:	
 10120  1E44                     __ptext43:	
 10121 ;; *************** function _EEPROM_Write_String *****************
 10122 ;; Defined at:
 10123 ;;		line 97 in file "eeprom.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  addr            1    wreg     unsigned char 
 10126 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10127 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  addr            1    6[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 300/300
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10139 ;;      Params:         0       1       0       0       0
 10140 ;;      Locals:         0       1       0       0       0
 10141 ;;      Temps:          0       0       0       0       0
 10142 ;;      Totals:         0       2       0       0       0
 10143 ;;Total ram usage:        2 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    2
 10146 ;; This function calls:
 10147 ;;		_EEPROM_Write_Byte
 10148 ;; This function is called by:
 10149 ;;		_Decodify_Command
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           
 10154                           ;psect for function _EEPROM_Write_String
 10155  1E44                     _EEPROM_Write_String:	
 10156                           
 10157                           ;incstack = 0
 10158                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10159                           ;EEPROM_Write_String@addr stored from wreg
 10160  1E44  1283               	bcf	3,5	;RP0=0, select bank0
 10161  1E45  1303               	bcf	3,6	;RP1=0, select bank0
 10162  1E46  00A6               	movwf	EEPROM_Write_String@addr
 10163  1E47                     l7414:	
 10164                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10165                           
 10166                           
 10167                           ;eeprom.c: 99:     while(*dado)
 10168  1E47  0825               	movf	EEPROM_Write_String@dado,w
 10169  1E48  0084               	movwf	4
 10170  1E49  1783               	bsf	3,7	;select IRP bank2
 10171  1E4A  0800               	movf	0,w
 10172  1E4B  1903               	btfsc	3,2
 10173  1E4C  2E58               	goto	l7416
 10174                           
 10175                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10176  1E4D  2697  160A  158A   	fcall	PL60	;call to abstracted procedure
 10177  1E50  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10178                           
 10179                           ;eeprom.c: 102:      addr++;
 10180  1E53  1283               	bcf	3,5	;RP0=0, select bank0
 10181  1E54  1303               	bcf	3,6	;RP1=0, select bank0
 10182  1E55  0AA6               	incf	EEPROM_Write_String@addr,f
 10183                           
 10184                           ;eeprom.c: 103:      dado++;
 10185  1E56  0AA5               	incf	EEPROM_Write_String@dado,f
 10186  1E57  2E47               	goto	l7414
 10187  1E58                     l7416:	
 10188                           
 10189                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10190  1E58  2697  160A  158A   	fcall	PL60	;call to abstracted procedure
 10191  1E5B  2E5C               	ljmp	_EEPROM_Write_Byte
 10192  1E5C                     __end_of_EEPROM_Write_String:	
 10193  1E5C                     __ptext45:	
 10194 ;; *************** function _EEPROM_Write_Byte *****************
 10195 ;; Defined at:
 10196 ;;		line 21 in file "eeprom.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  addr            1    wreg     unsigned char 
 10199 ;;  dado            1    0[BANK0 ] unsigned char 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  addr            1    3[BANK0 ] unsigned char 
 10202 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, status,2, status,0
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/300
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10212 ;;      Params:         0       1       0       0       0
 10213 ;;      Locals:         0       2       0       0       0
 10214 ;;      Temps:          0       2       0       0       0
 10215 ;;      Totals:         0       5       0       0       0
 10216 ;;Total ram usage:        5 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    1
 10219 ;; This function calls:
 10220 ;;		Nothing
 10221 ;; This function is called by:
 10222 ;;		_Decodify_Command
 10223 ;;		_EEPROM_Write_Integer
 10224 ;;		_EEPROM_Write_String
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _EEPROM_Write_Byte
 10230  1E5C                     _EEPROM_Write_Byte:	
 10231                           
 10232                           ;incstack = 0
 10233                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10234                           ;EEPROM_Write_Byte@addr stored from wreg
 10235  1E5C  1283               	bcf	3,5	;RP0=0, select bank0
 10236  1E5D  1303               	bcf	3,6	;RP1=0, select bank0
 10237  1E5E  00A3               	movwf	EEPROM_Write_Byte@addr
 10238                           
 10239                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10240  1E5F  3014               	movlw	20
 10241  1E60  1683               	bsf	3,5	;RP0=1, select bank3
 10242  1E61  1703               	bsf	3,6	;RP1=1, select bank3
 10243  1E62  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10244  1E63  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10245  1E64                     l605:	
 10246                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10247                           
 10248  1E64  188C               	btfsc	12,1	;volsfr
 10249  1E65  2E64               	goto	l605
 10250                           
 10251                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10252  1E66  1F8B               	btfss	11,7	;volatile
 10253  1E67  2E6D               	goto	l6822
 10254                           
 10255                           ;eeprom.c: 28:           last_GIE=1;
 10256  1E68  1283               	bcf	3,5	;RP0=0, select bank0
 10257  1E69  1303               	bcf	3,6	;RP1=0, select bank0
 10258  1E6A  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10259  1E6B  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10260  1E6C  2E70               	goto	l6824
 10261  1E6D                     l6822:	
 10262                           
 10263                           ;eeprom.c: 30:           last_GIE=0;
 10264  1E6D  1283               	bcf	3,5	;RP0=0, select bank0
 10265  1E6E  1303               	bcf	3,6	;RP1=0, select bank0
 10266  1E6F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10267  1E70                     l6824:	
 10268                           
 10269                           ;eeprom.c: 32:        EEADR=addr;
 10270  1E70  0823               	movf	EEPROM_Write_Byte@addr,w
 10271  1E71  1703               	bsf	3,6	;RP1=1, select bank2
 10272  1E72  008D               	movwf	13	;volatile
 10273                           
 10274                           ;eeprom.c: 33:        EEDATA=dado;
 10275  1E73  1303               	bcf	3,6	;RP1=0, select bank0
 10276  1E74  0820               	movf	EEPROM_Write_Byte@dado,w
 10277  1E75  1703               	bsf	3,6	;RP1=1, select bank2
 10278  1E76  008C               	movwf	12	;volatile
 10279                           
 10280                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10281  1E77  1683               	bsf	3,5	;RP0=1, select bank3
 10282  1E78  138C               	bcf	12,7	;volsfr
 10283                           
 10284                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10285  1E79  150C               	bsf	12,2	;volsfr
 10286                           
 10287                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10288  1E7A  138B               	bcf	11,7	;volatile
 10289                           
 10290                           ;eeprom.c: 37:        EECON2=0x55;
 10291  1E7B  3055               	movlw	85
 10292  1E7C  008D               	movwf	13	;volsfr
 10293                           
 10294                           ;eeprom.c: 38:        EECON2=0xAA;
 10295  1E7D  30AA               	movlw	170
 10296  1E7E  008D               	movwf	13	;volsfr
 10297                           
 10298                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10299  1E7F  148C               	bsf	12,1	;volsfr
 10300                           
 10301                           ;eeprom.c: 41:        if(last_GIE==1)
 10302  1E80  1283               	bcf	3,5	;RP0=0, select bank0
 10303  1E81  1303               	bcf	3,6	;RP1=0, select bank0
 10304  1E82  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10305  1E83  1D03               	btfss	3,2
 10306  1E84  2E87               	goto	l610
 10307                           
 10308                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10309  1E85  178B               	bsf	11,7	;volatile
 10310  1E86  2E88               	goto	l611
 10311  1E87                     l610:	
 10312                           ;eeprom.c: 43:        else
 10313                           
 10314                           
 10315                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10316  1E87  138B               	bcf	11,7	;volatile
 10317  1E88                     l611:	
 10318                           
 10319                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10320  1E88  1683               	bsf	3,5	;RP0=1, select bank3
 10321  1E89  1703               	bsf	3,6	;RP1=1, select bank3
 10322  1E8A  110C               	bcf	12,2	;volsfr
 10323                           
 10324                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10325  1E8B  304E               	movlw	78
 10326  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
 10327  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
 10328  1E8E  00A2               	movwf	??_EEPROM_Write_Byte+1
 10329  1E8F  30EA               	movlw	234
 10330  1E90  00A1               	movwf	??_EEPROM_Write_Byte
 10331  1E91                     u7697:	
 10332  1E91  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10333  1E92  2E91               	goto	u7697
 10334  1E93  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10335  1E94  2E91               	goto	u7697
 10336  1E95  0000               	nop
 10337  1E96  0008               	return
 10338  1E97                     __end_of_EEPROM_Write_Byte:	
 10339  1E97                     PL60:	
 10340  1E97  0825               	movf	EEPROM_Write_String@dado,w
 10341  1E98  0084               	movwf	4
 10342  1E99  0800               	movf	0,w
 10343  1E9A  00A0               	movwf	EEPROM_Write_Byte@dado
 10344  1E9B  0826               	movf	EEPROM_Write_String@addr,w
 10345  1E9C  0008               	return
 10346  1E9D                     __end_ofPL60:	
 10347                           
 10348                           	psect	text46
 10349  07E6                     __ptext46:	
 10350 ;; *************** function _EEPROM_Read_String *****************
 10351 ;; Defined at:
 10352 ;;		line 109 in file "eeprom.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  addr            1    wreg     unsigned char 
 10355 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10356 ;;		 -> texto(16), 
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;  addr            1    4[BANK0 ] unsigned char 
 10359 ;;  c               1    5[BANK0 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 300/300
 10366 ;;		On exit  : B00/800
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10369 ;;      Params:         0       1       0       0       0
 10370 ;;      Locals:         0       2       0       0       0
 10371 ;;      Temps:          0       0       0       0       0
 10372 ;;      Totals:         0       3       0       0       0
 10373 ;;Total ram usage:        3 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    2
 10376 ;; This function calls:
 10377 ;;		_EEPROM_Read_Byte
 10378 ;; This function is called by:
 10379 ;;		_Decodify_Command
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           
 10384                           ;psect for function _EEPROM_Read_String
 10385  07E6                     _EEPROM_Read_String:	
 10386                           
 10387                           ;incstack = 0
 10388                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10389                           ;EEPROM_Read_String@addr stored from wreg
 10390  07E6  1283               	bcf	3,5	;RP0=0, select bank0
 10391  07E7  1303               	bcf	3,6	;RP1=0, select bank0
 10392  07E8  00A4               	movwf	EEPROM_Read_String@addr
 10393  07E9                     l637:	
 10394                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10395                           
 10396                           
 10397                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10398  07E9  0824               	movf	EEPROM_Read_String@addr,w
 10399  07EA  120A  158A  26C8  120A  118A  	fcall	_EEPROM_Read_Byte
 10400  07EF  1303               	bcf	3,6	;RP1=0, select bank0
 10401  07F0  00A5               	movwf	EEPROM_Read_String@c
 10402  07F1  0AA4               	incf	EEPROM_Read_String@addr,f
 10403                           
 10404                           ;eeprom.c: 114:         *(dado++)=c;
 10405  07F2  0823               	movf	EEPROM_Read_String@dado,w
 10406  07F3  0084               	movwf	4
 10407  07F4  0825               	movf	EEPROM_Read_String@c,w
 10408  07F5  1783               	bsf	3,7	;select IRP bank2
 10409  07F6  0080               	movwf	0
 10410  07F7  0AA3               	incf	EEPROM_Read_String@dado,f
 10411                           
 10412                           ;eeprom.c: 116:       }while(c);
 10413  07F8  0825               	movf	EEPROM_Read_String@c,w
 10414  07F9  1903               	btfsc	3,2
 10415  07FA  0008               	return
 10416  07FB  2FE9               	goto	l637
 10417  07FC                     __end_of_EEPROM_Read_String:	
 10418                           
 10419                           	psect	text49
 10420  1C43                     __ptext49:	
 10421 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10422 ;; Defined at:
 10423 ;;		line 262 in file "EEPROM_24C1025.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  chip_add        1    wreg     unsigned char 
 10426 ;;  mem_add         4   15[BANK0 ] unsigned long 
 10427 ;;  data            1   19[BANK0 ] unsigned char 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  chip_add        1   20[BANK0 ] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 300/300
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10439 ;;      Params:         0       5       0       0       0
 10440 ;;      Locals:         0       1       0       0       0
 10441 ;;      Temps:          0       0       0       0       0
 10442 ;;      Totals:         0       6       0       0       0
 10443 ;;Total ram usage:        6 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    4
 10446 ;; This function calls:
 10447 ;;		_EEPROM_24C1025_Write_Buffer
 10448 ;; This function is called by:
 10449 ;;		_Decodify_Command
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function _EEPROM_24C1025_Write_Byte
 10455  1C43                     _EEPROM_24C1025_Write_Byte:	
 10456                           
 10457                           ;incstack = 0
 10458                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10459                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10460  1C43  1283               	bcf	3,5	;RP0=0, select bank0
 10461  1C44  1303               	bcf	3,6	;RP1=0, select bank0
 10462  1C45  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10463                           
 10464                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10465  1C46  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10466  1C47  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10467  1C48  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10468  1C49  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10469  1C4A  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10470  1C4B  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10471  1C4C  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10472  1C4D  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10473  1C4E  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10474  1C4F  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10475  1C50  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10476  1C51  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 10477  1C52  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 10478  1C53  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10479  1C54  120A  118A  2ACA   	ljmp	_EEPROM_24C1025_Write_Buffer
 10480  1C57                     __end_of_EEPROM_24C1025_Write_Byte:	
 10481                           
 10482                           	psect	text52
 10483  0036                     __ptext52:	
 10484 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10485 ;; Defined at:
 10486 ;;		line 267 in file "EEPROM_24C1025.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  chip_add        1    wreg     unsigned char 
 10489 ;;  mem_add         4   17[BANK0 ] unsigned long 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  chip_add        1   21[BANK0 ] unsigned char 
 10492 ;;  data            1   22[BANK0 ] unsigned char 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      unsigned char 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 300/300
 10499 ;;		On exit  : 300/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10502 ;;      Params:         0       4       0       0       0
 10503 ;;      Locals:         0       2       0       0       0
 10504 ;;      Temps:          0       0       0       0       0
 10505 ;;      Totals:         0       6       0       0       0
 10506 ;;Total ram usage:        6 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    4
 10509 ;; This function calls:
 10510 ;;		_EEPROM_24C1025_Read_Buffer
 10511 ;; This function is called by:
 10512 ;;		_Decodify_Command
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           
 10517                           ;psect for function _EEPROM_24C1025_Read_Byte
 10518  0036                     _EEPROM_24C1025_Read_Byte:	
 10519                           
 10520                           ;incstack = 0
 10521                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10522                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10523  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10524  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10525  0038  00B5               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10526                           
 10527                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10528  0039  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10529  003A  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10530  003B  0833               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10531  003C  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10532  003D  0832               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10533  003E  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10534  003F  0831               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10535  0040  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10536  0041  3036               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10537  0042  01A8               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10538  0043  0AA8               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10539  0044  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 10540  0045  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10541  0046  0835               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10542  0047  21E7               	fcall	_EEPROM_24C1025_Read_Buffer
 10543                           
 10544                           ;EEPROM_24C1025.c: 270:     return data;
 10545  0048  1283               	bcf	3,5	;RP0=0, select bank0
 10546  0049  1303               	bcf	3,6	;RP1=0, select bank0
 10547  004A  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 10548  004B  0008               	return
 10549  004C                     __end_of_EEPROM_24C1025_Read_Byte:	
 10550  004C                     __ptext51:	
 10551 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10552 ;; Defined at:
 10553 ;;		line 281 in file "EEPROM_24C1025.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  chip_add        1    wreg     unsigned char 
 10556 ;;  mem_add         4   17[BANK0 ] unsigned long 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  chip_add        1   21[BANK0 ] unsigned char 
 10559 ;;  data            2   22[BANK0 ] unsigned char [2]
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  2   17[BANK0 ] unsigned int 
 10562 ;; Registers used:
 10563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 300/300
 10566 ;;		On exit  : 300/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10569 ;;      Params:         0       4       0       0       0
 10570 ;;      Locals:         0       3       0       0       0
 10571 ;;      Temps:          0       0       0       0       0
 10572 ;;      Totals:         0       7       0       0       0
 10573 ;;Total ram usage:        7 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; Hardware stack levels required when called:    4
 10576 ;; This function calls:
 10577 ;;		_EEPROM_24C1025_Read_Buffer
 10578 ;; This function is called by:
 10579 ;;		_Decodify_Command
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           
 10584                           ;psect for function _EEPROM_24C1025_Read_Int
 10585  004C                     _EEPROM_24C1025_Read_Int:	
 10586                           
 10587                           ;incstack = 0
 10588                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10589                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10590  004C  1283               	bcf	3,5	;RP0=0, select bank0
 10591  004D  1303               	bcf	3,6	;RP1=0, select bank0
 10592  004E  00B5               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10593                           
 10594                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10595  004F  0834               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10596  0050  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10597  0051  0833               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10598  0052  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10599  0053  0832               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10600  0054  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10601  0055  0831               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10602  0056  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10603  0057  3002               	movlw	2
 10604  0058  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10605  0059  3036               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10606  005A  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 10607  005B  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10608  005C  0835               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10609  005D  21E7               	fcall	_EEPROM_24C1025_Read_Buffer
 10610                           
 10611                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 10612  005E  1283               	bcf	3,5	;RP0=0, select bank0
 10613  005F  1303               	bcf	3,6	;RP1=0, select bank0
 10614  0060  0836               	movf	EEPROM_24C1025_Read_Int@data,w
 10615  0061  00B2               	movwf	?_EEPROM_24C1025_Read_Int+1
 10616  0062  0837               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10617  0063  00B1               	movwf	?_EEPROM_24C1025_Read_Int
 10618  0064  0008               	return
 10619  0065                     __end_of_EEPROM_24C1025_Read_Int:	
 10620  0065                     __ptext48:	
 10621 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10622 ;; Defined at:
 10623 ;;		line 142 in file "EEPROM_24C1025.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  chip_add        1    wreg     unsigned char 
 10626 ;;  mem_add         4    2[BANK0 ] unsigned long 
 10627 ;;  data            1    6[BANK0 ] PTR unsigned char 
 10628 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;  chip_add        1    9[BANK0 ] unsigned char 
 10631 ;;  ctrl            1   11[BANK0 ] unsigned char 
 10632 ;;  range           1   10[BANK0 ] unsigned char 
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 300/300
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10642 ;;      Params:         0       5       0       0       0
 10643 ;;      Locals:         0       3       0       0       0
 10644 ;;      Temps:          0       2       0       0       0
 10645 ;;      Totals:         0      10       0       0       0
 10646 ;;Total ram usage:       10 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:    3
 10649 ;; This function calls:
 10650 ;;		_I2C_Master_Start
 10651 ;;		_I2C_Master_Stop
 10652 ;;		_I2C_Master_Write
 10653 ;; This function is called by:
 10654 ;;		_Decodify_Command
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           
 10659                           ;psect for function _EEPROM_24C1025_Write_Str
 10660  0065                     _EEPROM_24C1025_Write_Str:	
 10661                           
 10662                           ;incstack = 0
 10663                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10664                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10665  0065  1283               	bcf	3,5	;RP0=0, select bank0
 10666  0066  1303               	bcf	3,6	;RP1=0, select bank0
 10667  0067  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10668                           
 10669                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
 10670  0068  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10671  0069  1D03               	btfss	3,2
 10672  006A  0008               	return
 10673  006B  3002               	movlw	2
 10674  006C  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10675  006D  1D03               	skipz
 10676  006E  2875               	goto	u6853
 10677  006F  3000               	movlw	0
 10678  0070  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10679  0071  1D03               	skipz
 10680  0072  2875               	goto	u6853
 10681  0073  3000               	movlw	0
 10682  0074  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10683  0075                     u6853:	
 10684  0075  1803               	btfsc	3,0
 10685  0076  0008               	return
 10686  0077                     L18:	
 10687                           
 10688                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10689  0077  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10690  0078  1D03               	btfss	3,2
 10691  0079  2886               	goto	l7146
 10692  007A  3001               	movlw	1
 10693  007B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10694  007C  1D03               	skipz
 10695  007D  2884               	goto	u6863
 10696  007E  3000               	movlw	0
 10697  007F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10698  0080  1D03               	skipz
 10699  0081  2884               	goto	u6863
 10700  0082  3000               	movlw	0
 10701  0083  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10702  0084                     u6863:	
 10703  0084  1C03               	btfss	3,0
 10704  0085  2889               	goto	l7148
 10705  0086                     l7146:	
 10706  0086  3008               	movlw	8
 10707  0087  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 10708  0088  288A               	goto	l7150
 10709  0089                     l7148:	
 10710  0089  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 10711  008A                     l7150:	
 10712                           
 10713                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
 10714  008A  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10715  008B  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10716  008C  30A0               	movlw	160
 10717                           
 10718                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
 10719  008D  1003               	clrc
 10720  008E  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10721                           
 10722                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
 10723  008F  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10724                           
 10725                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
 10726  0090  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 10727  0091  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10728                           
 10729                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
 10730  0092  23AD  120A  118A   	fcall	_I2C_Master_Start
 10731                           
 10732                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
 10733  0095  1283               	bcf	3,5	;RP0=0, select bank0
 10734  0096  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10735  0097  00A0               	movwf	I2C_Master_Write@d
 10736  0098  01A1               	clrf	I2C_Master_Write@d+1
 10737  0099  23A5  120A  118A   	fcall	_I2C_Master_Write
 10738                           
 10739                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
 10740  009C  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10741  009D  00A0               	movwf	I2C_Master_Write@d
 10742  009E  01A1               	clrf	I2C_Master_Write@d+1
 10743  009F  23A5  120A  118A   	fcall	_I2C_Master_Write
 10744                           
 10745                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
 10746  00A2  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10747  00A3  00A0               	movwf	I2C_Master_Write@d
 10748  00A4  01A1               	clrf	I2C_Master_Write@d+1
 10749  00A5  23A5  120A  118A   	fcall	_I2C_Master_Write
 10750  00A8                     l7210:	
 10751                           ;EEPROM_24C1025.c: 158:      while(*data)
 10752                           
 10753                           
 10754                           ;EEPROM_24C1025.c: 158:      while(*data)
 10755  00A8  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 10756  00A9  0084               	movwf	4
 10757  00AA  1783               	bsf	3,7	;select IRP bank2
 10758  00AB  0800               	movf	0,w
 10759  00AC  1903               	btfsc	3,2
 10760  00AD  28EF               	goto	l7212
 10761                           
 10762                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
 10763  00AE  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10764  00AF  1D03               	btfss	3,2
 10765  00B0  0008               	return
 10766  00B1  3002               	movlw	2
 10767  00B2  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10768  00B3  1D03               	skipz
 10769  00B4  28BB               	goto	u6873
 10770  00B5  3000               	movlw	0
 10771  00B6  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10772  00B7  1D03               	skipz
 10773  00B8  28BB               	goto	u6873
 10774  00B9  3000               	movlw	0
 10775  00BA  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10776  00BB                     u6873:	
 10777  00BB  1803               	btfsc	3,0
 10778  00BC  0008               	return
 10779                           
 10780                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
 10781  00BD  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10782  00BE  3E01               	addlw	1
 10783  00BF  397F               	andlw	127
 10784  00C0  1D03               	btfss	3,2
 10785  00C1  28E0               	goto	l7204
 10786                           
 10787                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
 10788  00C2  2429  120A  118A   	fcall	PL74	;call to abstracted procedure
 10789  00C5  23A5  120A  118A   	fcall	_I2C_Master_Write
 10790                           
 10791                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
 10792  00C8  23B5  120A  118A   	fcall	_I2C_Master_Stop
 10793                           
 10794                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
 10795  00CB  300D               	movlw	13
 10796  00CC  1283               	bcf	3,5	;RP0=0, select bank0
 10797  00CD  1303               	bcf	3,6	;RP1=0, select bank0
 10798  00CE  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 10799  00CF  30FB               	movlw	251
 10800  00D0  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 10801  00D1                     u7717:	
 10802  00D1  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 10803  00D2  28D1               	goto	u7717
 10804  00D3  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 10805  00D4  28D1               	goto	u7717
 10806                           
 10807                           ;EEPROM_24C1025.c: 167:             mem_add++;
 10808  00D5  1283               	bcf	3,5	;RP0=0, select bank0
 10809  00D6  1303               	bcf	3,6	;RP1=0, select bank0
 10810  00D7  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10811  00D8  1903               	skipnz
 10812  00D9  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10813  00DA  1903               	skipnz
 10814  00DB  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10815  00DC  1903               	skipnz
 10816  00DD  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10817                           
 10818                           ;EEPROM_24C1025.c: 168:             data++;
 10819  00DE  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
 10820  00DF  2877               	goto	L18
 10821  00E0                     l7204:	
 10822                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10823                           
 10824                           
 10825                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
 10826  00E0  2429  120A  118A   	fcall	PL74	;call to abstracted procedure
 10827  00E3  23A5  120A  118A   	fcall	_I2C_Master_Write
 10828                           
 10829                           ;EEPROM_24C1025.c: 183:             data++;
 10830  00E6  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
 10831                           
 10832                           ;EEPROM_24C1025.c: 184:             mem_add++;
 10833  00E7  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10834  00E8  1903               	skipnz
 10835  00E9  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10836  00EA  1903               	skipnz
 10837  00EB  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10838  00EC  1903               	skipnz
 10839  00ED  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10840  00EE  28A8               	goto	l7210
 10841  00EF                     l7212:	
 10842                           
 10843                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
 10844  00EF  01A0               	clrf	I2C_Master_Write@d
 10845  00F0  01A1               	clrf	I2C_Master_Write@d+1
 10846  00F1  23A5  120A  118A   	fcall	_I2C_Master_Write
 10847                           
 10848                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
 10849  00F4  23B5  120A  118A   	fcall	_I2C_Master_Stop
 10850                           
 10851                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((5)*(8000000/4000.0)));
 10852  00F7  300D               	movlw	13
 10853  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10854  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10855  00FA  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 10856  00FB  30FB               	movlw	251
 10857  00FC  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 10858  00FD                     u7727:	
 10859  00FD  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 10860  00FE  28FD               	goto	u7727
 10861  00FF  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 10862  0100  28FD               	goto	u7727
 10863  0101  0008               	return
 10864  0102                     __end_of_EEPROM_24C1025_Write_Str:	
 10865  0102                     __ptext50:	
 10866 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10867 ;; Defined at:
 10868 ;;		line 196 in file "EEPROM_24C1025.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  chip_add        1    wreg     unsigned char 
 10871 ;;  mem_add         4    4[BANK0 ] unsigned long 
 10872 ;;  texto           1    8[BANK0 ] PTR unsigned char 
 10873 ;;		 -> texto(16), 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  chip_add        1   12[BANK0 ] unsigned char 
 10876 ;;  ctrl            1   14[BANK0 ] unsigned char 
 10877 ;;  range           1   13[BANK0 ] unsigned char 
 10878 ;;  cnt             1   11[BANK0 ] unsigned char 
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      void 
 10881 ;; Registers used:
 10882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 300/300
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10888 ;;      Params:         0       5       0       0       0
 10889 ;;      Locals:         0       4       0       0       0
 10890 ;;      Temps:          0       2       0       0       0
 10891 ;;      Totals:         0      11       0       0       0
 10892 ;;Total ram usage:       11 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    3
 10895 ;; This function calls:
 10896 ;;		_I2C_Master_Read
 10897 ;;		_I2C_Master_RepeatedStart
 10898 ;;		_I2C_Master_Start
 10899 ;;		_I2C_Master_Stop
 10900 ;;		_I2C_Master_Write
 10901 ;; This function is called by:
 10902 ;;		_Decodify_Command
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           
 10907                           ;psect for function _EEPROM_24C1025_Read_Str
 10908  0102                     _EEPROM_24C1025_Read_Str:	
 10909                           
 10910                           ;incstack = 0
 10911                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10912                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10913  0102  1283               	bcf	3,5	;RP0=0, select bank0
 10914  0103  1303               	bcf	3,6	;RP1=0, select bank0
 10915  0104  00AC               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10916                           
 10917                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
 10918  0105  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 10919                           
 10920                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
 10921  0106  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10922  0107  1D03               	btfss	3,2
 10923  0108  0008               	return
 10924  0109  3002               	movlw	2
 10925  010A  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10926  010B  1D03               	skipz
 10927  010C  2913               	goto	u6913
 10928  010D  3000               	movlw	0
 10929  010E  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10930  010F  1D03               	skipz
 10931  0110  2913               	goto	u6913
 10932  0111  3000               	movlw	0
 10933  0112  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10934  0113                     u6913:	
 10935  0113  1803               	btfsc	3,0
 10936  0114  0008               	return
 10937                           
 10938                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10939  0115  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10940  0116  1D03               	btfss	3,2
 10941  0117  2924               	goto	l7224
 10942  0118  3001               	movlw	1
 10943  0119  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10944  011A  1D03               	skipz
 10945  011B  2922               	goto	u6923
 10946  011C  3000               	movlw	0
 10947  011D  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10948  011E  1D03               	skipz
 10949  011F  2922               	goto	u6923
 10950  0120  3000               	movlw	0
 10951  0121  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10952  0122                     u6923:	
 10953  0122  1C03               	btfss	3,0
 10954  0123  2927               	goto	l7226
 10955  0124                     l7224:	
 10956  0124  3008               	movlw	8
 10957  0125  00AD               	movwf	EEPROM_24C1025_Read_Str@range
 10958  0126  2928               	goto	l7228
 10959  0127                     l7226:	
 10960  0127  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 10961  0128                     l7228:	
 10962                           
 10963                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
 10964                           
 10965                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
 10966                           
 10967                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
 10968                           
 10969                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
 10970                           
 10971                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
 10972  0128  23F1  120A  118A   	fcall	PL36	;call to abstracted procedure
 10973                           
 10974                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
 10975  012B  23AD  120A  118A   	fcall	_I2C_Master_Start
 10976                           
 10977                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
 10978  012E  2423  120A  118A   	fcall	PL72	;call to abstracted procedure
 10979  0131  23A5  120A  118A   	fcall	_I2C_Master_Write
 10980                           
 10981                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
 10982  0134  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10983  0135  00A0               	movwf	I2C_Master_Write@d
 10984  0136  01A1               	clrf	I2C_Master_Write@d+1
 10985  0137  23A5  120A  118A   	fcall	_I2C_Master_Write
 10986                           
 10987                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
 10988  013A  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10989  013B  00A0               	movwf	I2C_Master_Write@d
 10990  013C  01A1               	clrf	I2C_Master_Write@d+1
 10991  013D  23A5  120A  118A   	fcall	_I2C_Master_Write
 10992                           
 10993                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
 10994  0140  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 10995                           
 10996                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
 10997  0143  1283               	bcf	3,5	;RP0=0, select bank0
 10998  0144  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10999  0145  00A0               	movwf	I2C_Master_Write@d
 11000  0146  01A1               	clrf	I2C_Master_Write@d+1
 11001  0147  23A5  120A  118A   	fcall	_I2C_Master_Write
 11002                           
 11003                           ;EEPROM_24C1025.c: 217:      cnt=0;
 11004  014A  01AB               	clrf	EEPROM_24C1025_Read_Str@cnt
 11005  014B                     l7252:	
 11006                           
 11007                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
 11008  014B  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11009  014C  1D03               	btfss	3,2
 11010  014D  29D5               	goto	l7306
 11011  014E  3002               	movlw	2
 11012  014F  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11013  0150  1D03               	skipz
 11014  0151  2958               	goto	u6933
 11015  0152  3000               	movlw	0
 11016  0153  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11017  0154  1D03               	skipz
 11018  0155  2958               	goto	u6933
 11019  0156  3000               	movlw	0
 11020  0157  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11021  0158                     u6933:	
 11022  0158  1803               	btfsc	3,0
 11023  0159  29D5               	goto	l7306
 11024                           
 11025                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
 11026  015A  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11027  015B  3E01               	addlw	1
 11028  015C  397F               	andlw	127
 11029  015D  1D03               	btfss	3,2
 11030  015E  29B6               	goto	l7296
 11031                           
 11032                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
 11033  015F  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 11034  0160  0084               	movwf	4
 11035  0161  01A0               	clrf	I2C_Master_Read@a
 11036  0162  01A1               	clrf	I2C_Master_Read@a+1
 11037  0163  23B8  120A  118A   	fcall	_I2C_Master_Read
 11038  0166  0820               	movf	?_I2C_Master_Read,w
 11039  0167  1783               	bsf	3,7	;select IRP bank2
 11040  0168  0080               	movwf	0
 11041                           
 11042                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
 11043  0169  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11044                           
 11045                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11046  016C  300D               	movlw	13
 11047  016D  1283               	bcf	3,5	;RP0=0, select bank0
 11048  016E  1303               	bcf	3,6	;RP1=0, select bank0
 11049  016F  00AA               	movwf	??_EEPROM_24C1025_Read_Str+1
 11050  0170  30FB               	movlw	251
 11051  0171  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 11052  0172                     u7737:	
 11053  0172  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11054  0173  2972               	goto	u7737
 11055  0174  0BAA               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11056  0175  2972               	goto	u7737
 11057                           
 11058                           ;EEPROM_24C1025.c: 226:              mem_add++;
 11059  0176  1283               	bcf	3,5	;RP0=0, select bank0
 11060  0177  1303               	bcf	3,6	;RP1=0, select bank0
 11061  0178  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 11062  0179  1903               	skipnz
 11063  017A  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11064  017B  1903               	skipnz
 11065  017C  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11066  017D  1903               	skipnz
 11067  017E  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11068                           
 11069                           ;EEPROM_24C1025.c: 227:              texto++;
 11070  017F  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
 11071                           
 11072                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11073  0180  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11074  0181  1D03               	btfss	3,2
 11075  0182  298F               	goto	l7270
 11076  0183  3001               	movlw	1
 11077  0184  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11078  0185  1D03               	skipz
 11079  0186  298D               	goto	u6953
 11080  0187  3000               	movlw	0
 11081  0188  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11082  0189  1D03               	skipz
 11083  018A  298D               	goto	u6953
 11084  018B  3000               	movlw	0
 11085  018C  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11086  018D                     u6953:	
 11087  018D  1C03               	btfss	3,0
 11088  018E  2992               	goto	l7272
 11089  018F                     l7270:	
 11090  018F  3008               	movlw	8
 11091  0190  00AD               	movwf	EEPROM_24C1025_Read_Str@range
 11092  0191  2993               	goto	l7274
 11093  0192                     l7272:	
 11094  0192  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 11095  0193                     l7274:	
 11096                           
 11097                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
 11098                           
 11099                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
 11100                           
 11101                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
 11102                           
 11103                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
 11104                           
 11105                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
 11106  0193  23F1  120A  118A   	fcall	PL36	;call to abstracted procedure
 11107                           
 11108                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
 11109  0196  23AD  120A  118A   	fcall	_I2C_Master_Start
 11110                           
 11111                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
 11112  0199  2423  120A  118A   	fcall	PL72	;call to abstracted procedure
 11113  019C  23A5  120A  118A   	fcall	_I2C_Master_Write
 11114                           
 11115                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
 11116  019F  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11117  01A0  00A0               	movwf	I2C_Master_Write@d
 11118  01A1  01A1               	clrf	I2C_Master_Write@d+1
 11119  01A2  23A5  120A  118A   	fcall	_I2C_Master_Write
 11120                           
 11121                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
 11122  01A5  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11123  01A6  00A0               	movwf	I2C_Master_Write@d
 11124  01A7  01A1               	clrf	I2C_Master_Write@d+1
 11125  01A8  23A5  120A  118A   	fcall	_I2C_Master_Write
 11126                           
 11127                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
 11128  01AB  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11129                           
 11130                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
 11131  01AE  1283               	bcf	3,5	;RP0=0, select bank0
 11132  01AF  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11133  01B0  00A0               	movwf	I2C_Master_Write@d
 11134  01B1  01A1               	clrf	I2C_Master_Write@d+1
 11135  01B2  23A5  120A  118A   	fcall	_I2C_Master_Write
 11136                           
 11137                           ;EEPROM_24C1025.c: 241:              }
 11138  01B5  29CE               	goto	l7304
 11139  01B6                     l7296:	
 11140                           
 11141                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
 11142  01B6  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 11143  01B7  0084               	movwf	4
 11144  01B8  01A0               	clrf	I2C_Master_Read@a
 11145  01B9  0AA0               	incf	I2C_Master_Read@a,f
 11146  01BA  01A1               	clrf	I2C_Master_Read@a+1
 11147  01BB  23B8  120A  118A   	fcall	_I2C_Master_Read
 11148  01BE  0820               	movf	?_I2C_Master_Read,w
 11149  01BF  1783               	bsf	3,7	;select IRP bank2
 11150  01C0  0080               	movwf	0
 11151                           
 11152                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
 11153  01C1  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 11154  01C2  0084               	movwf	4
 11155  01C3  0800               	movf	0,w
 11156  01C4  1903               	btfsc	3,2
 11157  01C5  29D5               	goto	l7306
 11158                           
 11159                           ;EEPROM_24C1025.c: 246:              texto++;
 11160  01C6  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
 11161                           
 11162                           ;EEPROM_24C1025.c: 247:              mem_add++;
 11163  01C7  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 11164  01C8  1903               	skipnz
 11165  01C9  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11166  01CA  1903               	skipnz
 11167  01CB  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11168  01CC  1903               	skipnz
 11169  01CD  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11170  01CE                     l7304:	
 11171                           
 11172                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
 11173  01CE  082B               	movf	EEPROM_24C1025_Read_Str@cnt,w
 11174  01CF  0AAB               	incf	EEPROM_24C1025_Read_Str@cnt,f
 11175  01D0  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 11176  01D1  3040               	movlw	64
 11177  01D2  0229               	subwf	??_EEPROM_24C1025_Read_Str,w
 11178  01D3  1C03               	skipc
 11179  01D4  294B               	goto	l7252
 11180  01D5                     l7306:	
 11181                           
 11182                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
 11183  01D5  01A0               	clrf	I2C_Master_Read@a
 11184  01D6  01A1               	clrf	I2C_Master_Read@a+1
 11185  01D7  23B8  120A  118A   	fcall	_I2C_Master_Read
 11186                           
 11187                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
 11188  01DA  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11189                           
 11190                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11191  01DD  30B9               	movlw	185
 11192  01DE  1283               	bcf	3,5	;RP0=0, select bank0
 11193  01DF  1303               	bcf	3,6	;RP1=0, select bank0
 11194  01E0  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 11195  01E1                     u7747:	
 11196  01E1  29E2               	nop2
 11197  01E2  29E3               	nop2
 11198  01E3  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11199  01E4  29E1               	goto	u7747
 11200  01E5  29E6               	nop2
 11201  01E6  0008               	return
 11202  01E7                     __end_of_EEPROM_24C1025_Read_Str:	
 11203  01E7                     __ptext53:	
 11204 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11205 ;; Defined at:
 11206 ;;		line 74 in file "EEPROM_24C1025.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  chip_add        1    wreg     unsigned char 
 11209 ;;  mem_add         4    4[BANK0 ] unsigned long 
 11210 ;;  sizedata        1    8[BANK0 ] unsigned char 
 11211 ;;  data            2    9[BANK0 ] PTR unsigned char 
 11212 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11215 ;;  cnt             1   13[BANK0 ] unsigned char 
 11216 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11217 ;;  range           1   15[BANK0 ] unsigned char 
 11218 ;;  cnt             1    0        unsigned char 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1    wreg      void 
 11221 ;; Registers used:
 11222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/300
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11228 ;;      Params:         0       7       0       0       0
 11229 ;;      Locals:         0       4       0       0       0
 11230 ;;      Temps:          0       2       0       0       0
 11231 ;;      Totals:         0      13       0       0       0
 11232 ;;Total ram usage:       13 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:    3
 11235 ;; This function calls:
 11236 ;;		_I2C_Master_Read
 11237 ;;		_I2C_Master_RepeatedStart
 11238 ;;		_I2C_Master_Start
 11239 ;;		_I2C_Master_Stop
 11240 ;;		_I2C_Master_Write
 11241 ;; This function is called by:
 11242 ;;		_EEPROM_24C1025_Read_Byte
 11243 ;;		_EEPROM_24C1025_Read_Int
 11244 ;;		_Decodify_Command
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           
 11249                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11250  01E7                     _EEPROM_24C1025_Read_Buffer:	
 11251                           
 11252                           ;incstack = 0
 11253                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11254                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11255  01E7  1283               	bcf	3,5	;RP0=0, select bank0
 11256  01E8  1303               	bcf	3,6	;RP1=0, select bank0
 11257  01E9  00AE               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11258                           
 11259                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
 11260                           
 11261                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
 11262  01EA  240E  120A  118A   	fcall	PL48	;call to abstracted procedure
 11263  01ED  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11264  01EE  1D03               	btfss	3,2
 11265  01EF  0008               	return
 11266  01F0  3002               	movlw	2
 11267  01F1  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11268  01F2  1D03               	skipz
 11269  01F3  29FA               	goto	u6323
 11270  01F4  3000               	movlw	0
 11271  01F5  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11272  01F6  1D03               	skipz
 11273  01F7  29FA               	goto	u6323
 11274  01F8  3000               	movlw	0
 11275  01F9  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11276  01FA                     u6323:	
 11277  01FA  1803               	btfsc	3,0
 11278  01FB  0008               	return
 11279                           
 11280                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11281  01FC  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11282  01FD  1D03               	btfss	3,2
 11283  01FE  2A0B               	goto	l6694
 11284  01FF  3001               	movlw	1
 11285  0200  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11286  0201  1D03               	skipz
 11287  0202  2A09               	goto	u6333
 11288  0203  3000               	movlw	0
 11289  0204  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11290  0205  1D03               	skipz
 11291  0206  2A09               	goto	u6333
 11292  0207  3000               	movlw	0
 11293  0208  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11294  0209                     u6333:	
 11295  0209  1C03               	btfss	3,0
 11296  020A  2A0E               	goto	l6696
 11297  020B                     l6694:	
 11298  020B  3008               	movlw	8
 11299  020C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
 11300  020D  2A0F               	goto	l6698
 11301  020E                     l6696:	
 11302  020E  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
 11303  020F                     l6698:	
 11304                           
 11305                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
 11306                           
 11307                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
 11308                           
 11309                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
 11310                           
 11311                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
 11312                           
 11313                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
 11314  020F  23FB  120A  118A   	fcall	PL38	;call to abstracted procedure
 11315                           
 11316                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
 11317  0212  23AD  120A  118A   	fcall	_I2C_Master_Start
 11318                           
 11319                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
 11320  0215  241D  120A  118A   	fcall	PL68	;call to abstracted procedure
 11321  0218  23A5  120A  118A   	fcall	_I2C_Master_Write
 11322                           
 11323                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
 11324  021B  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11325  021C  00A0               	movwf	I2C_Master_Write@d
 11326  021D  01A1               	clrf	I2C_Master_Write@d+1
 11327  021E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11328                           
 11329                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
 11330  0221  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11331  0222  00A0               	movwf	I2C_Master_Write@d
 11332  0223  01A1               	clrf	I2C_Master_Write@d+1
 11333  0224  23A5  120A  118A   	fcall	_I2C_Master_Write
 11334                           
 11335                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
 11336  0227  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11337                           
 11338                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
 11339  022A  1283               	bcf	3,5	;RP0=0, select bank0
 11340  022B  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11341  022C  00A0               	movwf	I2C_Master_Write@d
 11342  022D  01A1               	clrf	I2C_Master_Write@d+1
 11343  022E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11344                           
 11345                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
 11346  0231  01AD               	clrf	EEPROM_24C1025_Read_Buffer@cnt_98
 11347  0232                     l6774:	
 11348  0232  0828               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11349  0233  022D               	subwf	EEPROM_24C1025_Read_Buffer@cnt_98,w
 11350  0234  1803               	btfsc	3,0
 11351  0235  2AB8               	goto	l6776
 11352                           
 11353                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
 11354  0236  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11355  0237  1D03               	btfss	3,2
 11356  0238  2AB8               	goto	l6776
 11357  0239  3002               	movlw	2
 11358  023A  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11359  023B  1D03               	skipz
 11360  023C  2A43               	goto	u6343
 11361  023D  3000               	movlw	0
 11362  023E  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11363  023F  1D03               	skipz
 11364  0240  2A43               	goto	u6343
 11365  0241  3000               	movlw	0
 11366  0242  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11367  0243                     u6343:	
 11368  0243  1803               	btfsc	3,0
 11369  0244  2AB8               	goto	l6776
 11370                           
 11371                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
 11372  0245  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11373  0246  3E01               	addlw	1
 11374  0247  397F               	andlw	127
 11375  0248  1D03               	btfss	3,2
 11376  0249  2AA2               	goto	l6766
 11377                           
 11378                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
 11379  024A  2416  120A  118A   	fcall	PL54	;call to abstracted procedure
 11380  024D  01A1               	clrf	I2C_Master_Read@a+1
 11381  024E  23B8  120A  118A   	fcall	_I2C_Master_Read
 11382  0251  0820               	movf	?_I2C_Master_Read,w
 11383  0252  0080               	movwf	0
 11384                           
 11385                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
 11386  0253  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11387                           
 11388                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11389  0256  300D               	movlw	13
 11390  0257  1283               	bcf	3,5	;RP0=0, select bank0
 11391  0258  1303               	bcf	3,6	;RP1=0, select bank0
 11392  0259  00AC               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 11393  025A  30FB               	movlw	251
 11394  025B  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 11395  025C                     u7757:	
 11396  025C  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11397  025D  2A5C               	goto	u7757
 11398  025E  0BAC               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 11399  025F  2A5C               	goto	u7757
 11400                           
 11401                           ;EEPROM_24C1025.c: 110:              mem_add++;
 11402  0260  1283               	bcf	3,5	;RP0=0, select bank0
 11403  0261  1303               	bcf	3,6	;RP1=0, select bank0
 11404  0262  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11405  0263  1903               	skipnz
 11406  0264  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11407  0265  1903               	skipnz
 11408  0266  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11409  0267  1903               	skipnz
 11410  0268  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11411                           
 11412                           ;EEPROM_24C1025.c: 111:              data++;
 11413  0269  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11414  026A  1903               	skipnz
 11415  026B  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11416                           
 11417                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11418  026C  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11419  026D  1D03               	btfss	3,2
 11420  026E  2A7B               	goto	l6740
 11421  026F  3001               	movlw	1
 11422  0270  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11423  0271  1D03               	skipz
 11424  0272  2A79               	goto	u6363
 11425  0273  3000               	movlw	0
 11426  0274  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11427  0275  1D03               	skipz
 11428  0276  2A79               	goto	u6363
 11429  0277  3000               	movlw	0
 11430  0278  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11431  0279                     u6363:	
 11432  0279  1C03               	btfss	3,0
 11433  027A  2A7E               	goto	l6742
 11434  027B                     l6740:	
 11435  027B  3008               	movlw	8
 11436  027C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
 11437  027D  2A7F               	goto	l6744
 11438  027E                     l6742:	
 11439  027E  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
 11440  027F                     l6744:	
 11441                           
 11442                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
 11443                           
 11444                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
 11445                           
 11446                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
 11447                           
 11448                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
 11449                           
 11450                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
 11451  027F  23FB  120A  118A   	fcall	PL38	;call to abstracted procedure
 11452                           
 11453                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
 11454  0282  23AD  120A  118A   	fcall	_I2C_Master_Start
 11455                           
 11456                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
 11457  0285  241D  120A  118A   	fcall	PL68	;call to abstracted procedure
 11458  0288  23A5  120A  118A   	fcall	_I2C_Master_Write
 11459                           
 11460                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
 11461  028B  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11462  028C  00A0               	movwf	I2C_Master_Write@d
 11463  028D  01A1               	clrf	I2C_Master_Write@d+1
 11464  028E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11465                           
 11466                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
 11467  0291  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11468  0292  00A0               	movwf	I2C_Master_Write@d
 11469  0293  01A1               	clrf	I2C_Master_Write@d+1
 11470  0294  23A5  120A  118A   	fcall	_I2C_Master_Write
 11471                           
 11472                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
 11473  0297  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11474                           
 11475                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
 11476  029A  1283               	bcf	3,5	;RP0=0, select bank0
 11477  029B  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11478  029C  00A0               	movwf	I2C_Master_Write@d
 11479  029D  01A1               	clrf	I2C_Master_Write@d+1
 11480  029E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11481                           
 11482                           ;EEPROM_24C1025.c: 125:              }
 11483  02A1  2AB6               	goto	l6772
 11484  02A2                     l6766:	
 11485                           
 11486                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
 11487  02A2  2416  120A  118A   	fcall	PL54	;call to abstracted procedure
 11488  02A5  0AA0               	incf	I2C_Master_Read@a,f
 11489  02A6  01A1               	clrf	I2C_Master_Read@a+1
 11490  02A7  23B8  120A  118A   	fcall	_I2C_Master_Read
 11491  02AA  0820               	movf	?_I2C_Master_Read,w
 11492  02AB  0080               	movwf	0
 11493                           
 11494                           ;EEPROM_24C1025.c: 129:              data++;
 11495  02AC  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11496  02AD  1903               	skipnz
 11497  02AE  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11498                           
 11499                           ;EEPROM_24C1025.c: 130:              mem_add++;
 11500  02AF  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11501  02B0  1903               	skipnz
 11502  02B1  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11503  02B2  1903               	skipnz
 11504  02B3  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11505  02B4  1903               	skipnz
 11506  02B5  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11507  02B6                     l6772:	
 11508                           
 11509                           ;EEPROM_24C1025.c: 132:         }
 11510  02B6  0AAD               	incf	EEPROM_24C1025_Read_Buffer@cnt_98,f
 11511  02B7  2A32               	goto	l6774
 11512  02B8                     l6776:	
 11513                           
 11514                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
 11515  02B8  01A0               	clrf	I2C_Master_Read@a
 11516  02B9  01A1               	clrf	I2C_Master_Read@a+1
 11517  02BA  23B8  120A  118A   	fcall	_I2C_Master_Read
 11518                           
 11519                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
 11520  02BD  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11521                           
 11522                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11523  02C0  30B9               	movlw	185
 11524  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 11525  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 11526  02C3  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 11527  02C4                     u7767:	
 11528  02C4  2AC5               	nop2
 11529  02C5  2AC6               	nop2
 11530  02C6  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11531  02C7  2AC4               	goto	u7767
 11532  02C8  2AC9               	nop2
 11533  02C9  0008               	return
 11534  02CA                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11535  02CA                     __ptext58:	
 11536 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11537 ;; Defined at:
 11538 ;;		line 13 in file "EEPROM_24C1025.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  chip_add        1    wreg     unsigned char 
 11541 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11542 ;;  sizedata        1    6[BANK0 ] unsigned char 
 11543 ;;  data            2    7[BANK0 ] PTR unsigned char 
 11544 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;  chip_add        1   12[BANK0 ] unsigned char 
 11547 ;;  ctrl            1   14[BANK0 ] unsigned char 
 11548 ;;  range           1   13[BANK0 ] unsigned char 
 11549 ;;  count           1   11[BANK0 ] unsigned char 
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  1    wreg      void 
 11552 ;; Registers used:
 11553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/300
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11559 ;;      Params:         0       7       0       0       0
 11560 ;;      Locals:         0       4       0       0       0
 11561 ;;      Temps:          0       2       0       0       0
 11562 ;;      Totals:         0      13       0       0       0
 11563 ;;Total ram usage:       13 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:    3
 11566 ;; This function calls:
 11567 ;;		_I2C_Master_Start
 11568 ;;		_I2C_Master_Stop
 11569 ;;		_I2C_Master_Write
 11570 ;; This function is called by:
 11571 ;;		_EEPROM_24C1025_Write_Byte
 11572 ;;		_EEPROM_24C1025_Write_Int
 11573 ;;		_Decodify_Command
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11579  02CA                     _EEPROM_24C1025_Write_Buffer:	
 11580                           
 11581                           ;incstack = 0
 11582                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 11583                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11584  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 11585  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 11586  02CC  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11587                           
 11588                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
 11589                           
 11590                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
 11591  02CD  240E  120A  118A   	fcall	PL48	;call to abstracted procedure
 11592  02D0  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11593  02D1  1D03               	btfss	3,2
 11594  02D2  0008               	return
 11595  02D3  3002               	movlw	2
 11596  02D4  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11597  02D5  1D03               	skipz
 11598  02D6  2ADD               	goto	u5933
 11599  02D7  3000               	movlw	0
 11600  02D8  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11601  02D9  1D03               	skipz
 11602  02DA  2ADD               	goto	u5933
 11603  02DB  3000               	movlw	0
 11604  02DC  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11605  02DD                     u5933:	
 11606  02DD  1803               	btfsc	3,0
 11607  02DE  0008               	return
 11608                           
 11609                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11610  02DF  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11611  02E0  1D03               	btfss	3,2
 11612  02E1  2AEE               	goto	l6426
 11613  02E2  3001               	movlw	1
 11614  02E3  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11615  02E4  1D03               	skipz
 11616  02E5  2AEC               	goto	u5943
 11617  02E6  3000               	movlw	0
 11618  02E7  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11619  02E8  1D03               	skipz
 11620  02E9  2AEC               	goto	u5943
 11621  02EA  3000               	movlw	0
 11622  02EB  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11623  02EC                     u5943:	
 11624  02EC  1C03               	btfss	3,0
 11625  02ED  2AF1               	goto	l6428
 11626  02EE                     l6426:	
 11627  02EE  3008               	movlw	8
 11628  02EF  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 11629  02F0  2AF2               	goto	l6430
 11630  02F1                     l6428:	
 11631  02F1  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 11632  02F2                     l6430:	
 11633                           
 11634                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
 11635                           
 11636                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
 11637                           
 11638                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
 11639                           
 11640                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
 11641  02F2  2405  120A  118A   	fcall	PL40	;call to abstracted procedure
 11642                           
 11643                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
 11644  02F5  23AD  120A  118A   	fcall	_I2C_Master_Start
 11645                           
 11646                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
 11647  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 11648  02F9  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11649  02FA  00A0               	movwf	I2C_Master_Write@d
 11650  02FB  01A1               	clrf	I2C_Master_Write@d+1
 11651  02FC  23A5  120A  118A   	fcall	_I2C_Master_Write
 11652                           
 11653                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
 11654  02FF  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11655  0300  00A0               	movwf	I2C_Master_Write@d
 11656  0301  01A1               	clrf	I2C_Master_Write@d+1
 11657  0302  23A5  120A  118A   	fcall	_I2C_Master_Write
 11658                           
 11659                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
 11660  0305  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11661  0306  00A0               	movwf	I2C_Master_Write@d
 11662  0307  01A1               	clrf	I2C_Master_Write@d+1
 11663  0308  23A5  120A  118A   	fcall	_I2C_Master_Write
 11664                           
 11665                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
 11666  030B  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 11667  030C                     l6494:	
 11668  030C  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11669  030D  3EFF               	addlw	255
 11670  030E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11671  030F  30FF               	movlw	255
 11672  0310  1803               	skipnc
 11673  0311  3000               	movlw	0
 11674  0312  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11675  0313  3A80               	xorlw	128
 11676  0314  3C80               	sublw	128
 11677  0315  1D03               	skipz
 11678  0316  2B19               	goto	u5985
 11679  0317  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11680  0318  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11681  0319                     u5985:	
 11682  0319  1803               	btfsc	3,0
 11683  031A  2B8F               	goto	l6496
 11684                           
 11685                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
 11686  031B  1283               	bcf	3,5	;RP0=0, select bank0
 11687  031C  1303               	bcf	3,6	;RP1=0, select bank0
 11688  031D  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11689  031E  1D03               	btfss	3,2
 11690  031F  0008               	return
 11691  0320  3002               	movlw	2
 11692  0321  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11693  0322  1D03               	skipz
 11694  0323  2B2A               	goto	u5953
 11695  0324  3000               	movlw	0
 11696  0325  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11697  0326  1D03               	skipz
 11698  0327  2B2A               	goto	u5953
 11699  0328  3000               	movlw	0
 11700  0329  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11701  032A                     u5953:	
 11702  032A  1803               	btfsc	3,0
 11703  032B  0008               	return
 11704                           
 11705                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
 11706  032C  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11707  032D  3E01               	addlw	1
 11708  032E  397F               	andlw	127
 11709  032F  1D03               	btfss	3,2
 11710  0330  2B7D               	goto	l6486
 11711                           
 11712                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
 11713  0331  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11714  0334  23A5  120A  118A   	fcall	_I2C_Master_Write
 11715                           
 11716                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
 11717  0337  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11718                           
 11719                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11720  033A  300D               	movlw	13
 11721  033B  1283               	bcf	3,5	;RP0=0, select bank0
 11722  033C  1303               	bcf	3,6	;RP1=0, select bank0
 11723  033D  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11724  033E  30FB               	movlw	251
 11725  033F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11726  0340                     u7777:	
 11727  0340  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 11728  0341  2B40               	goto	u7777
 11729  0342  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 11730  0343  2B40               	goto	u7777
 11731                           
 11732                           ;EEPROM_24C1025.c: 45:             mem_add++;
 11733  0344  1283               	bcf	3,5	;RP0=0, select bank0
 11734  0345  1303               	bcf	3,6	;RP1=0, select bank0
 11735  0346  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11736  0347  1903               	skipnz
 11737  0348  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11738  0349  1903               	skipnz
 11739  034A  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11740  034B  1903               	skipnz
 11741  034C  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11742                           
 11743                           ;EEPROM_24C1025.c: 46:             data++;
 11744  034D  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11745  034E  1903               	skipnz
 11746  034F  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11747                           
 11748                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11749  0350  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11750  0351  1D03               	btfss	3,2
 11751  0352  2B5F               	goto	l6466
 11752  0353  3001               	movlw	1
 11753  0354  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11754  0355  1D03               	skipz
 11755  0356  2B5D               	goto	u5973
 11756  0357  3000               	movlw	0
 11757  0358  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11758  0359  1D03               	skipz
 11759  035A  2B5D               	goto	u5973
 11760  035B  3000               	movlw	0
 11761  035C  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11762  035D                     u5973:	
 11763  035D  1C03               	btfss	3,0
 11764  035E  2B62               	goto	l6468
 11765  035F                     l6466:	
 11766  035F  3008               	movlw	8
 11767  0360  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 11768  0361  2B63               	goto	l6470
 11769  0362                     l6468:	
 11770  0362  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 11771  0363                     l6470:	
 11772                           
 11773                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
 11774                           
 11775                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
 11776                           
 11777                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
 11778                           
 11779                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
 11780  0363  2405  120A  118A   	fcall	PL40	;call to abstracted procedure
 11781                           
 11782                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
 11783  0366  23AD  120A  118A   	fcall	_I2C_Master_Start
 11784                           
 11785                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
 11786  0369  1283               	bcf	3,5	;RP0=0, select bank0
 11787  036A  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11788  036B  00A0               	movwf	I2C_Master_Write@d
 11789  036C  01A1               	clrf	I2C_Master_Write@d+1
 11790  036D  23A5  120A  118A   	fcall	_I2C_Master_Write
 11791                           
 11792                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
 11793  0370  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11794  0371  00A0               	movwf	I2C_Master_Write@d
 11795  0372  01A1               	clrf	I2C_Master_Write@d+1
 11796  0373  23A5  120A  118A   	fcall	_I2C_Master_Write
 11797                           
 11798                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
 11799  0376  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11800  0377  00A0               	movwf	I2C_Master_Write@d
 11801  0378  01A1               	clrf	I2C_Master_Write@d+1
 11802  0379  23A5  120A  118A   	fcall	_I2C_Master_Write
 11803                           
 11804                           ;EEPROM_24C1025.c: 57:             }
 11805  037C  2B8D               	goto	l6492
 11806  037D                     l6486:	
 11807                           
 11808                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
 11809  037D  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11810  0380  23A5  120A  118A   	fcall	_I2C_Master_Write
 11811                           
 11812                           ;EEPROM_24C1025.c: 61:             data++;
 11813  0383  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11814  0384  1903               	skipnz
 11815  0385  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11816                           
 11817                           ;EEPROM_24C1025.c: 62:             mem_add++;
 11818  0386  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11819  0387  1903               	skipnz
 11820  0388  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11821  0389  1903               	skipnz
 11822  038A  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11823  038B  1903               	skipnz
 11824  038C  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11825  038D                     l6492:	
 11826                           
 11827                           ;EEPROM_24C1025.c: 64:      }
 11828  038D  0AAB               	incf	EEPROM_24C1025_Write_Buffer@count,f
 11829  038E  2B0C               	goto	l6494
 11830  038F                     l6496:	
 11831                           
 11832                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
 11833  038F  1283               	bcf	3,5	;RP0=0, select bank0
 11834  0390  1303               	bcf	3,6	;RP1=0, select bank0
 11835  0391  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11836  0394  23A5  120A  118A   	fcall	_I2C_Master_Write
 11837                           
 11838                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
 11839  0397  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11840                           
 11841                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((5)*(8000000/4000.0)));
 11842  039A  300D               	movlw	13
 11843  039B  1283               	bcf	3,5	;RP0=0, select bank0
 11844  039C  1303               	bcf	3,6	;RP1=0, select bank0
 11845  039D  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11846  039E  30FB               	movlw	251
 11847  039F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11848  03A0                     u7787:	
 11849  03A0  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 11850  03A1  2BA0               	goto	u7787
 11851  03A2  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 11852  03A3  2BA0               	goto	u7787
 11853  03A4  0008               	return
 11854  03A5                     __end_of_EEPROM_24C1025_Write_Buffer:	
 11855  03A5                     __ptext59:	
 11856 ;; *************** function _I2C_Master_Write *****************
 11857 ;; Defined at:
 11858 ;;		line 64 in file "I2C.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  d               2    0[BANK0 ] unsigned int 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		wreg, status,2, status,0, pclath, cstack
 11867 ;; Tracked objects:
 11868 ;;		On entry : 300/0
 11869 ;;		On exit  : 300/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11872 ;;      Params:         0       2       0       0       0
 11873 ;;      Locals:         0       0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0
 11875 ;;      Totals:         0       2       0       0       0
 11876 ;;Total ram usage:        2 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:    2
 11879 ;; This function calls:
 11880 ;;		_I2C_Master_Wait
 11881 ;; This function is called by:
 11882 ;;		_EEPROM_24C1025_Write_Buffer
 11883 ;;		_EEPROM_24C1025_Read_Buffer
 11884 ;;		_EEPROM_24C1025_Write_Str
 11885 ;;		_EEPROM_24C1025_Read_Str
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           
 11890                           ;psect for function _I2C_Master_Write
 11891  03A5                     _I2C_Master_Write:	
 11892                           
 11893                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 11894                           
 11895                           ;incstack = 0
 11896                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11897  03A5  1683               	bsf	3,5	;RP0=1, select bank3
 11898  03A6  1703               	bsf	3,6	;RP1=1, select bank3
 11899  03A7  17BC               	bsf	_generic_status^(0+384),7
 11900                           
 11901                           ;I2C.c: 67:   I2C_Master_Wait();
 11902  03A8  23DC               	fcall	_I2C_Master_Wait
 11903                           
 11904                           ;I2C.c: 68:   SSPBUF = d;
 11905  03A9  1283               	bcf	3,5	;RP0=0, select bank0
 11906  03AA  0820               	movf	I2C_Master_Write@d,w
 11907  03AB  0093               	movwf	19	;volatile
 11908  03AC  0008               	return
 11909  03AD                     __end_of_I2C_Master_Write:	
 11910  03AD                     __ptext61:	
 11911 ;; *************** function _I2C_Master_Start *****************
 11912 ;; Defined at:
 11913 ;;		line 45 in file "I2C.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;		None
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;		None
 11918 ;; Return value:  Size  Location     Type
 11919 ;;                  1    wreg      void 
 11920 ;; Registers used:
 11921 ;;		wreg, status,2, status,0, pclath, cstack
 11922 ;; Tracked objects:
 11923 ;;		On entry : 300/0
 11924 ;;		On exit  : 300/100
 11925 ;;		Unchanged: 0/0
 11926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11927 ;;      Params:         0       0       0       0       0
 11928 ;;      Locals:         0       0       0       0       0
 11929 ;;      Temps:          0       0       0       0       0
 11930 ;;      Totals:         0       0       0       0       0
 11931 ;;Total ram usage:        0 bytes
 11932 ;; Hardware stack levels used:    1
 11933 ;; Hardware stack levels required when called:    2
 11934 ;; This function calls:
 11935 ;;		_I2C_Master_Wait
 11936 ;; This function is called by:
 11937 ;;		_EEPROM_24C1025_Write_Buffer
 11938 ;;		_EEPROM_24C1025_Read_Buffer
 11939 ;;		_EEPROM_24C1025_Write_Str
 11940 ;;		_EEPROM_24C1025_Read_Str
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           
 11945                           ;psect for function _I2C_Master_Start
 11946  03AD                     _I2C_Master_Start:	
 11947                           
 11948                           ;I2C.c: 47:   Delay_Led_Memory=20;
 11949                           
 11950                           ;incstack = 0
 11951                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11952  03AD  3014               	movlw	20
 11953  03AE  1683               	bsf	3,5	;RP0=1, select bank3
 11954  03AF  1703               	bsf	3,6	;RP1=1, select bank3
 11955  03B0  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11956  03B1  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11957                           
 11958                           ;I2C.c: 48:   I2C_Master_Wait();
 11959  03B2  23DC               	fcall	_I2C_Master_Wait
 11960                           
 11961                           ;I2C.c: 49:   SEN = 1;
 11962  03B3  1411               	bsf	17,0	;volatile
 11963  03B4  0008               	return
 11964  03B5                     __end_of_I2C_Master_Start:	
 11965  03B5                     __ptext60:	
 11966 ;; *************** function _I2C_Master_Stop *****************
 11967 ;; Defined at:
 11968 ;;		line 58 in file "I2C.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;		None
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;		None
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		wreg, status,2, status,0, pclath, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 300/800
 11979 ;;		On exit  : 300/100
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11982 ;;      Params:         0       0       0       0       0
 11983 ;;      Locals:         0       0       0       0       0
 11984 ;;      Temps:          0       0       0       0       0
 11985 ;;      Totals:         0       0       0       0       0
 11986 ;;Total ram usage:        0 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    2
 11989 ;; This function calls:
 11990 ;;		_I2C_Master_Wait
 11991 ;; This function is called by:
 11992 ;;		_EEPROM_24C1025_Write_Buffer
 11993 ;;		_EEPROM_24C1025_Read_Buffer
 11994 ;;		_EEPROM_24C1025_Write_Str
 11995 ;;		_EEPROM_24C1025_Read_Str
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           
 12000                           ;psect for function _I2C_Master_Stop
 12001  03B5                     _I2C_Master_Stop:	
 12002                           
 12003                           ;I2C.c: 60:   I2C_Master_Wait();
 12004                           
 12005                           ;incstack = 0
 12006                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12007  03B5  23DC               	fcall	_I2C_Master_Wait
 12008                           
 12009                           ;I2C.c: 61:   PEN = 1;
 12010  03B6  1511               	bsf	17,2	;volatile
 12011  03B7  0008               	return
 12012  03B8                     __end_of_I2C_Master_Stop:	
 12013  03B8                     __ptext55:	
 12014 ;; *************** function _I2C_Master_Read *****************
 12015 ;; Defined at:
 12016 ;;		line 71 in file "I2C.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  a               2    0[BANK0 ] unsigned short 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  temp            2    2[BANK0 ] unsigned short 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  2    0[BANK0 ] unsigned short 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 300/0
 12027 ;;		On exit  : 300/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12030 ;;      Params:         0       2       0       0       0
 12031 ;;      Locals:         0       2       0       0       0
 12032 ;;      Temps:          0       0       0       0       0
 12033 ;;      Totals:         0       4       0       0       0
 12034 ;;Total ram usage:        4 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    2
 12037 ;; This function calls:
 12038 ;;		_I2C_Master_Wait
 12039 ;; This function is called by:
 12040 ;;		_EEPROM_24C1025_Read_Buffer
 12041 ;;		_EEPROM_24C1025_Read_Str
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function _I2C_Master_Read
 12047  03B8                     _I2C_Master_Read:	
 12048                           
 12049                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12050                           
 12051                           ;incstack = 0
 12052                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12053  03B8  1683               	bsf	3,5	;RP0=1, select bank3
 12054  03B9  1703               	bsf	3,6	;RP1=1, select bank3
 12055  03BA  17BC               	bsf	_generic_status^(0+384),7
 12056                           
 12057                           ;I2C.c: 75:   I2C_Master_Wait();
 12058  03BB  23DC  120A  118A   	fcall	_I2C_Master_Wait
 12059                           
 12060                           ;I2C.c: 76:   RCEN = 1;
 12061  03BE  1591               	bsf	17,3	;volatile
 12062                           
 12063                           ;I2C.c: 77:   I2C_Master_Wait();
 12064  03BF  23DC  120A  118A   	fcall	_I2C_Master_Wait
 12065                           
 12066                           ;I2C.c: 78:   temp = SSPBUF;
 12067  03C2  1283               	bcf	3,5	;RP0=0, select bank0
 12068  03C3  0813               	movf	19,w	;volatile
 12069  03C4  00A2               	movwf	I2C_Master_Read@temp
 12070  03C5  01A3               	clrf	I2C_Master_Read@temp+1
 12071                           
 12072                           ;I2C.c: 79:   I2C_Master_Wait();
 12073  03C6  23DC  120A  118A   	fcall	_I2C_Master_Wait
 12074                           
 12075                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12076  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 12077  03CA  0820               	movf	I2C_Master_Read@a,w
 12078  03CB  0421               	iorwf	I2C_Master_Read@a+1,w
 12079  03CC  1D03               	btfss	3,2
 12080  03CD  2BD2               	goto	u5990
 12081  03CE  1683               	bsf	3,5	;RP0=1, select bank1
 12082  03CF  1303               	bcf	3,6	;RP1=0, select bank1
 12083  03D0  1691               	bsf	17,5	;volatile
 12084  03D1  2BD5               	goto	l6518
 12085  03D2                     u5990:	
 12086  03D2  1683               	bsf	3,5	;RP0=1, select bank1
 12087  03D3  1303               	bcf	3,6	;RP1=0, select bank1
 12088  03D4  1291               	bcf	17,5	;volatile
 12089  03D5                     l6518:	
 12090                           
 12091                           ;I2C.c: 81:   ACKEN = 1;
 12092  03D5  1611               	bsf	17,4	;volatile
 12093                           
 12094                           ;I2C.c: 82:   return temp;
 12095  03D6  1283               	bcf	3,5	;RP0=0, select bank0
 12096  03D7  0823               	movf	I2C_Master_Read@temp+1,w
 12097  03D8  00A1               	movwf	?_I2C_Master_Read+1
 12098  03D9  0822               	movf	I2C_Master_Read@temp,w
 12099  03DA  00A0               	movwf	?_I2C_Master_Read
 12100  03DB  0008               	return
 12101  03DC                     __end_of_I2C_Master_Read:	
 12102  03DC                     __ptext62:	
 12103 ;; *************** function _I2C_Master_Wait *****************
 12104 ;; Defined at:
 12105 ;;		line 40 in file "I2C.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, status,2
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 300/100
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12119 ;;      Params:         0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:    1
 12126 ;; This function calls:
 12127 ;;		Nothing
 12128 ;; This function is called by:
 12129 ;;		_I2C_Master_Start
 12130 ;;		_I2C_Master_RepeatedStart
 12131 ;;		_I2C_Master_Stop
 12132 ;;		_I2C_Master_Write
 12133 ;;		_I2C_Master_Read
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137                           
 12138                           ;psect for function _I2C_Master_Wait
 12139  03DC                     _I2C_Master_Wait:	
 12140  03DC                     l180:	
 12141                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 12142                           
 12143                           ;incstack = 0
 12144                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12145                           
 12146  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 12147  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 12148  03DE  1914               	btfsc	20,2	;volatile
 12149  03DF  2BDC               	goto	l180
 12150  03E0  0811               	movf	17,w	;volatile
 12151  03E1  391F               	andlw	31
 12152  03E2  1903               	btfsc	3,2
 12153  03E3  0008               	return
 12154  03E4  2BDC               	goto	l180
 12155  03E5                     __end_of_I2C_Master_Wait:	
 12156  03E5                     __ptext54:	
 12157 ;; *************** function _I2C_Master_RepeatedStart *****************
 12158 ;; Defined at:
 12159 ;;		line 52 in file "I2C.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;		None
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;		None
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0, pclath, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 300/0
 12170 ;;		On exit  : 300/100
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12173 ;;      Params:         0       0       0       0       0
 12174 ;;      Locals:         0       0       0       0       0
 12175 ;;      Temps:          0       0       0       0       0
 12176 ;;      Totals:         0       0       0       0       0
 12177 ;;Total ram usage:        0 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    2
 12180 ;; This function calls:
 12181 ;;		_I2C_Master_Wait
 12182 ;; This function is called by:
 12183 ;;		_EEPROM_24C1025_Read_Buffer
 12184 ;;		_EEPROM_24C1025_Read_Str
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           
 12189                           ;psect for function _I2C_Master_RepeatedStart
 12190  03E5                     _I2C_Master_RepeatedStart:	
 12191                           
 12192                           ;I2C.c: 54:   I2C_Master_Wait();
 12193                           
 12194                           ;incstack = 0
 12195                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12196  03E5  23DC               	fcall	_I2C_Master_Wait
 12197                           
 12198                           ;I2C.c: 55:   RSEN = 1;
 12199  03E6  1491               	bsf	17,1	;volatile
 12200  03E7  0008               	return
 12201  03E8                     __end_of_I2C_Master_RepeatedStart:	
 12202  03E8                     PL30:	
 12203  03E8  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12204  03E9  0084               	movwf	4
 12205  03EA  1783               	bsf	3,7
 12206  03EB  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12207  03EC  1383               	bcf	3,7
 12208  03ED  0800               	movf	0,w
 12209  03EE  00A0               	movwf	I2C_Master_Write@d
 12210  03EF  01A1               	clrf	I2C_Master_Write@d+1
 12211  03F0  0008               	return
 12212  03F1                     __end_ofPL30:	
 12213  03F1                     PL36:	
 12214  03F1  082C               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 12215  03F2  00AE               	movwf	EEPROM_24C1025_Read_Str@ctrl
 12216  03F3  30A0               	movlw	160
 12217  03F4  1003               	clrc
 12218  03F5  0DAE               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 12219  03F6  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12220  03F7  142E               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 12221  03F8  082D               	movf	EEPROM_24C1025_Read_Str@range,w
 12222  03F9  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12223  03FA  0008               	return
 12224  03FB                     __end_ofPL36:	
 12225  03FB                     PL38:	
 12226  03FB  082E               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12227  03FC  00B0               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12228  03FD  30A0               	movlw	160
 12229  03FE  1003               	clrc
 12230  03FF  0DB0               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12231  0400  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12232  0401  1430               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12233  0402  082F               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12234  0403  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12235  0404  0008               	return
 12236  0405                     __end_ofPL38:	
 12237  0405                     PL40:	
 12238  0405  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12239  0406  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12240  0407  30A0               	movlw	160
 12241  0408  1003               	clrc
 12242  0409  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12243  040A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12244  040B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12245  040C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12246  040D  0008               	return
 12247  040E                     __end_ofPL40:	
 12248  040E                     PL48:	
 12249  040E  3014               	movlw	20
 12250  040F  1683               	bsf	3,5	;RP0=1, select bank3
 12251  0410  1703               	bsf	3,6	;RP1=1, select bank3
 12252  0411  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 12253  0412  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 12254  0413  1283               	bcf	3,5	;RP0=0, select bank0
 12255  0414  1303               	bcf	3,6	;RP1=0, select bank0
 12256  0415  0008               	return
 12257  0416                     __end_ofPL48:	
 12258  0416                     PL54:	
 12259  0416  0829               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12260  0417  0084               	movwf	4
 12261  0418  1783               	bsf	3,7
 12262  0419  1C2A               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12263  041A  1383               	bcf	3,7
 12264  041B  01A0               	clrf	I2C_Master_Read@a
 12265  041C  0008               	return
 12266  041D                     __end_ofPL54:	
 12267  041D                     PL68:	
 12268  041D  1283               	bcf	3,5	;RP0=0, select bank0
 12269  041E  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12270  041F  39FE               	andlw	254
 12271  0420  00A0               	movwf	I2C_Master_Write@d
 12272  0421  01A1               	clrf	I2C_Master_Write@d+1
 12273  0422  0008               	return
 12274  0423                     __end_ofPL68:	
 12275  0423                     PL72:	
 12276  0423  1283               	bcf	3,5	;RP0=0, select bank0
 12277  0424  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 12278  0425  39FE               	andlw	254
 12279  0426  00A0               	movwf	I2C_Master_Write@d
 12280  0427  01A1               	clrf	I2C_Master_Write@d+1
 12281  0428  0008               	return
 12282  0429                     __end_ofPL72:	
 12283  0429                     PL74:	
 12284  0429  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 12285  042A  0084               	movwf	4
 12286  042B  0800               	movf	0,w
 12287  042C  00A0               	movwf	I2C_Master_Write@d
 12288  042D  01A1               	clrf	I2C_Master_Write@d+1
 12289  042E  0008               	return
 12290  042F                     __end_ofPL74:	
 12291                           
 12292                           	psect	text56
 12293  05D2                     __ptext56:	
 12294 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12295 ;; Defined at:
 12296 ;;		line 288 in file "EEPROM_24C1025.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  chip_add        1    wreg     unsigned char 
 12299 ;;  value           2   25[BANK0 ] unsigned int 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  chip_add        1   27[BANK0 ] unsigned char 
 12302 ;;  mem_add         4   28[BANK0 ] unsigned long 
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12307 ;; Tracked objects:
 12308 ;;		On entry : 300/300
 12309 ;;		On exit  : 300/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12312 ;;      Params:         0       2       0       0       0
 12313 ;;      Locals:         0       5       0       0       0
 12314 ;;      Temps:          0       0       0       0       0
 12315 ;;      Totals:         0       7       0       0       0
 12316 ;;Total ram usage:        7 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:    5
 12319 ;; This function calls:
 12320 ;;		_EEPROM_24C1025_Write_Int
 12321 ;; This function is called by:
 12322 ;;		_Decodify_Command
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           
 12327                           ;psect for function _EEPROM_24C1025_Fill_All
 12328  05D2                     _EEPROM_24C1025_Fill_All:	
 12329                           
 12330                           ;incstack = 0
 12331                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12332                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12333  05D2  1283               	bcf	3,5	;RP0=0, select bank0
 12334  05D3  1303               	bcf	3,6	;RP1=0, select bank0
 12335  05D4  00BB               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12336                           
 12337                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12338  05D5  01BC               	clrf	EEPROM_24C1025_Fill_All@mem_add
 12339  05D6  01BD               	clrf	EEPROM_24C1025_Fill_All@mem_add+1
 12340  05D7  01BE               	clrf	EEPROM_24C1025_Fill_All@mem_add+2
 12341  05D8  01BF               	clrf	EEPROM_24C1025_Fill_All@mem_add+3
 12342  05D9                     l7330:	
 12343                           
 12344                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12345  05D9  083F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12346  05DA  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12347  05DB  083E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12348  05DC  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12349  05DD  083D               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12350  05DE  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12351  05DF  083C               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12352  05E0  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12353  05E1  083A               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12354  05E2  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12355  05E3  0839               	movf	EEPROM_24C1025_Fill_All@value,w
 12356  05E4  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12357  05E5  083B               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12358  05E6  26A7  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12359  05E9  0064               	clrwdt	;# 
 12360                           
 12361                           ;EEPROM_24C1025.c: 294:         }
 12362  05EA  3002               	movlw	2
 12363  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 12364  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 12365  05ED  07BC               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12366  05EE  3001               	movlw	1
 12367  05EF  1803               	skipnc
 12368  05F0  07BD               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12369  05F1  1803               	skipnc
 12370  05F2  07BE               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12371  05F3  1803               	skipnc
 12372  05F4  07BF               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12373  05F5  083F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12374  05F6  1D03               	btfss	3,2
 12375  05F7  0008               	return
 12376  05F8  083E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12377  05F9  1D03               	btfss	3,2
 12378  05FA  0008               	return
 12379  05FB  3004               	movlw	4
 12380  05FC  023D               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12381  05FD  1D03               	skipz
 12382  05FE  2E01               	goto	u6983
 12383  05FF  3000               	movlw	0
 12384  0600  023C               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12385  0601                     u6983:	
 12386  0601  1803               	btfsc	3,0
 12387  0602  0008               	return
 12388  0603  2DD9               	goto	l7330
 12389  0604                     __end_of_EEPROM_24C1025_Fill_All:	
 12390  0604                     __ptext27:	
 12391 ;; *************** function _Save_Log *****************
 12392 ;; Defined at:
 12393 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  add_datalog     4   25[BANK0 ] unsigned long 
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;		None
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  1    wreg      void 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12402 ;; Tracked objects:
 12403 ;;		On entry : 300/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12407 ;;      Params:         0       4       0       0       0
 12408 ;;      Locals:         0       0       0       0       0
 12409 ;;      Temps:          0       0       0       0       0
 12410 ;;      Totals:         0       4       0       0       0
 12411 ;;Total ram usage:        4 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    5
 12414 ;; This function calls:
 12415 ;;		_EEPROM_24C1025_Write_Int
 12416 ;;		___fltol
 12417 ;;		___wmul
 12418 ;; This function is called by:
 12419 ;;		_Decodify_Command
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           
 12424                           ;psect for function _Save_Log
 12425  0604                     _Save_Log:	
 12426                           
 12427                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) T
      +                          emperatura0*10);
 12428                           
 12429                           ;incstack = 0
 12430                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12431  0604  26D8  120A  118A   	fcall	PL32	;call to abstracted procedure
 12432  0607  0817               	movf	(_Temperatura0+3)^(0+384),w
 12433  0608  1283               	bcf	3,5	;RP0=0, select bank0
 12434  0609  1303               	bcf	3,6	;RP1=0, select bank0
 12435  060A  00A3               	movwf	___fltol@f1+3
 12436  060B  1683               	bsf	3,5	;RP0=1, select bank3
 12437  060C  1703               	bsf	3,6	;RP1=1, select bank3
 12438  060D  0816               	movf	(_Temperatura0+2)^(0+384),w
 12439  060E  1283               	bcf	3,5	;RP0=0, select bank0
 12440  060F  1303               	bcf	3,6	;RP1=0, select bank0
 12441  0610  00A2               	movwf	___fltol@f1+2
 12442  0611  1683               	bsf	3,5	;RP0=1, select bank3
 12443  0612  1703               	bsf	3,6	;RP1=1, select bank3
 12444  0613  0815               	movf	(_Temperatura0+1)^(0+384),w
 12445  0614  1283               	bcf	3,5	;RP0=0, select bank0
 12446  0615  1303               	bcf	3,6	;RP1=0, select bank0
 12447  0616  00A1               	movwf	___fltol@f1+1
 12448  0617  1683               	bsf	3,5	;RP0=1, select bank3
 12449  0618  1703               	bsf	3,6	;RP1=1, select bank3
 12450  0619  0814               	movf	_Temperatura0^(0+384),w
 12451  061A  1283               	bcf	3,5	;RP0=0, select bank0
 12452  061B  1303               	bcf	3,6	;RP1=0, select bank0
 12453  061C  00A0               	movwf	___fltol@f1
 12454  061D  2658  120A  118A   	fcall	___fltol
 12455  0620  26E3  120A  118A   	fcall	PL50	;call to abstracted procedure
 12456  0623  26BF  120A  118A   	fcall	___wmul
 12457  0626  082B               	movf	?___wmul+1,w
 12458  0627  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12459  0628  082A               	movf	?___wmul,w
 12460  0629  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12461  062A  3000               	movlw	0
 12462  062B  26A7  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12463                           
 12464                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) T
      +                          emperatura1*10);
 12465  062E  1283               	bcf	3,5	;RP0=0, select bank0
 12466  062F  1303               	bcf	3,6	;RP1=0, select bank0
 12467  0630  26D8  120A  118A   	fcall	PL32	;call to abstracted procedure
 12468  0633  0813               	movf	(_Temperatura1+3)^(0+384),w
 12469  0634  1283               	bcf	3,5	;RP0=0, select bank0
 12470  0635  1303               	bcf	3,6	;RP1=0, select bank0
 12471  0636  00A3               	movwf	___fltol@f1+3
 12472  0637  1683               	bsf	3,5	;RP0=1, select bank3
 12473  0638  1703               	bsf	3,6	;RP1=1, select bank3
 12474  0639  0812               	movf	(_Temperatura1+2)^(0+384),w
 12475  063A  1283               	bcf	3,5	;RP0=0, select bank0
 12476  063B  1303               	bcf	3,6	;RP1=0, select bank0
 12477  063C  00A2               	movwf	___fltol@f1+2
 12478  063D  1683               	bsf	3,5	;RP0=1, select bank3
 12479  063E  1703               	bsf	3,6	;RP1=1, select bank3
 12480  063F  0811               	movf	(_Temperatura1+1)^(0+384),w
 12481  0640  1283               	bcf	3,5	;RP0=0, select bank0
 12482  0641  1303               	bcf	3,6	;RP1=0, select bank0
 12483  0642  00A1               	movwf	___fltol@f1+1
 12484  0643  1683               	bsf	3,5	;RP0=1, select bank3
 12485  0644  1703               	bsf	3,6	;RP1=1, select bank3
 12486  0645  0810               	movf	_Temperatura1^(0+384),w
 12487  0646  1283               	bcf	3,5	;RP0=0, select bank0
 12488  0647  1303               	bcf	3,6	;RP1=0, select bank0
 12489  0648  00A0               	movwf	___fltol@f1
 12490  0649  2658  120A  118A   	fcall	___fltol
 12491  064C  26E3  120A  118A   	fcall	PL50	;call to abstracted procedure
 12492  064F  26BF  120A  118A   	fcall	___wmul
 12493  0652  082B               	movf	?___wmul+1,w
 12494  0653  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12495  0654  082A               	movf	?___wmul,w
 12496  0655  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12497  0656  3001               	movlw	1
 12498  0657  2EA7               	ljmp	_EEPROM_24C1025_Write_Int
 12499  0658                     __end_of_Save_Log:	
 12500  0658                     __ptext29:	
 12501 ;; *************** function ___fltol *****************
 12502 ;; Defined at:
 12503 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  f1              4    0[BANK0 ] unsigned int 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  exp1            1    9[BANK0 ] unsigned char 
 12508 ;;  sign1           1    8[BANK0 ] unsigned char 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  4    0[BANK0 ] long 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0
 12513 ;; Tracked objects:
 12514 ;;		On entry : 300/0
 12515 ;;		On exit  : 300/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12518 ;;      Params:         0       4       0       0       0
 12519 ;;      Locals:         0       2       0       0       0
 12520 ;;      Temps:          0       4       0       0       0
 12521 ;;      Totals:         0      10       0       0       0
 12522 ;;Total ram usage:       10 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    1
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_Decodify_Command
 12529 ;;		_Save_Log
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           
 12534                           ;psect for function ___fltol
 12535  0658                     ___fltol:	
 12536                           
 12537                           ;incstack = 0
 12538                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12539  0658  1003               	clrc
 12540  0659  0D22               	rlf	___fltol@f1+2,w
 12541  065A  0D23               	rlf	___fltol@f1+3,w
 12542  065B  00A9               	movwf	___fltol@exp1
 12543  065C  0829               	movf	___fltol@exp1,w
 12544  065D  1D03               	btfss	3,2
 12545  065E  2E64               	goto	l6932
 12546  065F                     l6930:	
 12547  065F  01A0               	clrf	?___fltol
 12548  0660  01A1               	clrf	?___fltol+1
 12549  0661  01A2               	clrf	?___fltol+2
 12550  0662  01A3               	clrf	?___fltol+3
 12551  0663  0008               	return
 12552  0664                     l6932:	
 12553  0664  0820               	movf	___fltol@f1,w
 12554  0665  00A4               	movwf	??___fltol
 12555  0666  0821               	movf	___fltol@f1+1,w
 12556  0667  00A5               	movwf	??___fltol+1
 12557  0668  0822               	movf	___fltol@f1+2,w
 12558  0669  00A6               	movwf	??___fltol+2
 12559  066A  0823               	movf	___fltol@f1+3,w
 12560  066B  00A7               	movwf	??___fltol+3
 12561  066C  301F               	movlw	31
 12562  066D                     u6525:	
 12563  066D  1003               	clrc
 12564  066E  0CA7               	rrf	??___fltol+3,f
 12565  066F  0CA6               	rrf	??___fltol+2,f
 12566  0670  0CA5               	rrf	??___fltol+1,f
 12567  0671  0CA4               	rrf	??___fltol,f
 12568  0672  3EFF               	addlw	-1
 12569  0673  1D03               	skipz
 12570  0674  2E6D               	goto	u6525
 12571  0675  0824               	movf	??___fltol,w
 12572  0676  00A8               	movwf	___fltol@sign1
 12573  0677  3096               	movlw	150
 12574  0678  17A2               	bsf	___fltol@f1+2,7
 12575  0679  01A3               	clrf	___fltol@f1+3
 12576  067A  02A9               	subwf	___fltol@exp1,f
 12577  067B  1FA9               	btfss	___fltol@exp1,7
 12578  067C  2E8A               	goto	l6950
 12579  067D  0829               	movf	___fltol@exp1,w
 12580  067E  3A80               	xorlw	128
 12581  067F  3E97               	addlw	151
 12582  0680  1C03               	btfss	3,0
 12583  0681  2E5F               	goto	l6930
 12584  0682                     l6946:	
 12585  0682  1003               	clrc
 12586  0683  0CA3               	rrf	___fltol@f1+3,f
 12587  0684  0CA2               	rrf	___fltol@f1+2,f
 12588  0685  0CA1               	rrf	___fltol@f1+1,f
 12589  0686  0CA0               	rrf	___fltol@f1,f
 12590  0687  0FA9               	incfsz	___fltol@exp1,f
 12591  0688  2E82               	goto	l6946
 12592  0689  2E98               	goto	l6958
 12593  068A                     l6950:	
 12594  068A  3020               	movlw	32
 12595  068B  0229               	subwf	___fltol@exp1,w
 12596  068C  1803               	btfsc	3,0
 12597  068D  2E5F               	goto	l6930
 12598  068E                     l6956:	
 12599  068E  0829               	movf	___fltol@exp1,w
 12600  068F  1903               	btfsc	3,2
 12601  0690  2E98               	goto	l6958
 12602  0691  1003               	clrc
 12603  0692  0DA0               	rlf	___fltol@f1,f
 12604  0693  0DA1               	rlf	___fltol@f1+1,f
 12605  0694  0DA2               	rlf	___fltol@f1+2,f
 12606  0695  0DA3               	rlf	___fltol@f1+3,f
 12607  0696  03A9               	decf	___fltol@exp1,f
 12608  0697  2E8E               	goto	l6956
 12609  0698                     l6958:	
 12610  0698  0828               	movf	___fltol@sign1,w
 12611  0699  1903               	btfsc	3,2
 12612  069A  0008               	return
 12613  069B  09A0               	comf	___fltol@f1,f
 12614  069C  09A1               	comf	___fltol@f1+1,f
 12615  069D  09A2               	comf	___fltol@f1+2,f
 12616  069E  09A3               	comf	___fltol@f1+3,f
 12617  069F  0AA0               	incf	___fltol@f1,f
 12618  06A0  1903               	skipnz
 12619  06A1  0AA1               	incf	___fltol@f1+1,f
 12620  06A2  1903               	skipnz
 12621  06A3  0AA2               	incf	___fltol@f1+2,f
 12622  06A4  1903               	skipnz
 12623  06A5  0AA3               	incf	___fltol@f1+3,f
 12624  06A6  0008               	return
 12625  06A7                     __end_of___fltol:	
 12626  06A7                     __ptext57:	
 12627 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12628 ;; Defined at:
 12629 ;;		line 273 in file "EEPROM_24C1025.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  chip_add        1    wreg     unsigned char 
 12632 ;;  mem_add         4   16[BANK0 ] unsigned long 
 12633 ;;  data            2   20[BANK0 ] int 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  chip_add        1   22[BANK0 ] unsigned char 
 12636 ;;  local           2   23[BANK0 ] unsigned char [2]
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/300
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12646 ;;      Params:         0       6       0       0       0
 12647 ;;      Locals:         0       3       0       0       0
 12648 ;;      Temps:          0       0       0       0       0
 12649 ;;      Totals:         0       9       0       0       0
 12650 ;;Total ram usage:        9 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    4
 12653 ;; This function calls:
 12654 ;;		_EEPROM_24C1025_Write_Buffer
 12655 ;; This function is called by:
 12656 ;;		_EEPROM_24C1025_Fill_All
 12657 ;;		_Decodify_Command
 12658 ;;		_Save_Log
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           
 12663                           ;psect for function _EEPROM_24C1025_Write_Int
 12664  06A7                     _EEPROM_24C1025_Write_Int:	
 12665                           
 12666                           ;incstack = 0
 12667                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12668                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12669  06A7  1283               	bcf	3,5	;RP0=0, select bank0
 12670  06A8  1303               	bcf	3,6	;RP1=0, select bank0
 12671  06A9  00B6               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12672                           
 12673                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 12674  06AA  0835               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12675  06AB  00B7               	movwf	EEPROM_24C1025_Write_Int@local
 12676                           
 12677                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 12678  06AC  0834               	movf	EEPROM_24C1025_Write_Int@data,w
 12679  06AD  00B8               	movwf	EEPROM_24C1025_Write_Int@local+1
 12680                           
 12681                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12682  06AE  0833               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12683  06AF  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12684  06B0  0832               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12685  06B1  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12686  06B2  0831               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12687  06B3  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12688  06B4  0830               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12689  06B5  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12690  06B6  3002               	movlw	2
 12691  06B7  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12692  06B8  3037               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12693  06B9  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12694  06BA  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 12695  06BB  0836               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12696  06BC  120A  118A  2ACA   	ljmp	_EEPROM_24C1025_Write_Buffer
 12697  06BF                     __end_of_EEPROM_24C1025_Write_Int:	
 12698  06BF                     __ptext28:	
 12699 ;; *************** function ___wmul *****************
 12700 ;; Defined at:
 12701 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;  multiplier      2   10[BANK0 ] unsigned int 
 12704 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;  product         2   14[BANK0 ] unsigned int 
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  2   10[BANK0 ] unsigned int 
 12709 ;; Registers used:
 12710 ;;		wreg, status,2, status,0
 12711 ;; Tracked objects:
 12712 ;;		On entry : 300/0
 12713 ;;		On exit  : 300/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12716 ;;      Params:         0       4       0       0       0
 12717 ;;      Locals:         0       2       0       0       0
 12718 ;;      Temps:          0       0       0       0       0
 12719 ;;      Totals:         0       6       0       0       0
 12720 ;;Total ram usage:        6 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; Hardware stack levels required when called:    1
 12723 ;; This function calls:
 12724 ;;		Nothing
 12725 ;; This function is called by:
 12726 ;;		_Save_Log
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           
 12731                           ;psect for function ___wmul
 12732  06BF                     ___wmul:	
 12733                           
 12734                           ;incstack = 0
 12735                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12736  06BF  01AE               	clrf	___wmul@product
 12737  06C0  01AF               	clrf	___wmul@product+1
 12738  06C1                     l6914:	
 12739  06C1  1C2A               	btfss	___wmul@multiplier,0
 12740  06C2  2EC9               	goto	l6918
 12741  06C3  082C               	movf	___wmul@multiplicand,w
 12742  06C4  07AE               	addwf	___wmul@product,f
 12743  06C5  1803               	skipnc
 12744  06C6  0AAF               	incf	___wmul@product+1,f
 12745  06C7  082D               	movf	___wmul@multiplicand+1,w
 12746  06C8  07AF               	addwf	___wmul@product+1,f
 12747  06C9                     l6918:	
 12748  06C9  1003               	clrc
 12749  06CA  0DAC               	rlf	___wmul@multiplicand,f
 12750  06CB  0DAD               	rlf	___wmul@multiplicand+1,f
 12751  06CC  1003               	clrc
 12752  06CD  0CAB               	rrf	___wmul@multiplier+1,f
 12753  06CE  0CAA               	rrf	___wmul@multiplier,f
 12754  06CF  082A               	movf	___wmul@multiplier,w
 12755  06D0  042B               	iorwf	___wmul@multiplier+1,w
 12756  06D1  1D03               	btfss	3,2
 12757  06D2  2EC1               	goto	l6914
 12758  06D3  082F               	movf	___wmul@product+1,w
 12759  06D4  00AB               	movwf	?___wmul+1
 12760  06D5  082E               	movf	___wmul@product,w
 12761  06D6  00AA               	movwf	?___wmul
 12762  06D7  0008               	return
 12763  06D8                     __end_of___wmul:	
 12764  06D8                     PL32:	
 12765  06D8  083C               	movf	Save_Log@add_datalog+3,w
 12766  06D9  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12767  06DA  083B               	movf	Save_Log@add_datalog+2,w
 12768  06DB  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12769  06DC  083A               	movf	Save_Log@add_datalog+1,w
 12770  06DD  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12771  06DE  0839               	movf	Save_Log@add_datalog,w
 12772  06DF  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12773  06E0  1683               	bsf	3,5	;RP0=1, select bank3
 12774  06E1  1703               	bsf	3,6	;RP1=1, select bank3
 12775  06E2  0008               	return
 12776  06E3                     __end_ofPL32:	
 12777  06E3                     PL50:	
 12778  06E3  0821               	movf	?___fltol+1,w
 12779  06E4  00AB               	movwf	___wmul@multiplier+1
 12780  06E5  0820               	movf	?___fltol,w
 12781  06E6  00AA               	movwf	___wmul@multiplier
 12782  06E7  300A               	movlw	10
 12783  06E8  00AC               	movwf	___wmul@multiplicand
 12784  06E9  01AD               	clrf	___wmul@multiplicand+1
 12785  06EA  0008               	return
 12786  06EB                     __end_ofPL50:	
 12787                           
 12788                           	psect	text67
 12789  042F                     __ptext67:	
 12790 ;; *************** function _Auto_Relay0 *****************
 12791 ;; Defined at:
 12792 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 300/300
 12803 ;;		On exit  : 200/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12806 ;;      Params:         0       0       0       0       0
 12807 ;;      Locals:         0       0       0       0       0
 12808 ;;      Temps:          0       0       0       0       0
 12809 ;;      Totals:         0       0       0       0       0
 12810 ;;Total ram usage:        0 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:    3
 12813 ;; This function calls:
 12814 ;;		_Rele0Desligado
 12815 ;;		_Rele0Ligado
 12816 ;;		___flge
 12817 ;;		___flsub
 12818 ;; This function is called by:
 12819 ;;		_main
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           
 12824                           ;psect for function _Auto_Relay0
 12825  042F                     _Auto_Relay0:	
 12826                           
 12827                           ;SlaveLiofilizadorVer1.c: 858:              if(Status0==0)
 12828                           
 12829                           ;incstack = 0
 12830                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12831  042F  0828               	movf	_Status0^(0+384),w
 12832  0430  0429               	iorwf	(_Status0+1)^(0+384),w
 12833  0431  1D03               	btfss	3,2
 12834  0432  2C34               	goto	l7740
 12835  0433                     l7738:	
 12836                           
 12837                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   Rele0Desligado();
 12838  0433  2D69               	ljmp	l7572
 12839  0434                     l7740:	
 12840                           ;SlaveLiofilizadorVer1.c: 861:                  }
 12841                           
 12842                           
 12843                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12844  0434  081F               	movf	(_Histerese0+3)^(0+384),w
 12845  0435  1283               	bcf	3,5	;RP0=0, select bank0
 12846  0436  1303               	bcf	3,6	;RP1=0, select bank0
 12847  0437  00D0               	movwf	___flsub@a+3
 12848  0438  1683               	bsf	3,5	;RP0=1, select bank3
 12849  0439  1703               	bsf	3,6	;RP1=1, select bank3
 12850  043A  081E               	movf	(_Histerese0+2)^(0+384),w
 12851  043B  1283               	bcf	3,5	;RP0=0, select bank0
 12852  043C  1303               	bcf	3,6	;RP1=0, select bank0
 12853  043D  00CF               	movwf	___flsub@a+2
 12854  043E  1683               	bsf	3,5	;RP0=1, select bank3
 12855  043F  1703               	bsf	3,6	;RP1=1, select bank3
 12856  0440  081D               	movf	(_Histerese0+1)^(0+384),w
 12857  0441  1283               	bcf	3,5	;RP0=0, select bank0
 12858  0442  1303               	bcf	3,6	;RP1=0, select bank0
 12859  0443  00CE               	movwf	___flsub@a+1
 12860  0444  1683               	bsf	3,5	;RP0=1, select bank3
 12861  0445  1703               	bsf	3,6	;RP1=1, select bank3
 12862  0446  081C               	movf	_Histerese0^(0+384),w
 12863  0447  1283               	bcf	3,5	;RP0=0, select bank0
 12864  0448  1303               	bcf	3,6	;RP1=0, select bank0
 12865  0449  00CD               	movwf	___flsub@a
 12866  044A  0873               	movf	_SetPoint0+3,w	;volatile
 12867  044B  00D4               	movwf	___flsub@b+3
 12868  044C  0872               	movf	_SetPoint0+2,w	;volatile
 12869  044D  00D3               	movwf	___flsub@b+2
 12870  044E  0871               	movf	_SetPoint0+1,w	;volatile
 12871  044F  00D2               	movwf	___flsub@b+1
 12872  0450  0870               	movf	_SetPoint0,w	;volatile
 12873  0451  00D1               	movwf	___flsub@b
 12874  0452  160A  118A  2638  120A  118A  	fcall	___flsub
 12875  0457  25C4  120A  118A   	fcall	PL34	;call to abstracted procedure
 12876  045A  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12877  045D  24FB  120A  118A   	fcall	___flge
 12878  0460  1C03               	btfss	3,0
 12879  0461  2C6E               	goto	l7746
 12880                           
 12881                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12882  0462  1683               	bsf	3,5	;RP0=1, select bank3
 12883  0463  1703               	bsf	3,6	;RP1=1, select bank3
 12884  0464  01DE               	clrf	_RL0Status^(0+384)
 12885  0465  0ADE               	incf	_RL0Status^(0+384),f
 12886  0466  2C6B               	goto	l7744
 12887  0467                     l7748:	
 12888                           
 12889                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12890  0467  1683               	bsf	3,5	;RP0=1, select bank3
 12891  0468  1703               	bsf	3,6	;RP1=1, select bank3
 12892  0469  0B5E               	decfsz	_RL0Status^(0+384),w
 12893  046A  2C33               	goto	l7738
 12894  046B                     l7744:	
 12895                           
 12896                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12897  046B  160A  118A  28F0   	ljmp	l7548
 12898  046E                     l7746:	
 12899                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12900                           
 12901  046E  25BC  120A  118A   	fcall	PL10	;call to abstracted procedure
 12902  0471  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12903  0474  24FB  120A  118A   	fcall	___flge
 12904  0477  1803               	btfsc	3,0
 12905  0478  2C67               	goto	l7748
 12906  0479  25BC  120A  118A   	fcall	PL10	;call to abstracted procedure
 12907  047C  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12908  047F  24FB  120A  118A   	fcall	___flge
 12909  0482  1803               	btfsc	3,0
 12910  0483  0008               	return
 12911                           
 12912                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12913  0484  1683               	bsf	3,5	;RP0=1, select bank3
 12914  0485  1703               	bsf	3,6	;RP1=1, select bank3
 12915  0486  01DE               	clrf	_RL0Status^(0+384)
 12916  0487  2C33               	goto	l7738
 12917  0488                     __end_of_Auto_Relay0:	
 12918  0488                     __ptext63:	
 12919 ;; *************** function _Auto_Relay1 *****************
 12920 ;; Defined at:
 12921 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;		None
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;		None
 12926 ;; Return value:  Size  Location     Type
 12927 ;;                  1    wreg      void 
 12928 ;; Registers used:
 12929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12930 ;; Tracked objects:
 12931 ;;		On entry : 200/100
 12932 ;;		On exit  : 0/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12935 ;;      Params:         0       0       0       0       0
 12936 ;;      Locals:         0       0       0       0       0
 12937 ;;      Temps:          0       0       0       0       0
 12938 ;;      Totals:         0       0       0       0       0
 12939 ;;Total ram usage:        0 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:    3
 12942 ;; This function calls:
 12943 ;;		_Rele1Desligado
 12944 ;;		_Rele1Ligado
 12945 ;;		___flge
 12946 ;;		___flsub
 12947 ;;		___xxtofl
 12948 ;; This function is called by:
 12949 ;;		_main
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           
 12954                           ;psect for function _Auto_Relay1
 12955  0488                     _Auto_Relay1:	
 12956                           
 12957                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12958                           
 12959                           ;incstack = 0
 12960                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12961  0488  1683               	bsf	3,5	;RP0=1, select bank3
 12962  0489  1703               	bsf	3,6	;RP1=1, select bank3
 12963  048A  0826               	movf	_Status1^(0+384),w
 12964  048B  0427               	iorwf	(_Status1+1)^(0+384),w
 12965  048C  1D03               	btfss	3,2
 12966  048D  2C8F               	goto	l7764
 12967  048E                     l7762:	
 12968                           
 12969                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   Rele1Desligado();
 12970  048E  2D6D               	ljmp	l7574
 12971  048F                     l7764:	
 12972                           ;SlaveLiofilizadorVer1.c: 897:                  }
 12973                           
 12974                           
 12975                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12976  048F  0838               	movf	_Histerese1^(0+384),w
 12977  0490  1283               	bcf	3,5	;RP0=0, select bank0
 12978  0491  1303               	bcf	3,6	;RP1=0, select bank0
 12979  0492  25CC               	fcall	PL62	;call to abstracted procedure
 12980  0493  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12981  0498  160A  118A  278F  120A  118A  	fcall	PL24	;call to abstracted procedure
 12982  049D  1683               	bsf	3,5	;RP0=1, select bank3
 12983  049E  1703               	bsf	3,6	;RP1=1, select bank3
 12984  049F  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12985  04A0  1283               	bcf	3,5	;RP0=0, select bank0
 12986  04A1  1303               	bcf	3,6	;RP1=0, select bank0
 12987  04A2  00D4               	movwf	___flsub@b+3
 12988  04A3  1683               	bsf	3,5	;RP0=1, select bank3
 12989  04A4  1703               	bsf	3,6	;RP1=1, select bank3
 12990  04A5  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12991  04A6  1283               	bcf	3,5	;RP0=0, select bank0
 12992  04A7  1303               	bcf	3,6	;RP1=0, select bank0
 12993  04A8  00D3               	movwf	___flsub@b+2
 12994  04A9  1683               	bsf	3,5	;RP0=1, select bank3
 12995  04AA  1703               	bsf	3,6	;RP1=1, select bank3
 12996  04AB  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12997  04AC  1283               	bcf	3,5	;RP0=0, select bank0
 12998  04AD  1303               	bcf	3,6	;RP1=0, select bank0
 12999  04AE  00D2               	movwf	___flsub@b+1
 13000  04AF  1683               	bsf	3,5	;RP0=1, select bank3
 13001  04B0  1703               	bsf	3,6	;RP1=1, select bank3
 13002  04B1  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13003  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 13004  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 13005  04B4  00D1               	movwf	___flsub@b
 13006  04B5  160A  118A  2638  120A  118A  	fcall	___flsub
 13007  04BA  25C4  120A  118A   	fcall	PL34	;call to abstracted procedure
 13008  04BD  00D5               	movwf	___flge@ff1
 13009  04BE  1683               	bsf	3,5	;RP0=1, select bank3
 13010  04BF  1703               	bsf	3,6	;RP1=1, select bank3
 13011  04C0  0813               	movf	(_Temperatura1+3)^(0+384),w
 13012  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 13013  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 13014  04C3  00DC               	movwf	___flge@ff2+3
 13015  04C4  1683               	bsf	3,5	;RP0=1, select bank3
 13016  04C5  1703               	bsf	3,6	;RP1=1, select bank3
 13017  04C6  0812               	movf	(_Temperatura1+2)^(0+384),w
 13018  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 13019  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 13020  04C9  00DB               	movwf	___flge@ff2+2
 13021  04CA  1683               	bsf	3,5	;RP0=1, select bank3
 13022  04CB  1703               	bsf	3,6	;RP1=1, select bank3
 13023  04CC  0811               	movf	(_Temperatura1+1)^(0+384),w
 13024  04CD  1283               	bcf	3,5	;RP0=0, select bank0
 13025  04CE  1303               	bcf	3,6	;RP1=0, select bank0
 13026  04CF  00DA               	movwf	___flge@ff2+1
 13027  04D0  1683               	bsf	3,5	;RP0=1, select bank3
 13028  04D1  1703               	bsf	3,6	;RP1=1, select bank3
 13029  04D2  0810               	movf	_Temperatura1^(0+384),w
 13030  04D3  1283               	bcf	3,5	;RP0=0, select bank0
 13031  04D4  1303               	bcf	3,6	;RP1=0, select bank0
 13032  04D5  00D9               	movwf	___flge@ff2
 13033  04D6  24FB  120A  118A   	fcall	___flge
 13034  04D9  1C03               	btfss	3,0
 13035  04DA  2CE7               	goto	l7770
 13036                           
 13037                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 13038  04DB  1683               	bsf	3,5	;RP0=1, select bank3
 13039  04DC  1703               	bsf	3,6	;RP1=1, select bank3
 13040  04DD  01DD               	clrf	_RL1Status^(0+384)
 13041  04DE  0ADD               	incf	_RL1Status^(0+384),f
 13042  04DF  2CE4               	goto	l7768
 13043  04E0                     l7772:	
 13044                           
 13045                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 13046  04E0  1683               	bsf	3,5	;RP0=1, select bank3
 13047  04E1  1703               	bsf	3,6	;RP1=1, select bank3
 13048  04E2  0B5D               	decfsz	_RL1Status^(0+384),w
 13049  04E3  2C8E               	goto	l7762
 13050  04E4                     l7768:	
 13051                           
 13052                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 13053  04E4  160A  118A  2907   	ljmp	l7560
 13054  04E7                     l7770:	
 13055                           ;SlaveLiofilizadorVer1.c: 905:                     }
 13056                           
 13057  04E7  2571  120A  118A   	fcall	PL2	;call to abstracted procedure
 13058  04EA  24FB  120A  118A   	fcall	___flge
 13059  04ED  1803               	btfsc	3,0
 13060  04EE  2CE0               	goto	l7772
 13061  04EF  2571  120A  118A   	fcall	PL2	;call to abstracted procedure
 13062  04F2  24FB  120A  118A   	fcall	___flge
 13063  04F5  1803               	btfsc	3,0
 13064  04F6  0008               	return
 13065                           
 13066                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 13067  04F7  1683               	bsf	3,5	;RP0=1, select bank3
 13068  04F8  1703               	bsf	3,6	;RP1=1, select bank3
 13069  04F9  01DD               	clrf	_RL1Status^(0+384)
 13070  04FA  2C8E               	goto	l7762
 13071  04FB                     __end_of_Auto_Relay1:	
 13072  04FB                     __ptext70:	
 13073 ;; *************** function ___flge *****************
 13074 ;; Defined at:
 13075 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;  ff1             4   53[BANK0 ] unsigned char 
 13078 ;;  ff2             4   57[BANK0 ] unsigned char 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;		None               void
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0
 13085 ;; Tracked objects:
 13086 ;;		On entry : 300/0
 13087 ;;		On exit  : 300/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13090 ;;      Params:         0       8       0       0       0
 13091 ;;      Locals:         0       0       0       0       0
 13092 ;;      Temps:          0       4       0       0       0
 13093 ;;      Totals:         0      12       0       0       0
 13094 ;;Total ram usage:       12 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:    1
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_Auto_Relay0
 13101 ;;		_Auto_Relay1
 13102 ;;		_log
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function ___flge
 13108  04FB                     ___flge:	
 13109                           
 13110                           ;incstack = 0
 13111                           ; Regs used in ___flge: [wreg+status,2+status,0]
 13112  04FB  3080               	movlw	128
 13113  04FC  01DD               	clrf	??___flge
 13114  04FD  01DE               	clrf	??___flge+1
 13115  04FE  0557               	andwf	___flge@ff1+2,w
 13116  04FF  00DF               	movwf	??___flge+2
 13117  0500  307F               	movlw	127
 13118  0501  0558               	andwf	___flge@ff1+3,w
 13119  0502  00E0               	movwf	??___flge+3
 13120  0503  045F               	iorwf	??___flge+2,w
 13121  0504  045E               	iorwf	??___flge+1,w
 13122  0505  045D               	iorwf	??___flge,w
 13123  0506  1D03               	skipz
 13124  0507  2D0C               	goto	l6552
 13125  0508  01D5               	clrf	___flge@ff1
 13126  0509  01D6               	clrf	___flge@ff1+1
 13127  050A  01D7               	clrf	___flge@ff1+2
 13128  050B  01D8               	clrf	___flge@ff1+3
 13129  050C                     l6552:	
 13130  050C  3080               	movlw	128
 13131  050D  01DD               	clrf	??___flge
 13132  050E  01DE               	clrf	??___flge+1
 13133  050F  055B               	andwf	___flge@ff2+2,w
 13134  0510  00DF               	movwf	??___flge+2
 13135  0511  307F               	movlw	127
 13136  0512  055C               	andwf	___flge@ff2+3,w
 13137  0513  00E0               	movwf	??___flge+3
 13138  0514  045F               	iorwf	??___flge+2,w
 13139  0515  045E               	iorwf	??___flge+1,w
 13140  0516  045D               	iorwf	??___flge,w
 13141  0517  1D03               	skipz
 13142  0518  2D1D               	goto	l1212
 13143  0519  01D9               	clrf	___flge@ff2
 13144  051A  01DA               	clrf	___flge@ff2+1
 13145  051B  01DB               	clrf	___flge@ff2+2
 13146  051C  01DC               	clrf	___flge@ff2+3
 13147  051D                     l1212:	
 13148  051D  1FD8               	btfss	___flge@ff1+3,7
 13149  051E  2D3A               	goto	l6558
 13150  051F  3080               	movlw	128
 13151  0520  01DD               	clrf	??___flge
 13152  0521  01DE               	clrf	??___flge+1
 13153  0522  01DF               	clrf	??___flge+2
 13154  0523  00E0               	movwf	??___flge+3
 13155  0524  0855               	movf	___flge@ff1,w
 13156  0525  02DD               	subwf	??___flge,f
 13157  0526  0856               	movf	___flge@ff1+1,w
 13158  0527  1C03               	skipc
 13159  0528  0F56               	incfsz	___flge@ff1+1,w
 13160  0529  02DE               	subwf	??___flge+1,f
 13161  052A  0857               	movf	___flge@ff1+2,w
 13162  052B  1C03               	skipc
 13163  052C  0F57               	incfsz	___flge@ff1+2,w
 13164  052D  02DF               	subwf	??___flge+2,f
 13165  052E  0858               	movf	___flge@ff1+3,w
 13166  052F  1C03               	skipc
 13167  0530  0F58               	incfsz	___flge@ff1+3,w
 13168  0531  02E0               	subwf	??___flge+3,f
 13169  0532  0860               	movf	??___flge+3,w
 13170  0533  00D8               	movwf	___flge@ff1+3
 13171  0534  085F               	movf	??___flge+2,w
 13172  0535  00D7               	movwf	___flge@ff1+2
 13173  0536  085E               	movf	??___flge+1,w
 13174  0537  00D6               	movwf	___flge@ff1+1
 13175  0538  085D               	movf	??___flge,w
 13176  0539  00D5               	movwf	___flge@ff1
 13177  053A                     l6558:	
 13178  053A  1FDC               	btfss	___flge@ff2+3,7
 13179  053B  2D57               	goto	l1214
 13180  053C  3080               	movlw	128
 13181  053D  01DD               	clrf	??___flge
 13182  053E  01DE               	clrf	??___flge+1
 13183  053F  01DF               	clrf	??___flge+2
 13184  0540  00E0               	movwf	??___flge+3
 13185  0541  0859               	movf	___flge@ff2,w
 13186  0542  02DD               	subwf	??___flge,f
 13187  0543  085A               	movf	___flge@ff2+1,w
 13188  0544  1C03               	skipc
 13189  0545  0F5A               	incfsz	___flge@ff2+1,w
 13190  0546  02DE               	subwf	??___flge+1,f
 13191  0547  085B               	movf	___flge@ff2+2,w
 13192  0548  1C03               	skipc
 13193  0549  0F5B               	incfsz	___flge@ff2+2,w
 13194  054A  02DF               	subwf	??___flge+2,f
 13195  054B  085C               	movf	___flge@ff2+3,w
 13196  054C  1C03               	skipc
 13197  054D  0F5C               	incfsz	___flge@ff2+3,w
 13198  054E  02E0               	subwf	??___flge+3,f
 13199  054F  0860               	movf	??___flge+3,w
 13200  0550  00DC               	movwf	___flge@ff2+3
 13201  0551  085F               	movf	??___flge+2,w
 13202  0552  00DB               	movwf	___flge@ff2+2
 13203  0553  085E               	movf	??___flge+1,w
 13204  0554  00DA               	movwf	___flge@ff2+1
 13205  0555  085D               	movf	??___flge,w
 13206  0556  00D9               	movwf	___flge@ff2
 13207  0557                     l1214:	
 13208  0557  3080               	movlw	128
 13209  0558  06D8               	xorwf	___flge@ff1+3,f
 13210  0559  06DC               	xorwf	___flge@ff2+3,f
 13211  055A  085C               	movf	___flge@ff2+3,w
 13212  055B  0258               	subwf	___flge@ff1+3,w
 13213  055C  1D03               	skipz
 13214  055D  0008               	return
 13215  055E  085B               	movf	___flge@ff2+2,w
 13216  055F  0257               	subwf	___flge@ff1+2,w
 13217  0560  1D03               	skipz
 13218  0561  0008               	return
 13219  0562  085A               	movf	___flge@ff2+1,w
 13220  0563  0256               	subwf	___flge@ff1+1,w
 13221  0564  1D03               	skipz
 13222  0565  0008               	return
 13223  0566  0859               	movf	___flge@ff2,w
 13224  0567  0255               	subwf	___flge@ff1,w
 13225  0568  0008               	return
 13226  0569                     __end_of___flge:	
 13227  0569                     __ptext72:	
 13228 ;; *************** function _Rele0Desligado *****************
 13229 ;; Defined at:
 13230 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;		None
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		None
 13239 ;; Tracked objects:
 13240 ;;		On entry : 300/300
 13241 ;;		On exit  : 300/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13244 ;;      Params:         0       0       0       0       0
 13245 ;;      Locals:         0       0       0       0       0
 13246 ;;      Temps:          0       0       0       0       0
 13247 ;;      Totals:         0       0       0       0       0
 13248 ;;Total ram usage:        0 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:    1
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_Auto_Relay0
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           
 13259                           ;psect for function _Rele0Desligado
 13260  0569                     _Rele0Desligado:	
 13261  0569                     l7572:	
 13262                           ;incstack = 0
 13263                           ; Regs used in _Rele0Desligado: []
 13264                           
 13265                           
 13266                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 13267  0569  1283               	bcf	3,5	;RP0=0, select bank0
 13268  056A  1303               	bcf	3,6	;RP1=0, select bank0
 13269  056B  1007               	bcf	7,0	;volatile
 13270  056C  0008               	return
 13271  056D                     __end_of_Rele0Desligado:	
 13272  056D                     __ptext66:	
 13273 ;; *************** function _Rele1Desligado *****************
 13274 ;; Defined at:
 13275 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;		None
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;		None
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  1    wreg      void 
 13282 ;; Registers used:
 13283 ;;		None
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/300
 13286 ;;		On exit  : 300/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13289 ;;      Params:         0       0       0       0       0
 13290 ;;      Locals:         0       0       0       0       0
 13291 ;;      Temps:          0       0       0       0       0
 13292 ;;      Totals:         0       0       0       0       0
 13293 ;;Total ram usage:        0 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:    1
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_Auto_Relay1
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           
 13304                           ;psect for function _Rele1Desligado
 13305  056D                     _Rele1Desligado:	
 13306  056D                     l7574:	
 13307                           ;incstack = 0
 13308                           ; Regs used in _Rele1Desligado: []
 13309                           
 13310                           
 13311                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 13312  056D  1283               	bcf	3,5	;RP0=0, select bank0
 13313  056E  1303               	bcf	3,6	;RP1=0, select bank0
 13314  056F  1087               	bcf	7,1	;volatile
 13315  0570  0008               	return
 13316  0571                     __end_of_Rele1Desligado:	
 13317  0571                     PL2:	
 13318  0571  1683               	bsf	3,5	;RP0=1, select bank3
 13319  0572  1703               	bsf	3,6	;RP1=1, select bank3
 13320  0573  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13321  0574  1283               	bcf	3,5	;RP0=0, select bank0
 13322  0575  1303               	bcf	3,6	;RP1=0, select bank0
 13323  0576  00D8               	movwf	___flge@ff1+3
 13324  0577  1683               	bsf	3,5	;RP0=1, select bank3
 13325  0578  1703               	bsf	3,6	;RP1=1, select bank3
 13326  0579  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13327  057A  1283               	bcf	3,5	;RP0=0, select bank0
 13328  057B  1303               	bcf	3,6	;RP1=0, select bank0
 13329  057C  00D7               	movwf	___flge@ff1+2
 13330  057D  1683               	bsf	3,5	;RP0=1, select bank3
 13331  057E  1703               	bsf	3,6	;RP1=1, select bank3
 13332  057F  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13333  0580  1283               	bcf	3,5	;RP0=0, select bank0
 13334  0581  1303               	bcf	3,6	;RP1=0, select bank0
 13335  0582  00D6               	movwf	___flge@ff1+1
 13336  0583  1683               	bsf	3,5	;RP0=1, select bank3
 13337  0584  1703               	bsf	3,6	;RP1=1, select bank3
 13338  0585  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13339  0586  1283               	bcf	3,5	;RP0=0, select bank0
 13340  0587  1303               	bcf	3,6	;RP1=0, select bank0
 13341  0588  00D5               	movwf	___flge@ff1
 13342  0589  1683               	bsf	3,5	;RP0=1, select bank3
 13343  058A  1703               	bsf	3,6	;RP1=1, select bank3
 13344  058B  0813               	movf	(_Temperatura1+3)^(0+384),w
 13345  058C  1283               	bcf	3,5	;RP0=0, select bank0
 13346  058D  1303               	bcf	3,6	;RP1=0, select bank0
 13347  058E  00DC               	movwf	___flge@ff2+3
 13348  058F  1683               	bsf	3,5	;RP0=1, select bank3
 13349  0590  1703               	bsf	3,6	;RP1=1, select bank3
 13350  0591  0812               	movf	(_Temperatura1+2)^(0+384),w
 13351  0592  1283               	bcf	3,5	;RP0=0, select bank0
 13352  0593  1303               	bcf	3,6	;RP1=0, select bank0
 13353  0594  00DB               	movwf	___flge@ff2+2
 13354  0595  1683               	bsf	3,5	;RP0=1, select bank3
 13355  0596  1703               	bsf	3,6	;RP1=1, select bank3
 13356  0597  0811               	movf	(_Temperatura1+1)^(0+384),w
 13357  0598  1283               	bcf	3,5	;RP0=0, select bank0
 13358  0599  1303               	bcf	3,6	;RP1=0, select bank0
 13359  059A  00DA               	movwf	___flge@ff2+1
 13360  059B  1683               	bsf	3,5	;RP0=1, select bank3
 13361  059C  1703               	bsf	3,6	;RP1=1, select bank3
 13362  059D  0810               	movf	_Temperatura1^(0+384),w
 13363  059E  1283               	bcf	3,5	;RP0=0, select bank0
 13364  059F  1303               	bcf	3,6	;RP1=0, select bank0
 13365  05A0  00D9               	movwf	___flge@ff2
 13366  05A1  0008               	return
 13367  05A2                     __end_ofPL2:	
 13368  05A2                     PL4:	
 13369  05A2  00D5               	movwf	___flge@ff1
 13370  05A3  1683               	bsf	3,5	;RP0=1, select bank3
 13371  05A4  1703               	bsf	3,6	;RP1=1, select bank3
 13372  05A5  0817               	movf	(_Temperatura0+3)^(0+384),w
 13373  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 13374  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 13375  05A8  00DC               	movwf	___flge@ff2+3
 13376  05A9  1683               	bsf	3,5	;RP0=1, select bank3
 13377  05AA  1703               	bsf	3,6	;RP1=1, select bank3
 13378  05AB  0816               	movf	(_Temperatura0+2)^(0+384),w
 13379  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 13380  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 13381  05AE  00DB               	movwf	___flge@ff2+2
 13382  05AF  1683               	bsf	3,5	;RP0=1, select bank3
 13383  05B0  1703               	bsf	3,6	;RP1=1, select bank3
 13384  05B1  0815               	movf	(_Temperatura0+1)^(0+384),w
 13385  05B2  1283               	bcf	3,5	;RP0=0, select bank0
 13386  05B3  1303               	bcf	3,6	;RP1=0, select bank0
 13387  05B4  00DA               	movwf	___flge@ff2+1
 13388  05B5  1683               	bsf	3,5	;RP0=1, select bank3
 13389  05B6  1703               	bsf	3,6	;RP1=1, select bank3
 13390  05B7  0814               	movf	_Temperatura0^(0+384),w
 13391  05B8  1283               	bcf	3,5	;RP0=0, select bank0
 13392  05B9  1303               	bcf	3,6	;RP1=0, select bank0
 13393  05BA  00D9               	movwf	___flge@ff2
 13394  05BB  0008               	return
 13395  05BC                     __end_ofPL4:	
 13396  05BC                     PL10:	
 13397  05BC  0873               	movf	_SetPoint0+3,w	;volatile
 13398  05BD  00D8               	movwf	___flge@ff1+3
 13399  05BE  0872               	movf	_SetPoint0+2,w	;volatile
 13400  05BF  00D7               	movwf	___flge@ff1+2
 13401  05C0  0871               	movf	_SetPoint0+1,w	;volatile
 13402  05C1  00D6               	movwf	___flge@ff1+1
 13403  05C2  0870               	movf	_SetPoint0,w	;volatile
 13404  05C3  0008               	return
 13405  05C4                     __end_ofPL10:	
 13406  05C4                     PL34:	
 13407  05C4  0850               	movf	?___flsub+3,w
 13408  05C5  00D8               	movwf	___flge@ff1+3
 13409  05C6  084F               	movf	?___flsub+2,w
 13410  05C7  00D7               	movwf	___flge@ff1+2
 13411  05C8  084E               	movf	?___flsub+1,w
 13412  05C9  00D6               	movwf	___flge@ff1+1
 13413  05CA  084D               	movf	?___flsub,w
 13414  05CB  0008               	return
 13415  05CC                     __end_ofPL34:	
 13416  05CC                     PL62:	
 13417  05CC  00AB               	movwf	___xxtofl@val
 13418  05CD  3001               	movlw	1
 13419  05CE  01AC               	clrf	___xxtofl@val+1
 13420  05CF  01AD               	clrf	___xxtofl@val+2
 13421  05D0  01AE               	clrf	___xxtofl@val+3
 13422  05D1  0008               	return
 13423  05D2                     __end_ofPL62:	
 13424                           
 13425                           	psect	text73
 13426  0804                     __ptext73:	
 13427 ;; *************** function _ADC_init *****************
 13428 ;; Defined at:
 13429 ;;		line 10 in file "adc.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;		None
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;		None
 13434 ;; Return value:  Size  Location     Type
 13435 ;;                  1    wreg      void 
 13436 ;; Registers used:
 13437 ;;		wreg, status,2, status,0
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/100
 13440 ;;		On exit  : 300/0
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13443 ;;      Params:         0       0       0       0       0
 13444 ;;      Locals:         0       0       0       0       0
 13445 ;;      Temps:          0       0       0       0       0
 13446 ;;      Totals:         0       0       0       0       0
 13447 ;;Total ram usage:        0 bytes
 13448 ;; Hardware stack levels used:    1
 13449 ;; Hardware stack levels required when called:    1
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_main
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           
 13458                           ;psect for function _ADC_init
 13459  0804                     _ADC_init:	
 13460                           
 13461                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13462                           
 13463                           ;incstack = 0
 13464                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13465  0804  30C0               	movlw	192
 13466  0805  1283               	bcf	3,5	;RP0=0, select bank0
 13467  0806  1303               	bcf	3,6	;RP1=0, select bank0
 13468  0807  049F               	iorwf	31,f	;volatile
 13469                           
 13470                           ;adc.c: 12:      ADCON1=0b10000000;
 13471  0808  3080               	movlw	128
 13472  0809  1683               	bsf	3,5	;RP0=1, select bank1
 13473  080A  009F               	movwf	31	;volatile
 13474                           
 13475                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13476  080B  179F               	bsf	31,7	;volatile
 13477                           
 13478                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13479  080C  1283               	bcf	3,5	;RP0=0, select bank0
 13480  080D  141F               	bsf	31,0	;volatile
 13481  080E  0008               	return
 13482  080F                     __end_of_ADC_init:	
 13483                           
 13484                           	psect	text74
 13485  1F20                     __ptext74:	
 13486 ;; *************** function _isr *****************
 13487 ;; Defined at:
 13488 ;;		line 29 in file "isr.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;		None
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  tempo           2    4[COMMON] unsigned int 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 300/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13502 ;;      Params:         0       0       0       0       0
 13503 ;;      Locals:         2       0       0       0       0
 13504 ;;      Temps:          4       0       0       0       0
 13505 ;;      Totals:         6       0       0       0       0
 13506 ;;Total ram usage:        6 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		Interrupt level 1
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           
 13516                           ;psect for function _isr
 13517  1F20                     _isr:	
 13518                           
 13519                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13520  1F20  188B               	btfsc	11,1	;volatile
 13521                           
 13522                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13523  1F21  108B               	bcf	11,1	;volatile
 13524                           
 13525                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13526                           
 13527                           ;isr.c: 37:       }
 13528  1F22  1C0C               	btfss	12,0	;volatile
 13529  1F23  2F9D               	goto	i1l5982
 13530                           
 13531                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13532  1F24  30B1               	movlw	177
 13533  1F25  008F               	movwf	15	;volatile
 13534                           
 13535                           ;isr.c: 42:                 TMR1L=0xF3;
 13536  1F26  30F3               	movlw	243
 13537  1F27  008E               	movwf	14	;volatile
 13538                           
 13539                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13540  1F28  100C               	bcf	12,0	;volatile
 13541                           
 13542                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13543  1F29  1683               	bsf	3,5	;RP0=1, select bank3
 13544  1F2A  1703               	bsf	3,6	;RP1=1, select bank3
 13545  1F2B  1FBC               	btfss	_generic_status^(0+384),7
 13546  1F2C  2F2F               	goto	i1l5930
 13547                           
 13548                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13549  1F2D  13BC               	bcf	_generic_status^(0+384),7
 13550  1F2E  0064               	clrwdt	;# 
 13551  1F2F                     i1l5930:	
 13552                           
 13553                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13554  1F2F  300A               	movlw	10
 13555  1F30  1683               	bsf	3,5	;RP0=1, select bank3
 13556  1F31  1703               	bsf	3,6	;RP1=1, select bank3
 13557  1F32  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13558  1F33  1803               	skipnc
 13559  1F34  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13560                           
 13561                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13562  1F35  3003               	movlw	3
 13563  1F36  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13564  1F37  30E8               	movlw	232
 13565  1F38  1903               	skipnz
 13566  1F39  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13567  1F3A  1C03               	skipc
 13568  1F3B  2F3E               	goto	i1l5934
 13569                           
 13570                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13571  1F3C  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13572  1F3D  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13573  1F3E                     i1l5934:	
 13574                           
 13575                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13576  1F3E  3001               	movlw	1
 13577  1F3F  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13578  1F40  30F4               	movlw	244
 13579  1F41  1903               	skipnz
 13580  1F42  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13581  1F43  1803               	skipnc
 13582  1F44  2F49               	goto	i1l694
 13583                           
 13584                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13585  1F45  1283               	bcf	3,5	;RP0=0, select bank0
 13586  1F46  1303               	bcf	3,6	;RP1=0, select bank0
 13587  1F47  1786               	bsf	6,7	;volatile
 13588  1F48  2F4C               	goto	i1l5938
 13589  1F49                     i1l694:	
 13590                           ;isr.c: 56:                 else
 13591                           
 13592                           
 13593                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13594  1F49  1283               	bcf	3,5	;RP0=0, select bank0
 13595  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
 13596  1F4B  1386               	bcf	6,7	;volatile
 13597  1F4C                     i1l5938:	
 13598                           
 13599                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13600  1F4C  1683               	bsf	3,5	;RP0=1, select bank3
 13601  1F4D  1703               	bsf	3,6	;RP1=1, select bank3
 13602  1F4E  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13603  1F4F  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13604  1F50  1903               	btfsc	3,2
 13605  1F51  2F5C               	goto	i1l696
 13606                           
 13607                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13608  1F52  300A               	movlw	10
 13609  1F53  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13610  1F54  3000               	movlw	0
 13611  1F55  1C03               	skipc
 13612  1F56  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13613  1F57  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13614                           
 13615                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13616  1F58  1283               	bcf	3,5	;RP0=0, select bank0
 13617  1F59  1303               	bcf	3,6	;RP1=0, select bank0
 13618  1F5A  1706               	bsf	6,6	;volatile
 13619                           
 13620                           ;isr.c: 63:                    }
 13621  1F5B  2F5F               	goto	i1l5944
 13622  1F5C                     i1l696:	
 13623                           ;isr.c: 64:                 else{
 13624                           
 13625                           
 13626                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13627  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
 13628  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
 13629  1F5E  1306               	bcf	6,6	;volatile
 13630  1F5F                     i1l5944:	
 13631                           
 13632                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13633  1F5F  1683               	bsf	3,5	;RP0=1, select bank3
 13634  1F60  1703               	bsf	3,6	;RP1=1, select bank3
 13635  1F61  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13636  1F62  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13637  1F63  1903               	btfsc	3,2
 13638  1F64  2F6F               	goto	i1l698
 13639                           
 13640                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13641  1F65  300A               	movlw	10
 13642  1F66  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13643  1F67  3000               	movlw	0
 13644  1F68  1C03               	skipc
 13645  1F69  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13646  1F6A  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13647                           
 13648                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13649  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
 13650  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
 13651  1F6D  1686               	bsf	6,5	;volatile
 13652                           
 13653                           ;isr.c: 71:                    }
 13654  1F6E  2F72               	goto	i1l5950
 13655  1F6F                     i1l698:	
 13656                           ;isr.c: 72:                 else{
 13657                           
 13658                           
 13659                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13660  1F6F  1283               	bcf	3,5	;RP0=0, select bank0
 13661  1F70  1303               	bcf	3,6	;RP1=0, select bank0
 13662  1F71  1286               	bcf	6,5	;volatile
 13663  1F72                     i1l5950:	
 13664                           
 13665                           ;isr.c: 77:                 tempodecorrido+=10;
 13666  1F72  300A               	movlw	10
 13667  1F73  1683               	bsf	3,5	;RP0=1, select bank3
 13668  1F74  1703               	bsf	3,6	;RP1=1, select bank3
 13669  1F75  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13670  1F76  1803               	skipnc
 13671  1F77  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13672                           
 13673                           ;isr.c: 78:                 milisegundo+=10;
 13674  1F78  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13675  1F79  1803               	skipnc
 13676  1F7A  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13677                           
 13678                           ;isr.c: 79:                 if(milisegundo==1000){
 13679  1F7B  30E8               	movlw	232
 13680  1F7C  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13681  1F7D  3003               	movlw	3
 13682  1F7E  1903               	skipnz
 13683  1F7F  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13684  1F80  1D03               	btfss	3,2
 13685  1F81  2F9D               	goto	i1l5982
 13686                           
 13687                           ;isr.c: 80:                    milisegundo=0;
 13688  1F82  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13689  1F83  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13690                           
 13691                           ;isr.c: 81:                    segundo++;
 13692  1F84  0AF6               	incf	_segundo,f	;volatile
 13693                           
 13694                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13695  1F85  1303               	bcf	3,6	;RP1=0, select bank1
 13696  1F86  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
 13697  1F87  1D03               	btfss	3,2
 13698  1F88  03EF               	decf	_TempoCNT_0^(0+128),f	;volatile
 13699                           
 13700                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13701  1F89  0874               	movf	_TempoCNT_1,w	;volatile
 13702  1F8A  1D03               	btfss	3,2
 13703  1F8B  03F4               	decf	_TempoCNT_1,f	;volatile
 13704                           
 13705                           ;isr.c: 88:                    if(segundo==60){
 13706  1F8C  303C               	movlw	60
 13707  1F8D  0676               	xorwf	_segundo,w	;volatile
 13708  1F8E  1D03               	btfss	3,2
 13709  1F8F  2F9D               	goto	i1l5982
 13710                           
 13711                           ;isr.c: 89:                       segundo=0;
 13712  1F90  01F6               	clrf	_segundo	;volatile
 13713                           
 13714                           ;isr.c: 90:                       minuto++;
 13715  1F91  1703               	bsf	3,6	;RP1=1, select bank3
 13716  1F92  0ABB               	incf	_minuto^(0+384),f	;volatile
 13717                           
 13718                           ;isr.c: 91:                       if(minuto==60){
 13719  1F93  303C               	movlw	60
 13720  1F94  063B               	xorwf	_minuto^(0+384),w	;volatile
 13721  1F95  1D03               	btfss	3,2
 13722  1F96  2F9D               	goto	i1l5982
 13723                           
 13724                           ;isr.c: 92:                          minuto=0;
 13725  1F97  01BB               	clrf	_minuto^(0+384)	;volatile
 13726                           
 13727                           ;isr.c: 93:                          hora++;
 13728  1F98  0AF5               	incf	_hora,f	;volatile
 13729                           
 13730                           ;isr.c: 94:                          if(hora==24){
 13731  1F99  3018               	movlw	24
 13732  1F9A  0675               	xorwf	_hora,w	;volatile
 13733  1F9B  1903               	btfsc	3,2
 13734                           
 13735                           ;isr.c: 95:                             hora=0;
 13736  1F9C  01F5               	clrf	_hora	;volatile
 13737  1F9D                     i1l5982:	
 13738                           ;isr.c: 99:                 }
 13739                           
 13740                           
 13741                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13742  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
 13743  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
 13744  1F9F  1E8C               	btfss	12,5	;volatile
 13745  1FA0  2FF3               	goto	i1l714
 13746                           
 13747                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13748  1FA1  1683               	bsf	3,5	;RP0=1, select bank3
 13749  1FA2  1703               	bsf	3,6	;RP1=1, select bank3
 13750  1FA3  301E               	movlw	30
 13751  1FA4  143C               	bsf	_generic_status^(0+384),0
 13752                           
 13753                           ;isr.c: 109:         tempo=30;
 13754  1FA5  00FB               	movwf	isr@tempo
 13755  1FA6  01FC               	clrf	isr@tempo+1
 13756                           
 13757                           ;isr.c: 110:         count=0;
 13758  1FA7  01A2               	clrf	_count^(0+384)	;volatile
 13759  1FA8  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13760                           
 13761                           ;isr.c: 111:         pointer=usart_buffer;
 13762  1FA9  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13763  1FAA  00B2               	movwf	_pointer^(0+384)
 13764  1FAB                     i1l6002:	
 13765                           ;isr.c: 112:         while(tempo)
 13766                           
 13767                           
 13768                           ;isr.c: 112:         while(tempo)
 13769  1FAB  087B               	movf	isr@tempo,w
 13770  1FAC  047C               	iorwf	isr@tempo+1,w
 13771  1FAD  1903               	btfsc	3,2
 13772  1FAE  2FDA               	goto	i1l6004
 13773                           
 13774                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13775  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
 13776  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
 13777  1FB1  1E8C               	btfss	12,5	;volatile
 13778  1FB2  2FD3               	goto	i1l6000
 13779                           
 13780                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13781  1FB3  1683               	bsf	3,5	;RP0=1, select bank3
 13782  1FB4  1703               	bsf	3,6	;RP1=1, select bank3
 13783  1FB5  0832               	movf	_pointer^(0+384),w
 13784  1FB6  0084               	movwf	4
 13785  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
 13786  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
 13787  1FB9  081A               	movf	26,w	;volatile
 13788  1FBA  1783               	bsf	3,7	;select IRP bank2
 13789  1FBB  0080               	movwf	0
 13790                           
 13791                           ;isr.c: 118:                 if(count<32+10 -1)
 13792  1FBC  1683               	bsf	3,5	;RP0=1, select bank3
 13793  1FBD  1703               	bsf	3,6	;RP1=1, select bank3
 13794  1FBE  0823               	movf	(_count+1)^(0+384),w	;volatile
 13795  1FBF  3A80               	xorlw	128
 13796  1FC0  00FF               	movwf	127
 13797  1FC1  3080               	movlw	128
 13798  1FC2  027F               	subwf	127,w
 13799  1FC3  1D03               	skipz
 13800  1FC4  2FC7               	goto	u516_25
 13801  1FC5  3029               	movlw	41
 13802  1FC6  0222               	subwf	_count^(0+384),w	;volatile
 13803  1FC7                     u516_25:	
 13804  1FC7  1803               	skipnc
 13805  1FC8  2FCF               	goto	i1l5998
 13806                           
 13807                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13808  1FC9  1683               	bsf	3,5	;RP0=1, select bank3
 13809  1FCA  1703               	bsf	3,6	;RP1=1, select bank3
 13810  1FCB  0AA2               	incf	_count^(0+384),f	;volatile
 13811  1FCC  1903               	skipnz
 13812  1FCD  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13813                           
 13814                           ;isr.c: 121:                    pointer++;
 13815  1FCE  0AB2               	incf	_pointer^(0+384),f
 13816  1FCF                     i1l5998:	
 13817                           
 13818                           ;isr.c: 123:                 tempo=30;
 13819  1FCF  301E               	movlw	30
 13820  1FD0  00FB               	movwf	isr@tempo
 13821  1FD1  01FC               	clrf	isr@tempo+1
 13822                           
 13823                           ;isr.c: 124:             }
 13824  1FD2  2FAB               	goto	i1l6002
 13825  1FD3                     i1l6000:	
 13826                           
 13827                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13828  1FD3  3001               	movlw	1
 13829  1FD4  02FB               	subwf	isr@tempo,f
 13830  1FD5  3000               	movlw	0
 13831  1FD6  1C03               	skipc
 13832  1FD7  03FC               	decf	isr@tempo+1,f
 13833  1FD8  02FC               	subwf	isr@tempo+1,f
 13834  1FD9  2FAB               	goto	i1l6002
 13835  1FDA                     i1l6004:	
 13836                           
 13837                           ;isr.c: 131:         (*pointer)=0;
 13838  1FDA  1683               	bsf	3,5	;RP0=1, select bank3
 13839  1FDB  1703               	bsf	3,6	;RP1=1, select bank3
 13840  1FDC  0832               	movf	_pointer^(0+384),w
 13841  1FDD  0084               	movwf	4
 13842  1FDE  1783               	bsf	3,7	;select IRP bank2
 13843  1FDF  0180               	clrf	0
 13844                           
 13845                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13846  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
 13847  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
 13848  1FE2  1C98               	btfss	24,1	;volatile
 13849  1FE3  2FF3               	goto	i1l714
 13850                           
 13851                           ;isr.c: 134:            CREN=0;
 13852  1FE4  1218               	bcf	24,4	;volatile
 13853                           
 13854                           ;isr.c: 135:            CREN=1;
 13855  1FE5  1618               	bsf	24,4	;volatile
 13856                           
 13857                           ;isr.c: 136:            tempo=RCREG;
 13858  1FE6  081A               	movf	26,w	;volatile
 13859  1FE7  00FB               	movwf	isr@tempo
 13860  1FE8  01FC               	clrf	isr@tempo+1
 13861                           
 13862                           ;isr.c: 137:            tempo=RCREG;
 13863  1FE9  081A               	movf	26,w	;volatile
 13864  1FEA  00FB               	movwf	isr@tempo
 13865  1FEB  01FC               	clrf	isr@tempo+1
 13866                           
 13867                           ;isr.c: 138:            tempo=RCREG;
 13868  1FEC  081A               	movf	26,w	;volatile
 13869  1FED  00FB               	movwf	isr@tempo
 13870  1FEE  01FC               	clrf	isr@tempo+1
 13871                           
 13872                           ;isr.c: 139:            usart_buffer[0]=0;
 13873  1FEF  1703               	bsf	3,6	;RP1=1, select bank2
 13874  1FF0  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13875                           
 13876                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13877  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
 13878  1FF2  14BC               	bsf	_generic_status^(0+384),1
 13879  1FF3                     i1l714:	
 13880  1FF3  087A               	movf	??_isr+3,w
 13881  1FF4  1283               	bcf	3,5	;RP0=0, select bank0
 13882  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
 13883  1FF6  00FF               	movwf	127
 13884  1FF7  0879               	movf	??_isr+2,w
 13885  1FF8  008A               	movwf	10
 13886  1FF9  0878               	movf	??_isr+1,w
 13887  1FFA  0084               	movwf	4
 13888  1FFB  0E77               	swapf	??_isr^(0+4294967168),w
 13889  1FFC  0083               	movwf	3
 13890  1FFD  0EFE               	swapf	126,f
 13891  1FFE  0E7E               	swapf	126,w
 13892  1FFF  0009               	retfie
 13893  2000                     __end_of_isr:	
 13894  007E                     btemp	set	126	;btemp
 13895  007E                     wtemp0	set	126
 13896                           
 13897                           	psect	intentry
 13898  0004                     __pintentry:	
 13899                           ;incstack = 0
 13900                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13901                           
 13902  0004                     interrupt_function:	
 13903  007E                     saved_w	set	btemp
 13904  0004  00FE               	movwf	btemp
 13905  0005  0E03               	swapf	3,w
 13906  0006  00F7               	movwf	??_isr
 13907  0007  0804               	movf	4,w
 13908  0008  00F8               	movwf	??_isr+1
 13909  0009  080A               	movf	10,w
 13910  000A  00F9               	movwf	??_isr+2
 13911  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13912  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13913  000D  087F               	movf	btemp+1,w
 13914  000E  00FA               	movwf	??_isr+3
 13915  000F  160A  158A  2F20   	ljmp	_isr


Data Sizes:
    Strings     13
    Constant    44
    Data        2
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK3            96      0      79
    BANK2            96      0      74

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK2[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK2[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decodify_Command
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___flmul
    _itoa->_utoa
    _utoa->___lwdiv
    ___flmul->___flsub
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___wmul->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___wmul
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Load_Work->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  186098
                                             74 BANK1      5     5      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   59115
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     298
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        23    18      5   48504
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   26140
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5    1132
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     630
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7   10575
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0  102804
                                             78 BANK0      2     2      0
                                             29 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5074
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4    8726
                                             25 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     636
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3415
                                             21 BANK0      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     238
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             13 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2177
                                             17 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3132
                                             17 BANK0      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             13 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     973
                                             10 BANK0      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    5076
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3341
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     238
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     710
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     915
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     459
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     254
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    5706
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    6686
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6766
                                              4 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    7656
                                             17 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    7622
                                             17 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    7396
                                              4 BANK0     13     6      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     955
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    7582
                                             25 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    7331
                                             16 BANK0      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6404
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4911
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    9214
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1466
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    7748
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5942
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    4977
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1806
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
         _EEPROM_Read_Byte
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
       ___fltol
       ___wmul
         ___fltol (ARG)
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fltol
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _Load_Work
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___lwdiv
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _captura
       _log
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fleq
         ___flge
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _eval_poly
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
         _frexp
           ___fleq
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4F       9       82.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      4A      11       77.1%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4F      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     146      12        0.0%
ABS                  0      0     146       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 20 09:49:52 2020

                              _USART_putc 0D87                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0571                                        PL4 05A2  
                                      PL6 0F1A                                        PL8 0F34  
         EEPROM_24C1025_Read_Buffer@range 002F          EEPROM_24C1025_Write_Str@chip_add 0029  
                                      fsr 0004                       ___wmul@multiplicand 002C  
                           _USART_put_int 0F04                  Decodify_Command@tempchar 00E4  
                     __Umul8_16@word_mpld 0025                                       PL10 05BC  
                                     PL20 1785                                       PL12 0F3D  
                                     PL30 03E8                                       PL22 0F76  
                                     PL14 0F4E                                       PL40 0405  
                                     PL32 06D8                                       PL24 178F  
                                     PL16 0F67                                       PL50 06E3  
                                     PL42 17AA                                       PL34 05C4  
                                     PL26 1798                                       PL18 1775  
                                     PL60 1E97                                       PL52 17BC  
                                     PL44 17B3                                       PL36 03F1  
                                     PL28 17A1                                       PL70 0F96  
                                     PL62 05CC                                       PL54 0416  
                                     PL46 0F84                                       PL38 03FB  
                                     PL72 0423                                       PL64 1F1A  
                                     PL56 0F8A                                       PL48 040E  
                                     PL74 0429                                       PL66 0F91  
                                     PL58 17C3                                       PL76 17C9  
                                     PL68 041D                                       PL78 17CF  
            PROCULUS_VP_Write_String@text 0037                                       l180 03DC  
                                     l610 1E87                                       l418 07BB  
                                     l611 1E88                                       l419 07BF  
                                     l605 1E64                                       l438 0901  
                                     l615 0ED0                                       l471 0B79  
                                     l473 0BDB                                       l467 0B6C  
                                     l637 07E9                                       l581 1680  
                                     l927 0D8F                                       l869 176B  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 002E  
                Decodify_Command@sizedata 00E5                                       _log 168C  
                                     _isr 1F20                                       fsr0 0004  
                           ??_Auto_Relay0 0061                             ??_Auto_Relay1 0061  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1E97  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0062  
                            ___flmul@bexp 0063                    PROCULUS_VP_Write@vetor 002F  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0061  
                            ___flmul@temp 006C                              ___flmul@prod 0068  
 __end_of_PROCULUS_Control_Register_Write 0FE6  __size_of_PROCULUS_Control_Register_Write 0028  
       ??_PROCULUS_Control_Register_Write 002E          ?_PROCULUS_Control_Register_Write 002D  
         _PROCULUS_Control_Register_Write 0FBE                              __CFG_LVP$OFF 0000  
                   ??_mediatemperaturaNTC 00CF                              ___fltol@exp1 0029  
                                    l1212 051D                                      l1214 0557  
                                    l1323 11DC                                      l1324 11DA  
                                    l1420 0C07                                      l1421 0C05  
                                    l1334 125D                                      l1351 12E6  
                                    l1336 124B                                      l1328 11F8  
                                    l1416 0BF0                                      l1345 1280  
                                    l1337 1252                                      l1329 11F6  
                                    l1409 1633                                      l1417 0BEE  
                                    l1346 1282                                      l1338 1254  
                                    l1371 1330                                      l1356 12FB  
                                    l1380 152C                                      l1381 1529  
                                    l1438 0D25                                      l1464 14C6  
                                    l1384 1544                                      l1385 1541  
                                    l1491 1D7A                                      l1477 14F8  
                                    l6100 1EF5                                      l7000 1548  
                                    l6104 1F06                                      l6210 1263  
                                    l6204 1257                                      l7020 1569  
                                    l7012 1561                                      l6108 1F18  
                                    l7102 1634                                      l6062 0D52  
                                    l6310 0BF4                                      l7110 1D3E  
                                    l6240 12F0                                      l6224 1286  
                                    l7120 1D58                                      l6234 12D8  
                                    l7210 00A8                                      l6066 0D5A  
                                    l6322 0C0B                                      l6260 130B  
                                    l6252 1300                                      l7212 00EF  
                                    l7204 00E0                                      l7044 15BC  
                                    l6404 0D18                                      l8004 0B7D  
                                    l8012 06EB                                      l6254 1302  
                                    l6158 1204                                      l6430 02F2  
                                    l7150 008A                                      l7070 15EB  
                                    l7062 15C4                                      l7038 159D  
                                    l7046 1585                                      l6326 0C15  
                                    l6264 130D                                      l7304 01CE  
                                    l7224 0124                                      l7064 15D7  
                                    l7048 15BE                                      l8112 07A1  
                                    l6426 02EE                                      l7330 05D9  
                                    l7306 01D5                                      l7226 0127  
                                    l7146 0086                                      l7090 1615  
                                    l7074 15ED                                      l6602 1D94  
                                    l6610 1DA7                                      l6284 132C  
                                    l6276 1320                                      l6188 1222  
                                    l6620 14BE                                      l6428 02F1  
                                    l7252 014B                                      l7228 0128  
                                    l7148 0089                                      l7084 1601  
                                    l6540 0FE6                                      l6524 0F04  
                                    l7404 0F13                                      l6380 0CD9  
                                    l8132 07DA                                      ?_log 00B0  
                                    l6630 14DC                                      l6470 0363  
                                    l6518 03D5                                      l7270 018F  
                                    l7414 1E47                                      l6374 0CC6  
                                    l7502 133F                                      l6552 050C  
                                    l6288 1331                                      l6632 14E7  
                                    l6624 14D1                                      l7272 0192  
                                    l7344 1E26                                      l7416 1E58  
                                    l7096 162B                                      l6384 0CDB  
                                    l6650 150E                                      l6466 035F  
                                    l7274 0193                                      l6546 0FE8  
                                    l6394 0CEF                                      l7450 0DA6  
                                    l8082 0770                                      l6636 14F6  
                                    l6628 14D3                                      l6492 038D  
                                    l6468 0362                                      l6740 027B  
                                    l7356 0DF0                                      l7540 1770  
                                    l7620 1C8C                                      ?_isr 0077  
                                    l6558 053A                                      l6638 14EC  
                                    l6486 037D                                      l6494 030C  
                                    l6742 027E                                      l6822 1E6D  
                                    l6590 1679                                      l6910 0841  
                                    l6814 0DC9                                      l7438 1C70  
                                    l6398 0D03                                      l6662 1EB7  
                                    l7560 1107                                      l6496 038F  
                                    l6744 027F                                      l7296 01B6  
                                    l6824 1E70                                      l6816 0DE6  
                                    l6808 0DC5                                      l7464 0D69  
                                    l8168 0B88                                      l7640 1CC6  
                                    l6680 11BF                                      l7544 1773  
                                    l7720 1095                                      l6578 1662  
                                    l6850 0DB6                                      l6930 065F  
                                    l6914 06C1                                      l7466 0D70  
                                    l7458 1C59                                      l7802 087A  
                                    l7490 17D8                                      l7572 0569  
                                    l7556 10FF                                      l7548 10F0  
                                    l7740 0434                                      l6772 02B6  
                                    l6908 082A                                      l6852 0DBE  
                                    l6932 0664                                      l7468 0D74  
                                    l7660 1CE0                                      l7708 1080  
                                    l7716 108E                                      l7574 056D  
                                    l6766 02A2                                      l6774 0232  
                                    l6694 020B                                      l6950 068A  
                                    l6918 06C9                                      l7398 1D18  
                                    l7910 0A5D                                      l7830 090C  
                                    l7822 08FA                                      l7814 08D0  
                                    l6870 16C3                                      l7734 10E0  
                                    l7744 046B                                      l7568 1116  
                                    l6776 02B8                                      l6696 020E  
                                    l6792 0EEF                                      l7920 0A98  
                                    l7904 0A3A                                      l7840 0927  
                                    l7728 10AD                                      l7746 046E  
                                    l7738 0433                                      l7770 04E7  
                                    l7762 048E                                      l6698 020F  
                                    l6946 0682                                      l7826 0903  
                                    l7586 1DED                                      l7674 1CE7  
                                    l6866 16A7                                      l7748 0467  
                                    l7772 04E0                                      l7764 048F  
                                    l6892 0FD2                                      l6956 068E  
                                    l7916 0A78                                      l7860 096B  
                                    l7836 0914                                      l7692 102C  
                                    l6894 0FE2                                      l6958 0698  
                                    l7934 0ADC                                      l7926 0AA8  
                                    l7854 0952                                      l7846 0936  
                                    l7598 1E18                                      l7768 04E4  
                                    l6896 080F                                      l7944 0AF6  
                                    l7872 0988                                      l6986 1530  
                                    l7962 0B28                                      l7954 0B10  
                                    l7890 09EC                                      l7866 0976  
                                    l7794 085D                                      l7980 0B4C  
                                    l7884 09C7                                      _BETA 1834  
                                    l7974 0B3C                                      l7878 09A7  
                                    l7798 0867                                      l7992 0B70  
                                    l7968 0B31                                      l7896 0A0A  
                                    l7986 0B60                                      STR_1 183C  
                            __CFG_WDTE$ON 0000                                      STR_2 1843  
                                    STR_3 1842                                      STR_4 1847  
                                    STR_5 1842                                      STR_6 1847  
                                    STR_7 1842                                      STR_8 1844  
                                    _CREN 00C4                                      u6025 0FEE  
                                    u6125 166B                                      u7005 1D24  
                                    u5265 1F14                                      u5370 1242  
                                    u6323 01FA                                      u7035 1C79  
                                    u5380 1243                                      _RCEN 048B  
                                    u5365 1236                                      u6333 0209  
                                    u6165 1D9A                                      u6343 0243  
                                    u7215 1DBA                                      u7223 1C9E  
                                    u5483 1298                                      u6363 0279  
                                    u7083 17EA                                      u6525 066D  
                                    u5905 0CF8                                      u5915 0D0E  
                                    u7195 1E00                                      u5933 02DD  
                                    u6805 1620                                      u5943 02EC  
                                    u5953 032A                                      u6913 0113  
                                    u6923 0122                                      u7707 0EE0  
                                    u5973 035D                                      u6933 0158  
                                    u7717 00D1                                      u6853 0075  
                                    u5990 03D2                                      u7727 00FD  
                                    u6863 0084                                      u6695 15AB  
                                    u7647 06F3                                      u5985 0319  
                                    u6953 018D                                      u7737 0172  
                                    u6873 00BB                                      u7657 1CA7  
                                    u7747 01E1                                      u6795 160A  
                                    u7667 17F2                                      u7757 025C  
                                    u7677 0FF6                                      u6983 0601  
                                    u7767 02C4                                      u7687 1E3E  
                                    u7777 0340                                      u7697 1E91  
                                    u7787 03A0                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0033  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 03E8                                      _main 06EB  
                                    _hora 0075                                      _itoa 0D98  
       __size_of_EEPROM_24C1025_Write_Int 0018                                      btemp 007E  
                                    _utoa 1D39         __size_of_EEPROM_24C1025_Write_Str 009D  
                                    log@x 00B0                 ?_EEPROM_24C1025_Write_Int 0030  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 0022  
             __size_of_EEPROM_Read_String 0016                                      start 0012  
                        __end_of_ADC_init 080F                          _BALANCE_RESISTOR 1838  
                         ___fldiv@new_exp 00B1        EEPROM_24C1025_Read_Buffer@sizedata 0028  
                           ??_Rele0Ligado 0020                             ??_Rele1Ligado 0020  
                                   ??_log 006E                                     ??_isr 0077  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0077                          ?_I2C_Master_Stop 0077  
                          ?_USART_put_int 002A                     __size_of_ADC_Read_NTC 0172  
                           ___fltol@sign1 0028                           __end_of___fladd 1337  
                                   ?_main 0077                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 1638  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 0D30                           __end_of___flsub 1654  
                         __end_of___fltol 06A7                                     _ANSEL 0188  
                         __end_of___lldiv 1E21                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 167E  
                         __end_of___lwmod 1DAC                                     i1l714 1FF3  
                                   i1l694 1F49                                     i1l696 1F5C  
                                   i1l698 1F6F                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 0035                                     _TRISE 0089  
                                   _TXREG 0019                           __end_of_captura 168C  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
               EEPROM_Read_Integer@result 0028                                     _canal 01B5  
            __size_of_EEPROM_Read_Integer 001B                                     _count 01A2  
                                   _frexp 1E9D             ??_EEPROM_24C1025_Write_Buffer 0029  
      __size_of_EEPROM_24C1025_Write_Byte 0014                                     _texto 01BD  
              ?_EEPROM_24C1025_Write_Byte 002F                       __end_of_Auto_Relay0 0488  
                     __end_of_Auto_Relay1 04FB                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
                 ADC_Read_NTC@resistencia 00C4           EEPROM_24C1025_Read_Byte@mem_add 0031  
                            __end_of_BETA 1838                   ADC_Read_NTC@temperatura 00CB  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0012                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 0035  
                            _ADC_Read_NTC 1337                               ?_USART_putc 0077  
                             log@exponent 006E                              __end_of_main 07E6  
                              _Histerese0 019C                                _Histerese1 01B8  
                            __end_of_itoa 0DB2                              __end_of_utoa 1D88  
                          Send_To_MB@size 0021                          _USART_put_buffer 1C6C  
                __end_of_EEPROM_Read_Byte 0EE9                                    ??_main 00EA  
                                  ??_itoa 0033                          __end_of_Save_Log 0658  
                                  ??_utoa 002B                       __end_of_Rele0Ligado 1107  
                        _USART_put_string 0DC5                       __end_of_Rele1Ligado 111E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0077  
               EEPROM_Write_Byte@last_GIE 0024                  _mediatemperaturaNTC$2335 00D0  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0033                                    ?_frexp 002C  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0D30                     EEPROM_Write_Integer@i 002B  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 0FA6  
                                  i1l6000 1FD3                                    i1l6002 1FAB  
                                  i1l6004 1FDA                            _Rele0Desligado 0569  
                                  i1l5930 1F2F                                    i1l5950 1F72  
                                  i1l5934 1F3E                                    i1l5944 1F5F  
                                  i1l5938 1F4C                                    i1l5982 1F9D  
                                  i1l5998 1FCF                                    u516_25 1FC7  
       __end_of_EEPROM_24C1025_Write_Byte 1C57                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0039                        __size_of_Load_Work 00D8  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 003C  
                        __end_of___xxtofl 1517                            _Rele1Desligado 056D  
                      PROCULUS_VP_Write@i 0034                  __end_of_Decodify_Command 0BDC  
                              _TempoCNT_0 00EF                                _TempoCNT_1 0074  
                              _TempoOFF_0 01B9                                _TempoOFF_1 01B6  
                ?_EEPROM_24C1025_Read_Int 0031                  ?_EEPROM_24C1025_Read_Str 0024  
                _I2C_Master_RepeatedStart 03E5      __size_of_EEPROM_24C1025_Write_Buffer 00DB  
                                  ___flge 04FB                                    ___fleq 1EE4  
                               ??___fladd 0041                                    ___wmul 06BF  
                               ??___fldiv 00A8                                 ??___flmul 005D  
                               ??___flsub 0055                                 ??___fltol 0024  
                         ??_USART_put_int 002C                                 ??___lldiv 0028  
                                  _header 01A4                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 013A  
                       _USART_to_Protocol 1CEE                           USART_putc@value 0020  
                                  _minuto 01BB                                 ??_captura 0022  
                      ?_USART_to_Protocol 0077              Decodify_Command@add_24LCxxxx 00E6  
                                  _strcat 0D67                                    _strcpy 1C57  
                                  _strlen 0DB2         EEPROM_24C1025_Read_Buffer@mem_add 0024  
        __end_of_EEPROM_24C1025_Read_Byte 004C                        __size_of__Umul8_16 001B  
                             _Auto_Relay0 042F                               _Auto_Relay1 0488  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 0034  
                               ?_ADC_init 0077                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 0039                    __end_of_Rele0Desligado 056D  
                     __size_of_USART_putc 0011                                ___flge@ff1 0055  
                              ___flge@ff2 0059                    __end_of_Rele1Desligado 0571  
                            ___xxtofl@arg 0035                              ___xxtofl@exp 0034  
                            ___xxtofl@val 002B                                ___fleq@ff1 0020  
                              ___fleq@ff2 0024                          __end_oflog@coeff 1834  
                 __end_of__initialization 0032       PROCULUS_Control_Register_Write@size 002D  
                            eval_poly@res 00AC                                ___fltol@f1 0020  
                            _Board_Number 01B4                            __pcstackCOMMON 0077  
                __size_of_PROCULUS_Buzzer 0018                 __end_of_USART_to_Protocol 1D39  
                            __pidataBANK3 0000                               _Rele0Ligado 10F0  
                           __end_of_frexp 1EE4                               _Rele1Ligado 1107  
                   USART_put_string@vetor 0021                                __end_ofPL2 05A2  
                              __end_ofPL4 05BC                                __end_ofPL6 0F34  
                              __end_ofPL8 0F3D                         __end_of_Load_Work 0EC8  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0023  
                __size_of_my_delay_ms_WDT 002D                            _OPTION_REGbits 0081  
                __end_of_BALANCE_RESISTOR 183C          __end_of_EEPROM_24C1025_Write_Int 06BF  
                      Decodify_Command@hh 00BD                        Decodify_Command@mm 00C7  
        __end_of_EEPROM_24C1025_Write_Str 0102                        Decodify_Command@ss 00D1  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1E5C  
         __end_of_EEPROM_24C1025_Fill_All 0604                           ?_Rele0Desligado 0077  
                                 ??_frexp 0031                               ?_Send_To_MB 0077  
                  __size_of_Send_Reply_OK 0007                                __pbssBANK1 00EF  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      __size_of_eval_poly 00AA                           ?_Rele1Desligado 0077  
         __end_of_EEPROM_24C1025_Read_Int 0065           __end_of_EEPROM_24C1025_Read_Str 01E7  
                ?_Package_Usart_is_for_me 0077                                 ?_Save_Log 0039  
                          _PROCULUS_Delay 0FE6                         __end_of__Umul8_16 0D67  
                              __pmaintext 06EB                                   ?___flge 0055  
                                 ?___fleq 0020                       Save_Log@add_datalog 0039  
                     _EEPROM_Read_Integer 0EE9                                   ?___wmul 002A  
              PROCULUS_Show_Screen@screen 0031                                __pintentry 0004  
                    mediatemperaturaNTC@i 00D9                      _PROCULUS_Show_Screen 0F9C  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020               __end_of_mediatemperaturaNTC 10F0  
                               ?___xxtofl 002B                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00DB               EEPROM_24C1025_Read_Int@data 0036  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1C43  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 0036                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 002D               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1C88                __end_of_EEPROM_Read_String 07FC  
                  __end_of_PROCULUS_Delay 1000                  __end_of_USART_put_string 0DF0  
                    __size_of_my_delay_ms 002C                                ??_Save_Log 003D  
                         PROCULUS_Delay@i 0024                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 002E                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 004B               PROCULUS_Buzzer@time_ms_x_10 0031  
                                 _Status0 01A8                                   _Status1 01A6  
                         __size_of___flge 006E                           __size_of___fleq 0036  
                                 ___fladd 11C8                                   ___fldiv 1517  
                EEPROM_Write_Integer@addr 0029                                   ___flmul 0BDC  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1638  
                                 ___fltol 0658                                   ___lldiv 1DD9  
                         __size_of___wmul 0019                                   ___lwdiv 1654  
                                 ___lwmod 1D88                             _Send_Reply_OK 0F13  
                     __size_of_Send_To_MB 001C                     ?_PROCULUS_Show_Screen 0031  
                       __end_of_eval_poly 11C8                                   _captura 167E  
                                 __ptext1 1C88                                   __ptext2 1010  
                                 __ptext3 17D4                                   __ptext4 175F  
                                 __ptext5 1337                                   __ptext6 168C  
                                 __ptext7 1E9D                                   __ptext8 1EE4  
                                 __ptext9 111E                         ??_PROCULUS_Buzzer 0033  
                                 _destino 01B3                         ?_EEPROM_Read_Byte 0077  
                         __size_of_strcat 0020                           __size_of_strcpy 0015  
                         __size_of_strlen 0013                              __size_of_log 00D3  
                            __size_of_isr 00E0                                ??___xxtofl 002F  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 0076  
                __size_of_I2C_Master_Init 002D                  __size_of_I2C_Master_Read 0024  
                          _usart_protocol 01CD                     ??_EEPROM_Read_Integer 0026  
                __size_of_I2C_Master_Wait 0009                  __size_of_I2C_Master_Stop 0003  
           EEPROM_24C1025_Write_Int@local 0037                                   _pointer 01B2  
           EEPROM_24C1025_Write_Byte@data 0033                                   clrloop0 1009  
                      __end_of_USART_init 1CEE           __end_of_Package_Usart_is_for_me 1775  
                      __end_of_USART_putc 0D98                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 06A7                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 0065                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0034                                   itoa@val 002F  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
                        ADC_Read_NTC@calc 00BE                 __size_of_I2C_Master_Start 0008  
               __size_of_I2C_Master_Write 0008                         ?_Decodify_Command 0077  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002C  
                               _RL0Status 01DE                                 _RL1Status 01DD  
                      ??_Decodify_Command 006E                                 _RCSTAbits 0018  
                        I2C_Master_Init@c 002D                          I2C_Master_Read@a 0020  
                          ?_Send_Reply_OK 0077                                   utoa@buf 002E  
               _EEPROM_24C1025_Write_Byte 1C43                                   utoa@val 0027  
        __size_of_EEPROM_24C1025_Fill_All 0032                                   strlen@s 0024  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 01B0              ??_EEPROM_24C1025_Read_Buffer 002B  
           EEPROM_24C1025_Write_Str@range 002A                  mediatemperaturaNTC@canal 00D4  
                             ___fladd@grs 004C          __size_of_EEPROM_24C1025_Read_Int 0019  
        __size_of_EEPROM_24C1025_Read_Str 00E5                              ?_Auto_Relay0 0077  
                            ?_Auto_Relay1 0077                             ___xxtofl@sign 0033  
     __end_of_EEPROM_24C1025_Write_Buffer 03A5               _EEPROM_24C1025_Write_Buffer 02CA  
                             ___fldiv@grs 00B3                               ___fldiv@rem 00AC  
    PROCULUS_Control_Register_Write@vetor 002F          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 0030          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00DE  
                   PROCULUS_VP_Write@size 0031           EEPROM_24C1025_Read_Str@chip_add 002C  
                             ___flmul@grs 0064                  _PROCULUS_VP_Write_String 1C31  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 00E3  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0033  
                            ?_Rele0Ligado 0077                              ?_Rele1Ligado 0077  
                          __end_of___flge 0569                            __end_of___fleq 1F1A  
                          __end_of___wmul 06D8                     __end_of_USART_put_int 0F13  
                             _BAUDCTLbits 0187                          ??_Rele0Desligado 0020  
                          __end_of_strcat 0D87                            __end_of_strcpy 1C6C  
                          __end_of_strlen 0DC5                               __end_ofPL10 05C4  
                             __end_ofPL20 178F                               __end_ofPL12 0F4E  
                             __end_ofPL30 03F1                               __end_ofPL22 0F84  
                             __end_ofPL14 0F67                               __end_ofPL40 040E  
                             __end_ofPL32 06E3                               __end_ofPL24 1798  
                             __end_ofPL16 0F76                               __end_ofPL50 06EB  
                             __end_ofPL42 17B3                               __end_ofPL34 05CC  
                             __end_ofPL26 17A1                               __end_ofPL18 1785  
                             __end_ofPL60 1E9D                               __end_ofPL52 17C3  
                             __end_ofPL44 17BC                               __end_ofPL36 03FB  
                             __end_ofPL28 17AA                               __end_ofPL70 0F9C  
                             __end_ofPL62 05D2                               __end_ofPL54 041D  
                             __end_ofPL46 0F8A                               __end_ofPL38 0405  
                             __end_ofPL72 0429                               __end_ofPL64 1F20  
                             __end_ofPL56 0F91                               __end_ofPL48 0416  
                             __end_ofPL74 042F                               __end_ofPL66 0F96  
                             __end_ofPL58 17C9                               __end_ofPL76 17CF  
                             __end_ofPL68 0423                               __end_ofPL78 17D4  
                     start_initialization 0015                                eval_poly@d 00A4  
                              eval_poly@n 00A5                                eval_poly@x 00A0  
                        ??_Rele1Desligado 0020                                 _Load_Work 0DF0  
                             __end_of_log 175F                               __end_of_isr 2000  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                              frexp@value 002C                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1E44  
        EEPROM_24C1025_Write_Int@chip_add 0036                                 _SetPoint0 0070  
                               _SetPoint1 0198                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DD                                 _TempoON_0 01BA  
                               _TempoON_1 01B7                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 005D  
                                ??___fleq 0028                         __size_of_Save_Log 0054  
                                ??___wmul 002E          EEPROM_24C1025_Read_Buffer@cnt_98 002D  
                               __Umul8_16 0D4C                               __pdataBANK3 01DD  
                      __end_of_Send_To_MB 0D4C          __size_of_Package_Usart_is_for_me 0016  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0023                ??_EEPROM_24C1025_Read_Byte 0035  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 003D  
                               ___fladd@b 0039          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 00A0                                 ___fldiv@b 00A4  
                               ___flmul@a 0059                                 ___flmul@b 0055  
                             __pbssCOMMON 0070                                 ___flsub@a 004D  
                               ___flsub@b 0051                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                              ?_Load_Work 0077                         _PROCULUS_VP_Write 080F  
                       __size_of___xxtofl 006E                        ?_PROCULUS_VP_Write 002D  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 0018                          _I2C_Master_Start 03AD  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 03A5  
                     ??_PROCULUS_VP_Write 0032                            _tempodecorrido 01A0  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 0FA6  
                        ___lwdiv@dividend 0022                             ?_ADC_Read_NTC 00B9  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 0039                                  ?___fldiv 00A0  
                 _EEPROM_24C1025_Fill_All 05D2                                  ?___flmul 0055  
                                ?___flsub 004D                                  ?___fltol 0020  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 07E6                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 02CA  
              _EEPROM_24C1025_Read_Buffer 01E7                                  ?_captura 0020  
                               __pstrings 1800                           _my_delay_ms_WDT 1C88  
                 _EEPROM_24C1025_Read_Int 004C                   _EEPROM_24C1025_Read_Str 0102  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0036  
              ??_EEPROM_24C1025_Write_Str 0027                       ?_EEPROM_Read_String 0023  
                               _eval_poly 111E                 __end_of_PROCULUS_VP_Write 0845  
              EEPROM_24C1025_Read_Str@cnt 002B                                  _ADC_init 0804  
                        ___lwdiv@quotient 0025                   EEPROM_Write_Integer@ptr 002A  
                    __size_of_Auto_Relay0 0059                      __size_of_Auto_Relay1 0073  
                        ??_PROCULUS_Delay 0022                            __size_of_frexp 0047  
          EEPROM_24C1025_Read_Buffer@data 0029              __size_of_mediatemperaturaNTC 00E0  
          EEPROM_24C1025_Read_Buffer@ctrl 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0021                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 0022                            ___wmul@product 002E  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1008  
                                _PIE1bits 008C                            ??_ADC_Read_NTC 0070  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0030  
                  Decodify_Command@OutPut 00E0                   mediatemperaturaNTC@Temp 00D5  
                         _Delay_Led_Usart 01AC              EEPROM_24C1025_Read_Byte@data 0036  
                    __size_of_Rele0Ligado 0017                      __size_of_Rele1Ligado 0017  
             __end_of_EEPROM_Read_Integer 0F04                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
                       ___wmul@multiplier 002A                 __size_of_Decodify_Command 0397  
                    _EEPROM_Write_Integer 1E21            EEPROM_24C1025_Read_Int@mem_add 0031  
                              ?_eval_poly 00A0                                 main@reset 00ED  
                             ??_Load_Work 00B9                ??_PROCULUS_VP_Write_String 0038  
                     I2C_Master_Read@temp 0022                   __end_of_PROCULUS_Buzzer 0FBE  
                          _generic_status 01BC                                 frexp@eptr 0030  
                              _EECON1bits 018C                                  _Save_Log 0604  
               ??_EEPROM_24C1025_Fill_All 003B                       __end_of_my_delay_ms 1800  
            EEPROM_24C1025_Read_Str@range 002D              EEPROM_24C1025_Read_Str@texto 0028  
                 __end_of_my_delay_ms_WDT 1CB5                              my_delay_ms@i 0026  
                           ADC_Read_NTC@B 00C2                             ADC_Read_NTC@i 00C8  
                             ??__Umul8_16 0023         __size_of_I2C_Master_RepeatedStart 0003  
                        __size_of___fladd 016F                 ??_EEPROM_24C1025_Read_Int 0035  
                 _Package_Usart_is_for_me 175F                          __size_of___fldiv 0121  
               ??_EEPROM_24C1025_Read_Str 0029                          __size_of___flmul 0154  
               ?_I2C_Master_RepeatedStart 0077                          __size_of___flsub 001C  
                        __size_of___fltol 004F                          __size_of___lldiv 0048  
                        __size_of___lwdiv 002A                          __size_of___lwmod 0024  
                      __end_of__stringtab 1810       EEPROM_24C1025_Write_Buffer@chip_add 002C  
                     USART_put_string@ptr 0023                          __size_of_captura 000E  
                   ?_EEPROM_Write_Integer 0025                              _Temperatura0 0194  
                            _Temperatura1 0190                           _I2C_Master_Init 1DAC  
                         _I2C_Master_Read 03B8                                  ___xxtofl 14A9  
              __size_of_PROCULUS_VP_Write 0036                           _I2C_Master_Wait 03DC  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0035  
                         _I2C_Master_Stop 03B5                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0024                                  __ptext10 167E  
                                __ptext11 1CB5                                  __ptext20 0BDC  
                                __ptext12 1DAC                                  __ptext21 0D4C  
                                __ptext13 1DD9                                  __ptext30 1C31  
                                __ptext22 1CEE                                  __ptext14 0845  
                                __ptext31 0DB2                                  __ptext23 1C6C  
                                __ptext15 1C57                                  __ptext40 0DF0  
                                __ptext32 080F                                  __ptext24 0D30  
                                __ptext16 0D67                                  __ptext41 1517  
                                __ptext33 0F9C                                  __ptext25 0F13  
                                __ptext17 0D98                                  __ptext50 0102  
                                __ptext42 0EE9                                  __ptext34 0FA6  
                                __ptext26 0DC5                                  __ptext18 1D39  
                                __ptext51 004C                                  __ptext43 1E44  
                                __ptext35 1654                                  __ptext27 0604  
                                __ptext19 1D88                                  __ptext60 03B5  
                                __ptext52 0036                                  __ptext44 1E21  
                                __ptext36 0FBE                                  __ptext28 06BF  
                                __ptext61 03AD                                  __ptext53 01E7  
                                __ptext45 1E5C                                  __ptext37 0F04  
                                __ptext29 0658                                  __ptext70 04FB  
                                __ptext62 03DC                                  __ptext54 03E5  
                                __ptext46 07E6                                  __ptext38 0D87  
                                __ptext71 10F0                                  __ptext63 0488  
                                __ptext55 03B8                                  __ptext47 0EC8  
                                __ptext39 0FE6                                  __ptext72 0569  
                                __ptext64 14A9                                  __ptext56 05D2  
                                __ptext48 0065                                  __ptext73 0804  
                                __ptext65 1107                                  __ptext57 06A7  
                                __ptext49 1C43                                  __ptext74 1F20  
                                __ptext66 056D                                  __ptext58 02CA  
                                __ptext67 042F                                  __ptext59 03A5  
                                __ptext68 1638                                  __ptext69 11C8  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 002A  
                              strcpy@from 0020                             __size_of_main 00FB  
                           __size_of_itoa 001A                             __size_of_utoa 004F  
            EEPROM_24C1025_Fill_All@value 0039                PROCULUS_VP_Write_String@vp 0035  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 01AA  
                          _Delay_Led_Tmr0 01AE             __size_of_PROCULUS_Show_Screen 000A  
                     _EEPROM_Write_String 1E44                                  log@coeff 1810  
                __end_of_I2C_Master_Start 03B5                  __end_of_I2C_Master_Write 03AD  
                              _INTCONbits 000B                               ??_eval_poly 00A7  
                    __end_of_ADC_Read_NTC 14A9                                  isr@tempo 007B  
                                itoa@base 0031                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0024                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0031                         USART_put_int@dado 002C  
                        _EEPROM_Read_Byte 0EC8                               _my_delay_ms 17D4  
                       ADC_Read_NTC@canal 0077                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 000F              EEPROM_24C1025_Write_Int@data 0034  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0026  
                 EEPROM_Write_String@dado 0025                         ADC_Read_NTC@value 00C9  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 0F1A  
                     _mediatemperaturaNTC 1010                   __end_of_I2C_Master_Init 1DD9  
                 __end_of_I2C_Master_Read 03DC                   __end_of_I2C_Master_Wait 03E5  
                 __end_of_I2C_Master_Stop 03B8              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 0024           EEPROM_24C1025_Fill_All@chip_add 003B  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0845                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002B  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1E5C  
          EEPROM_24C1025_Read_Str@mem_add 0024                             ___fladd@signs 0049  
                    ?_mediatemperaturaNTC 0077                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                   __size_of_Rele0Desligado 0004  
                            ___fladd@aexp 004A                              ___fladd@bexp 004B  
       __size_of_EEPROM_24C1025_Read_Byte 0016                 ?_EEPROM_24C1025_Read_Byte 0031  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                 __size_of_Rele1Desligado 0004                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1CB5  
