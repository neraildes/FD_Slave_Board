

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 09 10:51:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:	
  1178  1800                     stringtab:	
  1179  1800                     __stringtab:	
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:	
  1193  180A                     stringdir:	
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:	
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:	
  1202  1810                     _PT100_TRANSLADA:	
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:	
  1208  1814                     _PT100_CONSTANT:	
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:	
  1214  1818                     _RESISTOR_ROOM_TEMP:	
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1222  181C                     _ROOM_TEMP:	
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:	
  1230  1820                     _MAX_ADC:	
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:	
  1238  1824                     log@coeff:	
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:	
  1276  1848                     _BETA:	
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:	
  1284  184C                     _BALANCE_RESISTOR:	
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:	
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:	
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3431               	retlw	49	;'1'
  1351  1856  3437               	retlw	55	;'7'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:	
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           ; #config settings
  1359  0000                     
  1360                           	psect	cinit
  1361  0015                     start_initialization:	
  1362  0015                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK0
  1373  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1374  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1375  001D  01E8               	clrf	__pbssBANK0& (0+127)
  1376  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1377  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1378  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1379  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1380                           
  1381                           ; Clear objects allocated to BANK1
  1382  0022  1383               	bcf	3,7	;select IRP bank0
  1383  0023  30A0               	movlw	low __pbssBANK1
  1384  0024  0084               	movwf	4
  1385  0025  30D8               	movlw	low (__pbssBANK1+56)
  1386  0026  160A  158A  21E6  120A  118A  	fcall	clear_ram0
  1387                           
  1388                           ; Clear objects allocated to BANK3
  1389  002B  1783               	bsf	3,7	;select IRP bank2
  1390  002C  3090               	movlw	low __pbssBANK3
  1391  002D  0084               	movwf	4
  1392  002E  30CA               	movlw	low (__pbssBANK3+58)
  1393  002F  160A  158A  21E6  120A  118A  	fcall	clear_ram0
  1394                           
  1395                           ; Clear objects allocated to BANK2
  1396  0034  3010               	movlw	low __pbssBANK2
  1397  0035  0084               	movwf	4
  1398  0036  3044               	movlw	low (__pbssBANK2+52)
  1399  0037  160A  158A  21E6   	fcall	clear_ram0
  1400  003A                     end_of_initialization:	
  1401                           ;End of C runtime variable initialization code
  1402                           
  1403  003A                     __end_of__initialization:	
  1404  003A  0183               	clrf	3
  1405  003B  160A  118A  2AC9   	ljmp	_main	;jump to C main() function
  1406                           
  1407                           	psect	bssCOMMON
  1408  0078                     __pbssCOMMON:	
  1409  0078                     _Delay_Led_Tmr0:	
  1410  0078                     	ds	2
  1411  007A                     _minuto:	
  1412  007A                     	ds	1
  1413  007B                     _statuspower_memo:	
  1414  007B                     	ds	1
  1415  007C                     _hora:	
  1416  007C                     	ds	1
  1417  007D                     _segundo:	
  1418  007D                     	ds	1
  1419                           
  1420                           	psect	bssBANK0
  1421  0068                     __pbssBANK0:	
  1422  0068                     _destino:	
  1423  0068                     	ds	1
  1424  0069                     _Board_Number:	
  1425  0069                     	ds	1
  1426  006A                     _canal:	
  1427  006A                     	ds	1
  1428  006B                     _statuspower:	
  1429  006B                     	ds	1
  1430  006C                     _generic_status:	
  1431  006C                     	ds	1
  1432                           
  1433                           	psect	bssBANK1
  1434  00A0                     __pbssBANK1:	
  1435  00A0                     _Tensao1:	
  1436  00A0                     	ds	4
  1437  00A4                     _Vaccum0:	
  1438  00A4                     	ds	4
  1439  00A8                     _errno:	
  1440  00A8                     	ds	2
  1441  00AA                     _tempodecorrido:	
  1442  00AA                     	ds	2
  1443  00AC                     _count:	
  1444  00AC                     	ds	2
  1445  00AE                     _header:	
  1446  00AE                     	ds	2
  1447  00B0                     _milisegundo:	
  1448  00B0                     	ds	2
  1449  00B2                     _Delay_Led_Usart:	
  1450  00B2                     	ds	2
  1451  00B4                     _Delay_Led_Memory:	
  1452  00B4                     	ds	2
  1453  00B6                     _pointer:	
  1454  00B6                     	ds	1
  1455  00B7                     _buffer:	
  1456  00B7                     	ds	33
  1457                           
  1458                           	psect	bssBANK3
  1459  0190                     __pbssBANK3:	
  1460  0190                     _usart_protocol:	
  1461  0190                     	ds	58
  1462                           
  1463                           	psect	bssBANK2
  1464  0110                     __pbssBANK2:	
  1465  0110                     _usart_buffer:	
  1466  0110                     	ds	52
  1467                           
  1468                           	psect	clrtext
  1469  19E6                     clear_ram0:	
  1470                           ;	Called with FSR containing the base address, and
  1471                           ;	W with the last address+1
  1472                           
  1473  19E6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1474  19E7                     clrloop0:	
  1475  19E7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1476  19E8  0A84               	incf	4,f	;increment pointer
  1477  19E9  0604               	xorwf	4,w	;XOR with final address
  1478  19EA  1903               	btfsc	3,2	;have we reached the end yet?
  1479  19EB  3400               	retlw	0	;all done for this memory range, return
  1480  19EC  0604               	xorwf	4,w	;XOR again to restore value
  1481  19ED  29E7               	goto	clrloop0	;do the next byte
  1482                           
  1483                           	psect	cstackBANK1
  1484  00D8                     __pcstackBANK1:	
  1485  00D8                     Decodify_Command@dados:	
  1486                           
  1487                           ; 2 bytes @ 0x0
  1488  00D8                     	ds	2
  1489  00DA                     Decodify_Command@add:	
  1490                           
  1491                           ; 1 bytes @ 0x2
  1492  00DA                     	ds	1
  1493  00DB                     Decodify_Command@sizedata:	
  1494                           
  1495                           ; 1 bytes @ 0x3
  1496  00DB                     	ds	1
  1497  00DC                     Decodify_Command@tempint:	
  1498                           
  1499                           ; 2 bytes @ 0x4
  1500  00DC                     	ds	2
  1501  00DE                     Decodify_Command@OutPut:	
  1502                           
  1503                           ; 4 bytes @ 0x6
  1504  00DE                     	ds	4
  1505  00E2                     Decodify_Command@tempchar:	
  1506                           
  1507                           ; 1 bytes @ 0xA
  1508  00E2                     	ds	1
  1509  00E3                     Decodify_Command@add_24LCxxxx:	
  1510                           
  1511                           ; 4 bytes @ 0xB
  1512  00E3                     	ds	4
  1513                           
  1514                           	psect	cstackCOMMON
  1515  0070                     __pcstackCOMMON:	
  1516  0070                     ?_I2C_Master_Start:	
  1517  0070                     ?_I2C_Master_Stop:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_I2C_Master_RepeatedStart:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_USART_putc:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_ADC_init:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_MediaPlacaVaccum:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_Decodify_Command:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_USART_to_Protocol:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_Send_To_MB:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_Send_Reply_OK:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_EEPROM_Read_Byte:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_Package_Usart_is_for_me:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_I2C_Master_Wait:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_main:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_isr:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ??_isr:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x0
  1564  0070                     	ds	6
  1565  0076                     isr@tempo:	
  1566                           
  1567                           ; 2 bytes @ 0x6
  1568  0076                     	ds	2
  1569                           
  1570                           	psect	cstackBANK0
  1571  0020                     __pcstackBANK0:	
  1572  0020                     ?___flge:	
  1573  0020                     ?_my_delay_ms_WDT:	
  1574                           ; 1 bit 
  1575                           
  1576  0020                     ??_USART_putc:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0020                     ??_ADC_init:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0020                     ?_USART_init:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0020                     ??_USART_to_Protocol:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0020                     ?_strcpy:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0020                     ?_EEPROM_Write_Byte:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0020                     ??_EEPROM_Read_Byte:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0020                     ?_my_delay_ms:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0020                     ??_Package_Usart_is_for_me:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ?_PROCULUS_Delay:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ??_I2C_Master_Wait:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ?_strlen:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ?_captura:	
  1613                           ; 2 bytes @ 0x0
  1614                           
  1615  0020                     ?__Umul8_16:	
  1616                           ; 2 bytes @ 0x0
  1617                           
  1618  0020                     ?___lwdiv:	
  1619                           ; 2 bytes @ 0x0
  1620                           
  1621  0020                     ?___lldiv:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624  0020                     ?___xxtofl:	
  1625                           ; 4 bytes @ 0x0
  1626                           
  1627  0020                     EEPROM_Write_Byte@dado:	
  1628                           ; 4 bytes @ 0x0
  1629                           
  1630  0020                     Package_Usart_is_for_me@retorno:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     USART_putc@value:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     strcpy@from:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     __Umul8_16@multiplicand:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0020                     PROCULUS_Delay@tempo_ms:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ___lwdiv@divisor:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0020                     strlen@s:	
  1649                           ; 2 bytes @ 0x0
  1650                           
  1651  0020                     my_delay_ms@time:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654  0020                     my_delay_ms_WDT@time:	
  1655                           ; 4 bytes @ 0x0
  1656                           
  1657  0020                     USART_init@baudrate:	
  1658                           ; 4 bytes @ 0x0
  1659                           
  1660  0020                     ___lldiv@divisor:	
  1661                           ; 4 bytes @ 0x0
  1662                           
  1663  0020                     ___flge@ff1:	
  1664                           ; 4 bytes @ 0x0
  1665                           
  1666  0020                     ___xxtofl@val:	
  1667                           ; 4 bytes @ 0x0
  1668                           
  1669                           
  1670                           ; 4 bytes @ 0x0
  1671  0020                     	ds	1
  1672  0021                     ??_strcpy:	
  1673  0021                     ??_Send_To_MB:	
  1674                           ; 1 bytes @ 0x1
  1675                           
  1676  0021                     ?_USART_put_string:	
  1677                           ; 1 bytes @ 0x1
  1678                           
  1679  0021                     ??_EEPROM_Write_Byte:	
  1680                           ; 1 bytes @ 0x1
  1681                           
  1682  0021                     Send_To_MB@size:	
  1683                           ; 1 bytes @ 0x1
  1684                           
  1685  0021                     USART_put_string@vetor:	
  1686                           ; 1 bytes @ 0x1
  1687                           
  1688                           
  1689                           ; 2 bytes @ 0x1
  1690  0021                     	ds	1
  1691  0022                     ??_strlen:	
  1692  0022                     ??_captura:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0022                     ??_PROCULUS_Delay:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0022                     ??__Umul8_16:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0022                     I2C_Master_Wait@tempo:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0022                     EEPROM_Read_Byte@addr:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707  0022                     strcpy@to:	
  1708                           ; 1 bytes @ 0x2
  1709                           
  1710  0022                     USART_to_Protocol@i:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0022                     ___lwdiv@dividend:	
  1714                           ; 2 bytes @ 0x2
  1715                           
  1716  0022                     strlen@cp:	
  1717                           ; 2 bytes @ 0x2
  1718                           
  1719                           
  1720                           ; 2 bytes @ 0x2
  1721  0022                     	ds	1
  1722  0023                     ??_I2C_Master_Start:	
  1723  0023                     ?_I2C_Master_Write:	
  1724                           ; 1 bytes @ 0x3
  1725                           
  1726  0023                     ??_I2C_Master_Stop:	
  1727                           ; 1 bytes @ 0x3
  1728                           
  1729  0023                     ??_I2C_Master_RepeatedStart:	
  1730                           ; 1 bytes @ 0x3
  1731                           
  1732  0023                     ??_USART_put_string:	
  1733                           ; 1 bytes @ 0x3
  1734                           
  1735  0023                     ?_EEPROM_Read_String:	
  1736                           ; 1 bytes @ 0x3
  1737                           
  1738  0023                     ?_I2C_Master_Read:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  0023                     ?_EEPROM_Read_Integer:	
  1742                           ; 2 bytes @ 0x3
  1743                           
  1744  0023                     EEPROM_Write_Byte@addr:	
  1745                           ; 2 bytes @ 0x3
  1746                           
  1747  0023                     EEPROM_Read_String@dado:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0023                     strcpy@cp:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     I2C_Master_Write@d:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0023                     I2C_Master_Read@a:	
  1757                           ; 2 bytes @ 0x3
  1758                           
  1759  0023                     USART_put_string@ptr:	
  1760                           ; 2 bytes @ 0x3
  1761                           
  1762                           
  1763                           ; 2 bytes @ 0x3
  1764  0023                     	ds	1
  1765  0024                     ??_my_delay_ms_WDT:	
  1766  0024                     ??_USART_init:	
  1767                           ; 1 bytes @ 0x4
  1768                           
  1769  0024                     ??_EEPROM_Read_String:	
  1770                           ; 1 bytes @ 0x4
  1771                           
  1772  0024                     ??_my_delay_ms:	
  1773                           ; 1 bytes @ 0x4
  1774                           
  1775  0024                     ??___lwdiv:	
  1776                           ; 1 bytes @ 0x4
  1777                           
  1778  0024                     ??___xxtofl:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781  0024                     EEPROM_Write_Byte@last_GIE:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784  0024                     USART_to_Protocol@usart_protocol:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0024                     PROCULUS_Delay@i:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0024                     __Umul8_16@product:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793  0024                     ___lldiv@dividend:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796  0024                     ___flge@ff2:	
  1797                           ; 4 bytes @ 0x4
  1798                           
  1799                           
  1800                           ; 4 bytes @ 0x4
  1801  0024                     	ds	1
  1802  0025                     ??_I2C_Master_Write:	
  1803  0025                     ??_I2C_Master_Read:	
  1804                           ; 1 bytes @ 0x5
  1805                           
  1806  0025                     ??_EEPROM_Read_Integer:	
  1807                           ; 1 bytes @ 0x5
  1808                           
  1809  0025                     ?_EEPROM_Write_Integer:	
  1810                           ; 1 bytes @ 0x5
  1811                           
  1812  0025                     ??_Send_Reply_OK:	
  1813                           ; 1 bytes @ 0x5
  1814                           
  1815  0025                     ?_EEPROM_Write_String:	
  1816                           ; 1 bytes @ 0x5
  1817                           
  1818  0025                     EEPROM_Write_String@dado:	
  1819                           ; 1 bytes @ 0x5
  1820                           
  1821  0025                     EEPROM_Read_String@addr:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824  0025                     EEPROM_Write_Integer@dado:	
  1825                           ; 1 bytes @ 0x5
  1826                           
  1827  0025                     ___lwdiv@quotient:	
  1828                           ; 2 bytes @ 0x5
  1829                           
  1830                           
  1831                           ; 2 bytes @ 0x5
  1832  0025                     	ds	1
  1833  0026                     ??_EEPROM_Write_String:	
  1834  0026                     EEPROM_Read_Integer@addr:	
  1835                           ; 1 bytes @ 0x6
  1836                           
  1837  0026                     EEPROM_Read_String@c:	
  1838                           ; 1 bytes @ 0x6
  1839                           
  1840  0026                     USART_init@i:	
  1841                           ; 1 bytes @ 0x6
  1842                           
  1843  0026                     __Umul8_16@word_mpld:	
  1844                           ; 1 bytes @ 0x6
  1845                           
  1846  0026                     my_delay_ms@i:	
  1847                           ; 2 bytes @ 0x6
  1848                           
  1849  0026                     my_delay_ms_WDT@i:	
  1850                           ; 4 bytes @ 0x6
  1851                           
  1852                           
  1853                           ; 4 bytes @ 0x6
  1854  0026                     	ds	1
  1855  0027                     ??_EEPROM_Write_Integer:	
  1856  0027                     EEPROM_Read_Integer@ptr:	
  1857                           ; 1 bytes @ 0x7
  1858                           
  1859  0027                     EEPROM_Write_String@addr:	
  1860                           ; 1 bytes @ 0x7
  1861                           
  1862  0027                     ___lwdiv@counter:	
  1863                           ; 1 bytes @ 0x7
  1864                           
  1865  0027                     I2C_Master_Read@temp:	
  1866                           ; 1 bytes @ 0x7
  1867                           
  1868                           
  1869                           ; 2 bytes @ 0x7
  1870  0027                     	ds	1
  1871  0028                     ??___lldiv:	
  1872  0028                     ??___flge:	
  1873                           ; 1 bytes @ 0x8
  1874                           
  1875  0028                     ___xxtofl@sign:	
  1876                           ; 1 bytes @ 0x8
  1877                           
  1878  0028                     __Umul8_16@multiplier:	
  1879                           ; 1 bytes @ 0x8
  1880                           
  1881  0028                     EEPROM_Read_Integer@result:	
  1882                           ; 1 bytes @ 0x8
  1883                           
  1884                           
  1885                           ; 2 bytes @ 0x8
  1886  0028                     	ds	1
  1887  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:	
  1888  0029                     ?_EEPROM_24C1025_Read_Str:	
  1889                           ; 1 bytes @ 0x9
  1890                           
  1891  0029                     ?___flmul:	
  1892                           ; 1 bytes @ 0x9
  1893                           
  1894  0029                     ___xxtofl@exp:	
  1895                           ; 4 bytes @ 0x9
  1896                           
  1897  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  1898                           ; 1 bytes @ 0x9
  1899                           
  1900  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1901                           ; 4 bytes @ 0x9
  1902                           
  1903  0029                     ___lldiv@quotient:	
  1904                           ; 4 bytes @ 0x9
  1905                           
  1906  0029                     ___flmul@b:	
  1907                           ; 4 bytes @ 0x9
  1908                           
  1909                           
  1910                           ; 4 bytes @ 0x9
  1911  0029                     	ds	1
  1912  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1913  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1914                           ; 1 bytes @ 0xA
  1915                           
  1916  002A                     ?_EEPROM_24C1025_Write_Str:	
  1917                           ; 1 bytes @ 0xA
  1918                           
  1919  002A                     EEPROM_Write_Integer@ptr:	
  1920                           ; 1 bytes @ 0xA
  1921                           
  1922  002A                     EEPROM_Read_Integer@i:	
  1923                           ; 1 bytes @ 0xA
  1924                           
  1925  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1926                           ; 1 bytes @ 0xA
  1927                           
  1928  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1929                           ; 4 bytes @ 0xA
  1930                           
  1931  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1932                           ; 4 bytes @ 0xA
  1933                           
  1934  002A                     ___xxtofl@arg:	
  1935                           ; 4 bytes @ 0xA
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0xA
  1939  002A                     	ds	1
  1940  002B                     EEPROM_Write_Integer@addr:	
  1941                           
  1942                           ; 1 bytes @ 0xB
  1943  002B                     	ds	1
  1944  002C                     EEPROM_Write_Integer@i:	
  1945                           
  1946                           ; 1 bytes @ 0xC
  1947  002C                     	ds	1
  1948  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:	
  1949  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1950                           ; 1 bytes @ 0xD
  1951                           
  1952  002D                     ___lldiv@counter:	
  1953                           ; 1 bytes @ 0xD
  1954                           
  1955  002D                     ___flmul@a:	
  1956                           ; 1 bytes @ 0xD
  1957                           
  1958                           
  1959                           ; 4 bytes @ 0xD
  1960  002D                     	ds	1
  1961  002E                     ??_EEPROM_24C1025_Read_Str:	
  1962  002E                     ?_I2C_Master_Init:	
  1963                           ; 1 bytes @ 0xE
  1964                           
  1965  002E                     ?_ADC_Media_10bits:	
  1966                           ; 1 bytes @ 0xE
  1967                           
  1968  002E                     ?___fldiv:	
  1969                           ; 4 bytes @ 0xE
  1970                           
  1971  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1972                           ; 4 bytes @ 0xE
  1973                           
  1974  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1975                           ; 1 bytes @ 0xE
  1976                           
  1977  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  1978                           ; 1 bytes @ 0xE
  1979                           
  1980  002E                     EEPROM_24C1025_Write_Str@data:	
  1981                           ; 1 bytes @ 0xE
  1982                           
  1983  002E                     I2C_Master_Init@c:	
  1984                           ; 1 bytes @ 0xE
  1985                           
  1986  002E                     ___fldiv@a:	
  1987                           ; 4 bytes @ 0xE
  1988                           
  1989                           
  1990                           ; 4 bytes @ 0xE
  1991  002E                     	ds	1
  1992  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:	
  1993  002F                     ??_EEPROM_24C1025_Write_Str:	
  1994                           ; 1 bytes @ 0xF
  1995                           
  1996  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1997                           ; 1 bytes @ 0xF
  1998                           
  1999  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2000                           ; 1 bytes @ 0xF
  2001                           
  2002                           
  2003                           ; 2 bytes @ 0xF
  2004  002F                     	ds	1
  2005  0030                     ??_EEPROM_24C1025_Read_Buffer:	
  2006  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2007                           ; 1 bytes @ 0x10
  2008                           
  2009                           
  2010                           ; 1 bytes @ 0x10
  2011  0030                     	ds	1
  2012  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2013  0031                     ??___flmul:	
  2014                           ; 1 bytes @ 0x11
  2015                           
  2016  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2017                           ; 1 bytes @ 0x11
  2018                           
  2019  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2020                           ; 1 bytes @ 0x11
  2021                           
  2022                           
  2023                           ; 1 bytes @ 0x11
  2024  0031                     	ds	1
  2025  0032                     ??_ADC_Media_10bits:	
  2026  0032                     ??_I2C_Master_Init:	
  2027                           ; 1 bytes @ 0x12
  2028                           
  2029  0032                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2030                           ; 1 bytes @ 0x12
  2031                           
  2032  0032                     EEPROM_24C1025_Write_Str@range:	
  2033                           ; 1 bytes @ 0x12
  2034                           
  2035  0032                     EEPROM_24C1025_Read_Str@range:	
  2036                           ; 1 bytes @ 0x12
  2037                           
  2038  0032                     ___fldiv@b:	
  2039                           ; 1 bytes @ 0x12
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0x12
  2043  0032                     	ds	1
  2044  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2045  0033                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2046                           ; 1 bytes @ 0x13
  2047                           
  2048  0033                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2049                           ; 1 bytes @ 0x13
  2050                           
  2051  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2052                           ; 1 bytes @ 0x13
  2053                           
  2054  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2055                           ; 1 bytes @ 0x13
  2056                           
  2057  0033                     ADC_Media_10bits@canal:	
  2058                           ; 1 bytes @ 0x13
  2059                           
  2060                           
  2061                           ; 1 bytes @ 0x13
  2062  0033                     	ds	1
  2063  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2064  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2065                           ; 1 bytes @ 0x14
  2066                           
  2067  0034                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2068                           ; 1 bytes @ 0x14
  2069                           
  2070  0034                     ADC_Media_10bits@value:	
  2071                           ; 1 bytes @ 0x14
  2072                           
  2073                           
  2074                           ; 2 bytes @ 0x14
  2075  0034                     	ds	1
  2076  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2077  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2078                           ; 1 bytes @ 0x15
  2079                           
  2080  0035                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2081                           ; 1 bytes @ 0x15
  2082                           
  2083                           
  2084                           ; 1 bytes @ 0x15
  2085  0035                     	ds	1
  2086  0036                     ??___fldiv:	
  2087  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2088                           ; 1 bytes @ 0x16
  2089                           
  2090  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2091                           ; 1 bytes @ 0x16
  2092                           
  2093  0036                     ADC_Media_10bits@i:	
  2094                           ; 1 bytes @ 0x16
  2095                           
  2096  0036                     ___flmul@sign:	
  2097                           ; 1 bytes @ 0x16
  2098                           
  2099                           
  2100                           ; 1 bytes @ 0x16
  2101  0036                     	ds	1
  2102  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2103  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2104                           ; 1 bytes @ 0x17
  2105                           
  2106  0037                     ?_EEPROM_24C1025_Read_Int:	
  2107                           ; 1 bytes @ 0x17
  2108                           
  2109  0037                     ?___fladd:	
  2110                           ; 2 bytes @ 0x17
  2111                           
  2112  0037                     ___flmul@aexp:	
  2113                           ; 4 bytes @ 0x17
  2114                           
  2115  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2116                           ; 1 bytes @ 0x17
  2117                           
  2118  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2119                           ; 4 bytes @ 0x17
  2120                           
  2121  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2122                           ; 4 bytes @ 0x17
  2123                           
  2124  0037                     ___fladd@b:	
  2125                           ; 4 bytes @ 0x17
  2126                           
  2127                           
  2128                           ; 4 bytes @ 0x17
  2129  0037                     	ds	1
  2130  0038                     ___flmul@grs:	
  2131                           
  2132                           ; 4 bytes @ 0x18
  2133  0038                     	ds	3
  2134  003B                     ??_EEPROM_24C1025_Read_Byte:	
  2135  003B                     ??_EEPROM_24C1025_Read_Int:	
  2136                           ; 1 bytes @ 0x1B
  2137                           
  2138  003B                     EEPROM_24C1025_Write_Byte@data:	
  2139                           ; 1 bytes @ 0x1B
  2140                           
  2141  003B                     ___fladd@a:	
  2142                           ; 1 bytes @ 0x1B
  2143                           
  2144  003B                     ___fldiv@rem:	
  2145                           ; 4 bytes @ 0x1B
  2146                           
  2147                           
  2148                           ; 4 bytes @ 0x1B
  2149  003B                     	ds	1
  2150  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2151  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2152                           ; 1 bytes @ 0x1C
  2153                           
  2154  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2155                           ; 1 bytes @ 0x1C
  2156                           
  2157  003C                     ___flmul@bexp:	
  2158                           ; 1 bytes @ 0x1C
  2159                           
  2160                           
  2161                           ; 1 bytes @ 0x1C
  2162  003C                     	ds	1
  2163  003D                     EEPROM_24C1025_Read_Byte@data:	
  2164  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2165                           ; 1 bytes @ 0x1D
  2166                           
  2167  003D                     ___flmul@prod:	
  2168                           ; 1 bytes @ 0x1D
  2169                           
  2170                           
  2171                           ; 4 bytes @ 0x1D
  2172  003D                     	ds	1
  2173  003E                     EEPROM_24C1025_Read_Int@data:	
  2174                           
  2175                           ; 2 bytes @ 0x1E
  2176  003E                     	ds	1
  2177  003F                     ??___fladd:	
  2178  003F                     ___fldiv@sign:	
  2179                           ; 1 bytes @ 0x1F
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0x1F
  2183  003F                     	ds	1
  2184  0040                     ___fldiv@new_exp:	
  2185                           
  2186                           ; 2 bytes @ 0x20
  2187  0040                     	ds	1
  2188  0041                     ___flmul@temp:	
  2189                           
  2190                           ; 2 bytes @ 0x21
  2191  0041                     	ds	1
  2192  0042                     ___fldiv@grs:	
  2193                           
  2194                           ; 4 bytes @ 0x22
  2195  0042                     	ds	1
  2196  0043                     ?___fltol:	
  2197  0043                     ___fltol@f1:	
  2198                           ; 4 bytes @ 0x23
  2199                           
  2200                           
  2201                           ; 4 bytes @ 0x23
  2202  0043                     	ds	3
  2203  0046                     ___fldiv@bexp:	
  2204                           
  2205                           ; 1 bytes @ 0x26
  2206  0046                     	ds	1
  2207  0047                     ??___fltol:	
  2208  0047                     ___fladd@signs:	
  2209                           ; 1 bytes @ 0x27
  2210                           
  2211  0047                     ___fldiv@aexp:	
  2212                           ; 1 bytes @ 0x27
  2213                           
  2214                           
  2215                           ; 1 bytes @ 0x27
  2216  0047                     	ds	1
  2217  0048                     ___fladd@aexp:	
  2218                           
  2219                           ; 1 bytes @ 0x28
  2220  0048                     	ds	1
  2221  0049                     ___fladd@bexp:	
  2222                           
  2223                           ; 1 bytes @ 0x29
  2224  0049                     	ds	1
  2225  004A                     ___fladd@grs:	
  2226                           
  2227                           ; 1 bytes @ 0x2A
  2228  004A                     	ds	1
  2229  004B                     ?___flsub:	
  2230  004B                     ___flsub@a:	
  2231                           ; 4 bytes @ 0x2B
  2232                           
  2233                           
  2234                           ; 4 bytes @ 0x2B
  2235  004B                     	ds	1
  2236  004C                     ___fltol@sign1:	
  2237                           
  2238                           ; 1 bytes @ 0x2C
  2239  004C                     	ds	1
  2240  004D                     ___fltol@exp1:	
  2241                           
  2242                           ; 1 bytes @ 0x2D
  2243  004D                     	ds	1
  2244  004E                     ?_USART_put_int:	
  2245  004E                     ?_EEPROM_24C1025_Write_Int:	
  2246                           ; 1 bytes @ 0x2E
  2247                           
  2248  004E                     USART_put_int@value:	
  2249                           ; 1 bytes @ 0x2E
  2250                           
  2251  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2252                           ; 2 bytes @ 0x2E
  2253                           
  2254                           
  2255                           ; 4 bytes @ 0x2E
  2256  004E                     	ds	1
  2257  004F                     ___flsub@b:	
  2258                           
  2259                           ; 4 bytes @ 0x2F
  2260  004F                     	ds	1
  2261  0050                     ??_USART_put_int:	
  2262                           
  2263                           ; 1 bytes @ 0x30
  2264  0050                     	ds	1
  2265  0051                     USART_put_int@dado:	
  2266                           
  2267                           ; 1 bytes @ 0x31
  2268  0051                     	ds	1
  2269  0052                     ?_PROCULUS_Control_Register_Write:	
  2270  0052                     ?_PROCULUS_VP_Write:	
  2271                           ; 1 bytes @ 0x32
  2272                           
  2273  0052                     PROCULUS_Control_Register_Write@size:	
  2274                           ; 1 bytes @ 0x32
  2275                           
  2276  0052                     EEPROM_24C1025_Write_Int@data:	
  2277                           ; 1 bytes @ 0x32
  2278                           
  2279  0052                     PROCULUS_VP_Write@vp:	
  2280                           ; 2 bytes @ 0x32
  2281                           
  2282                           
  2283                           ; 2 bytes @ 0x32
  2284  0052                     	ds	1
  2285  0053                     ??_MediaPlacaVaccum:	
  2286  0053                     ??_PROCULUS_Control_Register_Write:	
  2287                           ; 1 bytes @ 0x33
  2288                           
  2289  0053                     ??___flsub:	
  2290                           ; 1 bytes @ 0x33
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0x33
  2294  0053                     	ds	1
  2295  0054                     ??_EEPROM_24C1025_Write_Int:	
  2296  0054                     MediaPlacaVaccum@canal:	
  2297                           ; 1 bytes @ 0x34
  2298                           
  2299  0054                     PROCULUS_Control_Register_Write@vetor:	
  2300                           ; 1 bytes @ 0x34
  2301                           
  2302  0054                     PROCULUS_VP_Write@vetor:	
  2303                           ; 1 bytes @ 0x34
  2304                           
  2305                           
  2306                           ; 2 bytes @ 0x34
  2307  0054                     	ds	1
  2308  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2309  0055                     PROCULUS_Control_Register_Write@i:	
  2310                           ; 1 bytes @ 0x35
  2311                           
  2312  0055                     MediaPlacaVaccum@Temp:	
  2313                           ; 1 bytes @ 0x35
  2314                           
  2315                           
  2316                           ; 4 bytes @ 0x35
  2317  0055                     	ds	1
  2318  0056                     ?_PROCULUS_Show_Screen:	
  2319  0056                     ?_PROCULUS_Buzzer:	
  2320                           ; 1 bytes @ 0x36
  2321                           
  2322  0056                     PROCULUS_VP_Write@size:	
  2323                           ; 1 bytes @ 0x36
  2324                           
  2325  0056                     EEPROM_24C1025_Write_Int@local:	
  2326                           ; 1 bytes @ 0x36
  2327                           
  2328  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2329                           ; 2 bytes @ 0x36
  2330                           
  2331  0056                     PROCULUS_Show_Screen@screen:	
  2332                           ; 2 bytes @ 0x36
  2333                           
  2334                           
  2335                           ; 2 bytes @ 0x36
  2336  0056                     	ds	1
  2337  0057                     ??_PROCULUS_VP_Write:	
  2338                           
  2339                           ; 1 bytes @ 0x37
  2340  0057                     	ds	1
  2341  0058                     ?_Save_Log:	
  2342  0058                     ??_PROCULUS_Show_Screen:	
  2343                           ; 1 bytes @ 0x38
  2344                           
  2345  0058                     ??_PROCULUS_Buzzer:	
  2346                           ; 1 bytes @ 0x38
  2347                           
  2348  0058                     ?_EEPROM_24C1025_Fill_All:	
  2349                           ; 1 bytes @ 0x38
  2350                           
  2351  0058                     EEPROM_24C1025_Fill_All@value:	
  2352                           ; 1 bytes @ 0x38
  2353                           
  2354  0058                     Save_Log@add_datalog:	
  2355                           ; 2 bytes @ 0x38
  2356                           
  2357                           
  2358                           ; 4 bytes @ 0x38
  2359  0058                     	ds	1
  2360  0059                     PROCULUS_VP_Write@i:	
  2361  0059                     MediaPlacaVaccum@i:	
  2362                           ; 1 bytes @ 0x39
  2363                           
  2364  0059                     PROCULUS_Buzzer@vetor:	
  2365                           ; 2 bytes @ 0x39
  2366                           
  2367  0059                     PROCULUS_Show_Screen@vetor:	
  2368                           ; 2 bytes @ 0x39
  2369                           
  2370                           
  2371                           ; 3 bytes @ 0x39
  2372  0059                     	ds	1
  2373  005A                     ?_PROCULUS_VP_Write_String:	
  2374  005A                     ??_EEPROM_24C1025_Fill_All:	
  2375                           ; 1 bytes @ 0x3A
  2376                           
  2377  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2378                           ; 1 bytes @ 0x3A
  2379                           
  2380  005A                     PROCULUS_VP_Write_String@vp:	
  2381                           ; 1 bytes @ 0x3A
  2382                           
  2383                           
  2384                           ; 2 bytes @ 0x3A
  2385  005A                     	ds	1
  2386  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2387                           
  2388                           ; 4 bytes @ 0x3B
  2389  005B                     	ds	1
  2390  005C                     ??_Save_Log:	
  2391  005C                     PROCULUS_VP_Write_String@text:	
  2392                           ; 1 bytes @ 0x3C
  2393                           
  2394                           
  2395                           ; 1 bytes @ 0x3C
  2396  005C                     	ds	1
  2397  005D                     ??_PROCULUS_VP_Write_String:	
  2398                           
  2399                           ; 1 bytes @ 0x3D
  2400  005D                     	ds	2
  2401  005F                     ??_Decodify_Command:	
  2402                           
  2403                           ; 1 bytes @ 0x3F
  2404  005F                     	ds	4
  2405  0063                     ??_main:	
  2406                           
  2407                           ; 1 bytes @ 0x43
  2408  0063                     	ds	3
  2409  0066                     main@reset:	
  2410                           
  2411                           ; 2 bytes @ 0x46
  2412  0066                     	ds	2
  2413                           
  2414                           	psect	maintext
  2415  12C9                     __pmaintext:	
  2416 ;;
  2417 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2418 ;;
  2419 ;; *************** function _main *****************
  2420 ;; Defined at:
  2421 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  reset           2   70[BANK0 ] unsigned int 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : B00/0
  2432 ;;		On exit  : 300/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       2       0       0       0
  2437 ;;      Temps:          0       3       0       0       0
  2438 ;;      Totals:         0       5       0       0       0
  2439 ;;Total ram usage:        5 bytes
  2440 ;; Hardware stack levels required when called:    7
  2441 ;; This function calls:
  2442 ;;		_ADC_init
  2443 ;;		_Decodify_Command
  2444 ;;		_EEPROM_Read_Integer
  2445 ;;		_EEPROM_Write_Integer
  2446 ;;		_I2C_Master_Init
  2447 ;;		_MediaPlacaVaccum
  2448 ;;		_USART_init
  2449 ;;		_my_delay_ms_WDT
  2450 ;; This function is called by:
  2451 ;;		Startup code after reset
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _main
  2457  12C9                     _main:	
  2458                           
  2459                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2463  12C9  3002               	movlw	2
  2464  12CA  1283               	bcf	3,5	;RP0=0, select bank0
  2465  12CB  1303               	bcf	3,6	;RP1=0, select bank0
  2466  12CC  00E5               	movwf	??_main+2
  2467  12CD  3004               	movlw	4
  2468  12CE  00E4               	movwf	??_main+1
  2469  12CF  30B9               	movlw	185
  2470  12D0  00E3               	movwf	??_main
  2471  12D1                     u5507:	
  2472  12D1  0BE3               	decfsz	??_main,f
  2473  12D2  2AD1               	goto	u5507
  2474  12D3  0BE4               	decfsz	??_main+1,f
  2475  12D4  2AD1               	goto	u5507
  2476  12D5  0BE5               	decfsz	??_main+2,f
  2477  12D6  2AD1               	goto	u5507
  2478  12D7  2AD8               	nop2
  2479                           
  2480                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2481  12D8  1683               	bsf	3,5	;RP0=1, select bank1
  2482  12D9  1303               	bcf	3,6	;RP1=0, select bank1
  2483  12DA  160F               	bsf	15,4	;volatile
  2484                           
  2485                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2486  12DB  168F               	bsf	15,5	;volatile
  2487                           
  2488                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2489  12DC  170F               	bsf	15,6	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2492  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  2493  12DE  0185               	clrf	5	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2496  12DF  0186               	clrf	6	;volatile
  2497                           
  2498                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2499  12E0  0187               	clrf	7	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2502  12E1  0189               	clrf	9	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2505  12E2  30EF               	movlw	239
  2506  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  2507  12E4  0085               	movwf	5	;volatile
  2508                           
  2509                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2510  12E5  300F               	movlw	15
  2511  12E6  0086               	movwf	6	;volatile
  2512                           
  2513                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2514  12E7  30F0               	movlw	240
  2515  12E8  0087               	movwf	7	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2518  12E9  30FF               	movlw	255
  2519  12EA  0089               	movwf	9	;volatile
  2520                           
  2521                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2522  12EB  3011               	movlw	17
  2523  12EC  1703               	bsf	3,6	;RP1=1, select bank3
  2524  12ED  0088               	movwf	8	;volatile
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2527  12EE  0189               	clrf	9	;volatile
  2528                           
  2529                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2530  12EF  1303               	bcf	3,6	;RP1=0, select bank1
  2531  12F0  1381               	bcf	1,7	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2534  12F1  300F               	movlw	15
  2535  12F2  0095               	movwf	21	;volatile
  2536                           
  2537                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2538  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  2539  12F4  1786               	bsf	6,7	;volatile
  2540                           
  2541                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2542  12F5  1706               	bsf	6,6	;volatile
  2543                           
  2544                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2545  12F6  1686               	bsf	6,5	;volatile
  2546                           
  2547                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2548  12F7  3000               	movlw	0
  2549  12F8  00A3               	movwf	my_delay_ms_WDT@time+3
  2550  12F9  3000               	movlw	0
  2551  12FA  00A2               	movwf	my_delay_ms_WDT@time+2
  2552  12FB  3003               	movlw	3
  2553  12FC  00A1               	movwf	my_delay_ms_WDT@time+1
  2554  12FD  30E8               	movlw	232
  2555  12FE  00A0               	movwf	my_delay_ms_WDT@time
  2556  12FF  160A  158A  2588  160A  118A  	fcall	_my_delay_ms_WDT
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2559  1304  1683               	bsf	3,5	;RP0=1, select bank1
  2560  1305  1281               	bcf	1,5	;volatile
  2561                           
  2562                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2563  1306  1581               	bsf	1,3	;volatile
  2564                           
  2565                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2566  1307  1401               	bsf	1,0	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2569  1308  1481               	bsf	1,1	;volatile
  2570                           
  2571                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2572  1309  1501               	bsf	1,2	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2575  130A  128B               	bcf	11,5	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2578  130B  120B               	bcf	11,4	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2581  130C  178B               	bsf	11,7	;volatile
  2582                           
  2583                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2584  130D  170B               	bsf	11,6	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2587  130E  1283               	bcf	3,5	;RP0=0, select bank0
  2588  130F  1610               	bsf	16,4	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2591  1310  1690               	bsf	16,5	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2594  1311  1090               	bcf	16,1	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2597  1312  1683               	bsf	3,5	;RP0=1, select bank1
  2598  1313  140C               	bsf	12,0	;volatile
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2601  1314  3001               	movlw	1
  2602  1315  1283               	bcf	3,5	;RP0=0, select bank0
  2603  1316  0090               	movwf	16	;volatile
  2604  1317  0064               	clrwdt	;# 
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2607  1318  160A  158A  220A  160A  118A  	fcall	_ADC_init
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2610  131D  3000               	movlw	0
  2611  131E  00B1               	movwf	I2C_Master_Init@c+3
  2612  131F  3001               	movlw	1
  2613  1320  00B0               	movwf	I2C_Master_Init@c+2
  2614  1321  3086               	movlw	134
  2615  1322  00AF               	movwf	I2C_Master_Init@c+1
  2616  1323  30A0               	movlw	160
  2617  1324  00AE               	movwf	I2C_Master_Init@c
  2618  1325  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Init
  2619                           
  2620                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2621  132A  3000               	movlw	0
  2622  132B  1283               	bcf	3,5	;RP0=0, select bank0
  2623  132C  00A3               	movwf	USART_init@baudrate+3
  2624  132D  3001               	movlw	1
  2625  132E  00A2               	movwf	USART_init@baudrate+2
  2626  132F  30C2               	movlw	194
  2627  1330  00A1               	movwf	USART_init@baudrate+1
  2628  1331  3000               	movlw	0
  2629  1332  00A0               	movwf	USART_init@baudrate
  2630  1333  160A  158A  2670  160A  118A  	fcall	_USART_init
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2633  1338  3010               	movlw	16
  2634  1339  160A  158A  2462  160A  118A  	fcall	_EEPROM_Read_Integer
  2635  133E  0824               	movf	?_EEPROM_Read_Integer+1,w
  2636  133F  00E7               	movwf	main@reset+1
  2637  1340  0823               	movf	?_EEPROM_Read_Integer,w
  2638  1341  00E6               	movwf	main@reset
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2641  1342  0A66               	incf	main@reset,w
  2642  1343  1D03               	skipz
  2643  1344  2B51               	goto	l5927
  2644  1345  0A67               	incf	main@reset+1,w
  2645  1346  1D03               	btfss	3,2
  2646  1347  2B51               	goto	l5927
  2647  1348  3000               	movlw	0
  2648  1349  00A5               	movwf	EEPROM_Write_Integer@dado
  2649  134A  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2650  134B  3010               	movlw	16
  2651  134C  160A  158A  24B7  160A  118A  	fcall	_EEPROM_Write_Integer
  2652  1351                     l5927:	
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2655  1351  3001               	movlw	1
  2656  1352  1283               	bcf	3,5	;RP0=0, select bank0
  2657  1353  1303               	bcf	3,6	;RP1=0, select bank0
  2658  1354  07E6               	addwf	main@reset,f
  2659  1355  1803               	skipnc
  2660  1356  0AE7               	incf	main@reset+1,f
  2661  1357  3000               	movlw	0
  2662  1358  07E7               	addwf	main@reset+1,f
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2665  1359  0867               	movf	main@reset+1,w
  2666  135A  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2667  135B  0866               	movf	main@reset,w
  2668  135C  00A5               	movwf	EEPROM_Write_Integer@dado
  2669  135D  3010               	movlw	16
  2670  135E  160A  158A  24B7  160A  118A  	fcall	_EEPROM_Write_Integer
  2671                           
  2672                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2673  1363  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2674  1364  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2675                           
  2676                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2677  1365  1683               	bsf	3,5	;RP0=1, select bank1
  2678  1366  1303               	bcf	3,6	;RP1=0, select bank1
  2679  1367  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2680  1368  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2681                           
  2682                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2683  1369  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2684  136A  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2687  136B  01FD               	clrf	_segundo	;volatile
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2690  136C  01FC               	clrf	_hora	;volatile
  2691                           
  2692                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2693  136D  1283               	bcf	3,5	;RP0=0, select bank0
  2694  136E  1007               	bcf	7,0	;volatile
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2697  136F  1087               	bcf	7,1	;volatile
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2700  1370  1105               	bcf	5,2	;volatile
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2703  1371  1185               	bcf	5,3	;volatile
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2706  1372  0906               	comf	6,w	;volatile
  2707  1373  390F               	andlw	15
  2708  1374  00E3               	movwf	??_main
  2709  1375  0863               	movf	??_main,w
  2710  1376  00E9               	movwf	_Board_Number
  2711                           
  2712                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2713  1377  01EA               	clrf	_canal
  2714  1378  0AEA               	incf	_canal,f
  2715                           
  2716                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2717  1379  116B               	bcf	_statuspower,2
  2718  137A                     l5953:	
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2721  137A  1283               	bcf	3,5	;RP0=0, select bank0
  2722  137B  17EC               	bsf	_generic_status,7
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2725  137C  3001               	movlw	1
  2726  137D  00E3               	movwf	??_main
  2727  137E  0863               	movf	??_main,w
  2728  137F  07EA               	addwf	_canal,f
  2729  1380  3002               	movlw	2
  2730  1381  066A               	xorwf	_canal,w
  2731  1382  1903               	btfsc	3,2
  2732  1383  01EA               	clrf	_canal
  2733                           
  2734                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2735  1384  086A               	movf	_canal,w
  2736  1385  120A  158A  259F  160A  118A  	fcall	_MediaPlacaVaccum
  2737                           
  2738                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2739  138A  1283               	bcf	3,5	;RP0=0, select bank0
  2740  138B  1C6C               	btfss	_generic_status,0
  2741  138C  2B7A               	goto	l5953
  2742                           
  2743                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2744  138D  1703               	bsf	3,6	;RP1=1, select bank2
  2745  138E  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2746  138F  1683               	bsf	3,5	;RP0=1, select bank1
  2747  1390  1303               	bcf	3,6	;RP1=0, select bank1
  2748  1391  00AF               	movwf	(_header+1)^(0+128)
  2749  1392  1283               	bcf	3,5	;RP0=0, select bank2
  2750  1393  1703               	bsf	3,6	;RP1=1, select bank2
  2751  1394  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2752  1395  1683               	bsf	3,5	;RP0=1, select bank1
  2753  1396  1303               	bcf	3,6	;RP1=0, select bank1
  2754  1397  00AE               	movwf	_header^(0+128)
  2755                           
  2756                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2757  1398  30BB               	movlw	187
  2758  1399  062E               	xorwf	_header^(0+128),w
  2759  139A  30AA               	movlw	170
  2760  139B  1903               	skipnz
  2761  139C  062F               	xorwf	(_header+1)^(0+128),w
  2762  139D  1D03               	btfss	3,2
  2763  139E  2B7A               	goto	l5953
  2764                           
  2765                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2766  139F  1283               	bcf	3,5	;RP0=0, select bank2
  2767  13A0  1703               	bsf	3,6	;RP1=1, select bank2
  2768  13A1  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2769  13A2  1303               	bcf	3,6	;RP1=0, select bank0
  2770  13A3  00E3               	movwf	??_main
  2771  13A4  0863               	movf	??_main,w
  2772  13A5  00E8               	movwf	_destino
  2773                           
  2774                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2775  13A6  0868               	movf	_destino,w
  2776  13A7  0669               	xorwf	_Board_Number,w
  2777  13A8  1D03               	btfss	3,2
  2778  13A9  0A68               	incf	_destino,w
  2779  13AA  1D03               	btfss	3,2
  2780  13AB  2B7A               	goto	l5953
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2783  13AC  3014               	movlw	20
  2784  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  2785  13AE  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2786  13AF  3000               	movlw	0
  2787  13B0  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2788                           
  2789                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2790  13B1  120A  118A  203E  160A  118A  	fcall	_Decodify_Command
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2793  13B6  1283               	bcf	3,5	;RP0=0, select bank0
  2794  13B7  1303               	bcf	3,6	;RP1=0, select bank0
  2795  13B8  106C               	bcf	_generic_status,0
  2796                           
  2797                           ;SlaveLiofilizadorVer1.c: 296:             }
  2798  13B9  2B7A               	goto	l5953
  2799  13BA                     __end_of_main:	
  2800                           
  2801                           	psect	text1
  2802  1E70                     __ptext1:	
  2803 ;; *************** function _USART_init *****************
  2804 ;; Defined at:
  2805 ;;		line 18 in file "usart.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  i               1    6[BANK0 ] unsigned char 
  2810 ;;  erro            1    0        unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 300/0
  2817 ;;		On exit  : 300/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       4       0       0       0
  2821 ;;      Locals:         0       2       0       0       0
  2822 ;;      Temps:          0       1       0       0       0
  2823 ;;      Totals:         0       7       0       0       0
  2824 ;;Total ram usage:        7 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _USART_init
  2836  1E70                     _USART_init:	
  2837                           
  2838                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2842  1E70  304B               	movlw	75
  2843  1E71  0621               	xorwf	USART_init@baudrate+1,w
  2844  1E72  0420               	iorwf	USART_init@baudrate,w
  2845  1E73  0422               	iorwf	USART_init@baudrate+2,w
  2846  1E74  0423               	iorwf	USART_init@baudrate+3,w
  2847  1E75  1D03               	btfss	3,2
  2848  1E76  2E81               	goto	l5017
  2849                           
  2850                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2851  1E77  1798               	bsf	24,7	;volatile
  2852                           
  2853                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2854  1E78  1618               	bsf	24,4	;volatile
  2855                           
  2856                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2857  1E79  1683               	bsf	3,5	;RP0=1, select bank1
  2858  1E7A  1518               	bsf	24,2	;volatile
  2859                           
  2860                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2861  1E7B  1218               	bcf	24,4	;volatile
  2862                           
  2863                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2864  1E7C  1318               	bcf	24,6	;volatile
  2865                           
  2866                           ;usart.c: 32:           SPBRG =12;
  2867  1E7D  300C               	movlw	12
  2868  1E7E  0099               	movwf	25	;volatile
  2869                           
  2870                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2871  1E7F  170B               	bsf	11,6	;volatile
  2872  1E80  2E9A               	goto	L1
  2873  1E81                     l5017:	
  2874                           ;usart.c: 35:           }
  2875                           
  2876                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2877                           
  2878  1E81  30C2               	movlw	194
  2879  1E82  0621               	xorwf	USART_init@baudrate+1,w
  2880  1E83  1D03               	skipz
  2881  1E84  2E9B               	goto	l5037
  2882  1E85  0322               	decf	USART_init@baudrate+2,w
  2883  1E86  0420               	iorwf	USART_init@baudrate,w
  2884  1E87  0423               	iorwf	USART_init@baudrate+3,w
  2885  1E88  1D03               	btfss	3,2
  2886  1E89  2E9B               	goto	l5037
  2887                           
  2888                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2889  1E8A  3010               	movlw	16
  2890  1E8B  1683               	bsf	3,5	;RP0=1, select bank1
  2891  1E8C  0099               	movwf	25	;volatile
  2892                           
  2893                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2894  1E8D  1703               	bsf	3,6	;RP1=1, select bank3
  2895  1E8E  1587               	bsf	7,3	;volatile
  2896                           
  2897                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2898  1E8F  1303               	bcf	3,6	;RP1=0, select bank1
  2899  1E90  1518               	bsf	24,2	;volatile
  2900                           
  2901                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2902  1E91  1283               	bcf	3,5	;RP0=0, select bank0
  2903  1E92  1798               	bsf	24,7	;volatile
  2904                           
  2905                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2906  1E93  1683               	bsf	3,5	;RP0=1, select bank1
  2907  1E94  1218               	bcf	24,4	;volatile
  2908                           
  2909                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2910  1E95  1318               	bcf	24,6	;volatile
  2911                           
  2912                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2913  1E96  1283               	bcf	3,5	;RP0=0, select bank0
  2914  1E97  1618               	bsf	24,4	;volatile
  2915                           
  2916                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2917  1E98  170B               	bsf	11,6	;volatile
  2918                           
  2919                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2920  1E99  1683               	bsf	3,5	;RP0=1, select bank1
  2921  1E9A                     L1:	
  2922  1E9A  168C               	bsf	12,5	;volatile
  2923  1E9B                     l5037:	
  2924                           
  2925                           ;usart.c: 68:      TRISC6= 1;
  2926  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  2927  1E9C  1707               	bsf	7,6	;volatile
  2928                           
  2929                           ;usart.c: 69:      TRISC7= 1;
  2930  1E9D  1787               	bsf	7,7	;volatile
  2931                           
  2932                           ;usart.c: 71:      CREN=0;
  2933  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  2934  1E9F  1218               	bcf	24,4	;volatile
  2935                           
  2936                           ;usart.c: 72:      CREN=1;
  2937  1EA0  1618               	bsf	24,4	;volatile
  2938                           
  2939                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2940  1EA1  01A6               	clrf	USART_init@i
  2941  1EA2                     l5051:	
  2942  1EA2  081A               	movf	26,w	;volatile
  2943  1EA3  3001               	movlw	1
  2944  1EA4  00A4               	movwf	??_USART_init
  2945  1EA5  0824               	movf	??_USART_init,w
  2946  1EA6  07A6               	addwf	USART_init@i,f
  2947  1EA7  300F               	movlw	15
  2948  1EA8  0226               	subwf	USART_init@i,w
  2949  1EA9  1803               	btfsc	3,0
  2950  1EAA  0008               	return
  2951  1EAB  2EA2               	goto	l5051
  2952  1EAC                     __end_of_USART_init:	
  2953                           
  2954                           	psect	text2
  2955  0D9F                     __ptext2:	
  2956 ;; *************** function _MediaPlacaVaccum *****************
  2957 ;; Defined at:
  2958 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  canal           1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  canal           1   52[BANK0 ] unsigned char 
  2963 ;;  Temp            4   53[BANK0 ] float 
  2964 ;;  Valor           4    0        float 
  2965 ;;  i               2   57[BANK0 ] unsigned int 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 300/0
  2972 ;;		On exit  : 200/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         0       7       0       0       0
  2977 ;;      Temps:          0       1       0       0       0
  2978 ;;      Totals:         0       8       0       0       0
  2979 ;;Total ram usage:        8 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    3
  2982 ;; This function calls:
  2983 ;;		_ADC_Media_10bits
  2984 ;;		_Package_Usart_is_for_me
  2985 ;;		___fladd
  2986 ;;		___fldiv
  2987 ;;		___flge
  2988 ;;		___flmul
  2989 ;;		___flsub
  2990 ;;		___xxtofl
  2991 ;;		_my_delay_ms
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _MediaPlacaVaccum
  2999  0D9F                     _MediaPlacaVaccum:	
  3000                           
  3001                           ;incstack = 0
  3002                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3003                           ;MediaPlacaVaccum@canal stored from wreg
  3004  0D9F  00D4               	movwf	MediaPlacaVaccum@canal
  3005                           
  3006                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  3007  0DA0  0854               	movf	MediaPlacaVaccum@canal,w
  3008  0DA1  1D03               	btfss	3,2
  3009  0DA2  2F19               	goto	l439
  3010                           
  3011                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3012  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3013  0DA4  161F               	bsf	31,4	;volatile
  3014                           
  3015                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3016  0DA5  169F               	bsf	31,5	;volatile
  3017                           
  3018                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3019  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0DA7  0854               	movf	MediaPlacaVaccum@canal,w
  3021  0DA8  00D3               	movwf	??_MediaPlacaVaccum
  3022  0DA9  0DD3               	rlf	??_MediaPlacaVaccum,f
  3023  0DAA  0DD3               	rlf	??_MediaPlacaVaccum,f
  3024  0DAB  081F               	movf	31,w	;volatile
  3025  0DAC  0653               	xorwf	??_MediaPlacaVaccum,w
  3026  0DAD  39C3               	andlw	-61
  3027  0DAE  0653               	xorwf	??_MediaPlacaVaccum,w
  3028  0DAF  009F               	movwf	31	;volatile
  3029                           
  3030                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3031  0DB0  3000               	movlw	0
  3032  0DB1  00A3               	movwf	my_delay_ms@time+3
  3033  0DB2  3000               	movlw	0
  3034  0DB3  00A2               	movwf	my_delay_ms@time+2
  3035  0DB4  3000               	movlw	0
  3036  0DB5  00A1               	movwf	my_delay_ms@time+1
  3037  0DB6  3001               	movlw	1
  3038  0DB7  00A0               	movwf	my_delay_ms@time
  3039  0DB8  160A  158A  2551  120A  158A  	fcall	_my_delay_ms
  3040                           
  3041                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3042  0DBD  3000               	movlw	0
  3043  0DBE  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3044  0DBF  3000               	movlw	0
  3045  0DC0  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3046  0DC1  3000               	movlw	0
  3047  0DC2  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3048  0DC3  3000               	movlw	0
  3049  0DC4  00D5               	movwf	MediaPlacaVaccum@Temp
  3050                           
  3051                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3052  0DC5  3001               	movlw	1
  3053  0DC6  00D9               	movwf	MediaPlacaVaccum@i
  3054  0DC7  3000               	movlw	0
  3055  0DC8  00DA               	movwf	MediaPlacaVaccum@i+1
  3056  0DC9                     l5073:	
  3057                           
  3058                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3059  0DC9  0854               	movf	MediaPlacaVaccum@canal,w
  3060  0DCA  160A  158A  2740  120A  158A  	fcall	_ADC_Media_10bits
  3061  0DCF  0831               	movf	?_ADC_Media_10bits+3,w
  3062  0DD0  00BA               	movwf	___fladd@b+3
  3063  0DD1  0830               	movf	?_ADC_Media_10bits+2,w
  3064  0DD2  00B9               	movwf	___fladd@b+2
  3065  0DD3  082F               	movf	?_ADC_Media_10bits+1,w
  3066  0DD4  00B8               	movwf	___fladd@b+1
  3067  0DD5  082E               	movf	?_ADC_Media_10bits,w
  3068  0DD6  00B7               	movwf	___fladd@b
  3069  0DD7  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3070  0DD8  00BE               	movwf	___fladd@a+3
  3071  0DD9  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3072  0DDA  00BD               	movwf	___fladd@a+2
  3073  0DDB  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3074  0DDC  00BC               	movwf	___fladd@a+1
  3075  0DDD  0855               	movf	MediaPlacaVaccum@Temp,w
  3076  0DDE  00BB               	movwf	___fladd@a
  3077  0DDF  120A  158A  2372  120A  158A  	fcall	___fladd
  3078  0DE4  083A               	movf	?___fladd+3,w
  3079  0DE5  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3080  0DE6  0839               	movf	?___fladd+2,w
  3081  0DE7  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3082  0DE8  0838               	movf	?___fladd+1,w
  3083  0DE9  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3084  0DEA  0837               	movf	?___fladd,w
  3085  0DEB  00D5               	movwf	MediaPlacaVaccum@Temp
  3086                           
  3087                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3088  0DEC  160A  158A  224C  120A  158A  	fcall	_Package_Usart_is_for_me
  3089  0DF1  3A01               	xorlw	1
  3090  0DF2  1903               	btfsc	3,2
  3091  0DF3  2E01               	goto	l5081
  3092                           
  3093                           ;SlaveLiofilizadorVer1.c: 758:            }
  3094  0DF4  3001               	movlw	1
  3095  0DF5  07D9               	addwf	MediaPlacaVaccum@i,f
  3096  0DF6  1803               	skipnc
  3097  0DF7  0ADA               	incf	MediaPlacaVaccum@i+1,f
  3098  0DF8  3000               	movlw	0
  3099  0DF9  07DA               	addwf	MediaPlacaVaccum@i+1,f
  3100  0DFA  3000               	movlw	0
  3101  0DFB  025A               	subwf	MediaPlacaVaccum@i+1,w
  3102  0DFC  300F               	movlw	15
  3103  0DFD  1903               	skipnz
  3104  0DFE  0259               	subwf	MediaPlacaVaccum@i,w
  3105  0DFF  1C03               	skipc
  3106  0E00  2DC9               	goto	l5073
  3107  0E01                     l5081:	
  3108                           
  3109                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3110  0E01  3000               	movlw	0
  3111  0E02  025A               	subwf	MediaPlacaVaccum@i+1,w
  3112  0E03  300A               	movlw	10
  3113  0E04  1903               	skipnz
  3114  0E05  0259               	subwf	MediaPlacaVaccum@i,w
  3115  0E06  1C03               	btfss	3,0
  3116  0E07  0008               	return
  3117                           
  3118                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3119  0E08  300F               	movlw	15
  3120  0E09  0659               	xorwf	MediaPlacaVaccum@i,w
  3121  0E0A  045A               	iorwf	MediaPlacaVaccum@i+1,w
  3122  0E0B  1D03               	btfss	3,2
  3123  0E0C  2E15               	goto	l5089
  3124                           
  3125                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3126  0E0D  0859               	movf	MediaPlacaVaccum@i,w
  3127  0E0E  3EFF               	addlw	255
  3128  0E0F  00A0               	movwf	___xxtofl@val
  3129  0E10  085A               	movf	MediaPlacaVaccum@i+1,w
  3130  0E11  1803               	skipnc
  3131  0E12  3E01               	addlw	1
  3132  0E13  3EFF               	addlw	255
  3133  0E14  2E18               	goto	L2
  3134  0E15                     l5089:	
  3135                           
  3136                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3137  0E15  0859               	movf	MediaPlacaVaccum@i,w
  3138  0E16  00A0               	movwf	___xxtofl@val
  3139  0E17  085A               	movf	MediaPlacaVaccum@i+1,w
  3140  0E18                     L2:	
  3141  0E18  00A1               	movwf	___xxtofl@val+1
  3142  0E19  01A2               	clrf	___xxtofl@val+2
  3143  0E1A  01A3               	clrf	___xxtofl@val+3
  3144  0E1B  3000               	movlw	0
  3145  0E1C  160A  118A  213B  120A  158A  	fcall	___xxtofl
  3146  0E21  0823               	movf	?___xxtofl+3,w
  3147  0E22  00B1               	movwf	___fldiv@a+3
  3148  0E23  0822               	movf	?___xxtofl+2,w
  3149  0E24  00B0               	movwf	___fldiv@a+2
  3150  0E25  0821               	movf	?___xxtofl+1,w
  3151  0E26  00AF               	movwf	___fldiv@a+1
  3152  0E27  0820               	movf	?___xxtofl,w
  3153  0E28  00AE               	movwf	___fldiv@a
  3154  0E29  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3155  0E2A  00B5               	movwf	___fldiv@b+3
  3156  0E2B  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3157  0E2C  00B4               	movwf	___fldiv@b+2
  3158  0E2D  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3159  0E2E  00B3               	movwf	___fldiv@b+1
  3160  0E2F  0855               	movf	MediaPlacaVaccum@Temp,w
  3161  0E30  00B2               	movwf	___fldiv@b
  3162  0E31  120A  158A  21D1  120A  158A  	fcall	___fldiv
  3163  0E36  0831               	movf	?___fldiv+3,w
  3164  0E37  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3165  0E38  0830               	movf	?___fldiv+2,w
  3166  0E39  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3167  0E3A  082F               	movf	?___fldiv+1,w
  3168  0E3B  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3169  0E3C  082E               	movf	?___fldiv,w
  3170  0E3D  00D5               	movwf	MediaPlacaVaccum@Temp
  3171                           
  3172                           ;SlaveLiofilizadorVer1.c: 770:        Vaccum0 =1023.0-Temp;
  3173  0E3E  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3174  0E3F  00CE               	movwf	___flsub@a+3
  3175  0E40  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3176  0E41  00CD               	movwf	___flsub@a+2
  3177  0E42  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3178  0E43  00CC               	movwf	___flsub@a+1
  3179  0E44  0855               	movf	MediaPlacaVaccum@Temp,w
  3180  0E45  00CB               	movwf	___flsub@a
  3181  0E46  3044               	movlw	68
  3182  0E47  00D2               	movwf	___flsub@b+3
  3183  0E48  307F               	movlw	127
  3184  0E49  00D1               	movwf	___flsub@b+2
  3185  0E4A  30C0               	movlw	192
  3186  0E4B  00D0               	movwf	___flsub@b+1
  3187  0E4C  3000               	movlw	0
  3188  0E4D  00CF               	movwf	___flsub@b
  3189  0E4E  160A  158A  232B  120A  158A  	fcall	___flsub
  3190  0E53  084E               	movf	?___flsub+3,w
  3191  0E54  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0E55  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3193  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0E57  084D               	movf	?___flsub+2,w
  3195  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0E59  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3197  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0E5B  084C               	movf	?___flsub+1,w
  3199  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0E5D  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3201  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0E5F  084B               	movf	?___flsub,w
  3203  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0E61  00A4               	movwf	_Vaccum0^(0+128)
  3205                           
  3206                           ;SlaveLiofilizadorVer1.c: 771:        Vaccum0*=Vaccum0;
  3207  0E62  0827               	movf	(_Vaccum0+3)^(0+128),w
  3208  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0E64  00AC               	movwf	___flmul@b+3
  3210  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0E66  0826               	movf	(_Vaccum0+2)^(0+128),w
  3212  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0E68  00AB               	movwf	___flmul@b+2
  3214  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0E6A  0825               	movf	(_Vaccum0+1)^(0+128),w
  3216  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0E6C  00AA               	movwf	___flmul@b+1
  3218  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0E6E  0824               	movf	_Vaccum0^(0+128),w
  3220  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0E70  00A9               	movwf	___flmul@b
  3222  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0E72  0827               	movf	(_Vaccum0+3)^(0+128),w
  3224  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0E74  00B0               	movwf	___flmul@a+3
  3226  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0E76  0826               	movf	(_Vaccum0+2)^(0+128),w
  3228  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0E78  00AF               	movwf	___flmul@a+2
  3230  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0E7A  0825               	movf	(_Vaccum0+1)^(0+128),w
  3232  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0E7C  00AE               	movwf	___flmul@a+1
  3234  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3235  0E7E  0824               	movf	_Vaccum0^(0+128),w
  3236  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0E80  00AD               	movwf	___flmul@a
  3238  0E81  120A  118A  23D0  120A  158A  	fcall	___flmul
  3239  0E86  082C               	movf	?___flmul+3,w
  3240  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  3241  0E88  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3242  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0E8A  082B               	movf	?___flmul+2,w
  3244  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0E8C  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3246  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0E8E  082A               	movf	?___flmul+1,w
  3248  0E8F  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0E90  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3250  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0E92  0829               	movf	?___flmul,w
  3252  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  3253  0E94  00A4               	movwf	_Vaccum0^(0+128)
  3254                           
  3255                           ;SlaveLiofilizadorVer1.c: 772:        Vaccum0*=0.00222;
  3256  0E95  303B               	movlw	59
  3257  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0E97  00AC               	movwf	___flmul@b+3
  3259  0E98  3011               	movlw	17
  3260  0E99  00AB               	movwf	___flmul@b+2
  3261  0E9A  307D               	movlw	125
  3262  0E9B  00AA               	movwf	___flmul@b+1
  3263  0E9C  306B               	movlw	107
  3264  0E9D  00A9               	movwf	___flmul@b
  3265  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0E9F  0827               	movf	(_Vaccum0+3)^(0+128),w
  3267  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0EA1  00B0               	movwf	___flmul@a+3
  3269  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0EA3  0826               	movf	(_Vaccum0+2)^(0+128),w
  3271  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0EA5  00AF               	movwf	___flmul@a+2
  3273  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0EA7  0825               	movf	(_Vaccum0+1)^(0+128),w
  3275  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0EA9  00AE               	movwf	___flmul@a+1
  3277  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0EAB  0824               	movf	_Vaccum0^(0+128),w
  3279  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0EAD  00AD               	movwf	___flmul@a
  3281  0EAE  120A  118A  23D0  120A  158A  	fcall	___flmul
  3282  0EB3  082C               	movf	?___flmul+3,w
  3283  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0EB5  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3285  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0EB7  082B               	movf	?___flmul+2,w
  3287  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0EB9  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3289  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0EBB  082A               	movf	?___flmul+1,w
  3291  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0EBD  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3293  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0EBF  0829               	movf	?___flmul,w
  3295  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0EC1  00A4               	movwf	_Vaccum0^(0+128)
  3297                           
  3298                           ;SlaveLiofilizadorVer1.c: 773:        Vaccum0+=150;
  3299  0EC2  3043               	movlw	67
  3300  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0EC4  00BA               	movwf	___fladd@b+3
  3302  0EC5  3016               	movlw	22
  3303  0EC6  00B9               	movwf	___fladd@b+2
  3304  0EC7  3000               	movlw	0
  3305  0EC8  00B8               	movwf	___fladd@b+1
  3306  0EC9  3000               	movlw	0
  3307  0ECA  00B7               	movwf	___fladd@b
  3308  0ECB  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0ECC  0827               	movf	(_Vaccum0+3)^(0+128),w
  3310  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0ECE  00BE               	movwf	___fladd@a+3
  3312  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  3313  0ED0  0826               	movf	(_Vaccum0+2)^(0+128),w
  3314  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0ED2  00BD               	movwf	___fladd@a+2
  3316  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0ED4  0825               	movf	(_Vaccum0+1)^(0+128),w
  3318  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0ED6  00BC               	movwf	___fladd@a+1
  3320  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0ED8  0824               	movf	_Vaccum0^(0+128),w
  3322  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0EDA  00BB               	movwf	___fladd@a
  3324  0EDB  120A  158A  2372  120A  158A  	fcall	___fladd
  3325  0EE0  083A               	movf	?___fladd+3,w
  3326  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0EE2  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3328  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0EE4  0839               	movf	?___fladd+2,w
  3330  0EE5  1683               	bsf	3,5	;RP0=1, select bank1
  3331  0EE6  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3332  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0EE8  0838               	movf	?___fladd+1,w
  3334  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0EEA  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3336  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0EEC  0837               	movf	?___fladd,w
  3338  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0EEE  00A4               	movwf	_Vaccum0^(0+128)
  3340                           
  3341                           ;SlaveLiofilizadorVer1.c: 775:        if(Vaccum0>2000)Vaccum0=2000;
  3342  0EEF  3044               	movlw	68
  3343  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0EF1  00A3               	movwf	___flge@ff1+3
  3345  0EF2  30FA               	movlw	250
  3346  0EF3  00A2               	movwf	___flge@ff1+2
  3347  0EF4  3000               	movlw	0
  3348  0EF5  00A1               	movwf	___flge@ff1+1
  3349  0EF6  3000               	movlw	0
  3350  0EF7  00A0               	movwf	___flge@ff1
  3351  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0EF9  0827               	movf	(_Vaccum0+3)^(0+128),w
  3353  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0EFB  00A7               	movwf	___flge@ff2+3
  3355  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0EFD  0826               	movf	(_Vaccum0+2)^(0+128),w
  3357  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0EFF  00A6               	movwf	___flge@ff2+2
  3359  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0F01  0825               	movf	(_Vaccum0+1)^(0+128),w
  3361  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0F03  00A5               	movwf	___flge@ff2+1
  3363  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  3364  0F05  0824               	movf	_Vaccum0^(0+128),w
  3365  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0F07  00A4               	movwf	___flge@ff2
  3367  0F08  160A  118A  20A8  120A  158A  	fcall	___flge
  3368  0F0D  1803               	btfsc	3,0
  3369  0F0E  0008               	return
  3370  0F0F  3044               	movlw	68
  3371  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0F11  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3373  0F12  30FA               	movlw	250
  3374  0F13  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3375  0F14  3000               	movlw	0
  3376  0F15  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3377  0F16  3000               	movlw	0
  3378  0F17  00A4               	movwf	_Vaccum0^(0+128)
  3379  0F18  0008               	return
  3380  0F19                     l439:	
  3381                           ;SlaveLiofilizadorVer1.c: 778:      else
  3382                           
  3383                           
  3384                           ;SlaveLiofilizadorVer1.c: 779:        {;SlaveLiofilizadorVer1.c: 780:        ADCON1bits.
      +                          VCFG0=0;
  3385  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0F1A  121F               	bcf	31,4	;volatile
  3387                           
  3388                           ;SlaveLiofilizadorVer1.c: 781:        ADCON1bits.VCFG1=0;
  3389  0F1B  129F               	bcf	31,5	;volatile
  3390                           
  3391                           ;SlaveLiofilizadorVer1.c: 782:        ADCON0bits.CHS=canal;
  3392  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0F1D  0854               	movf	MediaPlacaVaccum@canal,w
  3394  0F1E  00D3               	movwf	??_MediaPlacaVaccum
  3395  0F1F  0DD3               	rlf	??_MediaPlacaVaccum,f
  3396  0F20  0DD3               	rlf	??_MediaPlacaVaccum,f
  3397  0F21  081F               	movf	31,w	;volatile
  3398  0F22  0653               	xorwf	??_MediaPlacaVaccum,w
  3399  0F23  39C3               	andlw	-61
  3400  0F24  0653               	xorwf	??_MediaPlacaVaccum,w
  3401  0F25  009F               	movwf	31	;volatile
  3402                           
  3403                           ;SlaveLiofilizadorVer1.c: 783:        my_delay_ms(1);
  3404  0F26  3000               	movlw	0
  3405  0F27  00A3               	movwf	my_delay_ms@time+3
  3406  0F28  3000               	movlw	0
  3407  0F29  00A2               	movwf	my_delay_ms@time+2
  3408  0F2A  3000               	movlw	0
  3409  0F2B  00A1               	movwf	my_delay_ms@time+1
  3410  0F2C  3001               	movlw	1
  3411  0F2D  00A0               	movwf	my_delay_ms@time
  3412  0F2E  160A  158A  2551  120A  158A  	fcall	_my_delay_ms
  3413                           
  3414                           ;SlaveLiofilizadorVer1.c: 784:        Temp=0;
  3415  0F33  3000               	movlw	0
  3416  0F34  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3417  0F35  3000               	movlw	0
  3418  0F36  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3419  0F37  3000               	movlw	0
  3420  0F38  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3421  0F39  3000               	movlw	0
  3422  0F3A  00D5               	movwf	MediaPlacaVaccum@Temp
  3423                           
  3424                           ;SlaveLiofilizadorVer1.c: 786:        for(i=1;i<15;i++)
  3425  0F3B  3001               	movlw	1
  3426  0F3C  00D9               	movwf	MediaPlacaVaccum@i
  3427  0F3D  3000               	movlw	0
  3428  0F3E  00DA               	movwf	MediaPlacaVaccum@i+1
  3429  0F3F                     l5107:	
  3430                           
  3431                           ;SlaveLiofilizadorVer1.c: 787:            {;SlaveLiofilizadorVer1.c: 790:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3432  0F3F  0854               	movf	MediaPlacaVaccum@canal,w
  3433  0F40  160A  158A  2740  120A  158A  	fcall	_ADC_Media_10bits
  3434  0F45  0831               	movf	?_ADC_Media_10bits+3,w
  3435  0F46  00BA               	movwf	___fladd@b+3
  3436  0F47  0830               	movf	?_ADC_Media_10bits+2,w
  3437  0F48  00B9               	movwf	___fladd@b+2
  3438  0F49  082F               	movf	?_ADC_Media_10bits+1,w
  3439  0F4A  00B8               	movwf	___fladd@b+1
  3440  0F4B  082E               	movf	?_ADC_Media_10bits,w
  3441  0F4C  00B7               	movwf	___fladd@b
  3442  0F4D  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3443  0F4E  00BE               	movwf	___fladd@a+3
  3444  0F4F  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3445  0F50  00BD               	movwf	___fladd@a+2
  3446  0F51  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3447  0F52  00BC               	movwf	___fladd@a+1
  3448  0F53  0855               	movf	MediaPlacaVaccum@Temp,w
  3449  0F54  00BB               	movwf	___fladd@a
  3450  0F55  120A  158A  2372  120A  158A  	fcall	___fladd
  3451  0F5A  083A               	movf	?___fladd+3,w
  3452  0F5B  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3453  0F5C  0839               	movf	?___fladd+2,w
  3454  0F5D  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3455  0F5E  0838               	movf	?___fladd+1,w
  3456  0F5F  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3457  0F60  0837               	movf	?___fladd,w
  3458  0F61  00D5               	movwf	MediaPlacaVaccum@Temp
  3459                           
  3460                           ;SlaveLiofilizadorVer1.c: 791:            if(Package_Usart_is_for_me()==1) break;
  3461  0F62  160A  158A  224C  120A  158A  	fcall	_Package_Usart_is_for_me
  3462  0F67  3A01               	xorlw	1
  3463  0F68  1903               	btfsc	3,2
  3464  0F69  2F77               	goto	l5115
  3465                           
  3466                           ;SlaveLiofilizadorVer1.c: 792:            }
  3467  0F6A  3001               	movlw	1
  3468  0F6B  07D9               	addwf	MediaPlacaVaccum@i,f
  3469  0F6C  1803               	skipnc
  3470  0F6D  0ADA               	incf	MediaPlacaVaccum@i+1,f
  3471  0F6E  3000               	movlw	0
  3472  0F6F  07DA               	addwf	MediaPlacaVaccum@i+1,f
  3473  0F70  3000               	movlw	0
  3474  0F71  025A               	subwf	MediaPlacaVaccum@i+1,w
  3475  0F72  300F               	movlw	15
  3476  0F73  1903               	skipnz
  3477  0F74  0259               	subwf	MediaPlacaVaccum@i,w
  3478  0F75  1C03               	skipc
  3479  0F76  2F3F               	goto	l5107
  3480  0F77                     l5115:	
  3481                           
  3482                           ;SlaveLiofilizadorVer1.c: 793:         if(i<10)
  3483  0F77  3000               	movlw	0
  3484  0F78  025A               	subwf	MediaPlacaVaccum@i+1,w
  3485  0F79  300A               	movlw	10
  3486  0F7A  1903               	skipnz
  3487  0F7B  0259               	subwf	MediaPlacaVaccum@i,w
  3488  0F7C  1C03               	btfss	3,0
  3489  0F7D  0008               	return
  3490                           
  3491                           ;SlaveLiofilizadorVer1.c: 799:        if(i==15)
  3492  0F7E  300F               	movlw	15
  3493  0F7F  0659               	xorwf	MediaPlacaVaccum@i,w
  3494  0F80  045A               	iorwf	MediaPlacaVaccum@i+1,w
  3495  0F81  1D03               	btfss	3,2
  3496  0F82  2F8B               	goto	l5123
  3497                           
  3498                           ;SlaveLiofilizadorVer1.c: 800:          Temp/=(i-1);
  3499  0F83  0859               	movf	MediaPlacaVaccum@i,w
  3500  0F84  3EFF               	addlw	255
  3501  0F85  00A0               	movwf	___xxtofl@val
  3502  0F86  085A               	movf	MediaPlacaVaccum@i+1,w
  3503  0F87  1803               	skipnc
  3504  0F88  3E01               	addlw	1
  3505  0F89  3EFF               	addlw	255
  3506  0F8A  2F8E               	goto	L3
  3507  0F8B                     l5123:	
  3508                           
  3509                           ;SlaveLiofilizadorVer1.c: 802:          Temp/=(i);
  3510  0F8B  0859               	movf	MediaPlacaVaccum@i,w
  3511  0F8C  00A0               	movwf	___xxtofl@val
  3512  0F8D  085A               	movf	MediaPlacaVaccum@i+1,w
  3513  0F8E                     L3:	
  3514  0F8E  00A1               	movwf	___xxtofl@val+1
  3515  0F8F  01A2               	clrf	___xxtofl@val+2
  3516  0F90  01A3               	clrf	___xxtofl@val+3
  3517  0F91  3000               	movlw	0
  3518  0F92  160A  118A  213B  120A  158A  	fcall	___xxtofl
  3519  0F97  0823               	movf	?___xxtofl+3,w
  3520  0F98  00B1               	movwf	___fldiv@a+3
  3521  0F99  0822               	movf	?___xxtofl+2,w
  3522  0F9A  00B0               	movwf	___fldiv@a+2
  3523  0F9B  0821               	movf	?___xxtofl+1,w
  3524  0F9C  00AF               	movwf	___fldiv@a+1
  3525  0F9D  0820               	movf	?___xxtofl,w
  3526  0F9E  00AE               	movwf	___fldiv@a
  3527  0F9F  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3528  0FA0  00B5               	movwf	___fldiv@b+3
  3529  0FA1  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3530  0FA2  00B4               	movwf	___fldiv@b+2
  3531  0FA3  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3532  0FA4  00B3               	movwf	___fldiv@b+1
  3533  0FA5  0855               	movf	MediaPlacaVaccum@Temp,w
  3534  0FA6  00B2               	movwf	___fldiv@b
  3535  0FA7  120A  158A  21D1  120A  158A  	fcall	___fldiv
  3536  0FAC  0831               	movf	?___fldiv+3,w
  3537  0FAD  00D8               	movwf	MediaPlacaVaccum@Temp+3
  3538  0FAE  0830               	movf	?___fldiv+2,w
  3539  0FAF  00D7               	movwf	MediaPlacaVaccum@Temp+2
  3540  0FB0  082F               	movf	?___fldiv+1,w
  3541  0FB1  00D6               	movwf	MediaPlacaVaccum@Temp+1
  3542  0FB2  082E               	movf	?___fldiv,w
  3543  0FB3  00D5               	movwf	MediaPlacaVaccum@Temp
  3544                           
  3545                           ;SlaveLiofilizadorVer1.c: 804:         Tensao1 =Temp*0.558296;
  3546  0FB4  303F               	movlw	63
  3547  0FB5  00AC               	movwf	___flmul@b+3
  3548  0FB6  300E               	movlw	14
  3549  0FB7  00AB               	movwf	___flmul@b+2
  3550  0FB8  30EC               	movlw	236
  3551  0FB9  00AA               	movwf	___flmul@b+1
  3552  0FBA  307D               	movlw	125
  3553  0FBB  00A9               	movwf	___flmul@b
  3554  0FBC  0858               	movf	MediaPlacaVaccum@Temp+3,w
  3555  0FBD  00B0               	movwf	___flmul@a+3
  3556  0FBE  0857               	movf	MediaPlacaVaccum@Temp+2,w
  3557  0FBF  00AF               	movwf	___flmul@a+2
  3558  0FC0  0856               	movf	MediaPlacaVaccum@Temp+1,w
  3559  0FC1  00AE               	movwf	___flmul@a+1
  3560  0FC2  0855               	movf	MediaPlacaVaccum@Temp,w
  3561  0FC3  00AD               	movwf	___flmul@a
  3562  0FC4  120A  118A  23D0  120A  158A  	fcall	___flmul
  3563  0FC9  082C               	movf	?___flmul+3,w
  3564  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3565  0FCB  00A3               	movwf	(_Tensao1+3)^(0+128)
  3566  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0FCD  082B               	movf	?___flmul+2,w
  3568  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0FCF  00A2               	movwf	(_Tensao1+2)^(0+128)
  3570  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3571  0FD1  082A               	movf	?___flmul+1,w
  3572  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0FD3  00A1               	movwf	(_Tensao1+1)^(0+128)
  3574  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0FD5  0829               	movf	?___flmul,w
  3576  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0FD7  00A0               	movwf	_Tensao1^(0+128)
  3578                           
  3579                           ;SlaveLiofilizadorVer1.c: 805:         if(Tensao1<15) Tensao1=0;
  3580  0FD8  0823               	movf	(_Tensao1+3)^(0+128),w
  3581  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0FDA  00A3               	movwf	___flge@ff1+3
  3583  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3584  0FDC  0822               	movf	(_Tensao1+2)^(0+128),w
  3585  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0FDE  00A2               	movwf	___flge@ff1+2
  3587  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3588  0FE0  0821               	movf	(_Tensao1+1)^(0+128),w
  3589  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0FE2  00A1               	movwf	___flge@ff1+1
  3591  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3592  0FE4  0820               	movf	_Tensao1^(0+128),w
  3593  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0FE6  00A0               	movwf	___flge@ff1
  3595  0FE7  3041               	movlw	65
  3596  0FE8  00A7               	movwf	___flge@ff2+3
  3597  0FE9  3070               	movlw	112
  3598  0FEA  00A6               	movwf	___flge@ff2+2
  3599  0FEB  3000               	movlw	0
  3600  0FEC  00A5               	movwf	___flge@ff2+1
  3601  0FED  3000               	movlw	0
  3602  0FEE  00A4               	movwf	___flge@ff2
  3603  0FEF  160A  118A  20A8  120A  158A  	fcall	___flge
  3604  0FF4  1803               	btfsc	3,0
  3605  0FF5  0008               	return
  3606  0FF6  3000               	movlw	0
  3607  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0FF8  00A3               	movwf	(_Tensao1+3)^(0+128)
  3609  0FF9  3000               	movlw	0
  3610  0FFA  00A2               	movwf	(_Tensao1+2)^(0+128)
  3611  0FFB  3000               	movlw	0
  3612  0FFC  00A1               	movwf	(_Tensao1+1)^(0+128)
  3613  0FFD  3000               	movlw	0
  3614  0FFE  00A0               	movwf	_Tensao1^(0+128)
  3615  0FFF  0008               	return
  3616  1000                     __end_of_MediaPlacaVaccum:	
  3617                           
  3618                           	psect	text3
  3619  1B2B                     __ptext3:	
  3620 ;; *************** function ___flsub *****************
  3621 ;; Defined at:
  3622 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  a               4   43[BANK0 ] void 
  3625 ;;  b               4   47[BANK0 ] void 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  4   43[BANK0 ] void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 300/0
  3634 ;;		On exit  : 300/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       8       0       0       0
  3638 ;;      Locals:         0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       8       0       0       0
  3641 ;;Total ram usage:        8 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    2
  3644 ;; This function calls:
  3645 ;;		___fladd
  3646 ;; This function is called by:
  3647 ;;		_MediaPlacaVaccum
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function ___flsub
  3653  1B2B                     ___flsub:	
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3657  1B2B  3080               	movlw	128
  3658  1B2C  06CE               	xorwf	___flsub@a+3,f
  3659  1B2D  0852               	movf	___flsub@b+3,w
  3660  1B2E  00BA               	movwf	___fladd@b+3
  3661  1B2F  0851               	movf	___flsub@b+2,w
  3662  1B30  00B9               	movwf	___fladd@b+2
  3663  1B31  0850               	movf	___flsub@b+1,w
  3664  1B32  00B8               	movwf	___fladd@b+1
  3665  1B33  084F               	movf	___flsub@b,w
  3666  1B34  00B7               	movwf	___fladd@b
  3667  1B35  084E               	movf	___flsub@a+3,w
  3668  1B36  00BE               	movwf	___fladd@a+3
  3669  1B37  084D               	movf	___flsub@a+2,w
  3670  1B38  00BD               	movwf	___fladd@a+2
  3671  1B39  084C               	movf	___flsub@a+1,w
  3672  1B3A  00BC               	movwf	___fladd@a+1
  3673  1B3B  084B               	movf	___flsub@a,w
  3674  1B3C  00BB               	movwf	___fladd@a
  3675  1B3D  120A  158A  2372   	fcall	___fladd
  3676  1B40  083A               	movf	?___fladd+3,w
  3677  1B41  00CE               	movwf	?___flsub+3
  3678  1B42  0839               	movf	?___fladd+2,w
  3679  1B43  00CD               	movwf	?___flsub+2
  3680  1B44  0838               	movf	?___fladd+1,w
  3681  1B45  00CC               	movwf	?___flsub+1
  3682  1B46  0837               	movf	?___fladd,w
  3683  1B47  00CB               	movwf	?___flsub
  3684  1B48  0008               	return
  3685  1B49                     __end_of___flsub:	
  3686                           
  3687                           	psect	text4
  3688  0B72                     __ptext4:	
  3689 ;; *************** function ___fladd *****************
  3690 ;; Defined at:
  3691 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  b               4   23[BANK0 ] void 
  3694 ;;  a               4   27[BANK0 ] void 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  grs             1   42[BANK0 ] unsigned char 
  3697 ;;  bexp            1   41[BANK0 ] unsigned char 
  3698 ;;  aexp            1   40[BANK0 ] unsigned char 
  3699 ;;  signs           1   39[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  4   23[BANK0 ] unsigned char 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, btemp+1
  3704 ;; Tracked objects:
  3705 ;;		On entry : 300/0
  3706 ;;		On exit  : 300/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       8       0       0       0
  3710 ;;      Locals:         0       4       0       0       0
  3711 ;;      Temps:          0       8       0       0       0
  3712 ;;      Totals:         0      20       0       0       0
  3713 ;;Total ram usage:       20 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_MediaPlacaVaccum
  3720 ;;		___flsub
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function ___fladd
  3726  0B72                     ___fladd:	
  3727                           
  3728                           ;incstack = 0
  3729                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3730  0B72  083A               	movf	___fladd@b+3,w
  3731  0B73  3980               	andlw	128
  3732  0B74  00BF               	movwf	??___fladd
  3733  0B75  083F               	movf	??___fladd,w
  3734  0B76  00C7               	movwf	___fladd@signs
  3735  0B77  083A               	movf	___fladd@b+3,w
  3736  0B78  00BF               	movwf	??___fladd
  3737  0B79  073F               	addwf	??___fladd,w
  3738  0B7A  00C0               	movwf	??___fladd+1
  3739  0B7B  0840               	movf	??___fladd+1,w
  3740  0B7C  00C9               	movwf	___fladd@bexp
  3741  0B7D  1BB9               	btfsc	___fladd@b+2,7
  3742  0B7E  1449               	bsf	___fladd@bexp,0
  3743  0B7F  0849               	movf	___fladd@bexp,w
  3744  0B80  1903               	btfsc	3,2
  3745  0B81  2B90               	goto	l3999
  3746  0B82  0A49               	incf	___fladd@bexp,w
  3747  0B83  1D03               	btfss	3,2
  3748  0B84  2B8D               	goto	l3995
  3749  0B85  3000               	movlw	0
  3750  0B86  00BA               	movwf	___fladd@b+3
  3751  0B87  3000               	movlw	0
  3752  0B88  00B9               	movwf	___fladd@b+2
  3753  0B89  3000               	movlw	0
  3754  0B8A  00B8               	movwf	___fladd@b+1
  3755  0B8B  3000               	movlw	0
  3756  0B8C  00B7               	movwf	___fladd@b
  3757  0B8D                     l3995:	
  3758  0B8D  17B9               	bsf	___fladd@b+2,7
  3759  0B8E  01BA               	clrf	___fladd@b+3
  3760  0B8F  2B98               	goto	l4001
  3761  0B90                     l3999:	
  3762  0B90  3000               	movlw	0
  3763  0B91  00BA               	movwf	___fladd@b+3
  3764  0B92  3000               	movlw	0
  3765  0B93  00B9               	movwf	___fladd@b+2
  3766  0B94  3000               	movlw	0
  3767  0B95  00B8               	movwf	___fladd@b+1
  3768  0B96  3000               	movlw	0
  3769  0B97  00B7               	movwf	___fladd@b
  3770  0B98                     l4001:	
  3771  0B98  083E               	movf	___fladd@a+3,w
  3772  0B99  3980               	andlw	128
  3773  0B9A  00BF               	movwf	??___fladd
  3774  0B9B  083F               	movf	??___fladd,w
  3775  0B9C  00C8               	movwf	___fladd@aexp
  3776  0B9D  0848               	movf	___fladd@aexp,w
  3777  0B9E  0647               	xorwf	___fladd@signs,w
  3778  0B9F  1D03               	btfss	3,2
  3779  0BA0  1747               	bsf	___fladd@signs,6
  3780  0BA1  083E               	movf	___fladd@a+3,w
  3781  0BA2  00BF               	movwf	??___fladd
  3782  0BA3  073F               	addwf	??___fladd,w
  3783  0BA4  00C0               	movwf	??___fladd+1
  3784  0BA5  0840               	movf	??___fladd+1,w
  3785  0BA6  00C8               	movwf	___fladd@aexp
  3786  0BA7  1BBD               	btfsc	___fladd@a+2,7
  3787  0BA8  1448               	bsf	___fladd@aexp,0
  3788  0BA9  0848               	movf	___fladd@aexp,w
  3789  0BAA  1903               	btfsc	3,2
  3790  0BAB  2BBA               	goto	l4023
  3791  0BAC  0A48               	incf	___fladd@aexp,w
  3792  0BAD  1D03               	btfss	3,2
  3793  0BAE  2BB7               	goto	l4019
  3794  0BAF  3000               	movlw	0
  3795  0BB0  00BE               	movwf	___fladd@a+3
  3796  0BB1  3000               	movlw	0
  3797  0BB2  00BD               	movwf	___fladd@a+2
  3798  0BB3  3000               	movlw	0
  3799  0BB4  00BC               	movwf	___fladd@a+1
  3800  0BB5  3000               	movlw	0
  3801  0BB6  00BB               	movwf	___fladd@a
  3802  0BB7                     l4019:	
  3803  0BB7  17BD               	bsf	___fladd@a+2,7
  3804  0BB8  01BE               	clrf	___fladd@a+3
  3805  0BB9  2BC2               	goto	l1288
  3806  0BBA                     l4023:	
  3807  0BBA  3000               	movlw	0
  3808  0BBB  00BE               	movwf	___fladd@a+3
  3809  0BBC  3000               	movlw	0
  3810  0BBD  00BD               	movwf	___fladd@a+2
  3811  0BBE  3000               	movlw	0
  3812  0BBF  00BC               	movwf	___fladd@a+1
  3813  0BC0  3000               	movlw	0
  3814  0BC1  00BB               	movwf	___fladd@a
  3815  0BC2                     l1288:	
  3816  0BC2  0849               	movf	___fladd@bexp,w
  3817  0BC3  0248               	subwf	___fladd@aexp,w
  3818  0BC4  1803               	skipnc
  3819  0BC5  2C08               	goto	l4059
  3820  0BC6  1F47               	btfss	___fladd@signs,6
  3821  0BC7  2BCC               	goto	l4029
  3822  0BC8  3080               	movlw	128
  3823  0BC9  00BF               	movwf	??___fladd
  3824  0BCA  083F               	movf	??___fladd,w
  3825  0BCB  06C7               	xorwf	___fladd@signs,f
  3826  0BCC                     l4029:	
  3827  0BCC  0849               	movf	___fladd@bexp,w
  3828  0BCD  00BF               	movwf	??___fladd
  3829  0BCE  083F               	movf	??___fladd,w
  3830  0BCF  00CA               	movwf	___fladd@grs
  3831  0BD0  0848               	movf	___fladd@aexp,w
  3832  0BD1  00BF               	movwf	??___fladd
  3833  0BD2  083F               	movf	??___fladd,w
  3834  0BD3  00C9               	movwf	___fladd@bexp
  3835  0BD4  084A               	movf	___fladd@grs,w
  3836  0BD5  00BF               	movwf	??___fladd
  3837  0BD6  083F               	movf	??___fladd,w
  3838  0BD7  00C8               	movwf	___fladd@aexp
  3839  0BD8  0837               	movf	___fladd@b,w
  3840  0BD9  00BF               	movwf	??___fladd
  3841  0BDA  083F               	movf	??___fladd,w
  3842  0BDB  00CA               	movwf	___fladd@grs
  3843  0BDC  083B               	movf	___fladd@a,w
  3844  0BDD  00BF               	movwf	??___fladd
  3845  0BDE  083F               	movf	??___fladd,w
  3846  0BDF  00B7               	movwf	___fladd@b
  3847  0BE0  084A               	movf	___fladd@grs,w
  3848  0BE1  00BF               	movwf	??___fladd
  3849  0BE2  083F               	movf	??___fladd,w
  3850  0BE3  00BB               	movwf	___fladd@a
  3851  0BE4  0838               	movf	___fladd@b+1,w
  3852  0BE5  00BF               	movwf	??___fladd
  3853  0BE6  083F               	movf	??___fladd,w
  3854  0BE7  00CA               	movwf	___fladd@grs
  3855  0BE8  083C               	movf	___fladd@a+1,w
  3856  0BE9  00BF               	movwf	??___fladd
  3857  0BEA  083F               	movf	??___fladd,w
  3858  0BEB  00B8               	movwf	___fladd@b+1
  3859  0BEC  084A               	movf	___fladd@grs,w
  3860  0BED  00BF               	movwf	??___fladd
  3861  0BEE  083F               	movf	??___fladd,w
  3862  0BEF  00BC               	movwf	___fladd@a+1
  3863  0BF0  0839               	movf	___fladd@b+2,w
  3864  0BF1  00BF               	movwf	??___fladd
  3865  0BF2  083F               	movf	??___fladd,w
  3866  0BF3  00CA               	movwf	___fladd@grs
  3867  0BF4  083D               	movf	___fladd@a+2,w
  3868  0BF5  00BF               	movwf	??___fladd
  3869  0BF6  083F               	movf	??___fladd,w
  3870  0BF7  00B9               	movwf	___fladd@b+2
  3871  0BF8  084A               	movf	___fladd@grs,w
  3872  0BF9  00BF               	movwf	??___fladd
  3873  0BFA  083F               	movf	??___fladd,w
  3874  0BFB  00BD               	movwf	___fladd@a+2
  3875  0BFC  083A               	movf	___fladd@b+3,w
  3876  0BFD  00BF               	movwf	??___fladd
  3877  0BFE  083F               	movf	??___fladd,w
  3878  0BFF  00CA               	movwf	___fladd@grs
  3879  0C00  083E               	movf	___fladd@a+3,w
  3880  0C01  00BF               	movwf	??___fladd
  3881  0C02  083F               	movf	??___fladd,w
  3882  0C03  00BA               	movwf	___fladd@b+3
  3883  0C04  084A               	movf	___fladd@grs,w
  3884  0C05  00BF               	movwf	??___fladd
  3885  0C06  083F               	movf	??___fladd,w
  3886  0C07  00BE               	movwf	___fladd@a+3
  3887  0C08                     l4059:	
  3888  0C08  01CA               	clrf	___fladd@grs
  3889  0C09  0848               	movf	___fladd@aexp,w
  3890  0C0A  00BF               	movwf	??___fladd
  3891  0C0B  01C0               	clrf	??___fladd+1
  3892  0C0C  0840               	movf	??___fladd+1,w
  3893  0C0D  00C2               	movwf	??___fladd+3
  3894  0C0E  0849               	movf	___fladd@bexp,w
  3895  0C0F  023F               	subwf	??___fladd,w
  3896  0C10  00C1               	movwf	??___fladd+2
  3897  0C11  1C03               	skipc
  3898  0C12  03C2               	decf	??___fladd+3,f
  3899  0C13  0842               	movf	??___fladd+3,w
  3900  0C14  3A80               	xorlw	128
  3901  0C15  00FF               	movwf	127
  3902  0C16  3080               	movlw	128
  3903  0C17  027F               	subwf	127,w
  3904  0C18  1D03               	skipz
  3905  0C19  2C1C               	goto	u3285
  3906  0C1A  301A               	movlw	26
  3907  0C1B  0241               	subwf	??___fladd+2,w
  3908  0C1C                     u3285:	
  3909  0C1C  1C03               	skipc
  3910  0C1D  2C55               	goto	l4077
  3911  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0C20  083A               	movf	___fladd@b+3,w
  3914  0C21  0439               	iorwf	___fladd@b+2,w
  3915  0C22  0438               	iorwf	___fladd@b+1,w
  3916  0C23  0437               	iorwf	___fladd@b,w
  3917  0C24  1903               	btfsc	3,2
  3918  0C25  2C28               	goto	u3290
  3919  0C26  3001               	movlw	1
  3920  0C27  2C29               	goto	u3300
  3921  0C28                     u3290:	
  3922  0C28  3000               	movlw	0
  3923  0C29                     u3300:	
  3924  0C29  00BF               	movwf	??___fladd
  3925  0C2A  083F               	movf	??___fladd,w
  3926  0C2B  00CA               	movwf	___fladd@grs
  3927  0C2C  3000               	movlw	0
  3928  0C2D  00BA               	movwf	___fladd@b+3
  3929  0C2E  3000               	movlw	0
  3930  0C2F  00B9               	movwf	___fladd@b+2
  3931  0C30  3000               	movlw	0
  3932  0C31  00B8               	movwf	___fladd@b+1
  3933  0C32  3000               	movlw	0
  3934  0C33  00B7               	movwf	___fladd@b
  3935  0C34  0848               	movf	___fladd@aexp,w
  3936  0C35  00BF               	movwf	??___fladd
  3937  0C36  083F               	movf	??___fladd,w
  3938  0C37  00C9               	movwf	___fladd@bexp
  3939  0C38  2C5B               	goto	l1292
  3940  0C39                     l1294:	
  3941  0C39  1C4A               	btfss	___fladd@grs,0
  3942  0C3A  2C44               	goto	l4067
  3943  0C3B  084A               	movf	___fladd@grs,w
  3944  0C3C  00BF               	movwf	??___fladd
  3945  0C3D  1003               	clrc
  3946  0C3E  0C3F               	rrf	??___fladd,w
  3947  0C3F  3801               	iorlw	1
  3948  0C40  00C0               	movwf	??___fladd+1
  3949  0C41  0840               	movf	??___fladd+1,w
  3950  0C42  00CA               	movwf	___fladd@grs
  3951  0C43  2C46               	goto	l4069
  3952  0C44                     l4067:	
  3953  0C44  1003               	clrc
  3954  0C45  0CCA               	rrf	___fladd@grs,f
  3955  0C46                     l4069:	
  3956  0C46  1837               	btfsc	___fladd@b,0
  3957  0C47  17CA               	bsf	___fladd@grs,7
  3958  0C48  3001               	movlw	1
  3959  0C49  00BF               	movwf	??___fladd
  3960  0C4A                     u3335:	
  3961  0C4A  0D3A               	rlf	___fladd@b+3,w
  3962  0C4B  0CBA               	rrf	___fladd@b+3,f
  3963  0C4C  0CB9               	rrf	___fladd@b+2,f
  3964  0C4D  0CB8               	rrf	___fladd@b+1,f
  3965  0C4E  0CB7               	rrf	___fladd@b,f
  3966  0C4F  0BBF               	decfsz	??___fladd& (0+127),f
  3967  0C50  2C4A               	goto	u3335
  3968  0C51  3001               	movlw	1
  3969  0C52  00BF               	movwf	??___fladd
  3970  0C53  083F               	movf	??___fladd,w
  3971  0C54  07C9               	addwf	___fladd@bexp,f
  3972  0C55                     l4077:	
  3973  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0C57  0848               	movf	___fladd@aexp,w
  3976  0C58  0249               	subwf	___fladd@bexp,w
  3977  0C59  1C03               	skipc
  3978  0C5A  2C39               	goto	l1294
  3979  0C5B                     l1292:	
  3980  0C5B  1B47               	btfsc	___fladd@signs,6
  3981  0C5C  2C9C               	goto	l4103
  3982  0C5D  0849               	movf	___fladd@bexp,w
  3983  0C5E  1D03               	btfss	3,2
  3984  0C5F  2C69               	goto	l4085
  3985  0C60  3000               	movlw	0
  3986  0C61  00BA               	movwf	?___fladd+3
  3987  0C62  3000               	movlw	0
  3988  0C63  00B9               	movwf	?___fladd+2
  3989  0C64  3000               	movlw	0
  3990  0C65  00B8               	movwf	?___fladd+1
  3991  0C66  3000               	movlw	0
  3992  0C67  00B7               	movwf	?___fladd
  3993  0C68  0008               	return
  3994  0C69                     l4085:	
  3995  0C69  083B               	movf	___fladd@a,w
  3996  0C6A  07B7               	addwf	___fladd@b,f
  3997  0C6B  083C               	movf	___fladd@a+1,w
  3998  0C6C  1103               	clrz
  3999  0C6D  1803               	skipnc
  4000  0C6E  3E01               	addlw	1
  4001  0C6F  1D03               	btfss	3,2
  4002  0C70  07B8               	addwf	___fladd@b+1,f
  4003  0C71  083D               	movf	___fladd@a+2,w
  4004  0C72  1103               	clrz
  4005  0C73  1803               	skipnc
  4006  0C74  3E01               	addlw	1
  4007  0C75  1D03               	btfss	3,2
  4008  0C76  07B9               	addwf	___fladd@b+2,f
  4009  0C77  083E               	movf	___fladd@a+3,w
  4010  0C78  1103               	clrz
  4011  0C79  1803               	skipnc
  4012  0C7A  3E01               	addlw	1
  4013  0C7B  1D03               	btfss	3,2
  4014  0C7C  07BA               	addwf	___fladd@b+3,f
  4015  0C7D  1C3A               	btfss	___fladd@b+3,0
  4016  0C7E  2D3E               	goto	l4137
  4017  0C7F  1C4A               	btfss	___fladd@grs,0
  4018  0C80  2C8A               	goto	l4093
  4019  0C81  084A               	movf	___fladd@grs,w
  4020  0C82  00BF               	movwf	??___fladd
  4021  0C83  1003               	clrc
  4022  0C84  0C3F               	rrf	??___fladd,w
  4023  0C85  3801               	iorlw	1
  4024  0C86  00C0               	movwf	??___fladd+1
  4025  0C87  0840               	movf	??___fladd+1,w
  4026  0C88  00CA               	movwf	___fladd@grs
  4027  0C89  2C8C               	goto	l4095
  4028  0C8A                     l4093:	
  4029  0C8A  1003               	clrc
  4030  0C8B  0CCA               	rrf	___fladd@grs,f
  4031  0C8C                     l4095:	
  4032  0C8C  1837               	btfsc	___fladd@b,0
  4033  0C8D  17CA               	bsf	___fladd@grs,7
  4034  0C8E  3001               	movlw	1
  4035  0C8F  00BF               	movwf	??___fladd
  4036  0C90                     u3415:	
  4037  0C90  0D3A               	rlf	___fladd@b+3,w
  4038  0C91  0CBA               	rrf	___fladd@b+3,f
  4039  0C92  0CB9               	rrf	___fladd@b+2,f
  4040  0C93  0CB8               	rrf	___fladd@b+1,f
  4041  0C94  0CB7               	rrf	___fladd@b,f
  4042  0C95  0BBF               	decfsz	??___fladd& (0+127),f
  4043  0C96  2C90               	goto	u3415
  4044  0C97  3001               	movlw	1
  4045  0C98  00BF               	movwf	??___fladd
  4046  0C99  083F               	movf	??___fladd,w
  4047  0C9A  07C9               	addwf	___fladd@bexp,f
  4048  0C9B  2D3E               	goto	l4137
  4049  0C9C                     l4103:	
  4050  0C9C  083A               	movf	___fladd@b+3,w
  4051  0C9D  3A80               	xorlw	128
  4052  0C9E  00FF               	movwf	127
  4053  0C9F  083E               	movf	___fladd@a+3,w
  4054  0CA0  3A80               	xorlw	128
  4055  0CA1  027F               	subwf	127,w
  4056  0CA2  1D03               	skipz
  4057  0CA3  2CAE               	goto	u3423
  4058  0CA4  083D               	movf	___fladd@a+2,w
  4059  0CA5  0239               	subwf	___fladd@b+2,w
  4060  0CA6  1D03               	skipz
  4061  0CA7  2CAE               	goto	u3423
  4062  0CA8  083C               	movf	___fladd@a+1,w
  4063  0CA9  0238               	subwf	___fladd@b+1,w
  4064  0CAA  1D03               	skipz
  4065  0CAB  2CAE               	goto	u3423
  4066  0CAC  083B               	movf	___fladd@a,w
  4067  0CAD  0237               	subwf	___fladd@b,w
  4068  0CAE                     u3423:	
  4069  0CAE  1803               	skipnc
  4070  0CAF  2D06               	goto	l4113
  4071  0CB0  30FF               	movlw	255
  4072  0CB1  00BF               	movwf	??___fladd
  4073  0CB2  30FF               	movlw	255
  4074  0CB3  00C0               	movwf	??___fladd+1
  4075  0CB4  30FF               	movlw	255
  4076  0CB5  00C1               	movwf	??___fladd+2
  4077  0CB6  30FF               	movlw	255
  4078  0CB7  00C2               	movwf	??___fladd+3
  4079  0CB8  083B               	movf	___fladd@a,w
  4080  0CB9  00C3               	movwf	??___fladd+4
  4081  0CBA  083C               	movf	___fladd@a+1,w
  4082  0CBB  00C4               	movwf	??___fladd+5
  4083  0CBC  083D               	movf	___fladd@a+2,w
  4084  0CBD  00C5               	movwf	??___fladd+6
  4085  0CBE  083E               	movf	___fladd@a+3,w
  4086  0CBF  00C6               	movwf	??___fladd+7
  4087  0CC0  0837               	movf	___fladd@b,w
  4088  0CC1  02C3               	subwf	??___fladd+4,f
  4089  0CC2  0838               	movf	___fladd@b+1,w
  4090  0CC3  1C03               	skipc
  4091  0CC4  0F38               	incfsz	___fladd@b+1,w
  4092  0CC5  2CC7               	goto	u3431
  4093  0CC6  2CC8               	goto	u3432
  4094  0CC7                     u3431:	
  4095  0CC7  02C4               	subwf	??___fladd+5,f
  4096  0CC8                     u3432:	
  4097  0CC8  0839               	movf	___fladd@b+2,w
  4098  0CC9  1C03               	skipc
  4099  0CCA  0F39               	incfsz	___fladd@b+2,w
  4100  0CCB  2CCD               	goto	u3433
  4101  0CCC  2CCE               	goto	u3434
  4102  0CCD                     u3433:	
  4103  0CCD  02C5               	subwf	??___fladd+6,f
  4104  0CCE                     u3434:	
  4105  0CCE  083A               	movf	___fladd@b+3,w
  4106  0CCF  1C03               	skipc
  4107  0CD0  0F3A               	incfsz	___fladd@b+3,w
  4108  0CD1  2CD3               	goto	u3435
  4109  0CD2  2CD4               	goto	u3436
  4110  0CD3                     u3435:	
  4111  0CD3  02C6               	subwf	??___fladd+7,f
  4112  0CD4                     u3436:	
  4113  0CD4  0843               	movf	??___fladd+4,w
  4114  0CD5  07BF               	addwf	??___fladd,f
  4115  0CD6  0844               	movf	??___fladd+5,w
  4116  0CD7  1803               	skipnc
  4117  0CD8  0F44               	incfsz	??___fladd+5,w
  4118  0CD9  2CDB               	goto	u3440
  4119  0CDA  2CDC               	goto	u3441
  4120  0CDB                     u3440:	
  4121  0CDB  07C0               	addwf	??___fladd+1,f
  4122  0CDC                     u3441:	
  4123  0CDC  0845               	movf	??___fladd+6,w
  4124  0CDD  1803               	skipnc
  4125  0CDE  0F45               	incfsz	??___fladd+6,w
  4126  0CDF  2CE1               	goto	u3442
  4127  0CE0  2CE2               	goto	u3443
  4128  0CE1                     u3442:	
  4129  0CE1  07C1               	addwf	??___fladd+2,f
  4130  0CE2                     u3443:	
  4131  0CE2  0846               	movf	??___fladd+7,w
  4132  0CE3  1803               	skipnc
  4133  0CE4  0A46               	incf	??___fladd+7,w
  4134  0CE5  07C2               	addwf	??___fladd+3,f
  4135  0CE6  0842               	movf	??___fladd+3,w
  4136  0CE7  00BA               	movwf	___fladd@b+3
  4137  0CE8  0841               	movf	??___fladd+2,w
  4138  0CE9  00B9               	movwf	___fladd@b+2
  4139  0CEA  0840               	movf	??___fladd+1,w
  4140  0CEB  00B8               	movwf	___fladd@b+1
  4141  0CEC  083F               	movf	??___fladd,w
  4142  0CED  00B7               	movwf	___fladd@b
  4143  0CEE  3080               	movlw	128
  4144  0CEF  00BF               	movwf	??___fladd
  4145  0CF0  083F               	movf	??___fladd,w
  4146  0CF1  06C7               	xorwf	___fladd@signs,f
  4147  0CF2  09CA               	comf	___fladd@grs,f
  4148  0CF3  0ACA               	incf	___fladd@grs,f
  4149  0CF4  084A               	movf	___fladd@grs,w
  4150  0CF5  1D03               	btfss	3,2
  4151  0CF6  2D14               	goto	l1309
  4152  0CF7  3001               	movlw	1
  4153  0CF8  07B7               	addwf	___fladd@b,f
  4154  0CF9  3000               	movlw	0
  4155  0CFA  1803               	skipnc
  4156  0CFB  3001               	movlw	1
  4157  0CFC  07B8               	addwf	___fladd@b+1,f
  4158  0CFD  3000               	movlw	0
  4159  0CFE  1803               	skipnc
  4160  0CFF  3001               	movlw	1
  4161  0D00  07B9               	addwf	___fladd@b+2,f
  4162  0D01  3000               	movlw	0
  4163  0D02  1803               	skipnc
  4164  0D03  3001               	movlw	1
  4165  0D04  07BA               	addwf	___fladd@b+3,f
  4166  0D05  2D14               	goto	l1309
  4167  0D06                     l4113:	
  4168  0D06  083B               	movf	___fladd@a,w
  4169  0D07  02B7               	subwf	___fladd@b,f
  4170  0D08  083C               	movf	___fladd@a+1,w
  4171  0D09  1C03               	skipc
  4172  0D0A  0F3C               	incfsz	___fladd@a+1,w
  4173  0D0B  02B8               	subwf	___fladd@b+1,f
  4174  0D0C  083D               	movf	___fladd@a+2,w
  4175  0D0D  1C03               	skipc
  4176  0D0E  0F3D               	incfsz	___fladd@a+2,w
  4177  0D0F  02B9               	subwf	___fladd@b+2,f
  4178  0D10  083E               	movf	___fladd@a+3,w
  4179  0D11  1C03               	skipc
  4180  0D12  0F3E               	incfsz	___fladd@a+3,w
  4181  0D13  02BA               	subwf	___fladd@b+3,f
  4182  0D14                     l1309:	
  4183  0D14  083A               	movf	___fladd@b+3,w
  4184  0D15  0439               	iorwf	___fladd@b+2,w
  4185  0D16  0438               	iorwf	___fladd@b+1,w
  4186  0D17  0437               	iorwf	___fladd@b,w
  4187  0D18  1D03               	skipz
  4188  0D19  2D3C               	goto	l4135
  4189  0D1A  084A               	movf	___fladd@grs,w
  4190  0D1B  1D03               	btfss	3,2
  4191  0D1C  2D3C               	goto	l4135
  4192  0D1D  3000               	movlw	0
  4193  0D1E  00BA               	movwf	?___fladd+3
  4194  0D1F  3000               	movlw	0
  4195  0D20  00B9               	movwf	?___fladd+2
  4196  0D21  3000               	movlw	0
  4197  0D22  00B8               	movwf	?___fladd+1
  4198  0D23  3000               	movlw	0
  4199  0D24  00B7               	movwf	?___fladd
  4200  0D25  0008               	return
  4201  0D26                     l4121:	
  4202  0D26  3001               	movlw	1
  4203  0D27  00BF               	movwf	??___fladd
  4204  0D28                     u3485:	
  4205  0D28  1003               	clrc
  4206  0D29  0DB7               	rlf	___fladd@b,f
  4207  0D2A  0DB8               	rlf	___fladd@b+1,f
  4208  0D2B  0DB9               	rlf	___fladd@b+2,f
  4209  0D2C  0DBA               	rlf	___fladd@b+3,f
  4210  0D2D  0BBF               	decfsz	??___fladd,f
  4211  0D2E  2D28               	goto	u3485
  4212  0D2F  1BCA               	btfsc	___fladd@grs,7
  4213  0D30  1437               	bsf	___fladd@b,0
  4214  0D31  1C4A               	btfss	___fladd@grs,0
  4215  0D32  2D35               	goto	l4129
  4216  0D33  1403               	setc
  4217  0D34  2D36               	goto	L4
  4218  0D35                     l4129:	
  4219  0D35  1003               	clrc
  4220  0D36                     L4:	
  4221  0D36  0DCA               	rlf	___fladd@grs,f
  4222  0D37  0849               	movf	___fladd@bexp,w
  4223  0D38  1903               	btfsc	3,2
  4224  0D39  2D3C               	goto	l4135
  4225  0D3A  3001               	movlw	1
  4226  0D3B  02C9               	subwf	___fladd@bexp,f
  4227  0D3C                     l4135:	
  4228  0D3C  1FB9               	btfss	___fladd@b+2,7
  4229  0D3D  2D26               	goto	l4121
  4230  0D3E                     l4137:	
  4231  0D3E  01C8               	clrf	___fladd@aexp
  4232  0D3F  1FCA               	btfss	___fladd@grs,7
  4233  0D40  2D49               	goto	l4147
  4234  0D41  084A               	movf	___fladd@grs,w
  4235  0D42  397F               	andlw	127
  4236  0D43  1903               	btfsc	3,2
  4237  0D44  1837               	btfsc	___fladd@b,0
  4238  0D45  2D47               	goto	l4143
  4239  0D46  2D49               	goto	l4147
  4240  0D47                     l4143:	
  4241  0D47  01C8               	clrf	___fladd@aexp
  4242  0D48  0AC8               	incf	___fladd@aexp,f
  4243  0D49                     l4147:	
  4244  0D49  0848               	movf	___fladd@aexp,w
  4245  0D4A  1903               	btfsc	3,2
  4246  0D4B  2D7C               	goto	l1322
  4247  0D4C  3001               	movlw	1
  4248  0D4D  07B7               	addwf	___fladd@b,f
  4249  0D4E  3000               	movlw	0
  4250  0D4F  1803               	skipnc
  4251  0D50  3001               	movlw	1
  4252  0D51  07B8               	addwf	___fladd@b+1,f
  4253  0D52  3000               	movlw	0
  4254  0D53  1803               	skipnc
  4255  0D54  3001               	movlw	1
  4256  0D55  07B9               	addwf	___fladd@b+2,f
  4257  0D56  3000               	movlw	0
  4258  0D57  1803               	skipnc
  4259  0D58  3001               	movlw	1
  4260  0D59  07BA               	addwf	___fladd@b+3,f
  4261  0D5A  1C3A               	btfss	___fladd@b+3,0
  4262  0D5B  2D7C               	goto	l1322
  4263  0D5C  0837               	movf	___fladd@b,w
  4264  0D5D  00BF               	movwf	??___fladd
  4265  0D5E  0838               	movf	___fladd@b+1,w
  4266  0D5F  00C0               	movwf	??___fladd+1
  4267  0D60  0839               	movf	___fladd@b+2,w
  4268  0D61  00C1               	movwf	??___fladd+2
  4269  0D62  083A               	movf	___fladd@b+3,w
  4270  0D63  00C2               	movwf	??___fladd+3
  4271  0D64  3001               	movlw	1
  4272  0D65  00C3               	movwf	??___fladd+4
  4273  0D66                     u3585:	
  4274  0D66  0D42               	rlf	??___fladd+3,w
  4275  0D67  0CC2               	rrf	??___fladd+3,f
  4276  0D68  0CC1               	rrf	??___fladd+2,f
  4277  0D69  0CC0               	rrf	??___fladd+1,f
  4278  0D6A  0CBF               	rrf	??___fladd,f
  4279  0D6B  0BC3               	decfsz	??___fladd+4,f
  4280  0D6C  2D66               	goto	u3585
  4281  0D6D  0842               	movf	??___fladd+3,w
  4282  0D6E  00BA               	movwf	___fladd@b+3
  4283  0D6F  0841               	movf	??___fladd+2,w
  4284  0D70  00B9               	movwf	___fladd@b+2
  4285  0D71  0840               	movf	??___fladd+1,w
  4286  0D72  00B8               	movwf	___fladd@b+1
  4287  0D73  083F               	movf	??___fladd,w
  4288  0D74  00B7               	movwf	___fladd@b
  4289  0D75  0A49               	incf	___fladd@bexp,w
  4290  0D76  1903               	btfsc	3,2
  4291  0D77  2D7C               	goto	l1322
  4292  0D78  3001               	movlw	1
  4293  0D79  00BF               	movwf	??___fladd
  4294  0D7A  083F               	movf	??___fladd,w
  4295  0D7B  07C9               	addwf	___fladd@bexp,f
  4296  0D7C                     l1322:	
  4297  0D7C  0A49               	incf	___fladd@bexp,w
  4298  0D7D  1D03               	btfss	3,2
  4299  0D7E  0849               	movf	___fladd@bexp,w
  4300  0D7F  1D03               	btfss	3,2
  4301  0D80  2D8C               	goto	l4165
  4302  0D81  3000               	movlw	0
  4303  0D82  00BA               	movwf	___fladd@b+3
  4304  0D83  3000               	movlw	0
  4305  0D84  00B9               	movwf	___fladd@b+2
  4306  0D85  3000               	movlw	0
  4307  0D86  00B8               	movwf	___fladd@b+1
  4308  0D87  3000               	movlw	0
  4309  0D88  00B7               	movwf	___fladd@b
  4310  0D89  0849               	movf	___fladd@bexp,w
  4311  0D8A  1903               	btfsc	3,2
  4312  0D8B  01C7               	clrf	___fladd@signs
  4313  0D8C                     l4165:	
  4314  0D8C  1C49               	btfss	___fladd@bexp,0
  4315  0D8D  2D90               	goto	l4169
  4316  0D8E  17B9               	bsf	___fladd@b+2,7
  4317  0D8F  2D94               	goto	l1330
  4318  0D90                     l4169:	
  4319  0D90  307F               	movlw	127
  4320  0D91  00BF               	movwf	??___fladd
  4321  0D92  083F               	movf	??___fladd,w
  4322  0D93  05B9               	andwf	___fladd@b+2,f
  4323  0D94                     l1330:	
  4324  0D94  0849               	movf	___fladd@bexp,w
  4325  0D95  00BF               	movwf	??___fladd
  4326  0D96  1003               	clrc
  4327  0D97  0C3F               	rrf	??___fladd,w
  4328  0D98  00C0               	movwf	??___fladd+1
  4329  0D99  0840               	movf	??___fladd+1,w
  4330  0D9A  00BA               	movwf	___fladd@b+3
  4331  0D9B  1FC7               	btfss	___fladd@signs,7
  4332  0D9C  0008               	return
  4333  0D9D  17BA               	bsf	___fladd@b+3,7
  4334  0D9E  0008               	return
  4335  0D9F                     __end_of___fladd:	
  4336                           
  4337                           	psect	text5
  4338  10A8                     __ptext5:	
  4339 ;; *************** function ___flge *****************
  4340 ;; Defined at:
  4341 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  ff1             4    0[BANK0 ] unsigned char 
  4344 ;;  ff2             4    4[BANK0 ] unsigned char 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;		None               void
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 300/0
  4353 ;;		On exit  : 300/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4356 ;;      Params:         0       8       0       0       0
  4357 ;;      Locals:         0       0       0       0       0
  4358 ;;      Temps:          0       4       0       0       0
  4359 ;;      Totals:         0      12       0       0       0
  4360 ;;Total ram usage:       12 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    1
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_MediaPlacaVaccum
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function ___flge
  4372  10A8                     ___flge:	
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4376  10A8  3000               	movlw	0
  4377  10A9  0520               	andwf	___flge@ff1,w
  4378  10AA  00A8               	movwf	??___flge
  4379  10AB  3000               	movlw	0
  4380  10AC  0521               	andwf	___flge@ff1+1,w
  4381  10AD  00A9               	movwf	??___flge+1
  4382  10AE  3080               	movlw	128
  4383  10AF  0522               	andwf	___flge@ff1+2,w
  4384  10B0  00AA               	movwf	??___flge+2
  4385  10B1  307F               	movlw	127
  4386  10B2  0523               	andwf	___flge@ff1+3,w
  4387  10B3  00AB               	movwf	??___flge+3
  4388  10B4  082B               	movf	??___flge+3,w
  4389  10B5  042A               	iorwf	??___flge+2,w
  4390  10B6  0429               	iorwf	??___flge+1,w
  4391  10B7  0428               	iorwf	??___flge,w
  4392  10B8  1D03               	skipz
  4393  10B9  28C2               	goto	l1169
  4394  10BA  3000               	movlw	0
  4395  10BB  00A3               	movwf	___flge@ff1+3
  4396  10BC  3000               	movlw	0
  4397  10BD  00A2               	movwf	___flge@ff1+2
  4398  10BE  3000               	movlw	0
  4399  10BF  00A1               	movwf	___flge@ff1+1
  4400  10C0  3000               	movlw	0
  4401  10C1  00A0               	movwf	___flge@ff1
  4402  10C2                     l1169:	
  4403  10C2  3000               	movlw	0
  4404  10C3  0524               	andwf	___flge@ff2,w
  4405  10C4  00A8               	movwf	??___flge
  4406  10C5  3000               	movlw	0
  4407  10C6  0525               	andwf	___flge@ff2+1,w
  4408  10C7  00A9               	movwf	??___flge+1
  4409  10C8  3080               	movlw	128
  4410  10C9  0526               	andwf	___flge@ff2+2,w
  4411  10CA  00AA               	movwf	??___flge+2
  4412  10CB  307F               	movlw	127
  4413  10CC  0527               	andwf	___flge@ff2+3,w
  4414  10CD  00AB               	movwf	??___flge+3
  4415  10CE  082B               	movf	??___flge+3,w
  4416  10CF  042A               	iorwf	??___flge+2,w
  4417  10D0  0429               	iorwf	??___flge+1,w
  4418  10D1  0428               	iorwf	??___flge,w
  4419  10D2  1D03               	skipz
  4420  10D3  28DC               	goto	l4825
  4421  10D4  3000               	movlw	0
  4422  10D5  00A7               	movwf	___flge@ff2+3
  4423  10D6  3000               	movlw	0
  4424  10D7  00A6               	movwf	___flge@ff2+2
  4425  10D8  3000               	movlw	0
  4426  10D9  00A5               	movwf	___flge@ff2+1
  4427  10DA  3000               	movlw	0
  4428  10DB  00A4               	movwf	___flge@ff2
  4429  10DC                     l4825:	
  4430  10DC  1FA3               	btfss	___flge@ff1+3,7
  4431  10DD  2902               	goto	l4829
  4432  10DE  3000               	movlw	0
  4433  10DF  00A8               	movwf	??___flge
  4434  10E0  3000               	movlw	0
  4435  10E1  00A9               	movwf	??___flge+1
  4436  10E2  3000               	movlw	0
  4437  10E3  00AA               	movwf	??___flge+2
  4438  10E4  3080               	movlw	128
  4439  10E5  00AB               	movwf	??___flge+3
  4440  10E6  0820               	movf	___flge@ff1,w
  4441  10E7  02A8               	subwf	??___flge,f
  4442  10E8  0821               	movf	___flge@ff1+1,w
  4443  10E9  1C03               	skipc
  4444  10EA  0F21               	incfsz	___flge@ff1+1,w
  4445  10EB  28ED               	goto	u4551
  4446  10EC  28EE               	goto	u4552
  4447  10ED                     u4551:	
  4448  10ED  02A9               	subwf	??___flge+1,f
  4449  10EE                     u4552:	
  4450  10EE  0822               	movf	___flge@ff1+2,w
  4451  10EF  1C03               	skipc
  4452  10F0  0F22               	incfsz	___flge@ff1+2,w
  4453  10F1  28F3               	goto	u4553
  4454  10F2  28F4               	goto	u4554
  4455  10F3                     u4553:	
  4456  10F3  02AA               	subwf	??___flge+2,f
  4457  10F4                     u4554:	
  4458  10F4  0823               	movf	___flge@ff1+3,w
  4459  10F5  1C03               	skipc
  4460  10F6  0F23               	incfsz	___flge@ff1+3,w
  4461  10F7  28F9               	goto	u4555
  4462  10F8  28FA               	goto	u4556
  4463  10F9                     u4555:	
  4464  10F9  02AB               	subwf	??___flge+3,f
  4465  10FA                     u4556:	
  4466  10FA  082B               	movf	??___flge+3,w
  4467  10FB  00A3               	movwf	___flge@ff1+3
  4468  10FC  082A               	movf	??___flge+2,w
  4469  10FD  00A2               	movwf	___flge@ff1+2
  4470  10FE  0829               	movf	??___flge+1,w
  4471  10FF  00A1               	movwf	___flge@ff1+1
  4472  1100  0828               	movf	??___flge,w
  4473  1101  00A0               	movwf	___flge@ff1
  4474  1102                     l4829:	
  4475  1102  1FA7               	btfss	___flge@ff2+3,7
  4476  1103  2928               	goto	l1172
  4477  1104  3000               	movlw	0
  4478  1105  00A8               	movwf	??___flge
  4479  1106  3000               	movlw	0
  4480  1107  00A9               	movwf	??___flge+1
  4481  1108  3000               	movlw	0
  4482  1109  00AA               	movwf	??___flge+2
  4483  110A  3080               	movlw	128
  4484  110B  00AB               	movwf	??___flge+3
  4485  110C  0824               	movf	___flge@ff2,w
  4486  110D  02A8               	subwf	??___flge,f
  4487  110E  0825               	movf	___flge@ff2+1,w
  4488  110F  1C03               	skipc
  4489  1110  0F25               	incfsz	___flge@ff2+1,w
  4490  1111  2913               	goto	u4571
  4491  1112  2914               	goto	u4572
  4492  1113                     u4571:	
  4493  1113  02A9               	subwf	??___flge+1,f
  4494  1114                     u4572:	
  4495  1114  0826               	movf	___flge@ff2+2,w
  4496  1115  1C03               	skipc
  4497  1116  0F26               	incfsz	___flge@ff2+2,w
  4498  1117  2919               	goto	u4573
  4499  1118  291A               	goto	u4574
  4500  1119                     u4573:	
  4501  1119  02AA               	subwf	??___flge+2,f
  4502  111A                     u4574:	
  4503  111A  0827               	movf	___flge@ff2+3,w
  4504  111B  1C03               	skipc
  4505  111C  0F27               	incfsz	___flge@ff2+3,w
  4506  111D  291F               	goto	u4575
  4507  111E  2920               	goto	u4576
  4508  111F                     u4575:	
  4509  111F  02AB               	subwf	??___flge+3,f
  4510  1120                     u4576:	
  4511  1120  082B               	movf	??___flge+3,w
  4512  1121  00A7               	movwf	___flge@ff2+3
  4513  1122  082A               	movf	??___flge+2,w
  4514  1123  00A6               	movwf	___flge@ff2+2
  4515  1124  0829               	movf	??___flge+1,w
  4516  1125  00A5               	movwf	___flge@ff2+1
  4517  1126  0828               	movf	??___flge,w
  4518  1127  00A4               	movwf	___flge@ff2
  4519  1128                     l1172:	
  4520  1128  3080               	movlw	128
  4521  1129  06A3               	xorwf	___flge@ff1+3,f
  4522  112A  3080               	movlw	128
  4523  112B  06A7               	xorwf	___flge@ff2+3,f
  4524  112C  0827               	movf	___flge@ff2+3,w
  4525  112D  0223               	subwf	___flge@ff1+3,w
  4526  112E  1D03               	skipz
  4527  112F  0008               	return
  4528  1130  0826               	movf	___flge@ff2+2,w
  4529  1131  0222               	subwf	___flge@ff1+2,w
  4530  1132  1D03               	skipz
  4531  1133  0008               	return
  4532  1134  0825               	movf	___flge@ff2+1,w
  4533  1135  0221               	subwf	___flge@ff1+1,w
  4534  1136  1D03               	skipz
  4535  1137  0008               	return
  4536  1138  0824               	movf	___flge@ff2,w
  4537  1139  0220               	subwf	___flge@ff1,w
  4538  113A  0008               	return
  4539  113B                     __end_of___flge:	
  4540                           
  4541                           	psect	text6
  4542  09D1                     __ptext6:	
  4543 ;; *************** function ___fldiv *****************
  4544 ;; Defined at:
  4545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  a               4   14[BANK0 ] unsigned char 
  4548 ;;  b               4   18[BANK0 ] unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  grs             4   34[BANK0 ] unsigned long 
  4551 ;;  rem             4   27[BANK0 ] unsigned long 
  4552 ;;  new_exp         2   32[BANK0 ] int 
  4553 ;;  aexp            1   39[BANK0 ] unsigned char 
  4554 ;;  bexp            1   38[BANK0 ] unsigned char 
  4555 ;;  sign            1   31[BANK0 ] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  4   14[BANK0 ] unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, btemp+1
  4560 ;; Tracked objects:
  4561 ;;		On entry : 300/0
  4562 ;;		On exit  : 300/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       8       0       0       0
  4566 ;;      Locals:         0      13       0       0       0
  4567 ;;      Temps:          0       5       0       0       0
  4568 ;;      Totals:         0      26       0       0       0
  4569 ;;Total ram usage:       26 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_MediaPlacaVaccum
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function ___fldiv
  4581  09D1                     ___fldiv:	
  4582                           
  4583                           ;incstack = 0
  4584                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4585  09D1  0835               	movf	___fldiv@b+3,w
  4586  09D2  3980               	andlw	128
  4587  09D3  00B6               	movwf	??___fldiv
  4588  09D4  0836               	movf	??___fldiv,w
  4589  09D5  00BF               	movwf	___fldiv@sign
  4590  09D6  0835               	movf	___fldiv@b+3,w
  4591  09D7  00B6               	movwf	??___fldiv
  4592  09D8  0736               	addwf	??___fldiv,w
  4593  09D9  00B7               	movwf	??___fldiv+1
  4594  09DA  0837               	movf	??___fldiv+1,w
  4595  09DB  00C6               	movwf	___fldiv@bexp
  4596  09DC  1BB4               	btfsc	___fldiv@b+2,7
  4597  09DD  1446               	bsf	___fldiv@bexp,0
  4598  09DE  0846               	movf	___fldiv@bexp,w
  4599  09DF  1903               	btfsc	3,2
  4600  09E0  29EF               	goto	l4863
  4601  09E1  0A46               	incf	___fldiv@bexp,w
  4602  09E2  1D03               	btfss	3,2
  4603  09E3  29EC               	goto	l4859
  4604  09E4  3000               	movlw	0
  4605  09E5  00B5               	movwf	___fldiv@b+3
  4606  09E6  3000               	movlw	0
  4607  09E7  00B4               	movwf	___fldiv@b+2
  4608  09E8  3000               	movlw	0
  4609  09E9  00B3               	movwf	___fldiv@b+1
  4610  09EA  3000               	movlw	0
  4611  09EB  00B2               	movwf	___fldiv@b
  4612  09EC                     l4859:	
  4613  09EC  17B4               	bsf	___fldiv@b+2,7
  4614  09ED  01B5               	clrf	___fldiv@b+3
  4615  09EE  29F7               	goto	l4865
  4616  09EF                     l4863:	
  4617  09EF  3000               	movlw	0
  4618  09F0  00B5               	movwf	___fldiv@b+3
  4619  09F1  3000               	movlw	0
  4620  09F2  00B4               	movwf	___fldiv@b+2
  4621  09F3  3000               	movlw	0
  4622  09F4  00B3               	movwf	___fldiv@b+1
  4623  09F5  3000               	movlw	0
  4624  09F6  00B2               	movwf	___fldiv@b
  4625  09F7                     l4865:	
  4626  09F7  0831               	movf	___fldiv@a+3,w
  4627  09F8  3980               	andlw	128
  4628  09F9  00B6               	movwf	??___fldiv
  4629  09FA  0836               	movf	??___fldiv,w
  4630  09FB  06BF               	xorwf	___fldiv@sign,f
  4631  09FC  0831               	movf	___fldiv@a+3,w
  4632  09FD  00B6               	movwf	??___fldiv
  4633  09FE  0736               	addwf	??___fldiv,w
  4634  09FF  00B7               	movwf	??___fldiv+1
  4635  0A00  0837               	movf	??___fldiv+1,w
  4636  0A01  00C7               	movwf	___fldiv@aexp
  4637  0A02  1BB0               	btfsc	___fldiv@a+2,7
  4638  0A03  1447               	bsf	___fldiv@aexp,0
  4639  0A04  0847               	movf	___fldiv@aexp,w
  4640  0A05  1903               	btfsc	3,2
  4641  0A06  2A15               	goto	l4883
  4642  0A07  0A47               	incf	___fldiv@aexp,w
  4643  0A08  1D03               	btfss	3,2
  4644  0A09  2A12               	goto	l4879
  4645  0A0A  3000               	movlw	0
  4646  0A0B  00B1               	movwf	___fldiv@a+3
  4647  0A0C  3000               	movlw	0
  4648  0A0D  00B0               	movwf	___fldiv@a+2
  4649  0A0E  3000               	movlw	0
  4650  0A0F  00AF               	movwf	___fldiv@a+1
  4651  0A10  3000               	movlw	0
  4652  0A11  00AE               	movwf	___fldiv@a
  4653  0A12                     l4879:	
  4654  0A12  17B0               	bsf	___fldiv@a+2,7
  4655  0A13  01B1               	clrf	___fldiv@a+3
  4656  0A14  2A1D               	goto	l1344
  4657  0A15                     l4883:	
  4658  0A15  3000               	movlw	0
  4659  0A16  00B1               	movwf	___fldiv@a+3
  4660  0A17  3000               	movlw	0
  4661  0A18  00B0               	movwf	___fldiv@a+2
  4662  0A19  3000               	movlw	0
  4663  0A1A  00AF               	movwf	___fldiv@a+1
  4664  0A1B  3000               	movlw	0
  4665  0A1C  00AE               	movwf	___fldiv@a
  4666  0A1D                     l1344:	
  4667  0A1D  0831               	movf	___fldiv@a+3,w
  4668  0A1E  0430               	iorwf	___fldiv@a+2,w
  4669  0A1F  042F               	iorwf	___fldiv@a+1,w
  4670  0A20  042E               	iorwf	___fldiv@a,w
  4671  0A21  1D03               	skipz
  4672  0A22  2A3C               	goto	l4893
  4673  0A23  3000               	movlw	0
  4674  0A24  00B5               	movwf	___fldiv@b+3
  4675  0A25  3000               	movlw	0
  4676  0A26  00B4               	movwf	___fldiv@b+2
  4677  0A27  3000               	movlw	0
  4678  0A28  00B3               	movwf	___fldiv@b+1
  4679  0A29  3000               	movlw	0
  4680  0A2A  00B2               	movwf	___fldiv@b
  4681  0A2B  3080               	movlw	128
  4682  0A2C  04B4               	iorwf	___fldiv@b+2,f
  4683  0A2D  307F               	movlw	127
  4684  0A2E  04B5               	iorwf	___fldiv@b+3,f
  4685  0A2F                     L6:	
  4686  0A2F  083F               	movf	___fldiv@sign,w
  4687  0A30  00B6               	movwf	??___fldiv
  4688  0A31  0836               	movf	??___fldiv,w
  4689  0A32  04B5               	iorwf	___fldiv@b+3,f
  4690  0A33  0835               	movf	___fldiv@b+3,w
  4691  0A34  00B1               	movwf	?___fldiv+3
  4692  0A35  0834               	movf	___fldiv@b+2,w
  4693  0A36  00B0               	movwf	?___fldiv+2
  4694  0A37  0833               	movf	___fldiv@b+1,w
  4695  0A38  00AF               	movwf	?___fldiv+1
  4696  0A39  0832               	movf	___fldiv@b,w
  4697  0A3A  00AE               	movwf	?___fldiv
  4698  0A3B  0008               	return
  4699  0A3C                     l4893:	
  4700  0A3C  0846               	movf	___fldiv@bexp,w
  4701  0A3D  1D03               	btfss	3,2
  4702  0A3E  2A48               	goto	l4899
  4703  0A3F  3000               	movlw	0
  4704  0A40  00B1               	movwf	?___fldiv+3
  4705  0A41  3000               	movlw	0
  4706  0A42  00B0               	movwf	?___fldiv+2
  4707  0A43  3000               	movlw	0
  4708  0A44  00AF               	movwf	?___fldiv+1
  4709  0A45  3000               	movlw	0
  4710  0A46  00AE               	movwf	?___fldiv
  4711  0A47  0008               	return
  4712  0A48                     l4899:	
  4713  0A48  0846               	movf	___fldiv@bexp,w
  4714  0A49  00B6               	movwf	??___fldiv
  4715  0A4A  01B7               	clrf	??___fldiv+1
  4716  0A4B  0837               	movf	??___fldiv+1,w
  4717  0A4C  00B9               	movwf	??___fldiv+3
  4718  0A4D  0847               	movf	___fldiv@aexp,w
  4719  0A4E  0236               	subwf	??___fldiv,w
  4720  0A4F  00B8               	movwf	??___fldiv+2
  4721  0A50  1C03               	skipc
  4722  0A51  03B9               	decf	??___fldiv+3,f
  4723  0A52  0838               	movf	??___fldiv+2,w
  4724  0A53  3E7F               	addlw	127
  4725  0A54  00C0               	movwf	___fldiv@new_exp
  4726  0A55  0839               	movf	??___fldiv+3,w
  4727  0A56  1803               	skipnc
  4728  0A57  3E01               	addlw	1
  4729  0A58  3E00               	addlw	0
  4730  0A59  00C1               	movwf	___fldiv@new_exp+1
  4731  0A5A  0835               	movf	___fldiv@b+3,w
  4732  0A5B  00BE               	movwf	___fldiv@rem+3
  4733  0A5C  0834               	movf	___fldiv@b+2,w
  4734  0A5D  00BD               	movwf	___fldiv@rem+2
  4735  0A5E  0833               	movf	___fldiv@b+1,w
  4736  0A5F  00BC               	movwf	___fldiv@rem+1
  4737  0A60  0832               	movf	___fldiv@b,w
  4738  0A61  00BB               	movwf	___fldiv@rem
  4739  0A62  3000               	movlw	0
  4740  0A63  00B5               	movwf	___fldiv@b+3
  4741  0A64  3000               	movlw	0
  4742  0A65  00B4               	movwf	___fldiv@b+2
  4743  0A66  3000               	movlw	0
  4744  0A67  00B3               	movwf	___fldiv@b+1
  4745  0A68  3000               	movlw	0
  4746  0A69  00B2               	movwf	___fldiv@b
  4747  0A6A  3000               	movlw	0
  4748  0A6B  00C5               	movwf	___fldiv@grs+3
  4749  0A6C  3000               	movlw	0
  4750  0A6D  00C4               	movwf	___fldiv@grs+2
  4751  0A6E  3000               	movlw	0
  4752  0A6F  00C3               	movwf	___fldiv@grs+1
  4753  0A70  3000               	movlw	0
  4754  0A71  00C2               	movwf	___fldiv@grs
  4755  0A72  01C7               	clrf	___fldiv@aexp
  4756  0A73                     l4927:	
  4757  0A73  301A               	movlw	26
  4758  0A74  0247               	subwf	___fldiv@aexp,w
  4759  0A75  1803               	btfsc	3,0
  4760  0A76  2ABB               	goto	l4929
  4761  0A77  0847               	movf	___fldiv@aexp,w
  4762  0A78  1903               	btfsc	3,2
  4763  0A79  2A97               	goto	l4919
  4764  0A7A  3001               	movlw	1
  4765  0A7B  00B6               	movwf	??___fldiv
  4766  0A7C                     u4685:	
  4767  0A7C  1003               	clrc
  4768  0A7D  0DBB               	rlf	___fldiv@rem,f
  4769  0A7E  0DBC               	rlf	___fldiv@rem+1,f
  4770  0A7F  0DBD               	rlf	___fldiv@rem+2,f
  4771  0A80  0DBE               	rlf	___fldiv@rem+3,f
  4772  0A81  0BB6               	decfsz	??___fldiv,f
  4773  0A82  2A7C               	goto	u4685
  4774  0A83  3001               	movlw	1
  4775  0A84  00B6               	movwf	??___fldiv
  4776  0A85                     u4695:	
  4777  0A85  1003               	clrc
  4778  0A86  0DB2               	rlf	___fldiv@b,f
  4779  0A87  0DB3               	rlf	___fldiv@b+1,f
  4780  0A88  0DB4               	rlf	___fldiv@b+2,f
  4781  0A89  0DB5               	rlf	___fldiv@b+3,f
  4782  0A8A  0BB6               	decfsz	??___fldiv,f
  4783  0A8B  2A85               	goto	u4695
  4784  0A8C  1BC5               	btfsc	___fldiv@grs+3,7
  4785  0A8D  1432               	bsf	___fldiv@b,0
  4786  0A8E  3001               	movlw	1
  4787  0A8F  00B6               	movwf	??___fldiv
  4788  0A90                     u4715:	
  4789  0A90  1003               	clrc
  4790  0A91  0DC2               	rlf	___fldiv@grs,f
  4791  0A92  0DC3               	rlf	___fldiv@grs+1,f
  4792  0A93  0DC4               	rlf	___fldiv@grs+2,f
  4793  0A94  0DC5               	rlf	___fldiv@grs+3,f
  4794  0A95  0BB6               	decfsz	??___fldiv,f
  4795  0A96  2A90               	goto	u4715
  4796  0A97                     l4919:	
  4797  0A97  0831               	movf	___fldiv@a+3,w
  4798  0A98  023E               	subwf	___fldiv@rem+3,w
  4799  0A99  1D03               	skipz
  4800  0A9A  2AA5               	goto	u4725
  4801  0A9B  0830               	movf	___fldiv@a+2,w
  4802  0A9C  023D               	subwf	___fldiv@rem+2,w
  4803  0A9D  1D03               	skipz
  4804  0A9E  2AA5               	goto	u4725
  4805  0A9F  082F               	movf	___fldiv@a+1,w
  4806  0AA0  023C               	subwf	___fldiv@rem+1,w
  4807  0AA1  1D03               	skipz
  4808  0AA2  2AA5               	goto	u4725
  4809  0AA3  082E               	movf	___fldiv@a,w
  4810  0AA4  023B               	subwf	___fldiv@rem,w
  4811  0AA5                     u4725:	
  4812  0AA5  1C03               	skipc
  4813  0AA6  2AB6               	goto	l4925
  4814  0AA7  1745               	bsf	___fldiv@grs+3,6
  4815  0AA8  082E               	movf	___fldiv@a,w
  4816  0AA9  02BB               	subwf	___fldiv@rem,f
  4817  0AAA  082F               	movf	___fldiv@a+1,w
  4818  0AAB  1C03               	skipc
  4819  0AAC  0F2F               	incfsz	___fldiv@a+1,w
  4820  0AAD  02BC               	subwf	___fldiv@rem+1,f
  4821  0AAE  0830               	movf	___fldiv@a+2,w
  4822  0AAF  1C03               	skipc
  4823  0AB0  0F30               	incfsz	___fldiv@a+2,w
  4824  0AB1  02BD               	subwf	___fldiv@rem+2,f
  4825  0AB2  0831               	movf	___fldiv@a+3,w
  4826  0AB3  1C03               	skipc
  4827  0AB4  0F31               	incfsz	___fldiv@a+3,w
  4828  0AB5  02BE               	subwf	___fldiv@rem+3,f
  4829  0AB6                     l4925:	
  4830  0AB6  3001               	movlw	1
  4831  0AB7  00B6               	movwf	??___fldiv
  4832  0AB8  0836               	movf	??___fldiv,w
  4833  0AB9  07C7               	addwf	___fldiv@aexp,f
  4834  0ABA  2A73               	goto	l4927
  4835  0ABB                     l4929:	
  4836  0ABB  083E               	movf	___fldiv@rem+3,w
  4837  0ABC  043D               	iorwf	___fldiv@rem+2,w
  4838  0ABD  043C               	iorwf	___fldiv@rem+1,w
  4839  0ABE  043B               	iorwf	___fldiv@rem,w
  4840  0ABF  1D03               	btfss	3,2
  4841  0AC0  1442               	bsf	___fldiv@grs,0
  4842  0AC1                     l4943:	
  4843  0AC1  1BB4               	btfsc	___fldiv@b+2,7
  4844  0AC2  2ADE               	goto	l4945
  4845  0AC3  3001               	movlw	1
  4846  0AC4  00B6               	movwf	??___fldiv
  4847  0AC5                     u4755:	
  4848  0AC5  1003               	clrc
  4849  0AC6  0DB2               	rlf	___fldiv@b,f
  4850  0AC7  0DB3               	rlf	___fldiv@b+1,f
  4851  0AC8  0DB4               	rlf	___fldiv@b+2,f
  4852  0AC9  0DB5               	rlf	___fldiv@b+3,f
  4853  0ACA  0BB6               	decfsz	??___fldiv,f
  4854  0ACB  2AC5               	goto	u4755
  4855  0ACC  1BC5               	btfsc	___fldiv@grs+3,7
  4856  0ACD  1432               	bsf	___fldiv@b,0
  4857  0ACE  3001               	movlw	1
  4858  0ACF  00B6               	movwf	??___fldiv
  4859  0AD0                     u4775:	
  4860  0AD0  1003               	clrc
  4861  0AD1  0DC2               	rlf	___fldiv@grs,f
  4862  0AD2  0DC3               	rlf	___fldiv@grs+1,f
  4863  0AD3  0DC4               	rlf	___fldiv@grs+2,f
  4864  0AD4  0DC5               	rlf	___fldiv@grs+3,f
  4865  0AD5  0BB6               	decfsz	??___fldiv,f
  4866  0AD6  2AD0               	goto	u4775
  4867  0AD7  30FF               	movlw	255
  4868  0AD8  07C0               	addwf	___fldiv@new_exp,f
  4869  0AD9  1803               	skipnc
  4870  0ADA  0AC1               	incf	___fldiv@new_exp+1,f
  4871  0ADB  30FF               	movlw	255
  4872  0ADC  07C1               	addwf	___fldiv@new_exp+1,f
  4873  0ADD  2AC1               	goto	l4943
  4874  0ADE                     l4945:	
  4875  0ADE  01C7               	clrf	___fldiv@aexp
  4876  0ADF  1FC5               	btfss	___fldiv@grs+3,7
  4877  0AE0  2AF7               	goto	l4955
  4878  0AE1  30FF               	movlw	255
  4879  0AE2  0542               	andwf	___fldiv@grs,w
  4880  0AE3  00B6               	movwf	??___fldiv
  4881  0AE4  30FF               	movlw	255
  4882  0AE5  0543               	andwf	___fldiv@grs+1,w
  4883  0AE6  00B7               	movwf	??___fldiv+1
  4884  0AE7  30FF               	movlw	255
  4885  0AE8  0544               	andwf	___fldiv@grs+2,w
  4886  0AE9  00B8               	movwf	??___fldiv+2
  4887  0AEA  307F               	movlw	127
  4888  0AEB  0545               	andwf	___fldiv@grs+3,w
  4889  0AEC  00B9               	movwf	??___fldiv+3
  4890  0AED  0839               	movf	??___fldiv+3,w
  4891  0AEE  0438               	iorwf	??___fldiv+2,w
  4892  0AEF  0437               	iorwf	??___fldiv+1,w
  4893  0AF0  0436               	iorwf	??___fldiv,w
  4894  0AF1  1903               	skipnz
  4895  0AF2  1832               	btfsc	___fldiv@b,0
  4896  0AF3  2AF5               	goto	l4951
  4897  0AF4  2AF7               	goto	l4955
  4898  0AF5                     l4951:	
  4899  0AF5  01C7               	clrf	___fldiv@aexp
  4900  0AF6  0AC7               	incf	___fldiv@aexp,f
  4901  0AF7                     l4955:	
  4902  0AF7  0847               	movf	___fldiv@aexp,w
  4903  0AF8  1903               	btfsc	3,2
  4904  0AF9  2B29               	goto	l4965
  4905  0AFA  3001               	movlw	1
  4906  0AFB  07B2               	addwf	___fldiv@b,f
  4907  0AFC  3000               	movlw	0
  4908  0AFD  1803               	skipnc
  4909  0AFE  3001               	movlw	1
  4910  0AFF  07B3               	addwf	___fldiv@b+1,f
  4911  0B00  3000               	movlw	0
  4912  0B01  1803               	skipnc
  4913  0B02  3001               	movlw	1
  4914  0B03  07B4               	addwf	___fldiv@b+2,f
  4915  0B04  3000               	movlw	0
  4916  0B05  1803               	skipnc
  4917  0B06  3001               	movlw	1
  4918  0B07  07B5               	addwf	___fldiv@b+3,f
  4919  0B08  1C35               	btfss	___fldiv@b+3,0
  4920  0B09  2B29               	goto	l4965
  4921  0B0A  0832               	movf	___fldiv@b,w
  4922  0B0B  00B6               	movwf	??___fldiv
  4923  0B0C  0833               	movf	___fldiv@b+1,w
  4924  0B0D  00B7               	movwf	??___fldiv+1
  4925  0B0E  0834               	movf	___fldiv@b+2,w
  4926  0B0F  00B8               	movwf	??___fldiv+2
  4927  0B10  0835               	movf	___fldiv@b+3,w
  4928  0B11  00B9               	movwf	??___fldiv+3
  4929  0B12  3001               	movlw	1
  4930  0B13  00BA               	movwf	??___fldiv+4
  4931  0B14                     u4845:	
  4932  0B14  0D39               	rlf	??___fldiv+3,w
  4933  0B15  0CB9               	rrf	??___fldiv+3,f
  4934  0B16  0CB8               	rrf	??___fldiv+2,f
  4935  0B17  0CB7               	rrf	??___fldiv+1,f
  4936  0B18  0CB6               	rrf	??___fldiv,f
  4937  0B19  0BBA               	decfsz	??___fldiv+4,f
  4938  0B1A  2B14               	goto	u4845
  4939  0B1B  0839               	movf	??___fldiv+3,w
  4940  0B1C  00B5               	movwf	___fldiv@b+3
  4941  0B1D  0838               	movf	??___fldiv+2,w
  4942  0B1E  00B4               	movwf	___fldiv@b+2
  4943  0B1F  0837               	movf	??___fldiv+1,w
  4944  0B20  00B3               	movwf	___fldiv@b+1
  4945  0B21  0836               	movf	??___fldiv,w
  4946  0B22  00B2               	movwf	___fldiv@b
  4947  0B23  3001               	movlw	1
  4948  0B24  07C0               	addwf	___fldiv@new_exp,f
  4949  0B25  1803               	skipnc
  4950  0B26  0AC1               	incf	___fldiv@new_exp+1,f
  4951  0B27  3000               	movlw	0
  4952  0B28  07C1               	addwf	___fldiv@new_exp+1,f
  4953  0B29                     l4965:	
  4954  0B29  0841               	movf	___fldiv@new_exp+1,w
  4955  0B2A  3A80               	xorlw	128
  4956  0B2B  00FF               	movwf	127
  4957  0B2C  3080               	movlw	128
  4958  0B2D  027F               	subwf	127,w
  4959  0B2E  1D03               	skipz
  4960  0B2F  2B32               	goto	u4855
  4961  0B30  30FF               	movlw	255
  4962  0B31  0240               	subwf	___fldiv@new_exp,w
  4963  0B32                     u4855:	
  4964  0B32  1C03               	skipc
  4965  0B33  2B42               	goto	l4969
  4966  0B34  30FF               	movlw	255
  4967  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0B37  00C0               	movwf	___fldiv@new_exp
  4970  0B38  3000               	movlw	0
  4971  0B39  00C1               	movwf	___fldiv@new_exp+1
  4972  0B3A  3000               	movlw	0
  4973  0B3B  00B5               	movwf	___fldiv@b+3
  4974  0B3C  3000               	movlw	0
  4975  0B3D  00B4               	movwf	___fldiv@b+2
  4976  0B3E  3000               	movlw	0
  4977  0B3F  00B3               	movwf	___fldiv@b+1
  4978  0B40  3000               	movlw	0
  4979  0B41  00B2               	movwf	___fldiv@b
  4980  0B42                     l4969:	
  4981  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  4982  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  4983  0B44  0841               	movf	___fldiv@new_exp+1,w
  4984  0B45  3A80               	xorlw	128
  4985  0B46  00FF               	movwf	127
  4986  0B47  3080               	movlw	128
  4987  0B48  027F               	subwf	127,w
  4988  0B49  1D03               	skipz
  4989  0B4A  2B4D               	goto	u4865
  4990  0B4B  3001               	movlw	1
  4991  0B4C  0240               	subwf	___fldiv@new_exp,w
  4992  0B4D                     u4865:	
  4993  0B4D  1803               	skipnc
  4994  0B4E  2B5C               	goto	l1366
  4995  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0B51  01C0               	clrf	___fldiv@new_exp
  4998  0B52  01C1               	clrf	___fldiv@new_exp+1
  4999  0B53  3000               	movlw	0
  5000  0B54  00B5               	movwf	___fldiv@b+3
  5001  0B55  3000               	movlw	0
  5002  0B56  00B4               	movwf	___fldiv@b+2
  5003  0B57  3000               	movlw	0
  5004  0B58  00B3               	movwf	___fldiv@b+1
  5005  0B59  3000               	movlw	0
  5006  0B5A  00B2               	movwf	___fldiv@b
  5007  0B5B  01BF               	clrf	___fldiv@sign
  5008  0B5C                     l1366:	
  5009  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0B5E  0840               	movf	___fldiv@new_exp,w
  5012  0B5F  00B6               	movwf	??___fldiv
  5013  0B60  0836               	movf	??___fldiv,w
  5014  0B61  00C6               	movwf	___fldiv@bexp
  5015  0B62  1C46               	btfss	___fldiv@bexp,0
  5016  0B63  2B66               	goto	l4981
  5017  0B64  17B4               	bsf	___fldiv@b+2,7
  5018  0B65  2B6A               	goto	l1368
  5019  0B66                     l4981:	
  5020  0B66  307F               	movlw	127
  5021  0B67  00B6               	movwf	??___fldiv
  5022  0B68  0836               	movf	??___fldiv,w
  5023  0B69  05B4               	andwf	___fldiv@b+2,f
  5024  0B6A                     l1368:	
  5025  0B6A  0846               	movf	___fldiv@bexp,w
  5026  0B6B  00B6               	movwf	??___fldiv
  5027  0B6C  1003               	clrc
  5028  0B6D  0C36               	rrf	??___fldiv,w
  5029  0B6E  00B7               	movwf	??___fldiv+1
  5030  0B6F  0837               	movf	??___fldiv+1,w
  5031  0B70  00B5               	movwf	___fldiv@b+3
  5032  0B71  2A2F               	goto	L6
  5033  0B72                     __end_of___fldiv:	
  5034                           
  5035                           	psect	text7
  5036  1A4C                     __ptext7:	
  5037 ;; *************** function _Package_Usart_is_for_me *****************
  5038 ;; Defined at:
  5039 ;;		line 8 in file "protocolo.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  retorno         1    0[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 300/0
  5050 ;;		On exit  : 300/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       0       0       0       0
  5054 ;;      Locals:         0       1       0       0       0
  5055 ;;      Temps:          0       0       0       0       0
  5056 ;;      Totals:         0       1       0       0       0
  5057 ;;Total ram usage:        1 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_MediaPlacaVaccum
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _Package_Usart_is_for_me
  5069  1A4C                     _Package_Usart_is_for_me:	
  5070                           
  5071                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5075  1A4C  1C6C               	btfss	_generic_status,0
  5076  1A4D  2A5C               	goto	l4787
  5077                           
  5078                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5079  1A4E  1703               	bsf	3,6	;RP1=1, select bank2
  5080  1A4F  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5081  1A50  1303               	bcf	3,6	;RP1=0, select bank0
  5082  1A51  0669               	xorwf	_Board_Number,w
  5083  1A52  1903               	skipnz
  5084  1A53  2A58               	goto	l815
  5085  1A54  1703               	bsf	3,6	;RP1=1, select bank2
  5086  1A55  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5087  1A56  1D03               	btfss	3,2
  5088  1A57  2A5C               	goto	l4787
  5089  1A58                     l815:	
  5090                           
  5091                           ;protocolo.c: 13:             retorno=1;
  5092  1A58  1303               	bcf	3,6	;RP1=0, select bank0
  5093  1A59  01A0               	clrf	Package_Usart_is_for_me@retorno
  5094  1A5A  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5095  1A5B  2A5E               	goto	l4791
  5096  1A5C                     l4787:	
  5097                           
  5098                           ;protocolo.c: 15:             retorno=0;
  5099  1A5C  1303               	bcf	3,6	;RP1=0, select bank0
  5100  1A5D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5101  1A5E                     l4791:	
  5102                           
  5103                           ;protocolo.c: 21:      return retorno;
  5104  1A5E  0820               	movf	Package_Usart_is_for_me@retorno,w
  5105  1A5F  0008               	return
  5106  1A60                     __end_of_Package_Usart_is_for_me:	
  5107                           
  5108                           	psect	text8
  5109  1F40                     __ptext8:	
  5110 ;; *************** function _ADC_Media_10bits *****************
  5111 ;; Defined at:
  5112 ;;		line 20 in file "adc.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  canal           1    wreg     unsigned char 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  canal           1   19[BANK0 ] unsigned char 
  5117 ;;  value           2   20[BANK0 ] unsigned int 
  5118 ;;  i               1   22[BANK0 ] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  4   14[BANK0 ] float 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 300/0
  5125 ;;		On exit  : 300/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5128 ;;      Params:         0       4       0       0       0
  5129 ;;      Locals:         0       4       0       0       0
  5130 ;;      Temps:          0       1       0       0       0
  5131 ;;      Totals:         0       9       0       0       0
  5132 ;;Total ram usage:        9 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    2
  5135 ;; This function calls:
  5136 ;;		___lwdiv
  5137 ;;		___xxtofl
  5138 ;;		_captura
  5139 ;;		_my_delay_ms
  5140 ;; This function is called by:
  5141 ;;		_MediaPlacaVaccum
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _ADC_Media_10bits
  5147  1F40                     _ADC_Media_10bits:	
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5151                           ;ADC_Media_10bits@canal stored from wreg
  5152  1F40  00B3               	movwf	ADC_Media_10bits@canal
  5153                           
  5154                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5155  1F41  0833               	movf	ADC_Media_10bits@canal,w
  5156  1F42  00B2               	movwf	??_ADC_Media_10bits
  5157  1F43  0DB2               	rlf	??_ADC_Media_10bits,f
  5158  1F44  0DB2               	rlf	??_ADC_Media_10bits,f
  5159  1F45  081F               	movf	31,w	;volatile
  5160  1F46  0632               	xorwf	??_ADC_Media_10bits,w
  5161  1F47  39C3               	andlw	-61
  5162  1F48  0632               	xorwf	??_ADC_Media_10bits,w
  5163  1F49  009F               	movwf	31	;volatile
  5164                           
  5165                           ;adc.c: 24:       my_delay_ms(1);
  5166  1F4A  3000               	movlw	0
  5167  1F4B  00A3               	movwf	my_delay_ms@time+3
  5168  1F4C  3000               	movlw	0
  5169  1F4D  00A2               	movwf	my_delay_ms@time+2
  5170  1F4E  3000               	movlw	0
  5171  1F4F  00A1               	movwf	my_delay_ms@time+1
  5172  1F50  3001               	movlw	1
  5173  1F51  00A0               	movwf	my_delay_ms@time
  5174  1F52  160A  158A  2551  160A  158A  	fcall	_my_delay_ms
  5175                           
  5176                           ;adc.c: 26:       value=0;
  5177  1F57  01B4               	clrf	ADC_Media_10bits@value
  5178  1F58  01B5               	clrf	ADC_Media_10bits@value+1
  5179                           
  5180                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5181  1F59  01B6               	clrf	ADC_Media_10bits@i
  5182  1F5A  0AB6               	incf	ADC_Media_10bits@i,f
  5183  1F5B                     l4769:	
  5184                           
  5185                           ;adc.c: 28:           value+=captura();
  5186  1F5B  160A  158A  2200  160A  158A  	fcall	_captura
  5187  1F60  0820               	movf	?_captura,w
  5188  1F61  07B4               	addwf	ADC_Media_10bits@value,f
  5189  1F62  1803               	skipnc
  5190  1F63  0AB5               	incf	ADC_Media_10bits@value+1,f
  5191  1F64  0821               	movf	?_captura+1,w
  5192  1F65  07B5               	addwf	ADC_Media_10bits@value+1,f
  5193  1F66  3001               	movlw	1
  5194  1F67  00B2               	movwf	??_ADC_Media_10bits
  5195  1F68  0832               	movf	??_ADC_Media_10bits,w
  5196  1F69  07B6               	addwf	ADC_Media_10bits@i,f
  5197  1F6A  3033               	movlw	51
  5198  1F6B  0236               	subwf	ADC_Media_10bits@i,w
  5199  1F6C  1C03               	skipc
  5200  1F6D  2F5B               	goto	l4769
  5201                           
  5202                           ;adc.c: 29:       value/=(i-1);
  5203  1F6E  0836               	movf	ADC_Media_10bits@i,w
  5204  1F6F  3EFF               	addlw	255
  5205  1F70  00A0               	movwf	___lwdiv@divisor
  5206  1F71  30FF               	movlw	255
  5207  1F72  1803               	skipnc
  5208  1F73  3000               	movlw	0
  5209  1F74  00A1               	movwf	___lwdiv@divisor+1
  5210  1F75  0835               	movf	ADC_Media_10bits@value+1,w
  5211  1F76  00A3               	movwf	___lwdiv@dividend+1
  5212  1F77  0834               	movf	ADC_Media_10bits@value,w
  5213  1F78  00A2               	movwf	___lwdiv@dividend
  5214  1F79  160A  158A  2634  160A  158A  	fcall	___lwdiv
  5215  1F7E  0821               	movf	?___lwdiv+1,w
  5216  1F7F  00B5               	movwf	ADC_Media_10bits@value+1
  5217  1F80  0820               	movf	?___lwdiv,w
  5218  1F81  00B4               	movwf	ADC_Media_10bits@value
  5219                           
  5220                           ;adc.c: 30:       return value;
  5221  1F82  0834               	movf	ADC_Media_10bits@value,w
  5222  1F83  00A0               	movwf	___xxtofl@val
  5223  1F84  0835               	movf	ADC_Media_10bits@value+1,w
  5224  1F85  00A1               	movwf	___xxtofl@val+1
  5225  1F86  01A2               	clrf	___xxtofl@val+2
  5226  1F87  01A3               	clrf	___xxtofl@val+3
  5227  1F88  3000               	movlw	0
  5228  1F89  160A  118A  213B   	fcall	___xxtofl
  5229  1F8C  0823               	movf	?___xxtofl+3,w
  5230  1F8D  00B1               	movwf	?_ADC_Media_10bits+3
  5231  1F8E  0822               	movf	?___xxtofl+2,w
  5232  1F8F  00B0               	movwf	?_ADC_Media_10bits+2
  5233  1F90  0821               	movf	?___xxtofl+1,w
  5234  1F91  00AF               	movwf	?_ADC_Media_10bits+1
  5235  1F92  0820               	movf	?___xxtofl,w
  5236  1F93  00AE               	movwf	?_ADC_Media_10bits
  5237  1F94  0008               	return
  5238  1F95                     __end_of_ADC_Media_10bits:	
  5239                           
  5240                           	psect	text9
  5241  1D51                     __ptext9:	
  5242 ;; *************** function _my_delay_ms *****************
  5243 ;; Defined at:
  5244 ;;		line 5 in file "my_delay.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  time            4    0[BANK0 ] long 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  i               4    6[BANK0 ] long 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, btemp+1
  5253 ;; Tracked objects:
  5254 ;;		On entry : 300/0
  5255 ;;		On exit  : 300/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5258 ;;      Params:         0       4       0       0       0
  5259 ;;      Locals:         0       4       0       0       0
  5260 ;;      Temps:          0       2       0       0       0
  5261 ;;      Totals:         0      10       0       0       0
  5262 ;;Total ram usage:       10 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_MediaPlacaVaccum
  5269 ;;		_ADC_Media_10bits
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function _my_delay_ms
  5275  1D51                     _my_delay_ms:	
  5276                           
  5277                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5281  1D51  3000               	movlw	0
  5282  1D52  00A9               	movwf	my_delay_ms@i+3
  5283  1D53  3000               	movlw	0
  5284  1D54  00A8               	movwf	my_delay_ms@i+2
  5285  1D55  3000               	movlw	0
  5286  1D56  00A7               	movwf	my_delay_ms@i+1
  5287  1D57  3000               	movlw	0
  5288  1D58  00A6               	movwf	my_delay_ms@i
  5289  1D59                     l3879:	
  5290  1D59  0829               	movf	my_delay_ms@i+3,w
  5291  1D5A  3A80               	xorlw	128
  5292  1D5B  00FF               	movwf	127
  5293  1D5C  0823               	movf	my_delay_ms@time+3,w
  5294  1D5D  3A80               	xorlw	128
  5295  1D5E  027F               	subwf	127,w
  5296  1D5F  1D03               	skipz
  5297  1D60  2D6B               	goto	u2983
  5298  1D61  0822               	movf	my_delay_ms@time+2,w
  5299  1D62  0228               	subwf	my_delay_ms@i+2,w
  5300  1D63  1D03               	skipz
  5301  1D64  2D6B               	goto	u2983
  5302  1D65  0821               	movf	my_delay_ms@time+1,w
  5303  1D66  0227               	subwf	my_delay_ms@i+1,w
  5304  1D67  1D03               	skipz
  5305  1D68  2D6B               	goto	u2983
  5306  1D69  0820               	movf	my_delay_ms@time,w
  5307  1D6A  0226               	subwf	my_delay_ms@i,w
  5308  1D6B                     u2983:	
  5309  1D6B  1803               	btfsc	3,0
  5310  1D6C  0008               	return
  5311                           
  5312                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5313  1D6D  3003               	movlw	3
  5314  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5315  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5316  1D70  00A5               	movwf	??_my_delay_ms+1
  5317  1D71  3097               	movlw	151
  5318  1D72  00A4               	movwf	??_my_delay_ms
  5319  1D73                     u5517:	
  5320  1D73  0BA4               	decfsz	??_my_delay_ms,f
  5321  1D74  2D73               	goto	u5517
  5322  1D75  0BA5               	decfsz	??_my_delay_ms+1,f
  5323  1D76  2D73               	goto	u5517
  5324                           
  5325                           ;my_delay.c: 10:             }
  5326  1D77  3001               	movlw	1
  5327  1D78  1283               	bcf	3,5	;RP0=0, select bank0
  5328  1D79  1303               	bcf	3,6	;RP1=0, select bank0
  5329  1D7A  07A6               	addwf	my_delay_ms@i,f
  5330  1D7B  3000               	movlw	0
  5331  1D7C  1803               	skipnc
  5332  1D7D  3001               	movlw	1
  5333  1D7E  07A7               	addwf	my_delay_ms@i+1,f
  5334  1D7F  3000               	movlw	0
  5335  1D80  1803               	skipnc
  5336  1D81  3001               	movlw	1
  5337  1D82  07A8               	addwf	my_delay_ms@i+2,f
  5338  1D83  3000               	movlw	0
  5339  1D84  1803               	skipnc
  5340  1D85  3001               	movlw	1
  5341  1D86  07A9               	addwf	my_delay_ms@i+3,f
  5342  1D87  2D59               	goto	l3879
  5343  1D88                     __end_of_my_delay_ms:	
  5344                           
  5345                           	psect	text10
  5346  1A00                     __ptext10:	
  5347 ;; *************** function _captura *****************
  5348 ;; Defined at:
  5349 ;;		line 140 in file "adc.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  2    0[BANK0 ] unsigned int 
  5356 ;; Registers used:
  5357 ;;		wreg
  5358 ;; Tracked objects:
  5359 ;;		On entry : 300/0
  5360 ;;		On exit  : 300/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5363 ;;      Params:         0       2       0       0       0
  5364 ;;      Locals:         0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0
  5366 ;;      Totals:         0       2       0       0       0
  5367 ;;Total ram usage:        2 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    1
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_ADC_Media_10bits
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _captura
  5379  1A00                     _captura:	
  5380                           
  5381                           ;adc.c: 141:     ADCON0bits.GO=1;
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _captura: [wreg]
  5385  1A00  149F               	bsf	31,1	;volatile
  5386  1A01                     l493:	
  5387                           ;adc.c: 145:           }
  5388                           
  5389                           
  5390                           ;adc.c: 142:     while(ADCON0bits.GO)
  5391  1A01  189F               	btfsc	31,1	;volatile
  5392  1A02  2A01               	goto	l493
  5393                           
  5394                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5395  1A03  081E               	movf	30,w	;volatile
  5396  1A04  00A1               	movwf	?_captura+1
  5397  1A05  1683               	bsf	3,5	;RP0=1, select bank1
  5398  1A06  081E               	movf	30,w	;volatile
  5399  1A07  1283               	bcf	3,5	;RP0=0, select bank0
  5400  1A08  00A0               	movwf	?_captura
  5401  1A09  0008               	return
  5402  1A0A                     __end_of_captura:	
  5403                           
  5404                           	psect	text11
  5405  113B                     __ptext11:	
  5406 ;; *************** function ___xxtofl *****************
  5407 ;; Defined at:
  5408 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  sign            1    wreg     unsigned char 
  5411 ;;  val             4    0[BANK0 ] long 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  sign            1    8[BANK0 ] unsigned char 
  5414 ;;  arg             4   10[BANK0 ] unsigned long 
  5415 ;;  exp             1    9[BANK0 ] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  4    0[BANK0 ] unsigned char 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0
  5420 ;; Tracked objects:
  5421 ;;		On entry : 300/0
  5422 ;;		On exit  : 300/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         0       4       0       0       0
  5426 ;;      Locals:         0       6       0       0       0
  5427 ;;      Temps:          0       4       0       0       0
  5428 ;;      Totals:         0      14       0       0       0
  5429 ;;Total ram usage:       14 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    1
  5432 ;; This function calls:
  5433 ;;		Nothing
  5434 ;; This function is called by:
  5435 ;;		_MediaPlacaVaccum
  5436 ;;		_ADC_Media_10bits
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           
  5441                           ;psect for function ___xxtofl
  5442  113B                     ___xxtofl:	
  5443                           
  5444                           ;incstack = 0
  5445                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5446                           ;___xxtofl@sign stored from wreg
  5447  113B  00A8               	movwf	___xxtofl@sign
  5448  113C  0828               	movf	___xxtofl@sign,w
  5449  113D  1D03               	btfss	3,2
  5450  113E  1FA3               	btfss	___xxtofl@val+3,7
  5451  113F  2950               	goto	l4321
  5452  1140  0920               	comf	___xxtofl@val,w
  5453  1141  00AA               	movwf	___xxtofl@arg
  5454  1142  0921               	comf	___xxtofl@val+1,w
  5455  1143  00AB               	movwf	___xxtofl@arg+1
  5456  1144  0922               	comf	___xxtofl@val+2,w
  5457  1145  00AC               	movwf	___xxtofl@arg+2
  5458  1146  0923               	comf	___xxtofl@val+3,w
  5459  1147  00AD               	movwf	___xxtofl@arg+3
  5460  1148  0AAA               	incf	___xxtofl@arg,f
  5461  1149  1903               	skipnz
  5462  114A  0AAB               	incf	___xxtofl@arg+1,f
  5463  114B  1903               	skipnz
  5464  114C  0AAC               	incf	___xxtofl@arg+2,f
  5465  114D  1903               	skipnz
  5466  114E  0AAD               	incf	___xxtofl@arg+3,f
  5467  114F  2958               	goto	l1422
  5468  1150                     l4321:	
  5469  1150  0823               	movf	___xxtofl@val+3,w
  5470  1151  00AD               	movwf	___xxtofl@arg+3
  5471  1152  0822               	movf	___xxtofl@val+2,w
  5472  1153  00AC               	movwf	___xxtofl@arg+2
  5473  1154  0821               	movf	___xxtofl@val+1,w
  5474  1155  00AB               	movwf	___xxtofl@arg+1
  5475  1156  0820               	movf	___xxtofl@val,w
  5476  1157  00AA               	movwf	___xxtofl@arg
  5477  1158                     l1422:	
  5478  1158  0823               	movf	___xxtofl@val+3,w
  5479  1159  0422               	iorwf	___xxtofl@val+2,w
  5480  115A  0421               	iorwf	___xxtofl@val+1,w
  5481  115B  0420               	iorwf	___xxtofl@val,w
  5482  115C  1D03               	skipz
  5483  115D  2967               	goto	l4327
  5484  115E  3000               	movlw	0
  5485  115F  00A3               	movwf	?___xxtofl+3
  5486  1160  3000               	movlw	0
  5487  1161  00A2               	movwf	?___xxtofl+2
  5488  1162  3000               	movlw	0
  5489  1163  00A1               	movwf	?___xxtofl+1
  5490  1164  3000               	movlw	0
  5491  1165  00A0               	movwf	?___xxtofl
  5492  1166  0008               	return
  5493  1167                     l4327:	
  5494  1167  3096               	movlw	150
  5495  1168  00A4               	movwf	??___xxtofl
  5496  1169  0824               	movf	??___xxtofl,w
  5497  116A  00A9               	movwf	___xxtofl@exp
  5498  116B                     l4331:	
  5499  116B  30FE               	movlw	254
  5500  116C  052D               	andwf	___xxtofl@arg+3,w
  5501  116D  1903               	btfsc	3,2
  5502  116E  2998               	goto	l1428
  5503  116F  3001               	movlw	1
  5504  1170  00A4               	movwf	??___xxtofl
  5505  1171  0824               	movf	??___xxtofl,w
  5506  1172  07A9               	addwf	___xxtofl@exp,f
  5507  1173  3001               	movlw	1
  5508  1174                     u4045:	
  5509  1174  1003               	clrc
  5510  1175  0CAD               	rrf	___xxtofl@arg+3,f
  5511  1176  0CAC               	rrf	___xxtofl@arg+2,f
  5512  1177  0CAB               	rrf	___xxtofl@arg+1,f
  5513  1178  0CAA               	rrf	___xxtofl@arg,f
  5514  1179  3EFF               	addlw	-1
  5515  117A  1D03               	skipz
  5516  117B  2974               	goto	u4045
  5517  117C  296B               	goto	l4331
  5518  117D                     l4333:	
  5519  117D  3001               	movlw	1
  5520  117E  00A4               	movwf	??___xxtofl
  5521  117F  0824               	movf	??___xxtofl,w
  5522  1180  07A9               	addwf	___xxtofl@exp,f
  5523  1181  3001               	movlw	1
  5524  1182  07AA               	addwf	___xxtofl@arg,f
  5525  1183  3000               	movlw	0
  5526  1184  1803               	skipnc
  5527  1185  3001               	movlw	1
  5528  1186  07AB               	addwf	___xxtofl@arg+1,f
  5529  1187  3000               	movlw	0
  5530  1188  1803               	skipnc
  5531  1189  3001               	movlw	1
  5532  118A  07AC               	addwf	___xxtofl@arg+2,f
  5533  118B  3000               	movlw	0
  5534  118C  1803               	skipnc
  5535  118D  3001               	movlw	1
  5536  118E  07AD               	addwf	___xxtofl@arg+3,f
  5537  118F  3001               	movlw	1
  5538  1190                     u4065:	
  5539  1190  1003               	clrc
  5540  1191  0CAD               	rrf	___xxtofl@arg+3,f
  5541  1192  0CAC               	rrf	___xxtofl@arg+2,f
  5542  1193  0CAB               	rrf	___xxtofl@arg+1,f
  5543  1194  0CAA               	rrf	___xxtofl@arg,f
  5544  1195  3EFF               	addlw	-1
  5545  1196  1D03               	skipz
  5546  1197  2990               	goto	u4065
  5547  1198                     l1428:	
  5548  1198  30FF               	movlw	255
  5549  1199  052D               	andwf	___xxtofl@arg+3,w
  5550  119A  1903               	btfsc	3,2
  5551  119B  29AC               	goto	l4341
  5552  119C  297D               	goto	l4333
  5553  119D                     l4343:	
  5554  119D  3002               	movlw	2
  5555  119E  0229               	subwf	___xxtofl@exp,w
  5556  119F  1C03               	btfss	3,0
  5557  11A0  29AE               	goto	l1435
  5558  11A1  3001               	movlw	1
  5559  11A2  02A9               	subwf	___xxtofl@exp,f
  5560  11A3  3001               	movlw	1
  5561  11A4  00A4               	movwf	??___xxtofl
  5562  11A5                     u4085:	
  5563  11A5  1003               	clrc
  5564  11A6  0DAA               	rlf	___xxtofl@arg,f
  5565  11A7  0DAB               	rlf	___xxtofl@arg+1,f
  5566  11A8  0DAC               	rlf	___xxtofl@arg+2,f
  5567  11A9  0DAD               	rlf	___xxtofl@arg+3,f
  5568  11AA  0BA4               	decfsz	??___xxtofl,f
  5569  11AB  29A5               	goto	u4085
  5570  11AC                     l4341:	
  5571  11AC  1FAC               	btfss	___xxtofl@arg+2,7
  5572  11AD  299D               	goto	l4343
  5573  11AE                     l1435:	
  5574  11AE  1829               	btfsc	___xxtofl@exp,0
  5575  11AF  29B8               	goto	l1436
  5576  11B0  30FF               	movlw	255
  5577  11B1  05AA               	andwf	___xxtofl@arg,f
  5578  11B2  30FF               	movlw	255
  5579  11B3  05AB               	andwf	___xxtofl@arg+1,f
  5580  11B4  307F               	movlw	127
  5581  11B5  05AC               	andwf	___xxtofl@arg+2,f
  5582  11B6  30FF               	movlw	255
  5583  11B7  05AD               	andwf	___xxtofl@arg+3,f
  5584  11B8                     l1436:	
  5585  11B8  1003               	clrc
  5586  11B9  0CA9               	rrf	___xxtofl@exp,f
  5587  11BA  0829               	movf	___xxtofl@exp,w
  5588  11BB  00A4               	movwf	??___xxtofl
  5589  11BC  01A5               	clrf	??___xxtofl+1
  5590  11BD  01A6               	clrf	??___xxtofl+2
  5591  11BE  01A7               	clrf	??___xxtofl+3
  5592  11BF  3018               	movlw	24
  5593  11C0                     u4125:	
  5594  11C0  1003               	clrc
  5595  11C1  0DA4               	rlf	??___xxtofl,f
  5596  11C2  0DA5               	rlf	??___xxtofl+1,f
  5597  11C3  0DA6               	rlf	??___xxtofl+2,f
  5598  11C4  0DA7               	rlf	??___xxtofl+3,f
  5599  11C5  3EFF               	addlw	-1
  5600  11C6  1D03               	skipz
  5601  11C7  29C0               	goto	u4125
  5602  11C8  0824               	movf	??___xxtofl,w
  5603  11C9  04AA               	iorwf	___xxtofl@arg,f
  5604  11CA  0825               	movf	??___xxtofl+1,w
  5605  11CB  04AB               	iorwf	___xxtofl@arg+1,f
  5606  11CC  0826               	movf	??___xxtofl+2,w
  5607  11CD  04AC               	iorwf	___xxtofl@arg+2,f
  5608  11CE  0827               	movf	??___xxtofl+3,w
  5609  11CF  04AD               	iorwf	___xxtofl@arg+3,f
  5610  11D0  0828               	movf	___xxtofl@sign,w
  5611  11D1  1D03               	btfss	3,2
  5612  11D2  1FA3               	btfss	___xxtofl@val+3,7
  5613  11D3  29D5               	goto	l4355
  5614  11D4  17AD               	bsf	___xxtofl@arg+3,7
  5615  11D5                     l4355:	
  5616  11D5  082D               	movf	___xxtofl@arg+3,w
  5617  11D6  00A3               	movwf	?___xxtofl+3
  5618  11D7  082C               	movf	___xxtofl@arg+2,w
  5619  11D8  00A2               	movwf	?___xxtofl+2
  5620  11D9  082B               	movf	___xxtofl@arg+1,w
  5621  11DA  00A1               	movwf	?___xxtofl+1
  5622  11DB  082A               	movf	___xxtofl@arg,w
  5623  11DC  00A0               	movwf	?___xxtofl
  5624  11DD  0008               	return
  5625  11DE                     __end_of___xxtofl:	
  5626                           
  5627                           	psect	text12
  5628  1000                     __ptext12:	
  5629 ;; *************** function _I2C_Master_Init *****************
  5630 ;; Defined at:
  5631 ;;		line 7 in file "I2C.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  c               4   14[BANK0 ] const unsigned long 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 300/0
  5642 ;;		On exit  : 300/100
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       4       0       0       0
  5646 ;;      Locals:         0       0       0       0       0
  5647 ;;      Temps:          0       4       0       0       0
  5648 ;;      Totals:         0       8       0       0       0
  5649 ;;Total ram usage:        8 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    2
  5652 ;; This function calls:
  5653 ;;		___lldiv
  5654 ;; This function is called by:
  5655 ;;		_main
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _I2C_Master_Init
  5661  1000                     _I2C_Master_Init:	
  5662                           
  5663                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5667  1000  3028               	movlw	40
  5668  1001  0094               	movwf	20	;volatile
  5669                           
  5670                           ;I2C.c: 11:   SSPCON2 = 0;
  5671  1002  1683               	bsf	3,5	;RP0=1, select bank1
  5672  1003  0191               	clrf	17	;volatile
  5673                           
  5674                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5675  1004  1283               	bcf	3,5	;RP0=0, select bank0
  5676  1005  082E               	movf	I2C_Master_Init@c,w
  5677  1006  00B2               	movwf	??_I2C_Master_Init
  5678  1007  082F               	movf	I2C_Master_Init@c+1,w
  5679  1008  00B3               	movwf	??_I2C_Master_Init+1
  5680  1009  0830               	movf	I2C_Master_Init@c+2,w
  5681  100A  00B4               	movwf	??_I2C_Master_Init+2
  5682  100B  0831               	movf	I2C_Master_Init@c+3,w
  5683  100C  00B5               	movwf	??_I2C_Master_Init+3
  5684  100D  3002               	movlw	2
  5685  100E                     u4885:	
  5686  100E  1003               	clrc
  5687  100F  0DB2               	rlf	??_I2C_Master_Init,f
  5688  1010  0DB3               	rlf	??_I2C_Master_Init+1,f
  5689  1011  0DB4               	rlf	??_I2C_Master_Init+2,f
  5690  1012  0DB5               	rlf	??_I2C_Master_Init+3,f
  5691  1013  3EFF               	addlw	-1
  5692  1014  1D03               	skipz
  5693  1015  280E               	goto	u4885
  5694  1016  0835               	movf	??_I2C_Master_Init+3,w
  5695  1017  00A3               	movwf	___lldiv@divisor+3
  5696  1018  0834               	movf	??_I2C_Master_Init+2,w
  5697  1019  00A2               	movwf	___lldiv@divisor+2
  5698  101A  0833               	movf	??_I2C_Master_Init+1,w
  5699  101B  00A1               	movwf	___lldiv@divisor+1
  5700  101C  0832               	movf	??_I2C_Master_Init,w
  5701  101D  00A0               	movwf	___lldiv@divisor
  5702  101E  3000               	movlw	0
  5703  101F  00A7               	movwf	___lldiv@dividend+3
  5704  1020  307A               	movlw	122
  5705  1021  00A6               	movwf	___lldiv@dividend+2
  5706  1022  3012               	movlw	18
  5707  1023  00A5               	movwf	___lldiv@dividend+1
  5708  1024  3000               	movlw	0
  5709  1025  00A4               	movwf	___lldiv@dividend
  5710  1026  120A  158A  2003   	fcall	___lldiv
  5711  1029  0820               	movf	?___lldiv,w
  5712  102A  3EFF               	addlw	255
  5713  102B  1683               	bsf	3,5	;RP0=1, select bank1
  5714  102C  0093               	movwf	19	;volatile
  5715                           
  5716                           ;I2C.c: 13:   SSPSTAT = 0;
  5717  102D  0194               	clrf	20	;volatile
  5718                           
  5719                           ;I2C.c: 14:   TRISC3 = 1;
  5720  102E  1587               	bsf	7,3	;volatile
  5721                           
  5722                           ;I2C.c: 15:   TRISC4 = 1;
  5723  102F  1607               	bsf	7,4	;volatile
  5724  1030  0008               	return
  5725  1031                     __end_of_I2C_Master_Init:	
  5726                           
  5727                           	psect	text13
  5728  0803                     __ptext13:	
  5729 ;; *************** function ___lldiv *****************
  5730 ;; Defined at:
  5731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  divisor         4    0[BANK0 ] unsigned long 
  5734 ;;  dividend        4    4[BANK0 ] unsigned long 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  quotient        4    9[BANK0 ] unsigned long 
  5737 ;;  counter         1   13[BANK0 ] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  4    0[BANK0 ] unsigned long 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 300/0
  5744 ;;		On exit  : 300/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5747 ;;      Params:         0       8       0       0       0
  5748 ;;      Locals:         0       5       0       0       0
  5749 ;;      Temps:          0       1       0       0       0
  5750 ;;      Totals:         0      14       0       0       0
  5751 ;;Total ram usage:       14 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_I2C_Master_Init
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function ___lldiv
  5763  0803                     ___lldiv:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5767  0803  3000               	movlw	0
  5768  0804  00AC               	movwf	___lldiv@quotient+3
  5769  0805  3000               	movlw	0
  5770  0806  00AB               	movwf	___lldiv@quotient+2
  5771  0807  3000               	movlw	0
  5772  0808  00AA               	movwf	___lldiv@quotient+1
  5773  0809  3000               	movlw	0
  5774  080A  00A9               	movwf	___lldiv@quotient
  5775  080B  0823               	movf	___lldiv@divisor+3,w
  5776  080C  0422               	iorwf	___lldiv@divisor+2,w
  5777  080D  0421               	iorwf	___lldiv@divisor+1,w
  5778  080E  0420               	iorwf	___lldiv@divisor,w
  5779  080F  1903               	skipnz
  5780  0810  2858               	goto	l4815
  5781  0811  01AD               	clrf	___lldiv@counter
  5782  0812  0AAD               	incf	___lldiv@counter,f
  5783  0813                     l4801:	
  5784  0813  1BA3               	btfsc	___lldiv@divisor+3,7
  5785  0814  2823               	goto	l4803
  5786  0815  3001               	movlw	1
  5787  0816  00A8               	movwf	??___lldiv
  5788  0817                     u4465:	
  5789  0817  1003               	clrc
  5790  0818  0DA0               	rlf	___lldiv@divisor,f
  5791  0819  0DA1               	rlf	___lldiv@divisor+1,f
  5792  081A  0DA2               	rlf	___lldiv@divisor+2,f
  5793  081B  0DA3               	rlf	___lldiv@divisor+3,f
  5794  081C  0BA8               	decfsz	??___lldiv,f
  5795  081D  2817               	goto	u4465
  5796  081E  3001               	movlw	1
  5797  081F  00A8               	movwf	??___lldiv
  5798  0820  0828               	movf	??___lldiv,w
  5799  0821  07AD               	addwf	___lldiv@counter,f
  5800  0822  2813               	goto	l4801
  5801  0823                     l4803:	
  5802  0823  3001               	movlw	1
  5803  0824  00A8               	movwf	??___lldiv
  5804  0825                     u4485:	
  5805  0825  1003               	clrc
  5806  0826  0DA9               	rlf	___lldiv@quotient,f
  5807  0827  0DAA               	rlf	___lldiv@quotient+1,f
  5808  0828  0DAB               	rlf	___lldiv@quotient+2,f
  5809  0829  0DAC               	rlf	___lldiv@quotient+3,f
  5810  082A  0BA8               	decfsz	??___lldiv,f
  5811  082B  2825               	goto	u4485
  5812  082C  0823               	movf	___lldiv@divisor+3,w
  5813  082D  0227               	subwf	___lldiv@dividend+3,w
  5814  082E  1D03               	skipz
  5815  082F  283A               	goto	u4495
  5816  0830  0822               	movf	___lldiv@divisor+2,w
  5817  0831  0226               	subwf	___lldiv@dividend+2,w
  5818  0832  1D03               	skipz
  5819  0833  283A               	goto	u4495
  5820  0834  0821               	movf	___lldiv@divisor+1,w
  5821  0835  0225               	subwf	___lldiv@dividend+1,w
  5822  0836  1D03               	skipz
  5823  0837  283A               	goto	u4495
  5824  0838  0820               	movf	___lldiv@divisor,w
  5825  0839  0224               	subwf	___lldiv@dividend,w
  5826  083A                     u4495:	
  5827  083A  1C03               	skipc
  5828  083B  284B               	goto	l4811
  5829  083C  0820               	movf	___lldiv@divisor,w
  5830  083D  02A4               	subwf	___lldiv@dividend,f
  5831  083E  0821               	movf	___lldiv@divisor+1,w
  5832  083F  1C03               	skipc
  5833  0840  0F21               	incfsz	___lldiv@divisor+1,w
  5834  0841  02A5               	subwf	___lldiv@dividend+1,f
  5835  0842  0822               	movf	___lldiv@divisor+2,w
  5836  0843  1C03               	skipc
  5837  0844  0F22               	incfsz	___lldiv@divisor+2,w
  5838  0845  02A6               	subwf	___lldiv@dividend+2,f
  5839  0846  0823               	movf	___lldiv@divisor+3,w
  5840  0847  1C03               	skipc
  5841  0848  0F23               	incfsz	___lldiv@divisor+3,w
  5842  0849  02A7               	subwf	___lldiv@dividend+3,f
  5843  084A  1429               	bsf	___lldiv@quotient,0
  5844  084B                     l4811:	
  5845  084B  3001               	movlw	1
  5846  084C                     u4505:	
  5847  084C  1003               	clrc
  5848  084D  0CA3               	rrf	___lldiv@divisor+3,f
  5849  084E  0CA2               	rrf	___lldiv@divisor+2,f
  5850  084F  0CA1               	rrf	___lldiv@divisor+1,f
  5851  0850  0CA0               	rrf	___lldiv@divisor,f
  5852  0851  3EFF               	addlw	-1
  5853  0852  1D03               	skipz
  5854  0853  284C               	goto	u4505
  5855  0854  3001               	movlw	1
  5856  0855  02AD               	subwf	___lldiv@counter,f
  5857  0856  1D03               	btfss	3,2
  5858  0857  2823               	goto	l4803
  5859  0858                     l4815:	
  5860  0858  082C               	movf	___lldiv@quotient+3,w
  5861  0859  00A3               	movwf	?___lldiv+3
  5862  085A  082B               	movf	___lldiv@quotient+2,w
  5863  085B  00A2               	movwf	?___lldiv+2
  5864  085C  082A               	movf	___lldiv@quotient+1,w
  5865  085D  00A1               	movwf	?___lldiv+1
  5866  085E  0829               	movf	___lldiv@quotient,w
  5867  085F  00A0               	movwf	?___lldiv
  5868  0860  0008               	return
  5869  0861                     __end_of___lldiv:	
  5870                           
  5871                           	psect	text14
  5872  003E                     __ptext14:	
  5873 ;; *************** function _Decodify_Command *****************
  5874 ;; Defined at:
  5875 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  sizedata        1    3[BANK1 ] unsigned char 
  5880 ;;  add             1    2[BANK1 ] unsigned char 
  5881 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  5882 ;;  OutPut          4    6[BANK1 ] float 
  5883 ;;  tempint         2    4[BANK1 ] int 
  5884 ;;  dados           2    0[BANK1 ] int 
  5885 ;;  tempchar        1   10[BANK1 ] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 300/100
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5895 ;;      Params:         0       0       0       0       0
  5896 ;;      Locals:         0       0      15       0       0
  5897 ;;      Temps:          0       4       0       0       0
  5898 ;;      Totals:         0       4      15       0       0
  5899 ;;Total ram usage:       19 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    6
  5902 ;; This function calls:
  5903 ;;		_EEPROM_24C1025_Fill_All
  5904 ;;		_EEPROM_24C1025_Read_Buffer_USART
  5905 ;;		_EEPROM_24C1025_Read_Byte
  5906 ;;		_EEPROM_24C1025_Read_Int
  5907 ;;		_EEPROM_24C1025_Read_Str
  5908 ;;		_EEPROM_24C1025_Write_Buffer
  5909 ;;		_EEPROM_24C1025_Write_Byte
  5910 ;;		_EEPROM_24C1025_Write_Int
  5911 ;;		_EEPROM_24C1025_Write_Str
  5912 ;;		_EEPROM_Read_Byte
  5913 ;;		_EEPROM_Read_Integer
  5914 ;;		_EEPROM_Read_String
  5915 ;;		_EEPROM_Write_Byte
  5916 ;;		_EEPROM_Write_Integer
  5917 ;;		_EEPROM_Write_String
  5918 ;;		_PROCULUS_Buzzer
  5919 ;;		_PROCULUS_Show_Screen
  5920 ;;		_PROCULUS_VP_Write_String
  5921 ;;		_Save_Log
  5922 ;;		_Send_Reply_OK
  5923 ;;		_Send_To_MB
  5924 ;;		_USART_put_int
  5925 ;;		_USART_put_string
  5926 ;;		_USART_putc
  5927 ;;		_USART_to_Protocol
  5928 ;;		___flmul
  5929 ;;		___fltol
  5930 ;;		_strcpy
  5931 ;;		_strlen
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _Decodify_Command
  5939  003E                     _Decodify_Command:	
  5940                           
  5941                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5945  003E  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  5946  003F  160A  158A  26EB  120A  118A  	fcall	_USART_to_Protocol
  5947                           
  5948                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5949  0044  1683               	bsf	3,5	;RP0=1, select bank3
  5950  0045  1703               	bsf	3,6	;RP1=1, select bank3
  5951  0046  0817               	movf	(_usart_protocol^(0+384)+7),w
  5952  0047  1283               	bcf	3,5	;RP0=0, select bank0
  5953  0048  1303               	bcf	3,6	;RP1=0, select bank0
  5954  0049  00DF               	movwf	??_Decodify_Command
  5955  004A  085F               	movf	??_Decodify_Command,w
  5956  004B  1683               	bsf	3,5	;RP0=1, select bank1
  5957  004C  00E6               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5958                           
  5959                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5960  004D  1703               	bsf	3,6	;RP1=1, select bank3
  5961  004E  0818               	movf	(_usart_protocol^(0+384)+8),w
  5962  004F  1283               	bcf	3,5	;RP0=0, select bank0
  5963  0050  1303               	bcf	3,6	;RP1=0, select bank0
  5964  0051  00DF               	movwf	??_Decodify_Command
  5965  0052  085F               	movf	??_Decodify_Command,w
  5966  0053  1683               	bsf	3,5	;RP0=1, select bank1
  5967  0054  00E5               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5968                           
  5969                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5970  0055  1703               	bsf	3,6	;RP1=1, select bank3
  5971  0056  0819               	movf	(_usart_protocol^(0+384)+9),w
  5972  0057  1283               	bcf	3,5	;RP0=0, select bank0
  5973  0058  1303               	bcf	3,6	;RP1=0, select bank0
  5974  0059  00DF               	movwf	??_Decodify_Command
  5975  005A  085F               	movf	??_Decodify_Command,w
  5976  005B  1683               	bsf	3,5	;RP0=1, select bank1
  5977  005C  00E4               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5978                           
  5979                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5980  005D  1703               	bsf	3,6	;RP1=1, select bank3
  5981  005E  081A               	movf	(_usart_protocol^(0+384)+10),w
  5982  005F  1283               	bcf	3,5	;RP0=0, select bank0
  5983  0060  1303               	bcf	3,6	;RP1=0, select bank0
  5984  0061  00DF               	movwf	??_Decodify_Command
  5985  0062  085F               	movf	??_Decodify_Command,w
  5986  0063  1683               	bsf	3,5	;RP0=1, select bank1
  5987  0064  00E3               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5988                           
  5989                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  5990  0065  2B7D               	goto	l5849
  5991  0066                     l5689:	
  5992                           
  5993                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.17");
  5994  0066  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5995  0067  00DF               	movwf	??_Decodify_Command
  5996  0068  085F               	movf	??_Decodify_Command,w
  5997  0069  00A0               	movwf	strcpy@from
  5998  006A  30B7               	movlw	(low (_buffer| 0))& (0+255)
  5999  006B  160A  158A  230D  120A  118A  	fcall	_strcpy
  6000                           
  6001                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6002  0070  300B               	movlw	11
  6003  0071                     L9:	
  6004  0071  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6005                           
  6006                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6007  0076  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6008  0077  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0078  00A1               	movwf	USART_put_string@vetor
  6010  0079  3000               	movlw	0
  6011  007A  00A2               	movwf	USART_put_string@vetor+1
  6012  007B  160A  158A  24E9   	fcall	_USART_put_string
  6013                           
  6014                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6015  007E  0008               	return
  6016  007F                     l5695:	
  6017                           
  6018                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6019  007F  1683               	bsf	3,5	;RP0=1, select bank3
  6020  0080  1703               	bsf	3,6	;RP1=1, select bank3
  6021  0081  0816               	movf	(_usart_protocol^(0+384)+6),w
  6022  0082  1D03               	btfss	3,2
  6023  0083  288D               	goto	l5699
  6024                           
  6025                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6026  0084  1303               	bcf	3,6	;RP1=0, select bank1
  6027  0085  0823               	movf	(_Tensao1+3)^(0+128),w
  6028  0086  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6029  0087  0822               	movf	(_Tensao1+2)^(0+128),w
  6030  0088  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6031  0089  0821               	movf	(_Tensao1+1)^(0+128),w
  6032  008A  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6033  008B  0820               	movf	_Tensao1^(0+128),w
  6034  008C  2895               	goto	L7
  6035  008D                     l5699:	
  6036                           
  6037                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6038  008D  1303               	bcf	3,6	;RP1=0, select bank1
  6039  008E  0827               	movf	(_Vaccum0+3)^(0+128),w
  6040  008F  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6041  0090  0826               	movf	(_Vaccum0+2)^(0+128),w
  6042  0091  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6043  0092  0825               	movf	(_Vaccum0+1)^(0+128),w
  6044  0093  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6045  0094  0824               	movf	_Vaccum0^(0+128),w
  6046  0095                     L7:	
  6047  0095  00DE               	movwf	Decodify_Command@OutPut^(0+128)
  6048                           
  6049                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6050  0096  3041               	movlw	65
  6051  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6052  0098  00AC               	movwf	___flmul@b+3
  6053  0099  3020               	movlw	32
  6054  009A  00AB               	movwf	___flmul@b+2
  6055  009B  3000               	movlw	0
  6056  009C  00AA               	movwf	___flmul@b+1
  6057  009D  3000               	movlw	0
  6058  009E  00A9               	movwf	___flmul@b
  6059  009F  1683               	bsf	3,5	;RP0=1, select bank1
  6060  00A0  0861               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6061  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  6062  00A2  00B0               	movwf	___flmul@a+3
  6063  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6064  00A4  0860               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6065  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6066  00A6  00AF               	movwf	___flmul@a+2
  6067  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6068  00A8  085F               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6069  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6070  00AA  00AE               	movwf	___flmul@a+1
  6071  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6072  00AC  085E               	movf	Decodify_Command@OutPut^(0+128),w
  6073  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6074  00AE  00AD               	movwf	___flmul@a
  6075  00AF  120A  118A  23D0  120A  118A  	fcall	___flmul
  6076  00B4  082C               	movf	?___flmul+3,w
  6077  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  6078  00B6  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6079  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  6080  00B8  082B               	movf	?___flmul+2,w
  6081  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  6082  00BA  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6083  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  6084  00BC  082A               	movf	?___flmul+1,w
  6085  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  6086  00BE  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6087  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  6088  00C0  0829               	movf	?___flmul,w
  6089  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  6090  00C2  00DE               	movwf	Decodify_Command@OutPut^(0+128)
  6091                           
  6092                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6093  00C3  138B               	bcf	11,7	;volatile
  6094                           
  6095                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6096  00C4  3002               	movlw	2
  6097  00C5  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6098                           
  6099                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6100  00CA  0861               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6101  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  6102  00CC  00C6               	movwf	___fltol@f1+3
  6103  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  6104  00CE  0860               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6105  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  6106  00D0  00C5               	movwf	___fltol@f1+2
  6107  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  6108  00D2  085F               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6109  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  6110  00D4  00C4               	movwf	___fltol@f1+1
  6111  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  6112  00D6  085E               	movf	Decodify_Command@OutPut^(0+128),w
  6113  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  6114  00D8  00C3               	movwf	___fltol@f1
  6115  00D9  160A  158A  2795  120A  118A  	fcall	___fltol
  6116  00DE  0844               	movf	?___fltol+1,w
  6117  00DF  00CF               	movwf	USART_put_int@value+1
  6118  00E0  0843               	movf	?___fltol,w
  6119  00E1  00CE               	movwf	USART_put_int@value
  6120  00E2  160A  158A  228B   	fcall	_USART_put_int
  6121                           
  6122                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6123  00E5  178B               	bsf	11,7	;volatile
  6124                           
  6125                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6126  00E6  0008               	return
  6127  00E7                     l5711:	
  6128                           
  6129                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6130  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  6131  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  6132  00E9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6133  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  6134  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  6135  00EC  00DF               	movwf	??_Decodify_Command
  6136  00ED  085F               	movf	??_Decodify_Command,w
  6137  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  6138  00EF  00E6               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6139                           
  6140                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6141  00F0  1703               	bsf	3,6	;RP1=1, select bank3
  6142  00F1  0817               	movf	(_usart_protocol^(0+384)+7),w
  6143  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  6144  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  6145  00F4  00DF               	movwf	??_Decodify_Command
  6146  00F5  085F               	movf	??_Decodify_Command,w
  6147  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  6148  00F7  00E5               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6149                           
  6150                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6151  00F8  1703               	bsf	3,6	;RP1=1, select bank3
  6152  00F9  0818               	movf	(_usart_protocol^(0+384)+8),w
  6153  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  6154  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  6155  00FC  00DF               	movwf	??_Decodify_Command
  6156  00FD  085F               	movf	??_Decodify_Command,w
  6157  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  6158  00FF  00E4               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6159                           
  6160                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6161  0100  1703               	bsf	3,6	;RP1=1, select bank3
  6162  0101  0819               	movf	(_usart_protocol^(0+384)+9),w
  6163  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6164  0103  1303               	bcf	3,6	;RP1=0, select bank0
  6165  0104  00DF               	movwf	??_Decodify_Command
  6166  0105  085F               	movf	??_Decodify_Command,w
  6167  0106  1683               	bsf	3,5	;RP0=1, select bank1
  6168  0107  00E3               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6169                           
  6170                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6171  0108  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6172  0109  1283               	bcf	3,5	;RP0=0, select bank0
  6173  010A  00DB               	movwf	Save_Log@add_datalog+3
  6174  010B  1683               	bsf	3,5	;RP0=1, select bank1
  6175  010C  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6176  010D  1283               	bcf	3,5	;RP0=0, select bank0
  6177  010E  00DA               	movwf	Save_Log@add_datalog+2
  6178  010F  1683               	bsf	3,5	;RP0=1, select bank1
  6179  0110  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6180  0111  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0112  00D9               	movwf	Save_Log@add_datalog+1
  6182  0113  1683               	bsf	3,5	;RP0=1, select bank1
  6183  0114  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6184  0115  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0116  00D8               	movwf	Save_Log@add_datalog
  6186  0117  160A  118A  2031   	fcall	_Save_Log
  6187                           
  6188                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6189  011A  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6190  011B  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6191                           
  6192                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6193  011C  1683               	bsf	3,5	;RP0=1, select bank1
  6194  011D  01B0               	clrf	_milisegundo^(0+128)	;volatile
  6195  011E  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6196                           
  6197                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6198  011F  0008               	return
  6199  0120                     l5719:	
  6200                           
  6201                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6202  0120  3002               	movlw	2
  6203  0121  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6204                           
  6205                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6206  0126  3001               	movlw	1
  6207  0127  1283               	bcf	3,5	;RP0=0, select bank0
  6208  0128  00CE               	movwf	USART_put_int@value
  6209  0129  3000               	movlw	0
  6210  012A  00CF               	movwf	USART_put_int@value+1
  6211  012B  160A  158A  228B   	fcall	_USART_put_int
  6212                           
  6213                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6214  012E  0008               	return
  6215  012F                     l5723:	
  6216                           
  6217                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6218  012F  1683               	bsf	3,5	;RP0=1, select bank3
  6219  0130  1703               	bsf	3,6	;RP1=1, select bank3
  6220  0131  0817               	movf	(_usart_protocol^(0+384)+7),w
  6221  0132  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0133  1303               	bcf	3,6	;RP1=0, select bank0
  6223  0134  00DF               	movwf	??_Decodify_Command
  6224  0135  085F               	movf	??_Decodify_Command,w
  6225  0136  00A0               	movwf	EEPROM_Write_Byte@dado
  6226  0137  1683               	bsf	3,5	;RP0=1, select bank3
  6227  0138  1703               	bsf	3,6	;RP1=1, select bank3
  6228  0139  0816               	movf	(_usart_protocol^(0+384)+6),w
  6229  013A  160A  158A  25F8  120A  118A  	fcall	_EEPROM_Write_Byte
  6230  013F                     L8:	
  6231                           
  6232                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6233  013F  3003               	movlw	3
  6234  0140  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6235                           
  6236                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6237  0145  160A  158A  21F7   	fcall	_Send_Reply_OK
  6238                           
  6239                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6240  0148  0008               	return
  6241  0149                     l5727:	
  6242                           
  6243                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6244  0149  1683               	bsf	3,5	;RP0=1, select bank3
  6245  014A  1703               	bsf	3,6	;RP1=1, select bank3
  6246  014B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6247  014C  160A  158A  23AA  120A  118A  	fcall	_EEPROM_Read_Byte
  6248  0151  1303               	bcf	3,6	;RP1=0, select bank0
  6249  0152  00DF               	movwf	??_Decodify_Command
  6250  0153  085F               	movf	??_Decodify_Command,w
  6251  0154  1683               	bsf	3,5	;RP0=1, select bank1
  6252  0155  00E2               	movwf	Decodify_Command@tempchar^(0+128)
  6253                           
  6254                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6255  0156  3001               	movlw	1
  6256  0157  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6257                           
  6258                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6259  015C  0862               	movf	Decodify_Command@tempchar^(0+128),w
  6260  015D  160A  158A  222B   	fcall	_USART_putc
  6261                           
  6262                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6263  0160  0008               	return
  6264  0161                     l5733:	
  6265                           
  6266                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6267  0161  1683               	bsf	3,5	;RP0=1, select bank3
  6268  0162  1703               	bsf	3,6	;RP1=1, select bank3
  6269  0163  0816               	movf	(_usart_protocol^(0+384)+6),w
  6270  0164  1283               	bcf	3,5	;RP0=0, select bank0
  6271  0165  1303               	bcf	3,6	;RP1=0, select bank0
  6272  0166  00DF               	movwf	??_Decodify_Command
  6273  0167  085F               	movf	??_Decodify_Command,w
  6274  0168  1683               	bsf	3,5	;RP0=1, select bank1
  6275  0169  00DA               	movwf	Decodify_Command@add^(0+128)
  6276                           
  6277                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6278  016A  1703               	bsf	3,6	;RP1=1, select bank3
  6279  016B  0818               	movf	(_usart_protocol^(0+384)+8),w
  6280  016C  1283               	bcf	3,5	;RP0=0, select bank0
  6281  016D  1303               	bcf	3,6	;RP1=0, select bank0
  6282  016E  00DF               	movwf	??_Decodify_Command
  6283  016F  01E0               	clrf	??_Decodify_Command+1
  6284  0170  1683               	bsf	3,5	;RP0=1, select bank3
  6285  0171  1703               	bsf	3,6	;RP1=1, select bank3
  6286  0172  0817               	movf	(_usart_protocol^(0+384)+7),w
  6287  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6288  0174  1303               	bcf	3,6	;RP1=0, select bank0
  6289  0175  00E1               	movwf	??_Decodify_Command+2
  6290  0176  01E2               	clrf	??_Decodify_Command+3
  6291  0177  0861               	movf	??_Decodify_Command+2,w
  6292  0178  00E2               	movwf	??_Decodify_Command+3
  6293  0179  01E1               	clrf	??_Decodify_Command+2
  6294  017A  085F               	movf	??_Decodify_Command,w
  6295  017B  0461               	iorwf	??_Decodify_Command+2,w
  6296  017C  1683               	bsf	3,5	;RP0=1, select bank1
  6297  017D  00D8               	movwf	Decodify_Command@dados^(0+128)
  6298  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6299  017F  0860               	movf	??_Decodify_Command+1,w
  6300  0180  0462               	iorwf	??_Decodify_Command+3,w
  6301  0181  1683               	bsf	3,5	;RP0=1, select bank1
  6302  0182  00D9               	movwf	(Decodify_Command@dados+1)^(0+128)
  6303                           
  6304                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6305  0183  0859               	movf	(Decodify_Command@dados+1)^(0+128),w
  6306  0184  1283               	bcf	3,5	;RP0=0, select bank0
  6307  0185  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6308  0186  1683               	bsf	3,5	;RP0=1, select bank1
  6309  0187  0858               	movf	Decodify_Command@dados^(0+128),w
  6310  0188  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0189  00A5               	movwf	EEPROM_Write_Integer@dado
  6312  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6313  018B  085A               	movf	Decodify_Command@add^(0+128),w
  6314  018C  160A  158A  24B7  120A  118A  	fcall	_EEPROM_Write_Integer
  6315  0191  293F               	goto	L8
  6316  0192                     l5743:	
  6317                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6318                           
  6319                           
  6320                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6321  0192  1683               	bsf	3,5	;RP0=1, select bank3
  6322  0193  1703               	bsf	3,6	;RP1=1, select bank3
  6323  0194  0816               	movf	(_usart_protocol^(0+384)+6),w
  6324  0195  160A  158A  2462  120A  118A  	fcall	_EEPROM_Read_Integer
  6325  019A  0824               	movf	?_EEPROM_Read_Integer+1,w
  6326  019B  1683               	bsf	3,5	;RP0=1, select bank1
  6327  019C  00DD               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6328  019D  1283               	bcf	3,5	;RP0=0, select bank0
  6329  019E  0823               	movf	?_EEPROM_Read_Integer,w
  6330  019F                     L10:	
  6331  019F  1683               	bsf	3,5	;RP0=1, select bank1
  6332  01A0  00DC               	movwf	Decodify_Command@tempint^(0+128)
  6333                           
  6334                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6335  01A1  3002               	movlw	2
  6336  01A2  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6339  01A7  085D               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6340  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6341  01A9  00CF               	movwf	USART_put_int@value+1
  6342  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  6343  01AB  085C               	movf	Decodify_Command@tempint^(0+128),w
  6344  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  6345  01AD  00CE               	movwf	USART_put_int@value
  6346  01AE  160A  158A  228B   	fcall	_USART_put_int
  6347                           
  6348                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6349  01B1  0008               	return
  6350  01B2                     l5749:	
  6351                           
  6352                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6353  01B2  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6354  01B3  00DF               	movwf	??_Decodify_Command
  6355  01B4  085F               	movf	??_Decodify_Command,w
  6356  01B5  00A5               	movwf	EEPROM_Write_String@dado
  6357  01B6  1683               	bsf	3,5	;RP0=1, select bank3
  6358  01B7  1703               	bsf	3,6	;RP1=1, select bank3
  6359  01B8  0816               	movf	(_usart_protocol^(0+384)+6),w
  6360  01B9  160A  158A  248C  120A  118A  	fcall	_EEPROM_Write_String
  6361  01BE  293F               	goto	L8
  6362  01BF                     l5755:	
  6363                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6364                           
  6365                           
  6366                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6367  01BF  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6368  01C0  00DF               	movwf	??_Decodify_Command
  6369  01C1  085F               	movf	??_Decodify_Command,w
  6370  01C2  00A3               	movwf	EEPROM_Read_String@dado
  6371  01C3  1683               	bsf	3,5	;RP0=1, select bank3
  6372  01C4  1703               	bsf	3,6	;RP1=1, select bank3
  6373  01C5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6374  01C6  160A  158A  2369  120A  118A  	fcall	_EEPROM_Read_String
  6375                           
  6376                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6377  01CB  3021               	movlw	33
  6378  01CC  2871               	goto	L9
  6379  01CD                     l5761:	
  6380                           
  6381                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6382  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6383  01CE  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6384  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6385  01D0  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6386  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6387  01D2  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6388  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6389  01D4  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6390  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6391  01D6  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6392  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6393  01D8  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6394  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  6395  01DA  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6396  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6397  01DC  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6398  01DD  1683               	bsf	3,5	;RP0=1, select bank3
  6399  01DE  1703               	bsf	3,6	;RP1=1, select bank3
  6400  01DF  081B               	movf	(_usart_protocol^(0+384)+11),w
  6401  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6402  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  6403  01E2  00DF               	movwf	??_Decodify_Command
  6404  01E3  085F               	movf	??_Decodify_Command,w
  6405  01E4  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6406  01E5  1683               	bsf	3,5	;RP0=1, select bank3
  6407  01E6  1703               	bsf	3,6	;RP1=1, select bank3
  6408  01E7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6409  01E8  160A  158A  2275  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6410  01ED  293F               	goto	L8
  6411  01EE                     l5767:	
  6412                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6413                           
  6414                           
  6415                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6416  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6417  01EF  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6418  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6419  01F1  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6420  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6421  01F3  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6422  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6423  01F5  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6424  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6425  01F7  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6426  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6427  01F9  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6428  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  6429  01FB  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6430  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  6431  01FD  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6432  01FE  1683               	bsf	3,5	;RP0=1, select bank3
  6433  01FF  1703               	bsf	3,6	;RP1=1, select bank3
  6434  0200  0816               	movf	(_usart_protocol^(0+384)+6),w
  6435  0201  160A  158A  22A1  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6436  0206  00DF               	movwf	??_Decodify_Command
  6437  0207  085F               	movf	??_Decodify_Command,w
  6438  0208  1683               	bsf	3,5	;RP0=1, select bank1
  6439  0209  00E2               	movwf	Decodify_Command@tempchar^(0+128)
  6440                           
  6441                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6442  020A  3001               	movlw	1
  6443  020B  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6444                           
  6445                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6446  0210  0862               	movf	Decodify_Command@tempchar^(0+128),w
  6447  0211  160A  158A  222B   	fcall	_USART_putc
  6448                           
  6449                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6450  0214  0008               	return
  6451  0215                     l5773:	
  6452                           
  6453                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6454  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6455  0216  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6456  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0218  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6458  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6459  021A  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6460  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6461  021C  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6462  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6463  021E  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6464  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6465  0220  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6466  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6467  0222  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6468  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0224  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6470  0225  1683               	bsf	3,5	;RP0=1, select bank3
  6471  0226  1703               	bsf	3,6	;RP1=1, select bank3
  6472  0227  081C               	movf	(_usart_protocol^(0+384)+12),w
  6473  0228  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0229  1303               	bcf	3,6	;RP1=0, select bank0
  6475  022A  00DF               	movwf	??_Decodify_Command
  6476  022B  01E0               	clrf	??_Decodify_Command+1
  6477  022C  1683               	bsf	3,5	;RP0=1, select bank3
  6478  022D  1703               	bsf	3,6	;RP1=1, select bank3
  6479  022E  081B               	movf	(_usart_protocol^(0+384)+11),w
  6480  022F  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0230  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0231  00E1               	movwf	??_Decodify_Command+2
  6483  0232  01E2               	clrf	??_Decodify_Command+3
  6484  0233  0861               	movf	??_Decodify_Command+2,w
  6485  0234  00E2               	movwf	??_Decodify_Command+3
  6486  0235  01E1               	clrf	??_Decodify_Command+2
  6487  0236  085F               	movf	??_Decodify_Command,w
  6488  0237  0461               	iorwf	??_Decodify_Command+2,w
  6489  0238  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6490  0239  0860               	movf	??_Decodify_Command+1,w
  6491  023A  0462               	iorwf	??_Decodify_Command+3,w
  6492  023B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6493  023C  1683               	bsf	3,5	;RP0=1, select bank3
  6494  023D  1703               	bsf	3,6	;RP1=1, select bank3
  6495  023E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6496  023F  160A  158A  2349  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6497  0244  293F               	goto	L8
  6498  0245                     l5779:	
  6499                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6500                           
  6501                           
  6502                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6503  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6504  0246  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6505  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6506  0248  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6507  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6508  024A  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6509  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6510  024C  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6511  024D  1683               	bsf	3,5	;RP0=1, select bank1
  6512  024E  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6513  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0250  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6515  0251  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0252  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6517  0253  1283               	bcf	3,5	;RP0=0, select bank0
  6518  0254  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6519  0255  1683               	bsf	3,5	;RP0=1, select bank3
  6520  0256  1703               	bsf	3,6	;RP1=1, select bank3
  6521  0257  0816               	movf	(_usart_protocol^(0+384)+6),w
  6522  0258  160A  158A  2411  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6523  025D  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6524  025E  1683               	bsf	3,5	;RP0=1, select bank1
  6525  025F  00DD               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6526  0260  1283               	bcf	3,5	;RP0=0, select bank0
  6527  0261  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6528  0262  299F               	goto	L10
  6529  0263                     l5785:	
  6530                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6531                           
  6532                           
  6533                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6534  0263  1683               	bsf	3,5	;RP0=1, select bank3
  6535  0264  1703               	bsf	3,6	;RP1=1, select bank3
  6536  0265  081B               	movf	(_usart_protocol^(0+384)+11),w
  6537  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6538  0267  1303               	bcf	3,6	;RP1=0, select bank0
  6539  0268  00DF               	movwf	??_Decodify_Command
  6540  0269  085F               	movf	??_Decodify_Command,w
  6541  026A  1683               	bsf	3,5	;RP0=1, select bank1
  6542  026B  00DB               	movwf	Decodify_Command@sizedata^(0+128)
  6543                           
  6544                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6545  026C  085B               	movf	Decodify_Command@sizedata^(0+128),w
  6546  026D  160A  158A  2439  120A  118A  	fcall	_Send_To_MB
  6547                           
  6548                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6549  0272  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6550  0273  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0274  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6552  0275  1683               	bsf	3,5	;RP0=1, select bank1
  6553  0276  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6554  0277  1283               	bcf	3,5	;RP0=0, select bank0
  6555  0278  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6556  0279  1683               	bsf	3,5	;RP0=1, select bank1
  6557  027A  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6558  027B  1283               	bcf	3,5	;RP0=0, select bank0
  6559  027C  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6560  027D  1683               	bsf	3,5	;RP0=1, select bank1
  6561  027E  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6562  027F  1283               	bcf	3,5	;RP0=0, select bank0
  6563  0280  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6564  0281  1683               	bsf	3,5	;RP0=1, select bank1
  6565  0282  085B               	movf	Decodify_Command@sizedata^(0+128),w
  6566  0283  1283               	bcf	3,5	;RP0=0, select bank0
  6567  0284  00DF               	movwf	??_Decodify_Command
  6568  0285  085F               	movf	??_Decodify_Command,w
  6569  0286  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6570  0287  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6571  0288  00E0               	movwf	??_Decodify_Command+1
  6572  0289  0860               	movf	??_Decodify_Command+1,w
  6573  028A  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6574  028B  1683               	bsf	3,5	;RP0=1, select bank3
  6575  028C  1703               	bsf	3,6	;RP1=1, select bank3
  6576  028D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6577  028E  160A  118A  2690   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6578                           
  6579                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6580  0291  0008               	return
  6581  0292                     l5791:	
  6582                           
  6583                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6584  0292  1683               	bsf	3,5	;RP0=1, select bank1
  6585  0293  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6586  0294  1283               	bcf	3,5	;RP0=0, select bank0
  6587  0295  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6588  0296  1683               	bsf	3,5	;RP0=1, select bank1
  6589  0297  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6590  0298  1283               	bcf	3,5	;RP0=0, select bank0
  6591  0299  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6592  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6593  029B  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6594  029C  1283               	bcf	3,5	;RP0=0, select bank0
  6595  029D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6596  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6597  029F  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6598  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6599  02A1  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6600  02A2  1683               	bsf	3,5	;RP0=1, select bank3
  6601  02A3  1703               	bsf	3,6	;RP1=1, select bank3
  6602  02A4  081B               	movf	(_usart_protocol^(0+384)+11),w
  6603  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  6604  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  6605  02A7  00DF               	movwf	??_Decodify_Command
  6606  02A8  085F               	movf	??_Decodify_Command,w
  6607  02A9  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6608  02AA  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6609  02AB  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6610  02AC  3001               	movlw	1
  6611  02AD  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6612  02AE  1683               	bsf	3,5	;RP0=1, select bank3
  6613  02AF  1703               	bsf	3,6	;RP1=1, select bank3
  6614  02B0  0816               	movf	(_usart_protocol^(0+384)+6),w
  6615  02B1  160A  118A  23BA  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6616  02B6  293F               	goto	L8
  6617  02B7                     l5797:	
  6618                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6619                           
  6620                           
  6621                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6622  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  6623  02B8  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6624  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  6625  02BA  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6626  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  6627  02BC  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6628  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  6629  02BE  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6630  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  6631  02C0  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6632  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  6633  02C2  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6634  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6635  02C4  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6636  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  6637  02C6  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6638  02C7  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6639  02C8  00DF               	movwf	??_Decodify_Command
  6640  02C9  085F               	movf	??_Decodify_Command,w
  6641  02CA  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6642  02CB  1683               	bsf	3,5	;RP0=1, select bank3
  6643  02CC  1703               	bsf	3,6	;RP1=1, select bank3
  6644  02CD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6645  02CE  120A  118A  26C5  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6646  02D3  293F               	goto	L8
  6647  02D4                     l5803:	
  6648                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6649                           
  6650                           
  6651                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6652  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  6653  02D5  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6654  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  6655  02D7  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6656  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  6657  02D9  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6658  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6659  02DB  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6660  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  6661  02DD  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6662  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  6663  02DF  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6664  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6665  02E1  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6666  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6667  02E3  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6668  02E4  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6669  02E5  00DF               	movwf	??_Decodify_Command
  6670  02E6  085F               	movf	??_Decodify_Command,w
  6671  02E7  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6672  02E8  1683               	bsf	3,5	;RP0=1, select bank3
  6673  02E9  1703               	bsf	3,6	;RP1=1, select bank3
  6674  02EA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6675  02EB  160A  118A  2524  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6676                           
  6677                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6678  02F0  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6679  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  6680  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  6681  02F3  00A0               	movwf	strlen@s
  6682  02F4  3000               	movlw	0
  6683  02F5  00A1               	movwf	strlen@s+1
  6684  02F6  160A  158A  22D4  120A  118A  	fcall	_strlen
  6685  02FB  0820               	movf	?_strlen,w
  6686  02FC  3E01               	addlw	1
  6687  02FD  2871               	goto	L9
  6688  02FE                     l5807:	
  6689                           
  6690                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6691  02FE  1683               	bsf	3,5	;RP0=1, select bank3
  6692  02FF  1703               	bsf	3,6	;RP1=1, select bank3
  6693  0300  0817               	movf	(_usart_protocol^(0+384)+7),w
  6694  0301  1283               	bcf	3,5	;RP0=0, select bank0
  6695  0302  1303               	bcf	3,6	;RP1=0, select bank0
  6696  0303  00DF               	movwf	??_Decodify_Command
  6697  0304  01E0               	clrf	??_Decodify_Command+1
  6698  0305  085F               	movf	??_Decodify_Command,w
  6699  0306  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6700  0307  0860               	movf	??_Decodify_Command+1,w
  6701  0308  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6702  0309  1683               	bsf	3,5	;RP0=1, select bank3
  6703  030A  1703               	bsf	3,6	;RP1=1, select bank3
  6704  030B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6705  030C  160A  158A  26AC  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6706  0311  293F               	goto	L8
  6707  0312                     l5813:	
  6708                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  6709                           
  6710                           
  6711                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6712  0312  1683               	bsf	3,5	;RP0=1, select bank3
  6713  0313  1703               	bsf	3,6	;RP1=1, select bank3
  6714  0314  0816               	movf	(_usart_protocol^(0+384)+6),w
  6715  0315  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0316  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0317  00DF               	movwf	??_Decodify_Command
  6718  0318  01E0               	clrf	??_Decodify_Command+1
  6719  0319  085F               	movf	??_Decodify_Command,w
  6720  031A  00D6               	movwf	PROCULUS_Show_Screen@screen
  6721  031B  0860               	movf	??_Decodify_Command+1,w
  6722  031C  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6723  031D  160A  158A  2260  120A  118A  	fcall	_PROCULUS_Show_Screen
  6724  0322  293F               	goto	L8
  6725  0323                     l5819:	
  6726                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  6727                           
  6728                           
  6729                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6730  0323  1683               	bsf	3,5	;RP0=1, select bank3
  6731  0324  1703               	bsf	3,6	;RP1=1, select bank3
  6732  0325  0816               	movf	(_usart_protocol^(0+384)+6),w
  6733  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0328  00DF               	movwf	??_Decodify_Command
  6736  0329  01E0               	clrf	??_Decodify_Command+1
  6737  032A  085F               	movf	??_Decodify_Command,w
  6738  032B  00E0               	movwf	??_Decodify_Command+1
  6739  032C  01DF               	clrf	??_Decodify_Command
  6740  032D  1683               	bsf	3,5	;RP0=1, select bank3
  6741  032E  1703               	bsf	3,6	;RP1=1, select bank3
  6742  032F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6743  0330  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0331  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0332  075F               	addwf	??_Decodify_Command,w
  6746  0333  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6747  0334  3000               	movlw	0
  6748  0335  1803               	skipnc
  6749  0336  3001               	movlw	1
  6750  0337  0760               	addwf	??_Decodify_Command+1,w
  6751  0338  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6752  0339  160A  158A  23CC  120A  118A  	fcall	_PROCULUS_Buzzer
  6753  033E  293F               	goto	L8
  6754  033F                     l5825:	
  6755                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  6756                           
  6757                           
  6758                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6759  033F  1683               	bsf	3,5	;RP0=1, select bank3
  6760  0340  1703               	bsf	3,6	;RP1=1, select bank3
  6761  0341  0816               	movf	(_usart_protocol^(0+384)+6),w
  6762  0342  1283               	bcf	3,5	;RP0=0, select bank0
  6763  0343  1303               	bcf	3,6	;RP1=0, select bank0
  6764  0344  00DF               	movwf	??_Decodify_Command
  6765  0345  01E0               	clrf	??_Decodify_Command+1
  6766  0346  085F               	movf	??_Decodify_Command,w
  6767  0347  00E0               	movwf	??_Decodify_Command+1
  6768  0348  01DF               	clrf	??_Decodify_Command
  6769  0349  1683               	bsf	3,5	;RP0=1, select bank3
  6770  034A  1703               	bsf	3,6	;RP1=1, select bank3
  6771  034B  0817               	movf	(_usart_protocol^(0+384)+7),w
  6772  034C  1283               	bcf	3,5	;RP0=0, select bank0
  6773  034D  1303               	bcf	3,6	;RP1=0, select bank0
  6774  034E  075F               	addwf	??_Decodify_Command,w
  6775  034F  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6776  0350  3000               	movlw	0
  6777  0351  1803               	skipnc
  6778  0352  3001               	movlw	1
  6779  0353  0760               	addwf	??_Decodify_Command+1,w
  6780  0354  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6781  0355  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6782  0356  00E1               	movwf	??_Decodify_Command+2
  6783  0357  0861               	movf	??_Decodify_Command+2,w
  6784  0358  00DC               	movwf	PROCULUS_VP_Write_String@text
  6785  0359  160A  158A  22BA  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6786  035E  293F               	goto	L8
  6787  035F                     l5831:	
  6788                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  6789                           
  6790                           
  6791                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  6792  035F  1683               	bsf	3,5	;RP0=1, select bank3
  6793  0360  1703               	bsf	3,6	;RP1=1, select bank3
  6794  0361  0816               	movf	(_usart_protocol^(0+384)+6),w
  6795  0362  1D03               	btfss	3,2
  6796  0363  2B6F               	goto	l5837
  6797                           
  6798                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  6799  0364  0817               	movf	(_usart_protocol^(0+384)+7),w
  6800  0365  1D03               	btfss	3,2
  6801  0366  2B6B               	goto	l424
  6802                           
  6803                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  6804  0367  1283               	bcf	3,5	;RP0=0, select bank0
  6805  0368  1303               	bcf	3,6	;RP1=0, select bank0
  6806  0369  1007               	bcf	7,0	;volatile
  6807  036A  293F               	goto	L8
  6808  036B                     l424:	
  6809                           ;SlaveLiofilizadorVer1.c: 577:                 else
  6810                           
  6811                           
  6812                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  6813  036B  1283               	bcf	3,5	;RP0=0, select bank0
  6814  036C  1303               	bcf	3,6	;RP1=0, select bank0
  6815  036D  1407               	bsf	7,0	;volatile
  6816  036E  293F               	goto	L8
  6817  036F                     l5837:	
  6818  036F  0316               	decf	(_usart_protocol^(0+384)+6),w
  6819  0370  1D03               	btfss	3,2
  6820  0371  293F               	goto	L8
  6821                           
  6822                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  6823  0372  0817               	movf	(_usart_protocol^(0+384)+7),w
  6824  0373  1D03               	btfss	3,2
  6825  0374  2B79               	goto	l428
  6826                           
  6827                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  6828  0375  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0376  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0377  1087               	bcf	7,1	;volatile
  6831  0378  293F               	goto	L8
  6832  0379                     l428:	
  6833                           ;SlaveLiofilizadorVer1.c: 584:                       else
  6834                           
  6835                           
  6836                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  6837  0379  1283               	bcf	3,5	;RP0=0, select bank0
  6838  037A  1303               	bcf	3,6	;RP1=0, select bank0
  6839  037B  1487               	bsf	7,1	;volatile
  6840  037C  293F               	goto	L8
  6841  037D                     l5849:	
  6842                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  6843                           
  6844  037D  1703               	bsf	3,6	;RP1=1, select bank3
  6845  037E  0814               	movf	(_usart_protocol^(0+384)+4),w
  6846  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0380  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0381  00DF               	movwf	??_Decodify_Command
  6849  0382  01E0               	clrf	??_Decodify_Command+1
  6850                           
  6851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6852                           ; Switch size 1, requested type "simple"
  6853                           ; Number of cases is 1, Range of values is 0 to 0
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte            4     3 (average)
  6857                           ; direct_byte           11     8 (fixed)
  6858                           ; jumptable            260     6 (fixed)
  6859                           ;	Chosen strategy is simple_byte
  6860  0383  0860               	movf	??_Decodify_Command+1,w
  6861  0384  3A00               	xorlw	0	; case 0
  6862  0385  1903               	skipnz
  6863  0386  2B88               	goto	l6007
  6864  0387  2BCF               	goto	l430
  6865  0388                     l6007:	
  6866                           
  6867                           ; Switch size 1, requested type "simple"
  6868                           ; Number of cases is 23, Range of values is 2 to 65
  6869                           ; switch strategies available:
  6870                           ; Name         Instructions Cycles
  6871                           ; simple_byte           70    36 (average)
  6872                           ; direct_byte          203    11 (fixed)
  6873                           ; jumptable            263     9 (fixed)
  6874                           ;	Chosen strategy is simple_byte
  6875  0388  085F               	movf	??_Decodify_Command,w
  6876  0389  3A02               	xorlw	2	; case 2
  6877  038A  1903               	skipnz
  6878  038B  28E7               	goto	l5711
  6879  038C  3A01               	xorlw	1	; case 3
  6880  038D  1903               	skipnz
  6881  038E  2920               	goto	l5719
  6882  038F  3A0B               	xorlw	11	; case 8
  6883  0390  1903               	skipnz
  6884  0391  292F               	goto	l5723
  6885  0392  3A01               	xorlw	1	; case 9
  6886  0393  1903               	skipnz
  6887  0394  2949               	goto	l5727
  6888  0395  3A03               	xorlw	3	; case 10
  6889  0396  1903               	skipnz
  6890  0397  2961               	goto	l5733
  6891  0398  3A01               	xorlw	1	; case 11
  6892  0399  1903               	skipnz
  6893  039A  2992               	goto	l5743
  6894  039B  3A07               	xorlw	7	; case 12
  6895  039C  1903               	skipnz
  6896  039D  29B2               	goto	l5749
  6897  039E  3A01               	xorlw	1	; case 13
  6898  039F  1903               	skipnz
  6899  03A0  29BF               	goto	l5755
  6900  03A1  3A1C               	xorlw	28	; case 17
  6901  03A2  1903               	skipnz
  6902  03A3  29CD               	goto	l5761
  6903  03A4  3A03               	xorlw	3	; case 18
  6904  03A5  1903               	skipnz
  6905  03A6  29EE               	goto	l5767
  6906  03A7  3A01               	xorlw	1	; case 19
  6907  03A8  1903               	skipnz
  6908  03A9  2A15               	goto	l5773
  6909  03AA  3A07               	xorlw	7	; case 20
  6910  03AB  1903               	skipnz
  6911  03AC  2A45               	goto	l5779
  6912  03AD  3A01               	xorlw	1	; case 21
  6913  03AE  1903               	skipnz
  6914  03AF  2AB7               	goto	l5797
  6915  03B0  3A03               	xorlw	3	; case 22
  6916  03B1  1903               	skipnz
  6917  03B2  2AD4               	goto	l5803
  6918  03B3  3A01               	xorlw	1	; case 23
  6919  03B4  1903               	skipnz
  6920  03B5  2A92               	goto	l5791
  6921  03B6  3A0F               	xorlw	15	; case 24
  6922  03B7  1903               	skipnz
  6923  03B8  2A63               	goto	l5785
  6924  03B9  3A01               	xorlw	1	; case 25
  6925  03BA  1903               	skipnz
  6926  03BB  2AFE               	goto	l5807
  6927  03BC  3A03               	xorlw	3	; case 26
  6928  03BD  1903               	skipnz
  6929  03BE  287F               	goto	l5695
  6930  03BF  3A38               	xorlw	56	; case 34
  6931  03C0  1903               	skipnz
  6932  03C1  2B3F               	goto	l5825
  6933  03C2  3A06               	xorlw	6	; case 36
  6934  03C3  1903               	skipnz
  6935  03C4  2B23               	goto	l5819
  6936  03C5  3A01               	xorlw	1	; case 37
  6937  03C6  1903               	skipnz
  6938  03C7  2B12               	goto	l5813
  6939  03C8  3A15               	xorlw	21	; case 48
  6940  03C9  1903               	skipnz
  6941  03CA  2B5F               	goto	l5831
  6942  03CB  3A71               	xorlw	113	; case 65
  6943  03CC  1903               	skipnz
  6944  03CD  2866               	goto	l5689
  6945  03CE  2BCF               	goto	l430
  6946  03CF                     l430:	
  6947  03CF  0008               	return
  6948  03D0                     __end_of_Decodify_Command:	
  6949                           
  6950                           	psect	text15
  6951  1B0D                     __ptext15:	
  6952 ;; *************** function _strcpy *****************
  6953 ;; Defined at:
  6954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  to              1    wreg     PTR unsigned char 
  6957 ;;		 -> buffer(33), 
  6958 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6959 ;;		 -> STR_1(8), 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6962 ;;		 -> buffer(33), 
  6963 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6964 ;;		 -> buffer(33), 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      PTR unsigned char 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6969 ;; Tracked objects:
  6970 ;;		On entry : 300/0
  6971 ;;		On exit  : B00/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6974 ;;      Params:         0       1       0       0       0
  6975 ;;      Locals:         0       2       0       0       0
  6976 ;;      Temps:          0       1       0       0       0
  6977 ;;      Totals:         0       4       0       0       0
  6978 ;;Total ram usage:        4 bytes
  6979 ;; Hardware stack levels used:    2
  6980 ;; Hardware stack levels required when called:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_Decodify_Command
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function _strcpy
  6990  1B0D                     _strcpy:	
  6991                           
  6992                           ;incstack = 0
  6993                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6994                           ;strcpy@to stored from wreg
  6995  1B0D  00A2               	movwf	strcpy@to
  6996  1B0E  0822               	movf	strcpy@to,w
  6997  1B0F  00A1               	movwf	??_strcpy
  6998  1B10  0821               	movf	??_strcpy,w
  6999  1B11  00A3               	movwf	strcpy@cp
  7000  1B12                     l4713:	
  7001  1B12  0820               	movf	strcpy@from,w
  7002  1B13  0084               	movwf	4
  7003  1B14  160A  158A  200A  160A  158A  	fcall	stringdir
  7004  1B19  00A1               	movwf	??_strcpy
  7005  1B1A  0823               	movf	strcpy@cp,w
  7006  1B1B  0084               	movwf	4
  7007  1B1C  0821               	movf	??_strcpy,w
  7008  1B1D  1383               	bcf	3,7	;select IRP bank0
  7009  1B1E  0080               	movwf	0
  7010  1B1F  0800               	movf	0,w
  7011  1B20  1903               	btfsc	3,2
  7012  1B21  0008               	return
  7013  1B22  3001               	movlw	1
  7014  1B23  00A1               	movwf	??_strcpy
  7015  1B24  0821               	movf	??_strcpy,w
  7016  1B25  07A3               	addwf	strcpy@cp,f
  7017  1B26  3001               	movlw	1
  7018  1B27  00A1               	movwf	??_strcpy
  7019  1B28  0821               	movf	??_strcpy,w
  7020  1B29  07A0               	addwf	strcpy@from,f
  7021  1B2A  2B12               	goto	l4713
  7022  1B2B                     __end_of_strcpy:	
  7023                           
  7024                           	psect	text16
  7025  1EEB                     __ptext16:	
  7026 ;; *************** function _USART_to_Protocol *****************
  7027 ;; Defined at:
  7028 ;;		line 77 in file "usart.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  usart_protoc    1    wreg     PTR struct .
  7031 ;;		 -> usart_protocol(58), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7034 ;;		 -> usart_protocol(58), 
  7035 ;;  i               2    2[BANK0 ] int 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 300/100
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7045 ;;      Params:         0       0       0       0       0
  7046 ;;      Locals:         0       3       0       0       0
  7047 ;;      Temps:          0       2       0       0       0
  7048 ;;      Totals:         0       5       0       0       0
  7049 ;;Total ram usage:        5 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_Decodify_Command
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function _USART_to_Protocol
  7061  1EEB                     _USART_to_Protocol:	
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7065                           ;USART_to_Protocol@usart_protocol stored from wreg
  7066  1EEB  1283               	bcf	3,5	;RP0=0, select bank0
  7067  1EEC  00A4               	movwf	USART_to_Protocol@usart_protocol
  7068                           
  7069                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7070  1EED  0824               	movf	USART_to_Protocol@usart_protocol,w
  7071  1EEE  0084               	movwf	4
  7072  1EEF  1703               	bsf	3,6	;RP1=1, select bank2
  7073  1EF0  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7074  1EF1  1783               	bsf	3,7	;select IRP bank2
  7075  1EF2  0080               	movwf	0
  7076  1EF3  0A84               	incf	4,f
  7077  1EF4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7078  1EF5  0080               	movwf	0
  7079                           
  7080                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7081  1EF6  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7082  1EF7  1303               	bcf	3,6	;RP1=0, select bank0
  7083  1EF8  00A0               	movwf	??_USART_to_Protocol
  7084  1EF9  0824               	movf	USART_to_Protocol@usart_protocol,w
  7085  1EFA  3E02               	addlw	2
  7086  1EFB  0084               	movwf	4
  7087  1EFC  0820               	movf	??_USART_to_Protocol,w
  7088  1EFD  0080               	movwf	0
  7089                           
  7090                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7091  1EFE  1703               	bsf	3,6	;RP1=1, select bank2
  7092  1EFF  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7093  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  7094  1F01  00A0               	movwf	??_USART_to_Protocol
  7095  1F02  0824               	movf	USART_to_Protocol@usart_protocol,w
  7096  1F03  3E03               	addlw	3
  7097  1F04  0084               	movwf	4
  7098  1F05  0820               	movf	??_USART_to_Protocol,w
  7099  1F06  0080               	movwf	0
  7100                           
  7101                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7102  1F07  1703               	bsf	3,6	;RP1=1, select bank2
  7103  1F08  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7104  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  7105  1F0A  00A0               	movwf	??_USART_to_Protocol
  7106  1F0B  0824               	movf	USART_to_Protocol@usart_protocol,w
  7107  1F0C  3E04               	addlw	4
  7108  1F0D  0084               	movwf	4
  7109  1F0E  0820               	movf	??_USART_to_Protocol,w
  7110  1F0F  0080               	movwf	0
  7111                           
  7112                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7113  1F10  1703               	bsf	3,6	;RP1=1, select bank2
  7114  1F11  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7115  1F12  1303               	bcf	3,6	;RP1=0, select bank0
  7116  1F13  00A0               	movwf	??_USART_to_Protocol
  7117  1F14  0824               	movf	USART_to_Protocol@usart_protocol,w
  7118  1F15  3E05               	addlw	5
  7119  1F16  0084               	movwf	4
  7120  1F17  0820               	movf	??_USART_to_Protocol,w
  7121  1F18  0080               	movwf	0
  7122                           
  7123                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7124  1F19  01A2               	clrf	USART_to_Protocol@i
  7125  1F1A  01A3               	clrf	USART_to_Protocol@i+1
  7126  1F1B                     l4707:	
  7127  1F1B  0824               	movf	USART_to_Protocol@usart_protocol,w
  7128  1F1C  3E05               	addlw	5
  7129  1F1D  0084               	movwf	4
  7130  1F1E  0823               	movf	USART_to_Protocol@i+1,w
  7131  1F1F  3A80               	xorlw	128
  7132  1F20  00A0               	movwf	??_USART_to_Protocol
  7133  1F21  3080               	movlw	128
  7134  1F22  0220               	subwf	??_USART_to_Protocol,w
  7135  1F23  1D03               	skipz
  7136  1F24  2F27               	goto	u4375
  7137  1F25  0800               	movf	0,w
  7138  1F26  0222               	subwf	USART_to_Protocol@i,w
  7139  1F27                     u4375:	
  7140  1F27  1803               	btfsc	3,0
  7141  1F28  0008               	return
  7142                           
  7143                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7144  1F29  1283               	bcf	3,5	;RP0=0, select bank0
  7145  1F2A  1303               	bcf	3,6	;RP1=0, select bank0
  7146  1F2B  0822               	movf	USART_to_Protocol@i,w
  7147  1F2C  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7148  1F2D  0084               	movwf	4
  7149  1F2E  1783               	bsf	3,7	;select IRP bank2
  7150  1F2F  0800               	movf	0,w
  7151  1F30  00A0               	movwf	??_USART_to_Protocol
  7152  1F31  0822               	movf	USART_to_Protocol@i,w
  7153  1F32  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7154  1F33  00A1               	movwf	??_USART_to_Protocol+1
  7155  1F34  0821               	movf	??_USART_to_Protocol+1,w
  7156  1F35  3E06               	addlw	6
  7157  1F36  0084               	movwf	4
  7158  1F37  0820               	movf	??_USART_to_Protocol,w
  7159  1F38  0080               	movwf	0
  7160  1F39  3001               	movlw	1
  7161  1F3A  07A2               	addwf	USART_to_Protocol@i,f
  7162  1F3B  1803               	skipnc
  7163  1F3C  0AA3               	incf	USART_to_Protocol@i+1,f
  7164  1F3D  3000               	movlw	0
  7165  1F3E  07A3               	addwf	USART_to_Protocol@i+1,f
  7166  1F3F  2F1B               	goto	l4707
  7167  1F40                     __end_of_USART_to_Protocol:	
  7168                           
  7169                           	psect	text17
  7170  1C39                     __ptext17:	
  7171 ;; *************** function _Send_To_MB *****************
  7172 ;; Defined at:
  7173 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  size            1    wreg     unsigned char 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  size            1    1[BANK0 ] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0, pclath, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 300/100
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7187 ;;      Params:         0       0       0       0       0
  7188 ;;      Locals:         0       1       0       0       0
  7189 ;;      Temps:          0       0       0       0       0
  7190 ;;      Totals:         0       1       0       0       0
  7191 ;;Total ram usage:        1 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    2
  7194 ;; This function calls:
  7195 ;;		_USART_putc
  7196 ;; This function is called by:
  7197 ;;		_Decodify_Command
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           
  7202                           ;psect for function _Send_To_MB
  7203  1C39                     _Send_To_MB:	
  7204                           
  7205                           ;incstack = 0
  7206                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7207                           ;Send_To_MB@size stored from wreg
  7208  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  7209  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  7210  1C3B  00A1               	movwf	Send_To_MB@size
  7211                           
  7212                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7213  1C3C  30AA               	movlw	170
  7214  1C3D  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7215                           
  7216                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7217  1C42  30BB               	movlw	187
  7218  1C43  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7219                           
  7220                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7221  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  7222  1C49  0869               	movf	_Board_Number,w
  7223  1C4A  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7224                           
  7225                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7226  1C4F  3000               	movlw	0
  7227  1C50  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7228                           
  7229                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7230  1C55  1703               	bsf	3,6	;RP1=1, select bank3
  7231  1C56  0814               	movf	(_usart_protocol^(0+384)+4),w
  7232  1C57  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7233                           
  7234                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7235  1C5C  1283               	bcf	3,5	;RP0=0, select bank0
  7236  1C5D  0821               	movf	Send_To_MB@size,w
  7237  1C5E  160A  158A  222B   	fcall	_USART_putc
  7238  1C61  0008               	return
  7239  1C62                     __end_of_Send_To_MB:	
  7240                           
  7241                           	psect	text18
  7242  19F7                     __ptext18:	
  7243 ;; *************** function _Send_Reply_OK *****************
  7244 ;; Defined at:
  7245 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 300/100
  7256 ;;		On exit  : 300/100
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7259 ;;      Params:         0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    3
  7266 ;; This function calls:
  7267 ;;		_USART_put_string
  7268 ;; This function is called by:
  7269 ;;		_Decodify_Command
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           
  7274                           ;psect for function _Send_Reply_OK
  7275  19F7                     _Send_Reply_OK:	
  7276                           
  7277                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7278                           
  7279                           ;incstack = 0
  7280                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7281  19F7  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7282  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  7283  19F9  00A1               	movwf	USART_put_string@vetor
  7284  19FA  3080               	movlw	128
  7285  19FB  00A2               	movwf	USART_put_string@vetor+1
  7286  19FC  160A  158A  24E9   	fcall	_USART_put_string
  7287  19FF  0008               	return
  7288  1A00                     __end_of_Send_Reply_OK:	
  7289                           
  7290                           	psect	text19
  7291  1CE9                     __ptext19:	
  7292 ;; *************** function _USART_put_string *****************
  7293 ;; Defined at:
  7294 ;;		line 167 in file "usart.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7297 ;;		 -> STR_2(3), buffer(33), 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7300 ;;		 -> STR_2(3), buffer(33), 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 300/0
  7307 ;;		On exit  : 300/100
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7310 ;;      Params:         0       2       0       0       0
  7311 ;;      Locals:         0       2       0       0       0
  7312 ;;      Temps:          0       0       0       0       0
  7313 ;;      Totals:         0       4       0       0       0
  7314 ;;Total ram usage:        4 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    2
  7317 ;; This function calls:
  7318 ;;		_USART_putc
  7319 ;; This function is called by:
  7320 ;;		_Decodify_Command
  7321 ;;		_Send_Reply_OK
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _USART_put_string
  7327  1CE9                     _USART_put_string:	
  7328                           
  7329                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7333  1CE9  0821               	movf	USART_put_string@vetor,w
  7334  1CEA  00A3               	movwf	USART_put_string@ptr
  7335  1CEB  0822               	movf	USART_put_string@vetor+1,w
  7336  1CEC  00A4               	movwf	USART_put_string@ptr+1
  7337  1CED                     l3823:	
  7338                           ;usart.c: 171:     while(*ptr){
  7339                           
  7340                           
  7341                           ;usart.c: 171:     while(*ptr){
  7342  1CED  0824               	movf	USART_put_string@ptr+1,w
  7343  1CEE  00FF               	movwf	127
  7344  1CEF  0823               	movf	USART_put_string@ptr,w
  7345  1CF0  0084               	movwf	4
  7346  1CF1  160A  158A  2000  160A  158A  	fcall	stringtab
  7347  1CF6  3A00               	xorlw	0
  7348  1CF7  1903               	btfsc	3,2
  7349  1CF8  2D0F               	goto	l3825
  7350                           
  7351                           ;usart.c: 172:         USART_putc(*ptr);
  7352  1CF9  0824               	movf	USART_put_string@ptr+1,w
  7353  1CFA  00FF               	movwf	127
  7354  1CFB  0823               	movf	USART_put_string@ptr,w
  7355  1CFC  0084               	movwf	4
  7356  1CFD  160A  158A  2000  160A  158A  	fcall	stringtab
  7357  1D02  160A  158A  222B  160A  158A  	fcall	_USART_putc
  7358                           
  7359                           ;usart.c: 173:         ptr++;
  7360  1D07  3001               	movlw	1
  7361  1D08  1283               	bcf	3,5	;RP0=0, select bank0
  7362  1D09  07A3               	addwf	USART_put_string@ptr,f
  7363  1D0A  1803               	skipnc
  7364  1D0B  0AA4               	incf	USART_put_string@ptr+1,f
  7365  1D0C  3000               	movlw	0
  7366  1D0D  07A4               	addwf	USART_put_string@ptr+1,f
  7367  1D0E  2CED               	goto	l3823
  7368  1D0F                     l3825:	
  7369                           
  7370                           ;usart.c: 175:     USART_putc(*ptr);
  7371  1D0F  0824               	movf	USART_put_string@ptr+1,w
  7372  1D10  00FF               	movwf	127
  7373  1D11  0823               	movf	USART_put_string@ptr,w
  7374  1D12  0084               	movwf	4
  7375  1D13  160A  158A  2000  160A  158A  	fcall	stringtab
  7376  1D18  160A  158A  222B   	fcall	_USART_putc
  7377  1D1B  0008               	return
  7378  1D1C                     __end_of_USART_put_string:	
  7379                           
  7380                           	psect	text20
  7381  1031                     __ptext20:	
  7382 ;; *************** function _Save_Log *****************
  7383 ;; Defined at:
  7384 ;;		line 975 in file "SlaveLiofilizadorVer1.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 300/0
  7395 ;;		On exit  : 300/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7398 ;;      Params:         0       4       0       0       0
  7399 ;;      Locals:         0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0
  7401 ;;      Totals:         0       4       0       0       0
  7402 ;;Total ram usage:        4 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    5
  7405 ;; This function calls:
  7406 ;;		_EEPROM_24C1025_Write_Int
  7407 ;;		___flmul
  7408 ;;		___fltol
  7409 ;; This function is called by:
  7410 ;;		_Decodify_Command
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _Save_Log
  7416  1031                     _Save_Log:	
  7417                           
  7418                           ;SlaveLiofilizadorVer1.c: 976:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao1
      +                          *10.0));
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7422  1031  085B               	movf	Save_Log@add_datalog+3,w
  7423  1032  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7424  1033  085A               	movf	Save_Log@add_datalog+2,w
  7425  1034  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7426  1035  0859               	movf	Save_Log@add_datalog+1,w
  7427  1036  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7428  1037  0858               	movf	Save_Log@add_datalog,w
  7429  1038  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7430  1039  1683               	bsf	3,5	;RP0=1, select bank1
  7431  103A  0823               	movf	(_Tensao1+3)^(0+128),w
  7432  103B  1283               	bcf	3,5	;RP0=0, select bank0
  7433  103C  00B0               	movwf	___flmul@a+3
  7434  103D  1683               	bsf	3,5	;RP0=1, select bank1
  7435  103E  0822               	movf	(_Tensao1+2)^(0+128),w
  7436  103F  1283               	bcf	3,5	;RP0=0, select bank0
  7437  1040  00AF               	movwf	___flmul@a+2
  7438  1041  1683               	bsf	3,5	;RP0=1, select bank1
  7439  1042  0821               	movf	(_Tensao1+1)^(0+128),w
  7440  1043  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1044  00AE               	movwf	___flmul@a+1
  7442  1045  1683               	bsf	3,5	;RP0=1, select bank1
  7443  1046  0820               	movf	_Tensao1^(0+128),w
  7444  1047  1283               	bcf	3,5	;RP0=0, select bank0
  7445  1048  00AD               	movwf	___flmul@a
  7446  1049  3041               	movlw	65
  7447  104A  00AC               	movwf	___flmul@b+3
  7448  104B  3020               	movlw	32
  7449  104C  00AB               	movwf	___flmul@b+2
  7450  104D  3000               	movlw	0
  7451  104E  00AA               	movwf	___flmul@b+1
  7452  104F  3000               	movlw	0
  7453  1050  00A9               	movwf	___flmul@b
  7454  1051  120A  118A  23D0  160A  118A  	fcall	___flmul
  7455  1056  082C               	movf	?___flmul+3,w
  7456  1057  00C6               	movwf	___fltol@f1+3
  7457  1058  082B               	movf	?___flmul+2,w
  7458  1059  00C5               	movwf	___fltol@f1+2
  7459  105A  082A               	movf	?___flmul+1,w
  7460  105B  00C4               	movwf	___fltol@f1+1
  7461  105C  0829               	movf	?___flmul,w
  7462  105D  00C3               	movwf	___fltol@f1
  7463  105E  160A  158A  2795  160A  118A  	fcall	___fltol
  7464  1063  0844               	movf	?___fltol+1,w
  7465  1064  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7466  1065  0843               	movf	?___fltol,w
  7467  1066  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7468  1067  3000               	movlw	0
  7469  1068  160A  158A  2349  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7470                           
  7471                           ;SlaveLiofilizadorVer1.c: 977:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum0
      +                          *10.0));
  7472  106D  085B               	movf	Save_Log@add_datalog+3,w
  7473  106E  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7474  106F  085A               	movf	Save_Log@add_datalog+2,w
  7475  1070  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7476  1071  0859               	movf	Save_Log@add_datalog+1,w
  7477  1072  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7478  1073  0858               	movf	Save_Log@add_datalog,w
  7479  1074  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7480  1075  1683               	bsf	3,5	;RP0=1, select bank1
  7481  1076  0827               	movf	(_Vaccum0+3)^(0+128),w
  7482  1077  1283               	bcf	3,5	;RP0=0, select bank0
  7483  1078  00B0               	movwf	___flmul@a+3
  7484  1079  1683               	bsf	3,5	;RP0=1, select bank1
  7485  107A  0826               	movf	(_Vaccum0+2)^(0+128),w
  7486  107B  1283               	bcf	3,5	;RP0=0, select bank0
  7487  107C  00AF               	movwf	___flmul@a+2
  7488  107D  1683               	bsf	3,5	;RP0=1, select bank1
  7489  107E  0825               	movf	(_Vaccum0+1)^(0+128),w
  7490  107F  1283               	bcf	3,5	;RP0=0, select bank0
  7491  1080  00AE               	movwf	___flmul@a+1
  7492  1081  1683               	bsf	3,5	;RP0=1, select bank1
  7493  1082  0824               	movf	_Vaccum0^(0+128),w
  7494  1083  1283               	bcf	3,5	;RP0=0, select bank0
  7495  1084  00AD               	movwf	___flmul@a
  7496  1085  3041               	movlw	65
  7497  1086  00AC               	movwf	___flmul@b+3
  7498  1087  3020               	movlw	32
  7499  1088  00AB               	movwf	___flmul@b+2
  7500  1089  3000               	movlw	0
  7501  108A  00AA               	movwf	___flmul@b+1
  7502  108B  3000               	movlw	0
  7503  108C  00A9               	movwf	___flmul@b
  7504  108D  120A  118A  23D0  160A  118A  	fcall	___flmul
  7505  1092  082C               	movf	?___flmul+3,w
  7506  1093  00C6               	movwf	___fltol@f1+3
  7507  1094  082B               	movf	?___flmul+2,w
  7508  1095  00C5               	movwf	___fltol@f1+2
  7509  1096  082A               	movf	?___flmul+1,w
  7510  1097  00C4               	movwf	___fltol@f1+1
  7511  1098  0829               	movf	?___flmul,w
  7512  1099  00C3               	movwf	___fltol@f1
  7513  109A  160A  158A  2795  160A  118A  	fcall	___fltol
  7514  109F  0844               	movf	?___fltol+1,w
  7515  10A0  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7516  10A1  0843               	movf	?___fltol,w
  7517  10A2  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7518  10A3  3001               	movlw	1
  7519  10A4  160A  158A  2349   	fcall	_EEPROM_24C1025_Write_Int
  7520  10A7  0008               	return
  7521  10A8                     __end_of_Save_Log:	
  7522                           
  7523                           	psect	text21
  7524  1F95                     __ptext21:	
  7525 ;; *************** function ___fltol *****************
  7526 ;; Defined at:
  7527 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  f1              4   35[BANK0 ] void 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  exp1            1   45[BANK0 ] unsigned char 
  7532 ;;  sign1           1   44[BANK0 ] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  4   35[BANK0 ] long 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 300/0
  7539 ;;		On exit  : 300/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7542 ;;      Params:         0       4       0       0       0
  7543 ;;      Locals:         0       2       0       0       0
  7544 ;;      Temps:          0       5       0       0       0
  7545 ;;      Totals:         0      11       0       0       0
  7546 ;;Total ram usage:       11 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    1
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_Decodify_Command
  7553 ;;		_Save_Log
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           
  7558                           ;psect for function ___fltol
  7559  1F95                     ___fltol:	
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7563  1F95  1003               	clrc
  7564  1F96  0D45               	rlf	___fltol@f1+2,w
  7565  1F97  0D46               	rlf	___fltol@f1+3,w
  7566  1F98  00C7               	movwf	??___fltol
  7567  1F99  0847               	movf	??___fltol,w
  7568  1F9A  00CD               	movwf	___fltol@exp1
  7569  1F9B  084D               	movf	___fltol@exp1,w
  7570  1F9C  1D03               	btfss	3,2
  7571  1F9D  2FA7               	goto	l3925
  7572  1F9E                     l3921:	
  7573  1F9E  3000               	movlw	0
  7574  1F9F  00C6               	movwf	?___fltol+3
  7575  1FA0  3000               	movlw	0
  7576  1FA1  00C5               	movwf	?___fltol+2
  7577  1FA2  3000               	movlw	0
  7578  1FA3  00C4               	movwf	?___fltol+1
  7579  1FA4  3000               	movlw	0
  7580  1FA5  00C3               	movwf	?___fltol
  7581  1FA6  0008               	return
  7582  1FA7                     l3925:	
  7583  1FA7  0843               	movf	___fltol@f1,w
  7584  1FA8  00C7               	movwf	??___fltol
  7585  1FA9  0844               	movf	___fltol@f1+1,w
  7586  1FAA  00C8               	movwf	??___fltol+1
  7587  1FAB  0845               	movf	___fltol@f1+2,w
  7588  1FAC  00C9               	movwf	??___fltol+2
  7589  1FAD  0846               	movf	___fltol@f1+3,w
  7590  1FAE  00CA               	movwf	??___fltol+3
  7591  1FAF  301F               	movlw	31
  7592  1FB0                     u3035:	
  7593  1FB0  1003               	clrc
  7594  1FB1  0CCA               	rrf	??___fltol+3,f
  7595  1FB2  0CC9               	rrf	??___fltol+2,f
  7596  1FB3  0CC8               	rrf	??___fltol+1,f
  7597  1FB4  0CC7               	rrf	??___fltol,f
  7598  1FB5  3EFF               	addlw	-1
  7599  1FB6  1D03               	skipz
  7600  1FB7  2FB0               	goto	u3035
  7601  1FB8  0847               	movf	??___fltol,w
  7602  1FB9  00CB               	movwf	??___fltol+4
  7603  1FBA  084B               	movf	??___fltol+4,w
  7604  1FBB  00CC               	movwf	___fltol@sign1
  7605  1FBC  17C5               	bsf	___fltol@f1+2,7
  7606  1FBD  30FF               	movlw	255
  7607  1FBE  05C3               	andwf	___fltol@f1,f
  7608  1FBF  30FF               	movlw	255
  7609  1FC0  05C4               	andwf	___fltol@f1+1,f
  7610  1FC1  30FF               	movlw	255
  7611  1FC2  05C5               	andwf	___fltol@f1+2,f
  7612  1FC3  3000               	movlw	0
  7613  1FC4  05C6               	andwf	___fltol@f1+3,f
  7614  1FC5  3096               	movlw	150
  7615  1FC6  02CD               	subwf	___fltol@exp1,f
  7616  1FC7  1FCD               	btfss	___fltol@exp1,7
  7617  1FC8  2FDE               	goto	l3943
  7618  1FC9  084D               	movf	___fltol@exp1,w
  7619  1FCA  3A80               	xorlw	128
  7620  1FCB  3E97               	addlw	151
  7621  1FCC  1C03               	btfss	3,0
  7622  1FCD  2F9E               	goto	l3921
  7623  1FCE                     l3941:	
  7624  1FCE  3001               	movlw	1
  7625  1FCF                     u3065:	
  7626  1FCF  1003               	clrc
  7627  1FD0  0CC6               	rrf	___fltol@f1+3,f
  7628  1FD1  0CC5               	rrf	___fltol@f1+2,f
  7629  1FD2  0CC4               	rrf	___fltol@f1+1,f
  7630  1FD3  0CC3               	rrf	___fltol@f1,f
  7631  1FD4  3EFF               	addlw	-1
  7632  1FD5  1D03               	skipz
  7633  1FD6  2FCF               	goto	u3065
  7634  1FD7  3001               	movlw	1
  7635  1FD8  00C7               	movwf	??___fltol
  7636  1FD9  0847               	movf	??___fltol,w
  7637  1FDA  07CD               	addwf	___fltol@exp1,f
  7638  1FDB  1903               	btfsc	3,2
  7639  1FDC  2FF1               	goto	l3951
  7640  1FDD  2FCE               	goto	l3941
  7641  1FDE                     l3943:	
  7642  1FDE  3020               	movlw	32
  7643  1FDF  024D               	subwf	___fltol@exp1,w
  7644  1FE0  1803               	btfsc	3,0
  7645  1FE1  2F9E               	goto	l3921
  7646  1FE2                     l1188:	
  7647  1FE2  084D               	movf	___fltol@exp1,w
  7648  1FE3  1903               	btfsc	3,2
  7649  1FE4  2FF1               	goto	l3951
  7650  1FE5  3001               	movlw	1
  7651  1FE6  00C7               	movwf	??___fltol
  7652  1FE7                     u3095:	
  7653  1FE7  1003               	clrc
  7654  1FE8  0DC3               	rlf	___fltol@f1,f
  7655  1FE9  0DC4               	rlf	___fltol@f1+1,f
  7656  1FEA  0DC5               	rlf	___fltol@f1+2,f
  7657  1FEB  0DC6               	rlf	___fltol@f1+3,f
  7658  1FEC  0BC7               	decfsz	??___fltol,f
  7659  1FED  2FE7               	goto	u3095
  7660  1FEE  3001               	movlw	1
  7661  1FEF  02CD               	subwf	___fltol@exp1,f
  7662  1FF0  2FE2               	goto	l1188
  7663  1FF1                     l3951:	
  7664  1FF1  084C               	movf	___fltol@sign1,w
  7665  1FF2  1903               	btfsc	3,2
  7666  1FF3  0008               	return
  7667  1FF4  09C3               	comf	___fltol@f1,f
  7668  1FF5  09C4               	comf	___fltol@f1+1,f
  7669  1FF6  09C5               	comf	___fltol@f1+2,f
  7670  1FF7  09C6               	comf	___fltol@f1+3,f
  7671  1FF8  0AC3               	incf	___fltol@f1,f
  7672  1FF9  1903               	skipnz
  7673  1FFA  0AC4               	incf	___fltol@f1+1,f
  7674  1FFB  1903               	skipnz
  7675  1FFC  0AC5               	incf	___fltol@f1+2,f
  7676  1FFD  1903               	skipnz
  7677  1FFE  0AC6               	incf	___fltol@f1+3,f
  7678  1FFF  0008               	return
  7679  2000                     __end_of___fltol:	
  7680                           
  7681                           	psect	text22
  7682  03D0                     __ptext22:	
  7683 ;; *************** function ___flmul *****************
  7684 ;; Defined at:
  7685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  b               4    9[BANK0 ] long 
  7688 ;;  a               4   13[BANK0 ] long 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  prod            4   29[BANK0 ] struct .
  7691 ;;  grs             4   24[BANK0 ] unsigned long 
  7692 ;;  temp            2   33[BANK0 ] struct .
  7693 ;;  bexp            1   28[BANK0 ] unsigned char 
  7694 ;;  aexp            1   23[BANK0 ] unsigned char 
  7695 ;;  sign            1   22[BANK0 ] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  4    9[BANK0 ] unsigned char 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 300/0
  7702 ;;		On exit  : 300/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7705 ;;      Params:         0       8       0       0       0
  7706 ;;      Locals:         0      13       0       0       0
  7707 ;;      Temps:          0       5       0       0       0
  7708 ;;      Totals:         0      26       0       0       0
  7709 ;;Total ram usage:       26 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    2
  7712 ;; This function calls:
  7713 ;;		__Umul8_16
  7714 ;; This function is called by:
  7715 ;;		_Decodify_Command
  7716 ;;		_MediaPlacaVaccum
  7717 ;;		_Save_Log
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           
  7722                           ;psect for function ___flmul
  7723  03D0                     ___flmul:	
  7724                           
  7725                           ;incstack = 0
  7726                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7727  03D0  082C               	movf	___flmul@b+3,w
  7728  03D1  3980               	andlw	128
  7729  03D2  00B1               	movwf	??___flmul
  7730  03D3  0831               	movf	??___flmul,w
  7731  03D4  00B6               	movwf	___flmul@sign
  7732  03D5  082C               	movf	___flmul@b+3,w
  7733  03D6  00B1               	movwf	??___flmul
  7734  03D7  0731               	addwf	??___flmul,w
  7735  03D8  00B2               	movwf	??___flmul+1
  7736  03D9  0832               	movf	??___flmul+1,w
  7737  03DA  00BC               	movwf	___flmul@bexp
  7738  03DB  1BAB               	btfsc	___flmul@b+2,7
  7739  03DC  143C               	bsf	___flmul@bexp,0
  7740  03DD  083C               	movf	___flmul@bexp,w
  7741  03DE  1903               	btfsc	3,2
  7742  03DF  2BED               	goto	l4191
  7743  03E0  0A3C               	incf	___flmul@bexp,w
  7744  03E1  1D03               	btfss	3,2
  7745  03E2  2BEB               	goto	l4189
  7746  03E3  3000               	movlw	0
  7747  03E4  00AC               	movwf	___flmul@b+3
  7748  03E5  3000               	movlw	0
  7749  03E6  00AB               	movwf	___flmul@b+2
  7750  03E7  3000               	movlw	0
  7751  03E8  00AA               	movwf	___flmul@b+1
  7752  03E9  3000               	movlw	0
  7753  03EA  00A9               	movwf	___flmul@b
  7754  03EB                     l4189:	
  7755  03EB  17AB               	bsf	___flmul@b+2,7
  7756  03EC  2BF5               	goto	l4193
  7757  03ED                     l4191:	
  7758  03ED  3000               	movlw	0
  7759  03EE  00AC               	movwf	___flmul@b+3
  7760  03EF  3000               	movlw	0
  7761  03F0  00AB               	movwf	___flmul@b+2
  7762  03F1  3000               	movlw	0
  7763  03F2  00AA               	movwf	___flmul@b+1
  7764  03F3  3000               	movlw	0
  7765  03F4  00A9               	movwf	___flmul@b
  7766  03F5                     l4193:	
  7767  03F5  0830               	movf	___flmul@a+3,w
  7768  03F6  3980               	andlw	128
  7769  03F7  00B1               	movwf	??___flmul
  7770  03F8  0831               	movf	??___flmul,w
  7771  03F9  06B6               	xorwf	___flmul@sign,f
  7772  03FA  0830               	movf	___flmul@a+3,w
  7773  03FB  00B1               	movwf	??___flmul
  7774  03FC  0731               	addwf	??___flmul,w
  7775  03FD  00B2               	movwf	??___flmul+1
  7776  03FE  0832               	movf	??___flmul+1,w
  7777  03FF  00B7               	movwf	___flmul@aexp
  7778  0400  1BAF               	btfsc	___flmul@a+2,7
  7779  0401  1437               	bsf	___flmul@aexp,0
  7780  0402  0837               	movf	___flmul@aexp,w
  7781  0403  1903               	btfsc	3,2
  7782  0404  2C12               	goto	l4209
  7783  0405  0A37               	incf	___flmul@aexp,w
  7784  0406  1D03               	btfss	3,2
  7785  0407  2C10               	goto	l4207
  7786  0408  3000               	movlw	0
  7787  0409  00B0               	movwf	___flmul@a+3
  7788  040A  3000               	movlw	0
  7789  040B  00AF               	movwf	___flmul@a+2
  7790  040C  3000               	movlw	0
  7791  040D  00AE               	movwf	___flmul@a+1
  7792  040E  3000               	movlw	0
  7793  040F  00AD               	movwf	___flmul@a
  7794  0410                     l4207:	
  7795  0410  17AF               	bsf	___flmul@a+2,7
  7796  0411  2C1A               	goto	l4211
  7797  0412                     l4209:	
  7798  0412  3000               	movlw	0
  7799  0413  00B0               	movwf	___flmul@a+3
  7800  0414  3000               	movlw	0
  7801  0415  00AF               	movwf	___flmul@a+2
  7802  0416  3000               	movlw	0
  7803  0417  00AE               	movwf	___flmul@a+1
  7804  0418  3000               	movlw	0
  7805  0419  00AD               	movwf	___flmul@a
  7806  041A                     l4211:	
  7807  041A  0837               	movf	___flmul@aexp,w
  7808  041B  1D03               	btfss	3,2
  7809  041C  083C               	movf	___flmul@bexp,w
  7810  041D  1D03               	btfss	3,2
  7811  041E  2C28               	goto	l4219
  7812  041F  3000               	movlw	0
  7813  0420  00AC               	movwf	?___flmul+3
  7814  0421  3000               	movlw	0
  7815  0422  00AB               	movwf	?___flmul+2
  7816  0423  3000               	movlw	0
  7817  0424  00AA               	movwf	?___flmul+1
  7818  0425  3000               	movlw	0
  7819  0426  00A9               	movwf	?___flmul
  7820  0427  0008               	return
  7821  0428                     l4219:	
  7822  0428  0829               	movf	___flmul@b,w
  7823  0429  00B1               	movwf	??___flmul
  7824  042A  0831               	movf	??___flmul,w
  7825  042B  00A0               	movwf	__Umul8_16@multiplicand
  7826  042C  082F               	movf	___flmul@a+2,w
  7827  042D  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  7828  0432  0821               	movf	?__Umul8_16+1,w
  7829  0433  00C2               	movwf	___flmul@temp+1
  7830  0434  0820               	movf	?__Umul8_16,w
  7831  0435  00C1               	movwf	___flmul@temp
  7832  0436  0841               	movf	___flmul@temp,w
  7833  0437  00B1               	movwf	??___flmul
  7834  0438  01B2               	clrf	??___flmul+1
  7835  0439  01B3               	clrf	??___flmul+2
  7836  043A  01B4               	clrf	??___flmul+3
  7837  043B  0834               	movf	??___flmul+3,w
  7838  043C  00BB               	movwf	___flmul@grs+3
  7839  043D  0833               	movf	??___flmul+2,w
  7840  043E  00BA               	movwf	___flmul@grs+2
  7841  043F  0832               	movf	??___flmul+1,w
  7842  0440  00B9               	movwf	___flmul@grs+1
  7843  0441  0831               	movf	??___flmul,w
  7844  0442  00B8               	movwf	___flmul@grs
  7845  0443  0842               	movf	___flmul@temp+1,w
  7846  0444  00B1               	movwf	??___flmul
  7847  0445  01B2               	clrf	??___flmul+1
  7848  0446  01B3               	clrf	??___flmul+2
  7849  0447  01B4               	clrf	??___flmul+3
  7850  0448  0834               	movf	??___flmul+3,w
  7851  0449  00C0               	movwf	___flmul@prod+3
  7852  044A  0833               	movf	??___flmul+2,w
  7853  044B  00BF               	movwf	___flmul@prod+2
  7854  044C  0832               	movf	??___flmul+1,w
  7855  044D  00BE               	movwf	___flmul@prod+1
  7856  044E  0831               	movf	??___flmul,w
  7857  044F  00BD               	movwf	___flmul@prod
  7858  0450  082A               	movf	___flmul@b+1,w
  7859  0451  00B1               	movwf	??___flmul
  7860  0452  0831               	movf	??___flmul,w
  7861  0453  00A0               	movwf	__Umul8_16@multiplicand
  7862  0454  082E               	movf	___flmul@a+1,w
  7863  0455  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  7864  045A  0821               	movf	?__Umul8_16+1,w
  7865  045B  00C2               	movwf	___flmul@temp+1
  7866  045C  0820               	movf	?__Umul8_16,w
  7867  045D  00C1               	movwf	___flmul@temp
  7868  045E  0841               	movf	___flmul@temp,w
  7869  045F  00B1               	movwf	??___flmul
  7870  0460  01B2               	clrf	??___flmul+1
  7871  0461  01B3               	clrf	??___flmul+2
  7872  0462  01B4               	clrf	??___flmul+3
  7873  0463  0831               	movf	??___flmul,w
  7874  0464  07B8               	addwf	___flmul@grs,f
  7875  0465  0832               	movf	??___flmul+1,w
  7876  0466  1103               	clrz
  7877  0467  1803               	skipnc
  7878  0468  3E01               	addlw	1
  7879  0469  1D03               	btfss	3,2
  7880  046A  07B9               	addwf	___flmul@grs+1,f
  7881  046B  0833               	movf	??___flmul+2,w
  7882  046C  1103               	clrz
  7883  046D  1803               	skipnc
  7884  046E  3E01               	addlw	1
  7885  046F  1D03               	btfss	3,2
  7886  0470  07BA               	addwf	___flmul@grs+2,f
  7887  0471  0834               	movf	??___flmul+3,w
  7888  0472  1103               	clrz
  7889  0473  1803               	skipnc
  7890  0474  3E01               	addlw	1
  7891  0475  1D03               	btfss	3,2
  7892  0476  07BB               	addwf	___flmul@grs+3,f
  7893  0477  0842               	movf	___flmul@temp+1,w
  7894  0478  00B1               	movwf	??___flmul
  7895  0479  01B2               	clrf	??___flmul+1
  7896  047A  01B3               	clrf	??___flmul+2
  7897  047B  01B4               	clrf	??___flmul+3
  7898  047C  0831               	movf	??___flmul,w
  7899  047D  07BD               	addwf	___flmul@prod,f
  7900  047E  0832               	movf	??___flmul+1,w
  7901  047F  1103               	clrz
  7902  0480  1803               	skipnc
  7903  0481  3E01               	addlw	1
  7904  0482  1D03               	btfss	3,2
  7905  0483  07BE               	addwf	___flmul@prod+1,f
  7906  0484  0833               	movf	??___flmul+2,w
  7907  0485  1103               	clrz
  7908  0486  1803               	skipnc
  7909  0487  3E01               	addlw	1
  7910  0488  1D03               	btfss	3,2
  7911  0489  07BF               	addwf	___flmul@prod+2,f
  7912  048A  0834               	movf	??___flmul+3,w
  7913  048B  1103               	clrz
  7914  048C  1803               	skipnc
  7915  048D  3E01               	addlw	1
  7916  048E  1D03               	btfss	3,2
  7917  048F  07C0               	addwf	___flmul@prod+3,f
  7918  0490  082B               	movf	___flmul@b+2,w
  7919  0491  00B1               	movwf	??___flmul
  7920  0492  0831               	movf	??___flmul,w
  7921  0493  00A0               	movwf	__Umul8_16@multiplicand
  7922  0494  082D               	movf	___flmul@a,w
  7923  0495  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  7924  049A  0821               	movf	?__Umul8_16+1,w
  7925  049B  00C2               	movwf	___flmul@temp+1
  7926  049C  0820               	movf	?__Umul8_16,w
  7927  049D  00C1               	movwf	___flmul@temp
  7928  049E  0841               	movf	___flmul@temp,w
  7929  049F  00B1               	movwf	??___flmul
  7930  04A0  01B2               	clrf	??___flmul+1
  7931  04A1  01B3               	clrf	??___flmul+2
  7932  04A2  01B4               	clrf	??___flmul+3
  7933  04A3  0831               	movf	??___flmul,w
  7934  04A4  07B8               	addwf	___flmul@grs,f
  7935  04A5  0832               	movf	??___flmul+1,w
  7936  04A6  1103               	clrz
  7937  04A7  1803               	skipnc
  7938  04A8  3E01               	addlw	1
  7939  04A9  1D03               	btfss	3,2
  7940  04AA  07B9               	addwf	___flmul@grs+1,f
  7941  04AB  0833               	movf	??___flmul+2,w
  7942  04AC  1103               	clrz
  7943  04AD  1803               	skipnc
  7944  04AE  3E01               	addlw	1
  7945  04AF  1D03               	btfss	3,2
  7946  04B0  07BA               	addwf	___flmul@grs+2,f
  7947  04B1  0834               	movf	??___flmul+3,w
  7948  04B2  1103               	clrz
  7949  04B3  1803               	skipnc
  7950  04B4  3E01               	addlw	1
  7951  04B5  1D03               	btfss	3,2
  7952  04B6  07BB               	addwf	___flmul@grs+3,f
  7953  04B7  0842               	movf	___flmul@temp+1,w
  7954  04B8  00B1               	movwf	??___flmul
  7955  04B9  01B2               	clrf	??___flmul+1
  7956  04BA  01B3               	clrf	??___flmul+2
  7957  04BB  01B4               	clrf	??___flmul+3
  7958  04BC  0831               	movf	??___flmul,w
  7959  04BD  07BD               	addwf	___flmul@prod,f
  7960  04BE  0832               	movf	??___flmul+1,w
  7961  04BF  1103               	clrz
  7962  04C0  1803               	skipnc
  7963  04C1  3E01               	addlw	1
  7964  04C2  1D03               	btfss	3,2
  7965  04C3  07BE               	addwf	___flmul@prod+1,f
  7966  04C4  0833               	movf	??___flmul+2,w
  7967  04C5  1103               	clrz
  7968  04C6  1803               	skipnc
  7969  04C7  3E01               	addlw	1
  7970  04C8  1D03               	btfss	3,2
  7971  04C9  07BF               	addwf	___flmul@prod+2,f
  7972  04CA  0834               	movf	??___flmul+3,w
  7973  04CB  1103               	clrz
  7974  04CC  1803               	skipnc
  7975  04CD  3E01               	addlw	1
  7976  04CE  1D03               	btfss	3,2
  7977  04CF  07C0               	addwf	___flmul@prod+3,f
  7978  04D0  3008               	movlw	8
  7979  04D1  00B1               	movwf	??___flmul
  7980  04D2                     u3775:	
  7981  04D2  1003               	clrc
  7982  04D3  0DB8               	rlf	___flmul@grs,f
  7983  04D4  0DB9               	rlf	___flmul@grs+1,f
  7984  04D5  0DBA               	rlf	___flmul@grs+2,f
  7985  04D6  0DBB               	rlf	___flmul@grs+3,f
  7986  04D7  0BB1               	decfsz	??___flmul,f
  7987  04D8  2CD2               	goto	u3775
  7988  04D9  082A               	movf	___flmul@b+1,w
  7989  04DA  00B1               	movwf	??___flmul
  7990  04DB  0831               	movf	??___flmul,w
  7991  04DC  00A0               	movwf	__Umul8_16@multiplicand
  7992  04DD  082D               	movf	___flmul@a,w
  7993  04DE  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  7994  04E3  0821               	movf	?__Umul8_16+1,w
  7995  04E4  00C2               	movwf	___flmul@temp+1
  7996  04E5  0820               	movf	?__Umul8_16,w
  7997  04E6  00C1               	movwf	___flmul@temp
  7998  04E7  0841               	movf	___flmul@temp,w
  7999  04E8  00B1               	movwf	??___flmul
  8000  04E9  0842               	movf	___flmul@temp+1,w
  8001  04EA  00B2               	movwf	??___flmul+1
  8002  04EB  01B3               	clrf	??___flmul+2
  8003  04EC  01B4               	clrf	??___flmul+3
  8004  04ED  0831               	movf	??___flmul,w
  8005  04EE  07B8               	addwf	___flmul@grs,f
  8006  04EF  0832               	movf	??___flmul+1,w
  8007  04F0  1103               	clrz
  8008  04F1  1803               	skipnc
  8009  04F2  3E01               	addlw	1
  8010  04F3  1D03               	btfss	3,2
  8011  04F4  07B9               	addwf	___flmul@grs+1,f
  8012  04F5  0833               	movf	??___flmul+2,w
  8013  04F6  1103               	clrz
  8014  04F7  1803               	skipnc
  8015  04F8  3E01               	addlw	1
  8016  04F9  1D03               	btfss	3,2
  8017  04FA  07BA               	addwf	___flmul@grs+2,f
  8018  04FB  0834               	movf	??___flmul+3,w
  8019  04FC  1103               	clrz
  8020  04FD  1803               	skipnc
  8021  04FE  3E01               	addlw	1
  8022  04FF  1D03               	btfss	3,2
  8023  0500  07BB               	addwf	___flmul@grs+3,f
  8024  0501  0829               	movf	___flmul@b,w
  8025  0502  00B1               	movwf	??___flmul
  8026  0503  0831               	movf	??___flmul,w
  8027  0504  00A0               	movwf	__Umul8_16@multiplicand
  8028  0505  082E               	movf	___flmul@a+1,w
  8029  0506  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  8030  050B  0821               	movf	?__Umul8_16+1,w
  8031  050C  00C2               	movwf	___flmul@temp+1
  8032  050D  0820               	movf	?__Umul8_16,w
  8033  050E  00C1               	movwf	___flmul@temp
  8034  050F  0841               	movf	___flmul@temp,w
  8035  0510  00B1               	movwf	??___flmul
  8036  0511  0842               	movf	___flmul@temp+1,w
  8037  0512  00B2               	movwf	??___flmul+1
  8038  0513  01B3               	clrf	??___flmul+2
  8039  0514  01B4               	clrf	??___flmul+3
  8040  0515  0831               	movf	??___flmul,w
  8041  0516  07B8               	addwf	___flmul@grs,f
  8042  0517  0832               	movf	??___flmul+1,w
  8043  0518  1103               	clrz
  8044  0519  1803               	skipnc
  8045  051A  3E01               	addlw	1
  8046  051B  1D03               	btfss	3,2
  8047  051C  07B9               	addwf	___flmul@grs+1,f
  8048  051D  0833               	movf	??___flmul+2,w
  8049  051E  1103               	clrz
  8050  051F  1803               	skipnc
  8051  0520  3E01               	addlw	1
  8052  0521  1D03               	btfss	3,2
  8053  0522  07BA               	addwf	___flmul@grs+2,f
  8054  0523  0834               	movf	??___flmul+3,w
  8055  0524  1103               	clrz
  8056  0525  1803               	skipnc
  8057  0526  3E01               	addlw	1
  8058  0527  1D03               	btfss	3,2
  8059  0528  07BB               	addwf	___flmul@grs+3,f
  8060  0529  3008               	movlw	8
  8061  052A  00B1               	movwf	??___flmul
  8062  052B                     u3805:	
  8063  052B  1003               	clrc
  8064  052C  0DB8               	rlf	___flmul@grs,f
  8065  052D  0DB9               	rlf	___flmul@grs+1,f
  8066  052E  0DBA               	rlf	___flmul@grs+2,f
  8067  052F  0DBB               	rlf	___flmul@grs+3,f
  8068  0530  0BB1               	decfsz	??___flmul,f
  8069  0531  2D2B               	goto	u3805
  8070  0532  0829               	movf	___flmul@b,w
  8071  0533  00B1               	movwf	??___flmul
  8072  0534  0831               	movf	??___flmul,w
  8073  0535  00A0               	movwf	__Umul8_16@multiplicand
  8074  0536  082D               	movf	___flmul@a,w
  8075  0537  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  8076  053C  0821               	movf	?__Umul8_16+1,w
  8077  053D  00C2               	movwf	___flmul@temp+1
  8078  053E  0820               	movf	?__Umul8_16,w
  8079  053F  00C1               	movwf	___flmul@temp
  8080  0540  0841               	movf	___flmul@temp,w
  8081  0541  00B1               	movwf	??___flmul
  8082  0542  0842               	movf	___flmul@temp+1,w
  8083  0543  00B2               	movwf	??___flmul+1
  8084  0544  01B3               	clrf	??___flmul+2
  8085  0545  01B4               	clrf	??___flmul+3
  8086  0546  0831               	movf	??___flmul,w
  8087  0547  07B8               	addwf	___flmul@grs,f
  8088  0548  0832               	movf	??___flmul+1,w
  8089  0549  1103               	clrz
  8090  054A  1803               	skipnc
  8091  054B  3E01               	addlw	1
  8092  054C  1D03               	btfss	3,2
  8093  054D  07B9               	addwf	___flmul@grs+1,f
  8094  054E  0833               	movf	??___flmul+2,w
  8095  054F  1103               	clrz
  8096  0550  1803               	skipnc
  8097  0551  3E01               	addlw	1
  8098  0552  1D03               	btfss	3,2
  8099  0553  07BA               	addwf	___flmul@grs+2,f
  8100  0554  0834               	movf	??___flmul+3,w
  8101  0555  1103               	clrz
  8102  0556  1803               	skipnc
  8103  0557  3E01               	addlw	1
  8104  0558  1D03               	btfss	3,2
  8105  0559  07BB               	addwf	___flmul@grs+3,f
  8106  055A  082A               	movf	___flmul@b+1,w
  8107  055B  00B1               	movwf	??___flmul
  8108  055C  0831               	movf	??___flmul,w
  8109  055D  00A0               	movwf	__Umul8_16@multiplicand
  8110  055E  082F               	movf	___flmul@a+2,w
  8111  055F  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  8112  0564  0821               	movf	?__Umul8_16+1,w
  8113  0565  00C2               	movwf	___flmul@temp+1
  8114  0566  0820               	movf	?__Umul8_16,w
  8115  0567  00C1               	movwf	___flmul@temp
  8116  0568  0841               	movf	___flmul@temp,w
  8117  0569  00B1               	movwf	??___flmul
  8118  056A  0842               	movf	___flmul@temp+1,w
  8119  056B  00B2               	movwf	??___flmul+1
  8120  056C  01B3               	clrf	??___flmul+2
  8121  056D  01B4               	clrf	??___flmul+3
  8122  056E  0831               	movf	??___flmul,w
  8123  056F  07BD               	addwf	___flmul@prod,f
  8124  0570  0832               	movf	??___flmul+1,w
  8125  0571  1103               	clrz
  8126  0572  1803               	skipnc
  8127  0573  3E01               	addlw	1
  8128  0574  1D03               	btfss	3,2
  8129  0575  07BE               	addwf	___flmul@prod+1,f
  8130  0576  0833               	movf	??___flmul+2,w
  8131  0577  1103               	clrz
  8132  0578  1803               	skipnc
  8133  0579  3E01               	addlw	1
  8134  057A  1D03               	btfss	3,2
  8135  057B  07BF               	addwf	___flmul@prod+2,f
  8136  057C  0834               	movf	??___flmul+3,w
  8137  057D  1103               	clrz
  8138  057E  1803               	skipnc
  8139  057F  3E01               	addlw	1
  8140  0580  1D03               	btfss	3,2
  8141  0581  07C0               	addwf	___flmul@prod+3,f
  8142  0582  082B               	movf	___flmul@b+2,w
  8143  0583  00B1               	movwf	??___flmul
  8144  0584  0831               	movf	??___flmul,w
  8145  0585  00A0               	movwf	__Umul8_16@multiplicand
  8146  0586  082E               	movf	___flmul@a+1,w
  8147  0587  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  8148  058C  0821               	movf	?__Umul8_16+1,w
  8149  058D  00C2               	movwf	___flmul@temp+1
  8150  058E  0820               	movf	?__Umul8_16,w
  8151  058F  00C1               	movwf	___flmul@temp
  8152  0590  0841               	movf	___flmul@temp,w
  8153  0591  00B1               	movwf	??___flmul
  8154  0592  0842               	movf	___flmul@temp+1,w
  8155  0593  00B2               	movwf	??___flmul+1
  8156  0594  01B3               	clrf	??___flmul+2
  8157  0595  01B4               	clrf	??___flmul+3
  8158  0596  0831               	movf	??___flmul,w
  8159  0597  07BD               	addwf	___flmul@prod,f
  8160  0598  0832               	movf	??___flmul+1,w
  8161  0599  1103               	clrz
  8162  059A  1803               	skipnc
  8163  059B  3E01               	addlw	1
  8164  059C  1D03               	btfss	3,2
  8165  059D  07BE               	addwf	___flmul@prod+1,f
  8166  059E  0833               	movf	??___flmul+2,w
  8167  059F  1103               	clrz
  8168  05A0  1803               	skipnc
  8169  05A1  3E01               	addlw	1
  8170  05A2  1D03               	btfss	3,2
  8171  05A3  07BF               	addwf	___flmul@prod+2,f
  8172  05A4  0834               	movf	??___flmul+3,w
  8173  05A5  1103               	clrz
  8174  05A6  1803               	skipnc
  8175  05A7  3E01               	addlw	1
  8176  05A8  1D03               	btfss	3,2
  8177  05A9  07C0               	addwf	___flmul@prod+3,f
  8178  05AA  082B               	movf	___flmul@b+2,w
  8179  05AB  00B1               	movwf	??___flmul
  8180  05AC  0831               	movf	??___flmul,w
  8181  05AD  00A0               	movwf	__Umul8_16@multiplicand
  8182  05AE  082F               	movf	___flmul@a+2,w
  8183  05AF  160A  158A  23EE  120A  118A  	fcall	__Umul8_16
  8184  05B4  0821               	movf	?__Umul8_16+1,w
  8185  05B5  00C2               	movwf	___flmul@temp+1
  8186  05B6  0820               	movf	?__Umul8_16,w
  8187  05B7  00C1               	movwf	___flmul@temp
  8188  05B8  0841               	movf	___flmul@temp,w
  8189  05B9  00B1               	movwf	??___flmul
  8190  05BA  0842               	movf	___flmul@temp+1,w
  8191  05BB  00B2               	movwf	??___flmul+1
  8192  05BC  01B3               	clrf	??___flmul+2
  8193  05BD  01B4               	clrf	??___flmul+3
  8194  05BE  3008               	movlw	8
  8195  05BF                     u3845:	
  8196  05BF  1003               	clrc
  8197  05C0  0DB1               	rlf	??___flmul,f
  8198  05C1  0DB2               	rlf	??___flmul+1,f
  8199  05C2  0DB3               	rlf	??___flmul+2,f
  8200  05C3  0DB4               	rlf	??___flmul+3,f
  8201  05C4  3EFF               	addlw	-1
  8202  05C5  1D03               	skipz
  8203  05C6  2DBF               	goto	u3845
  8204  05C7  0831               	movf	??___flmul,w
  8205  05C8  07BD               	addwf	___flmul@prod,f
  8206  05C9  0832               	movf	??___flmul+1,w
  8207  05CA  1103               	clrz
  8208  05CB  1803               	skipnc
  8209  05CC  3E01               	addlw	1
  8210  05CD  1D03               	btfss	3,2
  8211  05CE  07BE               	addwf	___flmul@prod+1,f
  8212  05CF  0833               	movf	??___flmul+2,w
  8213  05D0  1103               	clrz
  8214  05D1  1803               	skipnc
  8215  05D2  3E01               	addlw	1
  8216  05D3  1D03               	btfss	3,2
  8217  05D4  07BF               	addwf	___flmul@prod+2,f
  8218  05D5  0834               	movf	??___flmul+3,w
  8219  05D6  1103               	clrz
  8220  05D7  1803               	skipnc
  8221  05D8  3E01               	addlw	1
  8222  05D9  1D03               	btfss	3,2
  8223  05DA  07C0               	addwf	___flmul@prod+3,f
  8224  05DB  083B               	movf	___flmul@grs+3,w
  8225  05DC  00B1               	movwf	??___flmul
  8226  05DD  01B2               	clrf	??___flmul+1
  8227  05DE  01B3               	clrf	??___flmul+2
  8228  05DF  01B4               	clrf	??___flmul+3
  8229  05E0  0831               	movf	??___flmul,w
  8230  05E1  07BD               	addwf	___flmul@prod,f
  8231  05E2  0832               	movf	??___flmul+1,w
  8232  05E3  1103               	clrz
  8233  05E4  1803               	skipnc
  8234  05E5  3E01               	addlw	1
  8235  05E6  1D03               	btfss	3,2
  8236  05E7  07BE               	addwf	___flmul@prod+1,f
  8237  05E8  0833               	movf	??___flmul+2,w
  8238  05E9  1103               	clrz
  8239  05EA  1803               	skipnc
  8240  05EB  3E01               	addlw	1
  8241  05EC  1D03               	btfss	3,2
  8242  05ED  07BF               	addwf	___flmul@prod+2,f
  8243  05EE  0834               	movf	??___flmul+3,w
  8244  05EF  1103               	clrz
  8245  05F0  1803               	skipnc
  8246  05F1  3E01               	addlw	1
  8247  05F2  1D03               	btfss	3,2
  8248  05F3  07C0               	addwf	___flmul@prod+3,f
  8249  05F4  3008               	movlw	8
  8250  05F5  00B1               	movwf	??___flmul
  8251  05F6                     u3875:	
  8252  05F6  1003               	clrc
  8253  05F7  0DB8               	rlf	___flmul@grs,f
  8254  05F8  0DB9               	rlf	___flmul@grs+1,f
  8255  05F9  0DBA               	rlf	___flmul@grs+2,f
  8256  05FA  0DBB               	rlf	___flmul@grs+3,f
  8257  05FB  0BB1               	decfsz	??___flmul,f
  8258  05FC  2DF6               	goto	u3875
  8259  05FD  083C               	movf	___flmul@bexp,w
  8260  05FE  0737               	addwf	___flmul@aexp,w
  8261  05FF  00B1               	movwf	??___flmul
  8262  0600  01B2               	clrf	??___flmul+1
  8263  0601  0DB2               	rlf	??___flmul+1,f
  8264  0602  0831               	movf	??___flmul,w
  8265  0603  3E82               	addlw	130
  8266  0604  00C1               	movwf	___flmul@temp
  8267  0605  0832               	movf	??___flmul+1,w
  8268  0606  1803               	skipnc
  8269  0607  3E01               	addlw	1
  8270  0608  3EFF               	addlw	255
  8271  0609  00C2               	movwf	___flmul@temp+1
  8272  060A                     l4271:	
  8273  060A  1BBF               	btfsc	___flmul@prod+2,7
  8274  060B  2E27               	goto	l4273
  8275  060C  3001               	movlw	1
  8276  060D  00B1               	movwf	??___flmul
  8277  060E                     u3885:	
  8278  060E  1003               	clrc
  8279  060F  0DBD               	rlf	___flmul@prod,f
  8280  0610  0DBE               	rlf	___flmul@prod+1,f
  8281  0611  0DBF               	rlf	___flmul@prod+2,f
  8282  0612  0DC0               	rlf	___flmul@prod+3,f
  8283  0613  0BB1               	decfsz	??___flmul,f
  8284  0614  2E0E               	goto	u3885
  8285  0615  1BBB               	btfsc	___flmul@grs+3,7
  8286  0616  143D               	bsf	___flmul@prod,0
  8287  0617  3001               	movlw	1
  8288  0618  00B1               	movwf	??___flmul
  8289  0619                     u3905:	
  8290  0619  1003               	clrc
  8291  061A  0DB8               	rlf	___flmul@grs,f
  8292  061B  0DB9               	rlf	___flmul@grs+1,f
  8293  061C  0DBA               	rlf	___flmul@grs+2,f
  8294  061D  0DBB               	rlf	___flmul@grs+3,f
  8295  061E  0BB1               	decfsz	??___flmul,f
  8296  061F  2E19               	goto	u3905
  8297  0620  30FF               	movlw	255
  8298  0621  07C1               	addwf	___flmul@temp,f
  8299  0622  1803               	skipnc
  8300  0623  0AC2               	incf	___flmul@temp+1,f
  8301  0624  30FF               	movlw	255
  8302  0625  07C2               	addwf	___flmul@temp+1,f
  8303  0626  2E0A               	goto	l4271
  8304  0627                     l4273:	
  8305  0627  01B7               	clrf	___flmul@aexp
  8306  0628  1FBB               	btfss	___flmul@grs+3,7
  8307  0629  2E40               	goto	l4283
  8308  062A  30FF               	movlw	255
  8309  062B  0538               	andwf	___flmul@grs,w
  8310  062C  00B1               	movwf	??___flmul
  8311  062D  30FF               	movlw	255
  8312  062E  0539               	andwf	___flmul@grs+1,w
  8313  062F  00B2               	movwf	??___flmul+1
  8314  0630  30FF               	movlw	255
  8315  0631  053A               	andwf	___flmul@grs+2,w
  8316  0632  00B3               	movwf	??___flmul+2
  8317  0633  307F               	movlw	127
  8318  0634  053B               	andwf	___flmul@grs+3,w
  8319  0635  00B4               	movwf	??___flmul+3
  8320  0636  0834               	movf	??___flmul+3,w
  8321  0637  0433               	iorwf	??___flmul+2,w
  8322  0638  0432               	iorwf	??___flmul+1,w
  8323  0639  0431               	iorwf	??___flmul,w
  8324  063A  1903               	skipnz
  8325  063B  183D               	btfsc	___flmul@prod,0
  8326  063C  2E3E               	goto	l4279
  8327  063D  2E40               	goto	l4283
  8328  063E                     l4279:	
  8329  063E  01B7               	clrf	___flmul@aexp
  8330  063F  0AB7               	incf	___flmul@aexp,f
  8331  0640                     l4283:	
  8332  0640  0837               	movf	___flmul@aexp,w
  8333  0641  1903               	btfsc	3,2
  8334  0642  2E72               	goto	l4293
  8335  0643  3001               	movlw	1
  8336  0644  07BD               	addwf	___flmul@prod,f
  8337  0645  3000               	movlw	0
  8338  0646  1803               	skipnc
  8339  0647  3001               	movlw	1
  8340  0648  07BE               	addwf	___flmul@prod+1,f
  8341  0649  3000               	movlw	0
  8342  064A  1803               	skipnc
  8343  064B  3001               	movlw	1
  8344  064C  07BF               	addwf	___flmul@prod+2,f
  8345  064D  3000               	movlw	0
  8346  064E  1803               	skipnc
  8347  064F  3001               	movlw	1
  8348  0650  07C0               	addwf	___flmul@prod+3,f
  8349  0651  1C40               	btfss	___flmul@prod+3,0
  8350  0652  2E72               	goto	l4293
  8351  0653  083D               	movf	___flmul@prod,w
  8352  0654  00B1               	movwf	??___flmul
  8353  0655  083E               	movf	___flmul@prod+1,w
  8354  0656  00B2               	movwf	??___flmul+1
  8355  0657  083F               	movf	___flmul@prod+2,w
  8356  0658  00B3               	movwf	??___flmul+2
  8357  0659  0840               	movf	___flmul@prod+3,w
  8358  065A  00B4               	movwf	??___flmul+3
  8359  065B  3001               	movlw	1
  8360  065C  00B5               	movwf	??___flmul+4
  8361  065D                     u3975:	
  8362  065D  0D34               	rlf	??___flmul+3,w
  8363  065E  0CB4               	rrf	??___flmul+3,f
  8364  065F  0CB3               	rrf	??___flmul+2,f
  8365  0660  0CB2               	rrf	??___flmul+1,f
  8366  0661  0CB1               	rrf	??___flmul,f
  8367  0662  0BB5               	decfsz	??___flmul+4,f
  8368  0663  2E5D               	goto	u3975
  8369  0664  0834               	movf	??___flmul+3,w
  8370  0665  00C0               	movwf	___flmul@prod+3
  8371  0666  0833               	movf	??___flmul+2,w
  8372  0667  00BF               	movwf	___flmul@prod+2
  8373  0668  0832               	movf	??___flmul+1,w
  8374  0669  00BE               	movwf	___flmul@prod+1
  8375  066A  0831               	movf	??___flmul,w
  8376  066B  00BD               	movwf	___flmul@prod
  8377  066C  3001               	movlw	1
  8378  066D  07C1               	addwf	___flmul@temp,f
  8379  066E  1803               	skipnc
  8380  066F  0AC2               	incf	___flmul@temp+1,f
  8381  0670  3000               	movlw	0
  8382  0671  07C2               	addwf	___flmul@temp+1,f
  8383  0672                     l4293:	
  8384  0672  0842               	movf	___flmul@temp+1,w
  8385  0673  3A80               	xorlw	128
  8386  0674  00FF               	movwf	127
  8387  0675  3080               	movlw	128
  8388  0676  027F               	subwf	127,w
  8389  0677  1D03               	skipz
  8390  0678  2E7B               	goto	u3985
  8391  0679  30FF               	movlw	255
  8392  067A  0241               	subwf	___flmul@temp,w
  8393  067B                     u3985:	
  8394  067B  1C03               	skipc
  8395  067C  2E88               	goto	l4297
  8396  067D  307F               	movlw	127
  8397  067E  1283               	bcf	3,5	;RP0=0, select bank0
  8398  067F  1303               	bcf	3,6	;RP1=0, select bank0
  8399  0680  00C0               	movwf	___flmul@prod+3
  8400  0681  3080               	movlw	128
  8401  0682  00BF               	movwf	___flmul@prod+2
  8402  0683  3000               	movlw	0
  8403  0684  00BE               	movwf	___flmul@prod+1
  8404  0685  3000               	movlw	0
  8405  0686  00BD               	movwf	___flmul@prod
  8406  0687  2EB8               	goto	l1396
  8407  0688                     l4297:	
  8408  0688  1283               	bcf	3,5	;RP0=0, select bank0
  8409  0689  1303               	bcf	3,6	;RP1=0, select bank0
  8410  068A  0842               	movf	___flmul@temp+1,w
  8411  068B  3A80               	xorlw	128
  8412  068C  00FF               	movwf	127
  8413  068D  3080               	movlw	128
  8414  068E  027F               	subwf	127,w
  8415  068F  1D03               	skipz
  8416  0690  2E93               	goto	u3995
  8417  0691  3001               	movlw	1
  8418  0692  0241               	subwf	___flmul@temp,w
  8419  0693                     u3995:	
  8420  0693  1803               	skipnc
  8421  0694  2EA1               	goto	l4303
  8422  0695  3000               	movlw	0
  8423  0696  1283               	bcf	3,5	;RP0=0, select bank0
  8424  0697  1303               	bcf	3,6	;RP1=0, select bank0
  8425  0698  00C0               	movwf	___flmul@prod+3
  8426  0699  3000               	movlw	0
  8427  069A  00BF               	movwf	___flmul@prod+2
  8428  069B  3000               	movlw	0
  8429  069C  00BE               	movwf	___flmul@prod+1
  8430  069D  3000               	movlw	0
  8431  069E  00BD               	movwf	___flmul@prod
  8432  069F  01B6               	clrf	___flmul@sign
  8433  06A0  2EB8               	goto	l1396
  8434  06A1                     l4303:	
  8435  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  8436  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  8437  06A3  0841               	movf	___flmul@temp,w
  8438  06A4  00B1               	movwf	??___flmul
  8439  06A5  0831               	movf	??___flmul,w
  8440  06A6  00BC               	movwf	___flmul@bexp
  8441  06A7  30FF               	movlw	255
  8442  06A8  05BD               	andwf	___flmul@prod,f
  8443  06A9  30FF               	movlw	255
  8444  06AA  05BE               	andwf	___flmul@prod+1,f
  8445  06AB  307F               	movlw	127
  8446  06AC  05BF               	andwf	___flmul@prod+2,f
  8447  06AD  3000               	movlw	0
  8448  06AE  05C0               	andwf	___flmul@prod+3,f
  8449  06AF  183C               	btfsc	___flmul@bexp,0
  8450  06B0  17BF               	bsf	___flmul@prod+2,7
  8451  06B1  083C               	movf	___flmul@bexp,w
  8452  06B2  00B1               	movwf	??___flmul
  8453  06B3  1003               	clrc
  8454  06B4  0C31               	rrf	??___flmul,w
  8455  06B5  00B2               	movwf	??___flmul+1
  8456  06B6  0832               	movf	??___flmul+1,w
  8457  06B7  00C0               	movwf	___flmul@prod+3
  8458  06B8                     l1396:	
  8459  06B8  0836               	movf	___flmul@sign,w
  8460  06B9  00B1               	movwf	??___flmul
  8461  06BA  0831               	movf	??___flmul,w
  8462  06BB  04C0               	iorwf	___flmul@prod+3,f
  8463  06BC  0840               	movf	___flmul@prod+3,w
  8464  06BD  00AC               	movwf	?___flmul+3
  8465  06BE  083F               	movf	___flmul@prod+2,w
  8466  06BF  00AB               	movwf	?___flmul+2
  8467  06C0  083E               	movf	___flmul@prod+1,w
  8468  06C1  00AA               	movwf	?___flmul+1
  8469  06C2  083D               	movf	___flmul@prod,w
  8470  06C3  00A9               	movwf	?___flmul
  8471  06C4  0008               	return
  8472  06C5                     __end_of___flmul:	
  8473                           
  8474                           	psect	text23
  8475  1BEE                     __ptext23:	
  8476 ;; *************** function __Umul8_16 *****************
  8477 ;; Defined at:
  8478 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  multiplier      1    wreg     unsigned char 
  8481 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8484 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8485 ;;  product         2    4[BANK0 ] unsigned int 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  2    0[BANK0 ] unsigned int 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0
  8490 ;; Tracked objects:
  8491 ;;		On entry : 300/0
  8492 ;;		On exit  : 300/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         0       2       0       0       0
  8496 ;;      Locals:         0       5       0       0       0
  8497 ;;      Temps:          0       2       0       0       0
  8498 ;;      Totals:         0       9       0       0       0
  8499 ;;Total ram usage:        9 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    1
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		___flmul
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           
  8510                           ;psect for function __Umul8_16
  8511  1BEE                     __Umul8_16:	
  8512                           
  8513                           ;incstack = 0
  8514                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8515                           ;__Umul8_16@multiplier stored from wreg
  8516  1BEE  00A8               	movwf	__Umul8_16@multiplier
  8517  1BEF  01A4               	clrf	__Umul8_16@product
  8518  1BF0  01A5               	clrf	__Umul8_16@product+1
  8519  1BF1  0820               	movf	__Umul8_16@multiplicand,w
  8520  1BF2  00A2               	movwf	??__Umul8_16
  8521  1BF3  01A3               	clrf	??__Umul8_16+1
  8522  1BF4  0822               	movf	??__Umul8_16,w
  8523  1BF5  00A6               	movwf	__Umul8_16@word_mpld
  8524  1BF6  0823               	movf	??__Umul8_16+1,w
  8525  1BF7  00A7               	movwf	__Umul8_16@word_mpld+1
  8526  1BF8                     l3709:	
  8527  1BF8  1C28               	btfss	__Umul8_16@multiplier,0
  8528  1BF9  2C00               	goto	l1469
  8529  1BFA  0826               	movf	__Umul8_16@word_mpld,w
  8530  1BFB  07A4               	addwf	__Umul8_16@product,f
  8531  1BFC  1803               	skipnc
  8532  1BFD  0AA5               	incf	__Umul8_16@product+1,f
  8533  1BFE  0827               	movf	__Umul8_16@word_mpld+1,w
  8534  1BFF  07A5               	addwf	__Umul8_16@product+1,f
  8535  1C00                     l1469:	
  8536  1C00  3001               	movlw	1
  8537  1C01                     u2845:	
  8538  1C01  1003               	clrc
  8539  1C02  0DA6               	rlf	__Umul8_16@word_mpld,f
  8540  1C03  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8541  1C04  3EFF               	addlw	-1
  8542  1C05  1D03               	skipz
  8543  1C06  2C01               	goto	u2845
  8544  1C07  1003               	clrc
  8545  1C08  0CA8               	rrf	__Umul8_16@multiplier,f
  8546  1C09  0828               	movf	__Umul8_16@multiplier,w
  8547  1C0A  1D03               	btfss	3,2
  8548  1C0B  2BF8               	goto	l3709
  8549  1C0C  0825               	movf	__Umul8_16@product+1,w
  8550  1C0D  00A1               	movwf	?__Umul8_16+1
  8551  1C0E  0824               	movf	__Umul8_16@product,w
  8552  1C0F  00A0               	movwf	?__Umul8_16
  8553  1C10  0008               	return
  8554  1C11                     __end_of__Umul8_16:	
  8555                           
  8556                           	psect	text24
  8557  1ABA                     __ptext24:	
  8558 ;; *************** function _PROCULUS_VP_Write_String *****************
  8559 ;; Defined at:
  8560 ;;		line 205 in file "proculus.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  vp              2   58[BANK0 ] unsigned int 
  8563 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8564 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;		None
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 300/0
  8573 ;;		On exit  : 300/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8576 ;;      Params:         0       3       0       0       0
  8577 ;;      Locals:         0       0       0       0       0
  8578 ;;      Temps:          0       1       0       0       0
  8579 ;;      Totals:         0       4       0       0       0
  8580 ;;Total ram usage:        4 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    4
  8583 ;; This function calls:
  8584 ;;		_PROCULUS_VP_Write
  8585 ;;		_strlen
  8586 ;; This function is called by:
  8587 ;;		_Decodify_Command
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _PROCULUS_VP_Write_String
  8593  1ABA                     _PROCULUS_VP_Write_String:	
  8594                           
  8595                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8599  1ABA  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8600  1ABB  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8601  1ABC  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8602  1ABD  00D2               	movwf	PROCULUS_VP_Write@vp
  8603  1ABE  085C               	movf	PROCULUS_VP_Write_String@text,w
  8604  1ABF  00D4               	movwf	PROCULUS_VP_Write@vetor
  8605  1AC0  3001               	movlw	1
  8606  1AC1  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8607  1AC2  085C               	movf	PROCULUS_VP_Write_String@text,w
  8608  1AC3  00A0               	movwf	strlen@s
  8609  1AC4  3001               	movlw	1
  8610  1AC5  00A1               	movwf	strlen@s+1
  8611  1AC6  160A  158A  22D4  160A  158A  	fcall	_strlen
  8612  1ACB  0820               	movf	?_strlen,w
  8613  1ACC  3E01               	addlw	1
  8614  1ACD  00DD               	movwf	??_PROCULUS_VP_Write_String
  8615  1ACE  085D               	movf	??_PROCULUS_VP_Write_String,w
  8616  1ACF  00D6               	movwf	PROCULUS_VP_Write@size
  8617  1AD0  120A  118A  27B8   	fcall	_PROCULUS_VP_Write
  8618  1AD3  0008               	return
  8619  1AD4                     __end_of_PROCULUS_VP_Write_String:	
  8620                           
  8621                           	psect	text25
  8622  1AD4                     __ptext25:	
  8623 ;; *************** function _strlen *****************
  8624 ;; Defined at:
  8625 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8628 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8631 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  2    0[BANK0 ] unsigned int 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 300/0
  8638 ;;		On exit  : 300/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8641 ;;      Params:         0       2       0       0       0
  8642 ;;      Locals:         0       2       0       0       0
  8643 ;;      Temps:          0       0       0       0       0
  8644 ;;      Totals:         0       4       0       0       0
  8645 ;;Total ram usage:        4 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    1
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_Decodify_Command
  8652 ;;		_PROCULUS_VP_Write_String
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _strlen
  8658  1AD4                     _strlen:	
  8659                           
  8660                           ;incstack = 0
  8661                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8662  1AD4  0820               	movf	strlen@s,w
  8663  1AD5  00A2               	movwf	strlen@cp
  8664  1AD6  0821               	movf	strlen@s+1,w
  8665  1AD7  00A3               	movwf	strlen@cp+1
  8666  1AD8                     l5639:	
  8667  1AD8  0822               	movf	strlen@cp,w
  8668  1AD9  0084               	movwf	4
  8669  1ADA  1783               	bsf	3,7
  8670  1ADB  1C23               	btfss	strlen@cp+1,0
  8671  1ADC  1383               	bcf	3,7
  8672  1ADD  0800               	movf	0,w
  8673  1ADE  1903               	btfsc	3,2
  8674  1ADF  2AE7               	goto	l5641
  8675  1AE0  3001               	movlw	1
  8676  1AE1  07A2               	addwf	strlen@cp,f
  8677  1AE2  1803               	skipnc
  8678  1AE3  0AA3               	incf	strlen@cp+1,f
  8679  1AE4  3000               	movlw	0
  8680  1AE5  07A3               	addwf	strlen@cp+1,f
  8681  1AE6  2AD8               	goto	l5639
  8682  1AE7                     l5641:	
  8683  1AE7  0820               	movf	strlen@s,w
  8684  1AE8  0222               	subwf	strlen@cp,w
  8685  1AE9  00A0               	movwf	?_strlen
  8686  1AEA  0821               	movf	strlen@s+1,w
  8687  1AEB  1C03               	skipc
  8688  1AEC  0A21               	incf	strlen@s+1,w
  8689  1AED  0223               	subwf	strlen@cp+1,w
  8690  1AEE  00A1               	movwf	?_strlen+1
  8691  1AEF  0008               	return
  8692  1AF0                     __end_of_strlen:	
  8693                           
  8694                           	psect	text26
  8695  07B8                     __ptext26:	
  8696 ;; *************** function _PROCULUS_VP_Write *****************
  8697 ;; Defined at:
  8698 ;;		line 40 in file "proculus.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  vp              2   50[BANK0 ] unsigned int 
  8701 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8702 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8703 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8704 ;;  size            1   54[BANK0 ] unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  i               1   57[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8711 ;; Tracked objects:
  8712 ;;		On entry : 300/0
  8713 ;;		On exit  : 300/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8716 ;;      Params:         0       5       0       0       0
  8717 ;;      Locals:         0       1       0       0       0
  8718 ;;      Temps:          0       2       0       0       0
  8719 ;;      Totals:         0       8       0       0       0
  8720 ;;Total ram usage:        8 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    3
  8723 ;; This function calls:
  8724 ;;		_PROCULUS_Delay
  8725 ;;		_USART_put_int
  8726 ;;		_USART_putc
  8727 ;; This function is called by:
  8728 ;;		_PROCULUS_VP_Write_String
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           
  8733                           ;psect for function _PROCULUS_VP_Write
  8734  07B8                     _PROCULUS_VP_Write:	
  8735                           
  8736                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8737                           
  8738                           ;incstack = 0
  8739                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8740  07B8  30A5               	movlw	165
  8741  07B9  00CE               	movwf	USART_put_int@value
  8742  07BA  305A               	movlw	90
  8743  07BB  00CF               	movwf	USART_put_int@value+1
  8744  07BC  160A  158A  228B  120A  118A  	fcall	_USART_put_int
  8745                           
  8746                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8747  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  8748  07C2  0856               	movf	PROCULUS_VP_Write@size,w
  8749  07C3  3E03               	addlw	3
  8750  07C4  160A  158A  222B  120A  118A  	fcall	_USART_putc
  8751                           
  8752                           ;proculus.c: 43:      USART_putc(0x82);
  8753  07C9  3082               	movlw	130
  8754  07CA  160A  158A  222B  120A  118A  	fcall	_USART_putc
  8755                           
  8756                           ;proculus.c: 44:      USART_put_int(vp);
  8757  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  8758  07D0  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8759  07D1  00CF               	movwf	USART_put_int@value+1
  8760  07D2  0852               	movf	PROCULUS_VP_Write@vp,w
  8761  07D3  00CE               	movwf	USART_put_int@value
  8762  07D4  160A  158A  228B  120A  118A  	fcall	_USART_put_int
  8763                           
  8764                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8765  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  8766  07DA  01D9               	clrf	PROCULUS_VP_Write@i
  8767  07DB                     l5657:	
  8768  07DB  0856               	movf	PROCULUS_VP_Write@size,w
  8769  07DC  0259               	subwf	PROCULUS_VP_Write@i,w
  8770  07DD  1803               	btfsc	3,0
  8771  07DE  2FF7               	goto	l5659
  8772                           
  8773                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8774  07DF  0859               	movf	PROCULUS_VP_Write@i,w
  8775  07E0  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8776  07E1  00D7               	movwf	??_PROCULUS_VP_Write
  8777  07E2  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8778  07E3  1803               	skipnc
  8779  07E4  3E01               	addlw	1
  8780  07E5  00D8               	movwf	??_PROCULUS_VP_Write+1
  8781  07E6  0857               	movf	??_PROCULUS_VP_Write,w
  8782  07E7  0084               	movwf	4
  8783  07E8  1783               	bsf	3,7
  8784  07E9  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8785  07EA  1383               	bcf	3,7
  8786  07EB  0800               	movf	0,w
  8787  07EC  160A  158A  222B  120A  118A  	fcall	_USART_putc
  8788  07F1  3001               	movlw	1
  8789  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  8790  07F3  00D7               	movwf	??_PROCULUS_VP_Write
  8791  07F4  0857               	movf	??_PROCULUS_VP_Write,w
  8792  07F5  07D9               	addwf	PROCULUS_VP_Write@i,f
  8793  07F6  2FDB               	goto	l5657
  8794  07F7                     l5659:	
  8795                           
  8796                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8797  07F7  3001               	movlw	1
  8798  07F8  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8799  07F9  3000               	movlw	0
  8800  07FA  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8801  07FB  160A  158A  22F0   	fcall	_PROCULUS_Delay
  8802  07FE  0008               	return
  8803  07FF                     __end_of_PROCULUS_VP_Write:	
  8804                           
  8805                           	psect	text27
  8806  1A60                     __ptext27:	
  8807 ;; *************** function _PROCULUS_Show_Screen *****************
  8808 ;; Defined at:
  8809 ;;		line 243 in file "proculus.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  screen          2   54[BANK0 ] unsigned int 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      void 
  8816 ;; Registers used:
  8817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : 300/0
  8820 ;;		On exit  : 300/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8823 ;;      Params:         0       2       0       0       0
  8824 ;;      Locals:         0       3       0       0       0
  8825 ;;      Temps:          0       1       0       0       0
  8826 ;;      Totals:         0       6       0       0       0
  8827 ;;Total ram usage:        6 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:    4
  8830 ;; This function calls:
  8831 ;;		_PROCULUS_Control_Register_Write
  8832 ;; This function is called by:
  8833 ;;		_Decodify_Command
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           
  8838                           ;psect for function _PROCULUS_Show_Screen
  8839  1A60                     _PROCULUS_Show_Screen:	
  8840                           
  8841                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8842                           
  8843                           ;incstack = 0
  8844                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8845  1A60  3003               	movlw	3
  8846  1A61  00D8               	movwf	??_PROCULUS_Show_Screen
  8847  1A62  0858               	movf	??_PROCULUS_Show_Screen,w
  8848  1A63  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8849                           
  8850                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8851  1A64  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8852  1A65  00D8               	movwf	??_PROCULUS_Show_Screen
  8853  1A66  0858               	movf	??_PROCULUS_Show_Screen,w
  8854  1A67  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8855                           
  8856                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8857  1A68  0856               	movf	PROCULUS_Show_Screen@screen,w
  8858  1A69  00D8               	movwf	??_PROCULUS_Show_Screen
  8859  1A6A  0858               	movf	??_PROCULUS_Show_Screen,w
  8860  1A6B  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8861                           
  8862                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8863  1A6C  3003               	movlw	3
  8864  1A6D  00D8               	movwf	??_PROCULUS_Show_Screen
  8865  1A6E  0858               	movf	??_PROCULUS_Show_Screen,w
  8866  1A6F  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8867  1A70  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8868  1A71  160A  158A  25C0   	fcall	_PROCULUS_Control_Register_Write
  8869  1A74  0008               	return
  8870  1A75                     __end_of_PROCULUS_Show_Screen:	
  8871                           
  8872                           	psect	text28
  8873  1BCC                     __ptext28:	
  8874 ;; *************** function _PROCULUS_Buzzer *****************
  8875 ;; Defined at:
  8876 ;;		line 223 in file "proculus.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 300/0
  8887 ;;		On exit  : 300/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8890 ;;      Params:         0       2       0       0       0
  8891 ;;      Locals:         0       2       0       0       0
  8892 ;;      Temps:          0       1       0       0       0
  8893 ;;      Totals:         0       5       0       0       0
  8894 ;;Total ram usage:        5 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    4
  8897 ;; This function calls:
  8898 ;;		_PROCULUS_Control_Register_Write
  8899 ;;		___lwdiv
  8900 ;; This function is called by:
  8901 ;;		_Decodify_Command
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           
  8906                           ;psect for function _PROCULUS_Buzzer
  8907  1BCC                     _PROCULUS_Buzzer:	
  8908                           
  8909                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8910                           
  8911                           ;incstack = 0
  8912                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8913  1BCC  300A               	movlw	10
  8914  1BCD  00A0               	movwf	___lwdiv@divisor
  8915  1BCE  3000               	movlw	0
  8916  1BCF  00A1               	movwf	___lwdiv@divisor+1
  8917  1BD0  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  8918  1BD1  00A3               	movwf	___lwdiv@dividend+1
  8919  1BD2  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8920  1BD3  00A2               	movwf	___lwdiv@dividend
  8921  1BD4  160A  158A  2634  160A  158A  	fcall	___lwdiv
  8922  1BD9  0821               	movf	?___lwdiv+1,w
  8923  1BDA  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  8924  1BDB  0820               	movf	?___lwdiv,w
  8925  1BDC  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8926                           
  8927                           ;proculus.c: 226:      vetor[0]=0x02;
  8928  1BDD  3002               	movlw	2
  8929  1BDE  00D8               	movwf	??_PROCULUS_Buzzer
  8930  1BDF  0858               	movf	??_PROCULUS_Buzzer,w
  8931  1BE0  00D9               	movwf	PROCULUS_Buzzer@vetor
  8932                           
  8933                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8934  1BE1  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8935  1BE2  00D8               	movwf	??_PROCULUS_Buzzer
  8936  1BE3  0858               	movf	??_PROCULUS_Buzzer,w
  8937  1BE4  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  8938                           
  8939                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  8940  1BE5  3002               	movlw	2
  8941  1BE6  00D8               	movwf	??_PROCULUS_Buzzer
  8942  1BE7  0858               	movf	??_PROCULUS_Buzzer,w
  8943  1BE8  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8944  1BE9  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  8945  1BEA  160A  158A  25C0   	fcall	_PROCULUS_Control_Register_Write
  8946  1BED  0008               	return
  8947  1BEE                     __end_of_PROCULUS_Buzzer:	
  8948                           
  8949                           	psect	text29
  8950  1E34                     __ptext29:	
  8951 ;; *************** function ___lwdiv *****************
  8952 ;; Defined at:
  8953 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  divisor         2    0[BANK0 ] unsigned int 
  8956 ;;  dividend        2    2[BANK0 ] unsigned int 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  quotient        2    5[BANK0 ] unsigned int 
  8959 ;;  counter         1    7[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  2    0[BANK0 ] unsigned int 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 300/0
  8966 ;;		On exit  : 300/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8969 ;;      Params:         0       4       0       0       0
  8970 ;;      Locals:         0       3       0       0       0
  8971 ;;      Temps:          0       1       0       0       0
  8972 ;;      Totals:         0       8       0       0       0
  8973 ;;Total ram usage:        8 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_ADC_Media_10bits
  8980 ;;		_PROCULUS_Buzzer
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           
  8985                           ;psect for function ___lwdiv
  8986  1E34                     ___lwdiv:	
  8987                           
  8988                           ;incstack = 0
  8989                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8990  1E34  01A5               	clrf	___lwdiv@quotient
  8991  1E35  01A6               	clrf	___lwdiv@quotient+1
  8992  1E36  0820               	movf	___lwdiv@divisor,w
  8993  1E37  0421               	iorwf	___lwdiv@divisor+1,w
  8994  1E38  1903               	btfsc	3,2
  8995  1E39  2E6B               	goto	l3977
  8996  1E3A  01A7               	clrf	___lwdiv@counter
  8997  1E3B  0AA7               	incf	___lwdiv@counter,f
  8998  1E3C                     l3965:	
  8999  1E3C  1BA1               	btfsc	___lwdiv@divisor+1,7
  9000  1E3D  2E4A               	goto	l3967
  9001  1E3E  3001               	movlw	1
  9002  1E3F                     u3135:	
  9003  1E3F  1003               	clrc
  9004  1E40  0DA0               	rlf	___lwdiv@divisor,f
  9005  1E41  0DA1               	rlf	___lwdiv@divisor+1,f
  9006  1E42  3EFF               	addlw	-1
  9007  1E43  1D03               	skipz
  9008  1E44  2E3F               	goto	u3135
  9009  1E45  3001               	movlw	1
  9010  1E46  00A4               	movwf	??___lwdiv
  9011  1E47  0824               	movf	??___lwdiv,w
  9012  1E48  07A7               	addwf	___lwdiv@counter,f
  9013  1E49  2E3C               	goto	l3965
  9014  1E4A                     l3967:	
  9015  1E4A  3001               	movlw	1
  9016  1E4B                     u3155:	
  9017  1E4B  1003               	clrc
  9018  1E4C  0DA5               	rlf	___lwdiv@quotient,f
  9019  1E4D  0DA6               	rlf	___lwdiv@quotient+1,f
  9020  1E4E  3EFF               	addlw	-1
  9021  1E4F  1D03               	skipz
  9022  1E50  2E4B               	goto	u3155
  9023  1E51  0821               	movf	___lwdiv@divisor+1,w
  9024  1E52  0223               	subwf	___lwdiv@dividend+1,w
  9025  1E53  1D03               	skipz
  9026  1E54  2E57               	goto	u3165
  9027  1E55  0820               	movf	___lwdiv@divisor,w
  9028  1E56  0222               	subwf	___lwdiv@dividend,w
  9029  1E57                     u3165:	
  9030  1E57  1C03               	skipc
  9031  1E58  2E60               	goto	l3973
  9032  1E59  0820               	movf	___lwdiv@divisor,w
  9033  1E5A  02A2               	subwf	___lwdiv@dividend,f
  9034  1E5B  0821               	movf	___lwdiv@divisor+1,w
  9035  1E5C  1C03               	skipc
  9036  1E5D  03A3               	decf	___lwdiv@dividend+1,f
  9037  1E5E  02A3               	subwf	___lwdiv@dividend+1,f
  9038  1E5F  1425               	bsf	___lwdiv@quotient,0
  9039  1E60                     l3973:	
  9040  1E60  3001               	movlw	1
  9041  1E61                     u3175:	
  9042  1E61  1003               	clrc
  9043  1E62  0CA1               	rrf	___lwdiv@divisor+1,f
  9044  1E63  0CA0               	rrf	___lwdiv@divisor,f
  9045  1E64  3EFF               	addlw	-1
  9046  1E65  1D03               	skipz
  9047  1E66  2E61               	goto	u3175
  9048  1E67  3001               	movlw	1
  9049  1E68  02A7               	subwf	___lwdiv@counter,f
  9050  1E69  1D03               	btfss	3,2
  9051  1E6A  2E4A               	goto	l3967
  9052  1E6B                     l3977:	
  9053  1E6B  0826               	movf	___lwdiv@quotient+1,w
  9054  1E6C  00A1               	movwf	?___lwdiv+1
  9055  1E6D  0825               	movf	___lwdiv@quotient,w
  9056  1E6E  00A0               	movwf	?___lwdiv
  9057  1E6F  0008               	return
  9058  1E70                     __end_of___lwdiv:	
  9059                           
  9060                           	psect	text30
  9061  1DC0                     __ptext30:	
  9062 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9063 ;; Defined at:
  9064 ;;		line 13 in file "proculus.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  vetor           1    wreg     PTR unsigned char 
  9067 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9068 ;;  size            1   50[BANK0 ] unsigned char 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9071 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9072 ;;  i               1   53[BANK0 ] unsigned char 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9077 ;; Tracked objects:
  9078 ;;		On entry : 300/0
  9079 ;;		On exit  : 300/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9082 ;;      Params:         0       1       0       0       0
  9083 ;;      Locals:         0       2       0       0       0
  9084 ;;      Temps:          0       1       0       0       0
  9085 ;;      Totals:         0       4       0       0       0
  9086 ;;Total ram usage:        4 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; Hardware stack levels required when called:    3
  9089 ;; This function calls:
  9090 ;;		_PROCULUS_Delay
  9091 ;;		_USART_put_int
  9092 ;;		_USART_putc
  9093 ;; This function is called by:
  9094 ;;		_PROCULUS_Buzzer
  9095 ;;		_PROCULUS_Show_Screen
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _PROCULUS_Control_Register_Write
  9101  1DC0                     _PROCULUS_Control_Register_Write:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9105                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9106  1DC0  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9107                           
  9108                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9109  1DC1  30A5               	movlw	165
  9110  1DC2  00CE               	movwf	USART_put_int@value
  9111  1DC3  305A               	movlw	90
  9112  1DC4  00CF               	movwf	USART_put_int@value+1
  9113  1DC5  160A  158A  228B  160A  158A  	fcall	_USART_put_int
  9114                           
  9115                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9116  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
  9117  1DCB  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9118  1DCC  3E01               	addlw	1
  9119  1DCD  160A  158A  222B  160A  158A  	fcall	_USART_putc
  9120                           
  9121                           ;proculus.c: 16:      USART_putc(0x80);
  9122  1DD2  3080               	movlw	128
  9123  1DD3  160A  158A  222B  160A  158A  	fcall	_USART_putc
  9124                           
  9125                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9126  1DD8  1283               	bcf	3,5	;RP0=0, select bank0
  9127  1DD9  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9128  1DDA                     l3899:	
  9129  1DDA  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9130  1DDB  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9131  1DDC  1803               	btfsc	3,0
  9132  1DDD  2DF0               	goto	l3901
  9133                           
  9134                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9135  1DDE  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9136  1DDF  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9137  1DE0  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9138  1DE1  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9139  1DE2  0084               	movwf	4
  9140  1DE3  1383               	bcf	3,7	;select IRP bank0
  9141  1DE4  0800               	movf	0,w
  9142  1DE5  160A  158A  222B  160A  158A  	fcall	_USART_putc
  9143  1DEA  3001               	movlw	1
  9144  1DEB  1283               	bcf	3,5	;RP0=0, select bank0
  9145  1DEC  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9146  1DED  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9147  1DEE  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9148  1DEF  2DDA               	goto	l3899
  9149  1DF0                     l3901:	
  9150                           
  9151                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9152  1DF0  3001               	movlw	1
  9153  1DF1  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9154  1DF2  3000               	movlw	0
  9155  1DF3  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9156  1DF4  160A  158A  22F0   	fcall	_PROCULUS_Delay
  9157  1DF7  0008               	return
  9158  1DF8                     __end_of_PROCULUS_Control_Register_Write:	
  9159                           
  9160                           	psect	text31
  9161  1A8B                     __ptext31:	
  9162 ;; *************** function _USART_put_int *****************
  9163 ;; Defined at:
  9164 ;;		line 137 in file "usart.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  value           2   46[BANK0 ] int 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9169 ;;		 -> USART_put_int@value(2), 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 300/0
  9176 ;;		On exit  : 300/100
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9179 ;;      Params:         0       2       0       0       0
  9180 ;;      Locals:         0       1       0       0       0
  9181 ;;      Temps:          0       1       0       0       0
  9182 ;;      Totals:         0       4       0       0       0
  9183 ;;Total ram usage:        4 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    2
  9186 ;; This function calls:
  9187 ;;		_USART_putc
  9188 ;; This function is called by:
  9189 ;;		_Decodify_Command
  9190 ;;		_PROCULUS_Control_Register_Write
  9191 ;;		_PROCULUS_VP_Write
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _USART_put_int
  9197  1A8B                     _USART_put_int:	
  9198                           
  9199                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9203  1A8B  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9204  1A8C  00D0               	movwf	??_USART_put_int
  9205  1A8D  0850               	movf	??_USART_put_int,w
  9206  1A8E  00D1               	movwf	USART_put_int@dado
  9207                           
  9208                           ;usart.c: 140:      USART_putc(*(dado+1));
  9209  1A8F  0A51               	incf	USART_put_int@dado,w
  9210  1A90  0084               	movwf	4
  9211  1A91  1383               	bcf	3,7	;select IRP bank0
  9212  1A92  0800               	movf	0,w
  9213  1A93  160A  158A  222B  160A  158A  	fcall	_USART_putc
  9214                           
  9215                           ;usart.c: 141:      USART_putc(*dado);
  9216  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  9217  1A99  0851               	movf	USART_put_int@dado,w
  9218  1A9A  0084               	movwf	4
  9219  1A9B  1383               	bcf	3,7	;select IRP bank0
  9220  1A9C  0800               	movf	0,w
  9221  1A9D  160A  158A  222B   	fcall	_USART_putc
  9222  1AA0  0008               	return
  9223  1AA1                     __end_of_USART_put_int:	
  9224                           
  9225                           	psect	text32
  9226  1AF0                     __ptext32:	
  9227 ;; *************** function _PROCULUS_Delay *****************
  9228 ;; Defined at:
  9229 ;;		line 267 in file "proculus.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  i               2    4[BANK0 ] unsigned int 
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2
  9238 ;; Tracked objects:
  9239 ;;		On entry : 300/0
  9240 ;;		On exit  : 300/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9243 ;;      Params:         0       2       0       0       0
  9244 ;;      Locals:         0       2       0       0       0
  9245 ;;      Temps:          0       2       0       0       0
  9246 ;;      Totals:         0       6       0       0       0
  9247 ;;Total ram usage:        6 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_PROCULUS_Control_Register_Write
  9254 ;;		_PROCULUS_VP_Write
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           
  9259                           ;psect for function _PROCULUS_Delay
  9260  1AF0                     _PROCULUS_Delay:	
  9261                           
  9262                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9263                           
  9264                           ;incstack = 0
  9265                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9266  1AF0  01A4               	clrf	PROCULUS_Delay@i
  9267  1AF1  01A5               	clrf	PROCULUS_Delay@i+1
  9268  1AF2                     l798:	
  9269  1AF2  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9270  1AF3  0225               	subwf	PROCULUS_Delay@i+1,w
  9271  1AF4  1D03               	skipz
  9272  1AF5  2AF8               	goto	u2825
  9273  1AF6  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9274  1AF7  0224               	subwf	PROCULUS_Delay@i,w
  9275  1AF8                     u2825:	
  9276  1AF8  1803               	btfsc	3,0
  9277  1AF9  0008               	return
  9278                           
  9279                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9280  1AFA  3003               	movlw	3
  9281  1AFB  1283               	bcf	3,5	;RP0=0, select bank0
  9282  1AFC  1303               	bcf	3,6	;RP1=0, select bank0
  9283  1AFD  00A3               	movwf	??_PROCULUS_Delay+1
  9284  1AFE  3097               	movlw	151
  9285  1AFF  00A2               	movwf	??_PROCULUS_Delay
  9286  1B00                     u5527:	
  9287  1B00  0BA2               	decfsz	??_PROCULUS_Delay,f
  9288  1B01  2B00               	goto	u5527
  9289  1B02  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9290  1B03  2B00               	goto	u5527
  9291                           
  9292                           ;proculus.c: 270:     }
  9293  1B04  3001               	movlw	1
  9294  1B05  1283               	bcf	3,5	;RP0=0, select bank0
  9295  1B06  1303               	bcf	3,6	;RP1=0, select bank0
  9296  1B07  07A4               	addwf	PROCULUS_Delay@i,f
  9297  1B08  1803               	skipnc
  9298  1B09  0AA5               	incf	PROCULUS_Delay@i+1,f
  9299  1B0A  3000               	movlw	0
  9300  1B0B  07A5               	addwf	PROCULUS_Delay@i+1,f
  9301  1B0C  2AF2               	goto	l798
  9302  1B0D                     __end_of_PROCULUS_Delay:	
  9303                           
  9304                           	psect	text33
  9305  1C8C                     __ptext33:	
  9306 ;; *************** function _EEPROM_Write_String *****************
  9307 ;; Defined at:
  9308 ;;		line 97 in file "eeprom.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  addr            1    wreg     unsigned char 
  9311 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9312 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;  addr            1    7[BANK0 ] unsigned char 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 300/300
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9324 ;;      Params:         0       1       0       0       0
  9325 ;;      Locals:         0       1       0       0       0
  9326 ;;      Temps:          0       1       0       0       0
  9327 ;;      Totals:         0       3       0       0       0
  9328 ;;Total ram usage:        3 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    2
  9331 ;; This function calls:
  9332 ;;		_EEPROM_Write_Byte
  9333 ;; This function is called by:
  9334 ;;		_Decodify_Command
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function _EEPROM_Write_String
  9340  1C8C                     _EEPROM_Write_String:	
  9341                           
  9342                           ;incstack = 0
  9343                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9344                           ;EEPROM_Write_String@addr stored from wreg
  9345  1C8C  1283               	bcf	3,5	;RP0=0, select bank0
  9346  1C8D  1303               	bcf	3,6	;RP1=0, select bank0
  9347  1C8E  00A7               	movwf	EEPROM_Write_String@addr
  9348  1C8F                     l4729:	
  9349                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9350                           
  9351                           
  9352                           ;eeprom.c: 99:     while(*dado)
  9353  1C8F  0825               	movf	EEPROM_Write_String@dado,w
  9354  1C90  0084               	movwf	4
  9355  1C91  1783               	bsf	3,7	;select IRP bank2
  9356  1C92  0800               	movf	0,w
  9357  1C93  1903               	btfsc	3,2
  9358  1C94  2CAC               	goto	l4731
  9359                           
  9360                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9361  1C95  0825               	movf	EEPROM_Write_String@dado,w
  9362  1C96  0084               	movwf	4
  9363  1C97  0800               	movf	0,w
  9364  1C98  00A6               	movwf	??_EEPROM_Write_String
  9365  1C99  0826               	movf	??_EEPROM_Write_String,w
  9366  1C9A  00A0               	movwf	EEPROM_Write_Byte@dado
  9367  1C9B  0827               	movf	EEPROM_Write_String@addr,w
  9368  1C9C  160A  158A  25F8  160A  158A  	fcall	_EEPROM_Write_Byte
  9369                           
  9370                           ;eeprom.c: 102:      addr++;
  9371  1CA1  3001               	movlw	1
  9372  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
  9373  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
  9374  1CA4  00A6               	movwf	??_EEPROM_Write_String
  9375  1CA5  0826               	movf	??_EEPROM_Write_String,w
  9376  1CA6  07A7               	addwf	EEPROM_Write_String@addr,f
  9377                           
  9378                           ;eeprom.c: 103:      dado++;
  9379  1CA7  3001               	movlw	1
  9380  1CA8  00A6               	movwf	??_EEPROM_Write_String
  9381  1CA9  0826               	movf	??_EEPROM_Write_String,w
  9382  1CAA  07A5               	addwf	EEPROM_Write_String@dado,f
  9383  1CAB  2C8F               	goto	l4729
  9384  1CAC                     l4731:	
  9385                           
  9386                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9387  1CAC  0825               	movf	EEPROM_Write_String@dado,w
  9388  1CAD  0084               	movwf	4
  9389  1CAE  0800               	movf	0,w
  9390  1CAF  00A6               	movwf	??_EEPROM_Write_String
  9391  1CB0  0826               	movf	??_EEPROM_Write_String,w
  9392  1CB1  00A0               	movwf	EEPROM_Write_Byte@dado
  9393  1CB2  0827               	movf	EEPROM_Write_String@addr,w
  9394  1CB3  160A  158A  25F8   	fcall	_EEPROM_Write_Byte
  9395  1CB6  0008               	return
  9396  1CB7                     __end_of_EEPROM_Write_String:	
  9397                           
  9398                           	psect	text34
  9399  1CB7                     __ptext34:	
  9400 ;; *************** function _EEPROM_Write_Integer *****************
  9401 ;; Defined at:
  9402 ;;		line 68 in file "eeprom.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  addr            1    wreg     unsigned char 
  9405 ;;  dado            2    5[BANK0 ] unsigned int 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  addr            1   11[BANK0 ] unsigned char 
  9408 ;;  i               1   12[BANK0 ] unsigned char 
  9409 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9410 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9411 ;;  addr_memo       1    0        unsigned char 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 200/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9421 ;;      Params:         0       2       0       0       0
  9422 ;;      Locals:         0       4       0       0       0
  9423 ;;      Temps:          0       2       0       0       0
  9424 ;;      Totals:         0       8       0       0       0
  9425 ;;Total ram usage:        8 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    2
  9428 ;; This function calls:
  9429 ;;		_EEPROM_Write_Byte
  9430 ;; This function is called by:
  9431 ;;		_main
  9432 ;;		_Decodify_Command
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           
  9437                           ;psect for function _EEPROM_Write_Integer
  9438  1CB7                     _EEPROM_Write_Integer:	
  9439                           
  9440                           ;incstack = 0
  9441                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9442                           ;EEPROM_Write_Integer@addr stored from wreg
  9443  1CB7  1283               	bcf	3,5	;RP0=0, select bank0
  9444  1CB8  00AB               	movwf	EEPROM_Write_Integer@addr
  9445                           
  9446                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9447  1CB9  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9448  1CBA  00A7               	movwf	??_EEPROM_Write_Integer
  9449  1CBB  0827               	movf	??_EEPROM_Write_Integer,w
  9450  1CBC  00AA               	movwf	EEPROM_Write_Integer@ptr
  9451                           
  9452                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9453  1CBD  01AC               	clrf	EEPROM_Write_Integer@i
  9454  1CBE                     l4679:	
  9455                           
  9456                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9457  1CBE  082A               	movf	EEPROM_Write_Integer@ptr,w
  9458  1CBF  0084               	movwf	4
  9459  1CC0  1383               	bcf	3,7	;select IRP bank0
  9460  1CC1  0800               	movf	0,w
  9461  1CC2  00A7               	movwf	??_EEPROM_Write_Integer
  9462  1CC3  0827               	movf	??_EEPROM_Write_Integer,w
  9463  1CC4  00A0               	movwf	EEPROM_Write_Byte@dado
  9464  1CC5  082B               	movf	EEPROM_Write_Integer@addr,w
  9465  1CC6  160A  158A  25F8  160A  158A  	fcall	_EEPROM_Write_Byte
  9466  1CCB  3001               	movlw	1
  9467  1CCC  1283               	bcf	3,5	;RP0=0, select bank0
  9468  1CCD  1303               	bcf	3,6	;RP1=0, select bank0
  9469  1CCE  00A7               	movwf	??_EEPROM_Write_Integer
  9470  1CCF  0827               	movf	??_EEPROM_Write_Integer,w
  9471  1CD0  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9472  1CD1  3001               	movlw	1
  9473  1CD2  00A7               	movwf	??_EEPROM_Write_Integer
  9474  1CD3  0827               	movf	??_EEPROM_Write_Integer,w
  9475  1CD4  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9476  1CD5  3001               	movlw	1
  9477  1CD6  00A7               	movwf	??_EEPROM_Write_Integer
  9478  1CD7  0827               	movf	??_EEPROM_Write_Integer,w
  9479  1CD8  07AC               	addwf	EEPROM_Write_Integer@i,f
  9480  1CD9  3002               	movlw	2
  9481  1CDA  022C               	subwf	EEPROM_Write_Integer@i,w
  9482  1CDB  1C03               	skipc
  9483  1CDC  2CBE               	goto	l4679
  9484                           
  9485                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9486  1CDD  304E               	movlw	78
  9487  1CDE  1283               	bcf	3,5	;RP0=0, select bank0
  9488  1CDF  1303               	bcf	3,6	;RP1=0, select bank0
  9489  1CE0  00A8               	movwf	??_EEPROM_Write_Integer+1
  9490  1CE1  30EA               	movlw	234
  9491  1CE2  00A7               	movwf	??_EEPROM_Write_Integer
  9492  1CE3                     u5537:	
  9493  1CE3  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9494  1CE4  2CE3               	goto	u5537
  9495  1CE5  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9496  1CE6  2CE3               	goto	u5537
  9497  1CE7  0000               	nop
  9498  1CE8  0008               	return
  9499  1CE9                     __end_of_EEPROM_Write_Integer:	
  9500                           
  9501                           	psect	text35
  9502  1DF8                     __ptext35:	
  9503 ;; *************** function _EEPROM_Write_Byte *****************
  9504 ;; Defined at:
  9505 ;;		line 21 in file "eeprom.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  addr            1    wreg     unsigned char 
  9508 ;;  dado            1    0[BANK0 ] unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  addr            1    3[BANK0 ] unsigned char 
  9511 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/300
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9521 ;;      Params:         0       1       0       0       0
  9522 ;;      Locals:         0       2       0       0       0
  9523 ;;      Temps:          0       2       0       0       0
  9524 ;;      Totals:         0       5       0       0       0
  9525 ;;Total ram usage:        5 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:    1
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_Decodify_Command
  9532 ;;		_EEPROM_Write_Integer
  9533 ;;		_EEPROM_Write_String
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           
  9538                           ;psect for function _EEPROM_Write_Byte
  9539  1DF8                     _EEPROM_Write_Byte:	
  9540                           
  9541                           ;incstack = 0
  9542                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9543                           ;EEPROM_Write_Byte@addr stored from wreg
  9544  1DF8  1283               	bcf	3,5	;RP0=0, select bank0
  9545  1DF9  1303               	bcf	3,6	;RP1=0, select bank0
  9546  1DFA  00A3               	movwf	EEPROM_Write_Byte@addr
  9547                           
  9548                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9549  1DFB  3014               	movlw	20
  9550  1DFC  1683               	bsf	3,5	;RP0=1, select bank1
  9551  1DFD  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9552  1DFE  3000               	movlw	0
  9553  1DFF  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9554  1E00                     l517:	
  9555                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9556                           
  9557  1E00  1703               	bsf	3,6	;RP1=1, select bank3
  9558  1E01  188C               	btfsc	12,1	;volsfr
  9559  1E02  2E00               	goto	l517
  9560                           
  9561                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9562  1E03  1F8B               	btfss	11,7	;volatile
  9563  1E04  2E0A               	goto	l3831
  9564                           
  9565                           ;eeprom.c: 28:           last_GIE=1;
  9566  1E05  1283               	bcf	3,5	;RP0=0, select bank0
  9567  1E06  1303               	bcf	3,6	;RP1=0, select bank0
  9568  1E07  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9569  1E08  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9570  1E09  2E0D               	goto	l3833
  9571  1E0A                     l3831:	
  9572                           
  9573                           ;eeprom.c: 30:           last_GIE=0;
  9574  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
  9575  1E0B  1303               	bcf	3,6	;RP1=0, select bank0
  9576  1E0C  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9577  1E0D                     l3833:	
  9578                           
  9579                           ;eeprom.c: 32:        EEADR=addr;
  9580  1E0D  0823               	movf	EEPROM_Write_Byte@addr,w
  9581  1E0E  1703               	bsf	3,6	;RP1=1, select bank2
  9582  1E0F  008D               	movwf	13	;volatile
  9583                           
  9584                           ;eeprom.c: 33:        EEDATA=dado;
  9585  1E10  1303               	bcf	3,6	;RP1=0, select bank0
  9586  1E11  0820               	movf	EEPROM_Write_Byte@dado,w
  9587  1E12  1703               	bsf	3,6	;RP1=1, select bank2
  9588  1E13  008C               	movwf	12	;volatile
  9589                           
  9590                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9591  1E14  1683               	bsf	3,5	;RP0=1, select bank3
  9592  1E15  138C               	bcf	12,7	;volsfr
  9593                           
  9594                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9595  1E16  150C               	bsf	12,2	;volsfr
  9596                           
  9597                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9598  1E17  138B               	bcf	11,7	;volatile
  9599                           
  9600                           ;eeprom.c: 37:        EECON2=0x55;
  9601  1E18  3055               	movlw	85
  9602  1E19  008D               	movwf	13	;volsfr
  9603                           
  9604                           ;eeprom.c: 38:        EECON2=0xAA;
  9605  1E1A  30AA               	movlw	170
  9606  1E1B  008D               	movwf	13	;volsfr
  9607                           
  9608                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9609  1E1C  148C               	bsf	12,1	;volsfr
  9610                           
  9611                           ;eeprom.c: 41:        if(last_GIE==1)
  9612  1E1D  1283               	bcf	3,5	;RP0=0, select bank0
  9613  1E1E  1303               	bcf	3,6	;RP1=0, select bank0
  9614  1E1F  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9615  1E20  1D03               	btfss	3,2
  9616  1E21  2E24               	goto	l522
  9617                           
  9618                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9619  1E22  178B               	bsf	11,7	;volatile
  9620  1E23  2E25               	goto	l523
  9621  1E24                     l522:	
  9622                           ;eeprom.c: 43:        else
  9623                           
  9624                           
  9625                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9626  1E24  138B               	bcf	11,7	;volatile
  9627  1E25                     l523:	
  9628                           
  9629                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9630  1E25  1683               	bsf	3,5	;RP0=1, select bank3
  9631  1E26  1703               	bsf	3,6	;RP1=1, select bank3
  9632  1E27  110C               	bcf	12,2	;volsfr
  9633                           
  9634                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9635  1E28  304E               	movlw	78
  9636  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  9637  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  9638  1E2B  00A2               	movwf	??_EEPROM_Write_Byte+1
  9639  1E2C  30EA               	movlw	234
  9640  1E2D  00A1               	movwf	??_EEPROM_Write_Byte
  9641  1E2E                     u5547:	
  9642  1E2E  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9643  1E2F  2E2E               	goto	u5547
  9644  1E30  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9645  1E31  2E2E               	goto	u5547
  9646  1E32  0000               	nop
  9647  1E33  0008               	return
  9648  1E34                     __end_of_EEPROM_Write_Byte:	
  9649                           
  9650                           	psect	text36
  9651  1B69                     __ptext36:	
  9652 ;; *************** function _EEPROM_Read_String *****************
  9653 ;; Defined at:
  9654 ;;		line 109 in file "eeprom.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  addr            1    wreg     unsigned char 
  9657 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9658 ;;		 -> buffer(33), 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  addr            1    5[BANK0 ] unsigned char 
  9661 ;;  c               1    6[BANK0 ] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 300/300
  9668 ;;		On exit  : B00/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       1       0       0       0
  9672 ;;      Locals:         0       2       0       0       0
  9673 ;;      Temps:          0       1       0       0       0
  9674 ;;      Totals:         0       4       0       0       0
  9675 ;;Total ram usage:        4 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    2
  9678 ;; This function calls:
  9679 ;;		_EEPROM_Read_Byte
  9680 ;; This function is called by:
  9681 ;;		_Decodify_Command
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function _EEPROM_Read_String
  9687  1B69                     _EEPROM_Read_String:	
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9691                           ;EEPROM_Read_String@addr stored from wreg
  9692  1B69  1283               	bcf	3,5	;RP0=0, select bank0
  9693  1B6A  1303               	bcf	3,6	;RP1=0, select bank0
  9694  1B6B  00A5               	movwf	EEPROM_Read_String@addr
  9695  1B6C                     l549:	
  9696                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9697                           
  9698                           
  9699                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9700  1B6C  0825               	movf	EEPROM_Read_String@addr,w
  9701  1B6D  160A  158A  23AA  160A  158A  	fcall	_EEPROM_Read_Byte
  9702  1B72  1303               	bcf	3,6	;RP1=0, select bank0
  9703  1B73  00A4               	movwf	??_EEPROM_Read_String
  9704  1B74  0824               	movf	??_EEPROM_Read_String,w
  9705  1B75  00A6               	movwf	EEPROM_Read_String@c
  9706  1B76  3001               	movlw	1
  9707  1B77  00A4               	movwf	??_EEPROM_Read_String
  9708  1B78  0824               	movf	??_EEPROM_Read_String,w
  9709  1B79  07A5               	addwf	EEPROM_Read_String@addr,f
  9710                           
  9711                           ;eeprom.c: 114:         *(dado++)=c;
  9712  1B7A  0826               	movf	EEPROM_Read_String@c,w
  9713  1B7B  00A4               	movwf	??_EEPROM_Read_String
  9714  1B7C  0823               	movf	EEPROM_Read_String@dado,w
  9715  1B7D  0084               	movwf	4
  9716  1B7E  0824               	movf	??_EEPROM_Read_String,w
  9717  1B7F  1383               	bcf	3,7	;select IRP bank0
  9718  1B80  0080               	movwf	0
  9719  1B81  3001               	movlw	1
  9720  1B82  00A4               	movwf	??_EEPROM_Read_String
  9721  1B83  0824               	movf	??_EEPROM_Read_String,w
  9722  1B84  07A3               	addwf	EEPROM_Read_String@dado,f
  9723                           
  9724                           ;eeprom.c: 116:       }while(c);
  9725  1B85  0826               	movf	EEPROM_Read_String@c,w
  9726  1B86  1903               	btfsc	3,2
  9727  1B87  0008               	return
  9728  1B88  2B6C               	goto	l549
  9729  1B89                     __end_of_EEPROM_Read_String:	
  9730                           
  9731                           	psect	text37
  9732  1C62                     __ptext37:	
  9733 ;; *************** function _EEPROM_Read_Integer *****************
  9734 ;; Defined at:
  9735 ;;		line 81 in file "eeprom.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  addr            1    wreg     unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  addr            1    6[BANK0 ] unsigned char 
  9740 ;;  result          2    8[BANK0 ] unsigned int 
  9741 ;;  i               1   10[BANK0 ] unsigned char 
  9742 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9743 ;;		 -> EEPROM_Read_Integer@result(2), 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2    3[BANK0 ] unsigned int 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : B00/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9753 ;;      Params:         0       2       0       0       0
  9754 ;;      Locals:         0       5       0       0       0
  9755 ;;      Temps:          0       1       0       0       0
  9756 ;;      Totals:         0       8       0       0       0
  9757 ;;Total ram usage:        8 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    2
  9760 ;; This function calls:
  9761 ;;		_EEPROM_Read_Byte
  9762 ;; This function is called by:
  9763 ;;		_main
  9764 ;;		_Decodify_Command
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           
  9769                           ;psect for function _EEPROM_Read_Integer
  9770  1C62                     _EEPROM_Read_Integer:	
  9771                           
  9772                           ;incstack = 0
  9773                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9774                           ;EEPROM_Read_Integer@addr stored from wreg
  9775  1C62  1283               	bcf	3,5	;RP0=0, select bank0
  9776  1C63  1303               	bcf	3,6	;RP1=0, select bank0
  9777  1C64  00A6               	movwf	EEPROM_Read_Integer@addr
  9778                           
  9779                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9780  1C65  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9781  1C66  00A5               	movwf	??_EEPROM_Read_Integer
  9782  1C67  0825               	movf	??_EEPROM_Read_Integer,w
  9783  1C68  00A7               	movwf	EEPROM_Read_Integer@ptr
  9784                           
  9785                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9786  1C69  01AA               	clrf	EEPROM_Read_Integer@i
  9787  1C6A                     l4655:	
  9788                           
  9789                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9790  1C6A  0826               	movf	EEPROM_Read_Integer@addr,w
  9791  1C6B  160A  158A  23AA  160A  158A  	fcall	_EEPROM_Read_Byte
  9792  1C70  1303               	bcf	3,6	;RP1=0, select bank0
  9793  1C71  00A5               	movwf	??_EEPROM_Read_Integer
  9794  1C72  0827               	movf	EEPROM_Read_Integer@ptr,w
  9795  1C73  0084               	movwf	4
  9796  1C74  0825               	movf	??_EEPROM_Read_Integer,w
  9797  1C75  1383               	bcf	3,7	;select IRP bank0
  9798  1C76  0080               	movwf	0
  9799  1C77  3001               	movlw	1
  9800  1C78  00A5               	movwf	??_EEPROM_Read_Integer
  9801  1C79  0825               	movf	??_EEPROM_Read_Integer,w
  9802  1C7A  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9803  1C7B  3001               	movlw	1
  9804  1C7C  00A5               	movwf	??_EEPROM_Read_Integer
  9805  1C7D  0825               	movf	??_EEPROM_Read_Integer,w
  9806  1C7E  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9807  1C7F  3001               	movlw	1
  9808  1C80  00A5               	movwf	??_EEPROM_Read_Integer
  9809  1C81  0825               	movf	??_EEPROM_Read_Integer,w
  9810  1C82  07AA               	addwf	EEPROM_Read_Integer@i,f
  9811  1C83  3002               	movlw	2
  9812  1C84  022A               	subwf	EEPROM_Read_Integer@i,w
  9813  1C85  1C03               	skipc
  9814  1C86  2C6A               	goto	l4655
  9815                           
  9816                           ;eeprom.c: 89:       return result;
  9817  1C87  0829               	movf	EEPROM_Read_Integer@result+1,w
  9818  1C88  00A4               	movwf	?_EEPROM_Read_Integer+1
  9819  1C89  0828               	movf	EEPROM_Read_Integer@result,w
  9820  1C8A  00A3               	movwf	?_EEPROM_Read_Integer
  9821  1C8B  0008               	return
  9822  1C8C                     __end_of_EEPROM_Read_Integer:	
  9823                           
  9824                           	psect	text38
  9825  1BAA                     __ptext38:	
  9826 ;; *************** function _EEPROM_Read_Byte *****************
  9827 ;; Defined at:
  9828 ;;		line 52 in file "eeprom.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  addr            1    wreg     unsigned char 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;  addr            1    2[BANK0 ] unsigned char 
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      unsigned char 
  9835 ;; Registers used:
  9836 ;;		wreg
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/300
  9839 ;;		On exit  : 300/200
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9842 ;;      Params:         0       0       0       0       0
  9843 ;;      Locals:         0       1       0       0       0
  9844 ;;      Temps:          0       2       0       0       0
  9845 ;;      Totals:         0       3       0       0       0
  9846 ;;Total ram usage:        3 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    1
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_Decodify_Command
  9853 ;;		_EEPROM_Read_Integer
  9854 ;;		_EEPROM_Read_String
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _EEPROM_Read_Byte
  9860  1BAA                     _EEPROM_Read_Byte:	
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9864                           ;EEPROM_Read_Byte@addr stored from wreg
  9865  1BAA  1283               	bcf	3,5	;RP0=0, select bank0
  9866  1BAB  1303               	bcf	3,6	;RP1=0, select bank0
  9867  1BAC  00A2               	movwf	EEPROM_Read_Byte@addr
  9868                           
  9869                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9870  1BAD  3014               	movlw	20
  9871  1BAE  1683               	bsf	3,5	;RP0=1, select bank1
  9872  1BAF  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9873  1BB0  3000               	movlw	0
  9874  1BB1  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9875  1BB2                     l527:	
  9876                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9877                           
  9878  1BB2  1703               	bsf	3,6	;RP1=1, select bank3
  9879  1BB3  188C               	btfsc	12,1	;volsfr
  9880  1BB4  2BB2               	goto	l527
  9881                           
  9882                           ;eeprom.c: 57:    EEADR=addr;
  9883  1BB5  1283               	bcf	3,5	;RP0=0, select bank0
  9884  1BB6  1303               	bcf	3,6	;RP1=0, select bank0
  9885  1BB7  0822               	movf	EEPROM_Read_Byte@addr,w
  9886  1BB8  1703               	bsf	3,6	;RP1=1, select bank2
  9887  1BB9  008D               	movwf	13	;volatile
  9888                           
  9889                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9890  1BBA  1683               	bsf	3,5	;RP0=1, select bank3
  9891  1BBB  138C               	bcf	12,7	;volsfr
  9892                           
  9893                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9894  1BBC  140C               	bsf	12,0	;volsfr
  9895                           
  9896                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9897  1BBD  304E               	movlw	78
  9898  1BBE  1283               	bcf	3,5	;RP0=0, select bank0
  9899  1BBF  1303               	bcf	3,6	;RP1=0, select bank0
  9900  1BC0  00A1               	movwf	??_EEPROM_Read_Byte+1
  9901  1BC1  30EA               	movlw	234
  9902  1BC2  00A0               	movwf	??_EEPROM_Read_Byte
  9903  1BC3                     u5557:	
  9904  1BC3  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9905  1BC4  2BC3               	goto	u5557
  9906  1BC5  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9907  1BC6  2BC3               	goto	u5557
  9908  1BC7  0000               	nop
  9909                           
  9910                           ;eeprom.c: 61:    return EEDATA;
  9911  1BC8  1283               	bcf	3,5	;RP0=0, select bank2
  9912  1BC9  1703               	bsf	3,6	;RP1=1, select bank2
  9913  1BCA  080C               	movf	12,w	;volatile
  9914  1BCB  0008               	return
  9915  1BCC                     __end_of_EEPROM_Read_Byte:	
  9916                           
  9917                           	psect	text39
  9918  06C5                     __ptext39:	
  9919 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9920 ;; Defined at:
  9921 ;;		line 220 in file "EEPROM_24C1025.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  chip_add        1    wreg     unsigned char 
  9924 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9925 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9926 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9929 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9930 ;;  range           1   18[BANK0 ] unsigned char 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 300/300
  9937 ;;		On exit  : 300/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9940 ;;      Params:         0       5       0       0       0
  9941 ;;      Locals:         0       3       0       0       0
  9942 ;;      Temps:          0       2       0       0       0
  9943 ;;      Totals:         0      10       0       0       0
  9944 ;;Total ram usage:       10 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    3
  9947 ;; This function calls:
  9948 ;;		_I2C_Master_Start
  9949 ;;		_I2C_Master_Stop
  9950 ;;		_I2C_Master_Write
  9951 ;;		_my_delay_ms_WDT
  9952 ;; This function is called by:
  9953 ;;		_Decodify_Command
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _EEPROM_24C1025_Write_Str
  9959  06C5                     _EEPROM_24C1025_Write_Str:	
  9960                           
  9961                           ;incstack = 0
  9962                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9963                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9964  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  9965  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  9966  06C7  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9967                           
  9968                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9969  06C8  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9970  06C9  1D03               	btfss	3,2
  9971  06CA  0008               	return
  9972  06CB  3002               	movlw	2
  9973  06CC  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9974  06CD  1D03               	skipz
  9975  06CE  2ED7               	goto	u4213
  9976  06CF  3000               	movlw	0
  9977  06D0  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9978  06D1  1D03               	skipz
  9979  06D2  2ED7               	goto	u4213
  9980  06D3  3000               	movlw	0
  9981  06D4  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9982  06D5  1D03               	skipz
  9983  06D6  2ED7               	goto	u4213
  9984  06D7                     u4213:	
  9985  06D7  1803               	btfsc	3,0
  9986  06D8  0008               	return
  9987  06D9                     L11:	
  9988                           
  9989                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9990  06D9  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9991  06DA  1D03               	btfss	3,2
  9992  06DB  2EEA               	goto	l4457
  9993  06DC  3001               	movlw	1
  9994  06DD  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9995  06DE  1D03               	skipz
  9996  06DF  2EE8               	goto	u4223
  9997  06E0  3000               	movlw	0
  9998  06E1  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9999  06E2  1D03               	skipz
 10000  06E3  2EE8               	goto	u4223
 10001  06E4  3000               	movlw	0
 10002  06E5  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10003  06E6  1D03               	skipz
 10004  06E7  2EE8               	goto	u4223
 10005  06E8                     u4223:	
 10006  06E8  1C03               	btfss	3,0
 10007  06E9  2EEF               	goto	l4459
 10008  06EA                     l4457:	
 10009  06EA  3008               	movlw	8
 10010  06EB  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10011  06EC  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10012  06ED  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10013  06EE  2EF0               	goto	l4461
 10014  06EF                     l4459:	
 10015  06EF  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10016  06F0                     l4461:	
 10017                           
 10018                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10019  06F0  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10020  06F1  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10021  06F2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10022  06F3  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10023                           
 10024                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10025  06F4  1003               	clrc
 10026  06F5  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10027                           
 10028                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10029  06F6  30A0               	movlw	160
 10030  06F7  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10031  06F8  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10032  06F9  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10033                           
 10034                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10035  06FA  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10036  06FB  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10037  06FC  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10038  06FD  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10039                           
 10040                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10041  06FE  160A  158A  223B  120A  118A  	fcall	_I2C_Master_Start
 10042                           
 10043                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10044  0703  1283               	bcf	3,5	;RP0=0, select bank0
 10045  0704  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10046  0705  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10047  0706  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10048  0707  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10049  0708  00A3               	movwf	I2C_Master_Write@d
 10050  0709  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10051  070A  00A4               	movwf	I2C_Master_Write@d+1
 10052  070B  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10053                           
 10054                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10055  0710  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10056  0711  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10057  0712  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10058  0713  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10059  0714  00A3               	movwf	I2C_Master_Write@d
 10060  0715  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10061  0716  00A4               	movwf	I2C_Master_Write@d+1
 10062  0717  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10063                           
 10064                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10065  071C  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10066  071D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10067  071E  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10068  071F  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10069  0720  00A3               	movwf	I2C_Master_Write@d
 10070  0721  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10071  0722  00A4               	movwf	I2C_Master_Write@d+1
 10072  0723  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10073  0728                     l4521:	
 10074                           ;EEPROM_24C1025.c: 236:      while(*data)
 10075                           
 10076                           
 10077                           ;EEPROM_24C1025.c: 236:      while(*data)
 10078  0728  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10079  0729  0084               	movwf	4
 10080  072A  1783               	bsf	3,7	;select IRP bank2
 10081  072B  0800               	movf	0,w
 10082  072C  1903               	btfsc	3,2
 10083  072D  2F9E               	goto	l4523
 10084  072E  0064               	clrwdt	;# 
 10085                           
 10086                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10087  072F  1283               	bcf	3,5	;RP0=0, select bank0
 10088  0730  1303               	bcf	3,6	;RP1=0, select bank0
 10089  0731  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10090  0732  1D03               	btfss	3,2
 10091  0733  0008               	return
 10092  0734  3002               	movlw	2
 10093  0735  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10094  0736  1D03               	skipz
 10095  0737  2F40               	goto	u4233
 10096  0738  3000               	movlw	0
 10097  0739  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10098  073A  1D03               	skipz
 10099  073B  2F40               	goto	u4233
 10100  073C  3000               	movlw	0
 10101  073D  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10102  073E  1D03               	skipz
 10103  073F  2F40               	goto	u4233
 10104  0740                     u4233:	
 10105  0740  1803               	btfsc	3,0
 10106  0741  0008               	return
 10107                           
 10108                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10109  0742  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10110  0743  3E01               	addlw	1
 10111  0744  397F               	andlw	127
 10112  0745  1D03               	btfss	3,2
 10113  0746  2F7C               	goto	l4515
 10114                           
 10115                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10116  0747  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10117  0748  0084               	movwf	4
 10118  0749  1783               	bsf	3,7	;select IRP bank2
 10119  074A  0800               	movf	0,w
 10120  074B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10121  074C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10122  074D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10123  074E  00A3               	movwf	I2C_Master_Write@d
 10124  074F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10125  0750  00A4               	movwf	I2C_Master_Write@d+1
 10126  0751  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10127                           
 10128                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10129  0756  160A  158A  21EE  120A  118A  	fcall	_I2C_Master_Stop
 10130                           
 10131                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10132  075B  3000               	movlw	0
 10133  075C  1283               	bcf	3,5	;RP0=0, select bank0
 10134  075D  00A3               	movwf	my_delay_ms_WDT@time+3
 10135  075E  3000               	movlw	0
 10136  075F  00A2               	movwf	my_delay_ms_WDT@time+2
 10137  0760  3000               	movlw	0
 10138  0761  00A1               	movwf	my_delay_ms_WDT@time+1
 10139  0762  3005               	movlw	5
 10140  0763  00A0               	movwf	my_delay_ms_WDT@time
 10141  0764  160A  158A  2588  120A  118A  	fcall	_my_delay_ms_WDT
 10142                           
 10143                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10144  0769  3001               	movlw	1
 10145  076A  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10146  076B  3000               	movlw	0
 10147  076C  1803               	skipnc
 10148  076D  3001               	movlw	1
 10149  076E  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10150  076F  3000               	movlw	0
 10151  0770  1803               	skipnc
 10152  0771  3001               	movlw	1
 10153  0772  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10154  0773  3000               	movlw	0
 10155  0774  1803               	skipnc
 10156  0775  3001               	movlw	1
 10157  0776  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10158                           
 10159                           ;EEPROM_24C1025.c: 247:             data++;
 10160  0777  3001               	movlw	1
 10161  0778  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10162  0779  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10163  077A  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10164  077B  2ED9               	goto	L11
 10165  077C                     l4515:	
 10166                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10167                           
 10168                           
 10169                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10170  077C  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10171  077D  0084               	movwf	4
 10172  077E  1783               	bsf	3,7	;select IRP bank2
 10173  077F  0800               	movf	0,w
 10174  0780  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10175  0781  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10176  0782  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10177  0783  00A3               	movwf	I2C_Master_Write@d
 10178  0784  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10179  0785  00A4               	movwf	I2C_Master_Write@d+1
 10180  0786  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10181                           
 10182                           ;EEPROM_24C1025.c: 262:             data++;
 10183  078B  3001               	movlw	1
 10184  078C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10185  078D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10186  078E  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10187                           
 10188                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10189  078F  3001               	movlw	1
 10190  0790  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10191  0791  3000               	movlw	0
 10192  0792  1803               	skipnc
 10193  0793  3001               	movlw	1
 10194  0794  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10195  0795  3000               	movlw	0
 10196  0796  1803               	skipnc
 10197  0797  3001               	movlw	1
 10198  0798  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10199  0799  3000               	movlw	0
 10200  079A  1803               	skipnc
 10201  079B  3001               	movlw	1
 10202  079C  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10203  079D  2F28               	goto	l4521
 10204  079E                     l4523:	
 10205                           
 10206                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10207  079E  3000               	movlw	0
 10208  079F  00A3               	movwf	I2C_Master_Write@d
 10209  07A0  00A4               	movwf	I2C_Master_Write@d+1
 10210  07A1  160A  158A  2215  120A  118A  	fcall	_I2C_Master_Write
 10211                           
 10212                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10213  07A6  160A  158A  21EE  120A  118A  	fcall	_I2C_Master_Stop
 10214                           
 10215                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10216  07AB  3000               	movlw	0
 10217  07AC  1283               	bcf	3,5	;RP0=0, select bank0
 10218  07AD  00A3               	movwf	my_delay_ms_WDT@time+3
 10219  07AE  3000               	movlw	0
 10220  07AF  00A2               	movwf	my_delay_ms_WDT@time+2
 10221  07B0  3000               	movlw	0
 10222  07B1  00A1               	movwf	my_delay_ms_WDT@time+1
 10223  07B2  3005               	movlw	5
 10224  07B3  00A0               	movwf	my_delay_ms_WDT@time
 10225  07B4  160A  158A  2588   	fcall	_my_delay_ms_WDT
 10226  07B7  0008               	return
 10227  07B8                     __end_of_EEPROM_24C1025_Write_Str:	
 10228                           
 10229                           	psect	text40
 10230  1A75                     __ptext40:	
 10231 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10232 ;; Defined at:
 10233 ;;		line 341 in file "EEPROM_24C1025.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  chip_add        1    wreg     unsigned char 
 10236 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10237 ;;  data            1   27[BANK0 ] unsigned char 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  1    wreg      void 
 10242 ;; Registers used:
 10243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10244 ;; Tracked objects:
 10245 ;;		On entry : 300/300
 10246 ;;		On exit  : 300/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10249 ;;      Params:         0       5       0       0       0
 10250 ;;      Locals:         0       1       0       0       0
 10251 ;;      Temps:          0       0       0       0       0
 10252 ;;      Totals:         0       6       0       0       0
 10253 ;;Total ram usage:        6 bytes
 10254 ;; Hardware stack levels used:    1
 10255 ;; Hardware stack levels required when called:    4
 10256 ;; This function calls:
 10257 ;;		_EEPROM_24C1025_Write_Buffer
 10258 ;; This function is called by:
 10259 ;;		_Decodify_Command
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           
 10264                           ;psect for function _EEPROM_24C1025_Write_Byte
 10265  1A75                     _EEPROM_24C1025_Write_Byte:	
 10266                           
 10267                           ;incstack = 0
 10268                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10269                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10270  1A75  1283               	bcf	3,5	;RP0=0, select bank0
 10271  1A76  1303               	bcf	3,6	;RP1=0, select bank0
 10272  1A77  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10273                           
 10274                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10275  1A78  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10276  1A79  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10277  1A7A  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10278  1A7B  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10279  1A7C  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10280  1A7D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10281  1A7E  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10282  1A7F  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10283  1A80  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10284  1A81  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10285  1A82  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10286  1A83  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10287  1A84  3000               	movlw	0
 10288  1A85  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10289  1A86  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10290  1A87  160A  118A  23BA   	fcall	_EEPROM_24C1025_Write_Buffer
 10291  1A8A  0008               	return
 10292  1A8B                     __end_of_EEPROM_24C1025_Write_Byte:	
 10293                           
 10294                           	psect	text41
 10295  1524                     __ptext41:	
 10296 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10297 ;; Defined at:
 10298 ;;		line 275 in file "EEPROM_24C1025.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  chip_add        1    wreg     unsigned char 
 10301 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10302 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10303 ;;		 -> buffer(33), 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10306 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10307 ;;  range           1   18[BANK0 ] unsigned char 
 10308 ;;  cnt             1   16[BANK0 ] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 300/300
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10318 ;;      Params:         0       5       0       0       0
 10319 ;;      Locals:         0       4       0       0       0
 10320 ;;      Temps:          0       2       0       0       0
 10321 ;;      Totals:         0      11       0       0       0
 10322 ;;Total ram usage:       11 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    3
 10325 ;; This function calls:
 10326 ;;		_I2C_Master_Read
 10327 ;;		_I2C_Master_RepeatedStart
 10328 ;;		_I2C_Master_Start
 10329 ;;		_I2C_Master_Stop
 10330 ;;		_I2C_Master_Write
 10331 ;; This function is called by:
 10332 ;;		_Decodify_Command
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _EEPROM_24C1025_Read_Str
 10338  1524                     _EEPROM_24C1025_Read_Str:	
 10339                           
 10340                           ;incstack = 0
 10341                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10342                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10343  1524  1283               	bcf	3,5	;RP0=0, select bank0
 10344  1525  1303               	bcf	3,6	;RP1=0, select bank0
 10345  1526  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10346                           
 10347                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10348  1527  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10349                           
 10350                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10351  1528  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10352  1529  1D03               	btfss	3,2
 10353  152A  0008               	return
 10354  152B  3002               	movlw	2
 10355  152C  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10356  152D  1D03               	skipz
 10357  152E  2D37               	goto	u4273
 10358  152F  3000               	movlw	0
 10359  1530  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10360  1531  1D03               	skipz
 10361  1532  2D37               	goto	u4273
 10362  1533  3000               	movlw	0
 10363  1534  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10364  1535  1D03               	skipz
 10365  1536  2D37               	goto	u4273
 10366  1537                     u4273:	
 10367  1537  1803               	btfsc	3,0
 10368  1538  0008               	return
 10369                           
 10370                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10371  1539  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10372  153A  1D03               	btfss	3,2
 10373  153B  2D4A               	goto	l4535
 10374  153C  3001               	movlw	1
 10375  153D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10376  153E  1D03               	skipz
 10377  153F  2D48               	goto	u4283
 10378  1540  3000               	movlw	0
 10379  1541  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10380  1542  1D03               	skipz
 10381  1543  2D48               	goto	u4283
 10382  1544  3000               	movlw	0
 10383  1545  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10384  1546  1D03               	skipz
 10385  1547  2D48               	goto	u4283
 10386  1548                     u4283:	
 10387  1548  1C03               	btfss	3,0
 10388  1549  2D4F               	goto	l4537
 10389  154A                     l4535:	
 10390  154A  3008               	movlw	8
 10391  154B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10392  154C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10393  154D  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10394  154E  2D50               	goto	l4539
 10395  154F                     l4537:	
 10396  154F  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10397  1550                     l4539:	
 10398                           
 10399                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10400  1550  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10401  1551  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10402  1552  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10403  1553  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10404                           
 10405                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10406  1554  1003               	clrc
 10407  1555  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10408                           
 10409                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10410  1556  30A0               	movlw	160
 10411  1557  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10412  1558  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10413  1559  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10414                           
 10415                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10416  155A  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10417                           
 10418                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10419  155B  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10420  155C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10421  155D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10422  155E  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10423                           
 10424                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10425  155F  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 10426                           
 10427                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10428  1564  1283               	bcf	3,5	;RP0=0, select bank0
 10429  1565  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10430  1566  39FE               	andlw	254
 10431  1567  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10432  1568  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10433  1569  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10434  156A  00A3               	movwf	I2C_Master_Write@d
 10435  156B  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10436  156C  00A4               	movwf	I2C_Master_Write@d+1
 10437  156D  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10438                           
 10439                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10440  1572  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10441  1573  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10442  1574  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10443  1575  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10444  1576  00A3               	movwf	I2C_Master_Write@d
 10445  1577  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10446  1578  00A4               	movwf	I2C_Master_Write@d+1
 10447  1579  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10448                           
 10449                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10450  157E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10451  157F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10452  1580  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10453  1581  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10454  1582  00A3               	movwf	I2C_Master_Write@d
 10455  1583  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10456  1584  00A4               	movwf	I2C_Master_Write@d+1
 10457  1585  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10458                           
 10459                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10460  158A  160A  158A  2220  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10461                           
 10462                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10463  158F  1283               	bcf	3,5	;RP0=0, select bank0
 10464  1590  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10465  1591  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10466  1592  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10467  1593  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10468  1594  00A3               	movwf	I2C_Master_Write@d
 10469  1595  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10470  1596  00A4               	movwf	I2C_Master_Write@d+1
 10471  1597  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10472                           
 10473                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10474  159C  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10475  159D                     l4561:	
 10476                           
 10477                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10478  159D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10479  159E  1D03               	btfss	3,2
 10480  159F  2E79               	goto	l4617
 10481  15A0  3002               	movlw	2
 10482  15A1  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10483  15A2  1D03               	skipz
 10484  15A3  2DAC               	goto	u4293
 10485  15A4  3000               	movlw	0
 10486  15A5  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10487  15A6  1D03               	skipz
 10488  15A7  2DAC               	goto	u4293
 10489  15A8  3000               	movlw	0
 10490  15A9  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10491  15AA  1D03               	skipz
 10492  15AB  2DAC               	goto	u4293
 10493  15AC                     u4293:	
 10494  15AC  1803               	btfsc	3,0
 10495  15AD  2E79               	goto	l4617
 10496                           
 10497                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10498  15AE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10499  15AF  3E01               	addlw	1
 10500  15B0  397F               	andlw	127
 10501  15B1  1D03               	btfss	3,2
 10502  15B2  2E49               	goto	l4605
 10503                           
 10504                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10505  15B3  3000               	movlw	0
 10506  15B4  00A3               	movwf	I2C_Master_Read@a
 10507  15B5  00A4               	movwf	I2C_Master_Read@a+1
 10508  15B6  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 10509  15BB  0823               	movf	?_I2C_Master_Read,w
 10510  15BC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10511  15BD  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10512  15BE  0084               	movwf	4
 10513  15BF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10514  15C0  1383               	bcf	3,7	;select IRP bank0
 10515  15C1  0080               	movwf	0
 10516                           
 10517                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10518  15C2  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 10519                           
 10520                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10521  15C7  300D               	movlw	13
 10522  15C8  1283               	bcf	3,5	;RP0=0, select bank0
 10523  15C9  1303               	bcf	3,6	;RP1=0, select bank0
 10524  15CA  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10525  15CB  30FB               	movlw	251
 10526  15CC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10527  15CD                     u5567:	
 10528  15CD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10529  15CE  2DCD               	goto	u5567
 10530  15CF  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10531  15D0  2DCD               	goto	u5567
 10532                           
 10533                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10534  15D1  3001               	movlw	1
 10535  15D2  1283               	bcf	3,5	;RP0=0, select bank0
 10536  15D3  1303               	bcf	3,6	;RP1=0, select bank0
 10537  15D4  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10538  15D5  3000               	movlw	0
 10539  15D6  1803               	skipnc
 10540  15D7  3001               	movlw	1
 10541  15D8  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10542  15D9  3000               	movlw	0
 10543  15DA  1803               	skipnc
 10544  15DB  3001               	movlw	1
 10545  15DC  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10546  15DD  3000               	movlw	0
 10547  15DE  1803               	skipnc
 10548  15DF  3001               	movlw	1
 10549  15E0  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10550                           
 10551                           ;EEPROM_24C1025.c: 306:              buffer++;
 10552  15E1  3001               	movlw	1
 10553  15E2  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10554  15E3  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10555  15E4  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10556                           
 10557                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10558  15E5  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10559  15E6  1D03               	btfss	3,2
 10560  15E7  2DF6               	goto	l4579
 10561  15E8  3001               	movlw	1
 10562  15E9  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10563  15EA  1D03               	skipz
 10564  15EB  2DF4               	goto	u4313
 10565  15EC  3000               	movlw	0
 10566  15ED  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10567  15EE  1D03               	skipz
 10568  15EF  2DF4               	goto	u4313
 10569  15F0  3000               	movlw	0
 10570  15F1  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10571  15F2  1D03               	skipz
 10572  15F3  2DF4               	goto	u4313
 10573  15F4                     u4313:	
 10574  15F4  1C03               	btfss	3,0
 10575  15F5  2DFB               	goto	l4581
 10576  15F6                     l4579:	
 10577  15F6  3008               	movlw	8
 10578  15F7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10579  15F8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10580  15F9  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10581  15FA  2DFC               	goto	l4583
 10582  15FB                     l4581:	
 10583  15FB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10584  15FC                     l4583:	
 10585                           
 10586                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10587  15FC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10588  15FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10589  15FE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10590  15FF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10591                           
 10592                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10593  1600  1003               	clrc
 10594  1601  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10595                           
 10596                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10597  1602  30A0               	movlw	160
 10598  1603  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10599  1604  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10600  1605  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10601                           
 10602                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10603  1606  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10604                           
 10605                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10606  1607  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10607  1608  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10608  1609  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10609  160A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10610                           
 10611                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10612  160B  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 10613                           
 10614                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10615  1610  1283               	bcf	3,5	;RP0=0, select bank0
 10616  1611  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10617  1612  39FE               	andlw	254
 10618  1613  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10619  1614  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10620  1615  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10621  1616  00A3               	movwf	I2C_Master_Write@d
 10622  1617  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10623  1618  00A4               	movwf	I2C_Master_Write@d+1
 10624  1619  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10625                           
 10626                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10627  161E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10628  161F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10629  1620  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10630  1621  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10631  1622  00A3               	movwf	I2C_Master_Write@d
 10632  1623  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10633  1624  00A4               	movwf	I2C_Master_Write@d+1
 10634  1625  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10635                           
 10636                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10637  162A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10638  162B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10639  162C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10640  162D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10641  162E  00A3               	movwf	I2C_Master_Write@d
 10642  162F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10643  1630  00A4               	movwf	I2C_Master_Write@d+1
 10644  1631  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10645                           
 10646                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10647  1636  160A  158A  2220  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10648                           
 10649                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10650  163B  1283               	bcf	3,5	;RP0=0, select bank0
 10651  163C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10652  163D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10653  163E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10654  163F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10655  1640  00A3               	movwf	I2C_Master_Write@d
 10656  1641  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10657  1642  00A4               	movwf	I2C_Master_Write@d+1
 10658  1643  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 10659                           
 10660                           ;EEPROM_24C1025.c: 320:              }
 10661  1648  2E70               	goto	l4615
 10662  1649                     l4605:	
 10663                           
 10664                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10665  1649  3001               	movlw	1
 10666  164A  00A3               	movwf	I2C_Master_Read@a
 10667  164B  3000               	movlw	0
 10668  164C  00A4               	movwf	I2C_Master_Read@a+1
 10669  164D  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 10670  1652  0823               	movf	?_I2C_Master_Read,w
 10671  1653  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10672  1654  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10673  1655  0084               	movwf	4
 10674  1656  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10675  1657  1383               	bcf	3,7	;select IRP bank0
 10676  1658  0080               	movwf	0
 10677                           
 10678                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10679  1659  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10680  165A  0084               	movwf	4
 10681  165B  0800               	movf	0,w
 10682  165C  1903               	btfsc	3,2
 10683  165D  2E79               	goto	l4617
 10684                           
 10685                           ;EEPROM_24C1025.c: 325:              buffer++;
 10686  165E  3001               	movlw	1
 10687  165F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10688  1660  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10689  1661  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10690                           
 10691                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10692  1662  3001               	movlw	1
 10693  1663  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10694  1664  3000               	movlw	0
 10695  1665  1803               	skipnc
 10696  1666  3001               	movlw	1
 10697  1667  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10698  1668  3000               	movlw	0
 10699  1669  1803               	skipnc
 10700  166A  3001               	movlw	1
 10701  166B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10702  166C  3000               	movlw	0
 10703  166D  1803               	skipnc
 10704  166E  3001               	movlw	1
 10705  166F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10706  1670                     l4615:	
 10707                           
 10708                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10709  1670  3001               	movlw	1
 10710  1671  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10711  1672  30FF               	movlw	-1
 10712  1673  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10713  1674  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10714  1675  3040               	movlw	64
 10715  1676  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10716  1677  1C03               	skipc
 10717  1678  2D9D               	goto	l4561
 10718  1679                     l4617:	
 10719                           
 10720                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10721  1679  3000               	movlw	0
 10722  167A  00A3               	movwf	I2C_Master_Read@a
 10723  167B  00A4               	movwf	I2C_Master_Read@a+1
 10724  167C  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 10725                           
 10726                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10727  1681  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 10728                           
 10729                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10730  1686  30B9               	movlw	185
 10731  1687  1283               	bcf	3,5	;RP0=0, select bank0
 10732  1688  1303               	bcf	3,6	;RP1=0, select bank0
 10733  1689  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10734  168A                     u5577:	
 10735  168A  2E8B               	nop2
 10736  168B  2E8C               	nop2
 10737  168C  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10738  168D  2E8A               	goto	u5577
 10739  168E  2E8F               	nop2
 10740  168F  0008               	return
 10741  1690                     __end_of_EEPROM_24C1025_Read_Str:	
 10742                           
 10743                           	psect	text42
 10744  1C11                     __ptext42:	
 10745 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10746 ;; Defined at:
 10747 ;;		line 360 in file "EEPROM_24C1025.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;  chip_add        1    wreg     unsigned char 
 10750 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  chip_add        1   29[BANK0 ] unsigned char 
 10753 ;;  data            2   30[BANK0 ] unsigned char [2]
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  2   23[BANK0 ] unsigned int 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 300/300
 10760 ;;		On exit  : 300/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10763 ;;      Params:         0       4       0       0       0
 10764 ;;      Locals:         0       3       0       0       0
 10765 ;;      Temps:          0       2       0       0       0
 10766 ;;      Totals:         0       9       0       0       0
 10767 ;;Total ram usage:        9 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    4
 10770 ;; This function calls:
 10771 ;;		_EEPROM_24C1025_Read_Buffer
 10772 ;; This function is called by:
 10773 ;;		_Decodify_Command
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _EEPROM_24C1025_Read_Int
 10779  1C11                     _EEPROM_24C1025_Read_Int:	
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10783                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10784  1C11  1283               	bcf	3,5	;RP0=0, select bank0
 10785  1C12  1303               	bcf	3,6	;RP1=0, select bank0
 10786  1C13  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10787                           
 10788                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10789  1C14  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10790  1C15  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10791  1C16  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10792  1C17  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10793  1C18  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10794  1C19  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10795  1C1A  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10796  1C1B  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10797  1C1C  3002               	movlw	2
 10798  1C1D  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 10799  1C1E  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 10800  1C1F  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10801  1C20  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10802  1C21  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 10803  1C22  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10804  1C23  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10805  1C24  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10806  1C25  120A  158A  2061   	fcall	_EEPROM_24C1025_Read_Buffer
 10807                           
 10808                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10809  1C28  1283               	bcf	3,5	;RP0=0, select bank0
 10810  1C29  1303               	bcf	3,6	;RP1=0, select bank0
 10811  1C2A  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 10812  1C2B  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 10813  1C2C  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 10814  1C2D  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 10815  1C2E  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 10816  1C2F  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 10817  1C30  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10818  1C31  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 10819  1C32  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 10820  1C33  3000               	movlw	0
 10821  1C34  1803               	skipnc
 10822  1C35  3001               	movlw	1
 10823  1C36  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10824  1C37  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 10825  1C38  0008               	return
 10826  1C39                     __end_of_EEPROM_24C1025_Read_Int:	
 10827                           
 10828                           	psect	text43
 10829  1AA1                     __ptext43:	
 10830 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10831 ;; Defined at:
 10832 ;;		line 346 in file "EEPROM_24C1025.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  chip_add        1    wreg     unsigned char 
 10835 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10838 ;;  data            1   29[BANK0 ] unsigned char 
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      unsigned char 
 10841 ;; Registers used:
 10842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10843 ;; Tracked objects:
 10844 ;;		On entry : 300/300
 10845 ;;		On exit  : 300/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10848 ;;      Params:         0       4       0       0       0
 10849 ;;      Locals:         0       2       0       0       0
 10850 ;;      Temps:          0       1       0       0       0
 10851 ;;      Totals:         0       7       0       0       0
 10852 ;;Total ram usage:        7 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; Hardware stack levels required when called:    4
 10855 ;; This function calls:
 10856 ;;		_EEPROM_24C1025_Read_Buffer
 10857 ;; This function is called by:
 10858 ;;		_Decodify_Command
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           
 10863                           ;psect for function _EEPROM_24C1025_Read_Byte
 10864  1AA1                     _EEPROM_24C1025_Read_Byte:	
 10865                           
 10866                           ;incstack = 0
 10867                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10868                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10869  1AA1  1283               	bcf	3,5	;RP0=0, select bank0
 10870  1AA2  1303               	bcf	3,6	;RP1=0, select bank0
 10871  1AA3  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10872                           
 10873                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10874  1AA4  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10875  1AA5  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10876  1AA6  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10877  1AA7  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10878  1AA8  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10879  1AA9  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10880  1AAA  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10881  1AAB  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10882  1AAC  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10883  1AAD  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10884  1AAE  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10885  1AAF  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 10886  1AB0  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 10887  1AB1  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10888  1AB2  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10889  1AB3  120A  158A  2061   	fcall	_EEPROM_24C1025_Read_Buffer
 10890                           
 10891                           ;EEPROM_24C1025.c: 349:     return data;
 10892  1AB6  1283               	bcf	3,5	;RP0=0, select bank0
 10893  1AB7  1303               	bcf	3,6	;RP1=0, select bank0
 10894  1AB8  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 10895  1AB9  0008               	return
 10896  1ABA                     __end_of_EEPROM_24C1025_Read_Byte:	
 10897                           
 10898                           	psect	text44
 10899  0861                     __ptext44:	
 10900 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10901 ;; Defined at:
 10902 ;;		line 77 in file "EEPROM_24C1025.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  chip_add        1    wreg     unsigned char 
 10905 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10906 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10907 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10908 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  chip_add        1   20[BANK0 ] unsigned char 
 10911 ;;  cnt             1   19[BANK0 ] unsigned char 
 10912 ;;  ctrl            1   22[BANK0 ] unsigned char 
 10913 ;;  range           1   21[BANK0 ] unsigned char 
 10914 ;;  cnt             1    0        unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10919 ;; Tracked objects:
 10920 ;;		On entry : 300/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10924 ;;      Params:         0       6       0       0       0
 10925 ;;      Locals:         0       5       0       0       0
 10926 ;;      Temps:          0       2       0       0       0
 10927 ;;      Totals:         0      13       0       0       0
 10928 ;;Total ram usage:       13 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    3
 10931 ;; This function calls:
 10932 ;;		_I2C_Master_Read
 10933 ;;		_I2C_Master_RepeatedStart
 10934 ;;		_I2C_Master_Start
 10935 ;;		_I2C_Master_Stop
 10936 ;;		_I2C_Master_Write
 10937 ;;		_my_delay_ms_WDT
 10938 ;; This function is called by:
 10939 ;;		_EEPROM_24C1025_Read_Byte
 10940 ;;		_EEPROM_24C1025_Read_Int
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           
 10945                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10946  0861                     _EEPROM_24C1025_Read_Buffer:	
 10947                           
 10948                           ;incstack = 0
 10949                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10950                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10951  0861  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10952                           
 10953                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 10954  0862  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 10955                           
 10956                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10957  0863  3014               	movlw	20
 10958  0864  1683               	bsf	3,5	;RP0=1, select bank1
 10959  0865  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10960  0866  3000               	movlw	0
 10961  0867  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10962                           
 10963                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10964  0868  1283               	bcf	3,5	;RP0=0, select bank0
 10965  0869  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10966  086A  1D03               	btfss	3,2
 10967  086B  0008               	return
 10968  086C  3002               	movlw	2
 10969  086D  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10970  086E  1D03               	skipz
 10971  086F  2878               	goto	u2863
 10972  0870  3000               	movlw	0
 10973  0871  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10974  0872  1D03               	skipz
 10975  0873  2878               	goto	u2863
 10976  0874  3000               	movlw	0
 10977  0875  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10978  0876  1D03               	skipz
 10979  0877  2878               	goto	u2863
 10980  0878                     u2863:	
 10981  0878  1803               	btfsc	3,0
 10982  0879  0008               	return
 10983                           
 10984                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10985  087A  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10986  087B  1D03               	btfss	3,2
 10987  087C  288B               	goto	l3729
 10988  087D  3001               	movlw	1
 10989  087E  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10990  087F  1D03               	skipz
 10991  0880  2889               	goto	u2873
 10992  0881  3000               	movlw	0
 10993  0882  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10994  0883  1D03               	skipz
 10995  0884  2889               	goto	u2873
 10996  0885  3000               	movlw	0
 10997  0886  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10998  0887  1D03               	skipz
 10999  0888  2889               	goto	u2873
 11000  0889                     u2873:	
 11001  0889  1C03               	btfss	3,0
 11002  088A  2890               	goto	l3731
 11003  088B                     l3729:	
 11004  088B  3008               	movlw	8
 11005  088C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11006  088D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11007  088E  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11008  088F  2891               	goto	l3733
 11009  0890                     l3731:	
 11010  0890  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11011  0891                     l3733:	
 11012                           
 11013                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11014  0891  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11015  0892  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11016  0893  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11017  0894  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11018                           
 11019                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11020  0895  1003               	clrc
 11021  0896  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11022                           
 11023                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11024  0897  30A0               	movlw	160
 11025  0898  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11026  0899  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11027  089A  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11028                           
 11029                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11030  089B  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11031                           
 11032                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11033  089C  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11034  089D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11035  089E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11036  089F  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11037                           
 11038                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11039  08A0  160A  158A  223B  120A  158A  	fcall	_I2C_Master_Start
 11040                           
 11041                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11042  08A5  1283               	bcf	3,5	;RP0=0, select bank0
 11043  08A6  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11044  08A7  39FE               	andlw	254
 11045  08A8  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11046  08A9  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11047  08AA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11048  08AB  00A3               	movwf	I2C_Master_Write@d
 11049  08AC  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11050  08AD  00A4               	movwf	I2C_Master_Write@d+1
 11051  08AE  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11052                           
 11053                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11054  08B3  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11055  08B4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11056  08B5  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11057  08B6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11058  08B7  00A3               	movwf	I2C_Master_Write@d
 11059  08B8  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11060  08B9  00A4               	movwf	I2C_Master_Write@d+1
 11061  08BA  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11062                           
 11063                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11064  08BF  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11065  08C0  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11066  08C1  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11067  08C2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11068  08C3  00A3               	movwf	I2C_Master_Write@d
 11069  08C4  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11070  08C5  00A4               	movwf	I2C_Master_Write@d+1
 11071  08C6  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11072                           
 11073                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11074  08CB  160A  158A  2220  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11075                           
 11076                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11077  08D0  1283               	bcf	3,5	;RP0=0, select bank0
 11078  08D1  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11079  08D2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11080  08D3  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11081  08D4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11082  08D5  00A3               	movwf	I2C_Master_Write@d
 11083  08D6  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11084  08D7  00A4               	movwf	I2C_Master_Write@d+1
 11085  08D8  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11086                           
 11087                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11088  08DD  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11089  08DE                     l3807:	
 11090  08DE  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11091  08DF  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11092  08E0  1803               	btfsc	3,0
 11093  08E1  29BA               	goto	l3809
 11094  08E2  0064               	clrwdt	;# 
 11095                           
 11096                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11097  08E3  1283               	bcf	3,5	;RP0=0, select bank0
 11098  08E4  1303               	bcf	3,6	;RP1=0, select bank0
 11099  08E5  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11100  08E6  1D03               	btfss	3,2
 11101  08E7  29BA               	goto	l3809
 11102  08E8  3002               	movlw	2
 11103  08E9  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11104  08EA  1D03               	skipz
 11105  08EB  28F4               	goto	u2883
 11106  08EC  3000               	movlw	0
 11107  08ED  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11108  08EE  1D03               	skipz
 11109  08EF  28F4               	goto	u2883
 11110  08F0  3000               	movlw	0
 11111  08F1  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11112  08F2  1D03               	skipz
 11113  08F3  28F4               	goto	u2883
 11114  08F4                     u2883:	
 11115  08F4  1803               	btfsc	3,0
 11116  08F5  29BA               	goto	l3809
 11117                           
 11118                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11119  08F6  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11120  08F7  3E01               	addlw	1
 11121  08F8  397F               	andlw	127
 11122  08F9  1D03               	btfss	3,2
 11123  08FA  2993               	goto	l3799
 11124                           
 11125                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11126  08FB  3000               	movlw	0
 11127  08FC  00A3               	movwf	I2C_Master_Read@a
 11128  08FD  00A4               	movwf	I2C_Master_Read@a+1
 11129  08FE  160A  158A  251C  120A  158A  	fcall	_I2C_Master_Read
 11130  0903  0823               	movf	?_I2C_Master_Read,w
 11131  0904  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11132  0905  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11133  0906  0084               	movwf	4
 11134  0907  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11135  0908  1383               	bcf	3,7	;select IRP bank0
 11136  0909  0080               	movwf	0
 11137                           
 11138                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11139  090A  160A  158A  21EE  120A  158A  	fcall	_I2C_Master_Stop
 11140                           
 11141                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11142  090F  3000               	movlw	0
 11143  0910  1283               	bcf	3,5	;RP0=0, select bank0
 11144  0911  00A3               	movwf	my_delay_ms_WDT@time+3
 11145  0912  3000               	movlw	0
 11146  0913  00A2               	movwf	my_delay_ms_WDT@time+2
 11147  0914  3000               	movlw	0
 11148  0915  00A1               	movwf	my_delay_ms_WDT@time+1
 11149  0916  3005               	movlw	5
 11150  0917  00A0               	movwf	my_delay_ms_WDT@time
 11151  0918  160A  158A  2588  120A  158A  	fcall	_my_delay_ms_WDT
 11152                           
 11153                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11154  091D  3001               	movlw	1
 11155  091E  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11156  091F  3000               	movlw	0
 11157  0920  1803               	skipnc
 11158  0921  3001               	movlw	1
 11159  0922  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11160  0923  3000               	movlw	0
 11161  0924  1803               	skipnc
 11162  0925  3001               	movlw	1
 11163  0926  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11164  0927  3000               	movlw	0
 11165  0928  1803               	skipnc
 11166  0929  3001               	movlw	1
 11167  092A  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11168                           
 11169                           ;EEPROM_24C1025.c: 115:              data++;
 11170  092B  3001               	movlw	1
 11171  092C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11172  092D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11173  092E  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11174                           
 11175                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11176  092F  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11177  0930  1D03               	btfss	3,2
 11178  0931  2940               	goto	l3773
 11179  0932  3001               	movlw	1
 11180  0933  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11181  0934  1D03               	skipz
 11182  0935  293E               	goto	u2903
 11183  0936  3000               	movlw	0
 11184  0937  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11185  0938  1D03               	skipz
 11186  0939  293E               	goto	u2903
 11187  093A  3000               	movlw	0
 11188  093B  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11189  093C  1D03               	skipz
 11190  093D  293E               	goto	u2903
 11191  093E                     u2903:	
 11192  093E  1C03               	btfss	3,0
 11193  093F  2945               	goto	l3775
 11194  0940                     l3773:	
 11195  0940  3008               	movlw	8
 11196  0941  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11197  0942  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11198  0943  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11199  0944  2946               	goto	l3777
 11200  0945                     l3775:	
 11201  0945  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11202  0946                     l3777:	
 11203                           
 11204                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11205  0946  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11206  0947  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11207  0948  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11208  0949  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11209                           
 11210                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11211  094A  1003               	clrc
 11212  094B  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11213                           
 11214                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11215  094C  30A0               	movlw	160
 11216  094D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11217  094E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11218  094F  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11219                           
 11220                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11221  0950  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11222                           
 11223                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11224  0951  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11225  0952  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11226  0953  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11227  0954  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11228                           
 11229                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11230  0955  160A  158A  223B  120A  158A  	fcall	_I2C_Master_Start
 11231                           
 11232                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11233  095A  1283               	bcf	3,5	;RP0=0, select bank0
 11234  095B  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11235  095C  39FE               	andlw	254
 11236  095D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11237  095E  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11238  095F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11239  0960  00A3               	movwf	I2C_Master_Write@d
 11240  0961  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11241  0962  00A4               	movwf	I2C_Master_Write@d+1
 11242  0963  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11243                           
 11244                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11245  0968  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11246  0969  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11247  096A  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11248  096B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11249  096C  00A3               	movwf	I2C_Master_Write@d
 11250  096D  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11251  096E  00A4               	movwf	I2C_Master_Write@d+1
 11252  096F  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11253                           
 11254                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11255  0974  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11256  0975  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11257  0976  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11258  0977  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11259  0978  00A3               	movwf	I2C_Master_Write@d
 11260  0979  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11261  097A  00A4               	movwf	I2C_Master_Write@d+1
 11262  097B  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11263                           
 11264                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11265  0980  160A  158A  2220  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11266                           
 11267                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11268  0985  1283               	bcf	3,5	;RP0=0, select bank0
 11269  0986  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11270  0987  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11271  0988  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11272  0989  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11273  098A  00A3               	movwf	I2C_Master_Write@d
 11274  098B  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11275  098C  00A4               	movwf	I2C_Master_Write@d+1
 11276  098D  160A  158A  2215  120A  158A  	fcall	_I2C_Master_Write
 11277                           
 11278                           ;EEPROM_24C1025.c: 129:              }
 11279  0992  29B5               	goto	l3805
 11280  0993                     l3799:	
 11281                           
 11282                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11283  0993  3001               	movlw	1
 11284  0994  00A3               	movwf	I2C_Master_Read@a
 11285  0995  3000               	movlw	0
 11286  0996  00A4               	movwf	I2C_Master_Read@a+1
 11287  0997  160A  158A  251C  120A  158A  	fcall	_I2C_Master_Read
 11288  099C  0823               	movf	?_I2C_Master_Read,w
 11289  099D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11290  099E  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11291  099F  0084               	movwf	4
 11292  09A0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11293  09A1  1383               	bcf	3,7	;select IRP bank0
 11294  09A2  0080               	movwf	0
 11295                           
 11296                           ;EEPROM_24C1025.c: 133:              data++;
 11297  09A3  3001               	movlw	1
 11298  09A4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11299  09A5  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11300  09A6  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11301                           
 11302                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11303  09A7  3001               	movlw	1
 11304  09A8  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11305  09A9  3000               	movlw	0
 11306  09AA  1803               	skipnc
 11307  09AB  3001               	movlw	1
 11308  09AC  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11309  09AD  3000               	movlw	0
 11310  09AE  1803               	skipnc
 11311  09AF  3001               	movlw	1
 11312  09B0  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11313  09B1  3000               	movlw	0
 11314  09B2  1803               	skipnc
 11315  09B3  3001               	movlw	1
 11316  09B4  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11317  09B5                     l3805:	
 11318                           
 11319                           ;EEPROM_24C1025.c: 136:         }
 11320  09B5  3001               	movlw	1
 11321  09B6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11322  09B7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11323  09B8  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11324  09B9  28DE               	goto	l3807
 11325  09BA                     l3809:	
 11326                           
 11327                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11328  09BA  3000               	movlw	0
 11329  09BB  00A3               	movwf	I2C_Master_Read@a
 11330  09BC  00A4               	movwf	I2C_Master_Read@a+1
 11331  09BD  160A  158A  251C  120A  158A  	fcall	_I2C_Master_Read
 11332                           
 11333                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11334  09C2  160A  158A  21EE  120A  158A  	fcall	_I2C_Master_Stop
 11335                           
 11336                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11337  09C7  30B9               	movlw	185
 11338  09C8  1283               	bcf	3,5	;RP0=0, select bank0
 11339  09C9  1303               	bcf	3,6	;RP1=0, select bank0
 11340  09CA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11341  09CB                     u5587:	
 11342  09CB  29CC               	nop2
 11343  09CC  29CD               	nop2
 11344  09CD  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11345  09CE  29CB               	goto	u5587
 11346  09CF  29D0               	nop2
 11347  09D0  0008               	return
 11348  09D1                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11349                           
 11350                           	psect	text45
 11351  1690                     __ptext45:	
 11352 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11353 ;; Defined at:
 11354 ;;		line 148 in file "EEPROM_24C1025.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  chip_add        1    wreg     unsigned char 
 11357 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11358 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11359 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11360 ;;		 -> buffer(33), 
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11363 ;;  cnt             1   18[BANK0 ] unsigned char 
 11364 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11365 ;;  range           1   20[BANK0 ] unsigned char 
 11366 ;;  cnt             1    0        unsigned char 
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11371 ;; Tracked objects:
 11372 ;;		On entry : 300/300
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11376 ;;      Params:         0       6       0       0       0
 11377 ;;      Locals:         0       5       0       0       0
 11378 ;;      Temps:          0       2       0       0       0
 11379 ;;      Totals:         0      13       0       0       0
 11380 ;;Total ram usage:       13 bytes
 11381 ;; Hardware stack levels used:    1
 11382 ;; Hardware stack levels required when called:    3
 11383 ;; This function calls:
 11384 ;;		_I2C_Master_Read
 11385 ;;		_I2C_Master_RepeatedStart
 11386 ;;		_I2C_Master_Start
 11387 ;;		_I2C_Master_Stop
 11388 ;;		_I2C_Master_Write
 11389 ;;		_USART_putc
 11390 ;; This function is called by:
 11391 ;;		_Decodify_Command
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           
 11396                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11397  1690                     _EEPROM_24C1025_Read_Buffer_USART:	
 11398                           
 11399                           ;incstack = 0
 11400                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11401                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11402  1690  1283               	bcf	3,5	;RP0=0, select bank0
 11403  1691  1303               	bcf	3,6	;RP1=0, select bank0
 11404  1692  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11405                           
 11406                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11407  1693  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11408                           
 11409                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11410  1694  3014               	movlw	20
 11411  1695  1683               	bsf	3,5	;RP0=1, select bank1
 11412  1696  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11413  1697  3000               	movlw	0
 11414  1698  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11415                           
 11416                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11417  1699  1283               	bcf	3,5	;RP0=0, select bank0
 11418  169A  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11419  169B  1D03               	btfss	3,2
 11420  169C  0008               	return
 11421  169D  3002               	movlw	2
 11422  169E  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11423  169F  1D03               	skipz
 11424  16A0  2EA9               	goto	u4153
 11425  16A1  3000               	movlw	0
 11426  16A2  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11427  16A3  1D03               	skipz
 11428  16A4  2EA9               	goto	u4153
 11429  16A5  3000               	movlw	0
 11430  16A6  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11431  16A7  1D03               	skipz
 11432  16A8  2EA9               	goto	u4153
 11433  16A9                     u4153:	
 11434  16A9  1803               	btfsc	3,0
 11435  16AA  0008               	return
 11436                           
 11437                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11438  16AB  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11439  16AC  1D03               	btfss	3,2
 11440  16AD  2EBC               	goto	l4369
 11441  16AE  3001               	movlw	1
 11442  16AF  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11443  16B0  1D03               	skipz
 11444  16B1  2EBA               	goto	u4163
 11445  16B2  3000               	movlw	0
 11446  16B3  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11447  16B4  1D03               	skipz
 11448  16B5  2EBA               	goto	u4163
 11449  16B6  3000               	movlw	0
 11450  16B7  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11451  16B8  1D03               	skipz
 11452  16B9  2EBA               	goto	u4163
 11453  16BA                     u4163:	
 11454  16BA  1C03               	btfss	3,0
 11455  16BB  2EC1               	goto	l4371
 11456  16BC                     l4369:	
 11457  16BC  3008               	movlw	8
 11458  16BD  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11459  16BE  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11460  16BF  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11461  16C0  2EC2               	goto	l4373
 11462  16C1                     l4371:	
 11463  16C1  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11464  16C2                     l4373:	
 11465                           
 11466                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11467  16C2  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11468  16C3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11469  16C4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11470  16C5  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11471                           
 11472                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11473  16C6  1003               	clrc
 11474  16C7  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11475                           
 11476                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11477  16C8  30A0               	movlw	160
 11478  16C9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11479  16CA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11480  16CB  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11481                           
 11482                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11483  16CC  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11484                           
 11485                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11486  16CD  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11487  16CE  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11488  16CF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11489  16D0  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11490                           
 11491                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11492  16D1  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 11493                           
 11494                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11495  16D6  1283               	bcf	3,5	;RP0=0, select bank0
 11496  16D7  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11497  16D8  39FE               	andlw	254
 11498  16D9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11499  16DA  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11500  16DB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11501  16DC  00A3               	movwf	I2C_Master_Write@d
 11502  16DD  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11503  16DE  00A4               	movwf	I2C_Master_Write@d+1
 11504  16DF  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11505                           
 11506                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11507  16E4  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11508  16E5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11509  16E6  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11510  16E7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11511  16E8  00A3               	movwf	I2C_Master_Write@d
 11512  16E9  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11513  16EA  00A4               	movwf	I2C_Master_Write@d+1
 11514  16EB  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11515                           
 11516                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11517  16F0  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11518  16F1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11519  16F2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11520  16F3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11521  16F4  00A3               	movwf	I2C_Master_Write@d
 11522  16F5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11523  16F6  00A4               	movwf	I2C_Master_Write@d+1
 11524  16F7  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11525                           
 11526                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11527  16FC  160A  158A  2220  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11528                           
 11529                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11530  1701  1283               	bcf	3,5	;RP0=0, select bank0
 11531  1702  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11532  1703  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11533  1704  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11534  1705  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11535  1706  00A3               	movwf	I2C_Master_Write@d
 11536  1707  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11537  1708  00A4               	movwf	I2C_Master_Write@d+1
 11538  1709  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11539                           
 11540                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11541  170E  01B2               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11542  170F                     l4443:	
 11543  170F  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11544  1710  0232               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11545  1711  1803               	btfsc	3,0
 11546  1712  2FE9               	goto	l4445
 11547  1713  0064               	clrwdt	;# 
 11548                           
 11549                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11550  1714  1283               	bcf	3,5	;RP0=0, select bank0
 11551  1715  1303               	bcf	3,6	;RP1=0, select bank0
 11552  1716  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11553  1717  1D03               	btfss	3,2
 11554  1718  2FE9               	goto	l4445
 11555  1719  3002               	movlw	2
 11556  171A  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11557  171B  1D03               	skipz
 11558  171C  2F25               	goto	u4173
 11559  171D  3000               	movlw	0
 11560  171E  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11561  171F  1D03               	skipz
 11562  1720  2F25               	goto	u4173
 11563  1721  3000               	movlw	0
 11564  1722  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11565  1723  1D03               	skipz
 11566  1724  2F25               	goto	u4173
 11567  1725                     u4173:	
 11568  1725  1803               	btfsc	3,0
 11569  1726  2FE9               	goto	l4445
 11570                           
 11571                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11572  1727  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11573  1728  3E01               	addlw	1
 11574  1729  397F               	andlw	127
 11575  172A  1D03               	btfss	3,2
 11576  172B  2FBD               	goto	l4437
 11577                           
 11578                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11579  172C  3000               	movlw	0
 11580  172D  00A3               	movwf	I2C_Master_Read@a
 11581  172E  00A4               	movwf	I2C_Master_Read@a+1
 11582  172F  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 11583  1734  0823               	movf	?_I2C_Master_Read,w
 11584  1735  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11585  1736  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11586  1737  0084               	movwf	4
 11587  1738  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11588  1739  1383               	bcf	3,7	;select IRP bank0
 11589  173A  0080               	movwf	0
 11590                           
 11591                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11592  173B  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 11593                           
 11594                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11595  1740  1283               	bcf	3,5	;RP0=0, select bank0
 11596  1741  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11597  1742  0084               	movwf	4
 11598  1743  1383               	bcf	3,7	;select IRP bank0
 11599  1744  0800               	movf	0,w
 11600  1745  160A  158A  222B  160A  118A  	fcall	_USART_putc
 11601                           
 11602                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11603  174A  3001               	movlw	1
 11604  174B  1283               	bcf	3,5	;RP0=0, select bank0
 11605  174C  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11606  174D  3000               	movlw	0
 11607  174E  1803               	skipnc
 11608  174F  3001               	movlw	1
 11609  1750  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11610  1751  3000               	movlw	0
 11611  1752  1803               	skipnc
 11612  1753  3001               	movlw	1
 11613  1754  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11614  1755  3000               	movlw	0
 11615  1756  1803               	skipnc
 11616  1757  3001               	movlw	1
 11617  1758  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11618                           
 11619                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11620  1759  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11621  175A  1D03               	btfss	3,2
 11622  175B  2F6A               	goto	l4411
 11623  175C  3001               	movlw	1
 11624  175D  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11625  175E  1D03               	skipz
 11626  175F  2F68               	goto	u4193
 11627  1760  3000               	movlw	0
 11628  1761  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11629  1762  1D03               	skipz
 11630  1763  2F68               	goto	u4193
 11631  1764  3000               	movlw	0
 11632  1765  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11633  1766  1D03               	skipz
 11634  1767  2F68               	goto	u4193
 11635  1768                     u4193:	
 11636  1768  1C03               	btfss	3,0
 11637  1769  2F6F               	goto	l4413
 11638  176A                     l4411:	
 11639  176A  3008               	movlw	8
 11640  176B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11641  176C  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11642  176D  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11643  176E  2F70               	goto	l4415
 11644  176F                     l4413:	
 11645  176F  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11646  1770                     l4415:	
 11647                           
 11648                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11649  1770  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11650  1771  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11651  1772  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11652  1773  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11653                           
 11654                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11655  1774  1003               	clrc
 11656  1775  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11657                           
 11658                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11659  1776  30A0               	movlw	160
 11660  1777  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11661  1778  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11662  1779  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11663                           
 11664                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11665  177A  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11666                           
 11667                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11668  177B  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11669  177C  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11670  177D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11671  177E  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11672                           
 11673                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11674  177F  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 11675                           
 11676                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11677  1784  1283               	bcf	3,5	;RP0=0, select bank0
 11678  1785  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11679  1786  39FE               	andlw	254
 11680  1787  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11681  1788  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11682  1789  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11683  178A  00A3               	movwf	I2C_Master_Write@d
 11684  178B  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11685  178C  00A4               	movwf	I2C_Master_Write@d+1
 11686  178D  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11687                           
 11688                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11689  1792  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11690  1793  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11691  1794  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11692  1795  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11693  1796  00A3               	movwf	I2C_Master_Write@d
 11694  1797  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11695  1798  00A4               	movwf	I2C_Master_Write@d+1
 11696  1799  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11697                           
 11698                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11699  179E  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11700  179F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11701  17A0  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11702  17A1  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11703  17A2  00A3               	movwf	I2C_Master_Write@d
 11704  17A3  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11705  17A4  00A4               	movwf	I2C_Master_Write@d+1
 11706  17A5  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11707                           
 11708                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11709  17AA  160A  158A  2220  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11710                           
 11711                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11712  17AF  1283               	bcf	3,5	;RP0=0, select bank0
 11713  17B0  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11714  17B1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11715  17B2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11716  17B3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11717  17B4  00A3               	movwf	I2C_Master_Write@d
 11718  17B5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11719  17B6  00A4               	movwf	I2C_Master_Write@d+1
 11720  17B7  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 11721                           
 11722                           ;EEPROM_24C1025.c: 201:              }
 11723  17BC  2FE4               	goto	l4441
 11724  17BD                     l4437:	
 11725                           
 11726                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11727  17BD  3001               	movlw	1
 11728  17BE  00A3               	movwf	I2C_Master_Read@a
 11729  17BF  3000               	movlw	0
 11730  17C0  00A4               	movwf	I2C_Master_Read@a+1
 11731  17C1  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 11732  17C6  0823               	movf	?_I2C_Master_Read,w
 11733  17C7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11734  17C8  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11735  17C9  0084               	movwf	4
 11736  17CA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11737  17CB  1383               	bcf	3,7	;select IRP bank0
 11738  17CC  0080               	movwf	0
 11739                           
 11740                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11741  17CD  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11742  17CE  0084               	movwf	4
 11743  17CF  0800               	movf	0,w
 11744  17D0  160A  158A  222B  160A  118A  	fcall	_USART_putc
 11745                           
 11746                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11747  17D5  3001               	movlw	1
 11748  17D6  1283               	bcf	3,5	;RP0=0, select bank0
 11749  17D7  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11750  17D8  3000               	movlw	0
 11751  17D9  1803               	skipnc
 11752  17DA  3001               	movlw	1
 11753  17DB  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11754  17DC  3000               	movlw	0
 11755  17DD  1803               	skipnc
 11756  17DE  3001               	movlw	1
 11757  17DF  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11758  17E0  3000               	movlw	0
 11759  17E1  1803               	skipnc
 11760  17E2  3001               	movlw	1
 11761  17E3  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11762  17E4                     l4441:	
 11763                           
 11764                           ;EEPROM_24C1025.c: 209:         }
 11765  17E4  3001               	movlw	1
 11766  17E5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11767  17E6  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11768  17E7  07B2               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11769  17E8  2F0F               	goto	l4443
 11770  17E9                     l4445:	
 11771                           
 11772                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11773  17E9  3000               	movlw	0
 11774  17EA  00A3               	movwf	I2C_Master_Read@a
 11775  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11776  17EC  160A  158A  251C  160A  118A  	fcall	_I2C_Master_Read
 11777                           
 11778                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11779  17F1  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 11780                           
 11781                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11782  17F6  30B9               	movlw	185
 11783  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11784  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11785  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11786  17FA                     u5597:	
 11787  17FA  2FFB               	nop2
 11788  17FB  2FFC               	nop2
 11789  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11790  17FD  2FFA               	goto	u5597
 11791  17FE  2FFF               	nop2
 11792  17FF  0008               	return
 11793  1800                     __end_of_EEPROM_24C1025_Read_Buffer_USART:	
 11794                           
 11795                           	psect	text46
 11796  1A2B                     __ptext46:	
 11797 ;; *************** function _USART_putc *****************
 11798 ;; Defined at:
 11799 ;;		line 89 in file "usart.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  value           1    wreg     unsigned char 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  value           1    0[BANK0 ] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/100
 11810 ;;		On exit  : 300/100
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11813 ;;      Params:         0       0       0       0       0
 11814 ;;      Locals:         0       1       0       0       0
 11815 ;;      Temps:          0       0       0       0       0
 11816 ;;      Totals:         0       1       0       0       0
 11817 ;;Total ram usage:        1 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    1
 11820 ;; This function calls:
 11821 ;;		Nothing
 11822 ;; This function is called by:
 11823 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11824 ;;		_Decodify_Command
 11825 ;;		_Send_To_MB
 11826 ;;		_PROCULUS_Control_Register_Write
 11827 ;;		_PROCULUS_VP_Write
 11828 ;;		_USART_put_int
 11829 ;;		_USART_put_string
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           
 11834                           ;psect for function _USART_putc
 11835  1A2B                     _USART_putc:	
 11836                           
 11837                           ;incstack = 0
 11838                           ; Regs used in _USART_putc: [wreg]
 11839                           ;USART_putc@value stored from wreg
 11840  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
 11841  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
 11842  1A2D  00A0               	movwf	USART_putc@value
 11843                           
 11844                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11845  1A2E  3014               	movlw	20
 11846  1A2F  1683               	bsf	3,5	;RP0=1, select bank1
 11847  1A30  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11848  1A31  3000               	movlw	0
 11849  1A32  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11850  1A33                     l878:	
 11851                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11852                           
 11853  1A33  1C98               	btfss	24,1	;volatile
 11854  1A34  2A33               	goto	l878
 11855                           
 11856                           ;usart.c: 93:     TXREG=value;
 11857  1A35  1283               	bcf	3,5	;RP0=0, select bank0
 11858  1A36  0820               	movf	USART_putc@value,w
 11859  1A37  0099               	movwf	25	;volatile
 11860                           
 11861                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11862  1A38  1683               	bsf	3,5	;RP0=1, select bank1
 11863  1A39  1698               	bsf	24,5	;volatile
 11864  1A3A  0008               	return
 11865  1A3B                     __end_of_USART_putc:	
 11866                           
 11867                           	psect	text47
 11868  1A20                     __ptext47:	
 11869 ;; *************** function _I2C_Master_RepeatedStart *****************
 11870 ;; Defined at:
 11871 ;;		line 62 in file "I2C.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;		None
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;		None
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  1    wreg      void 
 11878 ;; Registers used:
 11879 ;;		wreg, status,2, status,0, pclath, cstack
 11880 ;; Tracked objects:
 11881 ;;		On entry : 300/0
 11882 ;;		On exit  : 200/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11885 ;;      Params:         0       0       0       0       0
 11886 ;;      Locals:         0       0       0       0       0
 11887 ;;      Temps:          0       0       0       0       0
 11888 ;;      Totals:         0       0       0       0       0
 11889 ;;Total ram usage:        0 bytes
 11890 ;; Hardware stack levels used:    1
 11891 ;; Hardware stack levels required when called:    2
 11892 ;; This function calls:
 11893 ;;		_I2C_Master_Wait
 11894 ;; This function is called by:
 11895 ;;		_EEPROM_24C1025_Read_Buffer
 11896 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11897 ;;		_EEPROM_24C1025_Read_Str
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           
 11902                           ;psect for function _I2C_Master_RepeatedStart
 11903  1A20                     _I2C_Master_RepeatedStart:	
 11904                           
 11905                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11906                           
 11907                           ;incstack = 0
 11908                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11909  1A20  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 11910  1A25  3A00               	xorlw	0
 11911  1A26  1903               	skipnz
 11912  1A27  0008               	return
 11913                           
 11914                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11915  1A28  1683               	bsf	3,5	;RP0=1, select bank1
 11916  1A29  1491               	bsf	17,1	;volatile
 11917  1A2A  0008               	return
 11918  1A2B                     __end_of_I2C_Master_RepeatedStart:	
 11919                           
 11920                           	psect	text48
 11921  1D1C                     __ptext48:	
 11922 ;; *************** function _I2C_Master_Read *****************
 11923 ;; Defined at:
 11924 ;;		line 87 in file "I2C.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  a               2    3[BANK0 ] unsigned short 
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;  temp            2    7[BANK0 ] unsigned short 
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  2    3[BANK0 ] unsigned short 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2, status,0, pclath, cstack
 11933 ;; Tracked objects:
 11934 ;;		On entry : 300/0
 11935 ;;		On exit  : 300/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11938 ;;      Params:         0       2       0       0       0
 11939 ;;      Locals:         0       2       0       0       0
 11940 ;;      Temps:          0       2       0       0       0
 11941 ;;      Totals:         0       6       0       0       0
 11942 ;;Total ram usage:        6 bytes
 11943 ;; Hardware stack levels used:    1
 11944 ;; Hardware stack levels required when called:    2
 11945 ;; This function calls:
 11946 ;;		_I2C_Master_Wait
 11947 ;; This function is called by:
 11948 ;;		_EEPROM_24C1025_Read_Buffer
 11949 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11950 ;;		_EEPROM_24C1025_Read_Str
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _I2C_Master_Read
 11956  1D1C                     _I2C_Master_Read:	
 11957                           
 11958                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11962  1D1C  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 11963  1D21  3A00               	xorlw	0
 11964  1D22  1683               	bsf	3,5	;RP0=1, select bank1
 11965  1D23  1D03               	btfss	3,2
 11966  1D24  1591               	bsf	17,3	;volatile
 11967                           
 11968                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11969  1D25  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 11970  1D2A  3A00               	xorlw	0
 11971  1D2B  1903               	skipnz
 11972  1D2C  2D34               	goto	l3679
 11973  1D2D  0813               	movf	19,w	;volatile
 11974  1D2E  00A5               	movwf	??_I2C_Master_Read
 11975  1D2F  01A6               	clrf	??_I2C_Master_Read+1
 11976  1D30  0825               	movf	??_I2C_Master_Read,w
 11977  1D31  00A7               	movwf	I2C_Master_Read@temp
 11978  1D32  0826               	movf	??_I2C_Master_Read+1,w
 11979  1D33  00A8               	movwf	I2C_Master_Read@temp+1
 11980  1D34                     l3679:	
 11981                           
 11982                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11983  1D34  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 11984  1D39  3A00               	xorlw	0
 11985  1D3A  1903               	skipnz
 11986  1D3B  2D4E               	goto	l3691
 11987                           
 11988                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11989  1D3C  0823               	movf	I2C_Master_Read@a,w
 11990  1D3D  0424               	iorwf	I2C_Master_Read@a+1,w
 11991  1D3E  1D03               	btfss	3,2
 11992  1D3F  2D44               	goto	u2800
 11993  1D40  1683               	bsf	3,5	;RP0=1, select bank1
 11994  1D41  1303               	bcf	3,6	;RP1=0, select bank1
 11995  1D42  1691               	bsf	17,5	;volatile
 11996  1D43  2D47               	goto	l3683
 11997  1D44                     u2800:	
 11998  1D44  1683               	bsf	3,5	;RP0=1, select bank1
 11999  1D45  1303               	bcf	3,6	;RP1=0, select bank1
 12000  1D46  1291               	bcf	17,5	;volatile
 12001  1D47                     l3683:	
 12002                           
 12003                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12004  1D47  1611               	bsf	17,4	;volatile
 12005                           
 12006                           ;I2C.c: 96:     return temp;
 12007  1D48  1283               	bcf	3,5	;RP0=0, select bank0
 12008  1D49  0828               	movf	I2C_Master_Read@temp+1,w
 12009  1D4A  00A4               	movwf	?_I2C_Master_Read+1
 12010  1D4B  0827               	movf	I2C_Master_Read@temp,w
 12011  1D4C  00A3               	movwf	?_I2C_Master_Read
 12012  1D4D  0008               	return
 12013  1D4E                     l3691:	
 12014                           
 12015                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12016  1D4E  01A3               	clrf	?_I2C_Master_Read
 12017  1D4F  01A4               	clrf	?_I2C_Master_Read+1
 12018  1D50  0008               	return
 12019  1D51                     __end_of_I2C_Master_Read:	
 12020                           
 12021                           	psect	text49
 12022  1EAC                     __ptext49:	
 12023 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12024 ;; Defined at:
 12025 ;;		line 367 in file "EEPROM_24C1025.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  chip_add        1    wreg     unsigned char 
 12028 ;;  value           2   56[BANK0 ] unsigned int 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12031 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12036 ;; Tracked objects:
 12037 ;;		On entry : 300/300
 12038 ;;		On exit  : 300/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12041 ;;      Params:         0       2       0       0       0
 12042 ;;      Locals:         0       5       0       0       0
 12043 ;;      Temps:          0       0       0       0       0
 12044 ;;      Totals:         0       7       0       0       0
 12045 ;;Total ram usage:        7 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    5
 12048 ;; This function calls:
 12049 ;;		_EEPROM_24C1025_Write_Int
 12050 ;; This function is called by:
 12051 ;;		_Decodify_Command
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           
 12056                           ;psect for function _EEPROM_24C1025_Fill_All
 12057  1EAC                     _EEPROM_24C1025_Fill_All:	
 12058                           
 12059                           ;incstack = 0
 12060                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12061                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12062  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
 12063  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
 12064  1EAE  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12065                           
 12066                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12067  1EAF  3000               	movlw	0
 12068  1EB0  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12069  1EB1  3000               	movlw	0
 12070  1EB2  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12071  1EB3  3000               	movlw	0
 12072  1EB4  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12073  1EB5  3000               	movlw	0
 12074  1EB6  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12075  1EB7                     l5669:	
 12076                           
 12077                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12078  1EB7  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12079  1EB8  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12080  1EB9  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12081  1EBA  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12082  1EBB  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12083  1EBC  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12084  1EBD  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12085  1EBE  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12086  1EBF  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12087  1EC0  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12088  1EC1  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12089  1EC2  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12090  1EC3  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12091  1EC4  160A  158A  2349  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12092  1EC9  0064               	clrwdt	;# 
 12093                           
 12094                           ;EEPROM_24C1025.c: 373:         }
 12095  1ECA  3002               	movlw	2
 12096  1ECB  1283               	bcf	3,5	;RP0=0, select bank0
 12097  1ECC  1303               	bcf	3,6	;RP1=0, select bank0
 12098  1ECD  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12099  1ECE  3000               	movlw	0
 12100  1ECF  1803               	skipnc
 12101  1ED0  3001               	movlw	1
 12102  1ED1  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12103  1ED2  3000               	movlw	0
 12104  1ED3  1803               	skipnc
 12105  1ED4  3001               	movlw	1
 12106  1ED5  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12107  1ED6  3000               	movlw	0
 12108  1ED7  1803               	skipnc
 12109  1ED8  3001               	movlw	1
 12110  1ED9  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12111  1EDA  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12112  1EDB  1D03               	btfss	3,2
 12113  1EDC  0008               	return
 12114  1EDD  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12115  1EDE  1D03               	btfss	3,2
 12116  1EDF  0008               	return
 12117  1EE0  3004               	movlw	4
 12118  1EE1  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12119  1EE2  1D03               	skipz
 12120  1EE3  2EE8               	goto	u5383
 12121  1EE4  3000               	movlw	0
 12122  1EE5  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12123  1EE6  1D03               	skipz
 12124  1EE7  2EE8               	goto	u5383
 12125  1EE8                     u5383:	
 12126  1EE8  1803               	btfsc	3,0
 12127  1EE9  0008               	return
 12128  1EEA  2EB7               	goto	l5669
 12129  1EEB                     __end_of_EEPROM_24C1025_Fill_All:	
 12130                           
 12131                           	psect	text50
 12132  1B49                     __ptext50:	
 12133 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12134 ;; Defined at:
 12135 ;;		line 352 in file "EEPROM_24C1025.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  chip_add        1    wreg     unsigned char 
 12138 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12139 ;;  data            2   50[BANK0 ] int 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12142 ;;  local           2   54[BANK0 ] unsigned char [2]
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/300
 12149 ;;		On exit  : 300/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12152 ;;      Params:         0       6       0       0       0
 12153 ;;      Locals:         0       3       0       0       0
 12154 ;;      Temps:          0       1       0       0       0
 12155 ;;      Totals:         0      10       0       0       0
 12156 ;;Total ram usage:       10 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; Hardware stack levels required when called:    4
 12159 ;; This function calls:
 12160 ;;		_EEPROM_24C1025_Write_Buffer
 12161 ;; This function is called by:
 12162 ;;		_EEPROM_24C1025_Fill_All
 12163 ;;		_Decodify_Command
 12164 ;;		_Save_Log
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           
 12169                           ;psect for function _EEPROM_24C1025_Write_Int
 12170  1B49                     _EEPROM_24C1025_Write_Int:	
 12171                           
 12172                           ;incstack = 0
 12173                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12174                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12175  1B49  1283               	bcf	3,5	;RP0=0, select bank0
 12176  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
 12177  1B4B  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12178                           
 12179                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12180  1B4C  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12181  1B4D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12182  1B4E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12183  1B4F  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12184                           
 12185                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12186  1B50  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12187  1B51  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12188  1B52  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12189  1B53  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12190                           
 12191                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12192  1B54  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12193  1B55  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12194  1B56  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12195  1B57  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12196  1B58  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12197  1B59  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12198  1B5A  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12199  1B5B  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12200  1B5C  3002               	movlw	2
 12201  1B5D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12202  1B5E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12203  1B5F  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12204  1B60  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12205  1B61  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12206  1B62  3000               	movlw	0
 12207  1B63  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12208  1B64  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12209  1B65  160A  118A  23BA   	fcall	_EEPROM_24C1025_Write_Buffer
 12210  1B68  0008               	return
 12211  1B69                     __end_of_EEPROM_24C1025_Write_Int:	
 12212                           
 12213                           	psect	text51
 12214  13BA                     __ptext51:	
 12215 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12216 ;; Defined at:
 12217 ;;		line 15 in file "EEPROM_24C1025.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  chip_add        1    wreg     unsigned char 
 12220 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12221 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12222 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12223 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12226 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12227 ;;  range           1   21[BANK0 ] unsigned char 
 12228 ;;  count           1   19[BANK0 ] unsigned char 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/300
 12235 ;;		On exit  : 300/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12238 ;;      Params:         0       7       0       0       0
 12239 ;;      Locals:         0       4       0       0       0
 12240 ;;      Temps:          0       2       0       0       0
 12241 ;;      Totals:         0      13       0       0       0
 12242 ;;Total ram usage:       13 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:    3
 12245 ;; This function calls:
 12246 ;;		_I2C_Master_Start
 12247 ;;		_I2C_Master_Stop
 12248 ;;		_I2C_Master_Write
 12249 ;;		_my_delay_ms_WDT
 12250 ;; This function is called by:
 12251 ;;		_EEPROM_24C1025_Write_Byte
 12252 ;;		_EEPROM_24C1025_Write_Int
 12253 ;;		_Decodify_Command
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           
 12258                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12259  13BA                     _EEPROM_24C1025_Write_Buffer:	
 12260                           
 12261                           ;incstack = 0
 12262                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12263                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12264  13BA  1283               	bcf	3,5	;RP0=0, select bank0
 12265  13BB  1303               	bcf	3,6	;RP1=0, select bank0
 12266  13BC  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12267                           
 12268                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12269  13BD  3014               	movlw	20
 12270  13BE  1683               	bsf	3,5	;RP0=1, select bank1
 12271  13BF  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12272  13C0  3000               	movlw	0
 12273  13C1  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12274                           
 12275                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12276  13C2  1283               	bcf	3,5	;RP0=0, select bank0
 12277  13C3  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12278  13C4  1D03               	btfss	3,2
 12279  13C5  0008               	return
 12280  13C6  3002               	movlw	2
 12281  13C7  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12282  13C8  1D03               	skipz
 12283  13C9  2BD2               	goto	u5303
 12284  13CA  3000               	movlw	0
 12285  13CB  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12286  13CC  1D03               	skipz
 12287  13CD  2BD2               	goto	u5303
 12288  13CE  3000               	movlw	0
 12289  13CF  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12290  13D0  1D03               	skipz
 12291  13D1  2BD2               	goto	u5303
 12292  13D2                     u5303:	
 12293  13D2  1803               	btfsc	3,0
 12294  13D3  0008               	return
 12295                           
 12296                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12297  13D4  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12298  13D5  1D03               	btfss	3,2
 12299  13D6  2BE5               	goto	l5557
 12300  13D7  3001               	movlw	1
 12301  13D8  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12302  13D9  1D03               	skipz
 12303  13DA  2BE3               	goto	u5313
 12304  13DB  3000               	movlw	0
 12305  13DC  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12306  13DD  1D03               	skipz
 12307  13DE  2BE3               	goto	u5313
 12308  13DF  3000               	movlw	0
 12309  13E0  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12310  13E1  1D03               	skipz
 12311  13E2  2BE3               	goto	u5313
 12312  13E3                     u5313:	
 12313  13E3  1C03               	btfss	3,0
 12314  13E4  2BEA               	goto	l5559
 12315  13E5                     l5557:	
 12316  13E5  3008               	movlw	8
 12317  13E6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12318  13E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12319  13E8  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12320  13E9  2BEB               	goto	l5561
 12321  13EA                     l5559:	
 12322  13EA  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12323  13EB                     l5561:	
 12324                           
 12325                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12326  13EB  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12327  13EC  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12328  13ED  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12329  13EE  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12330                           
 12331                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12332  13EF  1003               	clrc
 12333  13F0  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12334                           
 12335                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12336  13F1  30A0               	movlw	160
 12337  13F2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12338  13F3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12339  13F4  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12340                           
 12341                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12342  13F5  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12343  13F6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12344  13F7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12345  13F8  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12346                           
 12347                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12348  13F9  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 12349                           
 12350                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12351  13FE  1283               	bcf	3,5	;RP0=0, select bank0
 12352  13FF  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12353  1400  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12354  1401  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12355  1402  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12356  1403  00A3               	movwf	I2C_Master_Write@d
 12357  1404  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12358  1405  00A4               	movwf	I2C_Master_Write@d+1
 12359  1406  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12360                           
 12361                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12362  140B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12363  140C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12364  140D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12365  140E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12366  140F  00A3               	movwf	I2C_Master_Write@d
 12367  1410  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12368  1411  00A4               	movwf	I2C_Master_Write@d+1
 12369  1412  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12370                           
 12371                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12372  1417  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12373  1418  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12374  1419  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12375  141A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12376  141B  00A3               	movwf	I2C_Master_Write@d
 12377  141C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12378  141D  00A4               	movwf	I2C_Master_Write@d+1
 12379  141E  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12380                           
 12381                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12382  1423  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12383  1424                     l5623:	
 12384  1424  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12385  1425  3EFF               	addlw	255
 12386  1426  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12387  1427  30FF               	movlw	255
 12388  1428  1803               	skipnc
 12389  1429  3000               	movlw	0
 12390  142A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12391  142B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12392  142C  3A80               	xorlw	128
 12393  142D  3C80               	sublw	128
 12394  142E  1D03               	skipz
 12395  142F  2C32               	goto	u5355
 12396  1430  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12397  1431  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12398  1432                     u5355:	
 12399  1432  1803               	btfsc	3,0
 12400  1433  2CFF               	goto	l5625
 12401  1434  0064               	clrwdt	;# 
 12402                           
 12403                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12404  1435  1283               	bcf	3,5	;RP0=0, select bank0
 12405  1436  1303               	bcf	3,6	;RP1=0, select bank0
 12406  1437  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12407  1438  1D03               	btfss	3,2
 12408  1439  0008               	return
 12409  143A  3002               	movlw	2
 12410  143B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12411  143C  1D03               	skipz
 12412  143D  2C46               	goto	u5323
 12413  143E  3000               	movlw	0
 12414  143F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12415  1440  1D03               	skipz
 12416  1441  2C46               	goto	u5323
 12417  1442  3000               	movlw	0
 12418  1443  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12419  1444  1D03               	skipz
 12420  1445  2C46               	goto	u5323
 12421  1446                     u5323:	
 12422  1446  1803               	btfsc	3,0
 12423  1447  0008               	return
 12424                           
 12425                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12426  1448  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12427  1449  3E01               	addlw	1
 12428  144A  397F               	andlw	127
 12429  144B  1D03               	btfss	3,2
 12430  144C  2CD5               	goto	l5615
 12431                           
 12432                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12433  144D  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12434  144E  0084               	movwf	4
 12435  144F  1783               	bsf	3,7
 12436  1450  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12437  1451  1383               	bcf	3,7
 12438  1452  0800               	movf	0,w
 12439  1453  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12440  1454  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12441  1455  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12442  1456  00A3               	movwf	I2C_Master_Write@d
 12443  1457  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12444  1458  00A4               	movwf	I2C_Master_Write@d+1
 12445  1459  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12446                           
 12447                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12448  145E  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 12449                           
 12450                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12451  1463  3000               	movlw	0
 12452  1464  1283               	bcf	3,5	;RP0=0, select bank0
 12453  1465  00A3               	movwf	my_delay_ms_WDT@time+3
 12454  1466  3000               	movlw	0
 12455  1467  00A2               	movwf	my_delay_ms_WDT@time+2
 12456  1468  3000               	movlw	0
 12457  1469  00A1               	movwf	my_delay_ms_WDT@time+1
 12458  146A  3005               	movlw	5
 12459  146B  00A0               	movwf	my_delay_ms_WDT@time
 12460  146C  160A  158A  2588  160A  118A  	fcall	_my_delay_ms_WDT
 12461                           
 12462                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12463  1471  3001               	movlw	1
 12464  1472  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12465  1473  3000               	movlw	0
 12466  1474  1803               	skipnc
 12467  1475  3001               	movlw	1
 12468  1476  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12469  1477  3000               	movlw	0
 12470  1478  1803               	skipnc
 12471  1479  3001               	movlw	1
 12472  147A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12473  147B  3000               	movlw	0
 12474  147C  1803               	skipnc
 12475  147D  3001               	movlw	1
 12476  147E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12477                           
 12478                           ;EEPROM_24C1025.c: 49:             data++;
 12479  147F  3001               	movlw	1
 12480  1480  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12481  1481  1803               	skipnc
 12482  1482  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12483  1483  3000               	movlw	0
 12484  1484  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12485                           
 12486                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12487  1485  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12488  1486  1D03               	btfss	3,2
 12489  1487  2C96               	goto	l5595
 12490  1488  3001               	movlw	1
 12491  1489  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12492  148A  1D03               	skipz
 12493  148B  2C94               	goto	u5343
 12494  148C  3000               	movlw	0
 12495  148D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12496  148E  1D03               	skipz
 12497  148F  2C94               	goto	u5343
 12498  1490  3000               	movlw	0
 12499  1491  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12500  1492  1D03               	skipz
 12501  1493  2C94               	goto	u5343
 12502  1494                     u5343:	
 12503  1494  1C03               	btfss	3,0
 12504  1495  2C9B               	goto	l5597
 12505  1496                     l5595:	
 12506  1496  3008               	movlw	8
 12507  1497  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12508  1498  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12509  1499  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12510  149A  2C9C               	goto	l5599
 12511  149B                     l5597:	
 12512  149B  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12513  149C                     l5599:	
 12514                           
 12515                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12516  149C  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12517  149D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12518  149E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12519  149F  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12520                           
 12521                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12522  14A0  1003               	clrc
 12523  14A1  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12524                           
 12525                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12526  14A2  30A0               	movlw	160
 12527  14A3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12528  14A4  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12529  14A5  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12530                           
 12531                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12532  14A6  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12533  14A7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12534  14A8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12535  14A9  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12536                           
 12537                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12538  14AA  160A  158A  223B  160A  118A  	fcall	_I2C_Master_Start
 12539                           
 12540                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12541  14AF  1283               	bcf	3,5	;RP0=0, select bank0
 12542  14B0  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12543  14B1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12544  14B2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12545  14B3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12546  14B4  00A3               	movwf	I2C_Master_Write@d
 12547  14B5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12548  14B6  00A4               	movwf	I2C_Master_Write@d+1
 12549  14B7  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12550                           
 12551                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12552  14BC  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12553  14BD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12554  14BE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12555  14BF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12556  14C0  00A3               	movwf	I2C_Master_Write@d
 12557  14C1  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12558  14C2  00A4               	movwf	I2C_Master_Write@d+1
 12559  14C3  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12560                           
 12561                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12562  14C8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12563  14C9  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12564  14CA  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12565  14CB  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12566  14CC  00A3               	movwf	I2C_Master_Write@d
 12567  14CD  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12568  14CE  00A4               	movwf	I2C_Master_Write@d+1
 12569  14CF  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12570                           
 12571                           ;EEPROM_24C1025.c: 60:             }
 12572  14D4  2CFA               	goto	l5621
 12573  14D5                     l5615:	
 12574                           
 12575                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12576  14D5  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12577  14D6  0084               	movwf	4
 12578  14D7  1783               	bsf	3,7
 12579  14D8  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12580  14D9  1383               	bcf	3,7
 12581  14DA  0800               	movf	0,w
 12582  14DB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12583  14DC  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12584  14DD  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12585  14DE  00A3               	movwf	I2C_Master_Write@d
 12586  14DF  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12587  14E0  00A4               	movwf	I2C_Master_Write@d+1
 12588  14E1  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12589                           
 12590                           ;EEPROM_24C1025.c: 64:             data++;
 12591  14E6  3001               	movlw	1
 12592  14E7  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12593  14E8  1803               	skipnc
 12594  14E9  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12595  14EA  3000               	movlw	0
 12596  14EB  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12597                           
 12598                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12599  14EC  3001               	movlw	1
 12600  14ED  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12601  14EE  3000               	movlw	0
 12602  14EF  1803               	skipnc
 12603  14F0  3001               	movlw	1
 12604  14F1  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12605  14F2  3000               	movlw	0
 12606  14F3  1803               	skipnc
 12607  14F4  3001               	movlw	1
 12608  14F5  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12609  14F6  3000               	movlw	0
 12610  14F7  1803               	skipnc
 12611  14F8  3001               	movlw	1
 12612  14F9  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12613  14FA                     l5621:	
 12614                           
 12615                           ;EEPROM_24C1025.c: 67:      }
 12616  14FA  3001               	movlw	1
 12617  14FB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12618  14FC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12619  14FD  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12620  14FE  2C24               	goto	l5623
 12621  14FF                     l5625:	
 12622                           
 12623                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12624  14FF  1283               	bcf	3,5	;RP0=0, select bank0
 12625  1500  1303               	bcf	3,6	;RP1=0, select bank0
 12626  1501  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12627  1502  0084               	movwf	4
 12628  1503  1783               	bsf	3,7
 12629  1504  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12630  1505  1383               	bcf	3,7
 12631  1506  0800               	movf	0,w
 12632  1507  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12633  1508  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12634  1509  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12635  150A  00A3               	movwf	I2C_Master_Write@d
 12636  150B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12637  150C  00A4               	movwf	I2C_Master_Write@d+1
 12638  150D  160A  158A  2215  160A  118A  	fcall	_I2C_Master_Write
 12639                           
 12640                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12641  1512  160A  158A  21EE  160A  118A  	fcall	_I2C_Master_Stop
 12642                           
 12643                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12644  1517  3000               	movlw	0
 12645  1518  1283               	bcf	3,5	;RP0=0, select bank0
 12646  1519  00A3               	movwf	my_delay_ms_WDT@time+3
 12647  151A  3000               	movlw	0
 12648  151B  00A2               	movwf	my_delay_ms_WDT@time+2
 12649  151C  3000               	movlw	0
 12650  151D  00A1               	movwf	my_delay_ms_WDT@time+1
 12651  151E  3005               	movlw	5
 12652  151F  00A0               	movwf	my_delay_ms_WDT@time
 12653  1520  160A  158A  2588   	fcall	_my_delay_ms_WDT
 12654  1523  0008               	return
 12655  1524                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12656                           
 12657                           	psect	text52
 12658  1D88                     __ptext52:	
 12659 ;; *************** function _my_delay_ms_WDT *****************
 12660 ;; Defined at:
 12661 ;;		line 13 in file "my_delay.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  time            4    0[BANK0 ] long 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  i               4    6[BANK0 ] long 
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      void 
 12668 ;; Registers used:
 12669 ;;		wreg, btemp+1
 12670 ;; Tracked objects:
 12671 ;;		On entry : 300/0
 12672 ;;		On exit  : 300/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12675 ;;      Params:         0       4       0       0       0
 12676 ;;      Locals:         0       4       0       0       0
 12677 ;;      Temps:          0       2       0       0       0
 12678 ;;      Totals:         0      10       0       0       0
 12679 ;;Total ram usage:       10 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    1
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_EEPROM_24C1025_Write_Buffer
 12686 ;;		_EEPROM_24C1025_Read_Buffer
 12687 ;;		_EEPROM_24C1025_Write_Str
 12688 ;;		_main
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           
 12693                           ;psect for function _my_delay_ms_WDT
 12694  1D88                     _my_delay_ms_WDT:	
 12695                           
 12696                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12697                           
 12698                           ;incstack = 0
 12699                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12700  1D88  3000               	movlw	0
 12701  1D89  00A9               	movwf	my_delay_ms_WDT@i+3
 12702  1D8A  3000               	movlw	0
 12703  1D8B  00A8               	movwf	my_delay_ms_WDT@i+2
 12704  1D8C  3000               	movlw	0
 12705  1D8D  00A7               	movwf	my_delay_ms_WDT@i+1
 12706  1D8E  3000               	movlw	0
 12707  1D8F  00A6               	movwf	my_delay_ms_WDT@i
 12708  1D90                     l3575:	
 12709  1D90  0829               	movf	my_delay_ms_WDT@i+3,w
 12710  1D91  3A80               	xorlw	128
 12711  1D92  00FF               	movwf	127
 12712  1D93  0823               	movf	my_delay_ms_WDT@time+3,w
 12713  1D94  3A80               	xorlw	128
 12714  1D95  027F               	subwf	127,w
 12715  1D96  1D03               	skipz
 12716  1D97  2DA2               	goto	u2683
 12717  1D98  0822               	movf	my_delay_ms_WDT@time+2,w
 12718  1D99  0228               	subwf	my_delay_ms_WDT@i+2,w
 12719  1D9A  1D03               	skipz
 12720  1D9B  2DA2               	goto	u2683
 12721  1D9C  0821               	movf	my_delay_ms_WDT@time+1,w
 12722  1D9D  0227               	subwf	my_delay_ms_WDT@i+1,w
 12723  1D9E  1D03               	skipz
 12724  1D9F  2DA2               	goto	u2683
 12725  1DA0  0820               	movf	my_delay_ms_WDT@time,w
 12726  1DA1  0226               	subwf	my_delay_ms_WDT@i,w
 12727  1DA2                     u2683:	
 12728  1DA2  1803               	btfsc	3,0
 12729  1DA3  0008               	return
 12730  1DA4  0064               	clrwdt	;# 
 12731                           
 12732                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12733  1DA5  3003               	movlw	3
 12734  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
 12735  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
 12736  1DA8  00A5               	movwf	??_my_delay_ms_WDT+1
 12737  1DA9  3097               	movlw	151
 12738  1DAA  00A4               	movwf	??_my_delay_ms_WDT
 12739  1DAB                     u5607:	
 12740  1DAB  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12741  1DAC  2DAB               	goto	u5607
 12742  1DAD  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12743  1DAE  2DAB               	goto	u5607
 12744                           
 12745                           ;my_delay.c: 19:             }
 12746  1DAF  3001               	movlw	1
 12747  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
 12748  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
 12749  1DB2  07A6               	addwf	my_delay_ms_WDT@i,f
 12750  1DB3  3000               	movlw	0
 12751  1DB4  1803               	skipnc
 12752  1DB5  3001               	movlw	1
 12753  1DB6  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12754  1DB7  3000               	movlw	0
 12755  1DB8  1803               	skipnc
 12756  1DB9  3001               	movlw	1
 12757  1DBA  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12758  1DBB  3000               	movlw	0
 12759  1DBC  1803               	skipnc
 12760  1DBD  3001               	movlw	1
 12761  1DBE  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12762  1DBF  2D90               	goto	l3575
 12763  1DC0                     __end_of_my_delay_ms_WDT:	
 12764                           
 12765                           	psect	text53
 12766  1A15                     __ptext53:	
 12767 ;; *************** function _I2C_Master_Write *****************
 12768 ;; Defined at:
 12769 ;;		line 79 in file "I2C.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;  d               2    3[BANK0 ] unsigned int 
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		wreg, status,2, status,0, pclath, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 300/0
 12780 ;;		On exit  : 300/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12783 ;;      Params:         0       2       0       0       0
 12784 ;;      Locals:         0       0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0
 12786 ;;      Totals:         0       2       0       0       0
 12787 ;;Total ram usage:        2 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    2
 12790 ;; This function calls:
 12791 ;;		_I2C_Master_Wait
 12792 ;; This function is called by:
 12793 ;;		_EEPROM_24C1025_Write_Buffer
 12794 ;;		_EEPROM_24C1025_Read_Buffer
 12795 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12796 ;;		_EEPROM_24C1025_Write_Str
 12797 ;;		_EEPROM_24C1025_Read_Str
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           
 12802                           ;psect for function _I2C_Master_Write
 12803  1A15                     _I2C_Master_Write:	
 12804                           
 12805                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12809  1A15  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 12810  1A1A  3A00               	xorlw	0
 12811  1A1B  1903               	skipnz
 12812  1A1C  0008               	return
 12813                           
 12814                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12815  1A1D  0823               	movf	I2C_Master_Write@d,w
 12816  1A1E  0093               	movwf	19	;volatile
 12817  1A1F  0008               	return
 12818  1A20                     __end_of_I2C_Master_Write:	
 12819                           
 12820                           	psect	text54
 12821  19EE                     __ptext54:	
 12822 ;; *************** function _I2C_Master_Stop *****************
 12823 ;; Defined at:
 12824 ;;		line 70 in file "I2C.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;		None
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  1    wreg      void 
 12831 ;; Registers used:
 12832 ;;		wreg, status,2, status,0, pclath, cstack
 12833 ;; Tracked objects:
 12834 ;;		On entry : 300/800
 12835 ;;		On exit  : 200/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12838 ;;      Params:         0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0
 12840 ;;      Temps:          0       0       0       0       0
 12841 ;;      Totals:         0       0       0       0       0
 12842 ;;Total ram usage:        0 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:    2
 12845 ;; This function calls:
 12846 ;;		_I2C_Master_Wait
 12847 ;; This function is called by:
 12848 ;;		_EEPROM_24C1025_Write_Buffer
 12849 ;;		_EEPROM_24C1025_Read_Buffer
 12850 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12851 ;;		_EEPROM_24C1025_Write_Str
 12852 ;;		_EEPROM_24C1025_Read_Str
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           
 12857                           ;psect for function _I2C_Master_Stop
 12858  19EE                     _I2C_Master_Stop:	
 12859                           
 12860                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12861                           
 12862                           ;incstack = 0
 12863                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12864  19EE  160A  158A  2389   	fcall	_I2C_Master_Wait
 12865  19F1  3A00               	xorlw	0
 12866                           
 12867                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12868  19F2  1683               	bsf	3,5	;RP0=1, select bank1
 12869  19F3  1D03               	btfss	3,2
 12870  19F4  1511               	bsf	17,2	;volatile
 12871                           
 12872                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12873                           
 12874                           ;I2C.c: 75:     }
 12875  19F5  178B               	bsf	11,7	;volatile
 12876  19F6  0008               	return
 12877  19F7                     __end_of_I2C_Master_Stop:	
 12878                           
 12879                           	psect	text55
 12880  1A3B                     __ptext55:	
 12881 ;; *************** function _I2C_Master_Start *****************
 12882 ;; Defined at:
 12883 ;;		line 52 in file "I2C.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0, pclath, cstack
 12892 ;; Tracked objects:
 12893 ;;		On entry : 300/0
 12894 ;;		On exit  : 200/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12897 ;;      Params:         0       0       0       0       0
 12898 ;;      Locals:         0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0
 12900 ;;      Totals:         0       0       0       0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    2
 12904 ;; This function calls:
 12905 ;;		_I2C_Master_Wait
 12906 ;; This function is called by:
 12907 ;;		_EEPROM_24C1025_Write_Buffer
 12908 ;;		_EEPROM_24C1025_Read_Buffer
 12909 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12910 ;;		_EEPROM_24C1025_Write_Str
 12911 ;;		_EEPROM_24C1025_Read_Str
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915                           
 12916                           ;psect for function _I2C_Master_Start
 12917  1A3B                     _I2C_Master_Start:	
 12918                           
 12919                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12920                           
 12921                           ;incstack = 0
 12922                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12923  1A3B  138B               	bcf	11,7	;volatile
 12924                           
 12925                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12926  1A3C  3014               	movlw	20
 12927  1A3D  1683               	bsf	3,5	;RP0=1, select bank1
 12928  1A3E  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12929  1A3F  3000               	movlw	0
 12930  1A40  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12931                           
 12932                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12933  1A41  160A  158A  2389  160A  158A  	fcall	_I2C_Master_Wait
 12934  1A46  3A00               	xorlw	0
 12935  1A47  1903               	skipnz
 12936  1A48  0008               	return
 12937                           
 12938                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12939  1A49  1683               	bsf	3,5	;RP0=1, select bank1
 12940  1A4A  1411               	bsf	17,0	;volatile
 12941  1A4B  0008               	return
 12942  1A4C                     __end_of_I2C_Master_Start:	
 12943                           
 12944                           	psect	text56
 12945  1B89                     __ptext56:	
 12946 ;; *************** function _I2C_Master_Wait *****************
 12947 ;; Defined at:
 12948 ;;		line 37 in file "I2C.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;  tempo           1    2[BANK0 ] unsigned char 
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      unsigned char 
 12955 ;; Registers used:
 12956 ;;		wreg, status,2, status,0
 12957 ;; Tracked objects:
 12958 ;;		On entry : 200/0
 12959 ;;		On exit  : 300/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12962 ;;      Params:         0       0       0       0       0
 12963 ;;      Locals:         0       1       0       0       0
 12964 ;;      Temps:          0       2       0       0       0
 12965 ;;      Totals:         0       3       0       0       0
 12966 ;;Total ram usage:        3 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:    1
 12969 ;; This function calls:
 12970 ;;		Nothing
 12971 ;; This function is called by:
 12972 ;;		_I2C_Master_Start
 12973 ;;		_I2C_Master_RepeatedStart
 12974 ;;		_I2C_Master_Stop
 12975 ;;		_I2C_Master_Write
 12976 ;;		_I2C_Master_Read
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           
 12981                           ;psect for function _I2C_Master_Wait
 12982  1B89                     _I2C_Master_Wait:	
 12983                           
 12984                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12985                           
 12986                           ;incstack = 0
 12987                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12988  1B89  30C8               	movlw	200
 12989  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
 12990  1B8B  00A0               	movwf	??_I2C_Master_Wait
 12991  1B8C  0820               	movf	??_I2C_Master_Wait,w
 12992  1B8D  00A2               	movwf	I2C_Master_Wait@tempo
 12993                           
 12994                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12995  1B8E  2B9B               	goto	l3547
 12996  1B8F                     l3543:	
 12997                           
 12998                           ;I2C.c: 44:          tempo--;
 12999  1B8F  3001               	movlw	1
 13000  1B90  02A2               	subwf	I2C_Master_Wait@tempo,f
 13001                           
 13002                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13003  1B91  3003               	movlw	3
 13004  1B92  1283               	bcf	3,5	;RP0=0, select bank0
 13005  1B93  1303               	bcf	3,6	;RP1=0, select bank0
 13006  1B94  00A1               	movwf	??_I2C_Master_Wait+1
 13007  1B95  3097               	movlw	151
 13008  1B96  00A0               	movwf	??_I2C_Master_Wait
 13009  1B97                     u5617:	
 13010  1B97  0BA0               	decfsz	??_I2C_Master_Wait,f
 13011  1B98  2B97               	goto	u5617
 13012  1B99  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13013  1B9A  2B97               	goto	u5617
 13014  1B9B                     l3547:	
 13015                           
 13016                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13017  1B9B  1683               	bsf	3,5	;RP0=1, select bank1
 13018  1B9C  1303               	bcf	3,6	;RP1=0, select bank1
 13019  1B9D  1914               	btfsc	20,2	;volatile
 13020  1B9E  2BA3               	goto	l3541
 13021  1B9F  0811               	movf	17,w	;volatile
 13022  1BA0  391F               	andlw	31
 13023  1BA1  1903               	btfsc	3,2
 13024  1BA2  2BA7               	goto	l3551
 13025  1BA3                     l3541:	
 13026                           
 13027                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13028  1BA3  1283               	bcf	3,5	;RP0=0, select bank0
 13029  1BA4  0822               	movf	I2C_Master_Wait@tempo,w
 13030  1BA5  1D03               	btfss	3,2
 13031  1BA6  2B8F               	goto	l3543
 13032  1BA7                     l3551:	
 13033                           
 13034                           ;I2C.c: 49:   return tempo ;
 13035  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
 13036  1BA8  0822               	movf	I2C_Master_Wait@tempo,w
 13037  1BA9  0008               	return
 13038  1BAA                     __end_of_I2C_Master_Wait:	
 13039                           
 13040                           	psect	text57
 13041  1A0A                     __ptext57:	
 13042 ;; *************** function _ADC_init *****************
 13043 ;; Defined at:
 13044 ;;		line 10 in file "adc.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/100
 13055 ;;		On exit  : 300/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13058 ;;      Params:         0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:    1
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_main
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           
 13073                           ;psect for function _ADC_init
 13074  1A0A                     _ADC_init:	
 13075                           
 13076                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13077                           
 13078                           ;incstack = 0
 13079                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13080  1A0A  30C0               	movlw	192
 13081  1A0B  1283               	bcf	3,5	;RP0=0, select bank0
 13082  1A0C  1303               	bcf	3,6	;RP1=0, select bank0
 13083  1A0D  049F               	iorwf	31,f	;volatile
 13084                           
 13085                           ;adc.c: 12:      ADCON1=0b10000000;
 13086  1A0E  3080               	movlw	128
 13087  1A0F  1683               	bsf	3,5	;RP0=1, select bank1
 13088  1A10  009F               	movwf	31	;volatile
 13089                           
 13090                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13091  1A11  179F               	bsf	31,7	;volatile
 13092                           
 13093                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13094  1A12  1283               	bcf	3,5	;RP0=0, select bank0
 13095  1A13  141F               	bsf	31,0	;volatile
 13096  1A14  0008               	return
 13097  1A15                     __end_of_ADC_init:	
 13098                           
 13099                           	psect	text58
 13100  11DE                     __ptext58:	
 13101 ;; *************** function _isr *****************
 13102 ;; Defined at:
 13103 ;;		line 29 in file "isr.c"
 13104 ;; Parameters:    Size  Location     Type
 13105 ;;		None
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;  tempo           2    6[COMMON] unsigned int 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      void 
 13110 ;; Registers used:
 13111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 300/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13117 ;;      Params:         0       0       0       0       0
 13118 ;;      Locals:         2       0       0       0       0
 13119 ;;      Temps:          6       0       0       0       0
 13120 ;;      Totals:         8       0       0       0       0
 13121 ;;Total ram usage:        8 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; This function calls:
 13124 ;;		Nothing
 13125 ;; This function is called by:
 13126 ;;		Interrupt level 1
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           
 13131                           ;psect for function _isr
 13132  11DE                     _isr:	
 13133                           
 13134                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13135  11DE  188B               	btfsc	11,1	;volatile
 13136                           
 13137                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13138  11DF  108B               	bcf	11,1	;volatile
 13139                           
 13140                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13141                           
 13142                           ;isr.c: 37:       }
 13143  11E0  1C0C               	btfss	12,0	;volatile
 13144  11E1  2A58               	goto	i1l5481
 13145                           
 13146                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13147  11E2  30B1               	movlw	177
 13148  11E3  008F               	movwf	15	;volatile
 13149                           
 13150                           ;isr.c: 42:                 TMR1L=0xF3;
 13151  11E4  30F3               	movlw	243
 13152  11E5  008E               	movwf	14	;volatile
 13153                           
 13154                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13155  11E6  100C               	bcf	12,0	;volatile
 13156                           
 13157                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13158  11E7  1FEC               	btfss	_generic_status,7
 13159  11E8  29EB               	goto	i1l5437
 13160                           
 13161                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13162  11E9  13EC               	bcf	_generic_status,7
 13163  11EA  0064               	clrwdt	;# 
 13164  11EB                     i1l5437:	
 13165                           
 13166                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13167  11EB  300A               	movlw	10
 13168  11EC  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13169  11ED  1803               	skipnc
 13170  11EE  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13171  11EF  3000               	movlw	0
 13172  11F0  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13173                           
 13174                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13175  11F1  3003               	movlw	3
 13176  11F2  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13177  11F3  30E8               	movlw	232
 13178  11F4  1903               	skipnz
 13179  11F5  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13180  11F6  1C03               	skipc
 13181  11F7  29FA               	goto	i1l5441
 13182                           
 13183                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13184  11F8  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13185  11F9  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13186  11FA                     i1l5441:	
 13187                           
 13188                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13189  11FA  3001               	movlw	1
 13190  11FB  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13191  11FC  30F4               	movlw	244
 13192  11FD  1903               	skipnz
 13193  11FE  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13194  11FF  1803               	skipnc
 13195  1200  2A05               	goto	i1l642
 13196                           
 13197                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13198  1201  1283               	bcf	3,5	;RP0=0, select bank0
 13199  1202  1303               	bcf	3,6	;RP1=0, select bank0
 13200  1203  1786               	bsf	6,7	;volatile
 13201  1204  2A08               	goto	i1l5445
 13202  1205                     i1l642:	
 13203                           ;isr.c: 56:                 else
 13204                           
 13205                           
 13206                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13207  1205  1283               	bcf	3,5	;RP0=0, select bank0
 13208  1206  1303               	bcf	3,6	;RP1=0, select bank0
 13209  1207  1386               	bcf	6,7	;volatile
 13210  1208                     i1l5445:	
 13211                           
 13212                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13213  1208  1683               	bsf	3,5	;RP0=1, select bank1
 13214  1209  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13215  120A  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13216  120B  1903               	btfsc	3,2
 13217  120C  2A16               	goto	i1l644
 13218                           
 13219                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13220  120D  300A               	movlw	10
 13221  120E  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13222  120F  3000               	movlw	0
 13223  1210  1C03               	skipc
 13224  1211  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13225  1212  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13226                           
 13227                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13228  1213  1283               	bcf	3,5	;RP0=0, select bank0
 13229  1214  1706               	bsf	6,6	;volatile
 13230                           
 13231                           ;isr.c: 63:                    }
 13232  1215  2A18               	goto	i1l5451
 13233  1216                     i1l644:	
 13234                           ;isr.c: 64:                 else{
 13235                           
 13236                           
 13237                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13238  1216  1283               	bcf	3,5	;RP0=0, select bank0
 13239  1217  1306               	bcf	6,6	;volatile
 13240  1218                     i1l5451:	
 13241                           
 13242                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13243  1218  1683               	bsf	3,5	;RP0=1, select bank1
 13244  1219  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13245  121A  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13246  121B  1903               	btfsc	3,2
 13247  121C  2A26               	goto	i1l646
 13248                           
 13249                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13250  121D  300A               	movlw	10
 13251  121E  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13252  121F  3000               	movlw	0
 13253  1220  1C03               	skipc
 13254  1221  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13255  1222  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13256                           
 13257                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13258  1223  1283               	bcf	3,5	;RP0=0, select bank0
 13259  1224  1686               	bsf	6,5	;volatile
 13260                           
 13261                           ;isr.c: 71:                    }
 13262  1225  2A28               	goto	i1l5457
 13263  1226                     i1l646:	
 13264                           ;isr.c: 72:                 else{
 13265                           
 13266                           
 13267                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13268  1226  1283               	bcf	3,5	;RP0=0, select bank0
 13269  1227  1286               	bcf	6,5	;volatile
 13270  1228                     i1l5457:	
 13271                           
 13272                           ;isr.c: 77:                 tempodecorrido+=10;
 13273  1228  300A               	movlw	10
 13274  1229  1683               	bsf	3,5	;RP0=1, select bank1
 13275  122A  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 13276  122B  1803               	skipnc
 13277  122C  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13278  122D  3000               	movlw	0
 13279  122E  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13280                           
 13281                           ;isr.c: 78:                 milisegundo+=10;
 13282  122F  300A               	movlw	10
 13283  1230  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 13284  1231  1803               	skipnc
 13285  1232  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13286  1233  3000               	movlw	0
 13287  1234  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13288                           
 13289                           ;isr.c: 79:                 if(milisegundo==1000){
 13290  1235  30E8               	movlw	232
 13291  1236  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 13292  1237  3003               	movlw	3
 13293  1238  1903               	skipnz
 13294  1239  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13295  123A  1D03               	btfss	3,2
 13296  123B  2A58               	goto	i1l5481
 13297                           
 13298                           ;isr.c: 80:                    milisegundo=0;
 13299  123C  01B0               	clrf	_milisegundo^(0+128)	;volatile
 13300  123D  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13301                           
 13302                           ;isr.c: 81:                    segundo++;
 13303  123E  3001               	movlw	1
 13304  123F  00F0               	movwf	??_isr
 13305  1240  0870               	movf	??_isr,w
 13306  1241  07FD               	addwf	_segundo,f	;volatile
 13307                           
 13308                           ;isr.c: 88:                    if(segundo==60){
 13309  1242  303C               	movlw	60
 13310  1243  067D               	xorwf	_segundo,w	;volatile
 13311  1244  1D03               	btfss	3,2
 13312  1245  2A58               	goto	i1l5481
 13313                           
 13314                           ;isr.c: 89:                       segundo=0;
 13315  1246  01FD               	clrf	_segundo	;volatile
 13316                           
 13317                           ;isr.c: 90:                       minuto++;
 13318  1247  3001               	movlw	1
 13319  1248  00F0               	movwf	??_isr
 13320  1249  0870               	movf	??_isr,w
 13321  124A  07FA               	addwf	_minuto,f	;volatile
 13322                           
 13323                           ;isr.c: 91:                       if(minuto==60){
 13324  124B  303C               	movlw	60
 13325  124C  067A               	xorwf	_minuto,w	;volatile
 13326  124D  1D03               	btfss	3,2
 13327  124E  2A58               	goto	i1l5481
 13328                           
 13329                           ;isr.c: 92:                          minuto=0;
 13330  124F  01FA               	clrf	_minuto	;volatile
 13331                           
 13332                           ;isr.c: 93:                          hora++;
 13333  1250  3001               	movlw	1
 13334  1251  00F0               	movwf	??_isr
 13335  1252  0870               	movf	??_isr,w
 13336  1253  07FC               	addwf	_hora,f	;volatile
 13337                           
 13338                           ;isr.c: 94:                          if(hora==24){
 13339  1254  3018               	movlw	24
 13340  1255  067C               	xorwf	_hora,w	;volatile
 13341  1256  1903               	btfsc	3,2
 13342                           
 13343                           ;isr.c: 95:                             hora=0;
 13344  1257  01FC               	clrf	_hora	;volatile
 13345  1258                     i1l5481:	
 13346                           ;isr.c: 99:                 }
 13347                           
 13348                           
 13349                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13350  1258  1283               	bcf	3,5	;RP0=0, select bank0
 13351  1259  1E8C               	btfss	12,5	;volatile
 13352  125A  2ABE               	goto	i1l660
 13353                           
 13354                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13355  125B  146C               	bsf	_generic_status,0
 13356                           
 13357                           ;isr.c: 109:         tempo=30;
 13358  125C  301E               	movlw	30
 13359  125D  00F6               	movwf	isr@tempo
 13360  125E  3000               	movlw	0
 13361  125F  00F7               	movwf	isr@tempo+1
 13362                           
 13363                           ;isr.c: 110:         count=0;
 13364  1260  1683               	bsf	3,5	;RP0=1, select bank1
 13365  1261  01AC               	clrf	_count^(0+128)	;volatile
 13366  1262  01AD               	clrf	(_count+1)^(0+128)	;volatile
 13367                           
 13368                           ;isr.c: 111:         pointer=usart_buffer;
 13369  1263  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13370  1264  00F0               	movwf	??_isr
 13371  1265  0870               	movf	??_isr,w
 13372  1266  00B6               	movwf	_pointer^(0+128)
 13373  1267                     i1l5503:	
 13374                           ;isr.c: 112:         while(tempo)
 13375                           
 13376                           
 13377                           ;isr.c: 112:         while(tempo)
 13378  1267  0876               	movf	isr@tempo,w
 13379  1268  0477               	iorwf	isr@tempo+1,w
 13380  1269  1903               	btfsc	3,2
 13381  126A  2A9A               	goto	i1l5505
 13382                           
 13383                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13384  126B  1283               	bcf	3,5	;RP0=0, select bank0
 13385  126C  1303               	bcf	3,6	;RP1=0, select bank0
 13386  126D  1E8C               	btfss	12,5	;volatile
 13387  126E  2A93               	goto	i1l5501
 13388                           
 13389                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13390  126F  081A               	movf	26,w	;volatile
 13391  1270  00F0               	movwf	??_isr
 13392  1271  1683               	bsf	3,5	;RP0=1, select bank1
 13393  1272  0836               	movf	_pointer^(0+128),w
 13394  1273  0084               	movwf	4
 13395  1274  0870               	movf	??_isr,w
 13396  1275  1783               	bsf	3,7	;select IRP bank2
 13397  1276  0080               	movwf	0
 13398                           
 13399                           ;isr.c: 118:                 if(count<32+20 -1)
 13400  1277  082D               	movf	(_count+1)^(0+128),w	;volatile
 13401  1278  3A80               	xorlw	128
 13402  1279  00FF               	movwf	127
 13403  127A  3080               	movlw	128
 13404  127B  027F               	subwf	127,w
 13405  127C  1D03               	skipz
 13406  127D  2A80               	goto	u527_25
 13407  127E  3033               	movlw	51
 13408  127F  022C               	subwf	_count^(0+128),w	;volatile
 13409  1280                     u527_25:	
 13410  1280  1803               	skipnc
 13411  1281  2A8E               	goto	i1l5499
 13412                           
 13413                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13414  1282  3001               	movlw	1
 13415  1283  1683               	bsf	3,5	;RP0=1, select bank1
 13416  1284  1303               	bcf	3,6	;RP1=0, select bank1
 13417  1285  07AC               	addwf	_count^(0+128),f	;volatile
 13418  1286  1803               	skipnc
 13419  1287  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13420  1288  3000               	movlw	0
 13421  1289  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13422                           
 13423                           ;isr.c: 121:                    pointer++;
 13424  128A  3001               	movlw	1
 13425  128B  00F0               	movwf	??_isr
 13426  128C  0870               	movf	??_isr,w
 13427  128D  07B6               	addwf	_pointer^(0+128),f
 13428  128E                     i1l5499:	
 13429                           
 13430                           ;isr.c: 123:                 tempo=30;
 13431  128E  301E               	movlw	30
 13432  128F  00F6               	movwf	isr@tempo
 13433  1290  3000               	movlw	0
 13434  1291  00F7               	movwf	isr@tempo+1
 13435                           
 13436                           ;isr.c: 124:             }
 13437  1292  2A67               	goto	i1l5503
 13438  1293                     i1l5501:	
 13439                           
 13440                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13441  1293  3001               	movlw	1
 13442  1294  02F6               	subwf	isr@tempo,f
 13443  1295  3000               	movlw	0
 13444  1296  1C03               	skipc
 13445  1297  03F7               	decf	isr@tempo+1,f
 13446  1298  02F7               	subwf	isr@tempo+1,f
 13447  1299  2A67               	goto	i1l5503
 13448  129A                     i1l5505:	
 13449                           
 13450                           ;isr.c: 131:         (*pointer)=0;
 13451  129A  1683               	bsf	3,5	;RP0=1, select bank1
 13452  129B  1303               	bcf	3,6	;RP1=0, select bank1
 13453  129C  0836               	movf	_pointer^(0+128),w
 13454  129D  0084               	movwf	4
 13455  129E  1783               	bsf	3,7	;select IRP bank2
 13456  129F  0180               	clrf	0
 13457                           
 13458                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13459  12A0  1283               	bcf	3,5	;RP0=0, select bank0
 13460  12A1  1C98               	btfss	24,1	;volatile
 13461  12A2  2ABE               	goto	i1l660
 13462                           
 13463                           ;isr.c: 134:            CREN=0;
 13464  12A3  1218               	bcf	24,4	;volatile
 13465                           
 13466                           ;isr.c: 135:            CREN=1;
 13467  12A4  1618               	bsf	24,4	;volatile
 13468                           
 13469                           ;isr.c: 136:            tempo=RCREG;
 13470  12A5  081A               	movf	26,w	;volatile
 13471  12A6  00F0               	movwf	??_isr
 13472  12A7  01F1               	clrf	??_isr+1
 13473  12A8  0870               	movf	??_isr,w
 13474  12A9  00F6               	movwf	isr@tempo
 13475  12AA  0871               	movf	??_isr+1,w
 13476  12AB  00F7               	movwf	isr@tempo+1
 13477                           
 13478                           ;isr.c: 137:            tempo=RCREG;
 13479  12AC  081A               	movf	26,w	;volatile
 13480  12AD  00F0               	movwf	??_isr
 13481  12AE  01F1               	clrf	??_isr+1
 13482  12AF  0870               	movf	??_isr,w
 13483  12B0  00F6               	movwf	isr@tempo
 13484  12B1  0871               	movf	??_isr+1,w
 13485  12B2  00F7               	movwf	isr@tempo+1
 13486                           
 13487                           ;isr.c: 138:            tempo=RCREG;
 13488  12B3  081A               	movf	26,w	;volatile
 13489  12B4  00F0               	movwf	??_isr
 13490  12B5  01F1               	clrf	??_isr+1
 13491  12B6  0870               	movf	??_isr,w
 13492  12B7  00F6               	movwf	isr@tempo
 13493  12B8  0871               	movf	??_isr+1,w
 13494  12B9  00F7               	movwf	isr@tempo+1
 13495                           
 13496                           ;isr.c: 139:            usart_buffer[0]=0;
 13497  12BA  1703               	bsf	3,6	;RP1=1, select bank2
 13498  12BB  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13499                           
 13500                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13501  12BC  1303               	bcf	3,6	;RP1=0, select bank0
 13502  12BD  14EC               	bsf	_generic_status,1
 13503  12BE                     i1l660:	
 13504  12BE  0875               	movf	??_isr+5,w
 13505  12BF  00FF               	movwf	127
 13506  12C0  0874               	movf	??_isr+4,w
 13507  12C1  008A               	movwf	10
 13508  12C2  0873               	movf	??_isr+3,w
 13509  12C3  0084               	movwf	4
 13510  12C4  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13511  12C5  0083               	movwf	3
 13512  12C6  0EFE               	swapf	126,f
 13513  12C7  0E7E               	swapf	126,w
 13514  12C8  0009               	retfie
 13515  12C9                     __end_of_isr:	
 13516  007E                     btemp	set	126	;btemp
 13517  007E                     wtemp0	set	126
 13518                           
 13519                           	psect	intentry
 13520  0004                     __pintentry:	
 13521                           ;incstack = 0
 13522                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13523                           
 13524  0004                     interrupt_function:	
 13525  007E                     saved_w	set	btemp
 13526  0004  00FE               	movwf	btemp
 13527  0005  0E03               	swapf	3,w
 13528  0006  00F2               	movwf	??_isr+2
 13529  0007  0804               	movf	4,w
 13530  0008  00F3               	movwf	??_isr+3
 13531  0009  080A               	movf	10,w
 13532  000A  00F4               	movwf	??_isr+4
 13533  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13534  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13535  000D  087F               	movf	btemp+1,w
 13536  000E  00F5               	movwf	??_isr+5
 13537  000F  160A  118A  29DE   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     72      77
    BANK1            80     15      71
    BANK3            96      0      58
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decodify_Command
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  117188
                                             67 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    12    12      0   18579
                                             51 BANK0      8     8      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4049
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3852
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     864
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   96308
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12833
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4312
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3153
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     210
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     110       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      3A       9       60.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     110      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 09 10:51:18 2020

                               _USART_putc 1A2B                                 __CFG_CP$ON 0000  
                             ___fldiv@aexp 0047                               ___fldiv@bexp 0046  
                                        pc 0002                               ___fldiv@sign 003F  
                         _MediaPlacaVaccum 0D9F            EEPROM_24C1025_Read_Buffer@range 0035  
         EEPROM_24C1025_Write_Str@chip_add 0031                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 1800  __size_of_EEPROM_24C1025_Read_Buffer_USART 0170  
       ??_EEPROM_24C1025_Read_Buffer_USART 002F          ?_EEPROM_24C1025_Read_Buffer_USART 0029  
         _EEPROM_24C1025_Read_Buffer_USART 1690                              _USART_put_int 1A8B  
                 Decodify_Command@tempchar 00E2                        __Umul8_16@word_mpld 0026  
               __end_of_RESISTOR_ROOM_TEMP 181C               PROCULUS_VP_Write_String@text 005C  
                                      l430 03CF                                        l424 036B  
                                      l522 1E24                                        l523 1E25  
                                      l428 0379                                        l517 1E00  
                                      l527 1BB2                                        l439 0F19  
                                      l549 1B6C                                        l493 1A01  
                                      l815 1A58                                        l878 1A33  
                                      l798 1AF2                               __CFG_CPD$OFF 0000  
       EEPROM_24C1025_Read_Buffer@chip_add 0034                   Decodify_Command@sizedata 00DB  
                                      _isr 11DE                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1E34  
                         _ADC_Media_10bits 1F40                               __CFG_IESO$ON 0000  
                             ___flmul@aexp 0037                               ___flmul@bexp 003C  
                   PROCULUS_VP_Write@vetor 0054               ?_EEPROM_24C1025_Write_Buffer 002A  
                             ___flmul@sign 0036                               ___flmul@temp 0041  
                             ___flmul@prod 003D    __end_of_PROCULUS_Control_Register_Write 1DF8  
 __size_of_PROCULUS_Control_Register_Write 0038          ??_PROCULUS_Control_Register_Write 0053  
         ?_PROCULUS_Control_Register_Write 0052            _PROCULUS_Control_Register_Write 1DC0  
                             __CFG_LVP$OFF 0000                               ___fltol@exp1 004D  
                          __end_of_MAX_ADC 1824                                       l1330 0D94  
                                     l1322 0D7C                                       l1172 1128  
                                     l1309 0D14                                       l1422 1158  
                                     l1344 0A1D                                       l1169 10C2  
                                     l4001 0B98                                       l1435 11AE  
                                     l1188 1FE2                                       l1436 11B8  
                                     l1428 1198                                       l1292 0C5B  
                                     l1366 0B5C                                       l1294 0C39  
                                     l4103 0C9C                                       l4023 0BBA  
                                     l1368 0B6A                                       l1288 0BC2  
                                     l4121 0D26                                       l4113 0D06  
                                     l4211 041A                                       l4019 0BB7  
                                     l1396 06B8                                       l1469 1C00  
                                     l4029 0BCC                                       l4303 06A1  
                                     l4207 0410                                       l4143 0D47  
                                     l4135 0D3C                                       l4209 0412  
                                     l4321 1150                                       l4129 0D35  
                                     l4137 0D3E                                       l5017 1E81  
                                     l4411 176A                                       l4219 0428  
                                     l4331 116B                                       l4147 0D49  
                                     l4067 0C44                                       l4059 0C08  
                                     l5123 0F8B                                       l5115 0F77  
                                     l5107 0F3F                                       l5051 1EA2  
                                     l3541 1BA3                                       l4413 176F  
                                     l4341 11AC                                       l4333 117D  
                                     l4165 0D8C                                       l4093 0C8A  
                                     l4085 0C69                                       l4069 0C46  
                                     l4077 0C55                                       l5037 1E9B  
                                     l3543 1B8F                                       l3551 1BA7  
                                     l4415 1770                                       l4271 060A  
                                     l4191 03ED                                       l6007 0388  
                                     l4343 119D                                       l4327 1167  
                                     l4095 0C8C                                       l4441 17E4  
                                     l4521 0728                                       l4273 0627  
                                     l4193 03F5                                       l4169 0D90  
                                     l5081 0E01                                       l5073 0DC9  
                                     l3547 1B9B                                       l4443 170F  
                                     l4371 16C1                                       l3731 0890  
                                     l4523 079E                                       l4515 077C  
                                     l4283 0640                                       l4355 11D5  
                                     l4437 17BD                                       l4445 17E9  
                                     l4373 16C2                                       l3805 09B5  
                                     l3733 0891                                       l4605 1649  
                                     l4461 06F0                                       l3901 1DF0  
                                     l3709 1BF8                                       l4293 0672  
                                     l4189 03EB                                       l3575 1D90  
                                     l3807 08DE                                       l4615 1670  
                                     l4535 154A                                       l3831 1E0A  
                                     l4279 063E                                       l3823 1CED  
                                     l4369 16BC                                       l3809 09BA  
                                     l3729 088B                                       l4617 1679  
                                     l4561 159D                                       l4537 154F  
                                     l4457 06EA                                       l3833 1E0D  
                                     l4297 0688                                       l3921 1F9E  
                                     l3825 1D0F                                       l4713 1B12  
                                     l4801 0813                                       l5089 0E15  
                                     l3683 1D47                                       l3691 1D4E  
                                     l4539 1550                                       l4459 06EF  
                                     l4731 1CAC                                       l4707 1F1B  
                                     l4811 084B                                       l4803 0823  
                                     l5621 14FA                                       l3773 0940  
                                     l4581 15FB                                       l3941 1FCE  
                                     l3925 1FA7                                       l5615 14D5  
                                     l5623 1424                                       l3679 1D34  
                                     l3775 0945                                       l4583 15FC  
                                     l4655 1C6A                                       l3951 1FF1  
                                     l3943 1FDE                                       l5711 00E7  
                                     l4815 0858                                       l5625 14FF  
                                     l5561 13EB                                       l3777 0946  
                                     l4729 1C8F                                       l5641 1AE7  
                                     l4825 10DC                                       l4579 15F6  
                                     l5803 02D4                                       l5723 012F  
                                     l5557 13E5                                       l3973 1E60  
                                     l3965 1E3C                                       l5813 0312  
                                     l5733 0161                                       l4925 0AB6  
                                     l4829 1102                                       l5559 13EA  
                                     l3799 0993                                       l4679 1CBE  
                                     l3967 1E4A                                       l5639 1AD8  
                                     l5831 035F                                       l5807 02FE  
                                     l5743 0192                                       l5727 0149  
                                     l5719 0120                                       l3879 1D59  
                                     l4791 1A5E                                       l4951 0AF5  
                                     l4943 0AC1                                       l4919 0A97  
                                     l4927 0A73                                       l4863 09EF  
                                     l3977 1E6B                                       l5657 07DB  
                                     l5825 033F                                       l5761 01CD  
                                     l4769 1F5B                                       l4945 0ADE  
                                     l4929 0ABB                                       l4865 09F7  
                                     l5595 1496                                       l3899 1DDA  
                                     l5659 07F7                                       l5819 0323  
                                     l5755 01BF                                       l4787 1A5C  
                                     l4955 0AF7                                       l4883 0A15  
                                     l4859 09EC                                       l3995 0B8D  
                                     ?_isr 0070                                       l5597 149B  
                                     l5669 1EB7                                       l5837 036F  
                                     l5773 0215                                       l5749 01B2  
                                     l4981 0B66                                       l4965 0B29  
                                     l4893 0A3C                                       l5599 149C  
                                     l5791 0292                                       l5767 01EE  
                                     l5695 007F                                       l4879 0A12  
                                     l3999 0B90                                       l5927 1351  
                                     l5785 0263                                       l5689 0066  
                                     l5849 037D                                       l4969 0B42  
                                     l5953 137A                                       l5779 0245  
                                     l5699 008D                                       l4899 0A48  
                                     l5797 02B7                                       _BETA 1848  
                                     STR_1 1850                               __CFG_WDTE$ON 0000  
                                     STR_2 1858                                _statuspower 006B  
                                     _CREN 00C4                                       u3035 1FB0  
                                     u3300 0C29                                       u3135 1E3F  
                                     u3065 1FCF                                       u3155 1E4B  
                                     u4213 06D7                                       u3165 1E57  
                                     u4125 11C0                                       u4045 1174  
                                     u4223 06E8                                       u3175 1E61  
                                     u3095 1FE7                                       u3431 0CC7  
                                     u3423 0CAE                                       u3415 0C90  
                                     u3335 0C4A                                       u2800 1D44  
                                     u3440 0CDB                                       u3432 0CC8  
                                     u4153 16A9                                       u4313 15F4  
                                     u4233 0740                                       u4065 1190  
                                     u3441 0CDC                                       u3433 0CCD  
                                     u3442 0CE1                                       u3434 0CCE  
                                     u3290 0C28                                       u4163 16BA  
                                     u3443 0CE2                                       u3435 0CD3  
                                     u3436 0CD4                                       u4173 1725  
                                     u4085 11A5                                       u3285 0C1C  
                                     u5303 13D2                                       u2903 093E  
                                     u5313 13E3                                       u4193 1768  
                                     u4273 1537                                       u2825 1AF8  
                                     u4505 084C                                       u2683 1DA2  
                                     u5323 1446                                       u4283 1548  
                                     u4293 15AC                                       u2845 1C01  
                                     u3805 052B                                       u3485 0D28  
                                     u5343 1494                                       u2863 0878  
                                     u4375 1F27                                       u4551 10ED  
                                     u4552 10EE                                       u2873 0889  
                                     u3905 0619                                       u4465 0817  
                                     u4553 10F3                                       u3585 0D66  
                                     u4554 10F4                                       u5355 1432  
                                     u2883 08F4                                       u4715 0A90  
                                     u4571 1113                                       u4555 10F9  
                                     u5507 12D1                                       u4572 1114  
                                     u4556 10FA                                       u3845 05BF  
                                     u4485 0825                                       u5517 1D73  
                                     u4725 0AA5                                       u4573 1119  
                                     u4574 111A                                       u5607 1DAB  
                                     u5383 1EE8                                       u5527 1B00  
                                     u3775 04D2                                       u4495 083A  
                                     u2983 1D6B                                       u4575 111F  
                                     u4576 1120                                       u5617 1B97  
                                     u5537 1CE3                                       u5547 1E2E  
                                     u3875 05F6                                       u4755 0AC5  
                                     u5557 1BC3                                       u3885 060E  
                                     u4845 0B14                                       u4685 0A7C  
                                     u5567 15CD                                       u3975 065D  
                                     u4855 0B32                                       u4775 0AD0  
                                     u4695 0A85                                       u5577 168A  
                                     u3985 067B                                       u4865 0B4D  
                                     u5587 09CB                                       u3995 0693  
                                     u5597 17FA                                       u4885 100E  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 0059  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
         __end_of_I2C_Master_RepeatedStart 1A2B                                       _main 12C9  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0020  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00F3  
                ?_EEPROM_24C1025_Write_Int 004E                              __CFG_BOREN$ON 0000  
                ?_EEPROM_24C1025_Write_Str 002A                __size_of_EEPROM_Read_String 0020  
                                     start 0012                           __end_of_ADC_init 1A15  
                         _BALANCE_RESISTOR 184C                            ___fldiv@new_exp 0040  
       EEPROM_24C1025_Read_Buffer@sizedata 002E                                      ??_isr 0070  
                         ?_I2C_Master_Init 002E                           ?_I2C_Master_Read 0023  
                         ?_I2C_Master_Wait 0070                           ?_I2C_Master_Stop 0070  
                           ?_USART_put_int 004E                              ___fltol@sign1 004C  
                          __end_of___fladd 0D9F                                      ?_main 0070  
                          __end_of___fldiv 0B72                                      _EEADR 010D  
                          __end_of___flmul 06C5                            __end_of___flsub 1B49  
                          __end_of___fltol 2000                                      _ANSEL 0188  
                          __end_of___lldiv 0861                                      _T1CON 0010  
                          __end_of___lwdiv 1E70                                      i1l642 1205  
                                    i1l660 12BE                                      i1l644 1216  
                                    i1l646 1226                                      _RCREG 001A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _SPBRG 0099                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
          EEPROM_24C1025_Read_Int@chip_add 003D                                      _TRISE 0089  
                                    _TXREG 0019                      ADC_Media_10bits@canal 0033  
                          __end_of_captura 1A0A                              __CFG_PWRTE$ON 0000  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 006A  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00AC  
                                    _errno 00A8              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0037  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
                           __CFG_MCLRE$OFF 0000          __size_of_PROCULUS_VP_Write_String 001A  
                              ?_USART_init 0020                            __initialization 0015  
                ?_PROCULUS_VP_Write_String 005A                                ?_USART_putc 0070  
                             __end_of_main 13BA                             Send_To_MB@size 0021  
                 __end_of_EEPROM_Read_Byte 1BCC                                     ??_main 0063  
                         __end_of_Save_Log 10A8                           _USART_put_string 1CE9  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003C                          ?_I2C_Master_Start 0070  
                EEPROM_Write_Byte@last_GIE 0024                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 0059  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 1C39                      EEPROM_Write_Integer@i 002C  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 1A75  
                                   i1l5501 1293                                     i1l5503 1267  
                                   i1l5505 129A                                     i1l5441 11FA  
                                   i1l5451 1218                                     i1l5445 1208  
                                   i1l5437 11EB                                     i1l5457 1228  
                                   i1l5481 1258                                     i1l5499 128E  
        __end_of_EEPROM_24C1025_Write_Byte 1A8B                                     u527_25 1280  
                             ?_my_delay_ms 0020                                     _TMR1IE 0460  
                                   _TMR1CS 0081                   ?_EEPROM_24C1025_Fill_All 0058  
                                   _SSPADD 0093                                     _TRISC3 043B  
                                   _TRISC4 043C                                     _TRISC6 043E  
                                   _TRISC7 043F                                     _SSPCON 0014  
                                   _SSPBUF 0013             EEPROM_24C1025_Fill_All@mem_add 005B  
                         __end_of___xxtofl 11DE              EEPROM_24C1025_Read_Str@buffer 002D  
                       PROCULUS_VP_Write@i 0059                   __end_of_Decodify_Command 03D0  
                 ?_EEPROM_24C1025_Read_Int 0037                   ?_EEPROM_24C1025_Read_Str 0029  
                 _I2C_Master_RepeatedStart 1A20       __size_of_EEPROM_24C1025_Write_Buffer 016A  
                                   ___flge 10A8                                  ??___fladd 003F  
                                ??___fldiv 0036                                  ??___flmul 0031  
                                ??___flsub 0053                                  ??___fltol 0047  
                          ??_USART_put_int 0050                                  ??___lldiv 0028  
                                   _header 00AE                          __end_of_ROOM_TEMP 1820  
                                ??___lwdiv 0024                                     _buffer 00B7  
                        _USART_to_Protocol 1EEB                            USART_putc@value 0020  
                                   _minuto 007A          EEPROM_24C1025_Read_Buffer@cnt_108 0033  
                                ??_captura 0022                         ?_USART_to_Protocol 0070  
             Decodify_Command@add_24LCxxxx 00E3                                     _strcpy 1B0D  
                                   _strlen 1AD4          EEPROM_24C1025_Read_Buffer@mem_add 002A  
         __end_of_EEPROM_24C1025_Read_Byte 1ABA                         __size_of__Umul8_16 0023  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0070                        ??_USART_to_Protocol 0020  
                      __size_of_USART_init 003C                        __size_of_USART_putc 0010  
                 __end_of_MediaPlacaVaccum 1000                                 ___flge@ff1 0020  
                               ___flge@ff2 0024                               ___xxtofl@arg 002A  
                             ___xxtofl@exp 0029                               ___xxtofl@val 0020  
                         __end_oflog@coeff 1848                    __end_of__initialization 003A  
      PROCULUS_Control_Register_Write@size 0052                                 ___fltol@f1 0043  
                             _Board_Number 0069                   __end_of_ADC_Media_10bits 1F95  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 0022  
                __end_of_USART_to_Protocol 1F40                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1B69  
         __end_of_EEPROM_24C1025_Write_Str 07B8                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 1CB7            __end_of_EEPROM_24C1025_Fill_All 1EEB  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK0 0068                                 __pbssBANK1 00A0  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       _RESISTOR_ROOM_TEMP 1818            __end_of_EEPROM_24C1025_Read_Int 1C39  
          __end_of_EEPROM_24C1025_Read_Str 1690                   ?_Package_Usart_is_for_me 0070  
                                ?_Save_Log 0058                             _PROCULUS_Delay 1AF0  
                        __end_of__Umul8_16 1C11                                 __pmaintext 12C9  
                                  ?___flge 0020                        Save_Log@add_datalog 0058  
                      _EEPROM_Read_Integer 1C62                 PROCULUS_Show_Screen@screen 0056  
                               __pintentry 0004                       _PROCULUS_Show_Screen 1A60  
                                  _T1CKPS0 0084                                    _T1CKPS1 0085  
                                  ?_strcpy 0020                                    ?_strlen 0020  
                        MediaPlacaVaccum@i 0059                                  ?___xxtofl 0020  
                                  _MAX_ADC 1820                       ?_EEPROM_Read_Integer 0023  
                    Decodify_Command@dados 00D8                EEPROM_24C1025_Read_Int@data 003E  
                                  _SSPCON2 0091           __end_of_PROCULUS_VP_Write_String 1AD4  
                  EEPROM_Read_Integer@addr 0026                                    _SSPSTAT 0094  
                 _EEPROM_24C1025_Read_Byte 1AA1                                 __stringtab 1800  
                      PROCULUS_VP_Write@vp 0052                ??_EEPROM_24C1025_Write_Byte 003C  
               __end_of_EEPROM_Read_String 1B89                     __end_of_PROCULUS_Delay 1B0D  
                 __end_of_USART_put_string 1D1C                       __size_of_my_delay_ms 0037  
                               ??_Save_Log 005C                            PROCULUS_Delay@i 0024  
                                  _Vaccum0 00A4                               ??_USART_init 0024  
              EEPROM_24C1025_Read_Str@ctrl 0033                                    _Tensao1 00A0  
                             ??_USART_putc 0020                 __size_of_USART_to_Protocol 0055  
              PROCULUS_Buzzer@time_ms_x_10 0056                            __size_of___flge 0093  
                                  ___fladd 0B72                                    ___fldiv 09D1  
                 EEPROM_Write_Integer@addr 002B                                    ___flmul 03D0  
                 EEPROM_Write_Integer@dado 0025                                    ___flsub 1B2B  
                                  ___fltol 1F95                                    ___lldiv 0803  
                                  ___lwdiv 1E34                              _Send_Reply_OK 19F7  
                      __size_of_Send_To_MB 0029                      ?_PROCULUS_Show_Screen 0056  
                                  _captura 1A00                           _statuspower_memo 007B  
                                  __ptext1 1E70                                    __ptext2 0D9F  
                                  __ptext3 1B2B                                    __ptext4 0B72  
                                  __ptext5 10A8                                    __ptext6 09D1  
                                  __ptext7 1A4C                                    __ptext8 1F40  
                                  __ptext9 1D51                          ??_PROCULUS_Buzzer 0058  
                                  _destino 0068                          ?_EEPROM_Read_Byte 0070  
                          __size_of_strcpy 001E                            __size_of_strlen 001C  
                             __size_of_isr 00EB                                 ??___xxtofl 0024  
                       ??_EEPROM_Read_Byte 0020                                    _segundo 007D  
                 __size_of_I2C_Master_Init 0031                   __size_of_I2C_Master_Read 0035  
                           _usart_protocol 0190                      ??_EEPROM_Read_Integer 0025  
                 __size_of_I2C_Master_Wait 0021                   __size_of_I2C_Master_Stop 0009  
            EEPROM_24C1025_Write_Int@local 0056                                    _pointer 00B6  
            EEPROM_24C1025_Write_Byte@data 003B                                    clrloop0 19E7  
                       __end_of_USART_init 1EAC            __end_of_Package_Usart_is_for_me 1A60  
                       __end_of_USART_putc 1A3B                          ADC_Media_10bits@i 0036  
                     end_of_initialization 003A                   _EEPROM_24C1025_Write_Int 1B49  
                        ??_my_delay_ms_WDT 0024                   _EEPROM_24C1025_Write_Str 06C5  
               ??_I2C_Master_RepeatedStart 0023                            ?_PROCULUS_Delay 0020  
                          my_delay_ms@time 0020            EEPROM_24C1025_Write_Buffer@data 002F  
          EEPROM_24C1025_Write_Buffer@ctrl 0036                  __size_of_I2C_Master_Start 0011  
                __size_of_I2C_Master_Write 000B                          ?_Decodify_Command 0070  
                          ___lldiv@divisor 0020                            ___lldiv@counter 002D  
     EEPROM_24C1025_Read_Buffer_USART@data 002E       EEPROM_24C1025_Read_Buffer_USART@ctrl 0035  
                       ??_Decodify_Command 005F                                  _RCSTAbits 0018  
                         I2C_Master_Init@c 002E                           I2C_Master_Read@a 0023  
                           ?_Send_Reply_OK 0070                  _EEPROM_24C1025_Write_Byte 1A75  
         __size_of_EEPROM_24C1025_Fill_All 003F                                    strlen@s 0020  
                       USART_to_Protocol@i 0022                                  _PORTAbits 0005  
                                _PORTBbits 0006                                  _PORTCbits 0007  
                         _Delay_Led_Memory 00B4               ??_EEPROM_24C1025_Read_Buffer 0030  
            EEPROM_24C1025_Write_Str@range 0032                                  _ROOM_TEMP 181C  
                              ___fladd@grs 004A           __size_of_EEPROM_24C1025_Read_Int 0028  
  EEPROM_24C1025_Read_Buffer_USART@cnt_117 0032           __size_of_EEPROM_24C1025_Read_Str 016C  
                            ___xxtofl@sign 0028        __end_of_EEPROM_24C1025_Write_Buffer 1524  
              _EEPROM_24C1025_Write_Buffer 13BA    EEPROM_24C1025_Read_Buffer_USART@mem_add 0029  
                              ___fldiv@grs 0042                                ___fldiv@rem 003B  
     PROCULUS_Control_Register_Write@vetor 0054           EEPROM_24C1025_Write_Buffer@count 0033  
          EEPROM_24C1025_Write_Int@mem_add 004E           EEPROM_24C1025_Write_Buffer@range 0035  
                        __size_of_ADC_init 000B                    Decodify_Command@tempint 00DC  
                        ?_MediaPlacaVaccum 0070                      PROCULUS_VP_Write@size 0056  
          EEPROM_24C1025_Read_Str@chip_add 0031                                ___flmul@grs 0038  
                       ??_MediaPlacaVaccum 0053                   _PROCULUS_VP_Write_String 1ABA  
                                _TXSTAbits 0098        __size_of_EEPROM_24C1025_Read_Buffer 0170  
                        ?_ADC_Media_10bits 002E                     PROCULUS_Delay@tempo_ms 0020  
                   ??_PROCULUS_Show_Screen 0058                         ??_ADC_Media_10bits 0032  
                           __end_of___flge 113B                      __end_of_USART_put_int 1AA1  
                              _BAUDCTLbits 0187                             __end_of_strcpy 1B2B  
                           __end_of_strlen 1AF0                        start_initialization 0015  
                              __end_of_isr 12C9                                USART_init@i 0026  
                             ??_Send_To_MB 0021   EEPROM_24C1025_Read_Buffer_USART@chip_add 0033  
                        ??_I2C_Master_Init 0032                          ??_I2C_Master_Read 0025  
                        ??_I2C_Master_Wait 0020                          ??_I2C_Master_Stop 0023  
             __end_of_EEPROM_Write_Integer 1CE9           EEPROM_24C1025_Write_Int@chip_add 0055  
                 __CFG_FOSC$INTRC_NOCLKOUT 0000                        Decodify_Command@add 00DA  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 0077                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1BEE                         __end_of_Send_To_MB 1C62  
         __size_of_Package_Usart_is_for_me 0014                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003B         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 002D  
                                ___flmul@b 0029                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00D8                          _PROCULUS_VP_Write 07B8  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 0052  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 1A3B  
                         _I2C_Master_Write 1A15                        ??_PROCULUS_VP_Write 0057  
                           _tempodecorrido 00AA                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1BCC                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1EAC                                   ?___flmul 0029  
                                 ?___flsub 004B                                   ?___fltol 0043  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 1B69                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 09D1                 _EEPROM_24C1025_Read_Buffer 0861  
                                 ?_captura 0020                                  __pstrings 1800  
                    MediaPlacaVaccum@canal 0054                            _my_delay_ms_WDT 1D88  
                  _EEPROM_24C1025_Read_Int 1C11                    _EEPROM_24C1025_Read_Str 1524  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 0054  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 07FF                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1A0A                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 002A                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0036  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 19E6  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 0055                     Decodify_Command@OutPut 00DE  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00B2  
             EEPROM_24C1025_Read_Byte@data 003D                __end_of_EEPROM_Read_Integer 1C8C  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 0392  
                     _EEPROM_Write_Integer 1CB7             EEPROM_24C1025_Read_Int@mem_add 0037  
                                main@reset 0066                 ??_PROCULUS_VP_Write_String 005D  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1BEE  
                           _generic_status 006C                                 _EECON1bits 018C  
                                 _Save_Log 1031                  ??_EEPROM_24C1025_Fill_All 005A  
                      __end_of_my_delay_ms 1D88               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1DC0                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 0261  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003B                    _Package_Usart_is_for_me 1A4C  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1810        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1000  
                          _I2C_Master_Read 1D1C                                   ___xxtofl 113B  
               __size_of_PROCULUS_VP_Write 0047                            _I2C_Master_Wait 1B89  
         EEPROM_24C1025_Read_Byte@chip_add 003C                            _I2C_Master_Stop 19EE  
                __size_of_ADC_Media_10bits 0055                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 1A00  
                                 __ptext11 113B                                   __ptext20 1031  
                                 __ptext12 1000                                   __ptext21 1F95  
                                 __ptext13 0803                                   __ptext30 1DC0  
                                 __ptext22 03D0                                   __ptext14 003E  
                                 __ptext31 1A8B                                   __ptext23 1BEE  
                                 __ptext15 1B0D                                   __ptext40 1A75  
                                 __ptext32 1AF0                                   __ptext24 1ABA  
                                 __ptext16 1EEB                                   __ptext41 1524  
                                 __ptext33 1C8C                                   __ptext25 1AD4  
                                 __ptext17 1C39                                   __ptext50 1B49  
                                 __ptext42 1C11                                   __ptext34 1CB7  
                                 __ptext26 07B8                                   __ptext18 19F7  
                                 __ptext51 13BA                                   __ptext43 1AA1  
                                 __ptext35 1DF8                                   __ptext27 1A60  
                                 __ptext19 1CE9                                   __ptext52 1D88  
                                 __ptext44 0861                                   __ptext36 1B69  
                                 __ptext28 1BCC                                   __ptext53 1A15  
                                 __ptext45 1690                                   __ptext37 1C62  
                                 __ptext29 1E34                                   __ptext54 19EE  
                                 __ptext46 1A2B                                   __ptext38 1BAA  
                                 __ptext55 1A3B                                   __ptext47 1A20  
                                 __ptext39 06C5                                   __ptext56 1B89  
                                 __ptext48 1D1C                                   __ptext57 1A0A  
                                 __ptext49 1EAC                                   __ptext58 11DE  
                        __CFG_BOR4V$BOR40V 0000                         USART_put_int@value 004E  
                           _PT100_CONSTANT 1814                       MediaPlacaVaccum@Temp 0055  
                               strcpy@from 0020                              __size_of_main 00F1  
             EEPROM_24C1025_Fill_All@value 0058                 PROCULUS_VP_Write_String@vp 005A  
                  __end_of_PT100_TRANSLADA 1814        EEPROM_24C1025_Write_Buffer@sizedata 002E  
                              _milisegundo 00B0                             _Delay_Led_Tmr0 0078  
            __size_of_PROCULUS_Show_Screen 0015                        _EEPROM_Write_String 1C8C  
                                 log@coeff 1824                   __end_of_I2C_Master_Start 1A4C  
                 __end_of_I2C_Master_Write 1A20                                 _INTCONbits 000B  
                   __end_of_PT100_CONSTANT 1818                                   isr@tempo 0076  
                     EEPROM_Read_Byte@addr 0022                     EEPROM_Read_String@addr 0025  
                   EEPROM_Read_String@dado 0023                           my_delay_ms_WDT@i 0026  
                                 intlevel1 0000                           ?_PROCULUS_Buzzer 0056  
                        USART_put_int@dado 0051                           _EEPROM_Read_Byte 1BAA  
                              _my_delay_ms 1D51                       ?_EEPROM_Write_String 0025  
                         ___lldiv@dividend 0024                     __size_of_USART_put_int 0016  
             EEPROM_24C1025_Write_Int@data 0052                       EEPROM_Read_Integer@i 002A  
                  EEPROM_Write_String@addr 0027                    EEPROM_Write_String@dado 0025  
                       USART_init@baudrate 0020                                  stringcode 180A  
                               _OSCCONbits 008F      EEPROM_24C1025_Read_Buffer_USART@range 0034  
                ??_Package_Usart_is_for_me 0020                           ?_my_delay_ms_WDT 0020  
                    __end_of_Send_Reply_OK 1A00                    __end_of_I2C_Master_Init 1031  
                  __end_of_I2C_Master_Read 1D51                    __end_of_I2C_Master_Wait 1BAA  
                  __end_of_I2C_Master_Stop 19F7               EEPROM_24C1025_Write_Str@data 002E  
             EEPROM_24C1025_Write_Str@ctrl 0033                ?_EEPROM_24C1025_Read_Buffer 002A  
          EEPROM_24C1025_Fill_All@chip_add 005A                     ??_EEPROM_Write_Integer 0027  
                   __Umul8_16@multiplicand 0020            USART_to_Protocol@usart_protocol 0024  
                         _Decodify_Command 003E                  __size_of_USART_put_string 0033  
                         ___lldiv@quotient 0029                          I2C_Master_Write@d 0023  
                                 strcpy@cp 0023                                   strlen@cp 0022  
                                 strcpy@to 0022                                   stringdir 180A  
                                 stringtab 1800                                _SSPCON2bits 0091  
                        _EEPROM_Write_Byte 1DF8             EEPROM_24C1025_Read_Str@mem_add 0029  
                            ___fladd@signs 0047                         ?_EEPROM_Write_Byte 0020  
                    ??_EEPROM_Write_String 0026                               ___fladd@aexp 0048  
                             ___fladd@bexp 0049          __size_of_EEPROM_24C1025_Read_Byte 0019  
                ?_EEPROM_24C1025_Read_Byte 0037                        EEPROM_Read_String@c 0026  
                     __Umul8_16@multiplier 0028                        ??_EEPROM_Write_Byte 0021  
                        __Umul8_16@product 0024                                 _USART_init 1E70  
