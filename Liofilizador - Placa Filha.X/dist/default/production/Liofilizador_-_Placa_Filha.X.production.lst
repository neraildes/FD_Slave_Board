

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 02 06:54:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103                           
  1104                           	psect	strings
  1105  1800                     __pstrings:	
  1106  1800                     stringtab:	
  1107  1800                     __stringtab:	
  1108                           
  1109                           ;	String table - string pointers are 1 byte each
  1110  1800  1BFF               	btfsc	btemp+1,7
  1111  1801  280A               	ljmp	stringcode
  1112  1802  1383               	bcf	3,7
  1113  1803  187F               	btfsc	btemp+1,0
  1114  1804  1783               	bsf	3,7
  1115  1805  0800               	movf	0,w
  1116  1806  0A84               	incf	4,f
  1117  1807  1903               	skipnz
  1118  1808  0AFF               	incf	btemp+1,f
  1119  1809  0008               	return
  1120  180A                     stringcode:	
  1121  180A                     stringdir:	
  1122  180A  3018               	movlw	high stringdir
  1123  180B  008A               	movwf	10
  1124  180C  0804               	movf	4,w
  1125  180D  0A84               	incf	4,f
  1126  180E  0782               	addwf	2,f
  1127  180F                     __stringbase:	
  1128  180F  3400               	retlw	0
  1129  1810                     __end_of__stringtab:	
  1130  1810                     _PT100_TRANSLADA:	
  1131  1810  3466               	retlw	102
  1132  1811  3466               	retlw	102
  1133  1812  34A6               	retlw	166
  1134  1813  34BF               	retlw	191
  1135  1814                     __end_of_PT100_TRANSLADA:	
  1136  1814                     _PT100_CONSTANT:	
  1137  1814  3414               	retlw	20
  1138  1815  34AE               	retlw	174
  1139  1816  342B               	retlw	43
  1140  1817  34C1               	retlw	193
  1141  1818                     __end_of_PT100_CONSTANT:	
  1142  1818                     _RESISTOR_ROOM_TEMP:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1145  1818  3400               	retlw	0
  1146  1819  3440               	retlw	64
  1147  181A  341C               	retlw	28
  1148  181B  3446               	retlw	70
  1149  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1150  181C                     _ROOM_TEMP:	
  1151                           
  1152                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1153  181C  3466               	retlw	102
  1154  181D  3486               	retlw	134
  1155  181E  3496               	retlw	150
  1156  181F  3443               	retlw	67
  1157  1820                     __end_of_ROOM_TEMP:	
  1158  1820                     _MAX_ADC:	
  1159                           
  1160                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1161  1820  3400               	retlw	0
  1162  1821  34C0               	retlw	192
  1163  1822  347F               	retlw	127
  1164  1823  3444               	retlw	68
  1165  1824                     __end_of_MAX_ADC:	
  1166  1824                     log@coeff:	
  1167  1824  3400               	retlw	0
  1168  1825  3400               	retlw	0
  1169  1826  3400               	retlw	0
  1170  1827  3400               	retlw	0
  1171  1828  34C4               	retlw	196
  1172  1829  34FF               	retlw	255
  1173  182A  347F               	retlw	127
  1174  182B  343F               	retlw	63
  1175  182C  3480               	retlw	128
  1176  182D  34EF               	retlw	239
  1177  182E  34FF               	retlw	255
  1178  182F  34BE               	retlw	190
  1179  1830  3490               	retlw	144
  1180  1831  34E1               	retlw	225
  1181  1832  34A9               	retlw	169
  1182  1833  343E               	retlw	62
  1183  1834  34EC               	retlw	236
  1184  1835  3482               	retlw	130
  1185  1836  3476               	retlw	118
  1186  1837  34BE               	retlw	190
  1187  1838  3482               	retlw	130
  1188  1839  34AD               	retlw	173
  1189  183A  342B               	retlw	43
  1190  183B  343E               	retlw	62
  1191  183C  340E               	retlw	14
  1192  183D  343C               	retlw	60
  1193  183E  34C3               	retlw	195
  1194  183F  34BD               	retlw	189
  1195  1840  3487               	retlw	135
  1196  1841  34D1               	retlw	209
  1197  1842  3413               	retlw	19
  1198  1843  343D               	retlw	61
  1199  1844  3441               	retlw	65
  1200  1845  3478               	retlw	120
  1201  1846  34D3               	retlw	211
  1202  1847  34BB               	retlw	187
  1203  1848                     __end_oflog@coeff:	
  1204  1848                     _BETA:	
  1205                           
  1206                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1207  1848  3400               	retlw	0
  1208  1849  3460               	retlw	96
  1209  184A  3478               	retlw	120
  1210  184B  3445               	retlw	69
  1211  184C                     __end_of_BETA:	
  1212  184C                     _BALANCE_RESISTOR:	
  1213                           
  1214                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1215  184C  3400               	retlw	0
  1216  184D  3440               	retlw	64
  1217  184E  341C               	retlw	28
  1218  184F  3446               	retlw	70
  1219  1850                     __end_of_BALANCE_RESISTOR:	
  1220  0019                     _TXREG	set	25
  1221  0018                     _RCSTAbits	set	24
  1222  001A                     _RCREG	set	26
  1223  000E                     _TMR1L	set	14
  1224  000F                     _TMR1H	set	15
  1225  000C                     _PIR1bits	set	12
  1226  001E                     _ADRESH	set	30
  1227  001F                     _ADCON0bits	set	31
  1228  0005                     _PORTAbits	set	5
  1229  0007                     _PORTCbits	set	7
  1230  0010                     _T1CON	set	16
  1231  000B                     _INTCONbits	set	11
  1232  0006                     _PORTBbits	set	6
  1233  0009                     _PORTE	set	9
  1234  0007                     _PORTC	set	7
  1235  0005                     _PORTA	set	5
  1236  0013                     _SSPBUF	set	19
  1237  0014                     _SSPCON	set	20
  1238  0006                     _PORTB	set	6
  1239  00C4                     _CREN	set	196
  1240  0081                     _TMR1CS	set	129
  1241  0085                     _T1CKPS1	set	133
  1242  0084                     _T1CKPS0	set	132
  1243  008C                     _PIE1bits	set	140
  1244  0099                     _SPBRG	set	153
  1245  0098                     _TXSTAbits	set	152
  1246  009E                     _ADRESL	set	158
  1247  009F                     _ADCON1	set	159
  1248  009F                     _ADCON1bits	set	159
  1249  0095                     _WPUB	set	149
  1250  0081                     _OPTION_REGbits	set	129
  1251  0089                     _TRISE	set	137
  1252  0087                     _TRISC	set	135
  1253  0086                     _TRISB	set	134
  1254  0085                     _TRISA	set	133
  1255  008F                     _OSCCONbits	set	143
  1256  0094                     _SSPSTAT	set	148
  1257  0093                     _SSPADD	set	147
  1258  0091                     _SSPCON2	set	145
  1259  043F                     _TRISC7	set	1087
  1260  043E                     _TRISC6	set	1086
  1261  0460                     _TMR1IE	set	1120
  1262  048C                     _ACKEN	set	1164
  1263  048D                     _ACKDT	set	1165
  1264  048B                     _RCEN	set	1163
  1265  048A                     _PEN	set	1162
  1266  0489                     _RSEN	set	1161
  1267  0488                     _SEN	set	1160
  1268  043C                     _TRISC4	set	1084
  1269  043B                     _TRISC3	set	1083
  1270  010C                     _EEDATA	set	268
  1271  010D                     _EEADR	set	269
  1272  0187                     _BAUDCTLbits	set	391
  1273  018D                     _EECON2	set	397
  1274  018C                     _EECON1bits	set	396
  1275  0189                     _ANSELH	set	393
  1276  0188                     _ANSEL	set	392
  1277  1850                     STR_1:	
  1278  1850  3476               	retlw	118	;'v'
  1279  1851  3431               	retlw	49	;'1'
  1280  1852  342E               	retlw	46	;'.'
  1281  1853  3430               	retlw	48	;'0'
  1282  1854  342E               	retlw	46	;'.'
  1283  1855  3435               	retlw	53	;'5'
  1284  1856  3400               	retlw	0
  1285  1857                     STR_8:	
  1286  1857  344F               	retlw	79	;'O'
  1287  1858  344B               	retlw	75	;'K'
  1288  1859  3400               	retlw	0
  1289  185A                     STR_3:	
  1290  185A  3430               	retlw	48	;'0'
  1291  185B  3400               	retlw	0
  1292  185C                     STR_4:	
  1293  185C  343A               	retlw	58	;':'
  1294  185D  3400               	retlw	0
  1295  185B                     
  1296                           ; #config settings
  1297  0000                     
  1298                           	psect	cinit
  1299  0015                     start_initialization:	
  1300  0015                     __initialization:	
  1301                           
  1302                           ; Clear objects allocated to COMMON
  1303  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1304  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1305  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1306  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1307  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1308                           
  1309                           ; Clear objects allocated to BANK1
  1310  001A  1383               	bcf	3,7	;select IRP bank0
  1311  001B  30CD               	movlw	low __pbssBANK1
  1312  001C  0084               	movwf	4
  1313  001D  30EA               	movlw	low (__pbssBANK1+29)
  1314  001E  160A  158A  2142  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to BANK3
  1317  0023  1783               	bsf	3,7	;select IRP bank2
  1318  0024  3090               	movlw	low __pbssBANK3
  1319  0025  0084               	movwf	4
  1320  0026  30C9               	movlw	low (__pbssBANK3+57)
  1321  0027  160A  158A  2142  120A  118A  	fcall	clear_ram0
  1322                           
  1323                           ; Clear objects allocated to BANK2
  1324  002C  3010               	movlw	low __pbssBANK2
  1325  002D  0084               	movwf	4
  1326  002E  3050               	movlw	low (__pbssBANK2+64)
  1327  002F  160A  158A  2142   	fcall	clear_ram0
  1328  0032                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331  0032                     __end_of__initialization:	
  1332  0032  0183               	clrf	3
  1333  0033  160A  118A  2C43   	ljmp	_main	;jump to C main() function
  1334                           
  1335                           	psect	bssCOMMON
  1336  0078                     __pbssCOMMON:	
  1337  0078                     _Delay_Led_Tmr0:	
  1338  0078                     	ds	2
  1339  007A                     _Delay_Led_Memory:	
  1340  007A                     	ds	2
  1341  007C                     _statuspower_memo:	
  1342  007C                     	ds	1
  1343                           
  1344                           	psect	bssBANK1
  1345  00CD                     __pbssBANK1:	
  1346  00CD                     _Tensao1:	
  1347  00CD                     	ds	4
  1348  00D1                     _Vaccum0:	
  1349  00D1                     	ds	4
  1350  00D5                     _errno:	
  1351  00D5                     	ds	2
  1352  00D7                     _tempodecorrido:	
  1353  00D7                     	ds	2
  1354  00D9                     _count:	
  1355  00D9                     	ds	2
  1356  00DB                     _header:	
  1357  00DB                     	ds	2
  1358  00DD                     _milisegundo:	
  1359  00DD                     	ds	2
  1360  00DF                     _Delay_Led_Usart:	
  1361  00DF                     	ds	2
  1362  00E1                     _pointer:	
  1363  00E1                     	ds	1
  1364  00E2                     _destino:	
  1365  00E2                     	ds	1
  1366  00E3                     _Board_Number:	
  1367  00E3                     	ds	1
  1368  00E4                     _canal:	
  1369  00E4                     	ds	1
  1370  00E5                     _minuto:	
  1371  00E5                     	ds	1
  1372  00E6                     _hora:	
  1373  00E6                     	ds	1
  1374  00E7                     _segundo:	
  1375  00E7                     	ds	1
  1376  00E8                     _statuspower:	
  1377  00E8                     	ds	1
  1378  00E9                     _generic_status:	
  1379  00E9                     	ds	1
  1380                           
  1381                           	psect	bssBANK3
  1382  0190                     __pbssBANK3:	
  1383  0190                     _usart_buffer:	
  1384  0190                     	ds	25
  1385  01A9                     _texto:	
  1386  01A9                     	ds	16
  1387  01B9                     _usart_protocol:	
  1388  01B9                     	ds	16
  1389                           
  1390                           	psect	bssBANK2
  1391  0110                     __pbssBANK2:	
  1392  0110                     _buffer:	
  1393  0110                     	ds	64
  1394                           
  1395                           	psect	clrtext
  1396  1942                     clear_ram0:	
  1397                           ;	Called with FSR containing the base address, and
  1398                           ;	W with the last address+1
  1399                           
  1400  1942  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401  1943                     clrloop0:	
  1402  1943  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403  1944  0A84               	incf	4,f	;increment pointer
  1404  1945  0604               	xorwf	4,w	;XOR with final address
  1405  1946  1903               	btfsc	3,2	;have we reached the end yet?
  1406  1947  3400               	retlw	0	;all done for this memory range, return
  1407  1948  0604               	xorwf	4,w	;XOR again to restore value
  1408  1949  2943               	goto	clrloop0	;do the next byte
  1409                           
  1410                           	psect	cstackBANK1
  1411  00A0                     __pcstackBANK1:	
  1412  00A0                     MediaPlacaVaccum@Valor:	
  1413  00A0                     Decodify_Command@hh:	
  1414                           ; 4 bytes @ 0x0
  1415                           
  1416                           
  1417                           ; 10 bytes @ 0x0
  1418  00A0                     	ds	4
  1419  00A4                     MediaPlacaVaccum@canal:	
  1420                           
  1421                           ; 1 bytes @ 0x4
  1422  00A4                     	ds	1
  1423  00A5                     MediaPlacaVaccum@Temp:	
  1424                           
  1425                           ; 4 bytes @ 0x5
  1426  00A5                     	ds	4
  1427  00A9                     MediaPlacaVaccum@i:	
  1428                           
  1429                           ; 2 bytes @ 0x9
  1430  00A9                     	ds	1
  1431  00AA                     Decodify_Command@mm:	
  1432                           
  1433                           ; 10 bytes @ 0xA
  1434  00AA                     	ds	10
  1435  00B4                     Decodify_Command@ss:	
  1436                           
  1437                           ; 10 bytes @ 0x14
  1438  00B4                     	ds	10
  1439  00BE                     Decodify_Command@dados:	
  1440                           
  1441                           ; 2 bytes @ 0x1E
  1442  00BE                     	ds	2
  1443  00C0                     Decodify_Command@add:	
  1444                           
  1445                           ; 1 bytes @ 0x20
  1446  00C0                     	ds	1
  1447  00C1                     Decodify_Command@tempint:	
  1448                           
  1449                           ; 2 bytes @ 0x21
  1450  00C1                     	ds	2
  1451  00C3                     Decodify_Command@OutPut:	
  1452                           
  1453                           ; 4 bytes @ 0x23
  1454  00C3                     	ds	4
  1455  00C7                     Decodify_Command@tempchar:	
  1456                           
  1457                           ; 1 bytes @ 0x27
  1458  00C7                     	ds	1
  1459  00C8                     Decodify_Command@sizedata:	
  1460                           
  1461                           ; 1 bytes @ 0x28
  1462  00C8                     	ds	1
  1463  00C9                     Decodify_Command@add_24LCxxxx:	
  1464                           
  1465                           ; 4 bytes @ 0x29
  1466  00C9                     	ds	4
  1467                           
  1468                           	psect	cstackCOMMON
  1469  0070                     __pcstackCOMMON:	
  1470  0070                     ?_ADC_init:	
  1471  0070                     ?_MediaPlacaVaccum:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_Decodify_Command:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_USART_to_Protocol:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_Send_To_MB:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_Send_Reply_OK:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_EEPROM_Read_Byte:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_USART_putc:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_Package_Usart_is_for_me:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_I2C_Master_Wait:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_I2C_Master_Start:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_I2C_Master_RepeatedStart:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_I2C_Master_Stop:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_main:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_isr:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ??_isr:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x0
  1518  0070                     	ds	6
  1519  0076                     isr@tempo:	
  1520                           
  1521                           ; 2 bytes @ 0x6
  1522  0076                     	ds	2
  1523                           
  1524                           	psect	cstackBANK0
  1525  0020                     __pcstackBANK0:	
  1526  0020                     ?___flge:	
  1527  0020                     ?_my_delay_ms_WDT:	
  1528                           ; 1 bit 
  1529                           
  1530  0020                     ??_ADC_init:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0020                     ?_USART_init:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0020                     ??_USART_to_Protocol:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0020                     ?_EEPROM_Write_Byte:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0020                     ??_EEPROM_Read_Byte:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0020                     ??_USART_putc:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0020                     ?_strcpy:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0020                     ?_strcat:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0020                     ?_my_delay_ms:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0020                     ??_Package_Usart_is_for_me:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0020                     ?_PROCULUS_Delay:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0020                     ??_I2C_Master_Wait:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0020                     ??_I2C_Master_Start:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0020                     ??_I2C_Master_RepeatedStart:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0020                     ??_I2C_Master_Stop:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0020                     ?_I2C_Master_Write:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0020                     ?_strlen:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ?_captura:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0020                     ?__Umul8_16:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0020                     ?_I2C_Master_Read:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0020                     ?___lwdiv:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0020                     ?___lwmod:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0020                     ?___lldiv:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0020                     EEPROM_Write_Byte@dado:	
  1600                           ; 4 bytes @ 0x0
  1601                           
  1602  0020                     Package_Usart_is_for_me@retorno:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     USART_putc@value:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     strcpy@from:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0020                     __Umul8_16@multiplicand:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0020                     I2C_Master_Write@d:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0020                     I2C_Master_Read@a:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     PROCULUS_Delay@tempo_ms:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     ___lwdiv@divisor:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0020                     ___lwmod@divisor:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0020                     strcat@from:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0020                     my_delay_ms@time:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0020                     my_delay_ms_WDT@time:	
  1636                           ; 4 bytes @ 0x0
  1637                           
  1638  0020                     USART_init@baudrate:	
  1639                           ; 4 bytes @ 0x0
  1640                           
  1641  0020                     ___lldiv@divisor:	
  1642                           ; 4 bytes @ 0x0
  1643                           
  1644  0020                     ___flge@ff1:	
  1645                           ; 4 bytes @ 0x0
  1646                           
  1647                           
  1648                           ; 4 bytes @ 0x0
  1649  0020                     	ds	1
  1650  0021                     ??_Send_To_MB:	
  1651  0021                     ?_USART_put_string:	
  1652                           ; 1 bytes @ 0x1
  1653                           
  1654  0021                     ??_EEPROM_Write_Byte:	
  1655                           ; 1 bytes @ 0x1
  1656                           
  1657  0021                     ?_USART_put_buffer:	
  1658                           ; 1 bytes @ 0x1
  1659                           
  1660  0021                     ??_strcpy:	
  1661                           ; 1 bytes @ 0x1
  1662                           
  1663  0021                     Send_To_MB@size:	
  1664                           ; 1 bytes @ 0x1
  1665                           
  1666  0021                     USART_put_buffer@size:	
  1667                           ; 1 bytes @ 0x1
  1668                           
  1669  0021                     USART_put_string@vetor:	
  1670                           ; 2 bytes @ 0x1
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x1
  1674  0021                     	ds	1
  1675  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1676  0022                     ?_EEPROM_24C1025_Write_Str:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0022                     ??_strlen:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0022                     ??_strcat:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0022                     ??_captura:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0022                     ??_PROCULUS_Delay:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0022                     ??__Umul8_16:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ??_I2C_Master_Write:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     ??_I2C_Master_Read:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     EEPROM_Read_Byte@addr:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     strcpy@to:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     USART_to_Protocol@i:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0022                     ___lwdiv@dividend:	
  1710                           ; 2 bytes @ 0x2
  1711                           
  1712  0022                     ___lwmod@dividend:	
  1713                           ; 2 bytes @ 0x2
  1714                           
  1715  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1716                           ; 2 bytes @ 0x2
  1717                           
  1718  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1719                           ; 4 bytes @ 0x2
  1720                           
  1721                           
  1722                           ; 4 bytes @ 0x2
  1723  0022                     	ds	1
  1724  0023                     ??_USART_put_string:	
  1725  0023                     ?_EEPROM_Read_String:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     ??_USART_put_buffer:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ?_EEPROM_Read_Integer:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     EEPROM_Write_Byte@addr:	
  1735                           ; 2 bytes @ 0x3
  1736                           
  1737  0023                     EEPROM_Read_String@dado:	
  1738                           ; 1 bytes @ 0x3
  1739                           
  1740  0023                     strcat@cp:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0023                     strcpy@cp:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0023                     strlen@cp:	
  1747                           ; 1 bytes @ 0x3
  1748                           
  1749  0023                     USART_put_string@ptr:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x3
  1754  0023                     	ds	1
  1755  0024                     ??_my_delay_ms_WDT:	
  1756  0024                     ??_USART_init:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0024                     ??_EEPROM_Read_String:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0024                     ??_my_delay_ms:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     ??___lwdiv:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     ??___lwmod:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     EEPROM_Write_Byte@last_GIE:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     USART_to_Protocol@usart_protocol:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     strcat@to:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     strlen@s:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     I2C_Master_Read@temp:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786  0024                     PROCULUS_Delay@i:	
  1787                           ; 2 bytes @ 0x4
  1788                           
  1789  0024                     __Umul8_16@product:	
  1790                           ; 2 bytes @ 0x4
  1791                           
  1792  0024                     ___lldiv@dividend:	
  1793                           ; 2 bytes @ 0x4
  1794                           
  1795  0024                     ___flge@ff2:	
  1796                           ; 4 bytes @ 0x4
  1797                           
  1798                           
  1799                           ; 4 bytes @ 0x4
  1800  0024                     	ds	1
  1801  0025                     ??_EEPROM_Read_Integer:	
  1802  0025                     ?_EEPROM_Write_Integer:	
  1803                           ; 1 bytes @ 0x5
  1804                           
  1805  0025                     ??_Send_Reply_OK:	
  1806                           ; 1 bytes @ 0x5
  1807                           
  1808  0025                     ?_EEPROM_Write_String:	
  1809                           ; 1 bytes @ 0x5
  1810                           
  1811  0025                     EEPROM_Write_String@dado:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     EEPROM_Read_String@addr:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     USART_put_buffer@vetor:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     ___lwdiv@counter:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823  0025                     ___lwmod@counter:	
  1824                           ; 1 bytes @ 0x5
  1825                           
  1826  0025                     EEPROM_Write_Integer@dado:	
  1827                           ; 1 bytes @ 0x5
  1828                           
  1829                           
  1830                           ; 2 bytes @ 0x5
  1831  0025                     	ds	1
  1832  0026                     ??_EEPROM_Write_String:	
  1833  0026                     ?_EEPROM_24C1025_Read_Buffer:	
  1834                           ; 1 bytes @ 0x6
  1835                           
  1836  0026                     ?_EEPROM_24C1025_Read_Str:	
  1837                           ; 1 bytes @ 0x6
  1838                           
  1839  0026                     EEPROM_Read_Integer@addr:	
  1840                           ; 1 bytes @ 0x6
  1841                           
  1842  0026                     EEPROM_Read_String@c:	
  1843                           ; 1 bytes @ 0x6
  1844                           
  1845  0026                     USART_init@i:	
  1846                           ; 1 bytes @ 0x6
  1847                           
  1848  0026                     USART_put_buffer@loop:	
  1849                           ; 1 bytes @ 0x6
  1850                           
  1851  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1852                           ; 1 bytes @ 0x6
  1853                           
  1854  0026                     EEPROM_24C1025_Write_Str@data:	
  1855                           ; 1 bytes @ 0x6
  1856                           
  1857  0026                     ___lwdiv@quotient:	
  1858                           ; 1 bytes @ 0x6
  1859                           
  1860  0026                     __Umul8_16@word_mpld:	
  1861                           ; 2 bytes @ 0x6
  1862                           
  1863  0026                     my_delay_ms@i:	
  1864                           ; 2 bytes @ 0x6
  1865                           
  1866  0026                     my_delay_ms_WDT@i:	
  1867                           ; 4 bytes @ 0x6
  1868                           
  1869  0026                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1870                           ; 4 bytes @ 0x6
  1871                           
  1872  0026                     EEPROM_24C1025_Read_Str@mem_add:	
  1873                           ; 4 bytes @ 0x6
  1874                           
  1875                           
  1876                           ; 4 bytes @ 0x6
  1877  0026                     	ds	1
  1878  0027                     ??_EEPROM_Write_Integer:	
  1879  0027                     ??_EEPROM_24C1025_Write_Str:	
  1880                           ; 1 bytes @ 0x7
  1881                           
  1882  0027                     EEPROM_Read_Integer@ptr:	
  1883                           ; 1 bytes @ 0x7
  1884                           
  1885  0027                     EEPROM_Write_String@addr:	
  1886                           ; 1 bytes @ 0x7
  1887                           
  1888  0027                     USART_put_buffer@ptr:	
  1889                           ; 1 bytes @ 0x7
  1890                           
  1891  0027                     EEPROM_24C1025_Write_Buffer@data:	
  1892                           ; 1 bytes @ 0x7
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x7
  1896  0027                     	ds	1
  1897  0028                     ?_utoa:	
  1898  0028                     ??___lldiv:	
  1899                           ; 1 bytes @ 0x8
  1900                           
  1901  0028                     ??___flge:	
  1902                           ; 1 bytes @ 0x8
  1903                           
  1904  0028                     __Umul8_16@multiplier:	
  1905                           ; 1 bytes @ 0x8
  1906                           
  1907  0028                     EEPROM_Read_Integer@result:	
  1908                           ; 1 bytes @ 0x8
  1909                           
  1910  0028                     utoa@val:	
  1911                           ; 2 bytes @ 0x8
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x8
  1915  0028                     	ds	1
  1916  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  1917  0029                     ?___flmul:	
  1918                           ; 1 bytes @ 0x9
  1919                           
  1920  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  1921                           ; 4 bytes @ 0x9
  1922                           
  1923  0029                     ___lldiv@quotient:	
  1924                           ; 1 bytes @ 0x9
  1925                           
  1926  0029                     ___flmul@b:	
  1927                           ; 4 bytes @ 0x9
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x9
  1931  0029                     	ds	1
  1932  002A                     ?_ADC_Max_10Bits:	
  1933  002A                     EEPROM_Write_Integer@ptr:	
  1934                           ; 2 bytes @ 0xA
  1935                           
  1936  002A                     EEPROM_Read_Integer@i:	
  1937                           ; 1 bytes @ 0xA
  1938                           
  1939  002A                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1940                           ; 1 bytes @ 0xA
  1941                           
  1942  002A                     EEPROM_24C1025_Write_Str@range:	
  1943                           ; 1 bytes @ 0xA
  1944                           
  1945  002A                     EEPROM_24C1025_Read_Str@texto:	
  1946                           ; 1 bytes @ 0xA
  1947                           
  1948  002A                     utoa@base:	
  1949                           ; 1 bytes @ 0xA
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0xA
  1953  002A                     	ds	1
  1954  002B                     ??_EEPROM_24C1025_Read_Str:	
  1955  002B                     EEPROM_Write_Integer@addr:	
  1956                           ; 1 bytes @ 0xB
  1957                           
  1958  002B                     EEPROM_24C1025_Write_Buffer@count:	
  1959                           ; 1 bytes @ 0xB
  1960                           
  1961  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  1962                           ; 1 bytes @ 0xB
  1963                           
  1964  002B                     EEPROM_24C1025_Read_Buffer@data:	
  1965                           ; 1 bytes @ 0xB
  1966                           
  1967                           
  1968                           ; 2 bytes @ 0xB
  1969  002B                     	ds	1
  1970  002C                     ??_ADC_Max_10Bits:	
  1971  002C                     ??_utoa:	
  1972                           ; 1 bytes @ 0xC
  1973                           
  1974  002C                     EEPROM_Write_Integer@i:	
  1975                           ; 1 bytes @ 0xC
  1976                           
  1977  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  1978                           ; 1 bytes @ 0xC
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0xC
  1982  002C                     	ds	1
  1983  002D                     ??_EEPROM_24C1025_Read_Buffer:	
  1984  002D                     ADC_Max_10Bits@canal:	
  1985                           ; 1 bytes @ 0xD
  1986                           
  1987  002D                     EEPROM_24C1025_Write_Buffer@range:	
  1988                           ; 1 bytes @ 0xD
  1989                           
  1990  002D                     EEPROM_24C1025_Read_Str@cnt:	
  1991                           ; 1 bytes @ 0xD
  1992                           
  1993  002D                     ___lldiv@counter:	
  1994                           ; 1 bytes @ 0xD
  1995                           
  1996  002D                     utoa@v:	
  1997                           ; 1 bytes @ 0xD
  1998                           
  1999  002D                     ___flmul@a:	
  2000                           ; 2 bytes @ 0xD
  2001                           
  2002                           
  2003                           ; 4 bytes @ 0xD
  2004  002D                     	ds	1
  2005  002E                     ?_I2C_Master_Init:	
  2006  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2007                           ; 1 bytes @ 0xE
  2008                           
  2009  002E                     EEPROM_24C1025_Read_Str@chip_add:	
  2010                           ; 1 bytes @ 0xE
  2011                           
  2012  002E                     ADC_Max_10Bits@Temp:	
  2013                           ; 1 bytes @ 0xE
  2014                           
  2015  002E                     I2C_Master_Init@c:	
  2016                           ; 2 bytes @ 0xE
  2017                           
  2018                           
  2019                           ; 4 bytes @ 0xE
  2020  002E                     	ds	1
  2021  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2022  002F                     ?_EEPROM_24C1025_Fill_All:	
  2023                           ; 1 bytes @ 0xF
  2024                           
  2025  002F                     EEPROM_24C1025_Read_Str@range:	
  2026                           ; 1 bytes @ 0xF
  2027                           
  2028  002F                     EEPROM_24C1025_Fill_All@value:	
  2029                           ; 1 bytes @ 0xF
  2030                           
  2031  002F                     utoa@c:	
  2032                           ; 1 bytes @ 0xF
  2033                           
  2034  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2035                           ; 1 bytes @ 0xF
  2036                           
  2037                           
  2038                           ; 4 bytes @ 0xF
  2039  002F                     	ds	1
  2040  0030                     ??_EEPROM_24C1025_Fill_All:	
  2041  0030                     EEPROM_24C1025_Read_Buffer@cnt_1528:	
  2042                           ; 1 bytes @ 0x10
  2043                           
  2044  0030                     EEPROM_24C1025_Read_Str@ctrl:	
  2045                           ; 1 bytes @ 0x10
  2046                           
  2047  0030                     utoa@buf:	
  2048                           ; 1 bytes @ 0x10
  2049                           
  2050  0030                     ADC_Max_10Bits@value:	
  2051                           ; 1 bytes @ 0x10
  2052                           
  2053                           
  2054                           ; 2 bytes @ 0x10
  2055  0030                     	ds	1
  2056  0031                     ?_itoa:	
  2057  0031                     ??___flmul:	
  2058                           ; 1 bytes @ 0x11
  2059                           
  2060  0031                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2061                           ; 1 bytes @ 0x11
  2062                           
  2063  0031                     itoa@val:	
  2064                           ; 1 bytes @ 0x11
  2065                           
  2066                           
  2067                           ; 2 bytes @ 0x11
  2068  0031                     	ds	1
  2069  0032                     ??_I2C_Master_Init:	
  2070  0032                     ADC_Max_10Bits@i:	
  2071                           ; 1 bytes @ 0x12
  2072                           
  2073  0032                     EEPROM_24C1025_Read_Buffer@range:	
  2074                           ; 1 bytes @ 0x12
  2075                           
  2076                           
  2077                           ; 1 bytes @ 0x12
  2078  0032                     	ds	1
  2079  0033                     ?___xxtofl:	
  2080  0033                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2081                           ; 4 bytes @ 0x13
  2082                           
  2083  0033                     EEPROM_24C1025_Write_Byte@data:	
  2084                           ; 1 bytes @ 0x13
  2085                           
  2086  0033                     EEPROM_24C1025_Fill_All@chip_add:	
  2087                           ; 1 bytes @ 0x13
  2088                           
  2089  0033                     itoa@base:	
  2090                           ; 1 bytes @ 0x13
  2091                           
  2092  0033                     ___xxtofl@val:	
  2093                           ; 2 bytes @ 0x13
  2094                           
  2095                           
  2096                           ; 4 bytes @ 0x13
  2097  0033                     	ds	1
  2098  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2099  0034                     ?_EEPROM_24C1025_Read_Byte:	
  2100                           ; 1 bytes @ 0x14
  2101                           
  2102  0034                     ?_EEPROM_24C1025_Read_Int:	
  2103                           ; 1 bytes @ 0x14
  2104                           
  2105  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2106                           ; 2 bytes @ 0x14
  2107                           
  2108  0034                     EEPROM_24C1025_Fill_All@i:	
  2109                           ; 1 bytes @ 0x14
  2110                           
  2111  0034                     EEPROM_24C1025_Read_Byte@mem_add:	
  2112                           ; 1 bytes @ 0x14
  2113                           
  2114  0034                     EEPROM_24C1025_Read_Int@mem_add:	
  2115                           ; 4 bytes @ 0x14
  2116                           
  2117                           
  2118                           ; 4 bytes @ 0x14
  2119  0034                     	ds	1
  2120  0035                     ??_itoa:	
  2121  0035                     EEPROM_24C1025_Fill_All@page:	
  2122                           ; 1 bytes @ 0x15
  2123                           
  2124                           
  2125                           ; 2 bytes @ 0x15
  2126  0035                     	ds	1
  2127  0036                     ___flmul@sign:	
  2128                           
  2129                           ; 1 bytes @ 0x16
  2130  0036                     	ds	1
  2131  0037                     ??___xxtofl:	
  2132  0037                     ___flmul@aexp:	
  2133                           ; 1 bytes @ 0x17
  2134                           
  2135  0037                     itoa@buf:	
  2136                           ; 1 bytes @ 0x17
  2137                           
  2138                           
  2139                           ; 1 bytes @ 0x17
  2140  0037                     	ds	1
  2141  0038                     ??_EEPROM_24C1025_Read_Byte:	
  2142  0038                     ??_EEPROM_24C1025_Read_Int:	
  2143                           ; 1 bytes @ 0x18
  2144                           
  2145  0038                     EEPROM_24C1025_Read_Byte@chip_add:	
  2146                           ; 1 bytes @ 0x18
  2147                           
  2148  0038                     ___flmul@bexp:	
  2149                           ; 1 bytes @ 0x18
  2150                           
  2151                           
  2152                           ; 1 bytes @ 0x18
  2153  0038                     	ds	1
  2154  0039                     EEPROM_24C1025_Read_Byte@data:	
  2155  0039                     ___flmul@grs:	
  2156                           ; 1 bytes @ 0x19
  2157                           
  2158                           
  2159                           ; 4 bytes @ 0x19
  2160  0039                     	ds	1
  2161  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2162                           
  2163                           ; 1 bytes @ 0x1A
  2164  003A                     	ds	1
  2165  003B                     ___xxtofl@sign:	
  2166  003B                     EEPROM_24C1025_Read_Int@data:	
  2167                           ; 1 bytes @ 0x1B
  2168                           
  2169                           
  2170                           ; 2 bytes @ 0x1B
  2171  003B                     	ds	1
  2172  003C                     ___xxtofl@exp:	
  2173                           
  2174                           ; 1 bytes @ 0x1C
  2175  003C                     	ds	1
  2176  003D                     ___flmul@prod:	
  2177  003D                     ___xxtofl@arg:	
  2178                           ; 4 bytes @ 0x1D
  2179                           
  2180                           
  2181                           ; 4 bytes @ 0x1D
  2182  003D                     	ds	4
  2183  0041                     ?_ADC_Media_10bits:	
  2184  0041                     ?___fldiv:	
  2185                           ; 4 bytes @ 0x21
  2186                           
  2187  0041                     ___flmul@temp:	
  2188                           ; 4 bytes @ 0x21
  2189                           
  2190  0041                     ___fldiv@a:	
  2191                           ; 2 bytes @ 0x21
  2192                           
  2193                           
  2194                           ; 4 bytes @ 0x21
  2195  0041                     	ds	2
  2196  0043                     ?___fltol:	
  2197  0043                     ___fltol@f1:	
  2198                           ; 4 bytes @ 0x23
  2199                           
  2200                           
  2201                           ; 4 bytes @ 0x23
  2202  0043                     	ds	2
  2203  0045                     ??_ADC_Media_10bits:	
  2204  0045                     ___fldiv@b:	
  2205                           ; 1 bytes @ 0x25
  2206                           
  2207                           
  2208                           ; 4 bytes @ 0x25
  2209  0045                     	ds	1
  2210  0046                     ADC_Media_10bits@canal:	
  2211                           
  2212                           ; 1 bytes @ 0x26
  2213  0046                     	ds	1
  2214  0047                     ??___fltol:	
  2215  0047                     ADC_Media_10bits@value:	
  2216                           ; 1 bytes @ 0x27
  2217                           
  2218                           
  2219                           ; 2 bytes @ 0x27
  2220  0047                     	ds	2
  2221  0049                     ??___fldiv:	
  2222  0049                     ADC_Media_10bits@i:	
  2223                           ; 1 bytes @ 0x29
  2224                           
  2225                           
  2226                           ; 1 bytes @ 0x29
  2227  0049                     	ds	1
  2228  004A                     ?___fladd:	
  2229  004A                     ___fladd@b:	
  2230                           ; 4 bytes @ 0x2A
  2231                           
  2232                           
  2233                           ; 4 bytes @ 0x2A
  2234  004A                     	ds	2
  2235  004C                     ___fltol@sign1:	
  2236                           
  2237                           ; 1 bytes @ 0x2C
  2238  004C                     	ds	1
  2239  004D                     ___fltol@exp1:	
  2240                           
  2241                           ; 1 bytes @ 0x2D
  2242  004D                     	ds	1
  2243  004E                     ?_USART_put_int:	
  2244  004E                     ?_EEPROM_24C1025_Write_Int:	
  2245                           ; 1 bytes @ 0x2E
  2246                           
  2247  004E                     USART_put_int@value:	
  2248                           ; 1 bytes @ 0x2E
  2249                           
  2250  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2251                           ; 2 bytes @ 0x2E
  2252                           
  2253  004E                     ___fladd@a:	
  2254                           ; 4 bytes @ 0x2E
  2255                           
  2256  004E                     ___fldiv@rem:	
  2257                           ; 4 bytes @ 0x2E
  2258                           
  2259                           
  2260                           ; 4 bytes @ 0x2E
  2261  004E                     	ds	2
  2262  0050                     ??_USART_put_int:	
  2263                           
  2264                           ; 1 bytes @ 0x30
  2265  0050                     	ds	1
  2266  0051                     USART_put_int@dado:	
  2267                           
  2268                           ; 1 bytes @ 0x31
  2269  0051                     	ds	1
  2270  0052                     ?_PROCULUS_Control_Register_Write:	
  2271  0052                     ?_PROCULUS_VP_Write:	
  2272                           ; 1 bytes @ 0x32
  2273                           
  2274  0052                     ??___fladd:	
  2275                           ; 1 bytes @ 0x32
  2276                           
  2277  0052                     PROCULUS_Control_Register_Write@size:	
  2278                           ; 1 bytes @ 0x32
  2279                           
  2280  0052                     ___fldiv@sign:	
  2281                           ; 1 bytes @ 0x32
  2282                           
  2283  0052                     PROCULUS_VP_Write@vp:	
  2284                           ; 1 bytes @ 0x32
  2285                           
  2286  0052                     EEPROM_24C1025_Write_Int@data:	
  2287                           ; 2 bytes @ 0x32
  2288                           
  2289                           
  2290                           ; 2 bytes @ 0x32
  2291  0052                     	ds	1
  2292  0053                     ??_PROCULUS_Control_Register_Write:	
  2293  0053                     ___fldiv@new_exp:	
  2294                           ; 1 bytes @ 0x33
  2295                           
  2296                           
  2297                           ; 2 bytes @ 0x33
  2298  0053                     	ds	1
  2299  0054                     ??_EEPROM_24C1025_Write_Int:	
  2300  0054                     PROCULUS_Control_Register_Write@vetor:	
  2301                           ; 1 bytes @ 0x34
  2302                           
  2303  0054                     PROCULUS_VP_Write@vetor:	
  2304                           ; 1 bytes @ 0x34
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x34
  2308  0054                     	ds	1
  2309  0055                     PROCULUS_Control_Register_Write@i:	
  2310  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2311                           ; 1 bytes @ 0x35
  2312                           
  2313  0055                     ___fldiv@grs:	
  2314                           ; 1 bytes @ 0x35
  2315                           
  2316                           
  2317                           ; 4 bytes @ 0x35
  2318  0055                     	ds	1
  2319  0056                     ?_PROCULUS_Show_Screen:	
  2320  0056                     ?_PROCULUS_Buzzer:	
  2321                           ; 1 bytes @ 0x36
  2322                           
  2323  0056                     PROCULUS_VP_Write@size:	
  2324                           ; 1 bytes @ 0x36
  2325                           
  2326  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2327                           ; 1 bytes @ 0x36
  2328                           
  2329  0056                     PROCULUS_Show_Screen@screen:	
  2330                           ; 2 bytes @ 0x36
  2331                           
  2332  0056                     EEPROM_24C1025_Write_Int@local:	
  2333                           ; 2 bytes @ 0x36
  2334                           
  2335                           
  2336                           ; 2 bytes @ 0x36
  2337  0056                     	ds	1
  2338  0057                     ??_PROCULUS_VP_Write:	
  2339                           
  2340                           ; 1 bytes @ 0x37
  2341  0057                     	ds	1
  2342  0058                     ?_Save_Log:	
  2343  0058                     ??_PROCULUS_Show_Screen:	
  2344                           ; 1 bytes @ 0x38
  2345                           
  2346  0058                     ??_PROCULUS_Buzzer:	
  2347                           ; 1 bytes @ 0x38
  2348                           
  2349  0058                     Save_Log@add_datalog:	
  2350                           ; 1 bytes @ 0x38
  2351                           
  2352                           
  2353                           ; 4 bytes @ 0x38
  2354  0058                     	ds	1
  2355  0059                     PROCULUS_VP_Write@i:	
  2356  0059                     ___fldiv@bexp:	
  2357                           ; 1 bytes @ 0x39
  2358                           
  2359  0059                     PROCULUS_Buzzer@vetor:	
  2360                           ; 1 bytes @ 0x39
  2361                           
  2362  0059                     PROCULUS_Show_Screen@vetor:	
  2363                           ; 2 bytes @ 0x39
  2364                           
  2365                           
  2366                           ; 3 bytes @ 0x39
  2367  0059                     	ds	1
  2368  005A                     ?_PROCULUS_VP_Write_String:	
  2369  005A                     ___fladd@signs:	
  2370                           ; 1 bytes @ 0x3A
  2371                           
  2372  005A                     ___fldiv@aexp:	
  2373                           ; 1 bytes @ 0x3A
  2374                           
  2375  005A                     PROCULUS_VP_Write_String@vp:	
  2376                           ; 1 bytes @ 0x3A
  2377                           
  2378                           
  2379                           ; 2 bytes @ 0x3A
  2380  005A                     	ds	1
  2381  005B                     ___fladd@aexp:	
  2382                           
  2383                           ; 1 bytes @ 0x3B
  2384  005B                     	ds	1
  2385  005C                     ??_Save_Log:	
  2386  005C                     PROCULUS_VP_Write_String@text:	
  2387                           ; 1 bytes @ 0x3C
  2388                           
  2389  005C                     ___fladd@bexp:	
  2390                           ; 1 bytes @ 0x3C
  2391                           
  2392                           
  2393                           ; 1 bytes @ 0x3C
  2394  005C                     	ds	1
  2395  005D                     ??_PROCULUS_VP_Write_String:	
  2396  005D                     ___fladd@grs:	
  2397                           ; 1 bytes @ 0x3D
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x3D
  2401  005D                     	ds	1
  2402  005E                     ??_Decodify_Command:	
  2403  005E                     ?___flsub:	
  2404                           ; 1 bytes @ 0x3E
  2405                           
  2406  005E                     ___flsub@a:	
  2407                           ; 4 bytes @ 0x3E
  2408                           
  2409                           
  2410                           ; 4 bytes @ 0x3E
  2411  005E                     	ds	4
  2412  0062                     ___flsub@b:	
  2413                           
  2414                           ; 4 bytes @ 0x42
  2415  0062                     	ds	4
  2416  0066                     ??_MediaPlacaVaccum:	
  2417  0066                     ??___flsub:	
  2418                           ; 1 bytes @ 0x46
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x46
  2422  0066                     	ds	4
  2423  006A                     ??_main:	
  2424                           
  2425                           ; 1 bytes @ 0x4A
  2426  006A                     	ds	3
  2427  006D                     main@reset:	
  2428                           
  2429                           ; 2 bytes @ 0x4D
  2430  006D                     	ds	2
  2431                           
  2432                           	psect	maintext
  2433  1443                     __pmaintext:	
  2434 ;;
  2435 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2436 ;;
  2437 ;; *************** function _main *****************
  2438 ;; Defined at:
  2439 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  reset           2   77[BANK0 ] unsigned int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : B00/0
  2450 ;;		On exit  : 300/100
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       2       0       0       0
  2455 ;;      Temps:          0       3       0       0       0
  2456 ;;      Totals:         0       5       0       0       0
  2457 ;;Total ram usage:        5 bytes
  2458 ;; Hardware stack levels required when called:    7
  2459 ;; This function calls:
  2460 ;;		_ADC_init
  2461 ;;		_Decodify_Command
  2462 ;;		_EEPROM_Read_Integer
  2463 ;;		_EEPROM_Write_Integer
  2464 ;;		_I2C_Master_Init
  2465 ;;		_MediaPlacaVaccum
  2466 ;;		_USART_init
  2467 ;;		_my_delay_ms_WDT
  2468 ;; This function is called by:
  2469 ;;		Startup code after reset
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _main
  2475  1443                     _main:	
  2476                           
  2477                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2481  1443  3002               	movlw	2
  2482  1444  1283               	bcf	3,5	;RP0=0, select bank0
  2483  1445  1303               	bcf	3,6	;RP1=0, select bank0
  2484  1446  00EC               	movwf	??_main+2
  2485  1447  3004               	movlw	4
  2486  1448  00EB               	movwf	??_main+1
  2487  1449  30B9               	movlw	185
  2488  144A  00EA               	movwf	??_main
  2489  144B                     u7997:	
  2490  144B  0BEA               	decfsz	??_main,f
  2491  144C  2C4B               	goto	u7997
  2492  144D  0BEB               	decfsz	??_main+1,f
  2493  144E  2C4B               	goto	u7997
  2494  144F  0BEC               	decfsz	??_main+2,f
  2495  1450  2C4B               	goto	u7997
  2496  1451  2C52               	nop2
  2497                           
  2498                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2499  1452  1683               	bsf	3,5	;RP0=1, select bank1
  2500  1453  1303               	bcf	3,6	;RP1=0, select bank1
  2501  1454  160F               	bsf	15,4	;volatile
  2502                           
  2503                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2504  1455  168F               	bsf	15,5	;volatile
  2505                           
  2506                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2507  1456  170F               	bsf	15,6	;volatile
  2508                           
  2509                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2510  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2511  1458  0185               	clrf	5	;volatile
  2512                           
  2513                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2514  1459  0186               	clrf	6	;volatile
  2515                           
  2516                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2517  145A  0187               	clrf	7	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2520  145B  0189               	clrf	9	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2523  145C  30EF               	movlw	239
  2524  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2525  145E  0085               	movwf	5	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2528  145F  300F               	movlw	15
  2529  1460  0086               	movwf	6	;volatile
  2530                           
  2531                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2532  1461  30F0               	movlw	240
  2533  1462  0087               	movwf	7	;volatile
  2534                           
  2535                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2536  1463  30FF               	movlw	255
  2537  1464  0089               	movwf	9	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2540  1465  3011               	movlw	17
  2541  1466  1703               	bsf	3,6	;RP1=1, select bank3
  2542  1467  0088               	movwf	8	;volatile
  2543                           
  2544                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2545  1468  0189               	clrf	9	;volatile
  2546                           
  2547                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2548  1469  1303               	bcf	3,6	;RP1=0, select bank1
  2549  146A  1381               	bcf	1,7	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2552  146B  300F               	movlw	15
  2553  146C  0095               	movwf	21	;volatile
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2556  146D  1283               	bcf	3,5	;RP0=0, select bank0
  2557  146E  1786               	bsf	6,7	;volatile
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2560  146F  1706               	bsf	6,6	;volatile
  2561                           
  2562                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2563  1470  1686               	bsf	6,5	;volatile
  2564                           
  2565                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2566  1471  3000               	movlw	0
  2567  1472  00A3               	movwf	my_delay_ms_WDT@time+3
  2568  1473  3000               	movlw	0
  2569  1474  00A2               	movwf	my_delay_ms_WDT@time+2
  2570  1475  3003               	movlw	3
  2571  1476  00A1               	movwf	my_delay_ms_WDT@time+1
  2572  1477  30E8               	movlw	232
  2573  1478  00A0               	movwf	my_delay_ms_WDT@time
  2574  1479  160A  158A  2561  160A  118A  	fcall	_my_delay_ms_WDT
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2577  147E  1683               	bsf	3,5	;RP0=1, select bank1
  2578  147F  1281               	bcf	1,5	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2581  1480  1581               	bsf	1,3	;volatile
  2582                           
  2583                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2584  1481  1401               	bsf	1,0	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2587  1482  1481               	bsf	1,1	;volatile
  2588                           
  2589                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2590  1483  1501               	bsf	1,2	;volatile
  2591                           
  2592                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2593  1484  128B               	bcf	11,5	;volatile
  2594                           
  2595                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2596  1485  120B               	bcf	11,4	;volatile
  2597                           
  2598                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2599  1486  178B               	bsf	11,7	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2602  1487  170B               	bsf	11,6	;volatile
  2603                           
  2604                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2605  1488  1283               	bcf	3,5	;RP0=0, select bank0
  2606  1489  1610               	bsf	16,4	;volatile
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2609  148A  1690               	bsf	16,5	;volatile
  2610                           
  2611                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2612  148B  1090               	bcf	16,1	;volatile
  2613                           
  2614                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2615  148C  1683               	bsf	3,5	;RP0=1, select bank1
  2616  148D  140C               	bsf	12,0	;volatile
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2619  148E  3001               	movlw	1
  2620  148F  1283               	bcf	3,5	;RP0=0, select bank0
  2621  1490  0090               	movwf	16	;volatile
  2622  1491  0064               	clrwdt	;# 
  2623                           
  2624                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2625  1492  120A  118A  27F5  160A  118A  	fcall	_ADC_init
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2628  1497  3000               	movlw	0
  2629  1498  00B1               	movwf	I2C_Master_Init@c+3
  2630  1499  3001               	movlw	1
  2631  149A  00B0               	movwf	I2C_Master_Init@c+2
  2632  149B  3086               	movlw	134
  2633  149C  00AF               	movwf	I2C_Master_Init@c+1
  2634  149D  30A0               	movlw	160
  2635  149E  00AE               	movwf	I2C_Master_Init@c
  2636  149F  160A  158A  242A  160A  118A  	fcall	_I2C_Master_Init
  2637                           
  2638                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2639  14A4  3000               	movlw	0
  2640  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  2641  14A6  00A3               	movwf	USART_init@baudrate+3
  2642  14A7  3001               	movlw	1
  2643  14A8  00A2               	movwf	USART_init@baudrate+2
  2644  14A9  30C2               	movlw	194
  2645  14AA  00A1               	movwf	USART_init@baudrate+1
  2646  14AB  3000               	movlw	0
  2647  14AC  00A0               	movwf	USART_init@baudrate
  2648  14AD  160A  158A  2611  160A  118A  	fcall	_USART_init
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2651  14B2  3010               	movlw	16
  2652  14B3  160A  158A  237C  160A  118A  	fcall	_EEPROM_Read_Integer
  2653  14B8  0824               	movf	?_EEPROM_Read_Integer+1,w
  2654  14B9  00EE               	movwf	main@reset+1
  2655  14BA  0823               	movf	?_EEPROM_Read_Integer,w
  2656  14BB  00ED               	movwf	main@reset
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2659  14BC  0A6D               	incf	main@reset,w
  2660  14BD  1D03               	skipz
  2661  14BE  2CCB               	goto	l7564
  2662  14BF  0A6E               	incf	main@reset+1,w
  2663  14C0  1D03               	btfss	3,2
  2664  14C1  2CCB               	goto	l7564
  2665  14C2  3000               	movlw	0
  2666  14C3  00A5               	movwf	EEPROM_Write_Integer@dado
  2667  14C4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2668  14C5  3010               	movlw	16
  2669  14C6  160A  158A  245B  160A  118A  	fcall	_EEPROM_Write_Integer
  2670  14CB                     l7564:	
  2671                           
  2672                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2673  14CB  3001               	movlw	1
  2674  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  2675  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  2676  14CE  07ED               	addwf	main@reset,f
  2677  14CF  1803               	skipnc
  2678  14D0  0AEE               	incf	main@reset+1,f
  2679  14D1  3000               	movlw	0
  2680  14D2  07EE               	addwf	main@reset+1,f
  2681                           
  2682                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2683  14D3  086E               	movf	main@reset+1,w
  2684  14D4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2685  14D5  086D               	movf	main@reset,w
  2686  14D6  00A5               	movwf	EEPROM_Write_Integer@dado
  2687  14D7  3010               	movlw	16
  2688  14D8  160A  158A  245B  160A  118A  	fcall	_EEPROM_Write_Integer
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2691  14DD  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2692  14DE  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2695  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  2696  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  2697  14E1  01DF               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2698  14E2  01E0               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2701  14E3  01FA               	clrf	_Delay_Led_Memory	;volatile
  2702  14E4  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2705  14E5  01E7               	clrf	_segundo^(0+128)	;volatile
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2708  14E6  01E6               	clrf	_hora^(0+128)	;volatile
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2711  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  2712  14E8  1007               	bcf	7,0	;volatile
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2715  14E9  1087               	bcf	7,1	;volatile
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2718  14EA  1105               	bcf	5,2	;volatile
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2721  14EB  1185               	bcf	5,3	;volatile
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2724  14EC  0906               	comf	6,w	;volatile
  2725  14ED  390F               	andlw	15
  2726  14EE  00EA               	movwf	??_main
  2727  14EF  086A               	movf	??_main,w
  2728  14F0  1683               	bsf	3,5	;RP0=1, select bank1
  2729  14F1  00E3               	movwf	_Board_Number^(0+128)
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2732  14F2  01E4               	clrf	_canal^(0+128)
  2733  14F3  0AE4               	incf	_canal^(0+128),f
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2736  14F4  1168               	bcf	_statuspower^(0+128),2
  2737  14F5                     l7590:	
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2740  14F5  17E9               	bsf	_generic_status^(0+128),7
  2741                           
  2742                           ;SlaveLiofilizadorVer1.c: 275:          if(++canal==2) canal=0;
  2743  14F6  3001               	movlw	1
  2744  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2745  14F8  00EA               	movwf	??_main
  2746  14F9  086A               	movf	??_main,w
  2747  14FA  1683               	bsf	3,5	;RP0=1, select bank1
  2748  14FB  07E4               	addwf	_canal^(0+128),f
  2749  14FC  3002               	movlw	2
  2750  14FD  0664               	xorwf	_canal^(0+128),w
  2751  14FE  1903               	btfsc	3,2
  2752  14FF  01E4               	clrf	_canal^(0+128)
  2753                           
  2754                           ;SlaveLiofilizadorVer1.c: 276:          MediaPlacaVaccum(canal);
  2755  1500  0864               	movf	_canal^(0+128),w
  2756  1501  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2759  1506  1683               	bsf	3,5	;RP0=1, select bank1
  2760  1507  1C69               	btfss	_generic_status^(0+128),0
  2761  1508  2CF5               	goto	l7590
  2762                           
  2763                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2764  1509  1703               	bsf	3,6	;RP1=1, select bank3
  2765  150A  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2766  150B  1303               	bcf	3,6	;RP1=0, select bank1
  2767  150C  00DC               	movwf	(_header+1)^(0+128)
  2768  150D  1703               	bsf	3,6	;RP1=1, select bank3
  2769  150E  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2770  150F  1303               	bcf	3,6	;RP1=0, select bank1
  2771  1510  00DB               	movwf	_header^(0+128)
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2774  1511  30BB               	movlw	187
  2775  1512  065B               	xorwf	_header^(0+128),w
  2776  1513  30AA               	movlw	170
  2777  1514  1903               	skipnz
  2778  1515  065C               	xorwf	(_header+1)^(0+128),w
  2779  1516  1D03               	btfss	3,2
  2780  1517  2CF5               	goto	l7590
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2783  1518  1703               	bsf	3,6	;RP1=1, select bank3
  2784  1519  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2785  151A  1283               	bcf	3,5	;RP0=0, select bank0
  2786  151B  1303               	bcf	3,6	;RP1=0, select bank0
  2787  151C  00EA               	movwf	??_main
  2788  151D  086A               	movf	??_main,w
  2789  151E  1683               	bsf	3,5	;RP0=1, select bank1
  2790  151F  00E2               	movwf	_destino^(0+128)
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2793  1520  0862               	movf	_destino^(0+128),w
  2794  1521  0663               	xorwf	_Board_Number^(0+128),w
  2795  1522  1D03               	btfss	3,2
  2796  1523  0A62               	incf	_destino^(0+128),w
  2797  1524  1D03               	btfss	3,2
  2798  1525  2CF5               	goto	l7590
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2801  1526  3014               	movlw	20
  2802  1527  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2803  1528  3000               	movlw	0
  2804  1529  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2805                           
  2806                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2807  152A  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2808                           
  2809                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2810  152F  1683               	bsf	3,5	;RP0=1, select bank1
  2811  1530  1069               	bcf	_generic_status^(0+128),0
  2812                           
  2813                           ;SlaveLiofilizadorVer1.c: 297:             }
  2814  1531  2CF5               	goto	l7590
  2815  1532                     __end_of_main:	
  2816                           
  2817                           	psect	text1
  2818  1D61                     __ptext1:	
  2819 ;; *************** function _my_delay_ms_WDT *****************
  2820 ;; Defined at:
  2821 ;;		line 13 in file "my_delay.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  time            4    0[BANK0 ] long 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  i               4    6[BANK0 ] long 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, btemp+1
  2830 ;; Tracked objects:
  2831 ;;		On entry : 300/0
  2832 ;;		On exit  : 300/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       4       0       0       0
  2836 ;;      Locals:         0       4       0       0       0
  2837 ;;      Temps:          0       2       0       0       0
  2838 ;;      Totals:         0      10       0       0       0
  2839 ;;Total ram usage:       10 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _my_delay_ms_WDT
  2851  1D61                     _my_delay_ms_WDT:	
  2852                           
  2853                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
  2857  1D61  3000               	movlw	0
  2858  1D62  00A9               	movwf	my_delay_ms_WDT@i+3
  2859  1D63  3000               	movlw	0
  2860  1D64  00A8               	movwf	my_delay_ms_WDT@i+2
  2861  1D65  3000               	movlw	0
  2862  1D66  00A7               	movwf	my_delay_ms_WDT@i+1
  2863  1D67  3000               	movlw	0
  2864  1D68  00A6               	movwf	my_delay_ms_WDT@i
  2865  1D69                     l7142:	
  2866  1D69  0829               	movf	my_delay_ms_WDT@i+3,w
  2867  1D6A  3A80               	xorlw	128
  2868  1D6B  00FF               	movwf	127
  2869  1D6C  0823               	movf	my_delay_ms_WDT@time+3,w
  2870  1D6D  3A80               	xorlw	128
  2871  1D6E  027F               	subwf	127,w
  2872  1D6F  1D03               	skipz
  2873  1D70  2D7B               	goto	u7703
  2874  1D71  0822               	movf	my_delay_ms_WDT@time+2,w
  2875  1D72  0228               	subwf	my_delay_ms_WDT@i+2,w
  2876  1D73  1D03               	skipz
  2877  1D74  2D7B               	goto	u7703
  2878  1D75  0821               	movf	my_delay_ms_WDT@time+1,w
  2879  1D76  0227               	subwf	my_delay_ms_WDT@i+1,w
  2880  1D77  1D03               	skipz
  2881  1D78  2D7B               	goto	u7703
  2882  1D79  0820               	movf	my_delay_ms_WDT@time,w
  2883  1D7A  0226               	subwf	my_delay_ms_WDT@i,w
  2884  1D7B                     u7703:	
  2885  1D7B  1803               	btfsc	3,0
  2886  1D7C  0008               	return
  2887  1D7D  0064               	clrwdt	;# 
  2888                           
  2889                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2890  1D7E  3003               	movlw	3
  2891  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2892  1D80  1303               	bcf	3,6	;RP1=0, select bank0
  2893  1D81  00A5               	movwf	??_my_delay_ms_WDT+1
  2894  1D82  3097               	movlw	151
  2895  1D83  00A4               	movwf	??_my_delay_ms_WDT
  2896  1D84                     u8007:	
  2897  1D84  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2898  1D85  2D84               	goto	u8007
  2899  1D86  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2900  1D87  2D84               	goto	u8007
  2901                           
  2902                           ;my_delay.c: 19:             }
  2903  1D88  3001               	movlw	1
  2904  1D89  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1D8A  1303               	bcf	3,6	;RP1=0, select bank0
  2906  1D8B  07A6               	addwf	my_delay_ms_WDT@i,f
  2907  1D8C  3000               	movlw	0
  2908  1D8D  1803               	skipnc
  2909  1D8E  3001               	movlw	1
  2910  1D8F  07A7               	addwf	my_delay_ms_WDT@i+1,f
  2911  1D90  3000               	movlw	0
  2912  1D91  1803               	skipnc
  2913  1D92  3001               	movlw	1
  2914  1D93  07A8               	addwf	my_delay_ms_WDT@i+2,f
  2915  1D94  3000               	movlw	0
  2916  1D95  1803               	skipnc
  2917  1D96  3001               	movlw	1
  2918  1D97  07A9               	addwf	my_delay_ms_WDT@i+3,f
  2919  1D98  2D69               	goto	l7142
  2920  1D99                     __end_of_my_delay_ms_WDT:	
  2921                           
  2922                           	psect	text2
  2923  1E11                     __ptext2:	
  2924 ;; *************** function _USART_init *****************
  2925 ;; Defined at:
  2926 ;;		line 18 in file "usart.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  i               1    6[BANK0 ] unsigned char 
  2931 ;;  erro            1    0        unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 300/0
  2938 ;;		On exit  : 300/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       4       0       0       0
  2942 ;;      Locals:         0       2       0       0       0
  2943 ;;      Temps:          0       1       0       0       0
  2944 ;;      Totals:         0       7       0       0       0
  2945 ;;Total ram usage:        7 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _USART_init
  2957  1E11                     _USART_init:	
  2958                           
  2959                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2963  1E11  304B               	movlw	75
  2964  1E12  0621               	xorwf	USART_init@baudrate+1,w
  2965  1E13  0420               	iorwf	USART_init@baudrate,w
  2966  1E14  0422               	iorwf	USART_init@baudrate+2,w
  2967  1E15  0423               	iorwf	USART_init@baudrate+3,w
  2968  1E16  1D03               	btfss	3,2
  2969  1E17  2E22               	goto	l7162
  2970                           
  2971                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2972  1E18  1798               	bsf	24,7	;volatile
  2973                           
  2974                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2975  1E19  1618               	bsf	24,4	;volatile
  2976                           
  2977                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2978  1E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2979  1E1B  1518               	bsf	24,2	;volatile
  2980                           
  2981                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2982  1E1C  1218               	bcf	24,4	;volatile
  2983                           
  2984                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2985  1E1D  1318               	bcf	24,6	;volatile
  2986                           
  2987                           ;usart.c: 32:           SPBRG =12;
  2988  1E1E  300C               	movlw	12
  2989  1E1F  0099               	movwf	25	;volatile
  2990                           
  2991                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2992  1E20  170B               	bsf	11,6	;volatile
  2993  1E21  2E3B               	goto	L1
  2994  1E22                     l7162:	
  2995                           ;usart.c: 35:           }
  2996                           
  2997                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2998                           
  2999  1E22  30C2               	movlw	194
  3000  1E23  0621               	xorwf	USART_init@baudrate+1,w
  3001  1E24  1D03               	skipz
  3002  1E25  2E3C               	goto	l7182
  3003  1E26  0322               	decf	USART_init@baudrate+2,w
  3004  1E27  0420               	iorwf	USART_init@baudrate,w
  3005  1E28  0423               	iorwf	USART_init@baudrate+3,w
  3006  1E29  1D03               	btfss	3,2
  3007  1E2A  2E3C               	goto	l7182
  3008                           
  3009                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  3010  1E2B  3010               	movlw	16
  3011  1E2C  1683               	bsf	3,5	;RP0=1, select bank1
  3012  1E2D  0099               	movwf	25	;volatile
  3013                           
  3014                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  3015  1E2E  1703               	bsf	3,6	;RP1=1, select bank3
  3016  1E2F  1587               	bsf	7,3	;volatile
  3017                           
  3018                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  3019  1E30  1303               	bcf	3,6	;RP1=0, select bank1
  3020  1E31  1518               	bsf	24,2	;volatile
  3021                           
  3022                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  3023  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  3024  1E33  1798               	bsf	24,7	;volatile
  3025                           
  3026                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  3027  1E34  1683               	bsf	3,5	;RP0=1, select bank1
  3028  1E35  1218               	bcf	24,4	;volatile
  3029                           
  3030                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  3031  1E36  1318               	bcf	24,6	;volatile
  3032                           
  3033                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3034  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  3035  1E38  1618               	bsf	24,4	;volatile
  3036                           
  3037                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3038  1E39  170B               	bsf	11,6	;volatile
  3039                           
  3040                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3041  1E3A  1683               	bsf	3,5	;RP0=1, select bank1
  3042  1E3B                     L1:	
  3043  1E3B  168C               	bsf	12,5	;volatile
  3044  1E3C                     l7182:	
  3045                           
  3046                           ;usart.c: 68:      TRISC6= 1;
  3047  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  3048  1E3D  1707               	bsf	7,6	;volatile
  3049                           
  3050                           ;usart.c: 69:      TRISC7= 1;
  3051  1E3E  1787               	bsf	7,7	;volatile
  3052                           
  3053                           ;usart.c: 71:      CREN=0;
  3054  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  3055  1E40  1218               	bcf	24,4	;volatile
  3056                           
  3057                           ;usart.c: 72:      CREN=1;
  3058  1E41  1618               	bsf	24,4	;volatile
  3059                           
  3060                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3061  1E42  01A6               	clrf	USART_init@i
  3062  1E43                     l7196:	
  3063  1E43  081A               	movf	26,w	;volatile
  3064  1E44  3001               	movlw	1
  3065  1E45  00A4               	movwf	??_USART_init
  3066  1E46  0824               	movf	??_USART_init,w
  3067  1E47  07A6               	addwf	USART_init@i,f
  3068  1E48  300F               	movlw	15
  3069  1E49  0226               	subwf	USART_init@i,w
  3070  1E4A  1803               	btfsc	3,0
  3071  1E4B  0008               	return
  3072  1E4C  2E43               	goto	l7196
  3073  1E4D                     __end_of_USART_init:	
  3074                           
  3075                           	psect	text3
  3076  0D69                     __ptext3:	
  3077 ;; *************** function _MediaPlacaVaccum *****************
  3078 ;; Defined at:
  3079 ;;		line 789 in file "SlaveLiofilizadorVer1.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  canal           1    wreg     unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  canal           1    4[BANK1 ] unsigned char 
  3084 ;;  Temp            4    5[BANK1 ] float 
  3085 ;;  Valor           4    0[BANK1 ] float 
  3086 ;;  i               2    9[BANK1 ] unsigned int 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 300/100
  3093 ;;		On exit  : 200/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0      11       0       0
  3098 ;;      Temps:          0       4       0       0       0
  3099 ;;      Totals:         0       4      11       0       0
  3100 ;;Total ram usage:       15 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    3
  3103 ;; This function calls:
  3104 ;;		_ADC_Max_10Bits
  3105 ;;		_ADC_Media_10bits
  3106 ;;		_Package_Usart_is_for_me
  3107 ;;		___fladd
  3108 ;;		___fldiv
  3109 ;;		___flge
  3110 ;;		___flmul
  3111 ;;		___flsub
  3112 ;;		___xxtofl
  3113 ;;		_my_delay_ms
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _MediaPlacaVaccum
  3121  0D69                     _MediaPlacaVaccum:	
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3125                           ;MediaPlacaVaccum@canal stored from wreg
  3126  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3127                           
  3128                           ;SlaveLiofilizadorVer1.c: 790:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 791:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 795:      if(canal==0)
  3129  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3130  0D6B  1D03               	btfss	3,2
  3131  0D6C  2F0F               	goto	l303
  3132                           
  3133                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=1;
  3134  0D6D  161F               	bsf	31,4	;volatile
  3135                           
  3136                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=1;
  3137  0D6E  169F               	bsf	31,5	;volatile
  3138                           
  3139                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3140  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3141  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3143  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3144  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3145  0D74  081F               	movf	31,w	;volatile
  3146  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3147  0D76  39C3               	andlw	-61
  3148  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3149  0D78  009F               	movwf	31	;volatile
  3150                           
  3151                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(10);
  3152  0D79  3000               	movlw	0
  3153  0D7A  00A3               	movwf	my_delay_ms@time+3
  3154  0D7B  3000               	movlw	0
  3155  0D7C  00A2               	movwf	my_delay_ms@time+2
  3156  0D7D  3000               	movlw	0
  3157  0D7E  00A1               	movwf	my_delay_ms@time+1
  3158  0D7F  300A               	movlw	10
  3159  0D80  00A0               	movwf	my_delay_ms@time
  3160  0D81  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3161                           
  3162                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3163  0D86  3000               	movlw	0
  3164  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3165  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3166  0D89  3000               	movlw	0
  3167  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3168  0D8B  3000               	movlw	0
  3169  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3170  0D8D  3000               	movlw	0
  3171  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3172                           
  3173                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3174  0D8F  3001               	movlw	1
  3175  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3176  0D91  3000               	movlw	0
  3177  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3178  0D93                     l7218:	
  3179                           
  3180                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 805:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3181  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3182  0D94  160A  158A  268B  120A  158A  	fcall	_ADC_Media_10bits
  3183  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3184  0D9A  00CD               	movwf	___fladd@b+3
  3185  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3186  0D9C  00CC               	movwf	___fladd@b+2
  3187  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3188  0D9E  00CB               	movwf	___fladd@b+1
  3189  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3190  0DA0  00CA               	movwf	___fladd@b
  3191  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3193  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0DA4  00D1               	movwf	___fladd@a+3
  3195  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3197  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0DA8  00D0               	movwf	___fladd@a+2
  3199  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3201  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0DAC  00CF               	movwf	___fladd@a+1
  3203  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3205  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DB0  00CE               	movwf	___fladd@a
  3207  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3208  0DB6  084D               	movf	?___fladd+3,w
  3209  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3211  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0DBA  084C               	movf	?___fladd+2,w
  3213  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3215  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0DBE  084B               	movf	?___fladd+1,w
  3217  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3219  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0DC2  084A               	movf	?___fladd,w
  3221  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3223                           
  3224                           ;SlaveLiofilizadorVer1.c: 806:            if(Package_Usart_is_for_me()==1) break;
  3225  0DC5  160A  158A  21C7  120A  158A  	fcall	_Package_Usart_is_for_me
  3226  0DCA  3A01               	xorlw	1
  3227  0DCB  1903               	btfsc	3,2
  3228  0DCC  2DDB               	goto	l7226
  3229                           
  3230                           ;SlaveLiofilizadorVer1.c: 807:            }
  3231  0DCD  3001               	movlw	1
  3232  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3233  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3234  0DD0  1803               	skipnc
  3235  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3236  0DD2  3000               	movlw	0
  3237  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3238  0DD4  3000               	movlw	0
  3239  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3240  0DD6  300F               	movlw	15
  3241  0DD7  1903               	skipnz
  3242  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3243  0DD9  1C03               	skipc
  3244  0DDA  2D93               	goto	l7218
  3245  0DDB                     l7226:	
  3246                           
  3247                           ;SlaveLiofilizadorVer1.c: 808:        if(i<10)
  3248  0DDB  3000               	movlw	0
  3249  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3251  0DDE  300A               	movlw	10
  3252  0DDF  1903               	skipnz
  3253  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3254  0DE1  1C03               	btfss	3,0
  3255  0DE2  0008               	return
  3256                           
  3257                           ;SlaveLiofilizadorVer1.c: 814:        if(i==15)
  3258  0DE3  300F               	movlw	15
  3259  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3260  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3261  0DE6  1D03               	btfss	3,2
  3262  0DE7  2DF2               	goto	l7234
  3263                           
  3264                           ;SlaveLiofilizadorVer1.c: 815:          Temp/=(i-1);
  3265  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3266  0DE9  3EFF               	addlw	255
  3267  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0DEB  00B3               	movwf	___xxtofl@val
  3269  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3271  0DEE  1803               	skipnc
  3272  0DEF  3E01               	addlw	1
  3273  0DF0  3EFF               	addlw	255
  3274  0DF1  2DF7               	goto	L2
  3275  0DF2                     l7234:	
  3276                           
  3277                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i);
  3278  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3279  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0DF4  00B3               	movwf	___xxtofl@val
  3281  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3283  0DF7                     L2:	
  3284  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0DF8  00B4               	movwf	___xxtofl@val+1
  3286  0DF9  01B5               	clrf	___xxtofl@val+2
  3287  0DFA  01B6               	clrf	___xxtofl@val+3
  3288  0DFB  3000               	movlw	0
  3289  0DFC  160A  118A  21CC  120A  158A  	fcall	___xxtofl
  3290  0E01  0836               	movf	?___xxtofl+3,w
  3291  0E02  00C4               	movwf	___fldiv@a+3
  3292  0E03  0835               	movf	?___xxtofl+2,w
  3293  0E04  00C3               	movwf	___fldiv@a+2
  3294  0E05  0834               	movf	?___xxtofl+1,w
  3295  0E06  00C2               	movwf	___fldiv@a+1
  3296  0E07  0833               	movf	?___xxtofl,w
  3297  0E08  00C1               	movwf	___fldiv@a
  3298  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3300  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0E0C  00C8               	movwf	___fldiv@b+3
  3302  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3304  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E10  00C7               	movwf	___fldiv@b+2
  3306  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3308  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E14  00C6               	movwf	___fldiv@b+1
  3310  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3312  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E18  00C5               	movwf	___fldiv@b
  3314  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3315  0E1E  0844               	movf	?___fldiv+3,w
  3316  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3318  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0E22  0843               	movf	?___fldiv+2,w
  3320  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3322  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E26  0842               	movf	?___fldiv+1,w
  3324  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3326  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0E2A  0841               	movf	?___fldiv,w
  3328  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3330                           
  3331                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0 =1023.0-Temp;
  3332  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3333  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0E2F  00E1               	movwf	___flsub@a+3
  3335  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3337  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0E33  00E0               	movwf	___flsub@a+2
  3339  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3341  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0E37  00DF               	movwf	___flsub@a+1
  3343  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3345  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0E3B  00DE               	movwf	___flsub@a
  3347  0E3C  3044               	movlw	68
  3348  0E3D  00E5               	movwf	___flsub@b+3
  3349  0E3E  307F               	movlw	127
  3350  0E3F  00E4               	movwf	___flsub@b+2
  3351  0E40  30C0               	movlw	192
  3352  0E41  00E3               	movwf	___flsub@b+1
  3353  0E42  3000               	movlw	0
  3354  0E43  00E2               	movwf	___flsub@b
  3355  0E44  160A  158A  224B  120A  158A  	fcall	___flsub
  3356  0E49  0861               	movf	?___flsub+3,w
  3357  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0E4B  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3359  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0E4D  0860               	movf	?___flsub+2,w
  3361  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0E4F  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3363  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0E51  085F               	movf	?___flsub+1,w
  3365  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0E53  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3367  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E55  085E               	movf	?___flsub,w
  3369  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E57  00D1               	movwf	_Vaccum0^(0+128)
  3371                           
  3372                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=Vaccum0;
  3373  0E58  0854               	movf	(_Vaccum0+3)^(0+128),w
  3374  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0E5A  00AC               	movwf	___flmul@b+3
  3376  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0E5C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3378  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0E5E  00AB               	movwf	___flmul@b+2
  3380  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0E60  0852               	movf	(_Vaccum0+1)^(0+128),w
  3382  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0E62  00AA               	movwf	___flmul@b+1
  3384  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0E64  0851               	movf	_Vaccum0^(0+128),w
  3386  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0E66  00A9               	movwf	___flmul@b
  3388  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0E68  0854               	movf	(_Vaccum0+3)^(0+128),w
  3390  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E6A  00B0               	movwf	___flmul@a+3
  3392  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0E6C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3394  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0E6E  00AF               	movwf	___flmul@a+2
  3396  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0E70  0852               	movf	(_Vaccum0+1)^(0+128),w
  3398  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0E72  00AE               	movwf	___flmul@a+1
  3400  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0E74  0851               	movf	_Vaccum0^(0+128),w
  3402  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0E76  00AD               	movwf	___flmul@a
  3404  0E77  120A  118A  24B9  120A  158A  	fcall	___flmul
  3405  0E7C  082C               	movf	?___flmul+3,w
  3406  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0E7E  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3408  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0E80  082B               	movf	?___flmul+2,w
  3410  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0E82  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3412  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E84  082A               	movf	?___flmul+1,w
  3414  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0E86  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3416  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0E88  0829               	movf	?___flmul,w
  3418  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0E8A  00D1               	movwf	_Vaccum0^(0+128)
  3420                           
  3421                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0*=0.00222;
  3422  0E8B  303B               	movlw	59
  3423  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0E8D  00AC               	movwf	___flmul@b+3
  3425  0E8E  3011               	movlw	17
  3426  0E8F  00AB               	movwf	___flmul@b+2
  3427  0E90  307D               	movlw	125
  3428  0E91  00AA               	movwf	___flmul@b+1
  3429  0E92  306B               	movlw	107
  3430  0E93  00A9               	movwf	___flmul@b
  3431  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3432  0E95  0854               	movf	(_Vaccum0+3)^(0+128),w
  3433  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0E97  00B0               	movwf	___flmul@a+3
  3435  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0E99  0853               	movf	(_Vaccum0+2)^(0+128),w
  3437  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0E9B  00AF               	movwf	___flmul@a+2
  3439  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0E9D  0852               	movf	(_Vaccum0+1)^(0+128),w
  3441  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0E9F  00AE               	movwf	___flmul@a+1
  3443  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0EA1  0851               	movf	_Vaccum0^(0+128),w
  3445  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0EA3  00AD               	movwf	___flmul@a
  3447  0EA4  120A  118A  24B9  120A  158A  	fcall	___flmul
  3448  0EA9  082C               	movf	?___flmul+3,w
  3449  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3450  0EAB  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3451  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0EAD  082B               	movf	?___flmul+2,w
  3453  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0EAF  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3455  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0EB1  082A               	movf	?___flmul+1,w
  3457  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0EB3  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3459  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0EB5  0829               	movf	?___flmul,w
  3461  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0EB7  00D1               	movwf	_Vaccum0^(0+128)
  3463                           
  3464                           ;SlaveLiofilizadorVer1.c: 822:        Vaccum0+=150;
  3465  0EB8  3043               	movlw	67
  3466  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0EBA  00CD               	movwf	___fladd@b+3
  3468  0EBB  3016               	movlw	22
  3469  0EBC  00CC               	movwf	___fladd@b+2
  3470  0EBD  3000               	movlw	0
  3471  0EBE  00CB               	movwf	___fladd@b+1
  3472  0EBF  3000               	movlw	0
  3473  0EC0  00CA               	movwf	___fladd@b
  3474  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0EC2  0854               	movf	(_Vaccum0+3)^(0+128),w
  3476  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0EC4  00D1               	movwf	___fladd@a+3
  3478  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0EC6  0853               	movf	(_Vaccum0+2)^(0+128),w
  3480  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0EC8  00D0               	movwf	___fladd@a+2
  3482  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0ECA  0852               	movf	(_Vaccum0+1)^(0+128),w
  3484  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0ECC  00CF               	movwf	___fladd@a+1
  3486  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0ECE  0851               	movf	_Vaccum0^(0+128),w
  3488  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0ED0  00CE               	movwf	___fladd@a
  3490  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3491  0ED6  084D               	movf	?___fladd+3,w
  3492  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0ED8  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3494  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0EDA  084C               	movf	?___fladd+2,w
  3496  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0EDC  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3498  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0EDE  084B               	movf	?___fladd+1,w
  3500  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0EE0  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3502  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0EE2  084A               	movf	?___fladd,w
  3504  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0EE4  00D1               	movwf	_Vaccum0^(0+128)
  3506                           
  3507                           ;SlaveLiofilizadorVer1.c: 824:        if(Vaccum0>2000)Vaccum0=2000;
  3508  0EE5  3044               	movlw	68
  3509  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0EE7  00A3               	movwf	___flge@ff1+3
  3511  0EE8  30FA               	movlw	250
  3512  0EE9  00A2               	movwf	___flge@ff1+2
  3513  0EEA  3000               	movlw	0
  3514  0EEB  00A1               	movwf	___flge@ff1+1
  3515  0EEC  3000               	movlw	0
  3516  0EED  00A0               	movwf	___flge@ff1
  3517  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0EEF  0854               	movf	(_Vaccum0+3)^(0+128),w
  3519  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0EF1  00A7               	movwf	___flge@ff2+3
  3521  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0EF3  0853               	movf	(_Vaccum0+2)^(0+128),w
  3523  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0EF5  00A6               	movwf	___flge@ff2+2
  3525  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0EF7  0852               	movf	(_Vaccum0+1)^(0+128),w
  3527  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0EF9  00A5               	movwf	___flge@ff2+1
  3529  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3530  0EFB  0851               	movf	_Vaccum0^(0+128),w
  3531  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0EFD  00A4               	movwf	___flge@ff2
  3533  0EFE  160A  118A  2139  120A  158A  	fcall	___flge
  3534  0F03  1803               	btfsc	3,0
  3535  0F04  0008               	return
  3536  0F05  3044               	movlw	68
  3537  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0F07  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3539  0F08  30FA               	movlw	250
  3540  0F09  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3541  0F0A  3000               	movlw	0
  3542  0F0B  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3543  0F0C  3000               	movlw	0
  3544  0F0D  00D1               	movwf	_Vaccum0^(0+128)
  3545  0F0E  0008               	return
  3546  0F0F                     l303:	
  3547                           ;SlaveLiofilizadorVer1.c: 827:      else
  3548                           
  3549                           
  3550                           ;SlaveLiofilizadorVer1.c: 828:        {;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.
      +                          VCFG0=0;
  3551  0F0F  121F               	bcf	31,4	;volatile
  3552                           
  3553                           ;SlaveLiofilizadorVer1.c: 830:        ADCON1bits.VCFG1=0;
  3554  0F10  129F               	bcf	31,5	;volatile
  3555                           
  3556                           ;SlaveLiofilizadorVer1.c: 831:        ADCON0bits.CHS=canal;
  3557  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3558  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3560  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3561  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3562  0F16  081F               	movf	31,w	;volatile
  3563  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3564  0F18  39C3               	andlw	-61
  3565  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3566  0F1A  009F               	movwf	31	;volatile
  3567                           
  3568                           ;SlaveLiofilizadorVer1.c: 832:        my_delay_ms(10);
  3569  0F1B  3000               	movlw	0
  3570  0F1C  00A3               	movwf	my_delay_ms@time+3
  3571  0F1D  3000               	movlw	0
  3572  0F1E  00A2               	movwf	my_delay_ms@time+2
  3573  0F1F  3000               	movlw	0
  3574  0F20  00A1               	movwf	my_delay_ms@time+1
  3575  0F21  300A               	movlw	10
  3576  0F22  00A0               	movwf	my_delay_ms@time
  3577  0F23  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3578                           
  3579                           ;SlaveLiofilizadorVer1.c: 833:        Temp=0;
  3580  0F28  3000               	movlw	0
  3581  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3582  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3583  0F2B  3000               	movlw	0
  3584  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3585  0F2D  3000               	movlw	0
  3586  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3587  0F2F  3000               	movlw	0
  3588  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3589                           
  3590                           ;SlaveLiofilizadorVer1.c: 835:        for(i=1;i<15;i++)
  3591  0F31  3001               	movlw	1
  3592  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3593  0F33  3000               	movlw	0
  3594  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3595  0F35                     l7252:	
  3596                           
  3597                           ;SlaveLiofilizadorVer1.c: 836:            {;SlaveLiofilizadorVer1.c: 837:            Val
      +                          or=ADC_Max_10Bits(canal);
  3598  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3599  0F36  160A  158A  264D  120A  158A  	fcall	_ADC_Max_10Bits
  3600  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3601  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3602  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3603  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3604  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3605  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3606  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3607  0F42  00B6               	movwf	___xxtofl@val+3
  3608  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3609  0F44  00B5               	movwf	___xxtofl@val+2
  3610  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3611  0F46  00B4               	movwf	___xxtofl@val+1
  3612  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3613  0F48  00B3               	movwf	___xxtofl@val
  3614  0F49  3000               	movlw	0
  3615  0F4A  160A  118A  21CC  120A  158A  	fcall	___xxtofl
  3616  0F4F  0836               	movf	?___xxtofl+3,w
  3617  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3619  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0F53  0835               	movf	?___xxtofl+2,w
  3621  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3623  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0F57  0834               	movf	?___xxtofl+1,w
  3625  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3627  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0F5B  0833               	movf	?___xxtofl,w
  3629  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3631                           
  3632                           ;SlaveLiofilizadorVer1.c: 838:            if(Valor>Temp) Temp=Valor;
  3633  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3634  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0F60  00A3               	movwf	___flge@ff1+3
  3636  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3637  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3638  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0F64  00A2               	movwf	___flge@ff1+2
  3640  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3642  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0F68  00A1               	movwf	___flge@ff1+1
  3644  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3646  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0F6C  00A0               	movwf	___flge@ff1
  3648  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3650  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0F70  00A7               	movwf	___flge@ff2+3
  3652  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3654  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0F74  00A6               	movwf	___flge@ff2+2
  3656  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3657  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3658  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0F78  00A5               	movwf	___flge@ff2+1
  3660  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3661  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3662  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0F7C  00A4               	movwf	___flge@ff2
  3664  0F7D  160A  118A  2139  120A  158A  	fcall	___flge
  3665  0F82  1803               	btfsc	3,0
  3666  0F83  2F8D               	goto	l7258
  3667  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3668  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3669  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3670  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3671  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3672  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3673  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3674  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3675  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3676  0F8D                     l7258:	
  3677                           
  3678                           ;SlaveLiofilizadorVer1.c: 839:            if(Package_Usart_is_for_me()==1) break;
  3679  0F8D  160A  158A  21C7  120A  158A  	fcall	_Package_Usart_is_for_me
  3680  0F92  3A01               	xorlw	1
  3681  0F93  1903               	btfsc	3,2
  3682  0F94  2FA3               	goto	l7264
  3683                           
  3684                           ;SlaveLiofilizadorVer1.c: 840:            }
  3685  0F95  3001               	movlw	1
  3686  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3687  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3688  0F98  1803               	skipnc
  3689  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3690  0F9A  3000               	movlw	0
  3691  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3692  0F9C  3000               	movlw	0
  3693  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3694  0F9E  300F               	movlw	15
  3695  0F9F  1903               	skipnz
  3696  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3697  0FA1  1C03               	skipc
  3698  0FA2  2F35               	goto	l7252
  3699  0FA3                     l7264:	
  3700                           
  3701                           ;SlaveLiofilizadorVer1.c: 841:         if(i<10)
  3702  0FA3  3000               	movlw	0
  3703  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3705  0FA6  300A               	movlw	10
  3706  0FA7  1903               	skipnz
  3707  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3708  0FA9  1C03               	btfss	3,0
  3709  0FAA  0008               	return
  3710                           
  3711                           ;SlaveLiofilizadorVer1.c: 846:         Tensao1 =Temp*0.318296;
  3712  0FAB  303E               	movlw	62
  3713  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0FAD  00AC               	movwf	___flmul@b+3
  3715  0FAE  30A2               	movlw	162
  3716  0FAF  00AB               	movwf	___flmul@b+2
  3717  0FB0  30F7               	movlw	247
  3718  0FB1  00AA               	movwf	___flmul@b+1
  3719  0FB2  30B1               	movlw	177
  3720  0FB3  00A9               	movwf	___flmul@b
  3721  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3722  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3723  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0FB7  00B0               	movwf	___flmul@a+3
  3725  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3727  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FBB  00AF               	movwf	___flmul@a+2
  3729  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3731  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0FBF  00AE               	movwf	___flmul@a+1
  3733  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3735  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0FC3  00AD               	movwf	___flmul@a
  3737  0FC4  120A  118A  24B9  120A  158A  	fcall	___flmul
  3738  0FC9  082C               	movf	?___flmul+3,w
  3739  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0FCB  00D0               	movwf	(_Tensao1+3)^(0+128)
  3741  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0FCD  082B               	movf	?___flmul+2,w
  3743  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3744  0FCF  00CF               	movwf	(_Tensao1+2)^(0+128)
  3745  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0FD1  082A               	movf	?___flmul+1,w
  3747  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0FD3  00CE               	movwf	(_Tensao1+1)^(0+128)
  3749  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0FD5  0829               	movf	?___flmul,w
  3751  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0FD7  00CD               	movwf	_Tensao1^(0+128)
  3753                           
  3754                           ;SlaveLiofilizadorVer1.c: 847:         if(Tensao1<15) Tensao1=0;
  3755  0FD8  0850               	movf	(_Tensao1+3)^(0+128),w
  3756  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0FDA  00A3               	movwf	___flge@ff1+3
  3758  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3759  0FDC  084F               	movf	(_Tensao1+2)^(0+128),w
  3760  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0FDE  00A2               	movwf	___flge@ff1+2
  3762  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0FE0  084E               	movf	(_Tensao1+1)^(0+128),w
  3764  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0FE2  00A1               	movwf	___flge@ff1+1
  3766  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3767  0FE4  084D               	movf	_Tensao1^(0+128),w
  3768  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0FE6  00A0               	movwf	___flge@ff1
  3770  0FE7  3041               	movlw	65
  3771  0FE8  00A7               	movwf	___flge@ff2+3
  3772  0FE9  3070               	movlw	112
  3773  0FEA  00A6               	movwf	___flge@ff2+2
  3774  0FEB  3000               	movlw	0
  3775  0FEC  00A5               	movwf	___flge@ff2+1
  3776  0FED  3000               	movlw	0
  3777  0FEE  00A4               	movwf	___flge@ff2
  3778  0FEF  160A  118A  2139  120A  158A  	fcall	___flge
  3779  0FF4  1803               	btfsc	3,0
  3780  0FF5  0008               	return
  3781  0FF6  3000               	movlw	0
  3782  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3783  0FF8  00D0               	movwf	(_Tensao1+3)^(0+128)
  3784  0FF9  3000               	movlw	0
  3785  0FFA  00CF               	movwf	(_Tensao1+2)^(0+128)
  3786  0FFB  3000               	movlw	0
  3787  0FFC  00CE               	movwf	(_Tensao1+1)^(0+128)
  3788  0FFD  3000               	movlw	0
  3789  0FFE  00CD               	movwf	_Tensao1^(0+128)
  3790  0FFF  0008               	return
  3791  1000                     __end_of_MediaPlacaVaccum:	
  3792                           
  3793                           	psect	text4
  3794  1A4B                     __ptext4:	
  3795 ;; *************** function ___flsub *****************
  3796 ;; Defined at:
  3797 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  a               4   62[BANK0 ] void 
  3800 ;;  b               4   66[BANK0 ] void 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  4   62[BANK0 ] void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 300/0
  3809 ;;		On exit  : 300/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       8       0       0       0
  3813 ;;      Locals:         0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         0       8       0       0       0
  3816 ;;Total ram usage:        8 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    2
  3819 ;; This function calls:
  3820 ;;		___fladd
  3821 ;; This function is called by:
  3822 ;;		_MediaPlacaVaccum
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function ___flsub
  3828  1A4B                     ___flsub:	
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3832  1A4B  3080               	movlw	128
  3833  1A4C  06E1               	xorwf	___flsub@a+3,f
  3834  1A4D  0865               	movf	___flsub@b+3,w
  3835  1A4E  00CD               	movwf	___fladd@b+3
  3836  1A4F  0864               	movf	___flsub@b+2,w
  3837  1A50  00CC               	movwf	___fladd@b+2
  3838  1A51  0863               	movf	___flsub@b+1,w
  3839  1A52  00CB               	movwf	___fladd@b+1
  3840  1A53  0862               	movf	___flsub@b,w
  3841  1A54  00CA               	movwf	___fladd@b
  3842  1A55  0861               	movf	___flsub@a+3,w
  3843  1A56  00D1               	movwf	___fladd@a+3
  3844  1A57  0860               	movf	___flsub@a+2,w
  3845  1A58  00D0               	movwf	___fladd@a+2
  3846  1A59  085F               	movf	___flsub@a+1,w
  3847  1A5A  00CF               	movwf	___fladd@a+1
  3848  1A5B  085E               	movf	___flsub@a,w
  3849  1A5C  00CE               	movwf	___fladd@a
  3850  1A5D  120A  158A  233C   	fcall	___fladd
  3851  1A60  084D               	movf	?___fladd+3,w
  3852  1A61  00E1               	movwf	?___flsub+3
  3853  1A62  084C               	movf	?___fladd+2,w
  3854  1A63  00E0               	movwf	?___flsub+2
  3855  1A64  084B               	movf	?___fladd+1,w
  3856  1A65  00DF               	movwf	?___flsub+1
  3857  1A66  084A               	movf	?___fladd,w
  3858  1A67  00DE               	movwf	?___flsub
  3859  1A68  0008               	return
  3860  1A69                     __end_of___flsub:	
  3861                           
  3862                           	psect	text5
  3863  0B3C                     __ptext5:	
  3864 ;; *************** function ___fladd *****************
  3865 ;; Defined at:
  3866 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  b               4   42[BANK0 ] void 
  3869 ;;  a               4   46[BANK0 ] void 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  grs             1   61[BANK0 ] unsigned char 
  3872 ;;  bexp            1   60[BANK0 ] unsigned char 
  3873 ;;  aexp            1   59[BANK0 ] unsigned char 
  3874 ;;  signs           1   58[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  4   42[BANK0 ] unsigned char 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0, btemp+1
  3879 ;; Tracked objects:
  3880 ;;		On entry : 300/0
  3881 ;;		On exit  : 300/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       8       0       0       0
  3885 ;;      Locals:         0       4       0       0       0
  3886 ;;      Temps:          0       8       0       0       0
  3887 ;;      Totals:         0      20       0       0       0
  3888 ;;Total ram usage:       20 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_MediaPlacaVaccum
  3895 ;;		___flsub
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function ___fladd
  3901  0B3C                     ___fladd:	
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3905  0B3C  084D               	movf	___fladd@b+3,w
  3906  0B3D  3980               	andlw	128
  3907  0B3E  00D2               	movwf	??___fladd
  3908  0B3F  0852               	movf	??___fladd,w
  3909  0B40  00DA               	movwf	___fladd@signs
  3910  0B41  084D               	movf	___fladd@b+3,w
  3911  0B42  00D2               	movwf	??___fladd
  3912  0B43  0752               	addwf	??___fladd,w
  3913  0B44  00D3               	movwf	??___fladd+1
  3914  0B45  0853               	movf	??___fladd+1,w
  3915  0B46  00DC               	movwf	___fladd@bexp
  3916  0B47  1BCC               	btfsc	___fladd@b+2,7
  3917  0B48  145C               	bsf	___fladd@bexp,0
  3918  0B49  085C               	movf	___fladd@bexp,w
  3919  0B4A  1903               	btfsc	3,2
  3920  0B4B  2B5A               	goto	l6120
  3921  0B4C  0A5C               	incf	___fladd@bexp,w
  3922  0B4D  1D03               	btfss	3,2
  3923  0B4E  2B57               	goto	l6116
  3924  0B4F  3000               	movlw	0
  3925  0B50  00CD               	movwf	___fladd@b+3
  3926  0B51  3000               	movlw	0
  3927  0B52  00CC               	movwf	___fladd@b+2
  3928  0B53  3000               	movlw	0
  3929  0B54  00CB               	movwf	___fladd@b+1
  3930  0B55  3000               	movlw	0
  3931  0B56  00CA               	movwf	___fladd@b
  3932  0B57                     l6116:	
  3933  0B57  17CC               	bsf	___fladd@b+2,7
  3934  0B58  01CD               	clrf	___fladd@b+3
  3935  0B59  2B62               	goto	l6122
  3936  0B5A                     l6120:	
  3937  0B5A  3000               	movlw	0
  3938  0B5B  00CD               	movwf	___fladd@b+3
  3939  0B5C  3000               	movlw	0
  3940  0B5D  00CC               	movwf	___fladd@b+2
  3941  0B5E  3000               	movlw	0
  3942  0B5F  00CB               	movwf	___fladd@b+1
  3943  0B60  3000               	movlw	0
  3944  0B61  00CA               	movwf	___fladd@b
  3945  0B62                     l6122:	
  3946  0B62  0851               	movf	___fladd@a+3,w
  3947  0B63  3980               	andlw	128
  3948  0B64  00D2               	movwf	??___fladd
  3949  0B65  0852               	movf	??___fladd,w
  3950  0B66  00DB               	movwf	___fladd@aexp
  3951  0B67  085B               	movf	___fladd@aexp,w
  3952  0B68  065A               	xorwf	___fladd@signs,w
  3953  0B69  1D03               	btfss	3,2
  3954  0B6A  175A               	bsf	___fladd@signs,6
  3955  0B6B  0851               	movf	___fladd@a+3,w
  3956  0B6C  00D2               	movwf	??___fladd
  3957  0B6D  0752               	addwf	??___fladd,w
  3958  0B6E  00D3               	movwf	??___fladd+1
  3959  0B6F  0853               	movf	??___fladd+1,w
  3960  0B70  00DB               	movwf	___fladd@aexp
  3961  0B71  1BD0               	btfsc	___fladd@a+2,7
  3962  0B72  145B               	bsf	___fladd@aexp,0
  3963  0B73  085B               	movf	___fladd@aexp,w
  3964  0B74  1903               	btfsc	3,2
  3965  0B75  2B84               	goto	l6144
  3966  0B76  0A5B               	incf	___fladd@aexp,w
  3967  0B77  1D03               	btfss	3,2
  3968  0B78  2B81               	goto	l6140
  3969  0B79  3000               	movlw	0
  3970  0B7A  00D1               	movwf	___fladd@a+3
  3971  0B7B  3000               	movlw	0
  3972  0B7C  00D0               	movwf	___fladd@a+2
  3973  0B7D  3000               	movlw	0
  3974  0B7E  00CF               	movwf	___fladd@a+1
  3975  0B7F  3000               	movlw	0
  3976  0B80  00CE               	movwf	___fladd@a
  3977  0B81                     l6140:	
  3978  0B81  17D0               	bsf	___fladd@a+2,7
  3979  0B82  01D1               	clrf	___fladd@a+3
  3980  0B83  2B8C               	goto	l1246
  3981  0B84                     l6144:	
  3982  0B84  3000               	movlw	0
  3983  0B85  00D1               	movwf	___fladd@a+3
  3984  0B86  3000               	movlw	0
  3985  0B87  00D0               	movwf	___fladd@a+2
  3986  0B88  3000               	movlw	0
  3987  0B89  00CF               	movwf	___fladd@a+1
  3988  0B8A  3000               	movlw	0
  3989  0B8B  00CE               	movwf	___fladd@a
  3990  0B8C                     l1246:	
  3991  0B8C  085C               	movf	___fladd@bexp,w
  3992  0B8D  025B               	subwf	___fladd@aexp,w
  3993  0B8E  1803               	skipnc
  3994  0B8F  2BD2               	goto	l6180
  3995  0B90  1F5A               	btfss	___fladd@signs,6
  3996  0B91  2B96               	goto	l6150
  3997  0B92  3080               	movlw	128
  3998  0B93  00D2               	movwf	??___fladd
  3999  0B94  0852               	movf	??___fladd,w
  4000  0B95  06DA               	xorwf	___fladd@signs,f
  4001  0B96                     l6150:	
  4002  0B96  085C               	movf	___fladd@bexp,w
  4003  0B97  00D2               	movwf	??___fladd
  4004  0B98  0852               	movf	??___fladd,w
  4005  0B99  00DD               	movwf	___fladd@grs
  4006  0B9A  085B               	movf	___fladd@aexp,w
  4007  0B9B  00D2               	movwf	??___fladd
  4008  0B9C  0852               	movf	??___fladd,w
  4009  0B9D  00DC               	movwf	___fladd@bexp
  4010  0B9E  085D               	movf	___fladd@grs,w
  4011  0B9F  00D2               	movwf	??___fladd
  4012  0BA0  0852               	movf	??___fladd,w
  4013  0BA1  00DB               	movwf	___fladd@aexp
  4014  0BA2  084A               	movf	___fladd@b,w
  4015  0BA3  00D2               	movwf	??___fladd
  4016  0BA4  0852               	movf	??___fladd,w
  4017  0BA5  00DD               	movwf	___fladd@grs
  4018  0BA6  084E               	movf	___fladd@a,w
  4019  0BA7  00D2               	movwf	??___fladd
  4020  0BA8  0852               	movf	??___fladd,w
  4021  0BA9  00CA               	movwf	___fladd@b
  4022  0BAA  085D               	movf	___fladd@grs,w
  4023  0BAB  00D2               	movwf	??___fladd
  4024  0BAC  0852               	movf	??___fladd,w
  4025  0BAD  00CE               	movwf	___fladd@a
  4026  0BAE  084B               	movf	___fladd@b+1,w
  4027  0BAF  00D2               	movwf	??___fladd
  4028  0BB0  0852               	movf	??___fladd,w
  4029  0BB1  00DD               	movwf	___fladd@grs
  4030  0BB2  084F               	movf	___fladd@a+1,w
  4031  0BB3  00D2               	movwf	??___fladd
  4032  0BB4  0852               	movf	??___fladd,w
  4033  0BB5  00CB               	movwf	___fladd@b+1
  4034  0BB6  085D               	movf	___fladd@grs,w
  4035  0BB7  00D2               	movwf	??___fladd
  4036  0BB8  0852               	movf	??___fladd,w
  4037  0BB9  00CF               	movwf	___fladd@a+1
  4038  0BBA  084C               	movf	___fladd@b+2,w
  4039  0BBB  00D2               	movwf	??___fladd
  4040  0BBC  0852               	movf	??___fladd,w
  4041  0BBD  00DD               	movwf	___fladd@grs
  4042  0BBE  0850               	movf	___fladd@a+2,w
  4043  0BBF  00D2               	movwf	??___fladd
  4044  0BC0  0852               	movf	??___fladd,w
  4045  0BC1  00CC               	movwf	___fladd@b+2
  4046  0BC2  085D               	movf	___fladd@grs,w
  4047  0BC3  00D2               	movwf	??___fladd
  4048  0BC4  0852               	movf	??___fladd,w
  4049  0BC5  00D0               	movwf	___fladd@a+2
  4050  0BC6  084D               	movf	___fladd@b+3,w
  4051  0BC7  00D2               	movwf	??___fladd
  4052  0BC8  0852               	movf	??___fladd,w
  4053  0BC9  00DD               	movwf	___fladd@grs
  4054  0BCA  0851               	movf	___fladd@a+3,w
  4055  0BCB  00D2               	movwf	??___fladd
  4056  0BCC  0852               	movf	??___fladd,w
  4057  0BCD  00CD               	movwf	___fladd@b+3
  4058  0BCE  085D               	movf	___fladd@grs,w
  4059  0BCF  00D2               	movwf	??___fladd
  4060  0BD0  0852               	movf	??___fladd,w
  4061  0BD1  00D1               	movwf	___fladd@a+3
  4062  0BD2                     l6180:	
  4063  0BD2  01DD               	clrf	___fladd@grs
  4064  0BD3  085B               	movf	___fladd@aexp,w
  4065  0BD4  00D2               	movwf	??___fladd
  4066  0BD5  01D3               	clrf	??___fladd+1
  4067  0BD6  0853               	movf	??___fladd+1,w
  4068  0BD7  00D5               	movwf	??___fladd+3
  4069  0BD8  085C               	movf	___fladd@bexp,w
  4070  0BD9  0252               	subwf	??___fladd,w
  4071  0BDA  00D4               	movwf	??___fladd+2
  4072  0BDB  1C03               	skipc
  4073  0BDC  03D5               	decf	??___fladd+3,f
  4074  0BDD  0855               	movf	??___fladd+3,w
  4075  0BDE  3A80               	xorlw	128
  4076  0BDF  00FF               	movwf	127
  4077  0BE0  3080               	movlw	128
  4078  0BE1  027F               	subwf	127,w
  4079  0BE2  1D03               	skipz
  4080  0BE3  2BE6               	goto	u6045
  4081  0BE4  301A               	movlw	26
  4082  0BE5  0254               	subwf	??___fladd+2,w
  4083  0BE6                     u6045:	
  4084  0BE6  1C03               	skipc
  4085  0BE7  2C1F               	goto	l6198
  4086  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4087  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4088  0BEA  084D               	movf	___fladd@b+3,w
  4089  0BEB  044C               	iorwf	___fladd@b+2,w
  4090  0BEC  044B               	iorwf	___fladd@b+1,w
  4091  0BED  044A               	iorwf	___fladd@b,w
  4092  0BEE  1903               	btfsc	3,2
  4093  0BEF  2BF2               	goto	u6050
  4094  0BF0  3001               	movlw	1
  4095  0BF1  2BF3               	goto	u6060
  4096  0BF2                     u6050:	
  4097  0BF2  3000               	movlw	0
  4098  0BF3                     u6060:	
  4099  0BF3  00D2               	movwf	??___fladd
  4100  0BF4  0852               	movf	??___fladd,w
  4101  0BF5  00DD               	movwf	___fladd@grs
  4102  0BF6  3000               	movlw	0
  4103  0BF7  00CD               	movwf	___fladd@b+3
  4104  0BF8  3000               	movlw	0
  4105  0BF9  00CC               	movwf	___fladd@b+2
  4106  0BFA  3000               	movlw	0
  4107  0BFB  00CB               	movwf	___fladd@b+1
  4108  0BFC  3000               	movlw	0
  4109  0BFD  00CA               	movwf	___fladd@b
  4110  0BFE  085B               	movf	___fladd@aexp,w
  4111  0BFF  00D2               	movwf	??___fladd
  4112  0C00  0852               	movf	??___fladd,w
  4113  0C01  00DC               	movwf	___fladd@bexp
  4114  0C02  2C25               	goto	l1250
  4115  0C03                     l1252:	
  4116  0C03  1C5D               	btfss	___fladd@grs,0
  4117  0C04  2C0E               	goto	l6188
  4118  0C05  085D               	movf	___fladd@grs,w
  4119  0C06  00D2               	movwf	??___fladd
  4120  0C07  1003               	clrc
  4121  0C08  0C52               	rrf	??___fladd,w
  4122  0C09  3801               	iorlw	1
  4123  0C0A  00D3               	movwf	??___fladd+1
  4124  0C0B  0853               	movf	??___fladd+1,w
  4125  0C0C  00DD               	movwf	___fladd@grs
  4126  0C0D  2C10               	goto	l6190
  4127  0C0E                     l6188:	
  4128  0C0E  1003               	clrc
  4129  0C0F  0CDD               	rrf	___fladd@grs,f
  4130  0C10                     l6190:	
  4131  0C10  184A               	btfsc	___fladd@b,0
  4132  0C11  17DD               	bsf	___fladd@grs,7
  4133  0C12  3001               	movlw	1
  4134  0C13  00D2               	movwf	??___fladd
  4135  0C14                     u6095:	
  4136  0C14  0D4D               	rlf	___fladd@b+3,w
  4137  0C15  0CCD               	rrf	___fladd@b+3,f
  4138  0C16  0CCC               	rrf	___fladd@b+2,f
  4139  0C17  0CCB               	rrf	___fladd@b+1,f
  4140  0C18  0CCA               	rrf	___fladd@b,f
  4141  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4142  0C1A  2C14               	goto	u6095
  4143  0C1B  3001               	movlw	1
  4144  0C1C  00D2               	movwf	??___fladd
  4145  0C1D  0852               	movf	??___fladd,w
  4146  0C1E  07DC               	addwf	___fladd@bexp,f
  4147  0C1F                     l6198:	
  4148  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0C21  085B               	movf	___fladd@aexp,w
  4151  0C22  025C               	subwf	___fladd@bexp,w
  4152  0C23  1C03               	skipc
  4153  0C24  2C03               	goto	l1252
  4154  0C25                     l1250:	
  4155  0C25  1B5A               	btfsc	___fladd@signs,6
  4156  0C26  2C66               	goto	l6224
  4157  0C27  085C               	movf	___fladd@bexp,w
  4158  0C28  1D03               	btfss	3,2
  4159  0C29  2C33               	goto	l6206
  4160  0C2A  3000               	movlw	0
  4161  0C2B  00CD               	movwf	?___fladd+3
  4162  0C2C  3000               	movlw	0
  4163  0C2D  00CC               	movwf	?___fladd+2
  4164  0C2E  3000               	movlw	0
  4165  0C2F  00CB               	movwf	?___fladd+1
  4166  0C30  3000               	movlw	0
  4167  0C31  00CA               	movwf	?___fladd
  4168  0C32  0008               	return
  4169  0C33                     l6206:	
  4170  0C33  084E               	movf	___fladd@a,w
  4171  0C34  07CA               	addwf	___fladd@b,f
  4172  0C35  084F               	movf	___fladd@a+1,w
  4173  0C36  1103               	clrz
  4174  0C37  1803               	skipnc
  4175  0C38  3E01               	addlw	1
  4176  0C39  1D03               	btfss	3,2
  4177  0C3A  07CB               	addwf	___fladd@b+1,f
  4178  0C3B  0850               	movf	___fladd@a+2,w
  4179  0C3C  1103               	clrz
  4180  0C3D  1803               	skipnc
  4181  0C3E  3E01               	addlw	1
  4182  0C3F  1D03               	btfss	3,2
  4183  0C40  07CC               	addwf	___fladd@b+2,f
  4184  0C41  0851               	movf	___fladd@a+3,w
  4185  0C42  1103               	clrz
  4186  0C43  1803               	skipnc
  4187  0C44  3E01               	addlw	1
  4188  0C45  1D03               	btfss	3,2
  4189  0C46  07CD               	addwf	___fladd@b+3,f
  4190  0C47  1C4D               	btfss	___fladd@b+3,0
  4191  0C48  2D08               	goto	l6258
  4192  0C49  1C5D               	btfss	___fladd@grs,0
  4193  0C4A  2C54               	goto	l6214
  4194  0C4B  085D               	movf	___fladd@grs,w
  4195  0C4C  00D2               	movwf	??___fladd
  4196  0C4D  1003               	clrc
  4197  0C4E  0C52               	rrf	??___fladd,w
  4198  0C4F  3801               	iorlw	1
  4199  0C50  00D3               	movwf	??___fladd+1
  4200  0C51  0853               	movf	??___fladd+1,w
  4201  0C52  00DD               	movwf	___fladd@grs
  4202  0C53  2C56               	goto	l6216
  4203  0C54                     l6214:	
  4204  0C54  1003               	clrc
  4205  0C55  0CDD               	rrf	___fladd@grs,f
  4206  0C56                     l6216:	
  4207  0C56  184A               	btfsc	___fladd@b,0
  4208  0C57  17DD               	bsf	___fladd@grs,7
  4209  0C58  3001               	movlw	1
  4210  0C59  00D2               	movwf	??___fladd
  4211  0C5A                     u6175:	
  4212  0C5A  0D4D               	rlf	___fladd@b+3,w
  4213  0C5B  0CCD               	rrf	___fladd@b+3,f
  4214  0C5C  0CCC               	rrf	___fladd@b+2,f
  4215  0C5D  0CCB               	rrf	___fladd@b+1,f
  4216  0C5E  0CCA               	rrf	___fladd@b,f
  4217  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4218  0C60  2C5A               	goto	u6175
  4219  0C61  3001               	movlw	1
  4220  0C62  00D2               	movwf	??___fladd
  4221  0C63  0852               	movf	??___fladd,w
  4222  0C64  07DC               	addwf	___fladd@bexp,f
  4223  0C65  2D08               	goto	l6258
  4224  0C66                     l6224:	
  4225  0C66  084D               	movf	___fladd@b+3,w
  4226  0C67  3A80               	xorlw	128
  4227  0C68  00FF               	movwf	127
  4228  0C69  0851               	movf	___fladd@a+3,w
  4229  0C6A  3A80               	xorlw	128
  4230  0C6B  027F               	subwf	127,w
  4231  0C6C  1D03               	skipz
  4232  0C6D  2C78               	goto	u6183
  4233  0C6E  0850               	movf	___fladd@a+2,w
  4234  0C6F  024C               	subwf	___fladd@b+2,w
  4235  0C70  1D03               	skipz
  4236  0C71  2C78               	goto	u6183
  4237  0C72  084F               	movf	___fladd@a+1,w
  4238  0C73  024B               	subwf	___fladd@b+1,w
  4239  0C74  1D03               	skipz
  4240  0C75  2C78               	goto	u6183
  4241  0C76  084E               	movf	___fladd@a,w
  4242  0C77  024A               	subwf	___fladd@b,w
  4243  0C78                     u6183:	
  4244  0C78  1803               	skipnc
  4245  0C79  2CD0               	goto	l6234
  4246  0C7A  30FF               	movlw	255
  4247  0C7B  00D2               	movwf	??___fladd
  4248  0C7C  30FF               	movlw	255
  4249  0C7D  00D3               	movwf	??___fladd+1
  4250  0C7E  30FF               	movlw	255
  4251  0C7F  00D4               	movwf	??___fladd+2
  4252  0C80  30FF               	movlw	255
  4253  0C81  00D5               	movwf	??___fladd+3
  4254  0C82  084E               	movf	___fladd@a,w
  4255  0C83  00D6               	movwf	??___fladd+4
  4256  0C84  084F               	movf	___fladd@a+1,w
  4257  0C85  00D7               	movwf	??___fladd+5
  4258  0C86  0850               	movf	___fladd@a+2,w
  4259  0C87  00D8               	movwf	??___fladd+6
  4260  0C88  0851               	movf	___fladd@a+3,w
  4261  0C89  00D9               	movwf	??___fladd+7
  4262  0C8A  084A               	movf	___fladd@b,w
  4263  0C8B  02D6               	subwf	??___fladd+4,f
  4264  0C8C  084B               	movf	___fladd@b+1,w
  4265  0C8D  1C03               	skipc
  4266  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4267  0C8F  2C91               	goto	u6191
  4268  0C90  2C92               	goto	u6192
  4269  0C91                     u6191:	
  4270  0C91  02D7               	subwf	??___fladd+5,f
  4271  0C92                     u6192:	
  4272  0C92  084C               	movf	___fladd@b+2,w
  4273  0C93  1C03               	skipc
  4274  0C94  0F4C               	incfsz	___fladd@b+2,w
  4275  0C95  2C97               	goto	u6193
  4276  0C96  2C98               	goto	u6194
  4277  0C97                     u6193:	
  4278  0C97  02D8               	subwf	??___fladd+6,f
  4279  0C98                     u6194:	
  4280  0C98  084D               	movf	___fladd@b+3,w
  4281  0C99  1C03               	skipc
  4282  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4283  0C9B  2C9D               	goto	u6195
  4284  0C9C  2C9E               	goto	u6196
  4285  0C9D                     u6195:	
  4286  0C9D  02D9               	subwf	??___fladd+7,f
  4287  0C9E                     u6196:	
  4288  0C9E  0856               	movf	??___fladd+4,w
  4289  0C9F  07D2               	addwf	??___fladd,f
  4290  0CA0  0857               	movf	??___fladd+5,w
  4291  0CA1  1803               	skipnc
  4292  0CA2  0F57               	incfsz	??___fladd+5,w
  4293  0CA3  2CA5               	goto	u6200
  4294  0CA4  2CA6               	goto	u6201
  4295  0CA5                     u6200:	
  4296  0CA5  07D3               	addwf	??___fladd+1,f
  4297  0CA6                     u6201:	
  4298  0CA6  0858               	movf	??___fladd+6,w
  4299  0CA7  1803               	skipnc
  4300  0CA8  0F58               	incfsz	??___fladd+6,w
  4301  0CA9  2CAB               	goto	u6202
  4302  0CAA  2CAC               	goto	u6203
  4303  0CAB                     u6202:	
  4304  0CAB  07D4               	addwf	??___fladd+2,f
  4305  0CAC                     u6203:	
  4306  0CAC  0859               	movf	??___fladd+7,w
  4307  0CAD  1803               	skipnc
  4308  0CAE  0A59               	incf	??___fladd+7,w
  4309  0CAF  07D5               	addwf	??___fladd+3,f
  4310  0CB0  0855               	movf	??___fladd+3,w
  4311  0CB1  00CD               	movwf	___fladd@b+3
  4312  0CB2  0854               	movf	??___fladd+2,w
  4313  0CB3  00CC               	movwf	___fladd@b+2
  4314  0CB4  0853               	movf	??___fladd+1,w
  4315  0CB5  00CB               	movwf	___fladd@b+1
  4316  0CB6  0852               	movf	??___fladd,w
  4317  0CB7  00CA               	movwf	___fladd@b
  4318  0CB8  3080               	movlw	128
  4319  0CB9  00D2               	movwf	??___fladd
  4320  0CBA  0852               	movf	??___fladd,w
  4321  0CBB  06DA               	xorwf	___fladd@signs,f
  4322  0CBC  09DD               	comf	___fladd@grs,f
  4323  0CBD  0ADD               	incf	___fladd@grs,f
  4324  0CBE  085D               	movf	___fladd@grs,w
  4325  0CBF  1D03               	btfss	3,2
  4326  0CC0  2CDE               	goto	l1267
  4327  0CC1  3001               	movlw	1
  4328  0CC2  07CA               	addwf	___fladd@b,f
  4329  0CC3  3000               	movlw	0
  4330  0CC4  1803               	skipnc
  4331  0CC5  3001               	movlw	1
  4332  0CC6  07CB               	addwf	___fladd@b+1,f
  4333  0CC7  3000               	movlw	0
  4334  0CC8  1803               	skipnc
  4335  0CC9  3001               	movlw	1
  4336  0CCA  07CC               	addwf	___fladd@b+2,f
  4337  0CCB  3000               	movlw	0
  4338  0CCC  1803               	skipnc
  4339  0CCD  3001               	movlw	1
  4340  0CCE  07CD               	addwf	___fladd@b+3,f
  4341  0CCF  2CDE               	goto	l1267
  4342  0CD0                     l6234:	
  4343  0CD0  084E               	movf	___fladd@a,w
  4344  0CD1  02CA               	subwf	___fladd@b,f
  4345  0CD2  084F               	movf	___fladd@a+1,w
  4346  0CD3  1C03               	skipc
  4347  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4348  0CD5  02CB               	subwf	___fladd@b+1,f
  4349  0CD6  0850               	movf	___fladd@a+2,w
  4350  0CD7  1C03               	skipc
  4351  0CD8  0F50               	incfsz	___fladd@a+2,w
  4352  0CD9  02CC               	subwf	___fladd@b+2,f
  4353  0CDA  0851               	movf	___fladd@a+3,w
  4354  0CDB  1C03               	skipc
  4355  0CDC  0F51               	incfsz	___fladd@a+3,w
  4356  0CDD  02CD               	subwf	___fladd@b+3,f
  4357  0CDE                     l1267:	
  4358  0CDE  084D               	movf	___fladd@b+3,w
  4359  0CDF  044C               	iorwf	___fladd@b+2,w
  4360  0CE0  044B               	iorwf	___fladd@b+1,w
  4361  0CE1  044A               	iorwf	___fladd@b,w
  4362  0CE2  1D03               	skipz
  4363  0CE3  2D06               	goto	l6256
  4364  0CE4  085D               	movf	___fladd@grs,w
  4365  0CE5  1D03               	btfss	3,2
  4366  0CE6  2D06               	goto	l6256
  4367  0CE7  3000               	movlw	0
  4368  0CE8  00CD               	movwf	?___fladd+3
  4369  0CE9  3000               	movlw	0
  4370  0CEA  00CC               	movwf	?___fladd+2
  4371  0CEB  3000               	movlw	0
  4372  0CEC  00CB               	movwf	?___fladd+1
  4373  0CED  3000               	movlw	0
  4374  0CEE  00CA               	movwf	?___fladd
  4375  0CEF  0008               	return
  4376  0CF0                     l6242:	
  4377  0CF0  3001               	movlw	1
  4378  0CF1  00D2               	movwf	??___fladd
  4379  0CF2                     u6245:	
  4380  0CF2  1003               	clrc
  4381  0CF3  0DCA               	rlf	___fladd@b,f
  4382  0CF4  0DCB               	rlf	___fladd@b+1,f
  4383  0CF5  0DCC               	rlf	___fladd@b+2,f
  4384  0CF6  0DCD               	rlf	___fladd@b+3,f
  4385  0CF7  0BD2               	decfsz	??___fladd,f
  4386  0CF8  2CF2               	goto	u6245
  4387  0CF9  1BDD               	btfsc	___fladd@grs,7
  4388  0CFA  144A               	bsf	___fladd@b,0
  4389  0CFB  1C5D               	btfss	___fladd@grs,0
  4390  0CFC  2CFF               	goto	l6250
  4391  0CFD  1403               	setc
  4392  0CFE  2D00               	goto	L3
  4393  0CFF                     l6250:	
  4394  0CFF  1003               	clrc
  4395  0D00                     L3:	
  4396  0D00  0DDD               	rlf	___fladd@grs,f
  4397  0D01  085C               	movf	___fladd@bexp,w
  4398  0D02  1903               	btfsc	3,2
  4399  0D03  2D06               	goto	l6256
  4400  0D04  3001               	movlw	1
  4401  0D05  02DC               	subwf	___fladd@bexp,f
  4402  0D06                     l6256:	
  4403  0D06  1FCC               	btfss	___fladd@b+2,7
  4404  0D07  2CF0               	goto	l6242
  4405  0D08                     l6258:	
  4406  0D08  01DB               	clrf	___fladd@aexp
  4407  0D09  1FDD               	btfss	___fladd@grs,7
  4408  0D0A  2D13               	goto	l6268
  4409  0D0B  085D               	movf	___fladd@grs,w
  4410  0D0C  397F               	andlw	127
  4411  0D0D  1903               	btfsc	3,2
  4412  0D0E  184A               	btfsc	___fladd@b,0
  4413  0D0F  2D11               	goto	l6264
  4414  0D10  2D13               	goto	l6268
  4415  0D11                     l6264:	
  4416  0D11  01DB               	clrf	___fladd@aexp
  4417  0D12  0ADB               	incf	___fladd@aexp,f
  4418  0D13                     l6268:	
  4419  0D13  085B               	movf	___fladd@aexp,w
  4420  0D14  1903               	btfsc	3,2
  4421  0D15  2D46               	goto	l1280
  4422  0D16  3001               	movlw	1
  4423  0D17  07CA               	addwf	___fladd@b,f
  4424  0D18  3000               	movlw	0
  4425  0D19  1803               	skipnc
  4426  0D1A  3001               	movlw	1
  4427  0D1B  07CB               	addwf	___fladd@b+1,f
  4428  0D1C  3000               	movlw	0
  4429  0D1D  1803               	skipnc
  4430  0D1E  3001               	movlw	1
  4431  0D1F  07CC               	addwf	___fladd@b+2,f
  4432  0D20  3000               	movlw	0
  4433  0D21  1803               	skipnc
  4434  0D22  3001               	movlw	1
  4435  0D23  07CD               	addwf	___fladd@b+3,f
  4436  0D24  1C4D               	btfss	___fladd@b+3,0
  4437  0D25  2D46               	goto	l1280
  4438  0D26  084A               	movf	___fladd@b,w
  4439  0D27  00D2               	movwf	??___fladd
  4440  0D28  084B               	movf	___fladd@b+1,w
  4441  0D29  00D3               	movwf	??___fladd+1
  4442  0D2A  084C               	movf	___fladd@b+2,w
  4443  0D2B  00D4               	movwf	??___fladd+2
  4444  0D2C  084D               	movf	___fladd@b+3,w
  4445  0D2D  00D5               	movwf	??___fladd+3
  4446  0D2E  3001               	movlw	1
  4447  0D2F  00D6               	movwf	??___fladd+4
  4448  0D30                     u6345:	
  4449  0D30  0D55               	rlf	??___fladd+3,w
  4450  0D31  0CD5               	rrf	??___fladd+3,f
  4451  0D32  0CD4               	rrf	??___fladd+2,f
  4452  0D33  0CD3               	rrf	??___fladd+1,f
  4453  0D34  0CD2               	rrf	??___fladd,f
  4454  0D35  0BD6               	decfsz	??___fladd+4,f
  4455  0D36  2D30               	goto	u6345
  4456  0D37  0855               	movf	??___fladd+3,w
  4457  0D38  00CD               	movwf	___fladd@b+3
  4458  0D39  0854               	movf	??___fladd+2,w
  4459  0D3A  00CC               	movwf	___fladd@b+2
  4460  0D3B  0853               	movf	??___fladd+1,w
  4461  0D3C  00CB               	movwf	___fladd@b+1
  4462  0D3D  0852               	movf	??___fladd,w
  4463  0D3E  00CA               	movwf	___fladd@b
  4464  0D3F  0A5C               	incf	___fladd@bexp,w
  4465  0D40  1903               	btfsc	3,2
  4466  0D41  2D46               	goto	l1280
  4467  0D42  3001               	movlw	1
  4468  0D43  00D2               	movwf	??___fladd
  4469  0D44  0852               	movf	??___fladd,w
  4470  0D45  07DC               	addwf	___fladd@bexp,f
  4471  0D46                     l1280:	
  4472  0D46  0A5C               	incf	___fladd@bexp,w
  4473  0D47  1D03               	btfss	3,2
  4474  0D48  085C               	movf	___fladd@bexp,w
  4475  0D49  1D03               	btfss	3,2
  4476  0D4A  2D56               	goto	l6286
  4477  0D4B  3000               	movlw	0
  4478  0D4C  00CD               	movwf	___fladd@b+3
  4479  0D4D  3000               	movlw	0
  4480  0D4E  00CC               	movwf	___fladd@b+2
  4481  0D4F  3000               	movlw	0
  4482  0D50  00CB               	movwf	___fladd@b+1
  4483  0D51  3000               	movlw	0
  4484  0D52  00CA               	movwf	___fladd@b
  4485  0D53  085C               	movf	___fladd@bexp,w
  4486  0D54  1903               	btfsc	3,2
  4487  0D55  01DA               	clrf	___fladd@signs
  4488  0D56                     l6286:	
  4489  0D56  1C5C               	btfss	___fladd@bexp,0
  4490  0D57  2D5A               	goto	l6290
  4491  0D58  17CC               	bsf	___fladd@b+2,7
  4492  0D59  2D5E               	goto	l1288
  4493  0D5A                     l6290:	
  4494  0D5A  307F               	movlw	127
  4495  0D5B  00D2               	movwf	??___fladd
  4496  0D5C  0852               	movf	??___fladd,w
  4497  0D5D  05CC               	andwf	___fladd@b+2,f
  4498  0D5E                     l1288:	
  4499  0D5E  085C               	movf	___fladd@bexp,w
  4500  0D5F  00D2               	movwf	??___fladd
  4501  0D60  1003               	clrc
  4502  0D61  0C52               	rrf	??___fladd,w
  4503  0D62  00D3               	movwf	??___fladd+1
  4504  0D63  0853               	movf	??___fladd+1,w
  4505  0D64  00CD               	movwf	___fladd@b+3
  4506  0D65  1FDA               	btfss	___fladd@signs,7
  4507  0D66  0008               	return
  4508  0D67  17CD               	bsf	___fladd@b+3,7
  4509  0D68  0008               	return
  4510  0D69                     __end_of___fladd:	
  4511                           
  4512                           	psect	text6
  4513  1139                     __ptext6:	
  4514 ;; *************** function ___flge *****************
  4515 ;; Defined at:
  4516 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  ff1             4    0[BANK0 ] unsigned char 
  4519 ;;  ff2             4    4[BANK0 ] unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;		None               void
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 300/0
  4528 ;;		On exit  : 300/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       8       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       4       0       0       0
  4534 ;;      Totals:         0      12       0       0       0
  4535 ;;Total ram usage:       12 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_MediaPlacaVaccum
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function ___flge
  4547  1139                     ___flge:	
  4548                           
  4549                           ;incstack = 0
  4550                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4551  1139  3000               	movlw	0
  4552  113A  0520               	andwf	___flge@ff1,w
  4553  113B  00A8               	movwf	??___flge
  4554  113C  3000               	movlw	0
  4555  113D  0521               	andwf	___flge@ff1+1,w
  4556  113E  00A9               	movwf	??___flge+1
  4557  113F  3080               	movlw	128
  4558  1140  0522               	andwf	___flge@ff1+2,w
  4559  1141  00AA               	movwf	??___flge+2
  4560  1142  307F               	movlw	127
  4561  1143  0523               	andwf	___flge@ff1+3,w
  4562  1144  00AB               	movwf	??___flge+3
  4563  1145  082B               	movf	??___flge+3,w
  4564  1146  042A               	iorwf	??___flge+2,w
  4565  1147  0429               	iorwf	??___flge+1,w
  4566  1148  0428               	iorwf	??___flge,w
  4567  1149  1D03               	skipz
  4568  114A  2953               	goto	l1127
  4569  114B  3000               	movlw	0
  4570  114C  00A3               	movwf	___flge@ff1+3
  4571  114D  3000               	movlw	0
  4572  114E  00A2               	movwf	___flge@ff1+2
  4573  114F  3000               	movlw	0
  4574  1150  00A1               	movwf	___flge@ff1+1
  4575  1151  3000               	movlw	0
  4576  1152  00A0               	movwf	___flge@ff1
  4577  1153                     l1127:	
  4578  1153  3000               	movlw	0
  4579  1154  0524               	andwf	___flge@ff2,w
  4580  1155  00A8               	movwf	??___flge
  4581  1156  3000               	movlw	0
  4582  1157  0525               	andwf	___flge@ff2+1,w
  4583  1158  00A9               	movwf	??___flge+1
  4584  1159  3080               	movlw	128
  4585  115A  0526               	andwf	___flge@ff2+2,w
  4586  115B  00AA               	movwf	??___flge+2
  4587  115C  307F               	movlw	127
  4588  115D  0527               	andwf	___flge@ff2+3,w
  4589  115E  00AB               	movwf	??___flge+3
  4590  115F  082B               	movf	??___flge+3,w
  4591  1160  042A               	iorwf	??___flge+2,w
  4592  1161  0429               	iorwf	??___flge+1,w
  4593  1162  0428               	iorwf	??___flge,w
  4594  1163  1D03               	skipz
  4595  1164  296D               	goto	l6964
  4596  1165  3000               	movlw	0
  4597  1166  00A7               	movwf	___flge@ff2+3
  4598  1167  3000               	movlw	0
  4599  1168  00A6               	movwf	___flge@ff2+2
  4600  1169  3000               	movlw	0
  4601  116A  00A5               	movwf	___flge@ff2+1
  4602  116B  3000               	movlw	0
  4603  116C  00A4               	movwf	___flge@ff2
  4604  116D                     l6964:	
  4605  116D  1FA3               	btfss	___flge@ff1+3,7
  4606  116E  2993               	goto	l6968
  4607  116F  3000               	movlw	0
  4608  1170  00A8               	movwf	??___flge
  4609  1171  3000               	movlw	0
  4610  1172  00A9               	movwf	??___flge+1
  4611  1173  3000               	movlw	0
  4612  1174  00AA               	movwf	??___flge+2
  4613  1175  3080               	movlw	128
  4614  1176  00AB               	movwf	??___flge+3
  4615  1177  0820               	movf	___flge@ff1,w
  4616  1178  02A8               	subwf	??___flge,f
  4617  1179  0821               	movf	___flge@ff1+1,w
  4618  117A  1C03               	skipc
  4619  117B  0F21               	incfsz	___flge@ff1+1,w
  4620  117C  297E               	goto	u7361
  4621  117D  297F               	goto	u7362
  4622  117E                     u7361:	
  4623  117E  02A9               	subwf	??___flge+1,f
  4624  117F                     u7362:	
  4625  117F  0822               	movf	___flge@ff1+2,w
  4626  1180  1C03               	skipc
  4627  1181  0F22               	incfsz	___flge@ff1+2,w
  4628  1182  2984               	goto	u7363
  4629  1183  2985               	goto	u7364
  4630  1184                     u7363:	
  4631  1184  02AA               	subwf	??___flge+2,f
  4632  1185                     u7364:	
  4633  1185  0823               	movf	___flge@ff1+3,w
  4634  1186  1C03               	skipc
  4635  1187  0F23               	incfsz	___flge@ff1+3,w
  4636  1188  298A               	goto	u7365
  4637  1189  298B               	goto	u7366
  4638  118A                     u7365:	
  4639  118A  02AB               	subwf	??___flge+3,f
  4640  118B                     u7366:	
  4641  118B  082B               	movf	??___flge+3,w
  4642  118C  00A3               	movwf	___flge@ff1+3
  4643  118D  082A               	movf	??___flge+2,w
  4644  118E  00A2               	movwf	___flge@ff1+2
  4645  118F  0829               	movf	??___flge+1,w
  4646  1190  00A1               	movwf	___flge@ff1+1
  4647  1191  0828               	movf	??___flge,w
  4648  1192  00A0               	movwf	___flge@ff1
  4649  1193                     l6968:	
  4650  1193  1FA7               	btfss	___flge@ff2+3,7
  4651  1194  29B9               	goto	l1130
  4652  1195  3000               	movlw	0
  4653  1196  00A8               	movwf	??___flge
  4654  1197  3000               	movlw	0
  4655  1198  00A9               	movwf	??___flge+1
  4656  1199  3000               	movlw	0
  4657  119A  00AA               	movwf	??___flge+2
  4658  119B  3080               	movlw	128
  4659  119C  00AB               	movwf	??___flge+3
  4660  119D  0824               	movf	___flge@ff2,w
  4661  119E  02A8               	subwf	??___flge,f
  4662  119F  0825               	movf	___flge@ff2+1,w
  4663  11A0  1C03               	skipc
  4664  11A1  0F25               	incfsz	___flge@ff2+1,w
  4665  11A2  29A4               	goto	u7381
  4666  11A3  29A5               	goto	u7382
  4667  11A4                     u7381:	
  4668  11A4  02A9               	subwf	??___flge+1,f
  4669  11A5                     u7382:	
  4670  11A5  0826               	movf	___flge@ff2+2,w
  4671  11A6  1C03               	skipc
  4672  11A7  0F26               	incfsz	___flge@ff2+2,w
  4673  11A8  29AA               	goto	u7383
  4674  11A9  29AB               	goto	u7384
  4675  11AA                     u7383:	
  4676  11AA  02AA               	subwf	??___flge+2,f
  4677  11AB                     u7384:	
  4678  11AB  0827               	movf	___flge@ff2+3,w
  4679  11AC  1C03               	skipc
  4680  11AD  0F27               	incfsz	___flge@ff2+3,w
  4681  11AE  29B0               	goto	u7385
  4682  11AF  29B1               	goto	u7386
  4683  11B0                     u7385:	
  4684  11B0  02AB               	subwf	??___flge+3,f
  4685  11B1                     u7386:	
  4686  11B1  082B               	movf	??___flge+3,w
  4687  11B2  00A7               	movwf	___flge@ff2+3
  4688  11B3  082A               	movf	??___flge+2,w
  4689  11B4  00A6               	movwf	___flge@ff2+2
  4690  11B5  0829               	movf	??___flge+1,w
  4691  11B6  00A5               	movwf	___flge@ff2+1
  4692  11B7  0828               	movf	??___flge,w
  4693  11B8  00A4               	movwf	___flge@ff2
  4694  11B9                     l1130:	
  4695  11B9  3080               	movlw	128
  4696  11BA  06A3               	xorwf	___flge@ff1+3,f
  4697  11BB  3080               	movlw	128
  4698  11BC  06A7               	xorwf	___flge@ff2+3,f
  4699  11BD  0827               	movf	___flge@ff2+3,w
  4700  11BE  0223               	subwf	___flge@ff1+3,w
  4701  11BF  1D03               	skipz
  4702  11C0  0008               	return
  4703  11C1  0826               	movf	___flge@ff2+2,w
  4704  11C2  0222               	subwf	___flge@ff1+2,w
  4705  11C3  1D03               	skipz
  4706  11C4  0008               	return
  4707  11C5  0825               	movf	___flge@ff2+1,w
  4708  11C6  0221               	subwf	___flge@ff1+1,w
  4709  11C7  1D03               	skipz
  4710  11C8  0008               	return
  4711  11C9  0824               	movf	___flge@ff2,w
  4712  11CA  0220               	subwf	___flge@ff1,w
  4713  11CB  0008               	return
  4714  11CC                     __end_of___flge:	
  4715                           
  4716                           	psect	text7
  4717  099B                     __ptext7:	
  4718 ;; *************** function ___fldiv *****************
  4719 ;; Defined at:
  4720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  a               4   33[BANK0 ] unsigned char 
  4723 ;;  b               4   37[BANK0 ] unsigned char 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  grs             4   53[BANK0 ] unsigned long 
  4726 ;;  rem             4   46[BANK0 ] unsigned long 
  4727 ;;  new_exp         2   51[BANK0 ] int 
  4728 ;;  aexp            1   58[BANK0 ] unsigned char 
  4729 ;;  bexp            1   57[BANK0 ] unsigned char 
  4730 ;;  sign            1   50[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4   33[BANK0 ] unsigned char 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, btemp+1
  4735 ;; Tracked objects:
  4736 ;;		On entry : 300/0
  4737 ;;		On exit  : 300/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4740 ;;      Params:         0       8       0       0       0
  4741 ;;      Locals:         0      13       0       0       0
  4742 ;;      Temps:          0       5       0       0       0
  4743 ;;      Totals:         0      26       0       0       0
  4744 ;;Total ram usage:       26 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_MediaPlacaVaccum
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function ___fldiv
  4756  099B                     ___fldiv:	
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4760  099B  0848               	movf	___fldiv@b+3,w
  4761  099C  3980               	andlw	128
  4762  099D  00C9               	movwf	??___fldiv
  4763  099E  0849               	movf	??___fldiv,w
  4764  099F  00D2               	movwf	___fldiv@sign
  4765  09A0  0848               	movf	___fldiv@b+3,w
  4766  09A1  00C9               	movwf	??___fldiv
  4767  09A2  0749               	addwf	??___fldiv,w
  4768  09A3  00CA               	movwf	??___fldiv+1
  4769  09A4  084A               	movf	??___fldiv+1,w
  4770  09A5  00D9               	movwf	___fldiv@bexp
  4771  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4772  09A7  1459               	bsf	___fldiv@bexp,0
  4773  09A8  0859               	movf	___fldiv@bexp,w
  4774  09A9  1903               	btfsc	3,2
  4775  09AA  29B9               	goto	l7002
  4776  09AB  0A59               	incf	___fldiv@bexp,w
  4777  09AC  1D03               	btfss	3,2
  4778  09AD  29B6               	goto	l6998
  4779  09AE  3000               	movlw	0
  4780  09AF  00C8               	movwf	___fldiv@b+3
  4781  09B0  3000               	movlw	0
  4782  09B1  00C7               	movwf	___fldiv@b+2
  4783  09B2  3000               	movlw	0
  4784  09B3  00C6               	movwf	___fldiv@b+1
  4785  09B4  3000               	movlw	0
  4786  09B5  00C5               	movwf	___fldiv@b
  4787  09B6                     l6998:	
  4788  09B6  17C7               	bsf	___fldiv@b+2,7
  4789  09B7  01C8               	clrf	___fldiv@b+3
  4790  09B8  29C1               	goto	l7004
  4791  09B9                     l7002:	
  4792  09B9  3000               	movlw	0
  4793  09BA  00C8               	movwf	___fldiv@b+3
  4794  09BB  3000               	movlw	0
  4795  09BC  00C7               	movwf	___fldiv@b+2
  4796  09BD  3000               	movlw	0
  4797  09BE  00C6               	movwf	___fldiv@b+1
  4798  09BF  3000               	movlw	0
  4799  09C0  00C5               	movwf	___fldiv@b
  4800  09C1                     l7004:	
  4801  09C1  0844               	movf	___fldiv@a+3,w
  4802  09C2  3980               	andlw	128
  4803  09C3  00C9               	movwf	??___fldiv
  4804  09C4  0849               	movf	??___fldiv,w
  4805  09C5  06D2               	xorwf	___fldiv@sign,f
  4806  09C6  0844               	movf	___fldiv@a+3,w
  4807  09C7  00C9               	movwf	??___fldiv
  4808  09C8  0749               	addwf	??___fldiv,w
  4809  09C9  00CA               	movwf	??___fldiv+1
  4810  09CA  084A               	movf	??___fldiv+1,w
  4811  09CB  00DA               	movwf	___fldiv@aexp
  4812  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4813  09CD  145A               	bsf	___fldiv@aexp,0
  4814  09CE  085A               	movf	___fldiv@aexp,w
  4815  09CF  1903               	btfsc	3,2
  4816  09D0  29DF               	goto	l7022
  4817  09D1  0A5A               	incf	___fldiv@aexp,w
  4818  09D2  1D03               	btfss	3,2
  4819  09D3  29DC               	goto	l7018
  4820  09D4  3000               	movlw	0
  4821  09D5  00C4               	movwf	___fldiv@a+3
  4822  09D6  3000               	movlw	0
  4823  09D7  00C3               	movwf	___fldiv@a+2
  4824  09D8  3000               	movlw	0
  4825  09D9  00C2               	movwf	___fldiv@a+1
  4826  09DA  3000               	movlw	0
  4827  09DB  00C1               	movwf	___fldiv@a
  4828  09DC                     l7018:	
  4829  09DC  17C3               	bsf	___fldiv@a+2,7
  4830  09DD  01C4               	clrf	___fldiv@a+3
  4831  09DE  29E7               	goto	l1302
  4832  09DF                     l7022:	
  4833  09DF  3000               	movlw	0
  4834  09E0  00C4               	movwf	___fldiv@a+3
  4835  09E1  3000               	movlw	0
  4836  09E2  00C3               	movwf	___fldiv@a+2
  4837  09E3  3000               	movlw	0
  4838  09E4  00C2               	movwf	___fldiv@a+1
  4839  09E5  3000               	movlw	0
  4840  09E6  00C1               	movwf	___fldiv@a
  4841  09E7                     l1302:	
  4842  09E7  0844               	movf	___fldiv@a+3,w
  4843  09E8  0443               	iorwf	___fldiv@a+2,w
  4844  09E9  0442               	iorwf	___fldiv@a+1,w
  4845  09EA  0441               	iorwf	___fldiv@a,w
  4846  09EB  1D03               	skipz
  4847  09EC  2A06               	goto	l7032
  4848  09ED  3000               	movlw	0
  4849  09EE  00C8               	movwf	___fldiv@b+3
  4850  09EF  3000               	movlw	0
  4851  09F0  00C7               	movwf	___fldiv@b+2
  4852  09F1  3000               	movlw	0
  4853  09F2  00C6               	movwf	___fldiv@b+1
  4854  09F3  3000               	movlw	0
  4855  09F4  00C5               	movwf	___fldiv@b
  4856  09F5  3080               	movlw	128
  4857  09F6  04C7               	iorwf	___fldiv@b+2,f
  4858  09F7  307F               	movlw	127
  4859  09F8  04C8               	iorwf	___fldiv@b+3,f
  4860  09F9                     L5:	
  4861  09F9  0852               	movf	___fldiv@sign,w
  4862  09FA  00C9               	movwf	??___fldiv
  4863  09FB  0849               	movf	??___fldiv,w
  4864  09FC  04C8               	iorwf	___fldiv@b+3,f
  4865  09FD  0848               	movf	___fldiv@b+3,w
  4866  09FE  00C4               	movwf	?___fldiv+3
  4867  09FF  0847               	movf	___fldiv@b+2,w
  4868  0A00  00C3               	movwf	?___fldiv+2
  4869  0A01  0846               	movf	___fldiv@b+1,w
  4870  0A02  00C2               	movwf	?___fldiv+1
  4871  0A03  0845               	movf	___fldiv@b,w
  4872  0A04  00C1               	movwf	?___fldiv
  4873  0A05  0008               	return
  4874  0A06                     l7032:	
  4875  0A06  0859               	movf	___fldiv@bexp,w
  4876  0A07  1D03               	btfss	3,2
  4877  0A08  2A12               	goto	l7038
  4878  0A09  3000               	movlw	0
  4879  0A0A  00C4               	movwf	?___fldiv+3
  4880  0A0B  3000               	movlw	0
  4881  0A0C  00C3               	movwf	?___fldiv+2
  4882  0A0D  3000               	movlw	0
  4883  0A0E  00C2               	movwf	?___fldiv+1
  4884  0A0F  3000               	movlw	0
  4885  0A10  00C1               	movwf	?___fldiv
  4886  0A11  0008               	return
  4887  0A12                     l7038:	
  4888  0A12  0859               	movf	___fldiv@bexp,w
  4889  0A13  00C9               	movwf	??___fldiv
  4890  0A14  01CA               	clrf	??___fldiv+1
  4891  0A15  084A               	movf	??___fldiv+1,w
  4892  0A16  00CC               	movwf	??___fldiv+3
  4893  0A17  085A               	movf	___fldiv@aexp,w
  4894  0A18  0249               	subwf	??___fldiv,w
  4895  0A19  00CB               	movwf	??___fldiv+2
  4896  0A1A  1C03               	skipc
  4897  0A1B  03CC               	decf	??___fldiv+3,f
  4898  0A1C  084B               	movf	??___fldiv+2,w
  4899  0A1D  3E7F               	addlw	127
  4900  0A1E  00D3               	movwf	___fldiv@new_exp
  4901  0A1F  084C               	movf	??___fldiv+3,w
  4902  0A20  1803               	skipnc
  4903  0A21  3E01               	addlw	1
  4904  0A22  3E00               	addlw	0
  4905  0A23  00D4               	movwf	___fldiv@new_exp+1
  4906  0A24  0848               	movf	___fldiv@b+3,w
  4907  0A25  00D1               	movwf	___fldiv@rem+3
  4908  0A26  0847               	movf	___fldiv@b+2,w
  4909  0A27  00D0               	movwf	___fldiv@rem+2
  4910  0A28  0846               	movf	___fldiv@b+1,w
  4911  0A29  00CF               	movwf	___fldiv@rem+1
  4912  0A2A  0845               	movf	___fldiv@b,w
  4913  0A2B  00CE               	movwf	___fldiv@rem
  4914  0A2C  3000               	movlw	0
  4915  0A2D  00C8               	movwf	___fldiv@b+3
  4916  0A2E  3000               	movlw	0
  4917  0A2F  00C7               	movwf	___fldiv@b+2
  4918  0A30  3000               	movlw	0
  4919  0A31  00C6               	movwf	___fldiv@b+1
  4920  0A32  3000               	movlw	0
  4921  0A33  00C5               	movwf	___fldiv@b
  4922  0A34  3000               	movlw	0
  4923  0A35  00D8               	movwf	___fldiv@grs+3
  4924  0A36  3000               	movlw	0
  4925  0A37  00D7               	movwf	___fldiv@grs+2
  4926  0A38  3000               	movlw	0
  4927  0A39  00D6               	movwf	___fldiv@grs+1
  4928  0A3A  3000               	movlw	0
  4929  0A3B  00D5               	movwf	___fldiv@grs
  4930  0A3C  01DA               	clrf	___fldiv@aexp
  4931  0A3D                     l7066:	
  4932  0A3D  301A               	movlw	26
  4933  0A3E  025A               	subwf	___fldiv@aexp,w
  4934  0A3F  1803               	btfsc	3,0
  4935  0A40  2A85               	goto	l7068
  4936  0A41  085A               	movf	___fldiv@aexp,w
  4937  0A42  1903               	btfsc	3,2
  4938  0A43  2A61               	goto	l7058
  4939  0A44  3001               	movlw	1
  4940  0A45  00C9               	movwf	??___fldiv
  4941  0A46                     u7495:	
  4942  0A46  1003               	clrc
  4943  0A47  0DCE               	rlf	___fldiv@rem,f
  4944  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4945  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4946  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4947  0A4B  0BC9               	decfsz	??___fldiv,f
  4948  0A4C  2A46               	goto	u7495
  4949  0A4D  3001               	movlw	1
  4950  0A4E  00C9               	movwf	??___fldiv
  4951  0A4F                     u7505:	
  4952  0A4F  1003               	clrc
  4953  0A50  0DC5               	rlf	___fldiv@b,f
  4954  0A51  0DC6               	rlf	___fldiv@b+1,f
  4955  0A52  0DC7               	rlf	___fldiv@b+2,f
  4956  0A53  0DC8               	rlf	___fldiv@b+3,f
  4957  0A54  0BC9               	decfsz	??___fldiv,f
  4958  0A55  2A4F               	goto	u7505
  4959  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4960  0A57  1445               	bsf	___fldiv@b,0
  4961  0A58  3001               	movlw	1
  4962  0A59  00C9               	movwf	??___fldiv
  4963  0A5A                     u7525:	
  4964  0A5A  1003               	clrc
  4965  0A5B  0DD5               	rlf	___fldiv@grs,f
  4966  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4967  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4968  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4969  0A5F  0BC9               	decfsz	??___fldiv,f
  4970  0A60  2A5A               	goto	u7525
  4971  0A61                     l7058:	
  4972  0A61  0844               	movf	___fldiv@a+3,w
  4973  0A62  0251               	subwf	___fldiv@rem+3,w
  4974  0A63  1D03               	skipz
  4975  0A64  2A6F               	goto	u7535
  4976  0A65  0843               	movf	___fldiv@a+2,w
  4977  0A66  0250               	subwf	___fldiv@rem+2,w
  4978  0A67  1D03               	skipz
  4979  0A68  2A6F               	goto	u7535
  4980  0A69  0842               	movf	___fldiv@a+1,w
  4981  0A6A  024F               	subwf	___fldiv@rem+1,w
  4982  0A6B  1D03               	skipz
  4983  0A6C  2A6F               	goto	u7535
  4984  0A6D  0841               	movf	___fldiv@a,w
  4985  0A6E  024E               	subwf	___fldiv@rem,w
  4986  0A6F                     u7535:	
  4987  0A6F  1C03               	skipc
  4988  0A70  2A80               	goto	l7064
  4989  0A71  1758               	bsf	___fldiv@grs+3,6
  4990  0A72  0841               	movf	___fldiv@a,w
  4991  0A73  02CE               	subwf	___fldiv@rem,f
  4992  0A74  0842               	movf	___fldiv@a+1,w
  4993  0A75  1C03               	skipc
  4994  0A76  0F42               	incfsz	___fldiv@a+1,w
  4995  0A77  02CF               	subwf	___fldiv@rem+1,f
  4996  0A78  0843               	movf	___fldiv@a+2,w
  4997  0A79  1C03               	skipc
  4998  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4999  0A7B  02D0               	subwf	___fldiv@rem+2,f
  5000  0A7C  0844               	movf	___fldiv@a+3,w
  5001  0A7D  1C03               	skipc
  5002  0A7E  0F44               	incfsz	___fldiv@a+3,w
  5003  0A7F  02D1               	subwf	___fldiv@rem+3,f
  5004  0A80                     l7064:	
  5005  0A80  3001               	movlw	1
  5006  0A81  00C9               	movwf	??___fldiv
  5007  0A82  0849               	movf	??___fldiv,w
  5008  0A83  07DA               	addwf	___fldiv@aexp,f
  5009  0A84  2A3D               	goto	l7066
  5010  0A85                     l7068:	
  5011  0A85  0851               	movf	___fldiv@rem+3,w
  5012  0A86  0450               	iorwf	___fldiv@rem+2,w
  5013  0A87  044F               	iorwf	___fldiv@rem+1,w
  5014  0A88  044E               	iorwf	___fldiv@rem,w
  5015  0A89  1D03               	btfss	3,2
  5016  0A8A  1455               	bsf	___fldiv@grs,0
  5017  0A8B                     l7082:	
  5018  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  5019  0A8C  2AA8               	goto	l7084
  5020  0A8D  3001               	movlw	1
  5021  0A8E  00C9               	movwf	??___fldiv
  5022  0A8F                     u7565:	
  5023  0A8F  1003               	clrc
  5024  0A90  0DC5               	rlf	___fldiv@b,f
  5025  0A91  0DC6               	rlf	___fldiv@b+1,f
  5026  0A92  0DC7               	rlf	___fldiv@b+2,f
  5027  0A93  0DC8               	rlf	___fldiv@b+3,f
  5028  0A94  0BC9               	decfsz	??___fldiv,f
  5029  0A95  2A8F               	goto	u7565
  5030  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  5031  0A97  1445               	bsf	___fldiv@b,0
  5032  0A98  3001               	movlw	1
  5033  0A99  00C9               	movwf	??___fldiv
  5034  0A9A                     u7585:	
  5035  0A9A  1003               	clrc
  5036  0A9B  0DD5               	rlf	___fldiv@grs,f
  5037  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5038  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5039  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5040  0A9F  0BC9               	decfsz	??___fldiv,f
  5041  0AA0  2A9A               	goto	u7585
  5042  0AA1  30FF               	movlw	255
  5043  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5044  0AA3  1803               	skipnc
  5045  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5046  0AA5  30FF               	movlw	255
  5047  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5048  0AA7  2A8B               	goto	l7082
  5049  0AA8                     l7084:	
  5050  0AA8  01DA               	clrf	___fldiv@aexp
  5051  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5052  0AAA  2AC1               	goto	l7094
  5053  0AAB  30FF               	movlw	255
  5054  0AAC  0555               	andwf	___fldiv@grs,w
  5055  0AAD  00C9               	movwf	??___fldiv
  5056  0AAE  30FF               	movlw	255
  5057  0AAF  0556               	andwf	___fldiv@grs+1,w
  5058  0AB0  00CA               	movwf	??___fldiv+1
  5059  0AB1  30FF               	movlw	255
  5060  0AB2  0557               	andwf	___fldiv@grs+2,w
  5061  0AB3  00CB               	movwf	??___fldiv+2
  5062  0AB4  307F               	movlw	127
  5063  0AB5  0558               	andwf	___fldiv@grs+3,w
  5064  0AB6  00CC               	movwf	??___fldiv+3
  5065  0AB7  084C               	movf	??___fldiv+3,w
  5066  0AB8  044B               	iorwf	??___fldiv+2,w
  5067  0AB9  044A               	iorwf	??___fldiv+1,w
  5068  0ABA  0449               	iorwf	??___fldiv,w
  5069  0ABB  1903               	skipnz
  5070  0ABC  1845               	btfsc	___fldiv@b,0
  5071  0ABD  2ABF               	goto	l7090
  5072  0ABE  2AC1               	goto	l7094
  5073  0ABF                     l7090:	
  5074  0ABF  01DA               	clrf	___fldiv@aexp
  5075  0AC0  0ADA               	incf	___fldiv@aexp,f
  5076  0AC1                     l7094:	
  5077  0AC1  085A               	movf	___fldiv@aexp,w
  5078  0AC2  1903               	btfsc	3,2
  5079  0AC3  2AF3               	goto	l7104
  5080  0AC4  3001               	movlw	1
  5081  0AC5  07C5               	addwf	___fldiv@b,f
  5082  0AC6  3000               	movlw	0
  5083  0AC7  1803               	skipnc
  5084  0AC8  3001               	movlw	1
  5085  0AC9  07C6               	addwf	___fldiv@b+1,f
  5086  0ACA  3000               	movlw	0
  5087  0ACB  1803               	skipnc
  5088  0ACC  3001               	movlw	1
  5089  0ACD  07C7               	addwf	___fldiv@b+2,f
  5090  0ACE  3000               	movlw	0
  5091  0ACF  1803               	skipnc
  5092  0AD0  3001               	movlw	1
  5093  0AD1  07C8               	addwf	___fldiv@b+3,f
  5094  0AD2  1C48               	btfss	___fldiv@b+3,0
  5095  0AD3  2AF3               	goto	l7104
  5096  0AD4  0845               	movf	___fldiv@b,w
  5097  0AD5  00C9               	movwf	??___fldiv
  5098  0AD6  0846               	movf	___fldiv@b+1,w
  5099  0AD7  00CA               	movwf	??___fldiv+1
  5100  0AD8  0847               	movf	___fldiv@b+2,w
  5101  0AD9  00CB               	movwf	??___fldiv+2
  5102  0ADA  0848               	movf	___fldiv@b+3,w
  5103  0ADB  00CC               	movwf	??___fldiv+3
  5104  0ADC  3001               	movlw	1
  5105  0ADD  00CD               	movwf	??___fldiv+4
  5106  0ADE                     u7655:	
  5107  0ADE  0D4C               	rlf	??___fldiv+3,w
  5108  0ADF  0CCC               	rrf	??___fldiv+3,f
  5109  0AE0  0CCB               	rrf	??___fldiv+2,f
  5110  0AE1  0CCA               	rrf	??___fldiv+1,f
  5111  0AE2  0CC9               	rrf	??___fldiv,f
  5112  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5113  0AE4  2ADE               	goto	u7655
  5114  0AE5  084C               	movf	??___fldiv+3,w
  5115  0AE6  00C8               	movwf	___fldiv@b+3
  5116  0AE7  084B               	movf	??___fldiv+2,w
  5117  0AE8  00C7               	movwf	___fldiv@b+2
  5118  0AE9  084A               	movf	??___fldiv+1,w
  5119  0AEA  00C6               	movwf	___fldiv@b+1
  5120  0AEB  0849               	movf	??___fldiv,w
  5121  0AEC  00C5               	movwf	___fldiv@b
  5122  0AED  3001               	movlw	1
  5123  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5124  0AEF  1803               	skipnc
  5125  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5126  0AF1  3000               	movlw	0
  5127  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5128  0AF3                     l7104:	
  5129  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5130  0AF4  3A80               	xorlw	128
  5131  0AF5  00FF               	movwf	127
  5132  0AF6  3080               	movlw	128
  5133  0AF7  027F               	subwf	127,w
  5134  0AF8  1D03               	skipz
  5135  0AF9  2AFC               	goto	u7665
  5136  0AFA  30FF               	movlw	255
  5137  0AFB  0253               	subwf	___fldiv@new_exp,w
  5138  0AFC                     u7665:	
  5139  0AFC  1C03               	skipc
  5140  0AFD  2B0C               	goto	l7108
  5141  0AFE  30FF               	movlw	255
  5142  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0B01  00D3               	movwf	___fldiv@new_exp
  5145  0B02  3000               	movlw	0
  5146  0B03  00D4               	movwf	___fldiv@new_exp+1
  5147  0B04  3000               	movlw	0
  5148  0B05  00C8               	movwf	___fldiv@b+3
  5149  0B06  3000               	movlw	0
  5150  0B07  00C7               	movwf	___fldiv@b+2
  5151  0B08  3000               	movlw	0
  5152  0B09  00C6               	movwf	___fldiv@b+1
  5153  0B0A  3000               	movlw	0
  5154  0B0B  00C5               	movwf	___fldiv@b
  5155  0B0C                     l7108:	
  5156  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5159  0B0F  3A80               	xorlw	128
  5160  0B10  00FF               	movwf	127
  5161  0B11  3080               	movlw	128
  5162  0B12  027F               	subwf	127,w
  5163  0B13  1D03               	skipz
  5164  0B14  2B17               	goto	u7675
  5165  0B15  3001               	movlw	1
  5166  0B16  0253               	subwf	___fldiv@new_exp,w
  5167  0B17                     u7675:	
  5168  0B17  1803               	skipnc
  5169  0B18  2B26               	goto	l1324
  5170  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0B1B  01D3               	clrf	___fldiv@new_exp
  5173  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5174  0B1D  3000               	movlw	0
  5175  0B1E  00C8               	movwf	___fldiv@b+3
  5176  0B1F  3000               	movlw	0
  5177  0B20  00C7               	movwf	___fldiv@b+2
  5178  0B21  3000               	movlw	0
  5179  0B22  00C6               	movwf	___fldiv@b+1
  5180  0B23  3000               	movlw	0
  5181  0B24  00C5               	movwf	___fldiv@b
  5182  0B25  01D2               	clrf	___fldiv@sign
  5183  0B26                     l1324:	
  5184  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0B28  0853               	movf	___fldiv@new_exp,w
  5187  0B29  00C9               	movwf	??___fldiv
  5188  0B2A  0849               	movf	??___fldiv,w
  5189  0B2B  00D9               	movwf	___fldiv@bexp
  5190  0B2C  1C59               	btfss	___fldiv@bexp,0
  5191  0B2D  2B30               	goto	l7120
  5192  0B2E  17C7               	bsf	___fldiv@b+2,7
  5193  0B2F  2B34               	goto	l1326
  5194  0B30                     l7120:	
  5195  0B30  307F               	movlw	127
  5196  0B31  00C9               	movwf	??___fldiv
  5197  0B32  0849               	movf	??___fldiv,w
  5198  0B33  05C7               	andwf	___fldiv@b+2,f
  5199  0B34                     l1326:	
  5200  0B34  0859               	movf	___fldiv@bexp,w
  5201  0B35  00C9               	movwf	??___fldiv
  5202  0B36  1003               	clrc
  5203  0B37  0C49               	rrf	??___fldiv,w
  5204  0B38  00CA               	movwf	??___fldiv+1
  5205  0B39  084A               	movf	??___fldiv+1,w
  5206  0B3A  00C8               	movwf	___fldiv@b+3
  5207  0B3B  29F9               	goto	L5
  5208  0B3C                     __end_of___fldiv:	
  5209                           
  5210                           	psect	text8
  5211  19C7                     __ptext8:	
  5212 ;; *************** function _Package_Usart_is_for_me *****************
  5213 ;; Defined at:
  5214 ;;		line 8 in file "protocolo.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  retorno         1    0[BANK0 ] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      unsigned char 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 200/100
  5225 ;;		On exit  : 300/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5228 ;;      Params:         0       0       0       0       0
  5229 ;;      Locals:         0       1       0       0       0
  5230 ;;      Temps:          0       0       0       0       0
  5231 ;;      Totals:         0       1       0       0       0
  5232 ;;Total ram usage:        1 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_MediaPlacaVaccum
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _Package_Usart_is_for_me
  5244  19C7                     _Package_Usart_is_for_me:	
  5245                           
  5246                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5247                           
  5248                           ;incstack = 0
  5249                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5250  19C7  1683               	bsf	3,5	;RP0=1, select bank1
  5251  19C8  1C69               	btfss	_generic_status^(0+128),0
  5252  19C9  29D9               	goto	l6898
  5253                           
  5254                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5255  19CA  1703               	bsf	3,6	;RP1=1, select bank3
  5256  19CB  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5257  19CC  1303               	bcf	3,6	;RP1=0, select bank1
  5258  19CD  0663               	xorwf	_Board_Number^(0+128),w
  5259  19CE  1903               	skipnz
  5260  19CF  29D4               	goto	l678
  5261  19D0  1703               	bsf	3,6	;RP1=1, select bank3
  5262  19D1  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5263  19D2  1D03               	btfss	3,2
  5264  19D3  29D9               	goto	l6898
  5265  19D4                     l678:	
  5266                           
  5267                           ;protocolo.c: 13:             retorno=1;
  5268  19D4  1283               	bcf	3,5	;RP0=0, select bank0
  5269  19D5  1303               	bcf	3,6	;RP1=0, select bank0
  5270  19D6  01A0               	clrf	Package_Usart_is_for_me@retorno
  5271  19D7  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5272  19D8  29DC               	goto	l6902
  5273  19D9                     l6898:	
  5274                           
  5275                           ;protocolo.c: 15:             retorno=0;
  5276  19D9  1283               	bcf	3,5	;RP0=0, select bank0
  5277  19DA  1303               	bcf	3,6	;RP1=0, select bank0
  5278  19DB  01A0               	clrf	Package_Usart_is_for_me@retorno
  5279  19DC                     l6902:	
  5280                           
  5281                           ;protocolo.c: 21:      return retorno;
  5282  19DC  0820               	movf	Package_Usart_is_for_me@retorno,w
  5283  19DD  0008               	return
  5284  19DE                     __end_of_Package_Usart_is_for_me:	
  5285                           
  5286                           	psect	text9
  5287  1E8B                     __ptext9:	
  5288 ;; *************** function _ADC_Media_10bits *****************
  5289 ;; Defined at:
  5290 ;;		line 20 in file "adc.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  canal           1    wreg     unsigned char 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  canal           1   38[BANK0 ] unsigned char 
  5295 ;;  value           2   39[BANK0 ] unsigned int 
  5296 ;;  i               1   41[BANK0 ] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  4   33[BANK0 ] float 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 300/100
  5303 ;;		On exit  : 300/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5306 ;;      Params:         0       4       0       0       0
  5307 ;;      Locals:         0       4       0       0       0
  5308 ;;      Temps:          0       1       0       0       0
  5309 ;;      Totals:         0       9       0       0       0
  5310 ;;Total ram usage:        9 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    2
  5313 ;; This function calls:
  5314 ;;		___lwdiv
  5315 ;;		___xxtofl
  5316 ;;		_captura
  5317 ;;		_my_delay_ms
  5318 ;; This function is called by:
  5319 ;;		_MediaPlacaVaccum
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           
  5324                           ;psect for function _ADC_Media_10bits
  5325  1E8B                     _ADC_Media_10bits:	
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5329                           ;ADC_Media_10bits@canal stored from wreg
  5330  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  5331  1E8C  00C6               	movwf	ADC_Media_10bits@canal
  5332                           
  5333                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5334  1E8D  0846               	movf	ADC_Media_10bits@canal,w
  5335  1E8E  00C5               	movwf	??_ADC_Media_10bits
  5336  1E8F  0DC5               	rlf	??_ADC_Media_10bits,f
  5337  1E90  0DC5               	rlf	??_ADC_Media_10bits,f
  5338  1E91  081F               	movf	31,w	;volatile
  5339  1E92  0645               	xorwf	??_ADC_Media_10bits,w
  5340  1E93  39C3               	andlw	-61
  5341  1E94  0645               	xorwf	??_ADC_Media_10bits,w
  5342  1E95  009F               	movwf	31	;volatile
  5343                           
  5344                           ;adc.c: 24:       my_delay_ms(10);
  5345  1E96  3000               	movlw	0
  5346  1E97  00A3               	movwf	my_delay_ms@time+3
  5347  1E98  3000               	movlw	0
  5348  1E99  00A2               	movwf	my_delay_ms@time+2
  5349  1E9A  3000               	movlw	0
  5350  1E9B  00A1               	movwf	my_delay_ms@time+1
  5351  1E9C  300A               	movlw	10
  5352  1E9D  00A0               	movwf	my_delay_ms@time
  5353  1E9E  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5354                           
  5355                           ;adc.c: 26:       value=0;
  5356  1EA3  01C7               	clrf	ADC_Media_10bits@value
  5357  1EA4  01C8               	clrf	ADC_Media_10bits@value+1
  5358                           
  5359                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5360  1EA5  01C9               	clrf	ADC_Media_10bits@i
  5361  1EA6  0AC9               	incf	ADC_Media_10bits@i,f
  5362  1EA7                     l6880:	
  5363                           
  5364                           ;adc.c: 28:           value+=captura();
  5365  1EA7  160A  158A  2165  160A  158A  	fcall	_captura
  5366  1EAC  0820               	movf	?_captura,w
  5367  1EAD  07C7               	addwf	ADC_Media_10bits@value,f
  5368  1EAE  1803               	skipnc
  5369  1EAF  0AC8               	incf	ADC_Media_10bits@value+1,f
  5370  1EB0  0821               	movf	?_captura+1,w
  5371  1EB1  07C8               	addwf	ADC_Media_10bits@value+1,f
  5372  1EB2  3001               	movlw	1
  5373  1EB3  00C5               	movwf	??_ADC_Media_10bits
  5374  1EB4  0845               	movf	??_ADC_Media_10bits,w
  5375  1EB5  07C9               	addwf	ADC_Media_10bits@i,f
  5376  1EB6  3033               	movlw	51
  5377  1EB7  0249               	subwf	ADC_Media_10bits@i,w
  5378  1EB8  1C03               	skipc
  5379  1EB9  2EA7               	goto	l6880
  5380                           
  5381                           ;adc.c: 29:       value/=(i-1);
  5382  1EBA  0849               	movf	ADC_Media_10bits@i,w
  5383  1EBB  3EFF               	addlw	255
  5384  1EBC  00A0               	movwf	___lwdiv@divisor
  5385  1EBD  30FF               	movlw	255
  5386  1EBE  1803               	skipnc
  5387  1EBF  3000               	movlw	0
  5388  1EC0  00A1               	movwf	___lwdiv@divisor+1
  5389  1EC1  0848               	movf	ADC_Media_10bits@value+1,w
  5390  1EC2  00A3               	movwf	___lwdiv@dividend+1
  5391  1EC3  0847               	movf	ADC_Media_10bits@value,w
  5392  1EC4  00A2               	movwf	___lwdiv@dividend
  5393  1EC5  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  5394  1ECA  0821               	movf	?___lwdiv+1,w
  5395  1ECB  00C8               	movwf	ADC_Media_10bits@value+1
  5396  1ECC  0820               	movf	?___lwdiv,w
  5397  1ECD  00C7               	movwf	ADC_Media_10bits@value
  5398                           
  5399                           ;adc.c: 30:       return value;
  5400  1ECE  0847               	movf	ADC_Media_10bits@value,w
  5401  1ECF  00B3               	movwf	___xxtofl@val
  5402  1ED0  0848               	movf	ADC_Media_10bits@value+1,w
  5403  1ED1  00B4               	movwf	___xxtofl@val+1
  5404  1ED2  01B5               	clrf	___xxtofl@val+2
  5405  1ED3  01B6               	clrf	___xxtofl@val+3
  5406  1ED4  3000               	movlw	0
  5407  1ED5  160A  118A  21CC   	fcall	___xxtofl
  5408  1ED8  0836               	movf	?___xxtofl+3,w
  5409  1ED9  00C4               	movwf	?_ADC_Media_10bits+3
  5410  1EDA  0835               	movf	?___xxtofl+2,w
  5411  1EDB  00C3               	movwf	?_ADC_Media_10bits+2
  5412  1EDC  0834               	movf	?___xxtofl+1,w
  5413  1EDD  00C2               	movwf	?_ADC_Media_10bits+1
  5414  1EDE  0833               	movf	?___xxtofl,w
  5415  1EDF  00C1               	movwf	?_ADC_Media_10bits
  5416  1EE0  0008               	return
  5417  1EE1                     __end_of_ADC_Media_10bits:	
  5418                           
  5419                           	psect	text10
  5420  11CC                     __ptext10:	
  5421 ;; *************** function ___xxtofl *****************
  5422 ;; Defined at:
  5423 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  sign            1    wreg     unsigned char 
  5426 ;;  val             4   19[BANK0 ] long 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  sign            1   27[BANK0 ] unsigned char 
  5429 ;;  arg             4   29[BANK0 ] unsigned long 
  5430 ;;  exp             1   28[BANK0 ] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  4   19[BANK0 ] unsigned char 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 300/0
  5437 ;;		On exit  : 300/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       4       0       0       0
  5441 ;;      Locals:         0       6       0       0       0
  5442 ;;      Temps:          0       4       0       0       0
  5443 ;;      Totals:         0      14       0       0       0
  5444 ;;Total ram usage:       14 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    1
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_MediaPlacaVaccum
  5451 ;;		_ADC_Media_10bits
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           
  5456                           ;psect for function ___xxtofl
  5457  11CC                     ___xxtofl:	
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5461                           ;___xxtofl@sign stored from wreg
  5462  11CC  00BB               	movwf	___xxtofl@sign
  5463  11CD  083B               	movf	___xxtofl@sign,w
  5464  11CE  1D03               	btfss	3,2
  5465  11CF  1FB6               	btfss	___xxtofl@val+3,7
  5466  11D0  29E1               	goto	l6442
  5467  11D1  0933               	comf	___xxtofl@val,w
  5468  11D2  00BD               	movwf	___xxtofl@arg
  5469  11D3  0934               	comf	___xxtofl@val+1,w
  5470  11D4  00BE               	movwf	___xxtofl@arg+1
  5471  11D5  0935               	comf	___xxtofl@val+2,w
  5472  11D6  00BF               	movwf	___xxtofl@arg+2
  5473  11D7  0936               	comf	___xxtofl@val+3,w
  5474  11D8  00C0               	movwf	___xxtofl@arg+3
  5475  11D9  0ABD               	incf	___xxtofl@arg,f
  5476  11DA  1903               	skipnz
  5477  11DB  0ABE               	incf	___xxtofl@arg+1,f
  5478  11DC  1903               	skipnz
  5479  11DD  0ABF               	incf	___xxtofl@arg+2,f
  5480  11DE  1903               	skipnz
  5481  11DF  0AC0               	incf	___xxtofl@arg+3,f
  5482  11E0  29E9               	goto	l1380
  5483  11E1                     l6442:	
  5484  11E1  0836               	movf	___xxtofl@val+3,w
  5485  11E2  00C0               	movwf	___xxtofl@arg+3
  5486  11E3  0835               	movf	___xxtofl@val+2,w
  5487  11E4  00BF               	movwf	___xxtofl@arg+2
  5488  11E5  0834               	movf	___xxtofl@val+1,w
  5489  11E6  00BE               	movwf	___xxtofl@arg+1
  5490  11E7  0833               	movf	___xxtofl@val,w
  5491  11E8  00BD               	movwf	___xxtofl@arg
  5492  11E9                     l1380:	
  5493  11E9  0836               	movf	___xxtofl@val+3,w
  5494  11EA  0435               	iorwf	___xxtofl@val+2,w
  5495  11EB  0434               	iorwf	___xxtofl@val+1,w
  5496  11EC  0433               	iorwf	___xxtofl@val,w
  5497  11ED  1D03               	skipz
  5498  11EE  29F8               	goto	l6448
  5499  11EF  3000               	movlw	0
  5500  11F0  00B6               	movwf	?___xxtofl+3
  5501  11F1  3000               	movlw	0
  5502  11F2  00B5               	movwf	?___xxtofl+2
  5503  11F3  3000               	movlw	0
  5504  11F4  00B4               	movwf	?___xxtofl+1
  5505  11F5  3000               	movlw	0
  5506  11F6  00B3               	movwf	?___xxtofl
  5507  11F7  0008               	return
  5508  11F8                     l6448:	
  5509  11F8  3096               	movlw	150
  5510  11F9  00B7               	movwf	??___xxtofl
  5511  11FA  0837               	movf	??___xxtofl,w
  5512  11FB  00BC               	movwf	___xxtofl@exp
  5513  11FC                     l6452:	
  5514  11FC  30FE               	movlw	254
  5515  11FD  0540               	andwf	___xxtofl@arg+3,w
  5516  11FE  1903               	btfsc	3,2
  5517  11FF  2A29               	goto	l1386
  5518  1200  3001               	movlw	1
  5519  1201  00B7               	movwf	??___xxtofl
  5520  1202  0837               	movf	??___xxtofl,w
  5521  1203  07BC               	addwf	___xxtofl@exp,f
  5522  1204  3001               	movlw	1
  5523  1205                     u6805:	
  5524  1205  1003               	clrc
  5525  1206  0CC0               	rrf	___xxtofl@arg+3,f
  5526  1207  0CBF               	rrf	___xxtofl@arg+2,f
  5527  1208  0CBE               	rrf	___xxtofl@arg+1,f
  5528  1209  0CBD               	rrf	___xxtofl@arg,f
  5529  120A  3EFF               	addlw	-1
  5530  120B  1D03               	skipz
  5531  120C  2A05               	goto	u6805
  5532  120D  29FC               	goto	l6452
  5533  120E                     l6454:	
  5534  120E  3001               	movlw	1
  5535  120F  00B7               	movwf	??___xxtofl
  5536  1210  0837               	movf	??___xxtofl,w
  5537  1211  07BC               	addwf	___xxtofl@exp,f
  5538  1212  3001               	movlw	1
  5539  1213  07BD               	addwf	___xxtofl@arg,f
  5540  1214  3000               	movlw	0
  5541  1215  1803               	skipnc
  5542  1216  3001               	movlw	1
  5543  1217  07BE               	addwf	___xxtofl@arg+1,f
  5544  1218  3000               	movlw	0
  5545  1219  1803               	skipnc
  5546  121A  3001               	movlw	1
  5547  121B  07BF               	addwf	___xxtofl@arg+2,f
  5548  121C  3000               	movlw	0
  5549  121D  1803               	skipnc
  5550  121E  3001               	movlw	1
  5551  121F  07C0               	addwf	___xxtofl@arg+3,f
  5552  1220  3001               	movlw	1
  5553  1221                     u6825:	
  5554  1221  1003               	clrc
  5555  1222  0CC0               	rrf	___xxtofl@arg+3,f
  5556  1223  0CBF               	rrf	___xxtofl@arg+2,f
  5557  1224  0CBE               	rrf	___xxtofl@arg+1,f
  5558  1225  0CBD               	rrf	___xxtofl@arg,f
  5559  1226  3EFF               	addlw	-1
  5560  1227  1D03               	skipz
  5561  1228  2A21               	goto	u6825
  5562  1229                     l1386:	
  5563  1229  30FF               	movlw	255
  5564  122A  0540               	andwf	___xxtofl@arg+3,w
  5565  122B  1903               	btfsc	3,2
  5566  122C  2A3D               	goto	l6462
  5567  122D  2A0E               	goto	l6454
  5568  122E                     l6464:	
  5569  122E  3002               	movlw	2
  5570  122F  023C               	subwf	___xxtofl@exp,w
  5571  1230  1C03               	btfss	3,0
  5572  1231  2A3F               	goto	l1393
  5573  1232  3001               	movlw	1
  5574  1233  02BC               	subwf	___xxtofl@exp,f
  5575  1234  3001               	movlw	1
  5576  1235  00B7               	movwf	??___xxtofl
  5577  1236                     u6845:	
  5578  1236  1003               	clrc
  5579  1237  0DBD               	rlf	___xxtofl@arg,f
  5580  1238  0DBE               	rlf	___xxtofl@arg+1,f
  5581  1239  0DBF               	rlf	___xxtofl@arg+2,f
  5582  123A  0DC0               	rlf	___xxtofl@arg+3,f
  5583  123B  0BB7               	decfsz	??___xxtofl,f
  5584  123C  2A36               	goto	u6845
  5585  123D                     l6462:	
  5586  123D  1FBF               	btfss	___xxtofl@arg+2,7
  5587  123E  2A2E               	goto	l6464
  5588  123F                     l1393:	
  5589  123F  183C               	btfsc	___xxtofl@exp,0
  5590  1240  2A49               	goto	l1394
  5591  1241  30FF               	movlw	255
  5592  1242  05BD               	andwf	___xxtofl@arg,f
  5593  1243  30FF               	movlw	255
  5594  1244  05BE               	andwf	___xxtofl@arg+1,f
  5595  1245  307F               	movlw	127
  5596  1246  05BF               	andwf	___xxtofl@arg+2,f
  5597  1247  30FF               	movlw	255
  5598  1248  05C0               	andwf	___xxtofl@arg+3,f
  5599  1249                     l1394:	
  5600  1249  1003               	clrc
  5601  124A  0CBC               	rrf	___xxtofl@exp,f
  5602  124B  083C               	movf	___xxtofl@exp,w
  5603  124C  00B7               	movwf	??___xxtofl
  5604  124D  01B8               	clrf	??___xxtofl+1
  5605  124E  01B9               	clrf	??___xxtofl+2
  5606  124F  01BA               	clrf	??___xxtofl+3
  5607  1250  3018               	movlw	24
  5608  1251                     u6885:	
  5609  1251  1003               	clrc
  5610  1252  0DB7               	rlf	??___xxtofl,f
  5611  1253  0DB8               	rlf	??___xxtofl+1,f
  5612  1254  0DB9               	rlf	??___xxtofl+2,f
  5613  1255  0DBA               	rlf	??___xxtofl+3,f
  5614  1256  3EFF               	addlw	-1
  5615  1257  1D03               	skipz
  5616  1258  2A51               	goto	u6885
  5617  1259  0837               	movf	??___xxtofl,w
  5618  125A  04BD               	iorwf	___xxtofl@arg,f
  5619  125B  0838               	movf	??___xxtofl+1,w
  5620  125C  04BE               	iorwf	___xxtofl@arg+1,f
  5621  125D  0839               	movf	??___xxtofl+2,w
  5622  125E  04BF               	iorwf	___xxtofl@arg+2,f
  5623  125F  083A               	movf	??___xxtofl+3,w
  5624  1260  04C0               	iorwf	___xxtofl@arg+3,f
  5625  1261  083B               	movf	___xxtofl@sign,w
  5626  1262  1D03               	btfss	3,2
  5627  1263  1FB6               	btfss	___xxtofl@val+3,7
  5628  1264  2A66               	goto	l6476
  5629  1265  17C0               	bsf	___xxtofl@arg+3,7
  5630  1266                     l6476:	
  5631  1266  0840               	movf	___xxtofl@arg+3,w
  5632  1267  00B6               	movwf	?___xxtofl+3
  5633  1268  083F               	movf	___xxtofl@arg+2,w
  5634  1269  00B5               	movwf	?___xxtofl+2
  5635  126A  083E               	movf	___xxtofl@arg+1,w
  5636  126B  00B4               	movwf	?___xxtofl+1
  5637  126C  083D               	movf	___xxtofl@arg,w
  5638  126D  00B3               	movwf	?___xxtofl
  5639  126E  0008               	return
  5640  126F                     __end_of___xxtofl:	
  5641                           
  5642                           	psect	text11
  5643  1E4D                     __ptext11:	
  5644 ;; *************** function _ADC_Max_10Bits *****************
  5645 ;; Defined at:
  5646 ;;		line 34 in file "adc.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  canal           1    wreg     unsigned char 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  canal           1   13[BANK0 ] unsigned char 
  5651 ;;  value           2   16[BANK0 ] unsigned int 
  5652 ;;  Temp            2   14[BANK0 ] unsigned int 
  5653 ;;  i               1   18[BANK0 ] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  2   10[BANK0 ] unsigned int 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 300/100
  5660 ;;		On exit  : 300/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       2       0       0       0
  5664 ;;      Locals:         0       6       0       0       0
  5665 ;;      Temps:          0       1       0       0       0
  5666 ;;      Totals:         0       9       0       0       0
  5667 ;;Total ram usage:        9 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    2
  5670 ;; This function calls:
  5671 ;;		_captura
  5672 ;;		_my_delay_ms
  5673 ;; This function is called by:
  5674 ;;		_MediaPlacaVaccum
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _ADC_Max_10Bits
  5680  1E4D                     _ADC_Max_10Bits:	
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5684                           ;ADC_Max_10Bits@canal stored from wreg
  5685  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
  5686  1E4E  00AD               	movwf	ADC_Max_10Bits@canal
  5687                           
  5688                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5689  1E4F  082D               	movf	ADC_Max_10Bits@canal,w
  5690  1E50  00AC               	movwf	??_ADC_Max_10Bits
  5691  1E51  0DAC               	rlf	??_ADC_Max_10Bits,f
  5692  1E52  0DAC               	rlf	??_ADC_Max_10Bits,f
  5693  1E53  081F               	movf	31,w	;volatile
  5694  1E54  062C               	xorwf	??_ADC_Max_10Bits,w
  5695  1E55  39C3               	andlw	-61
  5696  1E56  062C               	xorwf	??_ADC_Max_10Bits,w
  5697  1E57  009F               	movwf	31	;volatile
  5698                           
  5699                           ;adc.c: 39:       my_delay_ms(10);
  5700  1E58  3000               	movlw	0
  5701  1E59  00A3               	movwf	my_delay_ms@time+3
  5702  1E5A  3000               	movlw	0
  5703  1E5B  00A2               	movwf	my_delay_ms@time+2
  5704  1E5C  3000               	movlw	0
  5705  1E5D  00A1               	movwf	my_delay_ms@time+1
  5706  1E5E  300A               	movlw	10
  5707  1E5F  00A0               	movwf	my_delay_ms@time
  5708  1E60  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5709                           
  5710                           ;adc.c: 41:       value=0;
  5711  1E65  01B0               	clrf	ADC_Max_10Bits@value
  5712  1E66  01B1               	clrf	ADC_Max_10Bits@value+1
  5713                           
  5714                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5715  1E67  01B2               	clrf	ADC_Max_10Bits@i
  5716  1E68  0AB2               	incf	ADC_Max_10Bits@i,f
  5717  1E69                     l6920:	
  5718                           
  5719                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5720  1E69  160A  158A  2165  160A  158A  	fcall	_captura
  5721  1E6E  0821               	movf	?_captura+1,w
  5722  1E6F  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5723  1E70  0820               	movf	?_captura,w
  5724  1E71  00AE               	movwf	ADC_Max_10Bits@Temp
  5725                           
  5726                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5727  1E72  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5728  1E73  0231               	subwf	ADC_Max_10Bits@value+1,w
  5729  1E74  1D03               	skipz
  5730  1E75  2E78               	goto	u7245
  5731  1E76  082E               	movf	ADC_Max_10Bits@Temp,w
  5732  1E77  0230               	subwf	ADC_Max_10Bits@value,w
  5733  1E78                     u7245:	
  5734  1E78  1803               	skipnc
  5735  1E79  2E7E               	goto	l6926
  5736  1E7A  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5737  1E7B  00B1               	movwf	ADC_Max_10Bits@value+1
  5738  1E7C  082E               	movf	ADC_Max_10Bits@Temp,w
  5739  1E7D  00B0               	movwf	ADC_Max_10Bits@value
  5740  1E7E                     l6926:	
  5741                           
  5742                           ;adc.c: 46:           }
  5743  1E7E  3001               	movlw	1
  5744  1E7F  00AC               	movwf	??_ADC_Max_10Bits
  5745  1E80  082C               	movf	??_ADC_Max_10Bits,w
  5746  1E81  07B2               	addwf	ADC_Max_10Bits@i,f
  5747  1E82  3033               	movlw	51
  5748  1E83  0232               	subwf	ADC_Max_10Bits@i,w
  5749  1E84  1C03               	skipc
  5750  1E85  2E69               	goto	l6920
  5751                           
  5752                           ;adc.c: 47:       return value;
  5753  1E86  0831               	movf	ADC_Max_10Bits@value+1,w
  5754  1E87  00AB               	movwf	?_ADC_Max_10Bits+1
  5755  1E88  0830               	movf	ADC_Max_10Bits@value,w
  5756  1E89  00AA               	movwf	?_ADC_Max_10Bits
  5757  1E8A  0008               	return
  5758  1E8B                     __end_of_ADC_Max_10Bits:	
  5759                           
  5760                           	psect	text12
  5761  1CF2                     __ptext12:	
  5762 ;; *************** function _my_delay_ms *****************
  5763 ;; Defined at:
  5764 ;;		line 5 in file "my_delay.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  time            4    0[BANK0 ] long 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  i               4    6[BANK0 ] long 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, btemp+1
  5773 ;; Tracked objects:
  5774 ;;		On entry : 300/0
  5775 ;;		On exit  : 300/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5778 ;;      Params:         0       4       0       0       0
  5779 ;;      Locals:         0       4       0       0       0
  5780 ;;      Temps:          0       2       0       0       0
  5781 ;;      Totals:         0      10       0       0       0
  5782 ;;Total ram usage:       10 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    1
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_MediaPlacaVaccum
  5789 ;;		_ADC_Media_10bits
  5790 ;;		_ADC_Max_10Bits
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _my_delay_ms
  5796  1CF2                     _my_delay_ms:	
  5797                           
  5798                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5802  1CF2  3000               	movlw	0
  5803  1CF3  00A9               	movwf	my_delay_ms@i+3
  5804  1CF4  3000               	movlw	0
  5805  1CF5  00A8               	movwf	my_delay_ms@i+2
  5806  1CF6  3000               	movlw	0
  5807  1CF7  00A7               	movwf	my_delay_ms@i+1
  5808  1CF8  3000               	movlw	0
  5809  1CF9  00A6               	movwf	my_delay_ms@i
  5810  1CFA                     l6026:	
  5811  1CFA  0829               	movf	my_delay_ms@i+3,w
  5812  1CFB  3A80               	xorlw	128
  5813  1CFC  00FF               	movwf	127
  5814  1CFD  0823               	movf	my_delay_ms@time+3,w
  5815  1CFE  3A80               	xorlw	128
  5816  1CFF  027F               	subwf	127,w
  5817  1D00  1D03               	skipz
  5818  1D01  2D0C               	goto	u5813
  5819  1D02  0822               	movf	my_delay_ms@time+2,w
  5820  1D03  0228               	subwf	my_delay_ms@i+2,w
  5821  1D04  1D03               	skipz
  5822  1D05  2D0C               	goto	u5813
  5823  1D06  0821               	movf	my_delay_ms@time+1,w
  5824  1D07  0227               	subwf	my_delay_ms@i+1,w
  5825  1D08  1D03               	skipz
  5826  1D09  2D0C               	goto	u5813
  5827  1D0A  0820               	movf	my_delay_ms@time,w
  5828  1D0B  0226               	subwf	my_delay_ms@i,w
  5829  1D0C                     u5813:	
  5830  1D0C  1803               	btfsc	3,0
  5831  1D0D  0008               	return
  5832                           
  5833                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5834  1D0E  3003               	movlw	3
  5835  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5836  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  5837  1D11  00A5               	movwf	??_my_delay_ms+1
  5838  1D12  3097               	movlw	151
  5839  1D13  00A4               	movwf	??_my_delay_ms
  5840  1D14                     u8017:	
  5841  1D14  0BA4               	decfsz	??_my_delay_ms,f
  5842  1D15  2D14               	goto	u8017
  5843  1D16  0BA5               	decfsz	??_my_delay_ms+1,f
  5844  1D17  2D14               	goto	u8017
  5845                           
  5846                           ;my_delay.c: 10:             }
  5847  1D18  3001               	movlw	1
  5848  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  5849  1D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5850  1D1B  07A6               	addwf	my_delay_ms@i,f
  5851  1D1C  3000               	movlw	0
  5852  1D1D  1803               	skipnc
  5853  1D1E  3001               	movlw	1
  5854  1D1F  07A7               	addwf	my_delay_ms@i+1,f
  5855  1D20  3000               	movlw	0
  5856  1D21  1803               	skipnc
  5857  1D22  3001               	movlw	1
  5858  1D23  07A8               	addwf	my_delay_ms@i+2,f
  5859  1D24  3000               	movlw	0
  5860  1D25  1803               	skipnc
  5861  1D26  3001               	movlw	1
  5862  1D27  07A9               	addwf	my_delay_ms@i+3,f
  5863  1D28  2CFA               	goto	l6026
  5864  1D29                     __end_of_my_delay_ms:	
  5865                           
  5866                           	psect	text13
  5867  1965                     __ptext13:	
  5868 ;; *************** function _captura *****************
  5869 ;; Defined at:
  5870 ;;		line 123 in file "adc.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  2    0[BANK0 ] unsigned int 
  5877 ;; Registers used:
  5878 ;;		wreg
  5879 ;; Tracked objects:
  5880 ;;		On entry : 300/0
  5881 ;;		On exit  : 300/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       2       0       0       0
  5885 ;;      Locals:         0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0
  5887 ;;      Totals:         0       2       0       0       0
  5888 ;;Total ram usage:        2 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    1
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_ADC_Media_10bits
  5895 ;;		_ADC_Max_10Bits
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _captura
  5901  1965                     _captura:	
  5902                           
  5903                           ;adc.c: 124:     ADCON0bits.GO=1;
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _captura: [wreg]
  5907  1965  149F               	bsf	31,1	;volatile
  5908  1966                     l356:	
  5909                           ;adc.c: 128:           }
  5910                           
  5911                           
  5912                           ;adc.c: 125:     while(ADCON0bits.GO)
  5913  1966  189F               	btfsc	31,1	;volatile
  5914  1967  2966               	goto	l356
  5915                           
  5916                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5917  1968  081E               	movf	30,w	;volatile
  5918  1969  00A1               	movwf	?_captura+1
  5919  196A  1683               	bsf	3,5	;RP0=1, select bank1
  5920  196B  081E               	movf	30,w	;volatile
  5921  196C  1283               	bcf	3,5	;RP0=0, select bank0
  5922  196D  00A0               	movwf	?_captura
  5923  196E  0008               	return
  5924  196F                     __end_of_captura:	
  5925                           
  5926                           	psect	text14
  5927  1C2A                     __ptext14:	
  5928 ;; *************** function _I2C_Master_Init *****************
  5929 ;; Defined at:
  5930 ;;		line 7 in file "I2C.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  c               4   14[BANK0 ] const unsigned long 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, pclath, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 300/0
  5941 ;;		On exit  : 300/100
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5944 ;;      Params:         0       4       0       0       0
  5945 ;;      Locals:         0       0       0       0       0
  5946 ;;      Temps:          0       4       0       0       0
  5947 ;;      Totals:         0       8       0       0       0
  5948 ;;Total ram usage:        8 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    2
  5951 ;; This function calls:
  5952 ;;		___lldiv
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           
  5959                           ;psect for function _I2C_Master_Init
  5960  1C2A                     _I2C_Master_Init:	
  5961                           
  5962                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5966  1C2A  3028               	movlw	40
  5967  1C2B  0094               	movwf	20	;volatile
  5968                           
  5969                           ;I2C.c: 11:   SSPCON2 = 0;
  5970  1C2C  1683               	bsf	3,5	;RP0=1, select bank1
  5971  1C2D  0191               	clrf	17	;volatile
  5972                           
  5973                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5974  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5975  1C2F  082E               	movf	I2C_Master_Init@c,w
  5976  1C30  00B2               	movwf	??_I2C_Master_Init
  5977  1C31  082F               	movf	I2C_Master_Init@c+1,w
  5978  1C32  00B3               	movwf	??_I2C_Master_Init+1
  5979  1C33  0830               	movf	I2C_Master_Init@c+2,w
  5980  1C34  00B4               	movwf	??_I2C_Master_Init+2
  5981  1C35  0831               	movf	I2C_Master_Init@c+3,w
  5982  1C36  00B5               	movwf	??_I2C_Master_Init+3
  5983  1C37  3002               	movlw	2
  5984  1C38                     u7695:	
  5985  1C38  1003               	clrc
  5986  1C39  0DB2               	rlf	??_I2C_Master_Init,f
  5987  1C3A  0DB3               	rlf	??_I2C_Master_Init+1,f
  5988  1C3B  0DB4               	rlf	??_I2C_Master_Init+2,f
  5989  1C3C  0DB5               	rlf	??_I2C_Master_Init+3,f
  5990  1C3D  3EFF               	addlw	-1
  5991  1C3E  1D03               	skipz
  5992  1C3F  2C38               	goto	u7695
  5993  1C40  0835               	movf	??_I2C_Master_Init+3,w
  5994  1C41  00A3               	movwf	___lldiv@divisor+3
  5995  1C42  0834               	movf	??_I2C_Master_Init+2,w
  5996  1C43  00A2               	movwf	___lldiv@divisor+2
  5997  1C44  0833               	movf	??_I2C_Master_Init+1,w
  5998  1C45  00A1               	movwf	___lldiv@divisor+1
  5999  1C46  0832               	movf	??_I2C_Master_Init,w
  6000  1C47  00A0               	movwf	___lldiv@divisor
  6001  1C48  3000               	movlw	0
  6002  1C49  00A7               	movwf	___lldiv@dividend+3
  6003  1C4A  307A               	movlw	122
  6004  1C4B  00A6               	movwf	___lldiv@dividend+2
  6005  1C4C  3012               	movlw	18
  6006  1C4D  00A5               	movwf	___lldiv@dividend+1
  6007  1C4E  3000               	movlw	0
  6008  1C4F  00A4               	movwf	___lldiv@dividend
  6009  1C50  160A  158A  273E   	fcall	___lldiv
  6010  1C53  0820               	movf	?___lldiv,w
  6011  1C54  3EFF               	addlw	255
  6012  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  6013  1C56  0093               	movwf	19	;volatile
  6014                           
  6015                           ;I2C.c: 13:   SSPSTAT = 0;
  6016  1C57  0194               	clrf	20	;volatile
  6017                           
  6018                           ;I2C.c: 14:   TRISC3 = 1;
  6019  1C58  1587               	bsf	7,3	;volatile
  6020                           
  6021                           ;I2C.c: 15:   TRISC4 = 1;
  6022  1C59  1607               	bsf	7,4	;volatile
  6023  1C5A  0008               	return
  6024  1C5B                     __end_of_I2C_Master_Init:	
  6025                           
  6026                           	psect	text15
  6027  1F3E                     __ptext15:	
  6028 ;; *************** function ___lldiv *****************
  6029 ;; Defined at:
  6030 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  divisor         4    0[BANK0 ] unsigned long 
  6033 ;;  dividend        4    4[BANK0 ] unsigned long 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  quotient        4    9[BANK0 ] unsigned long 
  6036 ;;  counter         1   13[BANK0 ] unsigned char 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  4    0[BANK0 ] unsigned long 
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0
  6041 ;; Tracked objects:
  6042 ;;		On entry : 300/0
  6043 ;;		On exit  : 300/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6046 ;;      Params:         0       8       0       0       0
  6047 ;;      Locals:         0       5       0       0       0
  6048 ;;      Temps:          0       1       0       0       0
  6049 ;;      Totals:         0      14       0       0       0
  6050 ;;Total ram usage:       14 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_I2C_Master_Init
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           
  6061                           ;psect for function ___lldiv
  6062  1F3E                     ___lldiv:	
  6063                           
  6064                           ;incstack = 0
  6065                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6066  1F3E  3000               	movlw	0
  6067  1F3F  00AC               	movwf	___lldiv@quotient+3
  6068  1F40  3000               	movlw	0
  6069  1F41  00AB               	movwf	___lldiv@quotient+2
  6070  1F42  3000               	movlw	0
  6071  1F43  00AA               	movwf	___lldiv@quotient+1
  6072  1F44  3000               	movlw	0
  6073  1F45  00A9               	movwf	___lldiv@quotient
  6074  1F46  0823               	movf	___lldiv@divisor+3,w
  6075  1F47  0422               	iorwf	___lldiv@divisor+2,w
  6076  1F48  0421               	iorwf	___lldiv@divisor+1,w
  6077  1F49  0420               	iorwf	___lldiv@divisor,w
  6078  1F4A  1903               	skipnz
  6079  1F4B  2F93               	goto	l6954
  6080  1F4C  01AD               	clrf	___lldiv@counter
  6081  1F4D  0AAD               	incf	___lldiv@counter,f
  6082  1F4E                     l6940:	
  6083  1F4E  1BA3               	btfsc	___lldiv@divisor+3,7
  6084  1F4F  2F5E               	goto	l6942
  6085  1F50  3001               	movlw	1
  6086  1F51  00A8               	movwf	??___lldiv
  6087  1F52                     u7275:	
  6088  1F52  1003               	clrc
  6089  1F53  0DA0               	rlf	___lldiv@divisor,f
  6090  1F54  0DA1               	rlf	___lldiv@divisor+1,f
  6091  1F55  0DA2               	rlf	___lldiv@divisor+2,f
  6092  1F56  0DA3               	rlf	___lldiv@divisor+3,f
  6093  1F57  0BA8               	decfsz	??___lldiv,f
  6094  1F58  2F52               	goto	u7275
  6095  1F59  3001               	movlw	1
  6096  1F5A  00A8               	movwf	??___lldiv
  6097  1F5B  0828               	movf	??___lldiv,w
  6098  1F5C  07AD               	addwf	___lldiv@counter,f
  6099  1F5D  2F4E               	goto	l6940
  6100  1F5E                     l6942:	
  6101  1F5E  3001               	movlw	1
  6102  1F5F  00A8               	movwf	??___lldiv
  6103  1F60                     u7295:	
  6104  1F60  1003               	clrc
  6105  1F61  0DA9               	rlf	___lldiv@quotient,f
  6106  1F62  0DAA               	rlf	___lldiv@quotient+1,f
  6107  1F63  0DAB               	rlf	___lldiv@quotient+2,f
  6108  1F64  0DAC               	rlf	___lldiv@quotient+3,f
  6109  1F65  0BA8               	decfsz	??___lldiv,f
  6110  1F66  2F60               	goto	u7295
  6111  1F67  0823               	movf	___lldiv@divisor+3,w
  6112  1F68  0227               	subwf	___lldiv@dividend+3,w
  6113  1F69  1D03               	skipz
  6114  1F6A  2F75               	goto	u7305
  6115  1F6B  0822               	movf	___lldiv@divisor+2,w
  6116  1F6C  0226               	subwf	___lldiv@dividend+2,w
  6117  1F6D  1D03               	skipz
  6118  1F6E  2F75               	goto	u7305
  6119  1F6F  0821               	movf	___lldiv@divisor+1,w
  6120  1F70  0225               	subwf	___lldiv@dividend+1,w
  6121  1F71  1D03               	skipz
  6122  1F72  2F75               	goto	u7305
  6123  1F73  0820               	movf	___lldiv@divisor,w
  6124  1F74  0224               	subwf	___lldiv@dividend,w
  6125  1F75                     u7305:	
  6126  1F75  1C03               	skipc
  6127  1F76  2F86               	goto	l6950
  6128  1F77  0820               	movf	___lldiv@divisor,w
  6129  1F78  02A4               	subwf	___lldiv@dividend,f
  6130  1F79  0821               	movf	___lldiv@divisor+1,w
  6131  1F7A  1C03               	skipc
  6132  1F7B  0F21               	incfsz	___lldiv@divisor+1,w
  6133  1F7C  02A5               	subwf	___lldiv@dividend+1,f
  6134  1F7D  0822               	movf	___lldiv@divisor+2,w
  6135  1F7E  1C03               	skipc
  6136  1F7F  0F22               	incfsz	___lldiv@divisor+2,w
  6137  1F80  02A6               	subwf	___lldiv@dividend+2,f
  6138  1F81  0823               	movf	___lldiv@divisor+3,w
  6139  1F82  1C03               	skipc
  6140  1F83  0F23               	incfsz	___lldiv@divisor+3,w
  6141  1F84  02A7               	subwf	___lldiv@dividend+3,f
  6142  1F85  1429               	bsf	___lldiv@quotient,0
  6143  1F86                     l6950:	
  6144  1F86  3001               	movlw	1
  6145  1F87                     u7315:	
  6146  1F87  1003               	clrc
  6147  1F88  0CA3               	rrf	___lldiv@divisor+3,f
  6148  1F89  0CA2               	rrf	___lldiv@divisor+2,f
  6149  1F8A  0CA1               	rrf	___lldiv@divisor+1,f
  6150  1F8B  0CA0               	rrf	___lldiv@divisor,f
  6151  1F8C  3EFF               	addlw	-1
  6152  1F8D  1D03               	skipz
  6153  1F8E  2F87               	goto	u7315
  6154  1F8F  3001               	movlw	1
  6155  1F90  02AD               	subwf	___lldiv@counter,f
  6156  1F91  1D03               	btfss	3,2
  6157  1F92  2F5E               	goto	l6942
  6158  1F93                     l6954:	
  6159  1F93  082C               	movf	___lldiv@quotient+3,w
  6160  1F94  00A3               	movwf	?___lldiv+3
  6161  1F95  082B               	movf	___lldiv@quotient+2,w
  6162  1F96  00A2               	movwf	?___lldiv+2
  6163  1F97  082A               	movf	___lldiv@quotient+1,w
  6164  1F98  00A1               	movwf	?___lldiv+1
  6165  1F99  0829               	movf	___lldiv@quotient,w
  6166  1F9A  00A0               	movwf	?___lldiv
  6167  1F9B  0008               	return
  6168  1F9C                     __end_of___lldiv:	
  6169                           
  6170                           	psect	text16
  6171  0036                     __ptext16:	
  6172 ;; *************** function _Decodify_Command *****************
  6173 ;; Defined at:
  6174 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6179 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6180 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6181 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6182 ;;  add             1   32[BANK1 ] unsigned char 
  6183 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6184 ;;  OutPut          4   35[BANK1 ] float 
  6185 ;;  tempint         2   33[BANK1 ] int 
  6186 ;;  dados           2   30[BANK1 ] int 
  6187 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 300/100
  6194 ;;		On exit  : 200/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6197 ;;      Params:         0       0       0       0       0
  6198 ;;      Locals:         0       0      45       0       0
  6199 ;;      Temps:          0       4       0       0       0
  6200 ;;      Totals:         0       4      45       0       0
  6201 ;;Total ram usage:       49 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    6
  6204 ;; This function calls:
  6205 ;;		_EEPROM_24C1025_Fill_All
  6206 ;;		_EEPROM_24C1025_Read_Buffer
  6207 ;;		_EEPROM_24C1025_Read_Byte
  6208 ;;		_EEPROM_24C1025_Read_Int
  6209 ;;		_EEPROM_24C1025_Read_Str
  6210 ;;		_EEPROM_24C1025_Write_Buffer
  6211 ;;		_EEPROM_24C1025_Write_Byte
  6212 ;;		_EEPROM_24C1025_Write_Int
  6213 ;;		_EEPROM_24C1025_Write_Str
  6214 ;;		_EEPROM_Read_Byte
  6215 ;;		_EEPROM_Read_Integer
  6216 ;;		_EEPROM_Read_String
  6217 ;;		_EEPROM_Write_Byte
  6218 ;;		_EEPROM_Write_Integer
  6219 ;;		_EEPROM_Write_String
  6220 ;;		_PROCULUS_Buzzer
  6221 ;;		_PROCULUS_Show_Screen
  6222 ;;		_PROCULUS_VP_Write_String
  6223 ;;		_Save_Log
  6224 ;;		_Send_Reply_OK
  6225 ;;		_Send_To_MB
  6226 ;;		_USART_put_buffer
  6227 ;;		_USART_put_int
  6228 ;;		_USART_put_string
  6229 ;;		_USART_putc
  6230 ;;		_USART_to_Protocol
  6231 ;;		___flmul
  6232 ;;		___fltol
  6233 ;;		_itoa
  6234 ;;		_strcat
  6235 ;;		_strcpy
  6236 ;;		_strlen
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           
  6243                           ;psect for function _Decodify_Command
  6244  0036                     _Decodify_Command:	
  6245                           
  6246                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6250  0036  30B9               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6251  0037  160A  158A  26E1  120A  118A  	fcall	_USART_to_Protocol
  6252                           
  6253                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6254  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6255  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6256  003E  0840               	movf	(_usart_protocol^(0+384)+7),w
  6257  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0041  00DE               	movwf	??_Decodify_Command
  6260  0042  085E               	movf	??_Decodify_Command,w
  6261  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6262  0044  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6263                           
  6264                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6265  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6266  0046  0841               	movf	(_usart_protocol^(0+384)+8),w
  6267  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6268  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6269  0049  00DE               	movwf	??_Decodify_Command
  6270  004A  085E               	movf	??_Decodify_Command,w
  6271  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6272  004C  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6273                           
  6274                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6275  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6276  004E  0842               	movf	(_usart_protocol^(0+384)+9),w
  6277  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0051  00DE               	movwf	??_Decodify_Command
  6280  0052  085E               	movf	??_Decodify_Command,w
  6281  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6282  0054  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6283                           
  6284                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6285  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6286  0056  0843               	movf	(_usart_protocol^(0+384)+10),w
  6287  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6288  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6289  0059  00DE               	movwf	??_Decodify_Command
  6290  005A  085E               	movf	??_Decodify_Command,w
  6291  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6292  005C  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6293                           
  6294                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6295  005D  2C60               	goto	l7486
  6296  005E                     l7284:	
  6297                           
  6298                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6299  005E  300B               	movlw	11
  6300  005F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6301                           
  6302                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.5");
  6303  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6304  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6305  0066  00A1               	movwf	USART_put_string@vetor
  6306  0067  3080               	movlw	128
  6307  0068  00A2               	movwf	USART_put_string@vetor+1
  6308  0069  160A  158A  24BF   	fcall	_USART_put_string
  6309                           
  6310                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6311  006C  0008               	return
  6312  006D                     l7288:	
  6313                           
  6314                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6315  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6316  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6317  006F  083F               	movf	(_usart_protocol^(0+384)+6),w
  6318  0070  1D03               	btfss	3,2
  6319  0071  287B               	goto	l7292
  6320                           
  6321                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6322  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6323  0073  0850               	movf	(_Tensao1+3)^(0+128),w
  6324  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6325  0075  084F               	movf	(_Tensao1+2)^(0+128),w
  6326  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6327  0077  084E               	movf	(_Tensao1+1)^(0+128),w
  6328  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6329  0079  084D               	movf	_Tensao1^(0+128),w
  6330  007A  2883               	goto	L6
  6331  007B                     l7292:	
  6332                           
  6333                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6334  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6335  007C  0854               	movf	(_Vaccum0+3)^(0+128),w
  6336  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6337  007E  0853               	movf	(_Vaccum0+2)^(0+128),w
  6338  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6339  0080  0852               	movf	(_Vaccum0+1)^(0+128),w
  6340  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6341  0082  0851               	movf	_Vaccum0^(0+128),w
  6342  0083                     L6:	
  6343  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6344                           
  6345                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6346  0084  3041               	movlw	65
  6347  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6348  0086  00AC               	movwf	___flmul@b+3
  6349  0087  3020               	movlw	32
  6350  0088  00AB               	movwf	___flmul@b+2
  6351  0089  3000               	movlw	0
  6352  008A  00AA               	movwf	___flmul@b+1
  6353  008B  3000               	movlw	0
  6354  008C  00A9               	movwf	___flmul@b
  6355  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6356  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6357  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0090  00B0               	movwf	___flmul@a+3
  6359  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6360  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6361  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0094  00AF               	movwf	___flmul@a+2
  6363  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6364  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6365  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0098  00AE               	movwf	___flmul@a+1
  6367  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6368  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6369  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6370  009C  00AD               	movwf	___flmul@a
  6371  009D  120A  118A  24B9  120A  118A  	fcall	___flmul
  6372  00A2  082C               	movf	?___flmul+3,w
  6373  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6374  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6375  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6376  00A6  082B               	movf	?___flmul+2,w
  6377  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6378  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6379  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6380  00AA  082A               	movf	?___flmul+1,w
  6381  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6382  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6383  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6384  00AE  0829               	movf	?___flmul,w
  6385  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6386  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6387                           
  6388                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6389  00B1  138B               	bcf	11,7	;volatile
  6390                           
  6391                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6392  00B2  3002               	movlw	2
  6393  00B3  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6394                           
  6395                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6396  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6397  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6398  00BA  00C6               	movwf	___fltol@f1+3
  6399  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6400  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6401  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6402  00BE  00C5               	movwf	___fltol@f1+2
  6403  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6404  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6405  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6406  00C2  00C4               	movwf	___fltol@f1+1
  6407  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6408  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6409  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6410  00C6  00C3               	movwf	___fltol@f1
  6411  00C7  160A  118A  2055  120A  118A  	fcall	___fltol
  6412  00CC  0844               	movf	?___fltol+1,w
  6413  00CD  00CF               	movwf	USART_put_int@value+1
  6414  00CE  0843               	movf	?___fltol,w
  6415  00CF  00CE               	movwf	USART_put_int@value
  6416  00D0  160A  158A  219A   	fcall	_USART_put_int
  6417                           
  6418                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6419  00D3  178B               	bsf	11,7	;volatile
  6420                           
  6421                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6422  00D4  0008               	return
  6423  00D5                     l7304:	
  6424                           
  6425                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6426  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6427  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6428  00D7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6429  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6430  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6431  00DA  00DE               	movwf	??_Decodify_Command
  6432  00DB  085E               	movf	??_Decodify_Command,w
  6433  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6434  00DD  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6435                           
  6436                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6437  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  6438  00DF  0840               	movf	(_usart_protocol^(0+384)+7),w
  6439  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  6440  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  6441  00E2  00DE               	movwf	??_Decodify_Command
  6442  00E3  085E               	movf	??_Decodify_Command,w
  6443  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6444  00E5  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6445                           
  6446                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6447  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  6448  00E7  0841               	movf	(_usart_protocol^(0+384)+8),w
  6449  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  6450  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  6451  00EA  00DE               	movwf	??_Decodify_Command
  6452  00EB  085E               	movf	??_Decodify_Command,w
  6453  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6454  00ED  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6455                           
  6456                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6457  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6458  00EF  0842               	movf	(_usart_protocol^(0+384)+9),w
  6459  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6460  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6461  00F2  00DE               	movwf	??_Decodify_Command
  6462  00F3  085E               	movf	??_Decodify_Command,w
  6463  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6464  00F5  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6465                           
  6466                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6467  00F6  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6468  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6469  00F8  00DB               	movwf	Save_Log@add_datalog+3
  6470  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  6471  00FA  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6472  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6473  00FC  00DA               	movwf	Save_Log@add_datalog+2
  6474  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  6475  00FE  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6476  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  6477  0100  00D9               	movwf	Save_Log@add_datalog+1
  6478  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0102  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6480  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0104  00D8               	movwf	Save_Log@add_datalog
  6482  0105  160A  118A  20C0   	fcall	_Save_Log
  6483                           
  6484                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6485  0108  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6486  0109  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6487                           
  6488                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6489  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6490  010B  1303               	bcf	3,6	;RP1=0, select bank1
  6491  010C  01DD               	clrf	_milisegundo^(0+128)	;volatile
  6492  010D  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6493                           
  6494                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6495  010E  0008               	return
  6496  010F                     l7312:	
  6497                           
  6498                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6499  010F  3002               	movlw	2
  6500  0110  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6501                           
  6502                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6503  0115  3001               	movlw	1
  6504  0116  1283               	bcf	3,5	;RP0=0, select bank0
  6505  0117  00CE               	movwf	USART_put_int@value
  6506  0118  3000               	movlw	0
  6507  0119  00CF               	movwf	USART_put_int@value+1
  6508  011A  160A  158A  219A   	fcall	_USART_put_int
  6509                           
  6510                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6511  011D  0008               	return
  6512  011E                     l7316:	
  6513                           
  6514                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6515  011E  1683               	bsf	3,5	;RP0=1, select bank3
  6516  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6517  0120  0840               	movf	(_usart_protocol^(0+384)+7),w
  6518  0121  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0123  00DE               	movwf	??_Decodify_Command
  6521  0124  085E               	movf	??_Decodify_Command,w
  6522  0125  00A0               	movwf	EEPROM_Write_Byte@dado
  6523  0126  1683               	bsf	3,5	;RP0=1, select bank3
  6524  0127  1703               	bsf	3,6	;RP1=1, select bank3
  6525  0128  083F               	movf	(_usart_protocol^(0+384)+6),w
  6526  0129  160A  158A  2599  120A  118A  	fcall	_EEPROM_Write_Byte
  6527  012E                     L7:	
  6528                           
  6529                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6530  012E  3003               	movlw	3
  6531  012F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6532                           
  6533                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6534  0134  160A  158A  215C   	fcall	_Send_Reply_OK
  6535                           
  6536                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6537  0137  0008               	return
  6538  0138                     l7320:	
  6539                           
  6540                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6541  0138  1683               	bsf	3,5	;RP0=1, select bank3
  6542  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6543  013A  083F               	movf	(_usart_protocol^(0+384)+6),w
  6544  013B  160A  158A  22C9  120A  118A  	fcall	_EEPROM_Read_Byte
  6545  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6546  0141  00DE               	movwf	??_Decodify_Command
  6547  0142  085E               	movf	??_Decodify_Command,w
  6548  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6549  0144  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6550                           
  6551                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6552  0145  3001               	movlw	1
  6553  0146  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6554                           
  6555                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6556  014B  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6557  014C  160A  118A  2000   	fcall	_USART_putc
  6558                           
  6559                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6560  014F  0008               	return
  6561  0150                     l7326:	
  6562                           
  6563                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6564  0150  1683               	bsf	3,5	;RP0=1, select bank3
  6565  0151  1703               	bsf	3,6	;RP1=1, select bank3
  6566  0152  083F               	movf	(_usart_protocol^(0+384)+6),w
  6567  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6568  0154  1303               	bcf	3,6	;RP1=0, select bank0
  6569  0155  00DE               	movwf	??_Decodify_Command
  6570  0156  085E               	movf	??_Decodify_Command,w
  6571  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6572  0158  00C0               	movwf	Decodify_Command@add^(0+128)
  6573                           
  6574                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6575  0159  1703               	bsf	3,6	;RP1=1, select bank3
  6576  015A  0841               	movf	(_usart_protocol^(0+384)+8),w
  6577  015B  1283               	bcf	3,5	;RP0=0, select bank0
  6578  015C  1303               	bcf	3,6	;RP1=0, select bank0
  6579  015D  00DE               	movwf	??_Decodify_Command
  6580  015E  01DF               	clrf	??_Decodify_Command+1
  6581  015F  1683               	bsf	3,5	;RP0=1, select bank3
  6582  0160  1703               	bsf	3,6	;RP1=1, select bank3
  6583  0161  0840               	movf	(_usart_protocol^(0+384)+7),w
  6584  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6585  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6586  0164  00E0               	movwf	??_Decodify_Command+2
  6587  0165  01E1               	clrf	??_Decodify_Command+3
  6588  0166  0860               	movf	??_Decodify_Command+2,w
  6589  0167  00E1               	movwf	??_Decodify_Command+3
  6590  0168  01E0               	clrf	??_Decodify_Command+2
  6591  0169  085E               	movf	??_Decodify_Command,w
  6592  016A  0460               	iorwf	??_Decodify_Command+2,w
  6593  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6594  016C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6595  016D  1283               	bcf	3,5	;RP0=0, select bank0
  6596  016E  085F               	movf	??_Decodify_Command+1,w
  6597  016F  0461               	iorwf	??_Decodify_Command+3,w
  6598  0170  1683               	bsf	3,5	;RP0=1, select bank1
  6599  0171  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6600                           
  6601                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6602  0172  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6603  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6604  0174  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6605  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6606  0176  083E               	movf	Decodify_Command@dados^(0+128),w
  6607  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0178  00A5               	movwf	EEPROM_Write_Integer@dado
  6609  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6610  017A  0840               	movf	Decodify_Command@add^(0+128),w
  6611  017B  160A  158A  245B  120A  118A  	fcall	_EEPROM_Write_Integer
  6612  0180  292E               	goto	L7
  6613  0181                     l7336:	
  6614                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6615                           
  6616                           
  6617                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6618  0181  1683               	bsf	3,5	;RP0=1, select bank3
  6619  0182  1703               	bsf	3,6	;RP1=1, select bank3
  6620  0183  083F               	movf	(_usart_protocol^(0+384)+6),w
  6621  0184  160A  158A  237C  120A  118A  	fcall	_EEPROM_Read_Integer
  6622  0189  0824               	movf	?_EEPROM_Read_Integer+1,w
  6623  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6624  018B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6625  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6626  018D  0823               	movf	?_EEPROM_Read_Integer,w
  6627  018E                     L8:	
  6628  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6629  018F  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6630                           
  6631                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6632  0190  3002               	movlw	2
  6633  0191  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6634                           
  6635                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6636  0196  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6637  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6638  0198  00CF               	movwf	USART_put_int@value+1
  6639  0199  1683               	bsf	3,5	;RP0=1, select bank1
  6640  019A  0841               	movf	Decodify_Command@tempint^(0+128),w
  6641  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6642  019C  00CE               	movwf	USART_put_int@value
  6643  019D  160A  158A  219A   	fcall	_USART_put_int
  6644                           
  6645                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6646  01A0  0008               	return
  6647  01A1                     l7342:	
  6648                           
  6649                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6650  01A1  30C0               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6651  01A2  00DE               	movwf	??_Decodify_Command
  6652  01A3  085E               	movf	??_Decodify_Command,w
  6653  01A4  00A5               	movwf	EEPROM_Write_String@dado
  6654  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  6655  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  6656  01A7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6657  01A8  160A  158A  23A6  120A  118A  	fcall	_EEPROM_Write_String
  6658  01AD  292E               	goto	L7
  6659  01AE                     l7348:	
  6660                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6661                           
  6662                           
  6663                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6664  01AE  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6665  01AF  00DE               	movwf	??_Decodify_Command
  6666  01B0  085E               	movf	??_Decodify_Command,w
  6667  01B1  00A3               	movwf	EEPROM_Read_String@dado
  6668  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  6669  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  6670  01B4  083F               	movf	(_usart_protocol^(0+384)+6),w
  6671  01B5  160A  158A  2269  120A  118A  	fcall	_EEPROM_Read_String
  6672                           
  6673                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6674  01BA  3010               	movlw	16
  6675  01BB                     L9:	
  6676  01BB  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6677                           
  6678                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6679  01C0  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6680  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6681  01C2  00A1               	movwf	USART_put_string@vetor
  6682  01C3  3001               	movlw	1
  6683  01C4  00A2               	movwf	USART_put_string@vetor+1
  6684  01C5  160A  158A  24BF   	fcall	_USART_put_string
  6685                           
  6686                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6687  01C8  0008               	return
  6688  01C9                     l7354:	
  6689                           
  6690                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6691  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6692  01CA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6693  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  6694  01CC  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6695  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6696  01CE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6697  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6698  01D0  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6699  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6700  01D2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6701  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6702  01D4  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6703  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6704  01D6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6705  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6706  01D8  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6707  01D9  1683               	bsf	3,5	;RP0=1, select bank3
  6708  01DA  1703               	bsf	3,6	;RP1=1, select bank3
  6709  01DB  0844               	movf	(_usart_protocol^(0+384)+11),w
  6710  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  6711  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  6712  01DE  00DE               	movwf	??_Decodify_Command
  6713  01DF  085E               	movf	??_Decodify_Command,w
  6714  01E0  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  6715  01E1  1683               	bsf	3,5	;RP0=1, select bank3
  6716  01E2  1703               	bsf	3,6	;RP1=1, select bank3
  6717  01E3  083F               	movf	(_usart_protocol^(0+384)+6),w
  6718  01E4  160A  158A  2184  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6719  01E9  292E               	goto	L7
  6720  01EA                     l7360:	
  6721                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6722                           
  6723                           
  6724                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6725  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6726  01EB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6727  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6728  01ED  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6729  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6730  01EF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6731  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6732  01F1  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6733  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6734  01F3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6735  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6736  01F5  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6737  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6738  01F7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6739  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6740  01F9  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6741  01FA  1683               	bsf	3,5	;RP0=1, select bank3
  6742  01FB  1703               	bsf	3,6	;RP1=1, select bank3
  6743  01FC  083F               	movf	(_usart_protocol^(0+384)+6),w
  6744  01FD  160A  158A  21DE  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6745  0202  00DE               	movwf	??_Decodify_Command
  6746  0203  085E               	movf	??_Decodify_Command,w
  6747  0204  1683               	bsf	3,5	;RP0=1, select bank1
  6748  0205  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6749                           
  6750                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6751  0206  3001               	movlw	1
  6752  0207  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6753                           
  6754                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6755  020C  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6756  020D  160A  118A  2000   	fcall	_USART_putc
  6757                           
  6758                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6759  0210  0008               	return
  6760  0211                     l7366:	
  6761                           
  6762                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6763  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6764  0212  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6765  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0214  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6767  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6768  0216  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6769  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6770  0218  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6771  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6772  021A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6773  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6774  021C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6775  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6776  021E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6777  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6778  0220  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6779  0221  1683               	bsf	3,5	;RP0=1, select bank3
  6780  0222  1703               	bsf	3,6	;RP1=1, select bank3
  6781  0223  0845               	movf	(_usart_protocol^(0+384)+12),w
  6782  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6783  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0226  00DE               	movwf	??_Decodify_Command
  6785  0227  01DF               	clrf	??_Decodify_Command+1
  6786  0228  1683               	bsf	3,5	;RP0=1, select bank3
  6787  0229  1703               	bsf	3,6	;RP1=1, select bank3
  6788  022A  0844               	movf	(_usart_protocol^(0+384)+11),w
  6789  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6790  022C  1303               	bcf	3,6	;RP1=0, select bank0
  6791  022D  00E0               	movwf	??_Decodify_Command+2
  6792  022E  01E1               	clrf	??_Decodify_Command+3
  6793  022F  0860               	movf	??_Decodify_Command+2,w
  6794  0230  00E1               	movwf	??_Decodify_Command+3
  6795  0231  01E0               	clrf	??_Decodify_Command+2
  6796  0232  085E               	movf	??_Decodify_Command,w
  6797  0233  0460               	iorwf	??_Decodify_Command+2,w
  6798  0234  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6799  0235  085F               	movf	??_Decodify_Command+1,w
  6800  0236  0461               	iorwf	??_Decodify_Command+3,w
  6801  0237  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6802  0238  1683               	bsf	3,5	;RP0=1, select bank3
  6803  0239  1703               	bsf	3,6	;RP1=1, select bank3
  6804  023A  083F               	movf	(_usart_protocol^(0+384)+6),w
  6805  023B  160A  158A  2289  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6806  0240  292E               	goto	L7
  6807  0241                     l7372:	
  6808                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6809                           
  6810                           
  6811                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6812  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6813  0242  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6814  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6815  0244  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6816  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6817  0246  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6818  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6819  0248  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6820  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6821  024A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6822  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6823  024C  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6824  024D  1683               	bsf	3,5	;RP0=1, select bank1
  6825  024E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6826  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0250  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6828  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6829  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6830  0253  083F               	movf	(_usart_protocol^(0+384)+6),w
  6831  0254  160A  158A  2354  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6832  0259  0835               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6833  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6834  025B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6835  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6836  025D  0834               	movf	?_EEPROM_24C1025_Read_Int,w
  6837  025E  298E               	goto	L8
  6838  025F                     l7378:	
  6839                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6840                           
  6841                           
  6842                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6843  025F  1683               	bsf	3,5	;RP0=1, select bank3
  6844  0260  1703               	bsf	3,6	;RP1=1, select bank3
  6845  0261  0844               	movf	(_usart_protocol^(0+384)+11),w
  6846  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0264  00DE               	movwf	??_Decodify_Command
  6849  0265  085E               	movf	??_Decodify_Command,w
  6850  0266  1683               	bsf	3,5	;RP0=1, select bank1
  6851  0267  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  6852                           
  6853                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6854  0268  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6855  0269  1283               	bcf	3,5	;RP0=0, select bank0
  6856  026A  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6857  026B  1683               	bsf	3,5	;RP0=1, select bank1
  6858  026C  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6859  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6860  026E  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6861  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6862  0270  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6863  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6864  0272  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6865  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6866  0274  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6867  0275  1283               	bcf	3,5	;RP0=0, select bank0
  6868  0276  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6869  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6870  0278  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6871  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6872  027A  00DE               	movwf	??_Decodify_Command
  6873  027B  085E               	movf	??_Decodify_Command,w
  6874  027C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6875  027D  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6876  027E  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
  6877  027F  3001               	movlw	1
  6878  0280  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6879  0281  1683               	bsf	3,5	;RP0=1, select bank3
  6880  0282  1703               	bsf	3,6	;RP1=1, select bank3
  6881  0283  083F               	movf	(_usart_protocol^(0+384)+6),w
  6882  0284  120A  158A  2028  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6883                           
  6884                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6885  0289  1683               	bsf	3,5	;RP0=1, select bank1
  6886  028A  1303               	bcf	3,6	;RP1=0, select bank1
  6887  028B  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6888  028C  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6889                           
  6890                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6891  0291  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6892  0292  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0293  00DE               	movwf	??_Decodify_Command
  6894  0294  01DF               	clrf	??_Decodify_Command+1
  6895  0295  085E               	movf	??_Decodify_Command,w
  6896  0296  00A1               	movwf	USART_put_buffer@size
  6897  0297  085F               	movf	??_Decodify_Command+1,w
  6898  0298  00A2               	movwf	USART_put_buffer@size+1
  6899  0299  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6900  029A  160A  158A  2330   	fcall	_USART_put_buffer
  6901                           
  6902                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6903  029D  0008               	return
  6904  029E                     l7386:	
  6905                           
  6906                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6907  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6908  029F  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6909  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6910  02A1  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6911  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  6912  02A3  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6913  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6914  02A5  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6915  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6916  02A7  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6917  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  6918  02A9  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6919  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  6920  02AB  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6921  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6922  02AD  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6923  02AE  1683               	bsf	3,5	;RP0=1, select bank3
  6924  02AF  1703               	bsf	3,6	;RP1=1, select bank3
  6925  02B0  0844               	movf	(_usart_protocol^(0+384)+11),w
  6926  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6927  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6928  02B3  00DE               	movwf	??_Decodify_Command
  6929  02B4  085E               	movf	??_Decodify_Command,w
  6930  02B5  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6931  02B6  30C5               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6932  02B7  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  6933  02B8  3001               	movlw	1
  6934  02B9  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6935  02BA  1683               	bsf	3,5	;RP0=1, select bank3
  6936  02BB  1703               	bsf	3,6	;RP1=1, select bank3
  6937  02BC  083F               	movf	(_usart_protocol^(0+384)+6),w
  6938  02BD  160A  118A  2532  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6939  02C2  292E               	goto	L7
  6940  02C3                     l7392:	
  6941                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  6942                           
  6943                           
  6944                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6945  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6946  02C4  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6947  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  6948  02C6  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6949  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  6950  02C8  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6951  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6952  02CA  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6953  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  6954  02CC  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6955  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  6956  02CE  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6957  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  6958  02D0  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6959  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  6960  02D2  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6961  02D3  30C4               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6962  02D4  00DE               	movwf	??_Decodify_Command
  6963  02D5  085E               	movf	??_Decodify_Command,w
  6964  02D6  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  6965  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  6966  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  6967  02D9  083F               	movf	(_usart_protocol^(0+384)+6),w
  6968  02DA  160A  118A  226F  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6969  02DF  292E               	goto	L7
  6970  02E0                     l7398:	
  6971                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  6972                           
  6973                           
  6974                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6975  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6976  02E1  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6977  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6978  02E3  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6979  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  6980  02E5  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6981  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6982  02E7  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6983  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  6984  02E9  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6985  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6986  02EB  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6987  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  6988  02ED  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6989  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  6990  02EF  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6991  02F0  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6992  02F1  00DE               	movwf	??_Decodify_Command
  6993  02F2  085E               	movf	??_Decodify_Command,w
  6994  02F3  00AA               	movwf	EEPROM_24C1025_Read_Str@texto
  6995  02F4  1683               	bsf	3,5	;RP0=1, select bank3
  6996  02F5  1703               	bsf	3,6	;RP1=1, select bank3
  6997  02F6  083F               	movf	(_usart_protocol^(0+384)+6),w
  6998  02F7  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6999                           
  7000                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7001  02FC  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7002  02FD  160A  158A  21F7  120A  118A  	fcall	_strlen
  7003  0302  0820               	movf	?_strlen,w
  7004  0303  29BB               	goto	L9
  7005  0304                     l7402:	
  7006                           
  7007                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7008  0304  1683               	bsf	3,5	;RP0=1, select bank3
  7009  0305  1703               	bsf	3,6	;RP1=1, select bank3
  7010  0306  0840               	movf	(_usart_protocol^(0+384)+7),w
  7011  0307  1283               	bcf	3,5	;RP0=0, select bank0
  7012  0308  1303               	bcf	3,6	;RP1=0, select bank0
  7013  0309  00DE               	movwf	??_Decodify_Command
  7014  030A  085E               	movf	??_Decodify_Command,w
  7015  030B  00AF               	movwf	EEPROM_24C1025_Fill_All@value
  7016  030C  1683               	bsf	3,5	;RP0=1, select bank3
  7017  030D  1703               	bsf	3,6	;RP1=1, select bank3
  7018  030E  083F               	movf	(_usart_protocol^(0+384)+6),w
  7019  030F  160A  118A  2010  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7020  0314  292E               	goto	L7
  7021  0315                     l7408:	
  7022                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7023                           
  7024                           
  7025                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7026  0315  1683               	bsf	3,5	;RP0=1, select bank1
  7027  0316  0866               	movf	_hora^(0+128),w	;volatile
  7028  0317  1283               	bcf	3,5	;RP0=0, select bank0
  7029  0318  00DE               	movwf	??_Decodify_Command
  7030  0319  01DF               	clrf	??_Decodify_Command+1
  7031  031A  085E               	movf	??_Decodify_Command,w
  7032  031B  00B1               	movwf	itoa@val
  7033  031C  085F               	movf	??_Decodify_Command+1,w
  7034  031D  00B2               	movwf	itoa@val+1
  7035  031E  300A               	movlw	10
  7036  031F  00B3               	movwf	itoa@base
  7037  0320  3000               	movlw	0
  7038  0321  00B4               	movwf	itoa@base+1
  7039  0322  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7040  0323  160A  158A  22A9  120A  118A  	fcall	_itoa
  7041                           
  7042                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7043  0328  1683               	bsf	3,5	;RP0=1, select bank1
  7044  0329  0865               	movf	_minuto^(0+128),w	;volatile
  7045  032A  1283               	bcf	3,5	;RP0=0, select bank0
  7046  032B  00DE               	movwf	??_Decodify_Command
  7047  032C  01DF               	clrf	??_Decodify_Command+1
  7048  032D  085E               	movf	??_Decodify_Command,w
  7049  032E  00B1               	movwf	itoa@val
  7050  032F  085F               	movf	??_Decodify_Command+1,w
  7051  0330  00B2               	movwf	itoa@val+1
  7052  0331  300A               	movlw	10
  7053  0332  00B3               	movwf	itoa@base
  7054  0333  3000               	movlw	0
  7055  0334  00B4               	movwf	itoa@base+1
  7056  0335  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7057  0336  160A  158A  22A9  120A  118A  	fcall	_itoa
  7058                           
  7059                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7060  033B  1683               	bsf	3,5	;RP0=1, select bank1
  7061  033C  0867               	movf	_segundo^(0+128),w	;volatile
  7062  033D  1283               	bcf	3,5	;RP0=0, select bank0
  7063  033E  00DE               	movwf	??_Decodify_Command
  7064  033F  01DF               	clrf	??_Decodify_Command+1
  7065  0340  085E               	movf	??_Decodify_Command,w
  7066  0341  00B1               	movwf	itoa@val
  7067  0342  085F               	movf	??_Decodify_Command+1,w
  7068  0343  00B2               	movwf	itoa@val+1
  7069  0344  300A               	movlw	10
  7070  0345  00B3               	movwf	itoa@base
  7071  0346  3000               	movlw	0
  7072  0347  00B4               	movwf	itoa@base+1
  7073  0348  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7074  0349  160A  158A  22A9  120A  118A  	fcall	_itoa
  7075                           
  7076                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7077  034E  304C               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7078  034F  00DE               	movwf	??_Decodify_Command
  7079  0350  085E               	movf	??_Decodify_Command,w
  7080  0351  00A0               	movwf	strcpy@from
  7081  0352  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7082  0353  160A  158A  222D  120A  118A  	fcall	_strcpy
  7083                           
  7084                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7085  0358  1683               	bsf	3,5	;RP0=1, select bank1
  7086  0359  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7087  035A  1D03               	btfss	3,2
  7088  035B  2B69               	goto	l7416
  7089                           
  7090                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7091  035C  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7092  035D  1283               	bcf	3,5	;RP0=0, select bank0
  7093  035E  00A0               	movwf	strcat@from
  7094  035F  3080               	movlw	128
  7095  0360  00A1               	movwf	strcat@from+1
  7096  0361  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7097  0362  160A  158A  23D1  120A  118A  	fcall	_strcat
  7098                           
  7099                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7100  0367  1683               	bsf	3,5	;RP0=1, select bank1
  7101  0368  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7102  0369                     l7416:	
  7103                           
  7104                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7105  0369  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7106  036A  1283               	bcf	3,5	;RP0=0, select bank0
  7107  036B  00A0               	movwf	strcat@from
  7108  036C  3000               	movlw	0
  7109  036D  00A1               	movwf	strcat@from+1
  7110  036E  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7111  036F  160A  158A  23D1  120A  118A  	fcall	_strcat
  7112                           
  7113                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7114  0374  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7115  0375  00A0               	movwf	strcat@from
  7116  0376  3080               	movlw	128
  7117  0377  00A1               	movwf	strcat@from+1
  7118  0378  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7119  0379  160A  158A  23D1  120A  118A  	fcall	_strcat
  7120                           
  7121                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7122  037E  1683               	bsf	3,5	;RP0=1, select bank1
  7123  037F  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7124  0380  1D03               	btfss	3,2
  7125  0381  2B8F               	goto	l7426
  7126                           
  7127                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7128  0382  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7129  0383  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0384  00A0               	movwf	strcat@from
  7131  0385  3080               	movlw	128
  7132  0386  00A1               	movwf	strcat@from+1
  7133  0387  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7134  0388  160A  158A  23D1  120A  118A  	fcall	_strcat
  7135                           
  7136                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7137  038D  1683               	bsf	3,5	;RP0=1, select bank1
  7138  038E  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7139  038F                     l7426:	
  7140                           
  7141                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7142  038F  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7143  0390  1283               	bcf	3,5	;RP0=0, select bank0
  7144  0391  00A0               	movwf	strcat@from
  7145  0392  3000               	movlw	0
  7146  0393  00A1               	movwf	strcat@from+1
  7147  0394  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7148  0395  160A  158A  23D1  120A  118A  	fcall	_strcat
  7149                           
  7150                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7151  039A  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7152  039B  00A0               	movwf	strcat@from
  7153  039C  3080               	movlw	128
  7154  039D  00A1               	movwf	strcat@from+1
  7155  039E  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7156  039F  160A  158A  23D1  120A  118A  	fcall	_strcat
  7157                           
  7158                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7159  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  7160  03A5  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7161  03A6  1D03               	btfss	3,2
  7162  03A7  2BB5               	goto	l7436
  7163                           
  7164                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7165  03A8  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7166  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  7167  03AA  00A0               	movwf	strcat@from
  7168  03AB  3080               	movlw	128
  7169  03AC  00A1               	movwf	strcat@from+1
  7170  03AD  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7171  03AE  160A  158A  23D1  120A  118A  	fcall	_strcat
  7172                           
  7173                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7174  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  7175  03B4  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7176  03B5                     l7436:	
  7177                           
  7178                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7179  03B5  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7180  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  7181  03B7  00A0               	movwf	strcat@from
  7182  03B8  3000               	movlw	0
  7183  03B9  00A1               	movwf	strcat@from+1
  7184  03BA  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7185  03BB  160A  158A  23D1  120A  118A  	fcall	_strcat
  7186                           
  7187                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7188  03C0  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7189  03C1  160A  158A  21F7  120A  118A  	fcall	_strlen
  7190  03C6  0820               	movf	?_strlen,w
  7191  03C7  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  7192                           
  7193                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7194  03CC  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7195  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  7196  03CE  00A1               	movwf	USART_put_string@vetor
  7197  03CF  3001               	movlw	1
  7198  03D0  00A2               	movwf	USART_put_string@vetor+1
  7199  03D1  160A  158A  24BF  120A  118A  	fcall	_USART_put_string
  7200                           
  7201                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7202  03D6  3000               	movlw	0
  7203  03D7  160A  118A  2000   	fcall	_USART_putc
  7204                           
  7205                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7206  03DA  0008               	return
  7207  03DB                     l7444:	
  7208                           
  7209                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7210  03DB  1683               	bsf	3,5	;RP0=1, select bank3
  7211  03DC  1703               	bsf	3,6	;RP1=1, select bank3
  7212  03DD  083F               	movf	(_usart_protocol^(0+384)+6),w
  7213  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  7214  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  7215  03E0  00DE               	movwf	??_Decodify_Command
  7216  03E1  085E               	movf	??_Decodify_Command,w
  7217  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  7218  03E3  00E6               	movwf	_hora^(0+128)	;volatile
  7219                           
  7220                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7221  03E4  1703               	bsf	3,6	;RP1=1, select bank3
  7222  03E5  0840               	movf	(_usart_protocol^(0+384)+7),w
  7223  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  7224  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  7225  03E8  00DE               	movwf	??_Decodify_Command
  7226  03E9  085E               	movf	??_Decodify_Command,w
  7227  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  7228  03EB  00E5               	movwf	_minuto^(0+128)	;volatile
  7229                           
  7230                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7231  03EC  1703               	bsf	3,6	;RP1=1, select bank3
  7232  03ED  0841               	movf	(_usart_protocol^(0+384)+8),w
  7233  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  7234  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  7235  03F0  00DE               	movwf	??_Decodify_Command
  7236  03F1  085E               	movf	??_Decodify_Command,w
  7237  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  7238  03F3  00E7               	movwf	_segundo^(0+128)	;volatile
  7239  03F4  292E               	goto	L7
  7240  03F5                     l7450:	
  7241                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7242                           
  7243                           
  7244                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7245  03F5  1683               	bsf	3,5	;RP0=1, select bank3
  7246  03F6  1703               	bsf	3,6	;RP1=1, select bank3
  7247  03F7  083F               	movf	(_usart_protocol^(0+384)+6),w
  7248  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7249  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7250  03FA  00DE               	movwf	??_Decodify_Command
  7251  03FB  01DF               	clrf	??_Decodify_Command+1
  7252  03FC  085E               	movf	??_Decodify_Command,w
  7253  03FD  00D6               	movwf	PROCULUS_Show_Screen@screen
  7254  03FE  085F               	movf	??_Decodify_Command+1,w
  7255  03FF  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7256  0400  160A  158A  216F  120A  118A  	fcall	_PROCULUS_Show_Screen
  7257  0405  292E               	goto	L7
  7258  0406                     l7456:	
  7259                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7260                           
  7261                           
  7262                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7263  0406  1683               	bsf	3,5	;RP0=1, select bank3
  7264  0407  1703               	bsf	3,6	;RP1=1, select bank3
  7265  0408  083F               	movf	(_usart_protocol^(0+384)+6),w
  7266  0409  1283               	bcf	3,5	;RP0=0, select bank0
  7267  040A  1303               	bcf	3,6	;RP1=0, select bank0
  7268  040B  00DE               	movwf	??_Decodify_Command
  7269  040C  01DF               	clrf	??_Decodify_Command+1
  7270  040D  085E               	movf	??_Decodify_Command,w
  7271  040E  00DF               	movwf	??_Decodify_Command+1
  7272  040F  01DE               	clrf	??_Decodify_Command
  7273  0410  1683               	bsf	3,5	;RP0=1, select bank3
  7274  0411  1703               	bsf	3,6	;RP1=1, select bank3
  7275  0412  0840               	movf	(_usart_protocol^(0+384)+7),w
  7276  0413  1283               	bcf	3,5	;RP0=0, select bank0
  7277  0414  1303               	bcf	3,6	;RP1=0, select bank0
  7278  0415  075E               	addwf	??_Decodify_Command,w
  7279  0416  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7280  0417  3000               	movlw	0
  7281  0418  1803               	skipnc
  7282  0419  3001               	movlw	1
  7283  041A  075F               	addwf	??_Decodify_Command+1,w
  7284  041B  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7285  041C  160A  158A  22EB  120A  118A  	fcall	_PROCULUS_Buzzer
  7286  0421  292E               	goto	L7
  7287  0422                     l7462:	
  7288                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7289                           
  7290                           
  7291                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7292  0422  1683               	bsf	3,5	;RP0=1, select bank3
  7293  0423  1703               	bsf	3,6	;RP1=1, select bank3
  7294  0424  083F               	movf	(_usart_protocol^(0+384)+6),w
  7295  0425  1283               	bcf	3,5	;RP0=0, select bank0
  7296  0426  1303               	bcf	3,6	;RP1=0, select bank0
  7297  0427  00DE               	movwf	??_Decodify_Command
  7298  0428  01DF               	clrf	??_Decodify_Command+1
  7299  0429  085E               	movf	??_Decodify_Command,w
  7300  042A  00DF               	movwf	??_Decodify_Command+1
  7301  042B  01DE               	clrf	??_Decodify_Command
  7302  042C  1683               	bsf	3,5	;RP0=1, select bank3
  7303  042D  1703               	bsf	3,6	;RP1=1, select bank3
  7304  042E  0840               	movf	(_usart_protocol^(0+384)+7),w
  7305  042F  1283               	bcf	3,5	;RP0=0, select bank0
  7306  0430  1303               	bcf	3,6	;RP1=0, select bank0
  7307  0431  075E               	addwf	??_Decodify_Command,w
  7308  0432  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7309  0433  3000               	movlw	0
  7310  0434  1803               	skipnc
  7311  0435  3001               	movlw	1
  7312  0436  075F               	addwf	??_Decodify_Command+1,w
  7313  0437  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7314  0438  30C1               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7315  0439  00E0               	movwf	??_Decodify_Command+2
  7316  043A  0860               	movf	??_Decodify_Command+2,w
  7317  043B  00DC               	movwf	PROCULUS_VP_Write_String@text
  7318  043C  160A  158A  21B0  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7319  0441  292E               	goto	L7
  7320  0442                     l7468:	
  7321                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7322                           
  7323                           
  7324                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7325  0442  1683               	bsf	3,5	;RP0=1, select bank3
  7326  0443  1703               	bsf	3,6	;RP1=1, select bank3
  7327  0444  083F               	movf	(_usart_protocol^(0+384)+6),w
  7328  0445  1D03               	btfss	3,2
  7329  0446  2C52               	goto	l7474
  7330                           
  7331                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7332  0447  0840               	movf	(_usart_protocol^(0+384)+7),w
  7333  0448  1D03               	btfss	3,2
  7334  0449  2C4E               	goto	l288
  7335                           
  7336                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7337  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7338  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7339  044C  1007               	bcf	7,0	;volatile
  7340  044D  292E               	goto	L7
  7341  044E                     l288:	
  7342                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7343                           
  7344                           
  7345                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7346  044E  1283               	bcf	3,5	;RP0=0, select bank0
  7347  044F  1303               	bcf	3,6	;RP1=0, select bank0
  7348  0450  1407               	bsf	7,0	;volatile
  7349  0451  292E               	goto	L7
  7350  0452                     l7474:	
  7351  0452  033F               	decf	(_usart_protocol^(0+384)+6),w
  7352  0453  1D03               	btfss	3,2
  7353  0454  292E               	goto	L7
  7354                           
  7355                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7356  0455  0840               	movf	(_usart_protocol^(0+384)+7),w
  7357  0456  1D03               	btfss	3,2
  7358  0457  2C5C               	goto	l292
  7359                           
  7360                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7361  0458  1283               	bcf	3,5	;RP0=0, select bank0
  7362  0459  1303               	bcf	3,6	;RP1=0, select bank0
  7363  045A  1087               	bcf	7,1	;volatile
  7364  045B  292E               	goto	L7
  7365  045C                     l292:	
  7366                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7367                           
  7368                           
  7369                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7370  045C  1283               	bcf	3,5	;RP0=0, select bank0
  7371  045D  1303               	bcf	3,6	;RP1=0, select bank0
  7372  045E  1487               	bsf	7,1	;volatile
  7373  045F  292E               	goto	L7
  7374  0460                     l7486:	
  7375                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7376                           
  7377  0460  1703               	bsf	3,6	;RP1=1, select bank3
  7378  0461  083D               	movf	(_usart_protocol^(0+384)+4),w
  7379  0462  1283               	bcf	3,5	;RP0=0, select bank0
  7380  0463  1303               	bcf	3,6	;RP1=0, select bank0
  7381  0464  00DE               	movwf	??_Decodify_Command
  7382  0465  01DF               	clrf	??_Decodify_Command+1
  7383                           
  7384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7385                           ; Switch size 1, requested type "simple"
  7386                           ; Number of cases is 1, Range of values is 0 to 0
  7387                           ; switch strategies available:
  7388                           ; Name         Instructions Cycles
  7389                           ; simple_byte            4     3 (average)
  7390                           ; direct_byte           11     8 (fixed)
  7391                           ; jumptable            260     6 (fixed)
  7392                           ;	Chosen strategy is simple_byte
  7393  0466  085F               	movf	??_Decodify_Command+1,w
  7394  0467  3A00               	xorlw	0	; case 0
  7395  0468  1903               	skipnz
  7396  0469  2C6B               	goto	l7644
  7397  046A  2CB8               	goto	l294
  7398  046B                     l7644:	
  7399                           
  7400                           ; Switch size 1, requested type "simple"
  7401                           ; Number of cases is 25, Range of values is 2 to 43
  7402                           ; switch strategies available:
  7403                           ; Name         Instructions Cycles
  7404                           ; simple_byte           76    39 (average)
  7405                           ; direct_byte          137    11 (fixed)
  7406                           ; jumptable            263     9 (fixed)
  7407                           ;	Chosen strategy is simple_byte
  7408  046B  085E               	movf	??_Decodify_Command,w
  7409  046C  3A02               	xorlw	2	; case 2
  7410  046D  1903               	skipnz
  7411  046E  28D5               	goto	l7304
  7412  046F  3A01               	xorlw	1	; case 3
  7413  0470  1903               	skipnz
  7414  0471  290F               	goto	l7312
  7415  0472  3A0B               	xorlw	11	; case 8
  7416  0473  1903               	skipnz
  7417  0474  291E               	goto	l7316
  7418  0475  3A01               	xorlw	1	; case 9
  7419  0476  1903               	skipnz
  7420  0477  2938               	goto	l7320
  7421  0478  3A03               	xorlw	3	; case 10
  7422  0479  1903               	skipnz
  7423  047A  2950               	goto	l7326
  7424  047B  3A01               	xorlw	1	; case 11
  7425  047C  1903               	skipnz
  7426  047D  2981               	goto	l7336
  7427  047E  3A07               	xorlw	7	; case 12
  7428  047F  1903               	skipnz
  7429  0480  29A1               	goto	l7342
  7430  0481  3A01               	xorlw	1	; case 13
  7431  0482  1903               	skipnz
  7432  0483  29AE               	goto	l7348
  7433  0484  3A1C               	xorlw	28	; case 17
  7434  0485  1903               	skipnz
  7435  0486  29C9               	goto	l7354
  7436  0487  3A03               	xorlw	3	; case 18
  7437  0488  1903               	skipnz
  7438  0489  29EA               	goto	l7360
  7439  048A  3A01               	xorlw	1	; case 19
  7440  048B  1903               	skipnz
  7441  048C  2A11               	goto	l7366
  7442  048D  3A07               	xorlw	7	; case 20
  7443  048E  1903               	skipnz
  7444  048F  2A41               	goto	l7372
  7445  0490  3A01               	xorlw	1	; case 21
  7446  0491  1903               	skipnz
  7447  0492  2AC3               	goto	l7392
  7448  0493  3A03               	xorlw	3	; case 22
  7449  0494  1903               	skipnz
  7450  0495  2AE0               	goto	l7398
  7451  0496  3A01               	xorlw	1	; case 23
  7452  0497  1903               	skipnz
  7453  0498  2A9E               	goto	l7386
  7454  0499  3A0F               	xorlw	15	; case 24
  7455  049A  1903               	skipnz
  7456  049B  2A5F               	goto	l7378
  7457  049C  3A01               	xorlw	1	; case 25
  7458  049D  1903               	skipnz
  7459  049E  2B04               	goto	l7402
  7460  049F  3A03               	xorlw	3	; case 26
  7461  04A0  1903               	skipnz
  7462  04A1  286D               	goto	l7288
  7463  04A2  3A04               	xorlw	4	; case 30
  7464  04A3  1903               	skipnz
  7465  04A4  2BDB               	goto	l7444
  7466  04A5  3A01               	xorlw	1	; case 31
  7467  04A6  1903               	skipnz
  7468  04A7  2B15               	goto	l7408
  7469  04A8  3A3F               	xorlw	63	; case 32
  7470  04A9  1903               	skipnz
  7471  04AA  2BF5               	goto	l7450
  7472  04AB  3A01               	xorlw	1	; case 33
  7473  04AC  1903               	skipnz
  7474  04AD  2C06               	goto	l7456
  7475  04AE  3A05               	xorlw	5	; case 36
  7476  04AF  1903               	skipnz
  7477  04B0  2C22               	goto	l7462
  7478  04B1  3A02               	xorlw	2	; case 38
  7479  04B2  1903               	skipnz
  7480  04B3  2C42               	goto	l7468
  7481  04B4  3A0D               	xorlw	13	; case 43
  7482  04B5  1903               	skipnz
  7483  04B6  285E               	goto	l7284
  7484  04B7  2CB8               	goto	l294
  7485  04B8                     l294:	
  7486  04B8  0008               	return
  7487  04B9                     __end_of_Decodify_Command:	
  7488                           
  7489                           	psect	text17
  7490  1A2D                     __ptext17:	
  7491 ;; *************** function _strcpy *****************
  7492 ;; Defined at:
  7493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  to              1    wreg     PTR unsigned char 
  7496 ;;		 -> texto(16), 
  7497 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7498 ;;		 -> STR_2(1), 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7501 ;;		 -> texto(16), 
  7502 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7503 ;;		 -> texto(16), 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      PTR unsigned char 
  7506 ;; Registers used:
  7507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7508 ;; Tracked objects:
  7509 ;;		On entry : B00/0
  7510 ;;		On exit  : B00/800
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7513 ;;      Params:         0       1       0       0       0
  7514 ;;      Locals:         0       2       0       0       0
  7515 ;;      Temps:          0       1       0       0       0
  7516 ;;      Totals:         0       4       0       0       0
  7517 ;;Total ram usage:        4 bytes
  7518 ;; Hardware stack levels used:    2
  7519 ;; Hardware stack levels required when called:    1
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_Decodify_Command
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           
  7528                           ;psect for function _strcpy
  7529  1A2D                     _strcpy:	
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7533                           ;strcpy@to stored from wreg
  7534  1A2D  00A2               	movwf	strcpy@to
  7535  1A2E  0822               	movf	strcpy@to,w
  7536  1A2F  00A1               	movwf	??_strcpy
  7537  1A30  0821               	movf	??_strcpy,w
  7538  1A31  00A3               	movwf	strcpy@cp
  7539  1A32                     l6840:	
  7540  1A32  0820               	movf	strcpy@from,w
  7541  1A33  0084               	movwf	4
  7542  1A34  160A  158A  200A  160A  158A  	fcall	stringdir
  7543  1A39  00A1               	movwf	??_strcpy
  7544  1A3A  0823               	movf	strcpy@cp,w
  7545  1A3B  0084               	movwf	4
  7546  1A3C  0821               	movf	??_strcpy,w
  7547  1A3D  1783               	bsf	3,7	;select IRP bank2
  7548  1A3E  0080               	movwf	0
  7549  1A3F  0800               	movf	0,w
  7550  1A40  1903               	btfsc	3,2
  7551  1A41  0008               	return
  7552  1A42  3001               	movlw	1
  7553  1A43  00A1               	movwf	??_strcpy
  7554  1A44  0821               	movf	??_strcpy,w
  7555  1A45  07A3               	addwf	strcpy@cp,f
  7556  1A46  3001               	movlw	1
  7557  1A47  00A1               	movwf	??_strcpy
  7558  1A48  0821               	movf	??_strcpy,w
  7559  1A49  07A0               	addwf	strcpy@from,f
  7560  1A4A  2A32               	goto	l6840
  7561  1A4B                     __end_of_strcpy:	
  7562                           
  7563                           	psect	text18
  7564  1BD1                     __ptext18:	
  7565 ;; *************** function _strcat *****************
  7566 ;; Defined at:
  7567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  to              1    wreg     PTR unsigned char 
  7570 ;;		 -> texto(16), 
  7571 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7572 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7573 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7576 ;;		 -> texto(16), 
  7577 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7578 ;;		 -> texto(16), 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      PTR unsigned char 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7583 ;; Tracked objects:
  7584 ;;		On entry : B00/800
  7585 ;;		On exit  : B00/800
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         0       2       0       0       0
  7589 ;;      Locals:         0       2       0       0       0
  7590 ;;      Temps:          0       1       0       0       0
  7591 ;;      Totals:         0       5       0       0       0
  7592 ;;Total ram usage:        5 bytes
  7593 ;; Hardware stack levels used:    2
  7594 ;; Hardware stack levels required when called:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_Decodify_Command
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function _strcat
  7604  1BD1                     _strcat:	
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7608                           ;strcat@to stored from wreg
  7609  1BD1  00A4               	movwf	strcat@to
  7610  1BD2  0824               	movf	strcat@to,w
  7611  1BD3  00A2               	movwf	??_strcat
  7612  1BD4  0822               	movf	??_strcat,w
  7613  1BD5  00A3               	movwf	strcat@cp
  7614  1BD6                     l6846:	
  7615  1BD6  0823               	movf	strcat@cp,w
  7616  1BD7  0084               	movwf	4
  7617  1BD8  0800               	movf	0,w
  7618  1BD9  1903               	btfsc	3,2
  7619  1BDA  2BEA               	goto	l6852
  7620  1BDB  3001               	movlw	1
  7621  1BDC  00A2               	movwf	??_strcat
  7622  1BDD  0822               	movf	??_strcat,w
  7623  1BDE  07A3               	addwf	strcat@cp,f
  7624  1BDF  2BD6               	goto	l6846
  7625  1BE0                     l6848:	
  7626  1BE0  3001               	movlw	1
  7627  1BE1  00A2               	movwf	??_strcat
  7628  1BE2  0822               	movf	??_strcat,w
  7629  1BE3  07A3               	addwf	strcat@cp,f
  7630  1BE4  3001               	movlw	1
  7631  1BE5  07A0               	addwf	strcat@from,f
  7632  1BE6  1803               	skipnc
  7633  1BE7  0AA1               	incf	strcat@from+1,f
  7634  1BE8  3000               	movlw	0
  7635  1BE9  07A1               	addwf	strcat@from+1,f
  7636  1BEA                     l6852:	
  7637  1BEA  0821               	movf	strcat@from+1,w
  7638  1BEB  00FF               	movwf	127
  7639  1BEC  0820               	movf	strcat@from,w
  7640  1BED  0084               	movwf	4
  7641  1BEE  160A  158A  2000  160A  158A  	fcall	stringtab
  7642  1BF3  00A2               	movwf	??_strcat
  7643  1BF4  0823               	movf	strcat@cp,w
  7644  1BF5  0084               	movwf	4
  7645  1BF6  0822               	movf	??_strcat,w
  7646  1BF7  1783               	bsf	3,7	;select IRP bank2
  7647  1BF8  0080               	movwf	0
  7648  1BF9  0800               	movf	0,w
  7649  1BFA  1903               	btfsc	3,2
  7650  1BFB  0008               	return
  7651  1BFC  2BE0               	goto	l6848
  7652  1BFD                     __end_of_strcat:	
  7653                           
  7654                           	psect	text19
  7655  1AA9                     __ptext19:	
  7656 ;; *************** function _itoa *****************
  7657 ;; Defined at:
  7658 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  buf             1    wreg     PTR unsigned char 
  7661 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7662 ;;  val             2   17[BANK0 ] int 
  7663 ;;  base            2   19[BANK0 ] int 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7666 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7667 ;;  cp              1    0        PTR unsigned char 
  7668 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      PTR unsigned char 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 300/0
  7675 ;;		On exit  : B00/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7678 ;;      Params:         0       4       0       0       0
  7679 ;;      Locals:         0       2       0       0       0
  7680 ;;      Temps:          0       1       0       0       0
  7681 ;;      Totals:         0       7       0       0       0
  7682 ;;Total ram usage:        7 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    3
  7685 ;; This function calls:
  7686 ;;		_utoa
  7687 ;; This function is called by:
  7688 ;;		_Decodify_Command
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function _itoa
  7694  1AA9                     _itoa:	
  7695                           
  7696                           ;incstack = 0
  7697                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7698                           ;itoa@buf stored from wreg
  7699  1AA9  00B7               	movwf	itoa@buf
  7700  1AAA  1FB2               	btfss	itoa@val+1,7
  7701  1AAB  2ABC               	goto	l6832
  7702  1AAC  302D               	movlw	45
  7703  1AAD  00B5               	movwf	??_itoa
  7704  1AAE  0837               	movf	itoa@buf,w
  7705  1AAF  0084               	movwf	4
  7706  1AB0  0835               	movf	??_itoa,w
  7707  1AB1  1383               	bcf	3,7	;select IRP bank0
  7708  1AB2  0080               	movwf	0
  7709  1AB3  3001               	movlw	1
  7710  1AB4  00B5               	movwf	??_itoa
  7711  1AB5  0835               	movf	??_itoa,w
  7712  1AB6  07B7               	addwf	itoa@buf,f
  7713  1AB7  09B1               	comf	itoa@val,f
  7714  1AB8  09B2               	comf	itoa@val+1,f
  7715  1AB9  0AB1               	incf	itoa@val,f
  7716  1ABA  1903               	skipnz
  7717  1ABB  0AB2               	incf	itoa@val+1,f
  7718  1ABC                     l6832:	
  7719  1ABC  0832               	movf	itoa@val+1,w
  7720  1ABD  00A9               	movwf	utoa@val+1
  7721  1ABE  0831               	movf	itoa@val,w
  7722  1ABF  00A8               	movwf	utoa@val
  7723  1AC0  0834               	movf	itoa@base+1,w
  7724  1AC1  00AB               	movwf	utoa@base+1
  7725  1AC2  0833               	movf	itoa@base,w
  7726  1AC3  00AA               	movwf	utoa@base
  7727  1AC4  0837               	movf	itoa@buf,w
  7728  1AC5  160A  158A  279C   	fcall	_utoa
  7729  1AC8  0008               	return
  7730  1AC9                     __end_of_itoa:	
  7731                           
  7732                           	psect	text20
  7733  1F9C                     __ptext20:	
  7734 ;; *************** function _utoa *****************
  7735 ;; Defined at:
  7736 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  buf             1    wreg     PTR unsigned char 
  7739 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7740 ;;  val             2    8[BANK0 ] unsigned int 
  7741 ;;  base            2   10[BANK0 ] int 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7744 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7745 ;;  v               2   13[BANK0 ] unsigned int 
  7746 ;;  c               1   15[BANK0 ] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      PTR unsigned char 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 300/0
  7753 ;;		On exit  : B00/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7756 ;;      Params:         0       4       0       0       0
  7757 ;;      Locals:         0       4       0       0       0
  7758 ;;      Temps:          0       1       0       0       0
  7759 ;;      Totals:         0       9       0       0       0
  7760 ;;Total ram usage:        9 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    2
  7763 ;; This function calls:
  7764 ;;		___lwdiv
  7765 ;;		___lwmod
  7766 ;; This function is called by:
  7767 ;;		_itoa
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _utoa
  7773  1F9C                     _utoa:	
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7777                           ;utoa@buf stored from wreg
  7778  1F9C  00B0               	movwf	utoa@buf
  7779  1F9D  0829               	movf	utoa@val+1,w
  7780  1F9E  00AE               	movwf	utoa@v+1
  7781  1F9F  0828               	movf	utoa@val,w
  7782  1FA0  00AD               	movwf	utoa@v
  7783  1FA1                     l6482:	
  7784  1FA1  082B               	movf	utoa@base+1,w
  7785  1FA2  00A1               	movwf	___lwdiv@divisor+1
  7786  1FA3  082A               	movf	utoa@base,w
  7787  1FA4  00A0               	movwf	___lwdiv@divisor
  7788  1FA5  082E               	movf	utoa@v+1,w
  7789  1FA6  00A3               	movwf	___lwdiv@dividend+1
  7790  1FA7  082D               	movf	utoa@v,w
  7791  1FA8  00A2               	movwf	___lwdiv@dividend
  7792  1FA9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7793  1FAE  0821               	movf	?___lwdiv+1,w
  7794  1FAF  00AE               	movwf	utoa@v+1
  7795  1FB0  0820               	movf	?___lwdiv,w
  7796  1FB1  00AD               	movwf	utoa@v
  7797  1FB2  3001               	movlw	1
  7798  1FB3  00AC               	movwf	??_utoa
  7799  1FB4  082C               	movf	??_utoa,w
  7800  1FB5  07B0               	addwf	utoa@buf,f
  7801  1FB6  082D               	movf	utoa@v,w
  7802  1FB7  042E               	iorwf	utoa@v+1,w
  7803  1FB8  1D03               	btfss	3,2
  7804  1FB9  2FA1               	goto	l6482
  7805  1FBA  0830               	movf	utoa@buf,w
  7806  1FBB  0084               	movwf	4
  7807  1FBC  1383               	bcf	3,7	;select IRP bank0
  7808  1FBD  0180               	clrf	0
  7809  1FBE  3001               	movlw	1
  7810  1FBF  02B0               	subwf	utoa@buf,f
  7811  1FC0                     l6492:	
  7812  1FC0  082B               	movf	utoa@base+1,w
  7813  1FC1  00A1               	movwf	___lwmod@divisor+1
  7814  1FC2  082A               	movf	utoa@base,w
  7815  1FC3  00A0               	movwf	___lwmod@divisor
  7816  1FC4  0829               	movf	utoa@val+1,w
  7817  1FC5  00A3               	movwf	___lwmod@dividend+1
  7818  1FC6  0828               	movf	utoa@val,w
  7819  1FC7  00A2               	movwf	___lwmod@dividend
  7820  1FC8  160A  158A  248D  160A  158A  	fcall	___lwmod
  7821  1FCD  0820               	movf	?___lwmod,w
  7822  1FCE  00AC               	movwf	??_utoa
  7823  1FCF  082C               	movf	??_utoa,w
  7824  1FD0  00AF               	movwf	utoa@c
  7825  1FD1  082B               	movf	utoa@base+1,w
  7826  1FD2  00A1               	movwf	___lwdiv@divisor+1
  7827  1FD3  082A               	movf	utoa@base,w
  7828  1FD4  00A0               	movwf	___lwdiv@divisor
  7829  1FD5  0829               	movf	utoa@val+1,w
  7830  1FD6  00A3               	movwf	___lwdiv@dividend+1
  7831  1FD7  0828               	movf	utoa@val,w
  7832  1FD8  00A2               	movwf	___lwdiv@dividend
  7833  1FD9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7834  1FDE  0821               	movf	?___lwdiv+1,w
  7835  1FDF  00A9               	movwf	utoa@val+1
  7836  1FE0  0820               	movf	?___lwdiv,w
  7837  1FE1  00A8               	movwf	utoa@val
  7838  1FE2  300A               	movlw	10
  7839  1FE3  022F               	subwf	utoa@c,w
  7840  1FE4  1C03               	skipc
  7841  1FE5  2FEA               	goto	l1407
  7842  1FE6  3007               	movlw	7
  7843  1FE7  00AC               	movwf	??_utoa
  7844  1FE8  082C               	movf	??_utoa,w
  7845  1FE9  07AF               	addwf	utoa@c,f
  7846  1FEA                     l1407:	
  7847  1FEA  3030               	movlw	48
  7848  1FEB  00AC               	movwf	??_utoa
  7849  1FEC  082C               	movf	??_utoa,w
  7850  1FED  07AF               	addwf	utoa@c,f
  7851  1FEE  082F               	movf	utoa@c,w
  7852  1FEF  00AC               	movwf	??_utoa
  7853  1FF0  0830               	movf	utoa@buf,w
  7854  1FF1  0084               	movwf	4
  7855  1FF2  082C               	movf	??_utoa,w
  7856  1FF3  1383               	bcf	3,7	;select IRP bank0
  7857  1FF4  0080               	movwf	0
  7858  1FF5  3001               	movlw	1
  7859  1FF6  02B0               	subwf	utoa@buf,f
  7860  1FF7  0828               	movf	utoa@val,w
  7861  1FF8  0429               	iorwf	utoa@val+1,w
  7862  1FF9  1D03               	btfss	3,2
  7863  1FFA  2FC0               	goto	l6492
  7864                           
  7865                           ;	Return value of _utoa is never used
  7866  1FFB  3001               	movlw	1
  7867  1FFC  00AC               	movwf	??_utoa
  7868  1FFD  082C               	movf	??_utoa,w
  7869  1FFE  07B0               	addwf	utoa@buf,f
  7870  1FFF  0008               	return
  7871  2000                     __end_of_utoa:	
  7872                           
  7873                           	psect	text21
  7874  1C8D                     __ptext21:	
  7875 ;; *************** function ___lwmod *****************
  7876 ;; Defined at:
  7877 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  divisor         2    0[BANK0 ] unsigned int 
  7880 ;;  dividend        2    2[BANK0 ] unsigned int 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  counter         1    5[BANK0 ] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  2    0[BANK0 ] unsigned int 
  7885 ;; Registers used:
  7886 ;;		wreg, status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 300/0
  7889 ;;		On exit  : 300/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7892 ;;      Params:         0       4       0       0       0
  7893 ;;      Locals:         0       1       0       0       0
  7894 ;;      Temps:          0       1       0       0       0
  7895 ;;      Totals:         0       6       0       0       0
  7896 ;;Total ram usage:        6 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    1
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_utoa
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           
  7907                           ;psect for function ___lwmod
  7908  1C8D                     ___lwmod:	
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7912  1C8D  0820               	movf	___lwmod@divisor,w
  7913  1C8E  0421               	iorwf	___lwmod@divisor+1,w
  7914  1C8F  1903               	btfsc	3,2
  7915  1C90  2CBA               	goto	l5848
  7916  1C91  01A5               	clrf	___lwmod@counter
  7917  1C92  0AA5               	incf	___lwmod@counter,f
  7918  1C93                     l5838:	
  7919  1C93  1BA1               	btfsc	___lwmod@divisor+1,7
  7920  1C94  2CA1               	goto	l5840
  7921  1C95  3001               	movlw	1
  7922  1C96                     u5615:	
  7923  1C96  1003               	clrc
  7924  1C97  0DA0               	rlf	___lwmod@divisor,f
  7925  1C98  0DA1               	rlf	___lwmod@divisor+1,f
  7926  1C99  3EFF               	addlw	-1
  7927  1C9A  1D03               	skipz
  7928  1C9B  2C96               	goto	u5615
  7929  1C9C  3001               	movlw	1
  7930  1C9D  00A4               	movwf	??___lwmod
  7931  1C9E  0824               	movf	??___lwmod,w
  7932  1C9F  07A5               	addwf	___lwmod@counter,f
  7933  1CA0  2C93               	goto	l5838
  7934  1CA1                     l5840:	
  7935  1CA1  0821               	movf	___lwmod@divisor+1,w
  7936  1CA2  0223               	subwf	___lwmod@dividend+1,w
  7937  1CA3  1D03               	skipz
  7938  1CA4  2CA7               	goto	u5635
  7939  1CA5  0820               	movf	___lwmod@divisor,w
  7940  1CA6  0222               	subwf	___lwmod@dividend,w
  7941  1CA7                     u5635:	
  7942  1CA7  1C03               	skipc
  7943  1CA8  2CAF               	goto	l5844
  7944  1CA9  0820               	movf	___lwmod@divisor,w
  7945  1CAA  02A2               	subwf	___lwmod@dividend,f
  7946  1CAB  0821               	movf	___lwmod@divisor+1,w
  7947  1CAC  1C03               	skipc
  7948  1CAD  03A3               	decf	___lwmod@dividend+1,f
  7949  1CAE  02A3               	subwf	___lwmod@dividend+1,f
  7950  1CAF                     l5844:	
  7951  1CAF  3001               	movlw	1
  7952  1CB0                     u5645:	
  7953  1CB0  1003               	clrc
  7954  1CB1  0CA1               	rrf	___lwmod@divisor+1,f
  7955  1CB2  0CA0               	rrf	___lwmod@divisor,f
  7956  1CB3  3EFF               	addlw	-1
  7957  1CB4  1D03               	skipz
  7958  1CB5  2CB0               	goto	u5645
  7959  1CB6  3001               	movlw	1
  7960  1CB7  02A5               	subwf	___lwmod@counter,f
  7961  1CB8  1D03               	btfss	3,2
  7962  1CB9  2CA1               	goto	l5840
  7963  1CBA                     l5848:	
  7964  1CBA  0823               	movf	___lwmod@dividend+1,w
  7965  1CBB  00A1               	movwf	?___lwmod+1
  7966  1CBC  0822               	movf	___lwmod@dividend,w
  7967  1CBD  00A0               	movwf	?___lwmod
  7968  1CBE  0008               	return
  7969  1CBF                     __end_of___lwmod:	
  7970                           
  7971                           	psect	text22
  7972  1EE1                     __ptext22:	
  7973 ;; *************** function _USART_to_Protocol *****************
  7974 ;; Defined at:
  7975 ;;		line 77 in file "usart.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  usart_protoc    1    wreg     PTR struct .
  7978 ;;		 -> usart_protocol(16), 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7981 ;;		 -> usart_protocol(16), 
  7982 ;;  i               2    2[BANK0 ] int 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7987 ;; Tracked objects:
  7988 ;;		On entry : 300/100
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7992 ;;      Params:         0       0       0       0       0
  7993 ;;      Locals:         0       3       0       0       0
  7994 ;;      Temps:          0       2       0       0       0
  7995 ;;      Totals:         0       5       0       0       0
  7996 ;;Total ram usage:        5 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_Decodify_Command
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function _USART_to_Protocol
  8008  1EE1                     _USART_to_Protocol:	
  8009                           
  8010                           ;incstack = 0
  8011                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  8012                           ;USART_to_Protocol@usart_protocol stored from wreg
  8013  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  8014  1EE2  00A4               	movwf	USART_to_Protocol@usart_protocol
  8015                           
  8016                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  8017  1EE3  0824               	movf	USART_to_Protocol@usart_protocol,w
  8018  1EE4  0084               	movwf	4
  8019  1EE5  1683               	bsf	3,5	;RP0=1, select bank3
  8020  1EE6  1703               	bsf	3,6	;RP1=1, select bank3
  8021  1EE7  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8022  1EE8  1783               	bsf	3,7	;select IRP bank2
  8023  1EE9  0080               	movwf	0
  8024  1EEA  0A84               	incf	4,f
  8025  1EEB  0810               	movf	_usart_buffer^(0+384),w	;volatile
  8026  1EEC  0080               	movwf	0
  8027                           
  8028                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8029  1EED  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8030  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  8031  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
  8032  1EF0  00A0               	movwf	??_USART_to_Protocol
  8033  1EF1  0824               	movf	USART_to_Protocol@usart_protocol,w
  8034  1EF2  3E02               	addlw	2
  8035  1EF3  0084               	movwf	4
  8036  1EF4  0820               	movf	??_USART_to_Protocol,w
  8037  1EF5  0080               	movwf	0
  8038                           
  8039                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8040  1EF6  1683               	bsf	3,5	;RP0=1, select bank3
  8041  1EF7  1703               	bsf	3,6	;RP1=1, select bank3
  8042  1EF8  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8043  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  8044  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  8045  1EFB  00A0               	movwf	??_USART_to_Protocol
  8046  1EFC  0824               	movf	USART_to_Protocol@usart_protocol,w
  8047  1EFD  3E03               	addlw	3
  8048  1EFE  0084               	movwf	4
  8049  1EFF  0820               	movf	??_USART_to_Protocol,w
  8050  1F00  0080               	movwf	0
  8051                           
  8052                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8053  1F01  1683               	bsf	3,5	;RP0=1, select bank3
  8054  1F02  1703               	bsf	3,6	;RP1=1, select bank3
  8055  1F03  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8056  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  8057  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  8058  1F06  00A0               	movwf	??_USART_to_Protocol
  8059  1F07  0824               	movf	USART_to_Protocol@usart_protocol,w
  8060  1F08  3E04               	addlw	4
  8061  1F09  0084               	movwf	4
  8062  1F0A  0820               	movf	??_USART_to_Protocol,w
  8063  1F0B  0080               	movwf	0
  8064                           
  8065                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8066  1F0C  1683               	bsf	3,5	;RP0=1, select bank3
  8067  1F0D  1703               	bsf	3,6	;RP1=1, select bank3
  8068  1F0E  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8069  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8070  1F10  1303               	bcf	3,6	;RP1=0, select bank0
  8071  1F11  00A0               	movwf	??_USART_to_Protocol
  8072  1F12  0824               	movf	USART_to_Protocol@usart_protocol,w
  8073  1F13  3E05               	addlw	5
  8074  1F14  0084               	movwf	4
  8075  1F15  0820               	movf	??_USART_to_Protocol,w
  8076  1F16  0080               	movwf	0
  8077                           
  8078                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8079  1F17  01A2               	clrf	USART_to_Protocol@i
  8080  1F18  01A3               	clrf	USART_to_Protocol@i+1
  8081  1F19                     l6570:	
  8082  1F19  0824               	movf	USART_to_Protocol@usart_protocol,w
  8083  1F1A  3E05               	addlw	5
  8084  1F1B  0084               	movwf	4
  8085  1F1C  0823               	movf	USART_to_Protocol@i+1,w
  8086  1F1D  3A80               	xorlw	128
  8087  1F1E  00A0               	movwf	??_USART_to_Protocol
  8088  1F1F  3080               	movlw	128
  8089  1F20  0220               	subwf	??_USART_to_Protocol,w
  8090  1F21  1D03               	skipz
  8091  1F22  2F25               	goto	u6965
  8092  1F23  0800               	movf	0,w
  8093  1F24  0222               	subwf	USART_to_Protocol@i,w
  8094  1F25                     u6965:	
  8095  1F25  1803               	btfsc	3,0
  8096  1F26  0008               	return
  8097                           
  8098                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8099  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  8100  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  8101  1F29  0822               	movf	USART_to_Protocol@i,w
  8102  1F2A  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8103  1F2B  0084               	movwf	4
  8104  1F2C  1783               	bsf	3,7	;select IRP bank3
  8105  1F2D  0800               	movf	0,w
  8106  1F2E  00A0               	movwf	??_USART_to_Protocol
  8107  1F2F  0822               	movf	USART_to_Protocol@i,w
  8108  1F30  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8109  1F31  00A1               	movwf	??_USART_to_Protocol+1
  8110  1F32  0821               	movf	??_USART_to_Protocol+1,w
  8111  1F33  3E06               	addlw	6
  8112  1F34  0084               	movwf	4
  8113  1F35  0820               	movf	??_USART_to_Protocol,w
  8114  1F36  0080               	movwf	0
  8115  1F37  3001               	movlw	1
  8116  1F38  07A2               	addwf	USART_to_Protocol@i,f
  8117  1F39  1803               	skipnc
  8118  1F3A  0AA3               	incf	USART_to_Protocol@i+1,f
  8119  1F3B  3000               	movlw	0
  8120  1F3C  07A3               	addwf	USART_to_Protocol@i+1,f
  8121  1F3D  2F19               	goto	l6570
  8122  1F3E                     __end_of_USART_to_Protocol:	
  8123                           
  8124                           	psect	text23
  8125  1B30                     __ptext23:	
  8126 ;; *************** function _USART_put_buffer *****************
  8127 ;; Defined at:
  8128 ;;		line 99 in file "usart.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  vetor           1    wreg     PTR unsigned char 
  8131 ;;		 -> buffer(64), 
  8132 ;;  size            2    1[BANK0 ] unsigned int 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8135 ;;		 -> buffer(64), 
  8136 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8137 ;;		 -> USART_put_buffer@vetor(1), 
  8138 ;;  loop            1    6[BANK0 ] unsigned char 
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 300/0
  8145 ;;		On exit  : 300/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8148 ;;      Params:         0       2       0       0       0
  8149 ;;      Locals:         0       3       0       0       0
  8150 ;;      Temps:          0       2       0       0       0
  8151 ;;      Totals:         0       7       0       0       0
  8152 ;;Total ram usage:        7 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:    2
  8155 ;; This function calls:
  8156 ;;		_USART_putc
  8157 ;; This function is called by:
  8158 ;;		_Decodify_Command
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function _USART_put_buffer
  8164  1B30                     _USART_put_buffer:	
  8165                           
  8166                           ;incstack = 0
  8167                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8168                           ;USART_put_buffer@vetor stored from wreg
  8169  1B30  00A5               	movwf	USART_put_buffer@vetor
  8170                           
  8171                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8172  1B31  01A6               	clrf	USART_put_buffer@loop
  8173                           
  8174                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8175  1B32  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8176  1B33  00A3               	movwf	??_USART_put_buffer
  8177  1B34  0823               	movf	??_USART_put_buffer,w
  8178  1B35  00A7               	movwf	USART_put_buffer@ptr
  8179  1B36                     l6624:	
  8180                           ;usart.c: 105:     while(loop<size)
  8181                           
  8182                           
  8183                           ;usart.c: 105:     while(loop<size)
  8184  1B36  0826               	movf	USART_put_buffer@loop,w
  8185  1B37  00A3               	movwf	??_USART_put_buffer
  8186  1B38  01A4               	clrf	??_USART_put_buffer+1
  8187  1B39  0822               	movf	USART_put_buffer@size+1,w
  8188  1B3A  0224               	subwf	??_USART_put_buffer+1,w
  8189  1B3B  1D03               	skipz
  8190  1B3C  2B3F               	goto	u6995
  8191  1B3D  0821               	movf	USART_put_buffer@size,w
  8192  1B3E  0223               	subwf	??_USART_put_buffer,w
  8193  1B3F                     u6995:	
  8194  1B3F  1803               	btfsc	3,0
  8195  1B40  0008               	return
  8196                           
  8197                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8198  1B41  0827               	movf	USART_put_buffer@ptr,w
  8199  1B42  0084               	movwf	4
  8200  1B43  1383               	bcf	3,7	;select IRP bank0
  8201  1B44  0800               	movf	0,w
  8202  1B45  160A  118A  2000  160A  158A  	fcall	_USART_putc
  8203                           
  8204                           ;usart.c: 108:         ptr++;
  8205  1B4A  3001               	movlw	1
  8206  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  8207  1B4C  00A3               	movwf	??_USART_put_buffer
  8208  1B4D  0823               	movf	??_USART_put_buffer,w
  8209  1B4E  07A7               	addwf	USART_put_buffer@ptr,f
  8210                           
  8211                           ;usart.c: 109:         loop++;
  8212  1B4F  3001               	movlw	1
  8213  1B50  00A3               	movwf	??_USART_put_buffer
  8214  1B51  0823               	movf	??_USART_put_buffer,w
  8215  1B52  07A6               	addwf	USART_put_buffer@loop,f
  8216  1B53  2B36               	goto	l6624
  8217  1B54                     __end_of_USART_put_buffer:	
  8218                           
  8219                           	psect	text24
  8220  0800                     __ptext24:	
  8221 ;; *************** function _Send_To_MB *****************
  8222 ;; Defined at:
  8223 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  size            1    wreg     unsigned char 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  size            1    1[BANK0 ] unsigned char 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0, pclath, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 300/100
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8237 ;;      Params:         0       0       0       0       0
  8238 ;;      Locals:         0       1       0       0       0
  8239 ;;      Temps:          0       0       0       0       0
  8240 ;;      Totals:         0       1       0       0       0
  8241 ;;Total ram usage:        1 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    2
  8244 ;; This function calls:
  8245 ;;		_USART_putc
  8246 ;; This function is called by:
  8247 ;;		_Decodify_Command
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function _Send_To_MB
  8253  0800                     _Send_To_MB:	
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8257                           ;Send_To_MB@size stored from wreg
  8258  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8259  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8260  0802  00A1               	movwf	Send_To_MB@size
  8261                           
  8262                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8263  0803  30AA               	movlw	170
  8264  0804  160A  118A  2000  120A  158A  	fcall	_USART_putc
  8265                           
  8266                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8267  0809  30BB               	movlw	187
  8268  080A  160A  118A  2000  120A  158A  	fcall	_USART_putc
  8269                           
  8270                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8271  080F  0863               	movf	_Board_Number^(0+128),w
  8272  0810  160A  118A  2000  120A  158A  	fcall	_USART_putc
  8273                           
  8274                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8275  0815  3000               	movlw	0
  8276  0816  160A  118A  2000  120A  158A  	fcall	_USART_putc
  8277                           
  8278                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8279  081B  1703               	bsf	3,6	;RP1=1, select bank3
  8280  081C  083D               	movf	(_usart_protocol^(0+384)+4),w
  8281  081D  160A  118A  2000  120A  158A  	fcall	_USART_putc
  8282                           
  8283                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8284  0822  1283               	bcf	3,5	;RP0=0, select bank0
  8285  0823  0821               	movf	Send_To_MB@size,w
  8286  0824  160A  118A  2000   	fcall	_USART_putc
  8287  0827  0008               	return
  8288  0828                     __end_of_Send_To_MB:	
  8289                           
  8290                           	psect	text25
  8291  195C                     __ptext25:	
  8292 ;; *************** function _Send_Reply_OK *****************
  8293 ;; Defined at:
  8294 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 300/100
  8305 ;;		On exit  : 300/100
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8308 ;;      Params:         0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0
  8311 ;;      Totals:         0       0       0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    3
  8315 ;; This function calls:
  8316 ;;		_USART_put_string
  8317 ;; This function is called by:
  8318 ;;		_Decodify_Command
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _Send_Reply_OK
  8324  195C                     _Send_Reply_OK:	
  8325                           
  8326                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  8327                           
  8328                           ;incstack = 0
  8329                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8330  195C  3048               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8331  195D  1283               	bcf	3,5	;RP0=0, select bank0
  8332  195E  00A1               	movwf	USART_put_string@vetor
  8333  195F  3080               	movlw	128
  8334  1960  00A2               	movwf	USART_put_string@vetor+1
  8335  1961  160A  158A  24BF   	fcall	_USART_put_string
  8336  1964  0008               	return
  8337  1965                     __end_of_Send_Reply_OK:	
  8338                           
  8339                           	psect	text26
  8340  1CBF                     __ptext26:	
  8341 ;; *************** function _USART_put_string *****************
  8342 ;; Defined at:
  8343 ;;		line 168 in file "usart.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8346 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8349 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 300/0
  8356 ;;		On exit  : 300/100
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8359 ;;      Params:         0       2       0       0       0
  8360 ;;      Locals:         0       2       0       0       0
  8361 ;;      Temps:          0       0       0       0       0
  8362 ;;      Totals:         0       4       0       0       0
  8363 ;;Total ram usage:        4 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    2
  8366 ;; This function calls:
  8367 ;;		_USART_putc
  8368 ;; This function is called by:
  8369 ;;		_Decodify_Command
  8370 ;;		_Send_Reply_OK
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _USART_put_string
  8376  1CBF                     _USART_put_string:	
  8377                           
  8378                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8379                           
  8380                           ;incstack = 0
  8381                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8382  1CBF  0821               	movf	USART_put_string@vetor,w
  8383  1CC0  00A3               	movwf	USART_put_string@ptr
  8384  1CC1  0822               	movf	USART_put_string@vetor+1,w
  8385  1CC2  00A4               	movwf	USART_put_string@ptr+1
  8386  1CC3                     l5872:	
  8387                           ;usart.c: 172:     while(*(ptr)){
  8388                           
  8389                           
  8390                           ;usart.c: 172:     while(*(ptr)){
  8391  1CC3  0824               	movf	USART_put_string@ptr+1,w
  8392  1CC4  00FF               	movwf	127
  8393  1CC5  0823               	movf	USART_put_string@ptr,w
  8394  1CC6  0084               	movwf	4
  8395  1CC7  160A  158A  2000  160A  158A  	fcall	stringtab
  8396  1CCC  3A00               	xorlw	0
  8397  1CCD  1903               	btfsc	3,2
  8398  1CCE  2CE5               	goto	l5874
  8399                           
  8400                           ;usart.c: 173:         USART_putc(*(ptr));
  8401  1CCF  0824               	movf	USART_put_string@ptr+1,w
  8402  1CD0  00FF               	movwf	127
  8403  1CD1  0823               	movf	USART_put_string@ptr,w
  8404  1CD2  0084               	movwf	4
  8405  1CD3  160A  158A  2000  160A  158A  	fcall	stringtab
  8406  1CD8  160A  118A  2000  160A  158A  	fcall	_USART_putc
  8407                           
  8408                           ;usart.c: 174:         ptr++;
  8409  1CDD  3001               	movlw	1
  8410  1CDE  1283               	bcf	3,5	;RP0=0, select bank0
  8411  1CDF  07A3               	addwf	USART_put_string@ptr,f
  8412  1CE0  1803               	skipnc
  8413  1CE1  0AA4               	incf	USART_put_string@ptr+1,f
  8414  1CE2  3000               	movlw	0
  8415  1CE3  07A4               	addwf	USART_put_string@ptr+1,f
  8416  1CE4  2CC3               	goto	l5872
  8417  1CE5                     l5874:	
  8418                           
  8419                           ;usart.c: 176:     USART_putc(*(ptr));
  8420  1CE5  0824               	movf	USART_put_string@ptr+1,w
  8421  1CE6  00FF               	movwf	127
  8422  1CE7  0823               	movf	USART_put_string@ptr,w
  8423  1CE8  0084               	movwf	4
  8424  1CE9  160A  158A  2000  160A  158A  	fcall	stringtab
  8425  1CEE  160A  118A  2000   	fcall	_USART_putc
  8426  1CF1  0008               	return
  8427  1CF2                     __end_of_USART_put_string:	
  8428                           
  8429                           	psect	text27
  8430  10C0                     __ptext27:	
  8431 ;; *************** function _Save_Log *****************
  8432 ;; Defined at:
  8433 ;;		line 1014 in file "SlaveLiofilizadorVer1.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 300/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8447 ;;      Params:         0       4       0       0       0
  8448 ;;      Locals:         0       0       0       0       0
  8449 ;;      Temps:          0       0       0       0       0
  8450 ;;      Totals:         0       4       0       0       0
  8451 ;;Total ram usage:        4 bytes
  8452 ;; Hardware stack levels used:    1
  8453 ;; Hardware stack levels required when called:    5
  8454 ;; This function calls:
  8455 ;;		_EEPROM_24C1025_Write_Int
  8456 ;;		___flmul
  8457 ;;		___fltol
  8458 ;; This function is called by:
  8459 ;;		_Decodify_Command
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function _Save_Log
  8465  10C0                     _Save_Log:	
  8466                           
  8467                           ;SlaveLiofilizadorVer1.c: 1015:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Tensao1*10));
  8468                           
  8469                           ;incstack = 0
  8470                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8471  10C0  085B               	movf	Save_Log@add_datalog+3,w
  8472  10C1  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8473  10C2  085A               	movf	Save_Log@add_datalog+2,w
  8474  10C3  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8475  10C4  0859               	movf	Save_Log@add_datalog+1,w
  8476  10C5  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8477  10C6  0858               	movf	Save_Log@add_datalog,w
  8478  10C7  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8479  10C8  1683               	bsf	3,5	;RP0=1, select bank1
  8480  10C9  0850               	movf	(_Tensao1+3)^(0+128),w
  8481  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  8482  10CB  00B0               	movwf	___flmul@a+3
  8483  10CC  1683               	bsf	3,5	;RP0=1, select bank1
  8484  10CD  084F               	movf	(_Tensao1+2)^(0+128),w
  8485  10CE  1283               	bcf	3,5	;RP0=0, select bank0
  8486  10CF  00AF               	movwf	___flmul@a+2
  8487  10D0  1683               	bsf	3,5	;RP0=1, select bank1
  8488  10D1  084E               	movf	(_Tensao1+1)^(0+128),w
  8489  10D2  1283               	bcf	3,5	;RP0=0, select bank0
  8490  10D3  00AE               	movwf	___flmul@a+1
  8491  10D4  1683               	bsf	3,5	;RP0=1, select bank1
  8492  10D5  084D               	movf	_Tensao1^(0+128),w
  8493  10D6  1283               	bcf	3,5	;RP0=0, select bank0
  8494  10D7  00AD               	movwf	___flmul@a
  8495  10D8  3041               	movlw	65
  8496  10D9  00AC               	movwf	___flmul@b+3
  8497  10DA  3020               	movlw	32
  8498  10DB  00AB               	movwf	___flmul@b+2
  8499  10DC  3000               	movlw	0
  8500  10DD  00AA               	movwf	___flmul@b+1
  8501  10DE  3000               	movlw	0
  8502  10DF  00A9               	movwf	___flmul@b
  8503  10E0  120A  118A  24B9  160A  118A  	fcall	___flmul
  8504  10E5  082C               	movf	?___flmul+3,w
  8505  10E6  00C6               	movwf	___fltol@f1+3
  8506  10E7  082B               	movf	?___flmul+2,w
  8507  10E8  00C5               	movwf	___fltol@f1+2
  8508  10E9  082A               	movf	?___flmul+1,w
  8509  10EA  00C4               	movwf	___fltol@f1+1
  8510  10EB  0829               	movf	?___flmul,w
  8511  10EC  00C3               	movwf	___fltol@f1
  8512  10ED  160A  118A  2055  160A  118A  	fcall	___fltol
  8513  10F2  0844               	movf	?___fltol+1,w
  8514  10F3  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8515  10F4  0843               	movf	?___fltol,w
  8516  10F5  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8517  10F6  3000               	movlw	0
  8518  10F7  160A  158A  2289  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8519                           
  8520                           ;SlaveLiofilizadorVer1.c: 1016:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Vaccum0*10));
  8521  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  8522  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  8523  10FE  085B               	movf	Save_Log@add_datalog+3,w
  8524  10FF  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8525  1100  085A               	movf	Save_Log@add_datalog+2,w
  8526  1101  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8527  1102  0859               	movf	Save_Log@add_datalog+1,w
  8528  1103  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8529  1104  0858               	movf	Save_Log@add_datalog,w
  8530  1105  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8531  1106  1683               	bsf	3,5	;RP0=1, select bank1
  8532  1107  0854               	movf	(_Vaccum0+3)^(0+128),w
  8533  1108  1283               	bcf	3,5	;RP0=0, select bank0
  8534  1109  00B0               	movwf	___flmul@a+3
  8535  110A  1683               	bsf	3,5	;RP0=1, select bank1
  8536  110B  0853               	movf	(_Vaccum0+2)^(0+128),w
  8537  110C  1283               	bcf	3,5	;RP0=0, select bank0
  8538  110D  00AF               	movwf	___flmul@a+2
  8539  110E  1683               	bsf	3,5	;RP0=1, select bank1
  8540  110F  0852               	movf	(_Vaccum0+1)^(0+128),w
  8541  1110  1283               	bcf	3,5	;RP0=0, select bank0
  8542  1111  00AE               	movwf	___flmul@a+1
  8543  1112  1683               	bsf	3,5	;RP0=1, select bank1
  8544  1113  0851               	movf	_Vaccum0^(0+128),w
  8545  1114  1283               	bcf	3,5	;RP0=0, select bank0
  8546  1115  00AD               	movwf	___flmul@a
  8547  1116  3041               	movlw	65
  8548  1117  00AC               	movwf	___flmul@b+3
  8549  1118  3020               	movlw	32
  8550  1119  00AB               	movwf	___flmul@b+2
  8551  111A  3000               	movlw	0
  8552  111B  00AA               	movwf	___flmul@b+1
  8553  111C  3000               	movlw	0
  8554  111D  00A9               	movwf	___flmul@b
  8555  111E  120A  118A  24B9  160A  118A  	fcall	___flmul
  8556  1123  082C               	movf	?___flmul+3,w
  8557  1124  00C6               	movwf	___fltol@f1+3
  8558  1125  082B               	movf	?___flmul+2,w
  8559  1126  00C5               	movwf	___fltol@f1+2
  8560  1127  082A               	movf	?___flmul+1,w
  8561  1128  00C4               	movwf	___fltol@f1+1
  8562  1129  0829               	movf	?___flmul,w
  8563  112A  00C3               	movwf	___fltol@f1
  8564  112B  160A  118A  2055  160A  118A  	fcall	___fltol
  8565  1130  0844               	movf	?___fltol+1,w
  8566  1131  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8567  1132  0843               	movf	?___fltol,w
  8568  1133  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8569  1134  3001               	movlw	1
  8570  1135  160A  158A  2289   	fcall	_EEPROM_24C1025_Write_Int
  8571  1138  0008               	return
  8572  1139                     __end_of_Save_Log:	
  8573                           
  8574                           	psect	text28
  8575  1055                     __ptext28:	
  8576 ;; *************** function ___fltol *****************
  8577 ;; Defined at:
  8578 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  f1              4   35[BANK0 ] void 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  exp1            1   45[BANK0 ] unsigned char 
  8583 ;;  sign1           1   44[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  4   35[BANK0 ] long 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 300/0
  8590 ;;		On exit  : 300/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8593 ;;      Params:         0       4       0       0       0
  8594 ;;      Locals:         0       2       0       0       0
  8595 ;;      Temps:          0       5       0       0       0
  8596 ;;      Totals:         0      11       0       0       0
  8597 ;;Total ram usage:       11 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_Decodify_Command
  8604 ;;		_Save_Log
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           
  8609                           ;psect for function ___fltol
  8610  1055                     ___fltol:	
  8611                           
  8612                           ;incstack = 0
  8613                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8614  1055  1003               	clrc
  8615  1056  0D45               	rlf	___fltol@f1+2,w
  8616  1057  0D46               	rlf	___fltol@f1+3,w
  8617  1058  00C7               	movwf	??___fltol
  8618  1059  0847               	movf	??___fltol,w
  8619  105A  00CD               	movwf	___fltol@exp1
  8620  105B  084D               	movf	___fltol@exp1,w
  8621  105C  1D03               	btfss	3,2
  8622  105D  2867               	goto	l6072
  8623  105E                     l6068:	
  8624  105E  3000               	movlw	0
  8625  105F  00C6               	movwf	?___fltol+3
  8626  1060  3000               	movlw	0
  8627  1061  00C5               	movwf	?___fltol+2
  8628  1062  3000               	movlw	0
  8629  1063  00C4               	movwf	?___fltol+1
  8630  1064  3000               	movlw	0
  8631  1065  00C3               	movwf	?___fltol
  8632  1066  0008               	return
  8633  1067                     l6072:	
  8634  1067  0843               	movf	___fltol@f1,w
  8635  1068  00C7               	movwf	??___fltol
  8636  1069  0844               	movf	___fltol@f1+1,w
  8637  106A  00C8               	movwf	??___fltol+1
  8638  106B  0845               	movf	___fltol@f1+2,w
  8639  106C  00C9               	movwf	??___fltol+2
  8640  106D  0846               	movf	___fltol@f1+3,w
  8641  106E  00CA               	movwf	??___fltol+3
  8642  106F  301F               	movlw	31
  8643  1070                     u5865:	
  8644  1070  1003               	clrc
  8645  1071  0CCA               	rrf	??___fltol+3,f
  8646  1072  0CC9               	rrf	??___fltol+2,f
  8647  1073  0CC8               	rrf	??___fltol+1,f
  8648  1074  0CC7               	rrf	??___fltol,f
  8649  1075  3EFF               	addlw	-1
  8650  1076  1D03               	skipz
  8651  1077  2870               	goto	u5865
  8652  1078  0847               	movf	??___fltol,w
  8653  1079  00CB               	movwf	??___fltol+4
  8654  107A  084B               	movf	??___fltol+4,w
  8655  107B  00CC               	movwf	___fltol@sign1
  8656  107C  17C5               	bsf	___fltol@f1+2,7
  8657  107D  30FF               	movlw	255
  8658  107E  05C3               	andwf	___fltol@f1,f
  8659  107F  30FF               	movlw	255
  8660  1080  05C4               	andwf	___fltol@f1+1,f
  8661  1081  30FF               	movlw	255
  8662  1082  05C5               	andwf	___fltol@f1+2,f
  8663  1083  3000               	movlw	0
  8664  1084  05C6               	andwf	___fltol@f1+3,f
  8665  1085  3096               	movlw	150
  8666  1086  02CD               	subwf	___fltol@exp1,f
  8667  1087  1FCD               	btfss	___fltol@exp1,7
  8668  1088  289E               	goto	l6090
  8669  1089  084D               	movf	___fltol@exp1,w
  8670  108A  3A80               	xorlw	128
  8671  108B  3E97               	addlw	151
  8672  108C  1C03               	btfss	3,0
  8673  108D  285E               	goto	l6068
  8674  108E                     l6088:	
  8675  108E  3001               	movlw	1
  8676  108F                     u5895:	
  8677  108F  1003               	clrc
  8678  1090  0CC6               	rrf	___fltol@f1+3,f
  8679  1091  0CC5               	rrf	___fltol@f1+2,f
  8680  1092  0CC4               	rrf	___fltol@f1+1,f
  8681  1093  0CC3               	rrf	___fltol@f1,f
  8682  1094  3EFF               	addlw	-1
  8683  1095  1D03               	skipz
  8684  1096  288F               	goto	u5895
  8685  1097  3001               	movlw	1
  8686  1098  00C7               	movwf	??___fltol
  8687  1099  0847               	movf	??___fltol,w
  8688  109A  07CD               	addwf	___fltol@exp1,f
  8689  109B  1903               	btfsc	3,2
  8690  109C  28B1               	goto	l6098
  8691  109D  288E               	goto	l6088
  8692  109E                     l6090:	
  8693  109E  3020               	movlw	32
  8694  109F  024D               	subwf	___fltol@exp1,w
  8695  10A0  1803               	btfsc	3,0
  8696  10A1  285E               	goto	l6068
  8697  10A2                     l1146:	
  8698  10A2  084D               	movf	___fltol@exp1,w
  8699  10A3  1903               	btfsc	3,2
  8700  10A4  28B1               	goto	l6098
  8701  10A5  3001               	movlw	1
  8702  10A6  00C7               	movwf	??___fltol
  8703  10A7                     u5925:	
  8704  10A7  1003               	clrc
  8705  10A8  0DC3               	rlf	___fltol@f1,f
  8706  10A9  0DC4               	rlf	___fltol@f1+1,f
  8707  10AA  0DC5               	rlf	___fltol@f1+2,f
  8708  10AB  0DC6               	rlf	___fltol@f1+3,f
  8709  10AC  0BC7               	decfsz	??___fltol,f
  8710  10AD  28A7               	goto	u5925
  8711  10AE  3001               	movlw	1
  8712  10AF  02CD               	subwf	___fltol@exp1,f
  8713  10B0  28A2               	goto	l1146
  8714  10B1                     l6098:	
  8715  10B1  084C               	movf	___fltol@sign1,w
  8716  10B2  1903               	btfsc	3,2
  8717  10B3  0008               	return
  8718  10B4  09C3               	comf	___fltol@f1,f
  8719  10B5  09C4               	comf	___fltol@f1+1,f
  8720  10B6  09C5               	comf	___fltol@f1+2,f
  8721  10B7  09C6               	comf	___fltol@f1+3,f
  8722  10B8  0AC3               	incf	___fltol@f1,f
  8723  10B9  1903               	skipnz
  8724  10BA  0AC4               	incf	___fltol@f1+1,f
  8725  10BB  1903               	skipnz
  8726  10BC  0AC5               	incf	___fltol@f1+2,f
  8727  10BD  1903               	skipnz
  8728  10BE  0AC6               	incf	___fltol@f1+3,f
  8729  10BF  0008               	return
  8730  10C0                     __end_of___fltol:	
  8731                           
  8732                           	psect	text29
  8733  04B9                     __ptext29:	
  8734 ;; *************** function ___flmul *****************
  8735 ;; Defined at:
  8736 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  b               4    9[BANK0 ] long 
  8739 ;;  a               4   13[BANK0 ] long 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  prod            4   29[BANK0 ] struct .
  8742 ;;  grs             4   25[BANK0 ] unsigned long 
  8743 ;;  temp            2   33[BANK0 ] struct .
  8744 ;;  bexp            1   24[BANK0 ] unsigned char 
  8745 ;;  aexp            1   23[BANK0 ] unsigned char 
  8746 ;;  sign            1   22[BANK0 ] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  4    9[BANK0 ] unsigned char 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 300/0
  8753 ;;		On exit  : 300/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         0       8       0       0       0
  8757 ;;      Locals:         0      13       0       0       0
  8758 ;;      Temps:          0       5       0       0       0
  8759 ;;      Totals:         0      26       0       0       0
  8760 ;;Total ram usage:       26 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    2
  8763 ;; This function calls:
  8764 ;;		__Umul8_16
  8765 ;; This function is called by:
  8766 ;;		_Decodify_Command
  8767 ;;		_MediaPlacaVaccum
  8768 ;;		_Save_Log
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function ___flmul
  8774  04B9                     ___flmul:	
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8778  04B9  082C               	movf	___flmul@b+3,w
  8779  04BA  3980               	andlw	128
  8780  04BB  00B1               	movwf	??___flmul
  8781  04BC  0831               	movf	??___flmul,w
  8782  04BD  00B6               	movwf	___flmul@sign
  8783  04BE  082C               	movf	___flmul@b+3,w
  8784  04BF  00B1               	movwf	??___flmul
  8785  04C0  0731               	addwf	??___flmul,w
  8786  04C1  00B2               	movwf	??___flmul+1
  8787  04C2  0832               	movf	??___flmul+1,w
  8788  04C3  00B8               	movwf	___flmul@bexp
  8789  04C4  1BAB               	btfsc	___flmul@b+2,7
  8790  04C5  1438               	bsf	___flmul@bexp,0
  8791  04C6  0838               	movf	___flmul@bexp,w
  8792  04C7  1903               	btfsc	3,2
  8793  04C8  2CD6               	goto	l6312
  8794  04C9  0A38               	incf	___flmul@bexp,w
  8795  04CA  1D03               	btfss	3,2
  8796  04CB  2CD4               	goto	l6310
  8797  04CC  3000               	movlw	0
  8798  04CD  00AC               	movwf	___flmul@b+3
  8799  04CE  3000               	movlw	0
  8800  04CF  00AB               	movwf	___flmul@b+2
  8801  04D0  3000               	movlw	0
  8802  04D1  00AA               	movwf	___flmul@b+1
  8803  04D2  3000               	movlw	0
  8804  04D3  00A9               	movwf	___flmul@b
  8805  04D4                     l6310:	
  8806  04D4  17AB               	bsf	___flmul@b+2,7
  8807  04D5  2CDE               	goto	l6314
  8808  04D6                     l6312:	
  8809  04D6  3000               	movlw	0
  8810  04D7  00AC               	movwf	___flmul@b+3
  8811  04D8  3000               	movlw	0
  8812  04D9  00AB               	movwf	___flmul@b+2
  8813  04DA  3000               	movlw	0
  8814  04DB  00AA               	movwf	___flmul@b+1
  8815  04DC  3000               	movlw	0
  8816  04DD  00A9               	movwf	___flmul@b
  8817  04DE                     l6314:	
  8818  04DE  0830               	movf	___flmul@a+3,w
  8819  04DF  3980               	andlw	128
  8820  04E0  00B1               	movwf	??___flmul
  8821  04E1  0831               	movf	??___flmul,w
  8822  04E2  06B6               	xorwf	___flmul@sign,f
  8823  04E3  0830               	movf	___flmul@a+3,w
  8824  04E4  00B1               	movwf	??___flmul
  8825  04E5  0731               	addwf	??___flmul,w
  8826  04E6  00B2               	movwf	??___flmul+1
  8827  04E7  0832               	movf	??___flmul+1,w
  8828  04E8  00B7               	movwf	___flmul@aexp
  8829  04E9  1BAF               	btfsc	___flmul@a+2,7
  8830  04EA  1437               	bsf	___flmul@aexp,0
  8831  04EB  0837               	movf	___flmul@aexp,w
  8832  04EC  1903               	btfsc	3,2
  8833  04ED  2CFB               	goto	l6330
  8834  04EE  0A37               	incf	___flmul@aexp,w
  8835  04EF  1D03               	btfss	3,2
  8836  04F0  2CF9               	goto	l6328
  8837  04F1  3000               	movlw	0
  8838  04F2  00B0               	movwf	___flmul@a+3
  8839  04F3  3000               	movlw	0
  8840  04F4  00AF               	movwf	___flmul@a+2
  8841  04F5  3000               	movlw	0
  8842  04F6  00AE               	movwf	___flmul@a+1
  8843  04F7  3000               	movlw	0
  8844  04F8  00AD               	movwf	___flmul@a
  8845  04F9                     l6328:	
  8846  04F9  17AF               	bsf	___flmul@a+2,7
  8847  04FA  2D03               	goto	l6332
  8848  04FB                     l6330:	
  8849  04FB  3000               	movlw	0
  8850  04FC  00B0               	movwf	___flmul@a+3
  8851  04FD  3000               	movlw	0
  8852  04FE  00AF               	movwf	___flmul@a+2
  8853  04FF  3000               	movlw	0
  8854  0500  00AE               	movwf	___flmul@a+1
  8855  0501  3000               	movlw	0
  8856  0502  00AD               	movwf	___flmul@a
  8857  0503                     l6332:	
  8858  0503  0837               	movf	___flmul@aexp,w
  8859  0504  1D03               	btfss	3,2
  8860  0505  0838               	movf	___flmul@bexp,w
  8861  0506  1D03               	btfss	3,2
  8862  0507  2D11               	goto	l6340
  8863  0508  3000               	movlw	0
  8864  0509  00AC               	movwf	?___flmul+3
  8865  050A  3000               	movlw	0
  8866  050B  00AB               	movwf	?___flmul+2
  8867  050C  3000               	movlw	0
  8868  050D  00AA               	movwf	?___flmul+1
  8869  050E  3000               	movlw	0
  8870  050F  00A9               	movwf	?___flmul
  8871  0510  0008               	return
  8872  0511                     l6340:	
  8873  0511  0829               	movf	___flmul@b,w
  8874  0512  00B1               	movwf	??___flmul
  8875  0513  0831               	movf	??___flmul,w
  8876  0514  00A0               	movwf	__Umul8_16@multiplicand
  8877  0515  082F               	movf	___flmul@a+2,w
  8878  0516  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  8879  051B  0821               	movf	?__Umul8_16+1,w
  8880  051C  00C2               	movwf	___flmul@temp+1
  8881  051D  0820               	movf	?__Umul8_16,w
  8882  051E  00C1               	movwf	___flmul@temp
  8883  051F  0841               	movf	___flmul@temp,w
  8884  0520  00B1               	movwf	??___flmul
  8885  0521  01B2               	clrf	??___flmul+1
  8886  0522  01B3               	clrf	??___flmul+2
  8887  0523  01B4               	clrf	??___flmul+3
  8888  0524  0834               	movf	??___flmul+3,w
  8889  0525  00BC               	movwf	___flmul@grs+3
  8890  0526  0833               	movf	??___flmul+2,w
  8891  0527  00BB               	movwf	___flmul@grs+2
  8892  0528  0832               	movf	??___flmul+1,w
  8893  0529  00BA               	movwf	___flmul@grs+1
  8894  052A  0831               	movf	??___flmul,w
  8895  052B  00B9               	movwf	___flmul@grs
  8896  052C  0842               	movf	___flmul@temp+1,w
  8897  052D  00B1               	movwf	??___flmul
  8898  052E  01B2               	clrf	??___flmul+1
  8899  052F  01B3               	clrf	??___flmul+2
  8900  0530  01B4               	clrf	??___flmul+3
  8901  0531  0834               	movf	??___flmul+3,w
  8902  0532  00C0               	movwf	___flmul@prod+3
  8903  0533  0833               	movf	??___flmul+2,w
  8904  0534  00BF               	movwf	___flmul@prod+2
  8905  0535  0832               	movf	??___flmul+1,w
  8906  0536  00BE               	movwf	___flmul@prod+1
  8907  0537  0831               	movf	??___flmul,w
  8908  0538  00BD               	movwf	___flmul@prod
  8909  0539  082A               	movf	___flmul@b+1,w
  8910  053A  00B1               	movwf	??___flmul
  8911  053B  0831               	movf	??___flmul,w
  8912  053C  00A0               	movwf	__Umul8_16@multiplicand
  8913  053D  082E               	movf	___flmul@a+1,w
  8914  053E  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  8915  0543  0821               	movf	?__Umul8_16+1,w
  8916  0544  00C2               	movwf	___flmul@temp+1
  8917  0545  0820               	movf	?__Umul8_16,w
  8918  0546  00C1               	movwf	___flmul@temp
  8919  0547  0841               	movf	___flmul@temp,w
  8920  0548  00B1               	movwf	??___flmul
  8921  0549  01B2               	clrf	??___flmul+1
  8922  054A  01B3               	clrf	??___flmul+2
  8923  054B  01B4               	clrf	??___flmul+3
  8924  054C  0831               	movf	??___flmul,w
  8925  054D  07B9               	addwf	___flmul@grs,f
  8926  054E  0832               	movf	??___flmul+1,w
  8927  054F  1103               	clrz
  8928  0550  1803               	skipnc
  8929  0551  3E01               	addlw	1
  8930  0552  1D03               	btfss	3,2
  8931  0553  07BA               	addwf	___flmul@grs+1,f
  8932  0554  0833               	movf	??___flmul+2,w
  8933  0555  1103               	clrz
  8934  0556  1803               	skipnc
  8935  0557  3E01               	addlw	1
  8936  0558  1D03               	btfss	3,2
  8937  0559  07BB               	addwf	___flmul@grs+2,f
  8938  055A  0834               	movf	??___flmul+3,w
  8939  055B  1103               	clrz
  8940  055C  1803               	skipnc
  8941  055D  3E01               	addlw	1
  8942  055E  1D03               	btfss	3,2
  8943  055F  07BC               	addwf	___flmul@grs+3,f
  8944  0560  0842               	movf	___flmul@temp+1,w
  8945  0561  00B1               	movwf	??___flmul
  8946  0562  01B2               	clrf	??___flmul+1
  8947  0563  01B3               	clrf	??___flmul+2
  8948  0564  01B4               	clrf	??___flmul+3
  8949  0565  0831               	movf	??___flmul,w
  8950  0566  07BD               	addwf	___flmul@prod,f
  8951  0567  0832               	movf	??___flmul+1,w
  8952  0568  1103               	clrz
  8953  0569  1803               	skipnc
  8954  056A  3E01               	addlw	1
  8955  056B  1D03               	btfss	3,2
  8956  056C  07BE               	addwf	___flmul@prod+1,f
  8957  056D  0833               	movf	??___flmul+2,w
  8958  056E  1103               	clrz
  8959  056F  1803               	skipnc
  8960  0570  3E01               	addlw	1
  8961  0571  1D03               	btfss	3,2
  8962  0572  07BF               	addwf	___flmul@prod+2,f
  8963  0573  0834               	movf	??___flmul+3,w
  8964  0574  1103               	clrz
  8965  0575  1803               	skipnc
  8966  0576  3E01               	addlw	1
  8967  0577  1D03               	btfss	3,2
  8968  0578  07C0               	addwf	___flmul@prod+3,f
  8969  0579  082B               	movf	___flmul@b+2,w
  8970  057A  00B1               	movwf	??___flmul
  8971  057B  0831               	movf	??___flmul,w
  8972  057C  00A0               	movwf	__Umul8_16@multiplicand
  8973  057D  082D               	movf	___flmul@a,w
  8974  057E  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  8975  0583  0821               	movf	?__Umul8_16+1,w
  8976  0584  00C2               	movwf	___flmul@temp+1
  8977  0585  0820               	movf	?__Umul8_16,w
  8978  0586  00C1               	movwf	___flmul@temp
  8979  0587  0841               	movf	___flmul@temp,w
  8980  0588  00B1               	movwf	??___flmul
  8981  0589  01B2               	clrf	??___flmul+1
  8982  058A  01B3               	clrf	??___flmul+2
  8983  058B  01B4               	clrf	??___flmul+3
  8984  058C  0831               	movf	??___flmul,w
  8985  058D  07B9               	addwf	___flmul@grs,f
  8986  058E  0832               	movf	??___flmul+1,w
  8987  058F  1103               	clrz
  8988  0590  1803               	skipnc
  8989  0591  3E01               	addlw	1
  8990  0592  1D03               	btfss	3,2
  8991  0593  07BA               	addwf	___flmul@grs+1,f
  8992  0594  0833               	movf	??___flmul+2,w
  8993  0595  1103               	clrz
  8994  0596  1803               	skipnc
  8995  0597  3E01               	addlw	1
  8996  0598  1D03               	btfss	3,2
  8997  0599  07BB               	addwf	___flmul@grs+2,f
  8998  059A  0834               	movf	??___flmul+3,w
  8999  059B  1103               	clrz
  9000  059C  1803               	skipnc
  9001  059D  3E01               	addlw	1
  9002  059E  1D03               	btfss	3,2
  9003  059F  07BC               	addwf	___flmul@grs+3,f
  9004  05A0  0842               	movf	___flmul@temp+1,w
  9005  05A1  00B1               	movwf	??___flmul
  9006  05A2  01B2               	clrf	??___flmul+1
  9007  05A3  01B3               	clrf	??___flmul+2
  9008  05A4  01B4               	clrf	??___flmul+3
  9009  05A5  0831               	movf	??___flmul,w
  9010  05A6  07BD               	addwf	___flmul@prod,f
  9011  05A7  0832               	movf	??___flmul+1,w
  9012  05A8  1103               	clrz
  9013  05A9  1803               	skipnc
  9014  05AA  3E01               	addlw	1
  9015  05AB  1D03               	btfss	3,2
  9016  05AC  07BE               	addwf	___flmul@prod+1,f
  9017  05AD  0833               	movf	??___flmul+2,w
  9018  05AE  1103               	clrz
  9019  05AF  1803               	skipnc
  9020  05B0  3E01               	addlw	1
  9021  05B1  1D03               	btfss	3,2
  9022  05B2  07BF               	addwf	___flmul@prod+2,f
  9023  05B3  0834               	movf	??___flmul+3,w
  9024  05B4  1103               	clrz
  9025  05B5  1803               	skipnc
  9026  05B6  3E01               	addlw	1
  9027  05B7  1D03               	btfss	3,2
  9028  05B8  07C0               	addwf	___flmul@prod+3,f
  9029  05B9  3008               	movlw	8
  9030  05BA  00B1               	movwf	??___flmul
  9031  05BB                     u6535:	
  9032  05BB  1003               	clrc
  9033  05BC  0DB9               	rlf	___flmul@grs,f
  9034  05BD  0DBA               	rlf	___flmul@grs+1,f
  9035  05BE  0DBB               	rlf	___flmul@grs+2,f
  9036  05BF  0DBC               	rlf	___flmul@grs+3,f
  9037  05C0  0BB1               	decfsz	??___flmul,f
  9038  05C1  2DBB               	goto	u6535
  9039  05C2  082A               	movf	___flmul@b+1,w
  9040  05C3  00B1               	movwf	??___flmul
  9041  05C4  0831               	movf	??___flmul,w
  9042  05C5  00A0               	movwf	__Umul8_16@multiplicand
  9043  05C6  082D               	movf	___flmul@a,w
  9044  05C7  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9045  05CC  0821               	movf	?__Umul8_16+1,w
  9046  05CD  00C2               	movwf	___flmul@temp+1
  9047  05CE  0820               	movf	?__Umul8_16,w
  9048  05CF  00C1               	movwf	___flmul@temp
  9049  05D0  0841               	movf	___flmul@temp,w
  9050  05D1  00B1               	movwf	??___flmul
  9051  05D2  0842               	movf	___flmul@temp+1,w
  9052  05D3  00B2               	movwf	??___flmul+1
  9053  05D4  01B3               	clrf	??___flmul+2
  9054  05D5  01B4               	clrf	??___flmul+3
  9055  05D6  0831               	movf	??___flmul,w
  9056  05D7  07B9               	addwf	___flmul@grs,f
  9057  05D8  0832               	movf	??___flmul+1,w
  9058  05D9  1103               	clrz
  9059  05DA  1803               	skipnc
  9060  05DB  3E01               	addlw	1
  9061  05DC  1D03               	btfss	3,2
  9062  05DD  07BA               	addwf	___flmul@grs+1,f
  9063  05DE  0833               	movf	??___flmul+2,w
  9064  05DF  1103               	clrz
  9065  05E0  1803               	skipnc
  9066  05E1  3E01               	addlw	1
  9067  05E2  1D03               	btfss	3,2
  9068  05E3  07BB               	addwf	___flmul@grs+2,f
  9069  05E4  0834               	movf	??___flmul+3,w
  9070  05E5  1103               	clrz
  9071  05E6  1803               	skipnc
  9072  05E7  3E01               	addlw	1
  9073  05E8  1D03               	btfss	3,2
  9074  05E9  07BC               	addwf	___flmul@grs+3,f
  9075  05EA  0829               	movf	___flmul@b,w
  9076  05EB  00B1               	movwf	??___flmul
  9077  05EC  0831               	movf	??___flmul,w
  9078  05ED  00A0               	movwf	__Umul8_16@multiplicand
  9079  05EE  082E               	movf	___flmul@a+1,w
  9080  05EF  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9081  05F4  0821               	movf	?__Umul8_16+1,w
  9082  05F5  00C2               	movwf	___flmul@temp+1
  9083  05F6  0820               	movf	?__Umul8_16,w
  9084  05F7  00C1               	movwf	___flmul@temp
  9085  05F8  0841               	movf	___flmul@temp,w
  9086  05F9  00B1               	movwf	??___flmul
  9087  05FA  0842               	movf	___flmul@temp+1,w
  9088  05FB  00B2               	movwf	??___flmul+1
  9089  05FC  01B3               	clrf	??___flmul+2
  9090  05FD  01B4               	clrf	??___flmul+3
  9091  05FE  0831               	movf	??___flmul,w
  9092  05FF  07B9               	addwf	___flmul@grs,f
  9093  0600  0832               	movf	??___flmul+1,w
  9094  0601  1103               	clrz
  9095  0602  1803               	skipnc
  9096  0603  3E01               	addlw	1
  9097  0604  1D03               	btfss	3,2
  9098  0605  07BA               	addwf	___flmul@grs+1,f
  9099  0606  0833               	movf	??___flmul+2,w
  9100  0607  1103               	clrz
  9101  0608  1803               	skipnc
  9102  0609  3E01               	addlw	1
  9103  060A  1D03               	btfss	3,2
  9104  060B  07BB               	addwf	___flmul@grs+2,f
  9105  060C  0834               	movf	??___flmul+3,w
  9106  060D  1103               	clrz
  9107  060E  1803               	skipnc
  9108  060F  3E01               	addlw	1
  9109  0610  1D03               	btfss	3,2
  9110  0611  07BC               	addwf	___flmul@grs+3,f
  9111  0612  3008               	movlw	8
  9112  0613  00B1               	movwf	??___flmul
  9113  0614                     u6565:	
  9114  0614  1003               	clrc
  9115  0615  0DB9               	rlf	___flmul@grs,f
  9116  0616  0DBA               	rlf	___flmul@grs+1,f
  9117  0617  0DBB               	rlf	___flmul@grs+2,f
  9118  0618  0DBC               	rlf	___flmul@grs+3,f
  9119  0619  0BB1               	decfsz	??___flmul,f
  9120  061A  2E14               	goto	u6565
  9121  061B  0829               	movf	___flmul@b,w
  9122  061C  00B1               	movwf	??___flmul
  9123  061D  0831               	movf	??___flmul,w
  9124  061E  00A0               	movwf	__Umul8_16@multiplicand
  9125  061F  082D               	movf	___flmul@a,w
  9126  0620  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9127  0625  0821               	movf	?__Umul8_16+1,w
  9128  0626  00C2               	movwf	___flmul@temp+1
  9129  0627  0820               	movf	?__Umul8_16,w
  9130  0628  00C1               	movwf	___flmul@temp
  9131  0629  0841               	movf	___flmul@temp,w
  9132  062A  00B1               	movwf	??___flmul
  9133  062B  0842               	movf	___flmul@temp+1,w
  9134  062C  00B2               	movwf	??___flmul+1
  9135  062D  01B3               	clrf	??___flmul+2
  9136  062E  01B4               	clrf	??___flmul+3
  9137  062F  0831               	movf	??___flmul,w
  9138  0630  07B9               	addwf	___flmul@grs,f
  9139  0631  0832               	movf	??___flmul+1,w
  9140  0632  1103               	clrz
  9141  0633  1803               	skipnc
  9142  0634  3E01               	addlw	1
  9143  0635  1D03               	btfss	3,2
  9144  0636  07BA               	addwf	___flmul@grs+1,f
  9145  0637  0833               	movf	??___flmul+2,w
  9146  0638  1103               	clrz
  9147  0639  1803               	skipnc
  9148  063A  3E01               	addlw	1
  9149  063B  1D03               	btfss	3,2
  9150  063C  07BB               	addwf	___flmul@grs+2,f
  9151  063D  0834               	movf	??___flmul+3,w
  9152  063E  1103               	clrz
  9153  063F  1803               	skipnc
  9154  0640  3E01               	addlw	1
  9155  0641  1D03               	btfss	3,2
  9156  0642  07BC               	addwf	___flmul@grs+3,f
  9157  0643  082A               	movf	___flmul@b+1,w
  9158  0644  00B1               	movwf	??___flmul
  9159  0645  0831               	movf	??___flmul,w
  9160  0646  00A0               	movwf	__Umul8_16@multiplicand
  9161  0647  082F               	movf	___flmul@a+2,w
  9162  0648  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9163  064D  0821               	movf	?__Umul8_16+1,w
  9164  064E  00C2               	movwf	___flmul@temp+1
  9165  064F  0820               	movf	?__Umul8_16,w
  9166  0650  00C1               	movwf	___flmul@temp
  9167  0651  0841               	movf	___flmul@temp,w
  9168  0652  00B1               	movwf	??___flmul
  9169  0653  0842               	movf	___flmul@temp+1,w
  9170  0654  00B2               	movwf	??___flmul+1
  9171  0655  01B3               	clrf	??___flmul+2
  9172  0656  01B4               	clrf	??___flmul+3
  9173  0657  0831               	movf	??___flmul,w
  9174  0658  07BD               	addwf	___flmul@prod,f
  9175  0659  0832               	movf	??___flmul+1,w
  9176  065A  1103               	clrz
  9177  065B  1803               	skipnc
  9178  065C  3E01               	addlw	1
  9179  065D  1D03               	btfss	3,2
  9180  065E  07BE               	addwf	___flmul@prod+1,f
  9181  065F  0833               	movf	??___flmul+2,w
  9182  0660  1103               	clrz
  9183  0661  1803               	skipnc
  9184  0662  3E01               	addlw	1
  9185  0663  1D03               	btfss	3,2
  9186  0664  07BF               	addwf	___flmul@prod+2,f
  9187  0665  0834               	movf	??___flmul+3,w
  9188  0666  1103               	clrz
  9189  0667  1803               	skipnc
  9190  0668  3E01               	addlw	1
  9191  0669  1D03               	btfss	3,2
  9192  066A  07C0               	addwf	___flmul@prod+3,f
  9193  066B  082B               	movf	___flmul@b+2,w
  9194  066C  00B1               	movwf	??___flmul
  9195  066D  0831               	movf	??___flmul,w
  9196  066E  00A0               	movwf	__Umul8_16@multiplicand
  9197  066F  082E               	movf	___flmul@a+1,w
  9198  0670  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9199  0675  0821               	movf	?__Umul8_16+1,w
  9200  0676  00C2               	movwf	___flmul@temp+1
  9201  0677  0820               	movf	?__Umul8_16,w
  9202  0678  00C1               	movwf	___flmul@temp
  9203  0679  0841               	movf	___flmul@temp,w
  9204  067A  00B1               	movwf	??___flmul
  9205  067B  0842               	movf	___flmul@temp+1,w
  9206  067C  00B2               	movwf	??___flmul+1
  9207  067D  01B3               	clrf	??___flmul+2
  9208  067E  01B4               	clrf	??___flmul+3
  9209  067F  0831               	movf	??___flmul,w
  9210  0680  07BD               	addwf	___flmul@prod,f
  9211  0681  0832               	movf	??___flmul+1,w
  9212  0682  1103               	clrz
  9213  0683  1803               	skipnc
  9214  0684  3E01               	addlw	1
  9215  0685  1D03               	btfss	3,2
  9216  0686  07BE               	addwf	___flmul@prod+1,f
  9217  0687  0833               	movf	??___flmul+2,w
  9218  0688  1103               	clrz
  9219  0689  1803               	skipnc
  9220  068A  3E01               	addlw	1
  9221  068B  1D03               	btfss	3,2
  9222  068C  07BF               	addwf	___flmul@prod+2,f
  9223  068D  0834               	movf	??___flmul+3,w
  9224  068E  1103               	clrz
  9225  068F  1803               	skipnc
  9226  0690  3E01               	addlw	1
  9227  0691  1D03               	btfss	3,2
  9228  0692  07C0               	addwf	___flmul@prod+3,f
  9229  0693  082B               	movf	___flmul@b+2,w
  9230  0694  00B1               	movwf	??___flmul
  9231  0695  0831               	movf	??___flmul,w
  9232  0696  00A0               	movwf	__Umul8_16@multiplicand
  9233  0697  082F               	movf	___flmul@a+2,w
  9234  0698  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9235  069D  0821               	movf	?__Umul8_16+1,w
  9236  069E  00C2               	movwf	___flmul@temp+1
  9237  069F  0820               	movf	?__Umul8_16,w
  9238  06A0  00C1               	movwf	___flmul@temp
  9239  06A1  0841               	movf	___flmul@temp,w
  9240  06A2  00B1               	movwf	??___flmul
  9241  06A3  0842               	movf	___flmul@temp+1,w
  9242  06A4  00B2               	movwf	??___flmul+1
  9243  06A5  01B3               	clrf	??___flmul+2
  9244  06A6  01B4               	clrf	??___flmul+3
  9245  06A7  3008               	movlw	8
  9246  06A8                     u6605:	
  9247  06A8  1003               	clrc
  9248  06A9  0DB1               	rlf	??___flmul,f
  9249  06AA  0DB2               	rlf	??___flmul+1,f
  9250  06AB  0DB3               	rlf	??___flmul+2,f
  9251  06AC  0DB4               	rlf	??___flmul+3,f
  9252  06AD  3EFF               	addlw	-1
  9253  06AE  1D03               	skipz
  9254  06AF  2EA8               	goto	u6605
  9255  06B0  0831               	movf	??___flmul,w
  9256  06B1  07BD               	addwf	___flmul@prod,f
  9257  06B2  0832               	movf	??___flmul+1,w
  9258  06B3  1103               	clrz
  9259  06B4  1803               	skipnc
  9260  06B5  3E01               	addlw	1
  9261  06B6  1D03               	btfss	3,2
  9262  06B7  07BE               	addwf	___flmul@prod+1,f
  9263  06B8  0833               	movf	??___flmul+2,w
  9264  06B9  1103               	clrz
  9265  06BA  1803               	skipnc
  9266  06BB  3E01               	addlw	1
  9267  06BC  1D03               	btfss	3,2
  9268  06BD  07BF               	addwf	___flmul@prod+2,f
  9269  06BE  0834               	movf	??___flmul+3,w
  9270  06BF  1103               	clrz
  9271  06C0  1803               	skipnc
  9272  06C1  3E01               	addlw	1
  9273  06C2  1D03               	btfss	3,2
  9274  06C3  07C0               	addwf	___flmul@prod+3,f
  9275  06C4  083C               	movf	___flmul@grs+3,w
  9276  06C5  00B1               	movwf	??___flmul
  9277  06C6  01B2               	clrf	??___flmul+1
  9278  06C7  01B3               	clrf	??___flmul+2
  9279  06C8  01B4               	clrf	??___flmul+3
  9280  06C9  0831               	movf	??___flmul,w
  9281  06CA  07BD               	addwf	___flmul@prod,f
  9282  06CB  0832               	movf	??___flmul+1,w
  9283  06CC  1103               	clrz
  9284  06CD  1803               	skipnc
  9285  06CE  3E01               	addlw	1
  9286  06CF  1D03               	btfss	3,2
  9287  06D0  07BE               	addwf	___flmul@prod+1,f
  9288  06D1  0833               	movf	??___flmul+2,w
  9289  06D2  1103               	clrz
  9290  06D3  1803               	skipnc
  9291  06D4  3E01               	addlw	1
  9292  06D5  1D03               	btfss	3,2
  9293  06D6  07BF               	addwf	___flmul@prod+2,f
  9294  06D7  0834               	movf	??___flmul+3,w
  9295  06D8  1103               	clrz
  9296  06D9  1803               	skipnc
  9297  06DA  3E01               	addlw	1
  9298  06DB  1D03               	btfss	3,2
  9299  06DC  07C0               	addwf	___flmul@prod+3,f
  9300  06DD  3008               	movlw	8
  9301  06DE  00B1               	movwf	??___flmul
  9302  06DF                     u6635:	
  9303  06DF  1003               	clrc
  9304  06E0  0DB9               	rlf	___flmul@grs,f
  9305  06E1  0DBA               	rlf	___flmul@grs+1,f
  9306  06E2  0DBB               	rlf	___flmul@grs+2,f
  9307  06E3  0DBC               	rlf	___flmul@grs+3,f
  9308  06E4  0BB1               	decfsz	??___flmul,f
  9309  06E5  2EDF               	goto	u6635
  9310  06E6  0838               	movf	___flmul@bexp,w
  9311  06E7  0737               	addwf	___flmul@aexp,w
  9312  06E8  00B1               	movwf	??___flmul
  9313  06E9  01B2               	clrf	??___flmul+1
  9314  06EA  0DB2               	rlf	??___flmul+1,f
  9315  06EB  0831               	movf	??___flmul,w
  9316  06EC  3E82               	addlw	130
  9317  06ED  00C1               	movwf	___flmul@temp
  9318  06EE  0832               	movf	??___flmul+1,w
  9319  06EF  1803               	skipnc
  9320  06F0  3E01               	addlw	1
  9321  06F1  3EFF               	addlw	255
  9322  06F2  00C2               	movwf	___flmul@temp+1
  9323  06F3                     l6392:	
  9324  06F3  1BBF               	btfsc	___flmul@prod+2,7
  9325  06F4  2F10               	goto	l6394
  9326  06F5  3001               	movlw	1
  9327  06F6  00B1               	movwf	??___flmul
  9328  06F7                     u6645:	
  9329  06F7  1003               	clrc
  9330  06F8  0DBD               	rlf	___flmul@prod,f
  9331  06F9  0DBE               	rlf	___flmul@prod+1,f
  9332  06FA  0DBF               	rlf	___flmul@prod+2,f
  9333  06FB  0DC0               	rlf	___flmul@prod+3,f
  9334  06FC  0BB1               	decfsz	??___flmul,f
  9335  06FD  2EF7               	goto	u6645
  9336  06FE  1BBC               	btfsc	___flmul@grs+3,7
  9337  06FF  143D               	bsf	___flmul@prod,0
  9338  0700  3001               	movlw	1
  9339  0701  00B1               	movwf	??___flmul
  9340  0702                     u6665:	
  9341  0702  1003               	clrc
  9342  0703  0DB9               	rlf	___flmul@grs,f
  9343  0704  0DBA               	rlf	___flmul@grs+1,f
  9344  0705  0DBB               	rlf	___flmul@grs+2,f
  9345  0706  0DBC               	rlf	___flmul@grs+3,f
  9346  0707  0BB1               	decfsz	??___flmul,f
  9347  0708  2F02               	goto	u6665
  9348  0709  30FF               	movlw	255
  9349  070A  07C1               	addwf	___flmul@temp,f
  9350  070B  1803               	skipnc
  9351  070C  0AC2               	incf	___flmul@temp+1,f
  9352  070D  30FF               	movlw	255
  9353  070E  07C2               	addwf	___flmul@temp+1,f
  9354  070F  2EF3               	goto	l6392
  9355  0710                     l6394:	
  9356  0710  01B7               	clrf	___flmul@aexp
  9357  0711  1FBC               	btfss	___flmul@grs+3,7
  9358  0712  2F29               	goto	l6404
  9359  0713  30FF               	movlw	255
  9360  0714  0539               	andwf	___flmul@grs,w
  9361  0715  00B1               	movwf	??___flmul
  9362  0716  30FF               	movlw	255
  9363  0717  053A               	andwf	___flmul@grs+1,w
  9364  0718  00B2               	movwf	??___flmul+1
  9365  0719  30FF               	movlw	255
  9366  071A  053B               	andwf	___flmul@grs+2,w
  9367  071B  00B3               	movwf	??___flmul+2
  9368  071C  307F               	movlw	127
  9369  071D  053C               	andwf	___flmul@grs+3,w
  9370  071E  00B4               	movwf	??___flmul+3
  9371  071F  0834               	movf	??___flmul+3,w
  9372  0720  0433               	iorwf	??___flmul+2,w
  9373  0721  0432               	iorwf	??___flmul+1,w
  9374  0722  0431               	iorwf	??___flmul,w
  9375  0723  1903               	skipnz
  9376  0724  183D               	btfsc	___flmul@prod,0
  9377  0725  2F27               	goto	l6400
  9378  0726  2F29               	goto	l6404
  9379  0727                     l6400:	
  9380  0727  01B7               	clrf	___flmul@aexp
  9381  0728  0AB7               	incf	___flmul@aexp,f
  9382  0729                     l6404:	
  9383  0729  0837               	movf	___flmul@aexp,w
  9384  072A  1903               	btfsc	3,2
  9385  072B  2F5B               	goto	l6414
  9386  072C  3001               	movlw	1
  9387  072D  07BD               	addwf	___flmul@prod,f
  9388  072E  3000               	movlw	0
  9389  072F  1803               	skipnc
  9390  0730  3001               	movlw	1
  9391  0731  07BE               	addwf	___flmul@prod+1,f
  9392  0732  3000               	movlw	0
  9393  0733  1803               	skipnc
  9394  0734  3001               	movlw	1
  9395  0735  07BF               	addwf	___flmul@prod+2,f
  9396  0736  3000               	movlw	0
  9397  0737  1803               	skipnc
  9398  0738  3001               	movlw	1
  9399  0739  07C0               	addwf	___flmul@prod+3,f
  9400  073A  1C40               	btfss	___flmul@prod+3,0
  9401  073B  2F5B               	goto	l6414
  9402  073C  083D               	movf	___flmul@prod,w
  9403  073D  00B1               	movwf	??___flmul
  9404  073E  083E               	movf	___flmul@prod+1,w
  9405  073F  00B2               	movwf	??___flmul+1
  9406  0740  083F               	movf	___flmul@prod+2,w
  9407  0741  00B3               	movwf	??___flmul+2
  9408  0742  0840               	movf	___flmul@prod+3,w
  9409  0743  00B4               	movwf	??___flmul+3
  9410  0744  3001               	movlw	1
  9411  0745  00B5               	movwf	??___flmul+4
  9412  0746                     u6735:	
  9413  0746  0D34               	rlf	??___flmul+3,w
  9414  0747  0CB4               	rrf	??___flmul+3,f
  9415  0748  0CB3               	rrf	??___flmul+2,f
  9416  0749  0CB2               	rrf	??___flmul+1,f
  9417  074A  0CB1               	rrf	??___flmul,f
  9418  074B  0BB5               	decfsz	??___flmul+4,f
  9419  074C  2F46               	goto	u6735
  9420  074D  0834               	movf	??___flmul+3,w
  9421  074E  00C0               	movwf	___flmul@prod+3
  9422  074F  0833               	movf	??___flmul+2,w
  9423  0750  00BF               	movwf	___flmul@prod+2
  9424  0751  0832               	movf	??___flmul+1,w
  9425  0752  00BE               	movwf	___flmul@prod+1
  9426  0753  0831               	movf	??___flmul,w
  9427  0754  00BD               	movwf	___flmul@prod
  9428  0755  3001               	movlw	1
  9429  0756  07C1               	addwf	___flmul@temp,f
  9430  0757  1803               	skipnc
  9431  0758  0AC2               	incf	___flmul@temp+1,f
  9432  0759  3000               	movlw	0
  9433  075A  07C2               	addwf	___flmul@temp+1,f
  9434  075B                     l6414:	
  9435  075B  0842               	movf	___flmul@temp+1,w
  9436  075C  3A80               	xorlw	128
  9437  075D  00FF               	movwf	127
  9438  075E  3080               	movlw	128
  9439  075F  027F               	subwf	127,w
  9440  0760  1D03               	skipz
  9441  0761  2F64               	goto	u6745
  9442  0762  30FF               	movlw	255
  9443  0763  0241               	subwf	___flmul@temp,w
  9444  0764                     u6745:	
  9445  0764  1C03               	skipc
  9446  0765  2F71               	goto	l6418
  9447  0766  307F               	movlw	127
  9448  0767  1283               	bcf	3,5	;RP0=0, select bank0
  9449  0768  1303               	bcf	3,6	;RP1=0, select bank0
  9450  0769  00C0               	movwf	___flmul@prod+3
  9451  076A  3080               	movlw	128
  9452  076B  00BF               	movwf	___flmul@prod+2
  9453  076C  3000               	movlw	0
  9454  076D  00BE               	movwf	___flmul@prod+1
  9455  076E  3000               	movlw	0
  9456  076F  00BD               	movwf	___flmul@prod
  9457  0770  2FA1               	goto	l1354
  9458  0771                     l6418:	
  9459  0771  1283               	bcf	3,5	;RP0=0, select bank0
  9460  0772  1303               	bcf	3,6	;RP1=0, select bank0
  9461  0773  0842               	movf	___flmul@temp+1,w
  9462  0774  3A80               	xorlw	128
  9463  0775  00FF               	movwf	127
  9464  0776  3080               	movlw	128
  9465  0777  027F               	subwf	127,w
  9466  0778  1D03               	skipz
  9467  0779  2F7C               	goto	u6755
  9468  077A  3001               	movlw	1
  9469  077B  0241               	subwf	___flmul@temp,w
  9470  077C                     u6755:	
  9471  077C  1803               	skipnc
  9472  077D  2F8A               	goto	l6424
  9473  077E  3000               	movlw	0
  9474  077F  1283               	bcf	3,5	;RP0=0, select bank0
  9475  0780  1303               	bcf	3,6	;RP1=0, select bank0
  9476  0781  00C0               	movwf	___flmul@prod+3
  9477  0782  3000               	movlw	0
  9478  0783  00BF               	movwf	___flmul@prod+2
  9479  0784  3000               	movlw	0
  9480  0785  00BE               	movwf	___flmul@prod+1
  9481  0786  3000               	movlw	0
  9482  0787  00BD               	movwf	___flmul@prod
  9483  0788  01B6               	clrf	___flmul@sign
  9484  0789  2FA1               	goto	l1354
  9485  078A                     l6424:	
  9486  078A  1283               	bcf	3,5	;RP0=0, select bank0
  9487  078B  1303               	bcf	3,6	;RP1=0, select bank0
  9488  078C  0841               	movf	___flmul@temp,w
  9489  078D  00B1               	movwf	??___flmul
  9490  078E  0831               	movf	??___flmul,w
  9491  078F  00B8               	movwf	___flmul@bexp
  9492  0790  30FF               	movlw	255
  9493  0791  05BD               	andwf	___flmul@prod,f
  9494  0792  30FF               	movlw	255
  9495  0793  05BE               	andwf	___flmul@prod+1,f
  9496  0794  307F               	movlw	127
  9497  0795  05BF               	andwf	___flmul@prod+2,f
  9498  0796  3000               	movlw	0
  9499  0797  05C0               	andwf	___flmul@prod+3,f
  9500  0798  1838               	btfsc	___flmul@bexp,0
  9501  0799  17BF               	bsf	___flmul@prod+2,7
  9502  079A  0838               	movf	___flmul@bexp,w
  9503  079B  00B1               	movwf	??___flmul
  9504  079C  1003               	clrc
  9505  079D  0C31               	rrf	??___flmul,w
  9506  079E  00B2               	movwf	??___flmul+1
  9507  079F  0832               	movf	??___flmul+1,w
  9508  07A0  00C0               	movwf	___flmul@prod+3
  9509  07A1                     l1354:	
  9510  07A1  0836               	movf	___flmul@sign,w
  9511  07A2  00B1               	movwf	??___flmul
  9512  07A3  0831               	movf	??___flmul,w
  9513  07A4  04C0               	iorwf	___flmul@prod+3,f
  9514  07A5  0840               	movf	___flmul@prod+3,w
  9515  07A6  00AC               	movwf	?___flmul+3
  9516  07A7  083F               	movf	___flmul@prod+2,w
  9517  07A8  00AB               	movwf	?___flmul+2
  9518  07A9  083E               	movf	___flmul@prod+1,w
  9519  07AA  00AA               	movwf	?___flmul+1
  9520  07AB  083D               	movf	___flmul@prod,w
  9521  07AC  00A9               	movwf	?___flmul
  9522  07AD  0008               	return
  9523  07AE                     __end_of___flmul:	
  9524                           
  9525                           	psect	text30
  9526  1B0D                     __ptext30:	
  9527 ;; *************** function __Umul8_16 *****************
  9528 ;; Defined at:
  9529 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  multiplier      1    wreg     unsigned char 
  9532 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9535 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9536 ;;  product         2    4[BANK0 ] unsigned int 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  2    0[BANK0 ] unsigned int 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0
  9541 ;; Tracked objects:
  9542 ;;		On entry : 300/0
  9543 ;;		On exit  : 300/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9546 ;;      Params:         0       2       0       0       0
  9547 ;;      Locals:         0       5       0       0       0
  9548 ;;      Temps:          0       2       0       0       0
  9549 ;;      Totals:         0       9       0       0       0
  9550 ;;Total ram usage:        9 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    1
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		___flmul
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           
  9561                           ;psect for function __Umul8_16
  9562  1B0D                     __Umul8_16:	
  9563                           
  9564                           ;incstack = 0
  9565                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9566                           ;__Umul8_16@multiplier stored from wreg
  9567  1B0D  00A8               	movwf	__Umul8_16@multiplier
  9568  1B0E  01A4               	clrf	__Umul8_16@product
  9569  1B0F  01A5               	clrf	__Umul8_16@product+1
  9570  1B10  0820               	movf	__Umul8_16@multiplicand,w
  9571  1B11  00A2               	movwf	??__Umul8_16
  9572  1B12  01A3               	clrf	??__Umul8_16+1
  9573  1B13  0822               	movf	??__Umul8_16,w
  9574  1B14  00A6               	movwf	__Umul8_16@word_mpld
  9575  1B15  0823               	movf	??__Umul8_16+1,w
  9576  1B16  00A7               	movwf	__Umul8_16@word_mpld+1
  9577  1B17                     l5856:	
  9578  1B17  1C28               	btfss	__Umul8_16@multiplier,0
  9579  1B18  2B1F               	goto	l1450
  9580  1B19  0826               	movf	__Umul8_16@word_mpld,w
  9581  1B1A  07A4               	addwf	__Umul8_16@product,f
  9582  1B1B  1803               	skipnc
  9583  1B1C  0AA5               	incf	__Umul8_16@product+1,f
  9584  1B1D  0827               	movf	__Umul8_16@word_mpld+1,w
  9585  1B1E  07A5               	addwf	__Umul8_16@product+1,f
  9586  1B1F                     l1450:	
  9587  1B1F  3001               	movlw	1
  9588  1B20                     u5675:	
  9589  1B20  1003               	clrc
  9590  1B21  0DA6               	rlf	__Umul8_16@word_mpld,f
  9591  1B22  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9592  1B23  3EFF               	addlw	-1
  9593  1B24  1D03               	skipz
  9594  1B25  2B20               	goto	u5675
  9595  1B26  1003               	clrc
  9596  1B27  0CA8               	rrf	__Umul8_16@multiplier,f
  9597  1B28  0828               	movf	__Umul8_16@multiplier,w
  9598  1B29  1D03               	btfss	3,2
  9599  1B2A  2B17               	goto	l5856
  9600  1B2B  0825               	movf	__Umul8_16@product+1,w
  9601  1B2C  00A1               	movwf	?__Umul8_16+1
  9602  1B2D  0824               	movf	__Umul8_16@product,w
  9603  1B2E  00A0               	movwf	?__Umul8_16
  9604  1B2F  0008               	return
  9605  1B30                     __end_of__Umul8_16:	
  9606                           
  9607                           	psect	text31
  9608  1A89                     __ptext31:	
  9609 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  9610 ;; Defined at:
  9611 ;;		line 272 in file "EEPROM_24C1025.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  chip_add        1    wreg     unsigned char 
  9614 ;;  mem_add         4   46[BANK0 ] unsigned long 
  9615 ;;  data            2   50[BANK0 ] int 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  chip_add        1   53[BANK0 ] unsigned char 
  9618 ;;  local           2   54[BANK0 ] unsigned char [2]
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/300
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9628 ;;      Params:         0       6       0       0       0
  9629 ;;      Locals:         0       3       0       0       0
  9630 ;;      Temps:          0       1       0       0       0
  9631 ;;      Totals:         0      10       0       0       0
  9632 ;;Total ram usage:       10 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:    4
  9635 ;; This function calls:
  9636 ;;		_EEPROM_24C1025_Write_Buffer
  9637 ;; This function is called by:
  9638 ;;		_Decodify_Command
  9639 ;;		_Save_Log
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           
  9644                           ;psect for function _EEPROM_24C1025_Write_Int
  9645  1A89                     _EEPROM_24C1025_Write_Int:	
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9649                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  9650  1A89  1283               	bcf	3,5	;RP0=0, select bank0
  9651  1A8A  1303               	bcf	3,6	;RP1=0, select bank0
  9652  1A8B  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
  9653                           
  9654                           ;EEPROM_24C1025.c: 273:      char local[2];;EEPROM_24C1025.c: 274:      local[0]=((char 
      +                          *)&data)[1];
  9655  1A8C  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
  9656  1A8D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9657  1A8E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9658  1A8F  00D6               	movwf	EEPROM_24C1025_Write_Int@local
  9659                           
  9660                           ;EEPROM_24C1025.c: 275:      local[1]=((char *)&data)[0];
  9661  1A90  0852               	movf	EEPROM_24C1025_Write_Int@data,w
  9662  1A91  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9663  1A92  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9664  1A93  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
  9665                           
  9666                           ;EEPROM_24C1025.c: 276:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  9667  1A94  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
  9668  1A95  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9669  1A96  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
  9670  1A97  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9671  1A98  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
  9672  1A99  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9673  1A9A  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
  9674  1A9B  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9675  1A9C  3002               	movlw	2
  9676  1A9D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9677  1A9E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9678  1A9F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  9679  1AA0  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  9680  1AA1  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  9681  1AA2  3000               	movlw	0
  9682  1AA3  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9683  1AA4  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
  9684  1AA5  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
  9685  1AA8  0008               	return
  9686  1AA9                     __end_of_EEPROM_24C1025_Write_Int:	
  9687                           
  9688                           	psect	text32
  9689  19B0                     __ptext32:	
  9690 ;; *************** function _PROCULUS_VP_Write_String *****************
  9691 ;; Defined at:
  9692 ;;		line 205 in file "proculus.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  vp              2   58[BANK0 ] unsigned int 
  9695 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9696 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;		None
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  1    wreg      void 
  9701 ;; Registers used:
  9702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9703 ;; Tracked objects:
  9704 ;;		On entry : 300/0
  9705 ;;		On exit  : 300/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9708 ;;      Params:         0       3       0       0       0
  9709 ;;      Locals:         0       0       0       0       0
  9710 ;;      Temps:          0       1       0       0       0
  9711 ;;      Totals:         0       4       0       0       0
  9712 ;;Total ram usage:        4 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; Hardware stack levels required when called:    4
  9715 ;; This function calls:
  9716 ;;		_PROCULUS_VP_Write
  9717 ;;		_strlen
  9718 ;; This function is called by:
  9719 ;;		_Decodify_Command
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           
  9724                           ;psect for function _PROCULUS_VP_Write_String
  9725  19B0                     _PROCULUS_VP_Write_String:	
  9726                           
  9727                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9728                           
  9729                           ;incstack = 0
  9730                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9731  19B0  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9732  19B1  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9733  19B2  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9734  19B3  00D2               	movwf	PROCULUS_VP_Write@vp
  9735  19B4  085C               	movf	PROCULUS_VP_Write_String@text,w
  9736  19B5  00D4               	movwf	PROCULUS_VP_Write@vetor
  9737  19B6  3001               	movlw	1
  9738  19B7  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9739  19B8  085C               	movf	PROCULUS_VP_Write_String@text,w
  9740  19B9  160A  158A  21F7  160A  158A  	fcall	_strlen
  9741  19BE  0820               	movf	?_strlen,w
  9742  19BF  3E01               	addlw	1
  9743  19C0  00DD               	movwf	??_PROCULUS_VP_Write_String
  9744  19C1  085D               	movf	??_PROCULUS_VP_Write_String,w
  9745  19C2  00D6               	movwf	PROCULUS_VP_Write@size
  9746  19C3  120A  118A  27AE   	fcall	_PROCULUS_VP_Write
  9747  19C6  0008               	return
  9748  19C7                     __end_of_PROCULUS_VP_Write_String:	
  9749                           
  9750                           	psect	text33
  9751  19F7                     __ptext33:	
  9752 ;; *************** function _strlen *****************
  9753 ;; Defined at:
  9754 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  s               1    wreg     PTR const unsigned char 
  9757 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9760 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9761 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9762 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  2    0[BANK0 ] unsigned int 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/300
  9769 ;;		On exit  : B00/800
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9772 ;;      Params:         0       2       0       0       0
  9773 ;;      Locals:         0       2       0       0       0
  9774 ;;      Temps:          0       1       0       0       0
  9775 ;;      Totals:         0       5       0       0       0
  9776 ;;Total ram usage:        5 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    1
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		_Decodify_Command
  9783 ;;		_PROCULUS_VP_Write_String
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function _strlen
  9789  19F7                     _strlen:	
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9793                           ;strlen@s stored from wreg
  9794  19F7  1283               	bcf	3,5	;RP0=0, select bank0
  9795  19F8  1303               	bcf	3,6	;RP1=0, select bank0
  9796  19F9  00A4               	movwf	strlen@s
  9797  19FA  0824               	movf	strlen@s,w
  9798  19FB  00A2               	movwf	??_strlen
  9799  19FC  0822               	movf	??_strlen,w
  9800  19FD  00A3               	movwf	strlen@cp
  9801  19FE                     l6016:	
  9802  19FE  0823               	movf	strlen@cp,w
  9803  19FF  0084               	movwf	4
  9804  1A00  1783               	bsf	3,7	;select IRP bank2
  9805  1A01  0800               	movf	0,w
  9806  1A02  1903               	btfsc	3,2
  9807  1A03  2A09               	goto	l6018
  9808  1A04  3001               	movlw	1
  9809  1A05  00A2               	movwf	??_strlen
  9810  1A06  0822               	movf	??_strlen,w
  9811  1A07  07A3               	addwf	strlen@cp,f
  9812  1A08  29FE               	goto	l6016
  9813  1A09                     l6018:	
  9814  1A09  0824               	movf	strlen@s,w
  9815  1A0A  0223               	subwf	strlen@cp,w
  9816  1A0B  00A0               	movwf	?_strlen
  9817  1A0C  01A1               	clrf	?_strlen+1
  9818  1A0D  1BA0               	btfsc	?_strlen,7
  9819  1A0E  03A1               	decf	?_strlen+1,f
  9820  1A0F  0008               	return
  9821  1A10                     __end_of_strlen:	
  9822                           
  9823                           	psect	text34
  9824  07AE                     __ptext34:	
  9825 ;; *************** function _PROCULUS_VP_Write *****************
  9826 ;; Defined at:
  9827 ;;		line 40 in file "proculus.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  vp              2   50[BANK0 ] unsigned int 
  9830 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9831 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9832 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9833 ;;  size            1   54[BANK0 ] unsigned char 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  i               1   57[BANK0 ] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : B00/800
  9842 ;;		On exit  : 300/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9845 ;;      Params:         0       5       0       0       0
  9846 ;;      Locals:         0       1       0       0       0
  9847 ;;      Temps:          0       2       0       0       0
  9848 ;;      Totals:         0       8       0       0       0
  9849 ;;Total ram usage:        8 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    3
  9852 ;; This function calls:
  9853 ;;		_PROCULUS_Delay
  9854 ;;		_USART_put_int
  9855 ;;		_USART_putc
  9856 ;; This function is called by:
  9857 ;;		_PROCULUS_VP_Write_String
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           
  9862                           ;psect for function _PROCULUS_VP_Write
  9863  07AE                     _PROCULUS_VP_Write:	
  9864                           
  9865                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9866                           
  9867                           ;incstack = 0
  9868                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9869  07AE  30A5               	movlw	165
  9870  07AF  00CE               	movwf	USART_put_int@value
  9871  07B0  305A               	movlw	90
  9872  07B1  00CF               	movwf	USART_put_int@value+1
  9873  07B2  160A  158A  219A  120A  118A  	fcall	_USART_put_int
  9874                           
  9875                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9876  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  9877  07B8  0856               	movf	PROCULUS_VP_Write@size,w
  9878  07B9  3E03               	addlw	3
  9879  07BA  160A  118A  2000  120A  118A  	fcall	_USART_putc
  9880                           
  9881                           ;proculus.c: 43:      USART_putc(0x82);
  9882  07BF  3082               	movlw	130
  9883  07C0  160A  118A  2000  120A  118A  	fcall	_USART_putc
  9884                           
  9885                           ;proculus.c: 44:      USART_put_int(vp);
  9886  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  9887  07C6  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9888  07C7  00CF               	movwf	USART_put_int@value+1
  9889  07C8  0852               	movf	PROCULUS_VP_Write@vp,w
  9890  07C9  00CE               	movwf	USART_put_int@value
  9891  07CA  160A  158A  219A  120A  118A  	fcall	_USART_put_int
  9892                           
  9893                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9894  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  9895  07D0  01D9               	clrf	PROCULUS_VP_Write@i
  9896  07D1                     l6062:	
  9897  07D1  0856               	movf	PROCULUS_VP_Write@size,w
  9898  07D2  0259               	subwf	PROCULUS_VP_Write@i,w
  9899  07D3  1803               	btfsc	3,0
  9900  07D4  2FED               	goto	l6064
  9901                           
  9902                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9903  07D5  0859               	movf	PROCULUS_VP_Write@i,w
  9904  07D6  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9905  07D7  00D7               	movwf	??_PROCULUS_VP_Write
  9906  07D8  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9907  07D9  1803               	skipnc
  9908  07DA  3E01               	addlw	1
  9909  07DB  00D8               	movwf	??_PROCULUS_VP_Write+1
  9910  07DC  0857               	movf	??_PROCULUS_VP_Write,w
  9911  07DD  0084               	movwf	4
  9912  07DE  1783               	bsf	3,7
  9913  07DF  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9914  07E0  1383               	bcf	3,7
  9915  07E1  0800               	movf	0,w
  9916  07E2  160A  118A  2000  120A  118A  	fcall	_USART_putc
  9917  07E7  3001               	movlw	1
  9918  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  9919  07E9  00D7               	movwf	??_PROCULUS_VP_Write
  9920  07EA  0857               	movf	??_PROCULUS_VP_Write,w
  9921  07EB  07D9               	addwf	PROCULUS_VP_Write@i,f
  9922  07EC  2FD1               	goto	l6062
  9923  07ED                     l6064:	
  9924                           
  9925                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9926  07ED  3001               	movlw	1
  9927  07EE  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9928  07EF  3000               	movlw	0
  9929  07F0  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9930  07F1  160A  158A  2210   	fcall	_PROCULUS_Delay
  9931  07F4  0008               	return
  9932  07F5                     __end_of_PROCULUS_VP_Write:	
  9933                           
  9934                           	psect	text35
  9935  196F                     __ptext35:	
  9936 ;; *************** function _PROCULUS_Show_Screen *****************
  9937 ;; Defined at:
  9938 ;;		line 243 in file "proculus.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  screen          2   54[BANK0 ] unsigned int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 300/0
  9949 ;;		On exit  : 300/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9952 ;;      Params:         0       2       0       0       0
  9953 ;;      Locals:         0       3       0       0       0
  9954 ;;      Temps:          0       1       0       0       0
  9955 ;;      Totals:         0       6       0       0       0
  9956 ;;Total ram usage:        6 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    4
  9959 ;; This function calls:
  9960 ;;		_PROCULUS_Control_Register_Write
  9961 ;; This function is called by:
  9962 ;;		_Decodify_Command
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           
  9967                           ;psect for function _PROCULUS_Show_Screen
  9968  196F                     _PROCULUS_Show_Screen:	
  9969                           
  9970                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9971                           
  9972                           ;incstack = 0
  9973                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9974  196F  3003               	movlw	3
  9975  1970  00D8               	movwf	??_PROCULUS_Show_Screen
  9976  1971  0858               	movf	??_PROCULUS_Show_Screen,w
  9977  1972  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9978                           
  9979                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9980  1973  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9981  1974  00D8               	movwf	??_PROCULUS_Show_Screen
  9982  1975  0858               	movf	??_PROCULUS_Show_Screen,w
  9983  1976  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9984                           
  9985                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9986  1977  0856               	movf	PROCULUS_Show_Screen@screen,w
  9987  1978  00D8               	movwf	??_PROCULUS_Show_Screen
  9988  1979  0858               	movf	??_PROCULUS_Show_Screen,w
  9989  197A  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9990                           
  9991                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9992  197B  3003               	movlw	3
  9993  197C  00D8               	movwf	??_PROCULUS_Show_Screen
  9994  197D  0858               	movf	??_PROCULUS_Show_Screen,w
  9995  197E  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9996  197F  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9997  1980  160A  158A  2529   	fcall	_PROCULUS_Control_Register_Write
  9998  1983  0008               	return
  9999  1984                     __end_of_PROCULUS_Show_Screen:	
 10000                           
 10001                           	psect	text36
 10002  1AEB                     __ptext36:	
 10003 ;; *************** function _PROCULUS_Buzzer *****************
 10004 ;; Defined at:
 10005 ;;		line 223 in file "proculus.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  vetor           2   57[BANK0 ] unsigned char [2]
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 300/0
 10016 ;;		On exit  : 300/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10019 ;;      Params:         0       2       0       0       0
 10020 ;;      Locals:         0       2       0       0       0
 10021 ;;      Temps:          0       1       0       0       0
 10022 ;;      Totals:         0       5       0       0       0
 10023 ;;Total ram usage:        5 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    4
 10026 ;; This function calls:
 10027 ;;		_PROCULUS_Control_Register_Write
 10028 ;;		___lwdiv
 10029 ;; This function is called by:
 10030 ;;		_Decodify_Command
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _PROCULUS_Buzzer
 10036  1AEB                     _PROCULUS_Buzzer:	
 10037                           
 10038                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10042  1AEB  300A               	movlw	10
 10043  1AEC  00A0               	movwf	___lwdiv@divisor
 10044  1AED  3000               	movlw	0
 10045  1AEE  00A1               	movwf	___lwdiv@divisor+1
 10046  1AEF  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
 10047  1AF0  00A3               	movwf	___lwdiv@dividend+1
 10048  1AF1  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10049  1AF2  00A2               	movwf	___lwdiv@dividend
 10050  1AF3  160A  158A  25D5  160A  158A  	fcall	___lwdiv
 10051  1AF8  0821               	movf	?___lwdiv+1,w
 10052  1AF9  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
 10053  1AFA  0820               	movf	?___lwdiv,w
 10054  1AFB  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
 10055                           
 10056                           ;proculus.c: 226:      vetor[0]=0x02;
 10057  1AFC  3002               	movlw	2
 10058  1AFD  00D8               	movwf	??_PROCULUS_Buzzer
 10059  1AFE  0858               	movf	??_PROCULUS_Buzzer,w
 10060  1AFF  00D9               	movwf	PROCULUS_Buzzer@vetor
 10061                           
 10062                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10063  1B00  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10064  1B01  00D8               	movwf	??_PROCULUS_Buzzer
 10065  1B02  0858               	movf	??_PROCULUS_Buzzer,w
 10066  1B03  00DA               	movwf	PROCULUS_Buzzer@vetor+1
 10067                           
 10068                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10069  1B04  3002               	movlw	2
 10070  1B05  00D8               	movwf	??_PROCULUS_Buzzer
 10071  1B06  0858               	movf	??_PROCULUS_Buzzer,w
 10072  1B07  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10073  1B08  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10074  1B09  160A  158A  2529   	fcall	_PROCULUS_Control_Register_Write
 10075  1B0C  0008               	return
 10076  1B0D                     __end_of_PROCULUS_Buzzer:	
 10077                           
 10078                           	psect	text37
 10079  1DD5                     __ptext37:	
 10080 ;; *************** function ___lwdiv *****************
 10081 ;; Defined at:
 10082 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  divisor         2    0[BANK0 ] unsigned int 
 10085 ;;  dividend        2    2[BANK0 ] unsigned int 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  quotient        2    6[BANK0 ] unsigned int 
 10088 ;;  counter         1    5[BANK0 ] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  2    0[BANK0 ] unsigned int 
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, status,0
 10093 ;; Tracked objects:
 10094 ;;		On entry : 300/0
 10095 ;;		On exit  : 300/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10098 ;;      Params:         0       4       0       0       0
 10099 ;;      Locals:         0       3       0       0       0
 10100 ;;      Temps:          0       1       0       0       0
 10101 ;;      Totals:         0       8       0       0       0
 10102 ;;Total ram usage:        8 bytes
 10103 ;; Hardware stack levels used:    1
 10104 ;; Hardware stack levels required when called:    1
 10105 ;; This function calls:
 10106 ;;		Nothing
 10107 ;; This function is called by:
 10108 ;;		_ADC_Media_10bits
 10109 ;;		_PROCULUS_Buzzer
 10110 ;;		_utoa
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           
 10115                           ;psect for function ___lwdiv
 10116  1DD5                     ___lwdiv:	
 10117                           
 10118                           ;incstack = 0
 10119                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10120  1DD5  01A6               	clrf	___lwdiv@quotient
 10121  1DD6  01A7               	clrf	___lwdiv@quotient+1
 10122  1DD7  0820               	movf	___lwdiv@divisor,w
 10123  1DD8  0421               	iorwf	___lwdiv@divisor+1,w
 10124  1DD9  1903               	btfsc	3,2
 10125  1DDA  2E0C               	goto	l5826
 10126  1DDB  01A5               	clrf	___lwdiv@counter
 10127  1DDC  0AA5               	incf	___lwdiv@counter,f
 10128  1DDD                     l5814:	
 10129  1DDD  1BA1               	btfsc	___lwdiv@divisor+1,7
 10130  1DDE  2DEB               	goto	l5816
 10131  1DDF  3001               	movlw	1
 10132  1DE0                     u5545:	
 10133  1DE0  1003               	clrc
 10134  1DE1  0DA0               	rlf	___lwdiv@divisor,f
 10135  1DE2  0DA1               	rlf	___lwdiv@divisor+1,f
 10136  1DE3  3EFF               	addlw	-1
 10137  1DE4  1D03               	skipz
 10138  1DE5  2DE0               	goto	u5545
 10139  1DE6  3001               	movlw	1
 10140  1DE7  00A4               	movwf	??___lwdiv
 10141  1DE8  0824               	movf	??___lwdiv,w
 10142  1DE9  07A5               	addwf	___lwdiv@counter,f
 10143  1DEA  2DDD               	goto	l5814
 10144  1DEB                     l5816:	
 10145  1DEB  3001               	movlw	1
 10146  1DEC                     u5565:	
 10147  1DEC  1003               	clrc
 10148  1DED  0DA6               	rlf	___lwdiv@quotient,f
 10149  1DEE  0DA7               	rlf	___lwdiv@quotient+1,f
 10150  1DEF  3EFF               	addlw	-1
 10151  1DF0  1D03               	skipz
 10152  1DF1  2DEC               	goto	u5565
 10153  1DF2  0821               	movf	___lwdiv@divisor+1,w
 10154  1DF3  0223               	subwf	___lwdiv@dividend+1,w
 10155  1DF4  1D03               	skipz
 10156  1DF5  2DF8               	goto	u5575
 10157  1DF6  0820               	movf	___lwdiv@divisor,w
 10158  1DF7  0222               	subwf	___lwdiv@dividend,w
 10159  1DF8                     u5575:	
 10160  1DF8  1C03               	skipc
 10161  1DF9  2E01               	goto	l5822
 10162  1DFA  0820               	movf	___lwdiv@divisor,w
 10163  1DFB  02A2               	subwf	___lwdiv@dividend,f
 10164  1DFC  0821               	movf	___lwdiv@divisor+1,w
 10165  1DFD  1C03               	skipc
 10166  1DFE  03A3               	decf	___lwdiv@dividend+1,f
 10167  1DFF  02A3               	subwf	___lwdiv@dividend+1,f
 10168  1E00  1426               	bsf	___lwdiv@quotient,0
 10169  1E01                     l5822:	
 10170  1E01  3001               	movlw	1
 10171  1E02                     u5585:	
 10172  1E02  1003               	clrc
 10173  1E03  0CA1               	rrf	___lwdiv@divisor+1,f
 10174  1E04  0CA0               	rrf	___lwdiv@divisor,f
 10175  1E05  3EFF               	addlw	-1
 10176  1E06  1D03               	skipz
 10177  1E07  2E02               	goto	u5585
 10178  1E08  3001               	movlw	1
 10179  1E09  02A5               	subwf	___lwdiv@counter,f
 10180  1E0A  1D03               	btfss	3,2
 10181  1E0B  2DEB               	goto	l5816
 10182  1E0C                     l5826:	
 10183  1E0C  0827               	movf	___lwdiv@quotient+1,w
 10184  1E0D  00A1               	movwf	?___lwdiv+1
 10185  1E0E  0826               	movf	___lwdiv@quotient,w
 10186  1E0F  00A0               	movwf	?___lwdiv
 10187  1E10  0008               	return
 10188  1E11                     __end_of___lwdiv:	
 10189                           
 10190                           	psect	text38
 10191  1D29                     __ptext38:	
 10192 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10193 ;; Defined at:
 10194 ;;		line 13 in file "proculus.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  vetor           1    wreg     PTR unsigned char 
 10197 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10198 ;;  size            1   50[BANK0 ] unsigned char 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10201 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10202 ;;  i               1   53[BANK0 ] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 300/0
 10209 ;;		On exit  : 300/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10212 ;;      Params:         0       1       0       0       0
 10213 ;;      Locals:         0       2       0       0       0
 10214 ;;      Temps:          0       1       0       0       0
 10215 ;;      Totals:         0       4       0       0       0
 10216 ;;Total ram usage:        4 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    3
 10219 ;; This function calls:
 10220 ;;		_PROCULUS_Delay
 10221 ;;		_USART_put_int
 10222 ;;		_USART_putc
 10223 ;; This function is called by:
 10224 ;;		_PROCULUS_Buzzer
 10225 ;;		_PROCULUS_Show_Screen
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           
 10230                           ;psect for function _PROCULUS_Control_Register_Write
 10231  1D29                     _PROCULUS_Control_Register_Write:	
 10232                           
 10233                           ;incstack = 0
 10234                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10235                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10236  1D29  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10237                           
 10238                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10239  1D2A  30A5               	movlw	165
 10240  1D2B  00CE               	movwf	USART_put_int@value
 10241  1D2C  305A               	movlw	90
 10242  1D2D  00CF               	movwf	USART_put_int@value+1
 10243  1D2E  160A  158A  219A  160A  158A  	fcall	_USART_put_int
 10244                           
 10245                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10246  1D33  1283               	bcf	3,5	;RP0=0, select bank0
 10247  1D34  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10248  1D35  3E01               	addlw	1
 10249  1D36  160A  118A  2000  160A  158A  	fcall	_USART_putc
 10250                           
 10251                           ;proculus.c: 16:      USART_putc(0x80);
 10252  1D3B  3080               	movlw	128
 10253  1D3C  160A  118A  2000  160A  158A  	fcall	_USART_putc
 10254                           
 10255                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10256  1D41  1283               	bcf	3,5	;RP0=0, select bank0
 10257  1D42  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10258  1D43                     l6046:	
 10259  1D43  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10260  1D44  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10261  1D45  1803               	btfsc	3,0
 10262  1D46  2D59               	goto	l6048
 10263                           
 10264                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10265  1D47  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10266  1D48  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10267  1D49  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10268  1D4A  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10269  1D4B  0084               	movwf	4
 10270  1D4C  1383               	bcf	3,7	;select IRP bank0
 10271  1D4D  0800               	movf	0,w
 10272  1D4E  160A  118A  2000  160A  158A  	fcall	_USART_putc
 10273  1D53  3001               	movlw	1
 10274  1D54  1283               	bcf	3,5	;RP0=0, select bank0
 10275  1D55  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10276  1D56  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10277  1D57  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10278  1D58  2D43               	goto	l6046
 10279  1D59                     l6048:	
 10280                           
 10281                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10282  1D59  3001               	movlw	1
 10283  1D5A  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10284  1D5B  3000               	movlw	0
 10285  1D5C  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10286  1D5D  160A  158A  2210   	fcall	_PROCULUS_Delay
 10287  1D60  0008               	return
 10288  1D61                     __end_of_PROCULUS_Control_Register_Write:	
 10289                           
 10290                           	psect	text39
 10291  199A                     __ptext39:	
 10292 ;; *************** function _USART_put_int *****************
 10293 ;; Defined at:
 10294 ;;		line 138 in file "usart.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  value           2   46[BANK0 ] int 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10299 ;;		 -> USART_put_int@value(2), 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 300/0
 10306 ;;		On exit  : 300/100
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10309 ;;      Params:         0       2       0       0       0
 10310 ;;      Locals:         0       1       0       0       0
 10311 ;;      Temps:          0       1       0       0       0
 10312 ;;      Totals:         0       4       0       0       0
 10313 ;;Total ram usage:        4 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:    2
 10316 ;; This function calls:
 10317 ;;		_USART_putc
 10318 ;; This function is called by:
 10319 ;;		_Decodify_Command
 10320 ;;		_PROCULUS_Control_Register_Write
 10321 ;;		_PROCULUS_VP_Write
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           
 10326                           ;psect for function _USART_put_int
 10327  199A                     _USART_put_int:	
 10328                           
 10329                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10330                           
 10331                           ;incstack = 0
 10332                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10333  199A  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10334  199B  00D0               	movwf	??_USART_put_int
 10335  199C  0850               	movf	??_USART_put_int,w
 10336  199D  00D1               	movwf	USART_put_int@dado
 10337                           
 10338                           ;usart.c: 141:      USART_putc(*(dado+1));
 10339  199E  0A51               	incf	USART_put_int@dado,w
 10340  199F  0084               	movwf	4
 10341  19A0  1383               	bcf	3,7	;select IRP bank0
 10342  19A1  0800               	movf	0,w
 10343  19A2  160A  118A  2000  160A  158A  	fcall	_USART_putc
 10344                           
 10345                           ;usart.c: 142:      USART_putc(*dado);
 10346  19A7  1283               	bcf	3,5	;RP0=0, select bank0
 10347  19A8  0851               	movf	USART_put_int@dado,w
 10348  19A9  0084               	movwf	4
 10349  19AA  1383               	bcf	3,7	;select IRP bank0
 10350  19AB  0800               	movf	0,w
 10351  19AC  160A  118A  2000   	fcall	_USART_putc
 10352  19AF  0008               	return
 10353  19B0                     __end_of_USART_put_int:	
 10354                           
 10355                           	psect	text40
 10356  1000                     __ptext40:	
 10357 ;; *************** function _USART_putc *****************
 10358 ;; Defined at:
 10359 ;;		line 89 in file "usart.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  value           1    wreg     unsigned char 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  value           1    0[BANK0 ] unsigned char 
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		wreg
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/100
 10370 ;;		On exit  : 300/100
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10373 ;;      Params:         0       0       0       0       0
 10374 ;;      Locals:         0       1       0       0       0
 10375 ;;      Temps:          0       0       0       0       0
 10376 ;;      Totals:         0       1       0       0       0
 10377 ;;Total ram usage:        1 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:    1
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_Decodify_Command
 10384 ;;		_Send_To_MB
 10385 ;;		_PROCULUS_Control_Register_Write
 10386 ;;		_PROCULUS_VP_Write
 10387 ;;		_USART_put_buffer
 10388 ;;		_USART_put_int
 10389 ;;		_USART_put_string
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           
 10394                           ;psect for function _USART_putc
 10395  1000                     _USART_putc:	
 10396                           
 10397                           ;incstack = 0
 10398                           ; Regs used in _USART_putc: [wreg]
 10399                           ;USART_putc@value stored from wreg
 10400  1000  1283               	bcf	3,5	;RP0=0, select bank0
 10401  1001  1303               	bcf	3,6	;RP1=0, select bank0
 10402  1002  00A0               	movwf	USART_putc@value
 10403                           
 10404                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10405  1003  3014               	movlw	20
 10406  1004  1683               	bsf	3,5	;RP0=1, select bank1
 10407  1005  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10408  1006  3000               	movlw	0
 10409  1007  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10410  1008                     l741:	
 10411                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10412                           
 10413  1008  1C98               	btfss	24,1	;volatile
 10414  1009  2808               	goto	l741
 10415                           
 10416                           ;usart.c: 93:     TXREG=value;
 10417  100A  1283               	bcf	3,5	;RP0=0, select bank0
 10418  100B  0820               	movf	USART_putc@value,w
 10419  100C  0099               	movwf	25	;volatile
 10420                           
 10421                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10422  100D  1683               	bsf	3,5	;RP0=1, select bank1
 10423  100E  1698               	bsf	24,5	;volatile
 10424  100F  0008               	return
 10425  1010                     __end_of_USART_putc:	
 10426                           
 10427                           	psect	text41
 10428  1A10                     __ptext41:	
 10429 ;; *************** function _PROCULUS_Delay *****************
 10430 ;; Defined at:
 10431 ;;		line 267 in file "proculus.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  i               2    4[BANK0 ] unsigned int 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2
 10440 ;; Tracked objects:
 10441 ;;		On entry : 300/800
 10442 ;;		On exit  : 300/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10445 ;;      Params:         0       2       0       0       0
 10446 ;;      Locals:         0       2       0       0       0
 10447 ;;      Temps:          0       2       0       0       0
 10448 ;;      Totals:         0       6       0       0       0
 10449 ;;Total ram usage:        6 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_PROCULUS_Control_Register_Write
 10456 ;;		_PROCULUS_VP_Write
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _PROCULUS_Delay
 10462  1A10                     _PROCULUS_Delay:	
 10463                           
 10464                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10465                           
 10466                           ;incstack = 0
 10467                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10468  1A10  01A4               	clrf	PROCULUS_Delay@i
 10469  1A11  01A5               	clrf	PROCULUS_Delay@i+1
 10470  1A12                     l661:	
 10471  1A12  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10472  1A13  0225               	subwf	PROCULUS_Delay@i+1,w
 10473  1A14  1D03               	skipz
 10474  1A15  2A18               	goto	u5525
 10475  1A16  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10476  1A17  0224               	subwf	PROCULUS_Delay@i,w
 10477  1A18                     u5525:	
 10478  1A18  1803               	btfsc	3,0
 10479  1A19  0008               	return
 10480                           
 10481                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10482  1A1A  3003               	movlw	3
 10483  1A1B  1283               	bcf	3,5	;RP0=0, select bank0
 10484  1A1C  1303               	bcf	3,6	;RP1=0, select bank0
 10485  1A1D  00A3               	movwf	??_PROCULUS_Delay+1
 10486  1A1E  3097               	movlw	151
 10487  1A1F  00A2               	movwf	??_PROCULUS_Delay
 10488  1A20                     u8027:	
 10489  1A20  0BA2               	decfsz	??_PROCULUS_Delay,f
 10490  1A21  2A20               	goto	u8027
 10491  1A22  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10492  1A23  2A20               	goto	u8027
 10493                           
 10494                           ;proculus.c: 270:     }
 10495  1A24  3001               	movlw	1
 10496  1A25  1283               	bcf	3,5	;RP0=0, select bank0
 10497  1A26  1303               	bcf	3,6	;RP1=0, select bank0
 10498  1A27  07A4               	addwf	PROCULUS_Delay@i,f
 10499  1A28  1803               	skipnc
 10500  1A29  0AA5               	incf	PROCULUS_Delay@i+1,f
 10501  1A2A  3000               	movlw	0
 10502  1A2B  07A5               	addwf	PROCULUS_Delay@i+1,f
 10503  1A2C  2A12               	goto	l661
 10504  1A2D                     __end_of_PROCULUS_Delay:	
 10505                           
 10506                           	psect	text42
 10507  1BA6                     __ptext42:	
 10508 ;; *************** function _EEPROM_Write_String *****************
 10509 ;; Defined at:
 10510 ;;		line 97 in file "eeprom.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  addr            1    wreg     unsigned char 
 10513 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10514 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  addr            1    7[BANK0 ] unsigned char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 300/300
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10526 ;;      Params:         0       1       0       0       0
 10527 ;;      Locals:         0       1       0       0       0
 10528 ;;      Temps:          0       1       0       0       0
 10529 ;;      Totals:         0       3       0       0       0
 10530 ;;Total ram usage:        3 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    2
 10533 ;; This function calls:
 10534 ;;		_EEPROM_Write_Byte
 10535 ;; This function is called by:
 10536 ;;		_Decodify_Command
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           
 10541                           ;psect for function _EEPROM_Write_String
 10542  1BA6                     _EEPROM_Write_String:	
 10543                           
 10544                           ;incstack = 0
 10545                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10546                           ;EEPROM_Write_String@addr stored from wreg
 10547  1BA6  1283               	bcf	3,5	;RP0=0, select bank0
 10548  1BA7  1303               	bcf	3,6	;RP1=0, select bank0
 10549  1BA8  00A7               	movwf	EEPROM_Write_String@addr
 10550  1BA9                     l6586:	
 10551                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10552                           
 10553                           
 10554                           ;eeprom.c: 99:     while(*dado)
 10555  1BA9  0825               	movf	EEPROM_Write_String@dado,w
 10556  1BAA  0084               	movwf	4
 10557  1BAB  1783               	bsf	3,7	;select IRP bank2
 10558  1BAC  0800               	movf	0,w
 10559  1BAD  1903               	btfsc	3,2
 10560  1BAE  2BC6               	goto	l6588
 10561                           
 10562                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10563  1BAF  0825               	movf	EEPROM_Write_String@dado,w
 10564  1BB0  0084               	movwf	4
 10565  1BB1  0800               	movf	0,w
 10566  1BB2  00A6               	movwf	??_EEPROM_Write_String
 10567  1BB3  0826               	movf	??_EEPROM_Write_String,w
 10568  1BB4  00A0               	movwf	EEPROM_Write_Byte@dado
 10569  1BB5  0827               	movf	EEPROM_Write_String@addr,w
 10570  1BB6  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10571                           
 10572                           ;eeprom.c: 102:      addr++;
 10573  1BBB  3001               	movlw	1
 10574  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
 10575  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
 10576  1BBE  00A6               	movwf	??_EEPROM_Write_String
 10577  1BBF  0826               	movf	??_EEPROM_Write_String,w
 10578  1BC0  07A7               	addwf	EEPROM_Write_String@addr,f
 10579                           
 10580                           ;eeprom.c: 103:      dado++;
 10581  1BC1  3001               	movlw	1
 10582  1BC2  00A6               	movwf	??_EEPROM_Write_String
 10583  1BC3  0826               	movf	??_EEPROM_Write_String,w
 10584  1BC4  07A5               	addwf	EEPROM_Write_String@dado,f
 10585  1BC5  2BA9               	goto	l6586
 10586  1BC6                     l6588:	
 10587                           
 10588                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10589  1BC6  0825               	movf	EEPROM_Write_String@dado,w
 10590  1BC7  0084               	movwf	4
 10591  1BC8  0800               	movf	0,w
 10592  1BC9  00A6               	movwf	??_EEPROM_Write_String
 10593  1BCA  0826               	movf	??_EEPROM_Write_String,w
 10594  1BCB  00A0               	movwf	EEPROM_Write_Byte@dado
 10595  1BCC  0827               	movf	EEPROM_Write_String@addr,w
 10596  1BCD  160A  158A  2599   	fcall	_EEPROM_Write_Byte
 10597  1BD0  0008               	return
 10598  1BD1                     __end_of_EEPROM_Write_String:	
 10599                           
 10600                           	psect	text43
 10601  1C5B                     __ptext43:	
 10602 ;; *************** function _EEPROM_Write_Integer *****************
 10603 ;; Defined at:
 10604 ;;		line 68 in file "eeprom.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  addr            1    wreg     unsigned char 
 10607 ;;  dado            2    5[BANK0 ] unsigned int 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  addr            1   11[BANK0 ] unsigned char 
 10610 ;;  i               1   12[BANK0 ] unsigned char 
 10611 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10612 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10613 ;;  addr_memo       1    0        unsigned char 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 200/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10623 ;;      Params:         0       2       0       0       0
 10624 ;;      Locals:         0       4       0       0       0
 10625 ;;      Temps:          0       2       0       0       0
 10626 ;;      Totals:         0       8       0       0       0
 10627 ;;Total ram usage:        8 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    2
 10630 ;; This function calls:
 10631 ;;		_EEPROM_Write_Byte
 10632 ;; This function is called by:
 10633 ;;		_main
 10634 ;;		_Decodify_Command
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function _EEPROM_Write_Integer
 10640  1C5B                     _EEPROM_Write_Integer:	
 10641                           
 10642                           ;incstack = 0
 10643                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10644                           ;EEPROM_Write_Integer@addr stored from wreg
 10645  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
 10646  1C5C  00AB               	movwf	EEPROM_Write_Integer@addr
 10647                           
 10648                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10649  1C5D  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10650  1C5E  00A7               	movwf	??_EEPROM_Write_Integer
 10651  1C5F  0827               	movf	??_EEPROM_Write_Integer,w
 10652  1C60  00AA               	movwf	EEPROM_Write_Integer@ptr
 10653                           
 10654                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10655  1C61  01AC               	clrf	EEPROM_Write_Integer@i
 10656  1C62                     l6542:	
 10657                           
 10658                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10659  1C62  082A               	movf	EEPROM_Write_Integer@ptr,w
 10660  1C63  0084               	movwf	4
 10661  1C64  1383               	bcf	3,7	;select IRP bank0
 10662  1C65  0800               	movf	0,w
 10663  1C66  00A7               	movwf	??_EEPROM_Write_Integer
 10664  1C67  0827               	movf	??_EEPROM_Write_Integer,w
 10665  1C68  00A0               	movwf	EEPROM_Write_Byte@dado
 10666  1C69  082B               	movf	EEPROM_Write_Integer@addr,w
 10667  1C6A  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10668  1C6F  3001               	movlw	1
 10669  1C70  1283               	bcf	3,5	;RP0=0, select bank0
 10670  1C71  1303               	bcf	3,6	;RP1=0, select bank0
 10671  1C72  00A7               	movwf	??_EEPROM_Write_Integer
 10672  1C73  0827               	movf	??_EEPROM_Write_Integer,w
 10673  1C74  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10674  1C75  3001               	movlw	1
 10675  1C76  00A7               	movwf	??_EEPROM_Write_Integer
 10676  1C77  0827               	movf	??_EEPROM_Write_Integer,w
 10677  1C78  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10678  1C79  3001               	movlw	1
 10679  1C7A  00A7               	movwf	??_EEPROM_Write_Integer
 10680  1C7B  0827               	movf	??_EEPROM_Write_Integer,w
 10681  1C7C  07AC               	addwf	EEPROM_Write_Integer@i,f
 10682  1C7D  3002               	movlw	2
 10683  1C7E  022C               	subwf	EEPROM_Write_Integer@i,w
 10684  1C7F  1C03               	skipc
 10685  1C80  2C62               	goto	l6542
 10686                           
 10687                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10688  1C81  304E               	movlw	78
 10689  1C82  1283               	bcf	3,5	;RP0=0, select bank0
 10690  1C83  1303               	bcf	3,6	;RP1=0, select bank0
 10691  1C84  00A8               	movwf	??_EEPROM_Write_Integer+1
 10692  1C85  30EA               	movlw	234
 10693  1C86  00A7               	movwf	??_EEPROM_Write_Integer
 10694  1C87                     u8037:	
 10695  1C87  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10696  1C88  2C87               	goto	u8037
 10697  1C89  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10698  1C8A  2C87               	goto	u8037
 10699  1C8B  0000               	nop
 10700  1C8C  0008               	return
 10701  1C8D                     __end_of_EEPROM_Write_Integer:	
 10702                           
 10703                           	psect	text44
 10704  1D99                     __ptext44:	
 10705 ;; *************** function _EEPROM_Write_Byte *****************
 10706 ;; Defined at:
 10707 ;;		line 21 in file "eeprom.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  addr            1    wreg     unsigned char 
 10710 ;;  dado            1    0[BANK0 ] unsigned char 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;  addr            1    3[BANK0 ] unsigned char 
 10713 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      void 
 10716 ;; Registers used:
 10717 ;;		wreg, status,2, status,0
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/300
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10723 ;;      Params:         0       1       0       0       0
 10724 ;;      Locals:         0       2       0       0       0
 10725 ;;      Temps:          0       2       0       0       0
 10726 ;;      Totals:         0       5       0       0       0
 10727 ;;Total ram usage:        5 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    1
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_Decodify_Command
 10734 ;;		_EEPROM_Write_Integer
 10735 ;;		_EEPROM_Write_String
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           
 10740                           ;psect for function _EEPROM_Write_Byte
 10741  1D99                     _EEPROM_Write_Byte:	
 10742                           
 10743                           ;incstack = 0
 10744                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10745                           ;EEPROM_Write_Byte@addr stored from wreg
 10746  1D99  1283               	bcf	3,5	;RP0=0, select bank0
 10747  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
 10748  1D9B  00A3               	movwf	EEPROM_Write_Byte@addr
 10749                           
 10750                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10751  1D9C  3014               	movlw	20
 10752  1D9D  00FA               	movwf	_Delay_Led_Memory	;volatile
 10753  1D9E  3000               	movlw	0
 10754  1D9F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10755  1DA0                     l380:	
 10756                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10757                           
 10758  1DA0  1683               	bsf	3,5	;RP0=1, select bank3
 10759  1DA1  1703               	bsf	3,6	;RP1=1, select bank3
 10760  1DA2  188C               	btfsc	12,1	;volsfr
 10761  1DA3  2DA0               	goto	l380
 10762                           
 10763                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10764  1DA4  1F8B               	btfss	11,7	;volatile
 10765  1DA5  2DAB               	goto	l5880
 10766                           
 10767                           ;eeprom.c: 28:           last_GIE=1;
 10768  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
 10769  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
 10770  1DA8  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10771  1DA9  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10772  1DAA  2DAE               	goto	l5882
 10773  1DAB                     l5880:	
 10774                           
 10775                           ;eeprom.c: 30:           last_GIE=0;
 10776  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
 10777  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
 10778  1DAD  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10779  1DAE                     l5882:	
 10780                           
 10781                           ;eeprom.c: 32:        EEADR=addr;
 10782  1DAE  0823               	movf	EEPROM_Write_Byte@addr,w
 10783  1DAF  1703               	bsf	3,6	;RP1=1, select bank2
 10784  1DB0  008D               	movwf	13	;volatile
 10785                           
 10786                           ;eeprom.c: 33:        EEDATA=dado;
 10787  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
 10788  1DB2  0820               	movf	EEPROM_Write_Byte@dado,w
 10789  1DB3  1703               	bsf	3,6	;RP1=1, select bank2
 10790  1DB4  008C               	movwf	12	;volatile
 10791                           
 10792                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10793  1DB5  1683               	bsf	3,5	;RP0=1, select bank3
 10794  1DB6  138C               	bcf	12,7	;volsfr
 10795                           
 10796                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10797  1DB7  150C               	bsf	12,2	;volsfr
 10798                           
 10799                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10800  1DB8  138B               	bcf	11,7	;volatile
 10801                           
 10802                           ;eeprom.c: 37:        EECON2=0x55;
 10803  1DB9  3055               	movlw	85
 10804  1DBA  008D               	movwf	13	;volsfr
 10805                           
 10806                           ;eeprom.c: 38:        EECON2=0xAA;
 10807  1DBB  30AA               	movlw	170
 10808  1DBC  008D               	movwf	13	;volsfr
 10809                           
 10810                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10811  1DBD  148C               	bsf	12,1	;volsfr
 10812                           
 10813                           ;eeprom.c: 41:        if(last_GIE==1)
 10814  1DBE  1283               	bcf	3,5	;RP0=0, select bank0
 10815  1DBF  1303               	bcf	3,6	;RP1=0, select bank0
 10816  1DC0  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10817  1DC1  1D03               	btfss	3,2
 10818  1DC2  2DC5               	goto	l385
 10819                           
 10820                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10821  1DC3  178B               	bsf	11,7	;volatile
 10822  1DC4  2DC6               	goto	l386
 10823  1DC5                     l385:	
 10824                           ;eeprom.c: 43:        else
 10825                           
 10826                           
 10827                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10828  1DC5  138B               	bcf	11,7	;volatile
 10829  1DC6                     l386:	
 10830                           
 10831                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10832  1DC6  1683               	bsf	3,5	;RP0=1, select bank3
 10833  1DC7  1703               	bsf	3,6	;RP1=1, select bank3
 10834  1DC8  110C               	bcf	12,2	;volsfr
 10835                           
 10836                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10837  1DC9  304E               	movlw	78
 10838  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
 10839  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
 10840  1DCC  00A2               	movwf	??_EEPROM_Write_Byte+1
 10841  1DCD  30EA               	movlw	234
 10842  1DCE  00A1               	movwf	??_EEPROM_Write_Byte
 10843  1DCF                     u8047:	
 10844  1DCF  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10845  1DD0  2DCF               	goto	u8047
 10846  1DD1  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10847  1DD2  2DCF               	goto	u8047
 10848  1DD3  0000               	nop
 10849  1DD4  0008               	return
 10850  1DD5                     __end_of_EEPROM_Write_Byte:	
 10851                           
 10852                           	psect	text45
 10853  1A69                     __ptext45:	
 10854 ;; *************** function _EEPROM_Read_String *****************
 10855 ;; Defined at:
 10856 ;;		line 109 in file "eeprom.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  addr            1    wreg     unsigned char 
 10859 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10860 ;;		 -> texto(16), 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  addr            1    5[BANK0 ] unsigned char 
 10863 ;;  c               1    6[BANK0 ] unsigned char 
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 300/300
 10870 ;;		On exit  : B00/800
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10873 ;;      Params:         0       1       0       0       0
 10874 ;;      Locals:         0       2       0       0       0
 10875 ;;      Temps:          0       1       0       0       0
 10876 ;;      Totals:         0       4       0       0       0
 10877 ;;Total ram usage:        4 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    2
 10880 ;; This function calls:
 10881 ;;		_EEPROM_Read_Byte
 10882 ;; This function is called by:
 10883 ;;		_Decodify_Command
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           
 10888                           ;psect for function _EEPROM_Read_String
 10889  1A69                     _EEPROM_Read_String:	
 10890                           
 10891                           ;incstack = 0
 10892                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10893                           ;EEPROM_Read_String@addr stored from wreg
 10894  1A69  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1A6A  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1A6B  00A5               	movwf	EEPROM_Read_String@addr
 10897  1A6C                     l412:	
 10898                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10899                           
 10900                           
 10901                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10902  1A6C  0825               	movf	EEPROM_Read_String@addr,w
 10903  1A6D  160A  158A  22C9  160A  158A  	fcall	_EEPROM_Read_Byte
 10904  1A72  1303               	bcf	3,6	;RP1=0, select bank0
 10905  1A73  00A4               	movwf	??_EEPROM_Read_String
 10906  1A74  0824               	movf	??_EEPROM_Read_String,w
 10907  1A75  00A6               	movwf	EEPROM_Read_String@c
 10908  1A76  3001               	movlw	1
 10909  1A77  00A4               	movwf	??_EEPROM_Read_String
 10910  1A78  0824               	movf	??_EEPROM_Read_String,w
 10911  1A79  07A5               	addwf	EEPROM_Read_String@addr,f
 10912                           
 10913                           ;eeprom.c: 114:         *(dado++)=c;
 10914  1A7A  0826               	movf	EEPROM_Read_String@c,w
 10915  1A7B  00A4               	movwf	??_EEPROM_Read_String
 10916  1A7C  0823               	movf	EEPROM_Read_String@dado,w
 10917  1A7D  0084               	movwf	4
 10918  1A7E  0824               	movf	??_EEPROM_Read_String,w
 10919  1A7F  1783               	bsf	3,7	;select IRP bank2
 10920  1A80  0080               	movwf	0
 10921  1A81  3001               	movlw	1
 10922  1A82  00A4               	movwf	??_EEPROM_Read_String
 10923  1A83  0824               	movf	??_EEPROM_Read_String,w
 10924  1A84  07A3               	addwf	EEPROM_Read_String@dado,f
 10925                           
 10926                           ;eeprom.c: 116:       }while(c);
 10927  1A85  0826               	movf	EEPROM_Read_String@c,w
 10928  1A86  1903               	btfsc	3,2
 10929  1A87  0008               	return
 10930  1A88  2A6C               	goto	l412
 10931  1A89                     __end_of_EEPROM_Read_String:	
 10932                           
 10933                           	psect	text46
 10934  1B7C                     __ptext46:	
 10935 ;; *************** function _EEPROM_Read_Integer *****************
 10936 ;; Defined at:
 10937 ;;		line 81 in file "eeprom.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  addr            1    wreg     unsigned char 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  addr            1    6[BANK0 ] unsigned char 
 10942 ;;  result          2    8[BANK0 ] unsigned int 
 10943 ;;  i               1   10[BANK0 ] unsigned char 
 10944 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10945 ;;		 -> EEPROM_Read_Integer@result(2), 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  2    3[BANK0 ] unsigned int 
 10948 ;; Registers used:
 10949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : B00/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10955 ;;      Params:         0       2       0       0       0
 10956 ;;      Locals:         0       5       0       0       0
 10957 ;;      Temps:          0       1       0       0       0
 10958 ;;      Totals:         0       8       0       0       0
 10959 ;;Total ram usage:        8 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    2
 10962 ;; This function calls:
 10963 ;;		_EEPROM_Read_Byte
 10964 ;; This function is called by:
 10965 ;;		_main
 10966 ;;		_Decodify_Command
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _EEPROM_Read_Integer
 10972  1B7C                     _EEPROM_Read_Integer:	
 10973                           
 10974                           ;incstack = 0
 10975                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10976                           ;EEPROM_Read_Integer@addr stored from wreg
 10977  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
 10978  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
 10979  1B7E  00A6               	movwf	EEPROM_Read_Integer@addr
 10980                           
 10981                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10982  1B7F  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10983  1B80  00A5               	movwf	??_EEPROM_Read_Integer
 10984  1B81  0825               	movf	??_EEPROM_Read_Integer,w
 10985  1B82  00A7               	movwf	EEPROM_Read_Integer@ptr
 10986                           
 10987                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10988  1B83  01AA               	clrf	EEPROM_Read_Integer@i
 10989  1B84                     l6518:	
 10990                           
 10991                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10992  1B84  0826               	movf	EEPROM_Read_Integer@addr,w
 10993  1B85  160A  158A  22C9  160A  158A  	fcall	_EEPROM_Read_Byte
 10994  1B8A  1303               	bcf	3,6	;RP1=0, select bank0
 10995  1B8B  00A5               	movwf	??_EEPROM_Read_Integer
 10996  1B8C  0827               	movf	EEPROM_Read_Integer@ptr,w
 10997  1B8D  0084               	movwf	4
 10998  1B8E  0825               	movf	??_EEPROM_Read_Integer,w
 10999  1B8F  1383               	bcf	3,7	;select IRP bank0
 11000  1B90  0080               	movwf	0
 11001  1B91  3001               	movlw	1
 11002  1B92  00A5               	movwf	??_EEPROM_Read_Integer
 11003  1B93  0825               	movf	??_EEPROM_Read_Integer,w
 11004  1B94  07A6               	addwf	EEPROM_Read_Integer@addr,f
 11005  1B95  3001               	movlw	1
 11006  1B96  00A5               	movwf	??_EEPROM_Read_Integer
 11007  1B97  0825               	movf	??_EEPROM_Read_Integer,w
 11008  1B98  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 11009  1B99  3001               	movlw	1
 11010  1B9A  00A5               	movwf	??_EEPROM_Read_Integer
 11011  1B9B  0825               	movf	??_EEPROM_Read_Integer,w
 11012  1B9C  07AA               	addwf	EEPROM_Read_Integer@i,f
 11013  1B9D  3002               	movlw	2
 11014  1B9E  022A               	subwf	EEPROM_Read_Integer@i,w
 11015  1B9F  1C03               	skipc
 11016  1BA0  2B84               	goto	l6518
 11017                           
 11018                           ;eeprom.c: 89:       return result;
 11019  1BA1  0829               	movf	EEPROM_Read_Integer@result+1,w
 11020  1BA2  00A4               	movwf	?_EEPROM_Read_Integer+1
 11021  1BA3  0828               	movf	EEPROM_Read_Integer@result,w
 11022  1BA4  00A3               	movwf	?_EEPROM_Read_Integer
 11023  1BA5  0008               	return
 11024  1BA6                     __end_of_EEPROM_Read_Integer:	
 11025                           
 11026                           	psect	text47
 11027  1AC9                     __ptext47:	
 11028 ;; *************** function _EEPROM_Read_Byte *****************
 11029 ;; Defined at:
 11030 ;;		line 52 in file "eeprom.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  addr            1    wreg     unsigned char 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  addr            1    2[BANK0 ] unsigned char 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1    wreg      unsigned char 
 11037 ;; Registers used:
 11038 ;;		wreg
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/300
 11041 ;;		On exit  : 300/200
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11044 ;;      Params:         0       0       0       0       0
 11045 ;;      Locals:         0       1       0       0       0
 11046 ;;      Temps:          0       2       0       0       0
 11047 ;;      Totals:         0       3       0       0       0
 11048 ;;Total ram usage:        3 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    1
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_Decodify_Command
 11055 ;;		_EEPROM_Read_Integer
 11056 ;;		_EEPROM_Read_String
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           
 11061                           ;psect for function _EEPROM_Read_Byte
 11062  1AC9                     _EEPROM_Read_Byte:	
 11063                           
 11064                           ;incstack = 0
 11065                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11066                           ;EEPROM_Read_Byte@addr stored from wreg
 11067  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
 11068  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 11069  1ACB  00A2               	movwf	EEPROM_Read_Byte@addr
 11070                           
 11071                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11072  1ACC  3014               	movlw	20
 11073  1ACD  00FA               	movwf	_Delay_Led_Memory	;volatile
 11074  1ACE  3000               	movlw	0
 11075  1ACF  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11076  1AD0                     l390:	
 11077                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11078                           
 11079  1AD0  1683               	bsf	3,5	;RP0=1, select bank3
 11080  1AD1  1703               	bsf	3,6	;RP1=1, select bank3
 11081  1AD2  188C               	btfsc	12,1	;volsfr
 11082  1AD3  2AD0               	goto	l390
 11083                           
 11084                           ;eeprom.c: 57:    EEADR=addr;
 11085  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 11086  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 11087  1AD6  0822               	movf	EEPROM_Read_Byte@addr,w
 11088  1AD7  1703               	bsf	3,6	;RP1=1, select bank2
 11089  1AD8  008D               	movwf	13	;volatile
 11090                           
 11091                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11092  1AD9  1683               	bsf	3,5	;RP0=1, select bank3
 11093  1ADA  138C               	bcf	12,7	;volsfr
 11094                           
 11095                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11096  1ADB  140C               	bsf	12,0	;volsfr
 11097                           
 11098                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11099  1ADC  304E               	movlw	78
 11100  1ADD  1283               	bcf	3,5	;RP0=0, select bank0
 11101  1ADE  1303               	bcf	3,6	;RP1=0, select bank0
 11102  1ADF  00A1               	movwf	??_EEPROM_Read_Byte+1
 11103  1AE0  30EA               	movlw	234
 11104  1AE1  00A0               	movwf	??_EEPROM_Read_Byte
 11105  1AE2                     u8057:	
 11106  1AE2  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11107  1AE3  2AE2               	goto	u8057
 11108  1AE4  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11109  1AE5  2AE2               	goto	u8057
 11110  1AE6  0000               	nop
 11111                           
 11112                           ;eeprom.c: 61:    return EEDATA;
 11113  1AE7  1283               	bcf	3,5	;RP0=0, select bank2
 11114  1AE8  1703               	bsf	3,6	;RP1=1, select bank2
 11115  1AE9  080C               	movf	12,w	;volatile
 11116  1AEA  0008               	return
 11117  1AEB                     __end_of_EEPROM_Read_Byte:	
 11118                           
 11119                           	psect	text48
 11120  126F                     __ptext48:	
 11121 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11122 ;; Defined at:
 11123 ;;		line 141 in file "EEPROM_24C1025.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  chip_add        1    wreg     unsigned char 
 11126 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11127 ;;  data            1    6[BANK0 ] PTR unsigned char 
 11128 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  chip_add        1    9[BANK0 ] unsigned char 
 11131 ;;  ctrl            1   11[BANK0 ] unsigned char 
 11132 ;;  range           1   10[BANK0 ] unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 300/300
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11142 ;;      Params:         0       5       0       0       0
 11143 ;;      Locals:         0       3       0       0       0
 11144 ;;      Temps:          0       2       0       0       0
 11145 ;;      Totals:         0      10       0       0       0
 11146 ;;Total ram usage:       10 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    3
 11149 ;; This function calls:
 11150 ;;		_I2C_Master_Start
 11151 ;;		_I2C_Master_Stop
 11152 ;;		_I2C_Master_Write
 11153 ;; This function is called by:
 11154 ;;		_Decodify_Command
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           
 11159                           ;psect for function _EEPROM_24C1025_Write_Str
 11160  126F                     _EEPROM_24C1025_Write_Str:	
 11161                           
 11162                           ;incstack = 0
 11163                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11164                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11165  126F  1283               	bcf	3,5	;RP0=0, select bank0
 11166  1270  1303               	bcf	3,6	;RP1=0, select bank0
 11167  1271  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11168                           
 11169                           ;EEPROM_24C1025.c: 143:      unsigned char ctrl;;EEPROM_24C1025.c: 145:      if(mem_add>
      +                          0x1FFFF) return;
 11170  1272  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11171  1273  1D03               	btfss	3,2
 11172  1274  0008               	return
 11173  1275  3002               	movlw	2
 11174  1276  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11175  1277  1D03               	skipz
 11176  1278  2A81               	goto	u7003
 11177  1279  3000               	movlw	0
 11178  127A  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11179  127B  1D03               	skipz
 11180  127C  2A81               	goto	u7003
 11181  127D  3000               	movlw	0
 11182  127E  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11183  127F  1D03               	skipz
 11184  1280  2A81               	goto	u7003
 11185  1281                     u7003:	
 11186  1281  1803               	btfsc	3,0
 11187  1282  0008               	return
 11188  1283                     L10:	
 11189                           
 11190                           ;EEPROM_24C1025.c: 147:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11191  1283  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11192  1284  1D03               	btfss	3,2
 11193  1285  2A94               	goto	l6634
 11194  1286  3001               	movlw	1
 11195  1287  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11196  1288  1D03               	skipz
 11197  1289  2A92               	goto	u7013
 11198  128A  3000               	movlw	0
 11199  128B  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11200  128C  1D03               	skipz
 11201  128D  2A92               	goto	u7013
 11202  128E  3000               	movlw	0
 11203  128F  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11204  1290  1D03               	skipz
 11205  1291  2A92               	goto	u7013
 11206  1292                     u7013:	
 11207  1292  1C03               	btfss	3,0
 11208  1293  2A99               	goto	l6636
 11209  1294                     l6634:	
 11210  1294  3008               	movlw	8
 11211  1295  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11212  1296  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11213  1297  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 11214  1298  2A9A               	goto	l6638
 11215  1299                     l6636:	
 11216  1299  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 11217  129A                     l6638:	
 11218                           
 11219                           ;EEPROM_24C1025.c: 148:      ctrl=chip_add;
 11220  129A  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11221  129B  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11222  129C  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11223  129D  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11224                           
 11225                           ;EEPROM_24C1025.c: 149:      ctrl<<=1;
 11226  129E  1003               	clrc
 11227  129F  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11228                           
 11229                           ;EEPROM_24C1025.c: 150:      ctrl |= 0xA0;
 11230  12A0  30A0               	movlw	160
 11231  12A1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11232  12A2  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11233  12A3  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11234                           
 11235                           ;EEPROM_24C1025.c: 151:      ctrl |= range;
 11236  12A4  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 11237  12A5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11238  12A6  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11239  12A7  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11240                           
 11241                           ;EEPROM_24C1025.c: 153:      I2C_Master_Start();
 11242  12A8  160A  158A  214A  160A  118A  	fcall	_I2C_Master_Start
 11243                           
 11244                           ;EEPROM_24C1025.c: 154:      I2C_Master_Write(ctrl);
 11245  12AD  1283               	bcf	3,5	;RP0=0, select bank0
 11246  12AE  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11247  12AF  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11248  12B0  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11249  12B1  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11250  12B2  00A0               	movwf	I2C_Master_Write@d
 11251  12B3  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11252  12B4  00A1               	movwf	I2C_Master_Write@d+1
 11253  12B5  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11254                           
 11255                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(((char *)&mem_add)[1]);
 11256  12BA  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11257  12BB  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11258  12BC  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11259  12BD  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11260  12BE  00A0               	movwf	I2C_Master_Write@d
 11261  12BF  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11262  12C0  00A1               	movwf	I2C_Master_Write@d+1
 11263  12C1  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11264                           
 11265                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[0]);
 11266  12C6  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11267  12C7  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11268  12C8  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11269  12C9  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11270  12CA  00A0               	movwf	I2C_Master_Write@d
 11271  12CB  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11272  12CC  00A1               	movwf	I2C_Master_Write@d+1
 11273  12CD  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11274  12D2                     l6698:	
 11275                           ;EEPROM_24C1025.c: 157:      while(*data)
 11276                           
 11277                           
 11278                           ;EEPROM_24C1025.c: 157:      while(*data)
 11279  12D2  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11280  12D3  0084               	movwf	4
 11281  12D4  1783               	bsf	3,7	;select IRP bank2
 11282  12D5  0800               	movf	0,w
 11283  12D6  1903               	btfsc	3,2
 11284  12D7  2B41               	goto	l6700
 11285                           
 11286                           ;EEPROM_24C1025.c: 158:           {;EEPROM_24C1025.c: 159:           if(mem_add>0x1FFFF)
      +                           return;
 11287  12D8  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11288  12D9  1D03               	btfss	3,2
 11289  12DA  0008               	return
 11290  12DB  3002               	movlw	2
 11291  12DC  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11292  12DD  1D03               	skipz
 11293  12DE  2AE7               	goto	u7023
 11294  12DF  3000               	movlw	0
 11295  12E0  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11296  12E1  1D03               	skipz
 11297  12E2  2AE7               	goto	u7023
 11298  12E3  3000               	movlw	0
 11299  12E4  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11300  12E5  1D03               	skipz
 11301  12E6  2AE7               	goto	u7023
 11302  12E7                     u7023:	
 11303  12E7  1803               	btfsc	3,0
 11304  12E8  0008               	return
 11305                           
 11306                           ;EEPROM_24C1025.c: 160:           if((mem_add+1)%128==0)
 11307  12E9  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11308  12EA  3E01               	addlw	1
 11309  12EB  397F               	andlw	127
 11310  12EC  1D03               	btfss	3,2
 11311  12ED  2B20               	goto	l6692
 11312                           
 11313                           ;EEPROM_24C1025.c: 161:             {;EEPROM_24C1025.c: 162:             I2C_Master_Writ
      +                          e(*data);
 11314  12EE  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11315  12EF  0084               	movwf	4
 11316  12F0  0800               	movf	0,w
 11317  12F1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11318  12F2  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11319  12F3  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11320  12F4  00A0               	movwf	I2C_Master_Write@d
 11321  12F5  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11322  12F6  00A1               	movwf	I2C_Master_Write@d+1
 11323  12F7  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11324                           
 11325                           ;EEPROM_24C1025.c: 163:             I2C_Master_Stop();
 11326  12FC  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 11327                           
 11328                           ;EEPROM_24C1025.c: 165:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11329  1301  300D               	movlw	13
 11330  1302  1283               	bcf	3,5	;RP0=0, select bank0
 11331  1303  1303               	bcf	3,6	;RP1=0, select bank0
 11332  1304  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11333  1305  30FB               	movlw	251
 11334  1306  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11335  1307                     u8067:	
 11336  1307  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11337  1308  2B07               	goto	u8067
 11338  1309  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11339  130A  2B07               	goto	u8067
 11340                           
 11341                           ;EEPROM_24C1025.c: 166:             mem_add++;
 11342  130B  3001               	movlw	1
 11343  130C  1283               	bcf	3,5	;RP0=0, select bank0
 11344  130D  1303               	bcf	3,6	;RP1=0, select bank0
 11345  130E  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11346  130F  3000               	movlw	0
 11347  1310  1803               	skipnc
 11348  1311  3001               	movlw	1
 11349  1312  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11350  1313  3000               	movlw	0
 11351  1314  1803               	skipnc
 11352  1315  3001               	movlw	1
 11353  1316  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11354  1317  3000               	movlw	0
 11355  1318  1803               	skipnc
 11356  1319  3001               	movlw	1
 11357  131A  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11358                           
 11359                           ;EEPROM_24C1025.c: 167:             data++;
 11360  131B  3001               	movlw	1
 11361  131C  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11362  131D  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11363  131E  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11364  131F  2A83               	goto	L10
 11365  1320                     l6692:	
 11366                           ;EEPROM_24C1025.c: 168:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11367                           
 11368                           
 11369                           ;EEPROM_24C1025.c: 180:             {;EEPROM_24C1025.c: 181:             I2C_Master_Writ
      +                          e(*data);
 11370  1320  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11371  1321  0084               	movwf	4
 11372  1322  0800               	movf	0,w
 11373  1323  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11374  1324  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11375  1325  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11376  1326  00A0               	movwf	I2C_Master_Write@d
 11377  1327  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11378  1328  00A1               	movwf	I2C_Master_Write@d+1
 11379  1329  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11380                           
 11381                           ;EEPROM_24C1025.c: 182:             data++;
 11382  132E  3001               	movlw	1
 11383  132F  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11384  1330  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11385  1331  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11386                           
 11387                           ;EEPROM_24C1025.c: 183:             mem_add++;
 11388  1332  3001               	movlw	1
 11389  1333  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11390  1334  3000               	movlw	0
 11391  1335  1803               	skipnc
 11392  1336  3001               	movlw	1
 11393  1337  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11394  1338  3000               	movlw	0
 11395  1339  1803               	skipnc
 11396  133A  3001               	movlw	1
 11397  133B  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11398  133C  3000               	movlw	0
 11399  133D  1803               	skipnc
 11400  133E  3001               	movlw	1
 11401  133F  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11402  1340  2AD2               	goto	l6698
 11403  1341                     l6700:	
 11404                           
 11405                           ;EEPROM_24C1025.c: 186:      I2C_Master_Write(0);
 11406  1341  3000               	movlw	0
 11407  1342  00A0               	movwf	I2C_Master_Write@d
 11408  1343  00A1               	movwf	I2C_Master_Write@d+1
 11409  1344  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11410                           
 11411                           ;EEPROM_24C1025.c: 187:      I2C_Master_Stop();
 11412  1349  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 11413                           
 11414                           ;EEPROM_24C1025.c: 188:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11415  134E  30B9               	movlw	185
 11416  134F  1283               	bcf	3,5	;RP0=0, select bank0
 11417  1350  1303               	bcf	3,6	;RP1=0, select bank0
 11418  1351  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11419  1352                     u8077:	
 11420  1352  2B53               	nop2
 11421  1353  2B54               	nop2
 11422  1354  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11423  1355  2B52               	goto	u8077
 11424  1356  2B57               	nop2
 11425  1357  0008               	return
 11426  1358                     __end_of_EEPROM_24C1025_Write_Str:	
 11427                           
 11428                           	psect	text49
 11429  1984                     __ptext49:	
 11430 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11431 ;; Defined at:
 11432 ;;		line 261 in file "EEPROM_24C1025.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  chip_add        1    wreg     unsigned char 
 11435 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11436 ;;  data            1   19[BANK0 ] unsigned char 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  1    wreg      void 
 11441 ;; Registers used:
 11442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11443 ;; Tracked objects:
 11444 ;;		On entry : 300/300
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11448 ;;      Params:         0       5       0       0       0
 11449 ;;      Locals:         0       1       0       0       0
 11450 ;;      Temps:          0       0       0       0       0
 11451 ;;      Totals:         0       6       0       0       0
 11452 ;;Total ram usage:        6 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    4
 11455 ;; This function calls:
 11456 ;;		_EEPROM_24C1025_Write_Buffer
 11457 ;; This function is called by:
 11458 ;;		_Decodify_Command
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function _EEPROM_24C1025_Write_Byte
 11464  1984                     _EEPROM_24C1025_Write_Byte:	
 11465                           
 11466                           ;incstack = 0
 11467                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11468                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11469  1984  1283               	bcf	3,5	;RP0=0, select bank0
 11470  1985  1303               	bcf	3,6	;RP1=0, select bank0
 11471  1986  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11472                           
 11473                           ;EEPROM_24C1025.c: 262:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11474  1987  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11475  1988  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11476  1989  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11477  198A  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11478  198B  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11479  198C  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11480  198D  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11481  198E  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11482  198F  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11483  1990  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11484  1991  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11485  1992  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11486  1993  3000               	movlw	0
 11487  1994  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11488  1995  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11489  1996  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
 11490  1999  0008               	return
 11491  199A                     __end_of_EEPROM_24C1025_Write_Byte:	
 11492                           
 11493                           	psect	text50
 11494  1694                     __ptext50:	
 11495 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11496 ;; Defined at:
 11497 ;;		line 195 in file "EEPROM_24C1025.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  chip_add        1    wreg     unsigned char 
 11500 ;;  mem_add         4    6[BANK0 ] unsigned long 
 11501 ;;  texto           1   10[BANK0 ] PTR unsigned char 
 11502 ;;		 -> texto(16), 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11505 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11506 ;;  range           1   15[BANK0 ] unsigned char 
 11507 ;;  cnt             1   13[BANK0 ] unsigned char 
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 300/300
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11517 ;;      Params:         0       5       0       0       0
 11518 ;;      Locals:         0       4       0       0       0
 11519 ;;      Temps:          0       2       0       0       0
 11520 ;;      Totals:         0      11       0       0       0
 11521 ;;Total ram usage:       11 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:    3
 11524 ;; This function calls:
 11525 ;;		_I2C_Master_Read
 11526 ;;		_I2C_Master_RepeatedStart
 11527 ;;		_I2C_Master_Start
 11528 ;;		_I2C_Master_Stop
 11529 ;;		_I2C_Master_Write
 11530 ;; This function is called by:
 11531 ;;		_Decodify_Command
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           
 11536                           ;psect for function _EEPROM_24C1025_Read_Str
 11537  1694                     _EEPROM_24C1025_Read_Str:	
 11538                           
 11539                           ;incstack = 0
 11540                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11541                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11542  1694  1283               	bcf	3,5	;RP0=0, select bank0
 11543  1695  1303               	bcf	3,6	;RP1=0, select bank0
 11544  1696  00AE               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11545                           
 11546                           ;EEPROM_24C1025.c: 197:      unsigned char range=0;
 11547  1697  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11548                           
 11549                           ;EEPROM_24C1025.c: 198:      unsigned char ctrl;;EEPROM_24C1025.c: 200:      if(mem_add>
      +                          0x1FFFF) return;
 11550  1698  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11551  1699  1D03               	btfss	3,2
 11552  169A  0008               	return
 11553  169B  3002               	movlw	2
 11554  169C  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11555  169D  1D03               	skipz
 11556  169E  2EA7               	goto	u7063
 11557  169F  3000               	movlw	0
 11558  16A0  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11559  16A1  1D03               	skipz
 11560  16A2  2EA7               	goto	u7063
 11561  16A3  3000               	movlw	0
 11562  16A4  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11563  16A5  1D03               	skipz
 11564  16A6  2EA7               	goto	u7063
 11565  16A7                     u7063:	
 11566  16A7  1803               	btfsc	3,0
 11567  16A8  0008               	return
 11568                           
 11569                           ;EEPROM_24C1025.c: 202:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11570  16A9  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11571  16AA  1D03               	btfss	3,2
 11572  16AB  2EBA               	goto	l6712
 11573  16AC  3001               	movlw	1
 11574  16AD  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11575  16AE  1D03               	skipz
 11576  16AF  2EB8               	goto	u7073
 11577  16B0  3000               	movlw	0
 11578  16B1  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11579  16B2  1D03               	skipz
 11580  16B3  2EB8               	goto	u7073
 11581  16B4  3000               	movlw	0
 11582  16B5  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11583  16B6  1D03               	skipz
 11584  16B7  2EB8               	goto	u7073
 11585  16B8                     u7073:	
 11586  16B8  1C03               	btfss	3,0
 11587  16B9  2EBF               	goto	l6714
 11588  16BA                     l6712:	
 11589  16BA  3008               	movlw	8
 11590  16BB  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11591  16BC  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11592  16BD  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11593  16BE  2EC0               	goto	l6716
 11594  16BF                     l6714:	
 11595  16BF  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11596  16C0                     l6716:	
 11597                           
 11598                           ;EEPROM_24C1025.c: 203:      ctrl=chip_add;
 11599  16C0  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11600  16C1  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11601  16C2  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11602  16C3  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11603                           
 11604                           ;EEPROM_24C1025.c: 204:      ctrl<<=1;
 11605  16C4  1003               	clrc
 11606  16C5  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11607                           
 11608                           ;EEPROM_24C1025.c: 205:      ctrl |= 0xA0;
 11609  16C6  30A0               	movlw	160
 11610  16C7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11611  16C8  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11612  16C9  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11613                           
 11614                           ;EEPROM_24C1025.c: 206:      ctrl |= 0b00000001;
 11615  16CA  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11616                           
 11617                           ;EEPROM_24C1025.c: 207:      ctrl |= range;
 11618  16CB  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11619  16CC  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11620  16CD  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11621  16CE  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11622                           
 11623                           ;EEPROM_24C1025.c: 209:      I2C_Master_Start();
 11624  16CF  160A  158A  214A  160A  118A  	fcall	_I2C_Master_Start
 11625                           
 11626                           ;EEPROM_24C1025.c: 210:      I2C_Master_Write(ctrl & 0xFE);
 11627  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11628  16D5  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11629  16D6  39FE               	andlw	254
 11630  16D7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11631  16D8  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11632  16D9  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11633  16DA  00A0               	movwf	I2C_Master_Write@d
 11634  16DB  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11635  16DC  00A1               	movwf	I2C_Master_Write@d+1
 11636  16DD  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11637                           
 11638                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(((char *)&mem_add)[1]);
 11639  16E2  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11640  16E3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11641  16E4  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11642  16E5  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11643  16E6  00A0               	movwf	I2C_Master_Write@d
 11644  16E7  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11645  16E8  00A1               	movwf	I2C_Master_Write@d+1
 11646  16E9  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11647                           
 11648                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[0]);
 11649  16EE  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11650  16EF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11651  16F0  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11652  16F1  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11653  16F2  00A0               	movwf	I2C_Master_Write@d
 11654  16F3  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11655  16F4  00A1               	movwf	I2C_Master_Write@d+1
 11656  16F5  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11657                           
 11658                           ;EEPROM_24C1025.c: 213:      I2C_Master_RepeatedStart();
 11659  16FA  160A  158A  2135  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11660                           
 11661                           ;EEPROM_24C1025.c: 214:      I2C_Master_Write(ctrl);
 11662  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11663  1700  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11664  1701  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11665  1702  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11666  1703  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11667  1704  00A0               	movwf	I2C_Master_Write@d
 11668  1705  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11669  1706  00A1               	movwf	I2C_Master_Write@d+1
 11670  1707  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11671                           
 11672                           ;EEPROM_24C1025.c: 216:      cnt=0;
 11673  170C  01AD               	clrf	EEPROM_24C1025_Read_Str@cnt
 11674  170D                     l6738:	
 11675                           
 11676                           ;EEPROM_24C1025.c: 218:            if(mem_add>0x1FFFF) break;
 11677  170D  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11678  170E  1D03               	btfss	3,2
 11679  170F  2FE9               	goto	l6794
 11680  1710  3002               	movlw	2
 11681  1711  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11682  1712  1D03               	skipz
 11683  1713  2F1C               	goto	u7083
 11684  1714  3000               	movlw	0
 11685  1715  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11686  1716  1D03               	skipz
 11687  1717  2F1C               	goto	u7083
 11688  1718  3000               	movlw	0
 11689  1719  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11690  171A  1D03               	skipz
 11691  171B  2F1C               	goto	u7083
 11692  171C                     u7083:	
 11693  171C  1803               	btfsc	3,0
 11694  171D  2FE9               	goto	l6794
 11695                           
 11696                           ;EEPROM_24C1025.c: 219:            if((mem_add+1)%128==0)
 11697  171E  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11698  171F  3E01               	addlw	1
 11699  1720  397F               	andlw	127
 11700  1721  1D03               	btfss	3,2
 11701  1722  2FB9               	goto	l6782
 11702                           
 11703                           ;EEPROM_24C1025.c: 220:              {;EEPROM_24C1025.c: 221:              (*texto)=I2C_
      +                          Master_Read(0);
 11704  1723  3000               	movlw	0
 11705  1724  00A0               	movwf	I2C_Master_Read@a
 11706  1725  00A1               	movwf	I2C_Master_Read@a+1
 11707  1726  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11708  172B  0820               	movf	?_I2C_Master_Read,w
 11709  172C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11710  172D  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11711  172E  0084               	movwf	4
 11712  172F  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11713  1730  1783               	bsf	3,7	;select IRP bank2
 11714  1731  0080               	movwf	0
 11715                           
 11716                           ;EEPROM_24C1025.c: 222:              I2C_Master_Stop();
 11717  1732  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 11718                           
 11719                           ;EEPROM_24C1025.c: 224:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11720  1737  300D               	movlw	13
 11721  1738  1283               	bcf	3,5	;RP0=0, select bank0
 11722  1739  1303               	bcf	3,6	;RP1=0, select bank0
 11723  173A  00AC               	movwf	??_EEPROM_24C1025_Read_Str+1
 11724  173B  30FB               	movlw	251
 11725  173C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11726  173D                     u8087:	
 11727  173D  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11728  173E  2F3D               	goto	u8087
 11729  173F  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11730  1740  2F3D               	goto	u8087
 11731                           
 11732                           ;EEPROM_24C1025.c: 225:              mem_add++;
 11733  1741  3001               	movlw	1
 11734  1742  1283               	bcf	3,5	;RP0=0, select bank0
 11735  1743  1303               	bcf	3,6	;RP1=0, select bank0
 11736  1744  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11737  1745  3000               	movlw	0
 11738  1746  1803               	skipnc
 11739  1747  3001               	movlw	1
 11740  1748  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11741  1749  3000               	movlw	0
 11742  174A  1803               	skipnc
 11743  174B  3001               	movlw	1
 11744  174C  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11745  174D  3000               	movlw	0
 11746  174E  1803               	skipnc
 11747  174F  3001               	movlw	1
 11748  1750  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11749                           
 11750                           ;EEPROM_24C1025.c: 226:              texto++;
 11751  1751  3001               	movlw	1
 11752  1752  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11753  1753  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11754  1754  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11755                           
 11756                           ;EEPROM_24C1025.c: 227:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11757  1755  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11758  1756  1D03               	btfss	3,2
 11759  1757  2F66               	goto	l6756
 11760  1758  3001               	movlw	1
 11761  1759  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11762  175A  1D03               	skipz
 11763  175B  2F64               	goto	u7103
 11764  175C  3000               	movlw	0
 11765  175D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11766  175E  1D03               	skipz
 11767  175F  2F64               	goto	u7103
 11768  1760  3000               	movlw	0
 11769  1761  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11770  1762  1D03               	skipz
 11771  1763  2F64               	goto	u7103
 11772  1764                     u7103:	
 11773  1764  1C03               	btfss	3,0
 11774  1765  2F6B               	goto	l6758
 11775  1766                     l6756:	
 11776  1766  3008               	movlw	8
 11777  1767  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11778  1768  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11779  1769  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11780  176A  2F6C               	goto	l6760
 11781  176B                     l6758:	
 11782  176B  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11783  176C                     l6760:	
 11784                           
 11785                           ;EEPROM_24C1025.c: 228:              ctrl=chip_add;
 11786  176C  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11787  176D  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11788  176E  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11789  176F  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11790                           
 11791                           ;EEPROM_24C1025.c: 229:              ctrl<<=1;
 11792  1770  1003               	clrc
 11793  1771  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11794                           
 11795                           ;EEPROM_24C1025.c: 230:              ctrl |= 0xA0;
 11796  1772  30A0               	movlw	160
 11797  1773  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11798  1774  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11799  1775  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11800                           
 11801                           ;EEPROM_24C1025.c: 231:              ctrl |= 0b00000001;
 11802  1776  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11803                           
 11804                           ;EEPROM_24C1025.c: 232:              ctrl |= range;
 11805  1777  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11806  1778  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11807  1779  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11808  177A  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11809                           
 11810                           ;EEPROM_24C1025.c: 234:              I2C_Master_Start();
 11811  177B  160A  158A  214A  160A  118A  	fcall	_I2C_Master_Start
 11812                           
 11813                           ;EEPROM_24C1025.c: 235:              I2C_Master_Write(ctrl & 0xFE);
 11814  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11815  1781  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11816  1782  39FE               	andlw	254
 11817  1783  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11818  1784  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11819  1785  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11820  1786  00A0               	movwf	I2C_Master_Write@d
 11821  1787  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11822  1788  00A1               	movwf	I2C_Master_Write@d+1
 11823  1789  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11824                           
 11825                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(((char *)&mem_add)[1]);
 11826  178E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11827  178F  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11828  1790  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11829  1791  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11830  1792  00A0               	movwf	I2C_Master_Write@d
 11831  1793  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11832  1794  00A1               	movwf	I2C_Master_Write@d+1
 11833  1795  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11834                           
 11835                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[0]);
 11836  179A  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11837  179B  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11838  179C  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11839  179D  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11840  179E  00A0               	movwf	I2C_Master_Write@d
 11841  179F  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11842  17A0  00A1               	movwf	I2C_Master_Write@d+1
 11843  17A1  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11844                           
 11845                           ;EEPROM_24C1025.c: 238:              I2C_Master_RepeatedStart();
 11846  17A6  160A  158A  2135  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11847                           
 11848                           ;EEPROM_24C1025.c: 239:              I2C_Master_Write(ctrl);
 11849  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11850  17AC  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11851  17AD  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11852  17AE  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11853  17AF  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11854  17B0  00A0               	movwf	I2C_Master_Write@d
 11855  17B1  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11856  17B2  00A1               	movwf	I2C_Master_Write@d+1
 11857  17B3  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 11858                           
 11859                           ;EEPROM_24C1025.c: 240:              }
 11860  17B8  2FE0               	goto	l6792
 11861  17B9                     l6782:	
 11862                           
 11863                           ;EEPROM_24C1025.c: 242:              {;EEPROM_24C1025.c: 243:              (*texto)=I2C_
      +                          Master_Read(1);
 11864  17B9  3001               	movlw	1
 11865  17BA  00A0               	movwf	I2C_Master_Read@a
 11866  17BB  3000               	movlw	0
 11867  17BC  00A1               	movwf	I2C_Master_Read@a+1
 11868  17BD  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11869  17C2  0820               	movf	?_I2C_Master_Read,w
 11870  17C3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11871  17C4  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11872  17C5  0084               	movwf	4
 11873  17C6  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11874  17C7  1783               	bsf	3,7	;select IRP bank2
 11875  17C8  0080               	movwf	0
 11876                           
 11877                           ;EEPROM_24C1025.c: 244:              if((*texto)==0)break;
 11878  17C9  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11879  17CA  0084               	movwf	4
 11880  17CB  0800               	movf	0,w
 11881  17CC  1903               	btfsc	3,2
 11882  17CD  2FE9               	goto	l6794
 11883                           
 11884                           ;EEPROM_24C1025.c: 245:              texto++;
 11885  17CE  3001               	movlw	1
 11886  17CF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11887  17D0  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11888  17D1  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11889                           
 11890                           ;EEPROM_24C1025.c: 246:              mem_add++;
 11891  17D2  3001               	movlw	1
 11892  17D3  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11893  17D4  3000               	movlw	0
 11894  17D5  1803               	skipnc
 11895  17D6  3001               	movlw	1
 11896  17D7  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11897  17D8  3000               	movlw	0
 11898  17D9  1803               	skipnc
 11899  17DA  3001               	movlw	1
 11900  17DB  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11901  17DC  3000               	movlw	0
 11902  17DD  1803               	skipnc
 11903  17DE  3001               	movlw	1
 11904  17DF  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11905  17E0                     l6792:	
 11906                           
 11907                           ;EEPROM_24C1025.c: 248:        }while((cnt++)<64);
 11908  17E0  3001               	movlw	1
 11909  17E1  07AD               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11910  17E2  30FF               	movlw	-1
 11911  17E3  072D               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11912  17E4  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11913  17E5  3040               	movlw	64
 11914  17E6  022B               	subwf	??_EEPROM_24C1025_Read_Str,w
 11915  17E7  1C03               	skipc
 11916  17E8  2F0D               	goto	l6738
 11917  17E9                     l6794:	
 11918                           
 11919                           ;EEPROM_24C1025.c: 250:      I2C_Master_Read(0);
 11920  17E9  3000               	movlw	0
 11921  17EA  00A0               	movwf	I2C_Master_Read@a
 11922  17EB  00A1               	movwf	I2C_Master_Read@a+1
 11923  17EC  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11924                           
 11925                           ;EEPROM_24C1025.c: 251:      I2C_Master_Stop();
 11926  17F1  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 11927                           
 11928                           ;EEPROM_24C1025.c: 252:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11929  17F6  30B9               	movlw	185
 11930  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11931  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11932  17F9  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11933  17FA                     u8097:	
 11934  17FA  2FFB               	nop2
 11935  17FB  2FFC               	nop2
 11936  17FC  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11937  17FD  2FFA               	goto	u8097
 11938  17FE  2FFF               	nop2
 11939  17FF  0008               	return
 11940  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11941                           
 11942                           	psect	text51
 11943  1B54                     __ptext51:	
 11944 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11945 ;; Defined at:
 11946 ;;		line 280 in file "EEPROM_24C1025.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;  chip_add        1    wreg     unsigned char 
 11949 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  chip_add        1   26[BANK0 ] unsigned char 
 11952 ;;  data            2   27[BANK0 ] unsigned char [2]
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  2   20[BANK0 ] unsigned int 
 11955 ;; Registers used:
 11956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11957 ;; Tracked objects:
 11958 ;;		On entry : 300/300
 11959 ;;		On exit  : 300/0
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11962 ;;      Params:         0       4       0       0       0
 11963 ;;      Locals:         0       3       0       0       0
 11964 ;;      Temps:          0       2       0       0       0
 11965 ;;      Totals:         0       9       0       0       0
 11966 ;;Total ram usage:        9 bytes
 11967 ;; Hardware stack levels used:    1
 11968 ;; Hardware stack levels required when called:    4
 11969 ;; This function calls:
 11970 ;;		_EEPROM_24C1025_Read_Buffer
 11971 ;; This function is called by:
 11972 ;;		_Decodify_Command
 11973 ;; This function uses a non-reentrant model
 11974 ;;
 11975                           
 11976                           
 11977                           ;psect for function _EEPROM_24C1025_Read_Int
 11978  1B54                     _EEPROM_24C1025_Read_Int:	
 11979                           
 11980                           ;incstack = 0
 11981                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11982                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11983  1B54  1283               	bcf	3,5	;RP0=0, select bank0
 11984  1B55  1303               	bcf	3,6	;RP1=0, select bank0
 11985  1B56  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11986                           
 11987                           ;EEPROM_24C1025.c: 281:     char data[2];;EEPROM_24C1025.c: 282:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11988  1B57  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11989  1B58  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11990  1B59  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11991  1B5A  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11992  1B5B  0835               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11993  1B5C  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11994  1B5D  0834               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11995  1B5E  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11996  1B5F  3002               	movlw	2
 11997  1B60  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 11998  1B61  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 11999  1B62  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 12000  1B63  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 12001  1B64  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12002  1B65  3000               	movlw	0
 12003  1B66  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12004  1B67  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 12005  1B68  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12006                           
 12007                           ;EEPROM_24C1025.c: 283:     return (data[0]<<8)+data[1];
 12008  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
 12009  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
 12010  1B6D  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 12011  1B6E  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 12012  1B6F  01B9               	clrf	??_EEPROM_24C1025_Read_Int+1
 12013  1B70  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 12014  1B71  00B9               	movwf	??_EEPROM_24C1025_Read_Int+1
 12015  1B72  01B8               	clrf	??_EEPROM_24C1025_Read_Int
 12016  1B73  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 12017  1B74  0738               	addwf	??_EEPROM_24C1025_Read_Int,w
 12018  1B75  00B4               	movwf	?_EEPROM_24C1025_Read_Int
 12019  1B76  3000               	movlw	0
 12020  1B77  1803               	skipnc
 12021  1B78  3001               	movlw	1
 12022  1B79  0739               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 12023  1B7A  00B5               	movwf	?_EEPROM_24C1025_Read_Int+1
 12024  1B7B  0008               	return
 12025  1B7C                     __end_of_EEPROM_24C1025_Read_Int:	
 12026                           
 12027                           	psect	text52
 12028  19DE                     __ptext52:	
 12029 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12030 ;; Defined at:
 12031 ;;		line 266 in file "EEPROM_24C1025.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  chip_add        1    wreg     unsigned char 
 12034 ;;  mem_add         4   20[BANK0 ] unsigned long 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  chip_add        1   24[BANK0 ] unsigned char 
 12037 ;;  data            1   25[BANK0 ] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      unsigned char 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 300/300
 12044 ;;		On exit  : 300/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12047 ;;      Params:         0       4       0       0       0
 12048 ;;      Locals:         0       2       0       0       0
 12049 ;;      Temps:          0       0       0       0       0
 12050 ;;      Totals:         0       6       0       0       0
 12051 ;;Total ram usage:        6 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:    4
 12054 ;; This function calls:
 12055 ;;		_EEPROM_24C1025_Read_Buffer
 12056 ;; This function is called by:
 12057 ;;		_Decodify_Command
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           
 12062                           ;psect for function _EEPROM_24C1025_Read_Byte
 12063  19DE                     _EEPROM_24C1025_Read_Byte:	
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12067                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12068  19DE  1283               	bcf	3,5	;RP0=0, select bank0
 12069  19DF  1303               	bcf	3,6	;RP1=0, select bank0
 12070  19E0  00B8               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12071                           
 12072                           ;EEPROM_24C1025.c: 267:     char data;;EEPROM_24C1025.c: 268:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 12073  19E1  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12074  19E2  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12075  19E3  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12076  19E4  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12077  19E5  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12078  19E6  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12079  19E7  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12080  19E8  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12081  19E9  01AA               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12082  19EA  0AAA               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12083  19EB  3039               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 12084  19EC  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12085  19ED  3000               	movlw	0
 12086  19EE  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12087  19EF  0838               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12088  19F0  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12089                           
 12090                           ;EEPROM_24C1025.c: 269:     return data;
 12091  19F3  1283               	bcf	3,5	;RP0=0, select bank0
 12092  19F4  1303               	bcf	3,6	;RP1=0, select bank0
 12093  19F5  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12094  19F6  0008               	return
 12095  19F7                     __end_of_EEPROM_24C1025_Read_Byte:	
 12096                           
 12097                           	psect	text53
 12098  0828                     __ptext53:	
 12099 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 12100 ;; Defined at:
 12101 ;;		line 73 in file "EEPROM_24C1025.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;  chip_add        1    wreg     unsigned char 
 12104 ;;  mem_add         4    6[BANK0 ] unsigned long 
 12105 ;;  sizedata        1   10[BANK0 ] unsigned char 
 12106 ;;  data            2   11[BANK0 ] PTR unsigned char 
 12107 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), buffer(64), 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  chip_add        1   17[BANK0 ] unsigned char 
 12110 ;;  cnt             1   16[BANK0 ] unsigned char 
 12111 ;;  ctrl            1   19[BANK0 ] unsigned char 
 12112 ;;  range           1   18[BANK0 ] unsigned char 
 12113 ;;  cnt             1    0        unsigned char 
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  1    wreg      void 
 12116 ;; Registers used:
 12117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/300
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12123 ;;      Params:         0       7       0       0       0
 12124 ;;      Locals:         0       5       0       0       0
 12125 ;;      Temps:          0       2       0       0       0
 12126 ;;      Totals:         0      14       0       0       0
 12127 ;;Total ram usage:       14 bytes
 12128 ;; Hardware stack levels used:    1
 12129 ;; Hardware stack levels required when called:    3
 12130 ;; This function calls:
 12131 ;;		_I2C_Master_Read
 12132 ;;		_I2C_Master_RepeatedStart
 12133 ;;		_I2C_Master_Start
 12134 ;;		_I2C_Master_Stop
 12135 ;;		_I2C_Master_Write
 12136 ;; This function is called by:
 12137 ;;		_Decodify_Command
 12138 ;;		_EEPROM_24C1025_Read_Byte
 12139 ;;		_EEPROM_24C1025_Read_Int
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           
 12144                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12145  0828                     _EEPROM_24C1025_Read_Buffer:	
 12146                           
 12147                           ;incstack = 0
 12148                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12149                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12150  0828  1283               	bcf	3,5	;RP0=0, select bank0
 12151  0829  1303               	bcf	3,6	;RP1=0, select bank0
 12152  082A  00B1               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12153                           
 12154                           ;EEPROM_24C1025.c: 79:      unsigned char range=0;
 12155  082B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12156                           
 12157                           ;EEPROM_24C1025.c: 80:      unsigned char ctrl;;EEPROM_24C1025.c: 82:      Delay_Led_Mem
      +                          ory=20;
 12158  082C  3014               	movlw	20
 12159  082D  00FA               	movwf	_Delay_Led_Memory	;volatile
 12160  082E  3000               	movlw	0
 12161  082F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12162                           
 12163                           ;EEPROM_24C1025.c: 84:      if(mem_add>0x1FFFF) return;
 12164  0830  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12165  0831  1D03               	btfss	3,2
 12166  0832  0008               	return
 12167  0833  3002               	movlw	2
 12168  0834  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12169  0835  1D03               	skipz
 12170  0836  283F               	goto	u5743
 12171  0837  3000               	movlw	0
 12172  0838  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12173  0839  1D03               	skipz
 12174  083A  283F               	goto	u5743
 12175  083B  3000               	movlw	0
 12176  083C  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12177  083D  1D03               	skipz
 12178  083E  283F               	goto	u5743
 12179  083F                     u5743:	
 12180  083F  1803               	btfsc	3,0
 12181  0840  0008               	return
 12182                           
 12183                           ;EEPROM_24C1025.c: 86:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12184  0841  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12185  0842  1D03               	btfss	3,2
 12186  0843  2852               	goto	l5928
 12187  0844  3001               	movlw	1
 12188  0845  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12189  0846  1D03               	skipz
 12190  0847  2850               	goto	u5753
 12191  0848  3000               	movlw	0
 12192  0849  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12193  084A  1D03               	skipz
 12194  084B  2850               	goto	u5753
 12195  084C  3000               	movlw	0
 12196  084D  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12197  084E  1D03               	skipz
 12198  084F  2850               	goto	u5753
 12199  0850                     u5753:	
 12200  0850  1C03               	btfss	3,0
 12201  0851  2857               	goto	l5930
 12202  0852                     l5928:	
 12203  0852  3008               	movlw	8
 12204  0853  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12205  0854  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12206  0855  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12207  0856  2858               	goto	l5932
 12208  0857                     l5930:	
 12209  0857  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12210  0858                     l5932:	
 12211                           
 12212                           ;EEPROM_24C1025.c: 87:      ctrl=chip_add;
 12213  0858  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12214  0859  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12215  085A  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12216  085B  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12217                           
 12218                           ;EEPROM_24C1025.c: 88:      ctrl<<=1;
 12219  085C  1003               	clrc
 12220  085D  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12221                           
 12222                           ;EEPROM_24C1025.c: 89:      ctrl |= 0xA0;
 12223  085E  30A0               	movlw	160
 12224  085F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12225  0860  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12226  0861  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12227                           
 12228                           ;EEPROM_24C1025.c: 90:      ctrl |= 0b00000001;
 12229  0862  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12230                           
 12231                           ;EEPROM_24C1025.c: 91:      ctrl |= range;
 12232  0863  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12233  0864  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12234  0865  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12235  0866  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12236                           
 12237                           ;EEPROM_24C1025.c: 93:      I2C_Master_Start();
 12238  0867  160A  158A  214A  120A  158A  	fcall	_I2C_Master_Start
 12239                           
 12240                           ;EEPROM_24C1025.c: 94:      I2C_Master_Write(ctrl & 0xFE);
 12241  086C  1283               	bcf	3,5	;RP0=0, select bank0
 12242  086D  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12243  086E  39FE               	andlw	254
 12244  086F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12245  0870  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12246  0871  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12247  0872  00A0               	movwf	I2C_Master_Write@d
 12248  0873  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12249  0874  00A1               	movwf	I2C_Master_Write@d+1
 12250  0875  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12251                           
 12252                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(((char *)&mem_add)[1]);
 12253  087A  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12254  087B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12255  087C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12256  087D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12257  087E  00A0               	movwf	I2C_Master_Write@d
 12258  087F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12259  0880  00A1               	movwf	I2C_Master_Write@d+1
 12260  0881  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12261                           
 12262                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[0]);
 12263  0886  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12264  0887  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12265  0888  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12266  0889  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12267  088A  00A0               	movwf	I2C_Master_Write@d
 12268  088B  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12269  088C  00A1               	movwf	I2C_Master_Write@d+1
 12270  088D  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12271                           
 12272                           ;EEPROM_24C1025.c: 97:      I2C_Master_RepeatedStart();
 12273  0892  160A  158A  2135  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12274                           
 12275                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl);
 12276  0897  1283               	bcf	3,5	;RP0=0, select bank0
 12277  0898  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12278  0899  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12279  089A  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12280  089B  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12281  089C  00A0               	movwf	I2C_Master_Write@d
 12282  089D  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12283  089E  00A1               	movwf	I2C_Master_Write@d+1
 12284  089F  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12285                           
 12286                           ;EEPROM_24C1025.c: 100:      for(char cnt=0;cnt<(sizedata);cnt++)
 12287  08A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1528
 12288  08A5                     l6006:	
 12289  08A5  082A               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12290  08A6  0230               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1528,w
 12291  08A7  1803               	btfsc	3,0
 12292  08A8  2984               	goto	l6008
 12293                           
 12294                           ;EEPROM_24C1025.c: 101:         {;EEPROM_24C1025.c: 102:            if(mem_add>0x1FFFF) 
      +                          break;
 12295  08A9  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12296  08AA  1D03               	btfss	3,2
 12297  08AB  2984               	goto	l6008
 12298  08AC  3002               	movlw	2
 12299  08AD  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12300  08AE  1D03               	skipz
 12301  08AF  28B8               	goto	u5763
 12302  08B0  3000               	movlw	0
 12303  08B1  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12304  08B2  1D03               	skipz
 12305  08B3  28B8               	goto	u5763
 12306  08B4  3000               	movlw	0
 12307  08B5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12308  08B6  1D03               	skipz
 12309  08B7  28B8               	goto	u5763
 12310  08B8                     u5763:	
 12311  08B8  1803               	btfsc	3,0
 12312  08B9  2984               	goto	l6008
 12313                           
 12314                           ;EEPROM_24C1025.c: 103:            if((mem_add+1)%128==0)
 12315  08BA  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12316  08BB  3E01               	addlw	1
 12317  08BC  397F               	andlw	127
 12318  08BD  1D03               	btfss	3,2
 12319  08BE  2959               	goto	l5998
 12320                           
 12321                           ;EEPROM_24C1025.c: 104:              {;EEPROM_24C1025.c: 105:              (*data)=I2C_M
      +                          aster_Read(0);
 12322  08BF  3000               	movlw	0
 12323  08C0  00A0               	movwf	I2C_Master_Read@a
 12324  08C1  00A1               	movwf	I2C_Master_Read@a+1
 12325  08C2  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12326  08C7  0820               	movf	?_I2C_Master_Read,w
 12327  08C8  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12328  08C9  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12329  08CA  0084               	movwf	4
 12330  08CB  1783               	bsf	3,7
 12331  08CC  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12332  08CD  1383               	bcf	3,7
 12333  08CE  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12334  08CF  0080               	movwf	0
 12335                           
 12336                           ;EEPROM_24C1025.c: 106:              I2C_Master_Stop();
 12337  08D0  160A  158A  2130  120A  158A  	fcall	_I2C_Master_Stop
 12338                           
 12339                           ;EEPROM_24C1025.c: 108:              _delay((unsigned long)((5)*(8000000/4000.0)));
 12340  08D5  300D               	movlw	13
 12341  08D6  1283               	bcf	3,5	;RP0=0, select bank0
 12342  08D7  1303               	bcf	3,6	;RP1=0, select bank0
 12343  08D8  00AE               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 12344  08D9  30FB               	movlw	251
 12345  08DA  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12346  08DB                     u8107:	
 12347  08DB  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12348  08DC  28DB               	goto	u8107
 12349  08DD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 12350  08DE  28DB               	goto	u8107
 12351                           
 12352                           ;EEPROM_24C1025.c: 109:              mem_add++;
 12353  08DF  3001               	movlw	1
 12354  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 12355  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 12356  08E2  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12357  08E3  3000               	movlw	0
 12358  08E4  1803               	skipnc
 12359  08E5  3001               	movlw	1
 12360  08E6  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12361  08E7  3000               	movlw	0
 12362  08E8  1803               	skipnc
 12363  08E9  3001               	movlw	1
 12364  08EA  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12365  08EB  3000               	movlw	0
 12366  08EC  1803               	skipnc
 12367  08ED  3001               	movlw	1
 12368  08EE  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12369                           
 12370                           ;EEPROM_24C1025.c: 110:              data++;
 12371  08EF  3001               	movlw	1
 12372  08F0  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12373  08F1  1803               	skipnc
 12374  08F2  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12375  08F3  3000               	movlw	0
 12376  08F4  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12377                           
 12378                           ;EEPROM_24C1025.c: 111:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12379  08F5  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12380  08F6  1D03               	btfss	3,2
 12381  08F7  2906               	goto	l5972
 12382  08F8  3001               	movlw	1
 12383  08F9  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12384  08FA  1D03               	skipz
 12385  08FB  2904               	goto	u5783
 12386  08FC  3000               	movlw	0
 12387  08FD  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12388  08FE  1D03               	skipz
 12389  08FF  2904               	goto	u5783
 12390  0900  3000               	movlw	0
 12391  0901  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12392  0902  1D03               	skipz
 12393  0903  2904               	goto	u5783
 12394  0904                     u5783:	
 12395  0904  1C03               	btfss	3,0
 12396  0905  290B               	goto	l5974
 12397  0906                     l5972:	
 12398  0906  3008               	movlw	8
 12399  0907  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12400  0908  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12401  0909  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12402  090A  290C               	goto	l5976
 12403  090B                     l5974:	
 12404  090B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12405  090C                     l5976:	
 12406                           
 12407                           ;EEPROM_24C1025.c: 112:              ctrl=chip_add;
 12408  090C  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12409  090D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12410  090E  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12411  090F  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12412                           
 12413                           ;EEPROM_24C1025.c: 113:              ctrl<<=1;
 12414  0910  1003               	clrc
 12415  0911  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12416                           
 12417                           ;EEPROM_24C1025.c: 114:              ctrl |= 0xA0;
 12418  0912  30A0               	movlw	160
 12419  0913  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12420  0914  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12421  0915  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12422                           
 12423                           ;EEPROM_24C1025.c: 115:              ctrl |= 0b00000001;
 12424  0916  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12425                           
 12426                           ;EEPROM_24C1025.c: 116:              ctrl |= range;
 12427  0917  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12428  0918  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12429  0919  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12430  091A  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12431                           
 12432                           ;EEPROM_24C1025.c: 118:              I2C_Master_Start();
 12433  091B  160A  158A  214A  120A  158A  	fcall	_I2C_Master_Start
 12434                           
 12435                           ;EEPROM_24C1025.c: 119:              I2C_Master_Write(ctrl & 0xFE);
 12436  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12437  0921  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12438  0922  39FE               	andlw	254
 12439  0923  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12440  0924  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12441  0925  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12442  0926  00A0               	movwf	I2C_Master_Write@d
 12443  0927  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12444  0928  00A1               	movwf	I2C_Master_Write@d+1
 12445  0929  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12446                           
 12447                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(((char *)&mem_add)[1]);
 12448  092E  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12449  092F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12450  0930  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12451  0931  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12452  0932  00A0               	movwf	I2C_Master_Write@d
 12453  0933  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12454  0934  00A1               	movwf	I2C_Master_Write@d+1
 12455  0935  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12456                           
 12457                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[0]);
 12458  093A  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12459  093B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12460  093C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12461  093D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12462  093E  00A0               	movwf	I2C_Master_Write@d
 12463  093F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12464  0940  00A1               	movwf	I2C_Master_Write@d+1
 12465  0941  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12466                           
 12467                           ;EEPROM_24C1025.c: 122:              I2C_Master_RepeatedStart();
 12468  0946  160A  158A  2135  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12469                           
 12470                           ;EEPROM_24C1025.c: 123:              I2C_Master_Write(ctrl);
 12471  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12472  094C  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12473  094D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12474  094E  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12475  094F  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12476  0950  00A0               	movwf	I2C_Master_Write@d
 12477  0951  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12478  0952  00A1               	movwf	I2C_Master_Write@d+1
 12479  0953  160A  158A  2153  120A  158A  	fcall	_I2C_Master_Write
 12480                           
 12481                           ;EEPROM_24C1025.c: 124:              }
 12482  0958  297F               	goto	l6004
 12483  0959                     l5998:	
 12484                           
 12485                           ;EEPROM_24C1025.c: 126:              {;EEPROM_24C1025.c: 127:              (*data)=I2C_M
      +                          aster_Read(1);
 12486  0959  3001               	movlw	1
 12487  095A  00A0               	movwf	I2C_Master_Read@a
 12488  095B  3000               	movlw	0
 12489  095C  00A1               	movwf	I2C_Master_Read@a+1
 12490  095D  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12491  0962  0820               	movf	?_I2C_Master_Read,w
 12492  0963  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12493  0964  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12494  0965  0084               	movwf	4
 12495  0966  1783               	bsf	3,7
 12496  0967  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12497  0968  1383               	bcf	3,7
 12498  0969  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12499  096A  0080               	movwf	0
 12500                           
 12501                           ;EEPROM_24C1025.c: 128:              data++;
 12502  096B  3001               	movlw	1
 12503  096C  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12504  096D  1803               	skipnc
 12505  096E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12506  096F  3000               	movlw	0
 12507  0970  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12508                           
 12509                           ;EEPROM_24C1025.c: 129:              mem_add++;
 12510  0971  3001               	movlw	1
 12511  0972  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12512  0973  3000               	movlw	0
 12513  0974  1803               	skipnc
 12514  0975  3001               	movlw	1
 12515  0976  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12516  0977  3000               	movlw	0
 12517  0978  1803               	skipnc
 12518  0979  3001               	movlw	1
 12519  097A  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12520  097B  3000               	movlw	0
 12521  097C  1803               	skipnc
 12522  097D  3001               	movlw	1
 12523  097E  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12524  097F                     l6004:	
 12525                           
 12526                           ;EEPROM_24C1025.c: 131:         }
 12527  097F  3001               	movlw	1
 12528  0980  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12529  0981  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12530  0982  07B0               	addwf	EEPROM_24C1025_Read_Buffer@cnt_1528,f
 12531  0983  28A5               	goto	l6006
 12532  0984                     l6008:	
 12533                           
 12534                           ;EEPROM_24C1025.c: 132:         I2C_Master_Read(0);
 12535  0984  3000               	movlw	0
 12536  0985  00A0               	movwf	I2C_Master_Read@a
 12537  0986  00A1               	movwf	I2C_Master_Read@a+1
 12538  0987  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12539                           
 12540                           ;EEPROM_24C1025.c: 133:         I2C_Master_Stop();
 12541  098C  160A  158A  2130  120A  158A  	fcall	_I2C_Master_Stop
 12542                           
 12543                           ;EEPROM_24C1025.c: 134:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12544  0991  30B9               	movlw	185
 12545  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12546  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12547  0994  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12548  0995                     u8117:	
 12549  0995  2996               	nop2
 12550  0996  2997               	nop2
 12551  0997  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12552  0998  2995               	goto	u8117
 12553  0999  299A               	nop2
 12554  099A  0008               	return
 12555  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12556                           
 12557                           	psect	text54
 12558  1935                     __ptext54:	
 12559 ;; *************** function _I2C_Master_RepeatedStart *****************
 12560 ;; Defined at:
 12561 ;;		line 52 in file "I2C.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;		None
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;		None
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  1    wreg      void 
 12568 ;; Registers used:
 12569 ;;		wreg, status,2, status,0, pclath, cstack
 12570 ;; Tracked objects:
 12571 ;;		On entry : 300/0
 12572 ;;		On exit  : 300/100
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12575 ;;      Params:         0       0       0       0       0
 12576 ;;      Locals:         0       0       0       0       0
 12577 ;;      Temps:          0       0       0       0       0
 12578 ;;      Totals:         0       0       0       0       0
 12579 ;;Total ram usage:        0 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    2
 12582 ;; This function calls:
 12583 ;;		_I2C_Master_Wait
 12584 ;; This function is called by:
 12585 ;;		_EEPROM_24C1025_Read_Buffer
 12586 ;;		_EEPROM_24C1025_Read_Str
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           
 12591                           ;psect for function _I2C_Master_RepeatedStart
 12592  1935                     _I2C_Master_RepeatedStart:	
 12593                           
 12594                           ;I2C.c: 54:   I2C_Master_Wait();
 12595                           
 12596                           ;incstack = 0
 12597                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12598  1935  160A  158A  213A   	fcall	_I2C_Master_Wait
 12599                           
 12600                           ;I2C.c: 55:   RSEN = 1;
 12601  1938  1491               	bsf	17,1	;volatile
 12602  1939  0008               	return
 12603  193A                     __end_of_I2C_Master_RepeatedStart:	
 12604                           
 12605                           	psect	text55
 12606  1BFD                     __ptext55:	
 12607 ;; *************** function _I2C_Master_Read *****************
 12608 ;; Defined at:
 12609 ;;		line 71 in file "I2C.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  a               2    0[BANK0 ] unsigned short 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  temp            2    4[BANK0 ] unsigned short 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  2    0[BANK0 ] unsigned short 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0, pclath, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 300/0
 12620 ;;		On exit  : 300/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12623 ;;      Params:         0       2       0       0       0
 12624 ;;      Locals:         0       2       0       0       0
 12625 ;;      Temps:          0       2       0       0       0
 12626 ;;      Totals:         0       6       0       0       0
 12627 ;;Total ram usage:        6 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    2
 12630 ;; This function calls:
 12631 ;;		_I2C_Master_Wait
 12632 ;; This function is called by:
 12633 ;;		_EEPROM_24C1025_Read_Buffer
 12634 ;;		_EEPROM_24C1025_Read_Str
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           
 12639                           ;psect for function _I2C_Master_Read
 12640  1BFD                     _I2C_Master_Read:	
 12641                           
 12642                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12643                           
 12644                           ;incstack = 0
 12645                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12646  1BFD  1683               	bsf	3,5	;RP0=1, select bank1
 12647  1BFE  17E9               	bsf	_generic_status^(0+128),7
 12648                           
 12649                           ;I2C.c: 75:   I2C_Master_Wait();
 12650  1BFF  160A  158A  213A  160A  158A  	fcall	_I2C_Master_Wait
 12651                           
 12652                           ;I2C.c: 76:   RCEN = 1;
 12653  1C04  1591               	bsf	17,3	;volatile
 12654                           
 12655                           ;I2C.c: 77:   I2C_Master_Wait();
 12656  1C05  160A  158A  213A  160A  158A  	fcall	_I2C_Master_Wait
 12657                           
 12658                           ;I2C.c: 78:   temp = SSPBUF;
 12659  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
 12660  1C0B  0813               	movf	19,w	;volatile
 12661  1C0C  00A2               	movwf	??_I2C_Master_Read
 12662  1C0D  01A3               	clrf	??_I2C_Master_Read+1
 12663  1C0E  0822               	movf	??_I2C_Master_Read,w
 12664  1C0F  00A4               	movwf	I2C_Master_Read@temp
 12665  1C10  0823               	movf	??_I2C_Master_Read+1,w
 12666  1C11  00A5               	movwf	I2C_Master_Read@temp+1
 12667                           
 12668                           ;I2C.c: 79:   I2C_Master_Wait();
 12669  1C12  160A  158A  213A  160A  158A  	fcall	_I2C_Master_Wait
 12670                           
 12671                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12672  1C17  1283               	bcf	3,5	;RP0=0, select bank0
 12673  1C18  0820               	movf	I2C_Master_Read@a,w
 12674  1C19  0421               	iorwf	I2C_Master_Read@a+1,w
 12675  1C1A  1D03               	btfss	3,2
 12676  1C1B  2C20               	goto	u5440
 12677  1C1C  1683               	bsf	3,5	;RP0=1, select bank1
 12678  1C1D  1303               	bcf	3,6	;RP1=0, select bank1
 12679  1C1E  1691               	bsf	17,5	;volatile
 12680  1C1F  2C23               	goto	l5704
 12681  1C20                     u5440:	
 12682  1C20  1683               	bsf	3,5	;RP0=1, select bank1
 12683  1C21  1303               	bcf	3,6	;RP1=0, select bank1
 12684  1C22  1291               	bcf	17,5	;volatile
 12685  1C23                     l5704:	
 12686                           
 12687                           ;I2C.c: 81:   ACKEN = 1;
 12688  1C23  1611               	bsf	17,4	;volatile
 12689                           
 12690                           ;I2C.c: 82:   return temp;
 12691  1C24  1283               	bcf	3,5	;RP0=0, select bank0
 12692  1C25  0825               	movf	I2C_Master_Read@temp+1,w
 12693  1C26  00A1               	movwf	?_I2C_Master_Read+1
 12694  1C27  0824               	movf	I2C_Master_Read@temp,w
 12695  1C28  00A0               	movwf	?_I2C_Master_Read
 12696  1C29  0008               	return
 12697  1C2A                     __end_of_I2C_Master_Read:	
 12698                           
 12699                           	psect	text56
 12700  1010                     __ptext56:	
 12701 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12702 ;; Defined at:
 12703 ;;		line 287 in file "EEPROM_24C1025.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  chip_add        1    wreg     unsigned char 
 12706 ;;  value           1   15[BANK0 ] unsigned char 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  chip_add        1   19[BANK0 ] unsigned char 
 12709 ;;  page            2   21[BANK0 ] unsigned int 
 12710 ;;  i               1   20[BANK0 ] unsigned char 
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 300/300
 12717 ;;		On exit  : 300/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12720 ;;      Params:         0       1       0       0       0
 12721 ;;      Locals:         0       4       0       0       0
 12722 ;;      Temps:          0       3       0       0       0
 12723 ;;      Totals:         0       8       0       0       0
 12724 ;;Total ram usage:        8 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    4
 12727 ;; This function calls:
 12728 ;;		_EEPROM_24C1025_Write_Buffer
 12729 ;; This function is called by:
 12730 ;;		_Decodify_Command
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           
 12735                           ;psect for function _EEPROM_24C1025_Fill_All
 12736  1010                     _EEPROM_24C1025_Fill_All:	
 12737                           
 12738                           ;incstack = 0
 12739                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12740                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12741  1010  1283               	bcf	3,5	;RP0=0, select bank0
 12742  1011  1303               	bcf	3,6	;RP1=0, select bank0
 12743  1012  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12744                           
 12745                           ;EEPROM_24C1025.c: 291:      for(i=0;i<128;i++) buffer[i]=value;
 12746  1013  01B4               	clrf	EEPROM_24C1025_Fill_All@i
 12747  1014                     l6804:	
 12748  1014  082F               	movf	EEPROM_24C1025_Fill_All@value,w
 12749  1015  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12750  1016  0834               	movf	EEPROM_24C1025_Fill_All@i,w
 12751  1017  3E10               	addlw	(low (_buffer| (0+256)))& (0+255)
 12752  1018  0084               	movwf	4
 12753  1019  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12754  101A  1783               	bsf	3,7	;select IRP bank2
 12755  101B  0080               	movwf	0
 12756  101C  3001               	movlw	1
 12757  101D  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12758  101E  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12759  101F  07B4               	addwf	EEPROM_24C1025_Fill_All@i,f
 12760  1020  3080               	movlw	128
 12761  1021  0234               	subwf	EEPROM_24C1025_Fill_All@i,w
 12762  1022  1C03               	skipc
 12763  1023  2814               	goto	l6804
 12764                           
 12765                           ;EEPROM_24C1025.c: 292:      for(page=0;page<1024;page++)
 12766  1024  01B5               	clrf	EEPROM_24C1025_Fill_All@page
 12767  1025  01B6               	clrf	EEPROM_24C1025_Fill_All@page+1
 12768  1026                     l6816:	
 12769                           
 12770                           ;EEPROM_24C1025.c: 293:         {;EEPROM_24C1025.c: 294:         EEPROM_24C1025_Write_Bu
      +                          ffer(chip_add, (page*128), 128, buffer);
 12771  1026  0836               	movf	EEPROM_24C1025_Fill_All@page+1,w
 12772  1027  00B1               	movwf	??_EEPROM_24C1025_Fill_All+1
 12773  1028  0835               	movf	EEPROM_24C1025_Fill_All@page,w
 12774  1029  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12775  102A  3007               	movlw	7
 12776  102B  00FF               	movwf	127
 12777  102C                     u7145:	
 12778  102C  1003               	clrc
 12779  102D  0DB0               	rlf	??_EEPROM_24C1025_Fill_All,f
 12780  102E  0DB1               	rlf	??_EEPROM_24C1025_Fill_All+1,f
 12781  102F  0BFF               	decfsz	127,f
 12782  1030  282C               	goto	u7145
 12783  1031  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12784  1032  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12785  1033  0831               	movf	??_EEPROM_24C1025_Fill_All+1,w
 12786  1034  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12787  1035  01A4               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12788  1036  01A5               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12789  1037  3080               	movlw	128
 12790  1038  00B2               	movwf	??_EEPROM_24C1025_Fill_All+2
 12791  1039  0832               	movf	??_EEPROM_24C1025_Fill_All+2,w
 12792  103A  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12793  103B  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
 12794  103C  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12795  103D  3001               	movlw	1
 12796  103E  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12797  103F  0833               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12798  1040  160A  118A  2532  160A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
 12799                           
 12800                           ;EEPROM_24C1025.c: 295:         }
 12801  1045  3001               	movlw	1
 12802  1046  1283               	bcf	3,5	;RP0=0, select bank0
 12803  1047  1303               	bcf	3,6	;RP1=0, select bank0
 12804  1048  07B5               	addwf	EEPROM_24C1025_Fill_All@page,f
 12805  1049  1803               	skipnc
 12806  104A  0AB6               	incf	EEPROM_24C1025_Fill_All@page+1,f
 12807  104B  3000               	movlw	0
 12808  104C  07B6               	addwf	EEPROM_24C1025_Fill_All@page+1,f
 12809  104D  3004               	movlw	4
 12810  104E  0236               	subwf	EEPROM_24C1025_Fill_All@page+1,w
 12811  104F  3000               	movlw	0
 12812  1050  1903               	skipnz
 12813  1051  0235               	subwf	EEPROM_24C1025_Fill_All@page,w
 12814  1052  1803               	btfsc	3,0
 12815  1053  0008               	return
 12816  1054  2826               	goto	l6816
 12817  1055                     __end_of_EEPROM_24C1025_Fill_All:	
 12818                           
 12819                           	psect	text57
 12820  1532                     __ptext57:	
 12821 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12822 ;; Defined at:
 12823 ;;		line 12 in file "EEPROM_24C1025.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  chip_add        1    wreg     unsigned char 
 12826 ;;  mem_add         4    2[BANK0 ] unsigned long 
 12827 ;;  sizedata        1    6[BANK0 ] unsigned char 
 12828 ;;  data            2    7[BANK0 ] PTR unsigned char 
 12829 ;;		 -> EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(1), buffer(64), usart_protocol.value(10), 
 12830 ;;		 -> usart_protocol(16), 
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;  chip_add        1   12[BANK0 ] unsigned char 
 12833 ;;  ctrl            1   14[BANK0 ] unsigned char 
 12834 ;;  range           1   13[BANK0 ] unsigned char 
 12835 ;;  count           1   11[BANK0 ] unsigned char 
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  1    wreg      void 
 12838 ;; Registers used:
 12839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12840 ;; Tracked objects:
 12841 ;;		On entry : 0/300
 12842 ;;		On exit  : 0/0
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12845 ;;      Params:         0       7       0       0       0
 12846 ;;      Locals:         0       4       0       0       0
 12847 ;;      Temps:          0       2       0       0       0
 12848 ;;      Totals:         0      13       0       0       0
 12849 ;;Total ram usage:       13 bytes
 12850 ;; Hardware stack levels used:    1
 12851 ;; Hardware stack levels required when called:    3
 12852 ;; This function calls:
 12853 ;;		_I2C_Master_Start
 12854 ;;		_I2C_Master_Stop
 12855 ;;		_I2C_Master_Write
 12856 ;; This function is called by:
 12857 ;;		_Decodify_Command
 12858 ;;		_EEPROM_24C1025_Write_Byte
 12859 ;;		_EEPROM_24C1025_Write_Int
 12860 ;;		_EEPROM_24C1025_Fill_All
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           
 12865                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12866  1532                     _EEPROM_24C1025_Write_Buffer:	
 12867                           
 12868                           ;incstack = 0
 12869                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 12870                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12871  1532  1283               	bcf	3,5	;RP0=0, select bank0
 12872  1533  1303               	bcf	3,6	;RP1=0, select bank0
 12873  1534  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12874                           
 12875                           ;EEPROM_24C1025.c: 18:      unsigned char ctrl;;EEPROM_24C1025.c: 19:      unsigned char
      +                           count;;EEPROM_24C1025.c: 21:      Delay_Led_Memory=20;
 12876  1535  3014               	movlw	20
 12877  1536  00FA               	movwf	_Delay_Led_Memory	;volatile
 12878  1537  3000               	movlw	0
 12879  1538  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12880                           
 12881                           ;EEPROM_24C1025.c: 23:      if(mem_add>0x1FFFF) return;
 12882  1539  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12883  153A  1D03               	btfss	3,2
 12884  153B  0008               	return
 12885  153C  3002               	movlw	2
 12886  153D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12887  153E  1D03               	skipz
 12888  153F  2D48               	goto	u5463
 12889  1540  3000               	movlw	0
 12890  1541  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12891  1542  1D03               	skipz
 12892  1543  2D48               	goto	u5463
 12893  1544  3000               	movlw	0
 12894  1545  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12895  1546  1D03               	skipz
 12896  1547  2D48               	goto	u5463
 12897  1548                     u5463:	
 12898  1548  1803               	btfsc	3,0
 12899  1549  0008               	return
 12900                           
 12901                           ;EEPROM_24C1025.c: 25:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12902  154A  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12903  154B  1D03               	btfss	3,2
 12904  154C  2D5B               	goto	l5726
 12905  154D  3001               	movlw	1
 12906  154E  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12907  154F  1D03               	skipz
 12908  1550  2D59               	goto	u5473
 12909  1551  3000               	movlw	0
 12910  1552  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12911  1553  1D03               	skipz
 12912  1554  2D59               	goto	u5473
 12913  1555  3000               	movlw	0
 12914  1556  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12915  1557  1D03               	skipz
 12916  1558  2D59               	goto	u5473
 12917  1559                     u5473:	
 12918  1559  1C03               	btfss	3,0
 12919  155A  2D60               	goto	l5728
 12920  155B                     l5726:	
 12921  155B  3008               	movlw	8
 12922  155C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12923  155D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12924  155E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 12925  155F  2D61               	goto	l5730
 12926  1560                     l5728:	
 12927  1560  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 12928  1561                     l5730:	
 12929                           
 12930                           ;EEPROM_24C1025.c: 26:      ctrl=chip_add;
 12931  1561  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12932  1562  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12933  1563  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12934  1564  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12935                           
 12936                           ;EEPROM_24C1025.c: 27:      ctrl<<=1;
 12937  1565  1003               	clrc
 12938  1566  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12939                           
 12940                           ;EEPROM_24C1025.c: 28:      ctrl |= 0xA0;
 12941  1567  30A0               	movlw	160
 12942  1568  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12943  1569  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12944  156A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12945                           
 12946                           ;EEPROM_24C1025.c: 29:      ctrl |= range;
 12947  156B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12948  156C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12949  156D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12950  156E  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12951                           
 12952                           ;EEPROM_24C1025.c: 31:      I2C_Master_Start();
 12953  156F  160A  158A  214A  160A  118A  	fcall	_I2C_Master_Start
 12954                           
 12955                           ;EEPROM_24C1025.c: 32:      I2C_Master_Write(ctrl);
 12956  1574  1283               	bcf	3,5	;RP0=0, select bank0
 12957  1575  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12958  1576  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12959  1577  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12960  1578  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12961  1579  00A0               	movwf	I2C_Master_Write@d
 12962  157A  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12963  157B  00A1               	movwf	I2C_Master_Write@d+1
 12964  157C  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 12965                           
 12966                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(((char *)&mem_add)[1]);
 12967  1581  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12968  1582  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12969  1583  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12970  1584  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12971  1585  00A0               	movwf	I2C_Master_Write@d
 12972  1586  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12973  1587  00A1               	movwf	I2C_Master_Write@d+1
 12974  1588  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 12975                           
 12976                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[0]);
 12977  158D  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12978  158E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12979  158F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12980  1590  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12981  1591  00A0               	movwf	I2C_Master_Write@d
 12982  1592  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12983  1593  00A1               	movwf	I2C_Master_Write@d+1
 12984  1594  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 12985                           
 12986                           ;EEPROM_24C1025.c: 35:      for(count=0;count<(sizedata-1);count++)
 12987  1599  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 12988  159A                     l5792:	
 12989  159A  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12990  159B  3EFF               	addlw	255
 12991  159C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12992  159D  30FF               	movlw	255
 12993  159E  1803               	skipnc
 12994  159F  3000               	movlw	0
 12995  15A0  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12996  15A1  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12997  15A2  3A80               	xorlw	128
 12998  15A3  3C80               	sublw	128
 12999  15A4  1D03               	skipz
 13000  15A5  2DA8               	goto	u5515
 13001  15A6  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13002  15A7  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 13003  15A8                     u5515:	
 13004  15A8  1803               	btfsc	3,0
 13005  15A9  2E72               	goto	l5794
 13006                           
 13007                           ;EEPROM_24C1025.c: 36:           {;EEPROM_24C1025.c: 37:           if(mem_add>0x1FFFF) r
      +                          eturn;
 13008  15AA  1283               	bcf	3,5	;RP0=0, select bank0
 13009  15AB  1303               	bcf	3,6	;RP1=0, select bank0
 13010  15AC  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13011  15AD  1D03               	btfss	3,2
 13012  15AE  0008               	return
 13013  15AF  3002               	movlw	2
 13014  15B0  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13015  15B1  1D03               	skipz
 13016  15B2  2DBB               	goto	u5483
 13017  15B3  3000               	movlw	0
 13018  15B4  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13019  15B5  1D03               	skipz
 13020  15B6  2DBB               	goto	u5483
 13021  15B7  3000               	movlw	0
 13022  15B8  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13023  15B9  1D03               	skipz
 13024  15BA  2DBB               	goto	u5483
 13025  15BB                     u5483:	
 13026  15BB  1803               	btfsc	3,0
 13027  15BC  0008               	return
 13028                           
 13029                           ;EEPROM_24C1025.c: 38:           if((mem_add+1)%128==0)
 13030  15BD  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13031  15BE  3E01               	addlw	1
 13032  15BF  397F               	andlw	127
 13033  15C0  1D03               	btfss	3,2
 13034  15C1  2E48               	goto	l5784
 13035                           
 13036                           ;EEPROM_24C1025.c: 39:             {;EEPROM_24C1025.c: 40:             I2C_Master_Write(
      +                          *data);
 13037  15C2  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13038  15C3  0084               	movwf	4
 13039  15C4  1783               	bsf	3,7
 13040  15C5  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13041  15C6  1383               	bcf	3,7
 13042  15C7  0800               	movf	0,w
 13043  15C8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13044  15C9  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13045  15CA  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13046  15CB  00A0               	movwf	I2C_Master_Write@d
 13047  15CC  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13048  15CD  00A1               	movwf	I2C_Master_Write@d+1
 13049  15CE  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13050                           
 13051                           ;EEPROM_24C1025.c: 41:             I2C_Master_Stop();
 13052  15D3  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 13053                           
 13054                           ;EEPROM_24C1025.c: 43:             _delay((unsigned long)((5)*(8000000/4000.0)));
 13055  15D8  300D               	movlw	13
 13056  15D9  1283               	bcf	3,5	;RP0=0, select bank0
 13057  15DA  1303               	bcf	3,6	;RP1=0, select bank0
 13058  15DB  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13059  15DC  30FB               	movlw	251
 13060  15DD  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13061  15DE                     u8127:	
 13062  15DE  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13063  15DF  2DDE               	goto	u8127
 13064  15E0  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13065  15E1  2DDE               	goto	u8127
 13066                           
 13067                           ;EEPROM_24C1025.c: 44:             mem_add++;
 13068  15E2  3001               	movlw	1
 13069  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 13070  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 13071  15E5  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13072  15E6  3000               	movlw	0
 13073  15E7  1803               	skipnc
 13074  15E8  3001               	movlw	1
 13075  15E9  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13076  15EA  3000               	movlw	0
 13077  15EB  1803               	skipnc
 13078  15EC  3001               	movlw	1
 13079  15ED  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13080  15EE  3000               	movlw	0
 13081  15EF  1803               	skipnc
 13082  15F0  3001               	movlw	1
 13083  15F1  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13084                           
 13085                           ;EEPROM_24C1025.c: 45:             data++;
 13086  15F2  3001               	movlw	1
 13087  15F3  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13088  15F4  1803               	skipnc
 13089  15F5  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13090  15F6  3000               	movlw	0
 13091  15F7  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13092                           
 13093                           ;EEPROM_24C1025.c: 46:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13094  15F8  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13095  15F9  1D03               	btfss	3,2
 13096  15FA  2E09               	goto	l5764
 13097  15FB  3001               	movlw	1
 13098  15FC  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13099  15FD  1D03               	skipz
 13100  15FE  2E07               	goto	u5503
 13101  15FF  3000               	movlw	0
 13102  1600  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13103  1601  1D03               	skipz
 13104  1602  2E07               	goto	u5503
 13105  1603  3000               	movlw	0
 13106  1604  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13107  1605  1D03               	skipz
 13108  1606  2E07               	goto	u5503
 13109  1607                     u5503:	
 13110  1607  1C03               	btfss	3,0
 13111  1608  2E0E               	goto	l5766
 13112  1609                     l5764:	
 13113  1609  3008               	movlw	8
 13114  160A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13115  160B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13116  160C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13117  160D  2E0F               	goto	l5768
 13118  160E                     l5766:	
 13119  160E  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13120  160F                     l5768:	
 13121                           
 13122                           ;EEPROM_24C1025.c: 47:             ctrl=chip_add;
 13123  160F  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13124  1610  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13125  1611  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13126  1612  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13127                           
 13128                           ;EEPROM_24C1025.c: 48:             ctrl<<=1;
 13129  1613  1003               	clrc
 13130  1614  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13131                           
 13132                           ;EEPROM_24C1025.c: 49:             ctrl |= 0xA0;
 13133  1615  30A0               	movlw	160
 13134  1616  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13135  1617  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13136  1618  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13137                           
 13138                           ;EEPROM_24C1025.c: 50:             ctrl |= range;
 13139  1619  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13140  161A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13141  161B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13142  161C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13143                           
 13144                           ;EEPROM_24C1025.c: 52:             I2C_Master_Start();
 13145  161D  160A  158A  214A  160A  118A  	fcall	_I2C_Master_Start
 13146                           
 13147                           ;EEPROM_24C1025.c: 53:             I2C_Master_Write(ctrl);
 13148  1622  1283               	bcf	3,5	;RP0=0, select bank0
 13149  1623  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13150  1624  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13151  1625  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13152  1626  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13153  1627  00A0               	movwf	I2C_Master_Write@d
 13154  1628  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13155  1629  00A1               	movwf	I2C_Master_Write@d+1
 13156  162A  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13157                           
 13158                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(((char *)&mem_add)[1]);
 13159  162F  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13160  1630  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13161  1631  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13162  1632  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13163  1633  00A0               	movwf	I2C_Master_Write@d
 13164  1634  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13165  1635  00A1               	movwf	I2C_Master_Write@d+1
 13166  1636  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13167                           
 13168                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[0]);
 13169  163B  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13170  163C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13171  163D  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13172  163E  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13173  163F  00A0               	movwf	I2C_Master_Write@d
 13174  1640  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13175  1641  00A1               	movwf	I2C_Master_Write@d+1
 13176  1642  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13177                           
 13178                           ;EEPROM_24C1025.c: 56:             }
 13179  1647  2E6D               	goto	l5790
 13180  1648                     l5784:	
 13181                           
 13182                           ;EEPROM_24C1025.c: 58:             {;EEPROM_24C1025.c: 59:             I2C_Master_Write(
      +                          *data);
 13183  1648  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13184  1649  0084               	movwf	4
 13185  164A  1783               	bsf	3,7
 13186  164B  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13187  164C  1383               	bcf	3,7
 13188  164D  0800               	movf	0,w
 13189  164E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13190  164F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13191  1650  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13192  1651  00A0               	movwf	I2C_Master_Write@d
 13193  1652  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13194  1653  00A1               	movwf	I2C_Master_Write@d+1
 13195  1654  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13196                           
 13197                           ;EEPROM_24C1025.c: 60:             data++;
 13198  1659  3001               	movlw	1
 13199  165A  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13200  165B  1803               	skipnc
 13201  165C  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13202  165D  3000               	movlw	0
 13203  165E  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13204                           
 13205                           ;EEPROM_24C1025.c: 61:             mem_add++;
 13206  165F  3001               	movlw	1
 13207  1660  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13208  1661  3000               	movlw	0
 13209  1662  1803               	skipnc
 13210  1663  3001               	movlw	1
 13211  1664  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13212  1665  3000               	movlw	0
 13213  1666  1803               	skipnc
 13214  1667  3001               	movlw	1
 13215  1668  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13216  1669  3000               	movlw	0
 13217  166A  1803               	skipnc
 13218  166B  3001               	movlw	1
 13219  166C  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13220  166D                     l5790:	
 13221                           
 13222                           ;EEPROM_24C1025.c: 63:      }
 13223  166D  3001               	movlw	1
 13224  166E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13225  166F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13226  1670  07AB               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13227  1671  2D9A               	goto	l5792
 13228  1672                     l5794:	
 13229                           
 13230                           ;EEPROM_24C1025.c: 64:      I2C_Master_Write(*data);
 13231  1672  1283               	bcf	3,5	;RP0=0, select bank0
 13232  1673  1303               	bcf	3,6	;RP1=0, select bank0
 13233  1674  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13234  1675  0084               	movwf	4
 13235  1676  1783               	bsf	3,7
 13236  1677  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13237  1678  1383               	bcf	3,7
 13238  1679  0800               	movf	0,w
 13239  167A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13240  167B  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13241  167C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13242  167D  00A0               	movwf	I2C_Master_Write@d
 13243  167E  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13244  167F  00A1               	movwf	I2C_Master_Write@d+1
 13245  1680  160A  158A  2153  160A  118A  	fcall	_I2C_Master_Write
 13246                           
 13247                           ;EEPROM_24C1025.c: 65:      I2C_Master_Stop();
 13248  1685  160A  158A  2130  160A  118A  	fcall	_I2C_Master_Stop
 13249                           
 13250                           ;EEPROM_24C1025.c: 66:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 13251  168A  30B9               	movlw	185
 13252  168B  1283               	bcf	3,5	;RP0=0, select bank0
 13253  168C  1303               	bcf	3,6	;RP1=0, select bank0
 13254  168D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13255  168E                     u8137:	
 13256  168E  2E8F               	nop2
 13257  168F  2E90               	nop2
 13258  1690  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13259  1691  2E8E               	goto	u8137
 13260  1692  2E93               	nop2
 13261  1693  0008               	return
 13262  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13263                           
 13264                           	psect	text58
 13265  1953                     __ptext58:	
 13266 ;; *************** function _I2C_Master_Write *****************
 13267 ;; Defined at:
 13268 ;;		line 64 in file "I2C.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  d               2    0[BANK0 ] unsigned int 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;		None
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      void 
 13275 ;; Registers used:
 13276 ;;		wreg, status,2, status,0, pclath, cstack
 13277 ;; Tracked objects:
 13278 ;;		On entry : 300/0
 13279 ;;		On exit  : 300/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13282 ;;      Params:         0       2       0       0       0
 13283 ;;      Locals:         0       0       0       0       0
 13284 ;;      Temps:          0       0       0       0       0
 13285 ;;      Totals:         0       2       0       0       0
 13286 ;;Total ram usage:        2 bytes
 13287 ;; Hardware stack levels used:    1
 13288 ;; Hardware stack levels required when called:    2
 13289 ;; This function calls:
 13290 ;;		_I2C_Master_Wait
 13291 ;; This function is called by:
 13292 ;;		_EEPROM_24C1025_Write_Buffer
 13293 ;;		_EEPROM_24C1025_Read_Buffer
 13294 ;;		_EEPROM_24C1025_Write_Str
 13295 ;;		_EEPROM_24C1025_Read_Str
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           
 13300                           ;psect for function _I2C_Master_Write
 13301  1953                     _I2C_Master_Write:	
 13302                           
 13303                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 13304                           
 13305                           ;incstack = 0
 13306                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13307  1953  1683               	bsf	3,5	;RP0=1, select bank1
 13308  1954  17E9               	bsf	_generic_status^(0+128),7
 13309                           
 13310                           ;I2C.c: 67:   I2C_Master_Wait();
 13311  1955  160A  158A  213A   	fcall	_I2C_Master_Wait
 13312                           
 13313                           ;I2C.c: 68:   SSPBUF = d;
 13314  1958  1283               	bcf	3,5	;RP0=0, select bank0
 13315  1959  0820               	movf	I2C_Master_Write@d,w
 13316  195A  0093               	movwf	19	;volatile
 13317  195B  0008               	return
 13318  195C                     __end_of_I2C_Master_Write:	
 13319                           
 13320                           	psect	text59
 13321  1930                     __ptext59:	
 13322 ;; *************** function _I2C_Master_Stop *****************
 13323 ;; Defined at:
 13324 ;;		line 58 in file "I2C.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;		None
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1    wreg      void 
 13331 ;; Registers used:
 13332 ;;		wreg, status,2, status,0, pclath, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 300/800
 13335 ;;		On exit  : 300/100
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13338 ;;      Params:         0       0       0       0       0
 13339 ;;      Locals:         0       0       0       0       0
 13340 ;;      Temps:          0       0       0       0       0
 13341 ;;      Totals:         0       0       0       0       0
 13342 ;;Total ram usage:        0 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:    2
 13345 ;; This function calls:
 13346 ;;		_I2C_Master_Wait
 13347 ;; This function is called by:
 13348 ;;		_EEPROM_24C1025_Write_Buffer
 13349 ;;		_EEPROM_24C1025_Read_Buffer
 13350 ;;		_EEPROM_24C1025_Write_Str
 13351 ;;		_EEPROM_24C1025_Read_Str
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           
 13356                           ;psect for function _I2C_Master_Stop
 13357  1930                     _I2C_Master_Stop:	
 13358                           
 13359                           ;I2C.c: 60:   I2C_Master_Wait();
 13360                           
 13361                           ;incstack = 0
 13362                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13363  1930  160A  158A  213A   	fcall	_I2C_Master_Wait
 13364                           
 13365                           ;I2C.c: 61:   PEN = 1;
 13366  1933  1511               	bsf	17,2	;volatile
 13367  1934  0008               	return
 13368  1935                     __end_of_I2C_Master_Stop:	
 13369                           
 13370                           	psect	text60
 13371  194A                     __ptext60:	
 13372 ;; *************** function _I2C_Master_Start *****************
 13373 ;; Defined at:
 13374 ;;		line 45 in file "I2C.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;		None
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  1    wreg      void 
 13381 ;; Registers used:
 13382 ;;		wreg, status,2, status,0, pclath, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 300/0
 13385 ;;		On exit  : 300/100
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13388 ;;      Params:         0       0       0       0       0
 13389 ;;      Locals:         0       0       0       0       0
 13390 ;;      Temps:          0       0       0       0       0
 13391 ;;      Totals:         0       0       0       0       0
 13392 ;;Total ram usage:        0 bytes
 13393 ;; Hardware stack levels used:    1
 13394 ;; Hardware stack levels required when called:    2
 13395 ;; This function calls:
 13396 ;;		_I2C_Master_Wait
 13397 ;; This function is called by:
 13398 ;;		_EEPROM_24C1025_Write_Buffer
 13399 ;;		_EEPROM_24C1025_Read_Buffer
 13400 ;;		_EEPROM_24C1025_Write_Str
 13401 ;;		_EEPROM_24C1025_Read_Str
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           
 13406                           ;psect for function _I2C_Master_Start
 13407  194A                     _I2C_Master_Start:	
 13408                           
 13409                           ;I2C.c: 47:   Delay_Led_Memory=20;
 13410                           
 13411                           ;incstack = 0
 13412                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13413  194A  3014               	movlw	20
 13414  194B  00FA               	movwf	_Delay_Led_Memory	;volatile
 13415  194C  3000               	movlw	0
 13416  194D  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13417                           
 13418                           ;I2C.c: 48:   I2C_Master_Wait();
 13419  194E  160A  158A  213A   	fcall	_I2C_Master_Wait
 13420                           
 13421                           ;I2C.c: 49:   SEN = 1;
 13422  1951  1411               	bsf	17,0	;volatile
 13423  1952  0008               	return
 13424  1953                     __end_of_I2C_Master_Start:	
 13425                           
 13426                           	psect	text61
 13427  193A                     __ptext61:	
 13428 ;; *************** function _I2C_Master_Wait *****************
 13429 ;; Defined at:
 13430 ;;		line 40 in file "I2C.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2
 13439 ;; Tracked objects:
 13440 ;;		On entry : 200/0
 13441 ;;		On exit  : 300/100
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13444 ;;      Params:         0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:    1
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_I2C_Master_Start
 13455 ;;		_I2C_Master_RepeatedStart
 13456 ;;		_I2C_Master_Stop
 13457 ;;		_I2C_Master_Write
 13458 ;;		_I2C_Master_Read
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           
 13463                           ;psect for function _I2C_Master_Wait
 13464  193A                     _I2C_Master_Wait:	
 13465  193A                     l49:	
 13466                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13467                           
 13468                           ;incstack = 0
 13469                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13470                           
 13471  193A  1683               	bsf	3,5	;RP0=1, select bank1
 13472  193B  1914               	btfsc	20,2	;volatile
 13473  193C  293A               	goto	l49
 13474  193D  0811               	movf	17,w	;volatile
 13475  193E  391F               	andlw	31
 13476  193F  1903               	btfsc	3,2
 13477  1940  0008               	return
 13478  1941  293A               	goto	l49
 13479  1942                     __end_of_I2C_Master_Wait:	
 13480                           
 13481                           	psect	text62
 13482  07F5                     __ptext62:	
 13483 ;; *************** function _ADC_init *****************
 13484 ;; Defined at:
 13485 ;;		line 10 in file "adc.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;		None
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      void 
 13492 ;; Registers used:
 13493 ;;		wreg, status,2, status,0
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/100
 13496 ;;		On exit  : 300/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13499 ;;      Params:         0       0       0       0       0
 13500 ;;      Locals:         0       0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0
 13502 ;;      Totals:         0       0       0       0       0
 13503 ;;Total ram usage:        0 bytes
 13504 ;; Hardware stack levels used:    1
 13505 ;; Hardware stack levels required when called:    1
 13506 ;; This function calls:
 13507 ;;		Nothing
 13508 ;; This function is called by:
 13509 ;;		_main
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           
 13514                           ;psect for function _ADC_init
 13515  07F5                     _ADC_init:	
 13516                           
 13517                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13518                           
 13519                           ;incstack = 0
 13520                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13521  07F5  30C0               	movlw	192
 13522  07F6  1283               	bcf	3,5	;RP0=0, select bank0
 13523  07F7  1303               	bcf	3,6	;RP1=0, select bank0
 13524  07F8  049F               	iorwf	31,f	;volatile
 13525                           
 13526                           ;adc.c: 12:      ADCON1=0b10000000;
 13527  07F9  3080               	movlw	128
 13528  07FA  1683               	bsf	3,5	;RP0=1, select bank1
 13529  07FB  009F               	movwf	31	;volatile
 13530                           
 13531                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13532  07FC  179F               	bsf	31,7	;volatile
 13533                           
 13534                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13535  07FD  1283               	bcf	3,5	;RP0=0, select bank0
 13536  07FE  141F               	bsf	31,0	;volatile
 13537  07FF  0008               	return
 13538  0800                     __end_of_ADC_init:	
 13539                           
 13540                           	psect	text63
 13541  1358                     __ptext63:	
 13542 ;; *************** function _isr *****************
 13543 ;; Defined at:
 13544 ;;		line 29 in file "isr.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;		None
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;  tempo           2    6[COMMON] unsigned int 
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      void 
 13551 ;; Registers used:
 13552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 300/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13558 ;;      Params:         0       0       0       0       0
 13559 ;;      Locals:         2       0       0       0       0
 13560 ;;      Temps:          6       0       0       0       0
 13561 ;;      Totals:         8       0       0       0       0
 13562 ;;Total ram usage:        8 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; This function calls:
 13565 ;;		Nothing
 13566 ;; This function is called by:
 13567 ;;		Interrupt level 1
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           
 13572                           ;psect for function _isr
 13573  1358                     _isr:	
 13574                           
 13575                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13576  1358  188B               	btfsc	11,1	;volatile
 13577                           
 13578                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13579  1359  108B               	bcf	11,1	;volatile
 13580                           
 13581                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13582                           
 13583                           ;isr.c: 37:       }
 13584  135A  1C0C               	btfss	12,0	;volatile
 13585  135B  2BD0               	goto	i1l5592
 13586                           
 13587                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13588  135C  30B1               	movlw	177
 13589  135D  008F               	movwf	15	;volatile
 13590                           
 13591                           ;isr.c: 42:                 TMR1L=0xF3;
 13592  135E  30F3               	movlw	243
 13593  135F  008E               	movwf	14	;volatile
 13594                           
 13595                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13596  1360  100C               	bcf	12,0	;volatile
 13597                           
 13598                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13599  1361  1683               	bsf	3,5	;RP0=1, select bank1
 13600  1362  1FE9               	btfss	_generic_status^(0+128),7
 13601  1363  2B66               	goto	i1l5548
 13602                           
 13603                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13604  1364  13E9               	bcf	_generic_status^(0+128),7
 13605  1365  0064               	clrwdt	;# 
 13606  1366                     i1l5548:	
 13607                           
 13608                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13609  1366  300A               	movlw	10
 13610  1367  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13611  1368  1803               	skipnc
 13612  1369  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13613  136A  3000               	movlw	0
 13614  136B  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13615                           
 13616                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13617  136C  3003               	movlw	3
 13618  136D  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13619  136E  30E8               	movlw	232
 13620  136F  1903               	skipnz
 13621  1370  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13622  1371  1C03               	skipc
 13623  1372  2B75               	goto	i1l5552
 13624                           
 13625                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13626  1373  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13627  1374  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13628  1375                     i1l5552:	
 13629                           
 13630                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13631  1375  3001               	movlw	1
 13632  1376  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13633  1377  30F4               	movlw	244
 13634  1378  1903               	skipnz
 13635  1379  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13636  137A  1803               	skipnc
 13637  137B  2B80               	goto	i1l505
 13638                           
 13639                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13640  137C  1283               	bcf	3,5	;RP0=0, select bank0
 13641  137D  1303               	bcf	3,6	;RP1=0, select bank0
 13642  137E  1786               	bsf	6,7	;volatile
 13643  137F  2B83               	goto	i1l5556
 13644  1380                     i1l505:	
 13645                           ;isr.c: 56:                 else
 13646                           
 13647                           
 13648                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13649  1380  1283               	bcf	3,5	;RP0=0, select bank0
 13650  1381  1303               	bcf	3,6	;RP1=0, select bank0
 13651  1382  1386               	bcf	6,7	;volatile
 13652  1383                     i1l5556:	
 13653                           
 13654                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13655  1383  1683               	bsf	3,5	;RP0=1, select bank1
 13656  1384  085F               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13657  1385  0460               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13658  1386  1903               	btfsc	3,2
 13659  1387  2B91               	goto	i1l507
 13660                           
 13661                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13662  1388  300A               	movlw	10
 13663  1389  02DF               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13664  138A  3000               	movlw	0
 13665  138B  1C03               	skipc
 13666  138C  03E0               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13667  138D  02E0               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13668                           
 13669                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13670  138E  1283               	bcf	3,5	;RP0=0, select bank0
 13671  138F  1706               	bsf	6,6	;volatile
 13672                           
 13673                           ;isr.c: 63:                    }
 13674  1390  2B93               	goto	i1l5562
 13675  1391                     i1l507:	
 13676                           ;isr.c: 64:                 else{
 13677                           
 13678                           
 13679                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13680  1391  1283               	bcf	3,5	;RP0=0, select bank0
 13681  1392  1306               	bcf	6,6	;volatile
 13682  1393                     i1l5562:	
 13683                           
 13684                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13685  1393  087A               	movf	_Delay_Led_Memory,w	;volatile
 13686  1394  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13687  1395  1903               	btfsc	3,2
 13688  1396  2B9F               	goto	i1l509
 13689                           
 13690                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13691  1397  300A               	movlw	10
 13692  1398  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13693  1399  3000               	movlw	0
 13694  139A  1C03               	skipc
 13695  139B  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13696  139C  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13697                           
 13698                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13699  139D  1686               	bsf	6,5	;volatile
 13700                           
 13701                           ;isr.c: 71:                    }
 13702  139E  2BA0               	goto	i1l5568
 13703  139F                     i1l509:	
 13704                           ;isr.c: 72:                 else{
 13705                           
 13706                           
 13707                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13708  139F  1286               	bcf	6,5	;volatile
 13709  13A0                     i1l5568:	
 13710                           
 13711                           ;isr.c: 77:                 tempodecorrido+=10;
 13712  13A0  300A               	movlw	10
 13713  13A1  1683               	bsf	3,5	;RP0=1, select bank1
 13714  13A2  07D7               	addwf	_tempodecorrido^(0+128),f	;volatile
 13715  13A3  1803               	skipnc
 13716  13A4  0AD8               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13717  13A5  3000               	movlw	0
 13718  13A6  07D8               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13719                           
 13720                           ;isr.c: 78:                 milisegundo+=10;
 13721  13A7  300A               	movlw	10
 13722  13A8  07DD               	addwf	_milisegundo^(0+128),f	;volatile
 13723  13A9  1803               	skipnc
 13724  13AA  0ADE               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13725  13AB  3000               	movlw	0
 13726  13AC  07DE               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13727                           
 13728                           ;isr.c: 79:                 if(milisegundo==1000){
 13729  13AD  30E8               	movlw	232
 13730  13AE  065D               	xorwf	_milisegundo^(0+128),w	;volatile
 13731  13AF  3003               	movlw	3
 13732  13B0  1903               	skipnz
 13733  13B1  065E               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13734  13B2  1D03               	btfss	3,2
 13735  13B3  2BD0               	goto	i1l5592
 13736                           
 13737                           ;isr.c: 80:                    milisegundo=0;
 13738  13B4  01DD               	clrf	_milisegundo^(0+128)	;volatile
 13739  13B5  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13740                           
 13741                           ;isr.c: 81:                    segundo++;
 13742  13B6  3001               	movlw	1
 13743  13B7  00F0               	movwf	??_isr
 13744  13B8  0870               	movf	??_isr,w
 13745  13B9  07E7               	addwf	_segundo^(0+128),f	;volatile
 13746                           
 13747                           ;isr.c: 88:                    if(segundo==60){
 13748  13BA  303C               	movlw	60
 13749  13BB  0667               	xorwf	_segundo^(0+128),w	;volatile
 13750  13BC  1D03               	btfss	3,2
 13751  13BD  2BD0               	goto	i1l5592
 13752                           
 13753                           ;isr.c: 89:                       segundo=0;
 13754  13BE  01E7               	clrf	_segundo^(0+128)	;volatile
 13755                           
 13756                           ;isr.c: 90:                       minuto++;
 13757  13BF  3001               	movlw	1
 13758  13C0  00F0               	movwf	??_isr
 13759  13C1  0870               	movf	??_isr,w
 13760  13C2  07E5               	addwf	_minuto^(0+128),f	;volatile
 13761                           
 13762                           ;isr.c: 91:                       if(minuto==60){
 13763  13C3  303C               	movlw	60
 13764  13C4  0665               	xorwf	_minuto^(0+128),w	;volatile
 13765  13C5  1D03               	btfss	3,2
 13766  13C6  2BD0               	goto	i1l5592
 13767                           
 13768                           ;isr.c: 92:                          minuto=0;
 13769  13C7  01E5               	clrf	_minuto^(0+128)	;volatile
 13770                           
 13771                           ;isr.c: 93:                          hora++;
 13772  13C8  3001               	movlw	1
 13773  13C9  00F0               	movwf	??_isr
 13774  13CA  0870               	movf	??_isr,w
 13775  13CB  07E6               	addwf	_hora^(0+128),f	;volatile
 13776                           
 13777                           ;isr.c: 94:                          if(hora==24){
 13778  13CC  3018               	movlw	24
 13779  13CD  0666               	xorwf	_hora^(0+128),w	;volatile
 13780  13CE  1903               	btfsc	3,2
 13781                           
 13782                           ;isr.c: 95:                             hora=0;
 13783  13CF  01E6               	clrf	_hora^(0+128)	;volatile
 13784  13D0                     i1l5592:	
 13785                           ;isr.c: 99:                 }
 13786                           
 13787                           
 13788                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13789  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 13790  13D1  1E8C               	btfss	12,5	;volatile
 13791  13D2  2C37               	goto	i1l523
 13792                           
 13793                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13794  13D3  1683               	bsf	3,5	;RP0=1, select bank1
 13795  13D4  1469               	bsf	_generic_status^(0+128),0
 13796                           
 13797                           ;isr.c: 109:         tempo=30;
 13798  13D5  301E               	movlw	30
 13799  13D6  00F6               	movwf	isr@tempo
 13800  13D7  3000               	movlw	0
 13801  13D8  00F7               	movwf	isr@tempo+1
 13802                           
 13803                           ;isr.c: 110:         count=0;
 13804  13D9  01D9               	clrf	_count^(0+128)	;volatile
 13805  13DA  01DA               	clrf	(_count+1)^(0+128)	;volatile
 13806                           
 13807                           ;isr.c: 111:         pointer=usart_buffer;
 13808  13DB  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13809  13DC  00F0               	movwf	??_isr
 13810  13DD  0870               	movf	??_isr,w
 13811  13DE  00E1               	movwf	_pointer^(0+128)
 13812  13DF                     i1l5614:	
 13813                           ;isr.c: 112:         while(tempo)
 13814                           
 13815                           
 13816                           ;isr.c: 112:         while(tempo)
 13817  13DF  0876               	movf	isr@tempo,w
 13818  13E0  0477               	iorwf	isr@tempo+1,w
 13819  13E1  1903               	btfsc	3,2
 13820  13E2  2C12               	goto	i1l5616
 13821                           
 13822                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13823  13E3  1283               	bcf	3,5	;RP0=0, select bank0
 13824  13E4  1303               	bcf	3,6	;RP1=0, select bank0
 13825  13E5  1E8C               	btfss	12,5	;volatile
 13826  13E6  2C0B               	goto	i1l5612
 13827                           
 13828                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13829  13E7  081A               	movf	26,w	;volatile
 13830  13E8  00F0               	movwf	??_isr
 13831  13E9  1683               	bsf	3,5	;RP0=1, select bank1
 13832  13EA  0861               	movf	_pointer^(0+128),w
 13833  13EB  0084               	movwf	4
 13834  13EC  0870               	movf	??_isr,w
 13835  13ED  1783               	bsf	3,7	;select IRP bank2
 13836  13EE  0080               	movwf	0
 13837                           
 13838                           ;isr.c: 118:                 if(count<25 -1)
 13839  13EF  085A               	movf	(_count+1)^(0+128),w	;volatile
 13840  13F0  3A80               	xorlw	128
 13841  13F1  00FF               	movwf	127
 13842  13F2  3080               	movlw	128
 13843  13F3  027F               	subwf	127,w
 13844  13F4  1D03               	skipz
 13845  13F5  2BF8               	goto	u538_25
 13846  13F6  3018               	movlw	24
 13847  13F7  0259               	subwf	_count^(0+128),w	;volatile
 13848  13F8                     u538_25:	
 13849  13F8  1803               	skipnc
 13850  13F9  2C06               	goto	i1l5610
 13851                           
 13852                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13853  13FA  3001               	movlw	1
 13854  13FB  1683               	bsf	3,5	;RP0=1, select bank1
 13855  13FC  1303               	bcf	3,6	;RP1=0, select bank1
 13856  13FD  07D9               	addwf	_count^(0+128),f	;volatile
 13857  13FE  1803               	skipnc
 13858  13FF  0ADA               	incf	(_count+1)^(0+128),f	;volatile
 13859  1400  3000               	movlw	0
 13860  1401  07DA               	addwf	(_count+1)^(0+128),f	;volatile
 13861                           
 13862                           ;isr.c: 121:                    pointer++;
 13863  1402  3001               	movlw	1
 13864  1403  00F0               	movwf	??_isr
 13865  1404  0870               	movf	??_isr,w
 13866  1405  07E1               	addwf	_pointer^(0+128),f
 13867  1406                     i1l5610:	
 13868                           
 13869                           ;isr.c: 123:                 tempo=30;
 13870  1406  301E               	movlw	30
 13871  1407  00F6               	movwf	isr@tempo
 13872  1408  3000               	movlw	0
 13873  1409  00F7               	movwf	isr@tempo+1
 13874                           
 13875                           ;isr.c: 124:             }
 13876  140A  2BDF               	goto	i1l5614
 13877  140B                     i1l5612:	
 13878                           
 13879                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13880  140B  3001               	movlw	1
 13881  140C  02F6               	subwf	isr@tempo,f
 13882  140D  3000               	movlw	0
 13883  140E  1C03               	skipc
 13884  140F  03F7               	decf	isr@tempo+1,f
 13885  1410  02F7               	subwf	isr@tempo+1,f
 13886  1411  2BDF               	goto	i1l5614
 13887  1412                     i1l5616:	
 13888                           
 13889                           ;isr.c: 131:         (*pointer)=0;
 13890  1412  1683               	bsf	3,5	;RP0=1, select bank1
 13891  1413  1303               	bcf	3,6	;RP1=0, select bank1
 13892  1414  0861               	movf	_pointer^(0+128),w
 13893  1415  0084               	movwf	4
 13894  1416  1783               	bsf	3,7	;select IRP bank2
 13895  1417  0180               	clrf	0
 13896                           
 13897                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13898  1418  1283               	bcf	3,5	;RP0=0, select bank0
 13899  1419  1C98               	btfss	24,1	;volatile
 13900  141A  2C37               	goto	i1l523
 13901                           
 13902                           ;isr.c: 134:            CREN=0;
 13903  141B  1218               	bcf	24,4	;volatile
 13904                           
 13905                           ;isr.c: 135:            CREN=1;
 13906  141C  1618               	bsf	24,4	;volatile
 13907                           
 13908                           ;isr.c: 136:            tempo=RCREG;
 13909  141D  081A               	movf	26,w	;volatile
 13910  141E  00F0               	movwf	??_isr
 13911  141F  01F1               	clrf	??_isr+1
 13912  1420  0870               	movf	??_isr,w
 13913  1421  00F6               	movwf	isr@tempo
 13914  1422  0871               	movf	??_isr+1,w
 13915  1423  00F7               	movwf	isr@tempo+1
 13916                           
 13917                           ;isr.c: 137:            tempo=RCREG;
 13918  1424  081A               	movf	26,w	;volatile
 13919  1425  00F0               	movwf	??_isr
 13920  1426  01F1               	clrf	??_isr+1
 13921  1427  0870               	movf	??_isr,w
 13922  1428  00F6               	movwf	isr@tempo
 13923  1429  0871               	movf	??_isr+1,w
 13924  142A  00F7               	movwf	isr@tempo+1
 13925                           
 13926                           ;isr.c: 138:            tempo=RCREG;
 13927  142B  081A               	movf	26,w	;volatile
 13928  142C  00F0               	movwf	??_isr
 13929  142D  01F1               	clrf	??_isr+1
 13930  142E  0870               	movf	??_isr,w
 13931  142F  00F6               	movwf	isr@tempo
 13932  1430  0871               	movf	??_isr+1,w
 13933  1431  00F7               	movwf	isr@tempo+1
 13934                           
 13935                           ;isr.c: 139:            usart_buffer[0]=0;
 13936  1432  1683               	bsf	3,5	;RP0=1, select bank3
 13937  1433  1703               	bsf	3,6	;RP1=1, select bank3
 13938  1434  0190               	clrf	_usart_buffer^(0+384)	;volatile
 13939                           
 13940                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13941  1435  1303               	bcf	3,6	;RP1=0, select bank1
 13942  1436  14E9               	bsf	_generic_status^(0+128),1
 13943  1437                     i1l523:	
 13944  1437  0875               	movf	??_isr+5,w
 13945  1438  1283               	bcf	3,5	;RP0=0, select bank0
 13946  1439  00FF               	movwf	127
 13947  143A  0874               	movf	??_isr+4,w
 13948  143B  008A               	movwf	10
 13949  143C  0873               	movf	??_isr+3,w
 13950  143D  0084               	movwf	4
 13951  143E  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13952  143F  0083               	movwf	3
 13953  1440  0EFE               	swapf	126,f
 13954  1441  0E7E               	swapf	126,w
 13955  1442  0009               	retfie
 13956  1443                     __end_of_isr:	
 13957  007E                     btemp	set	126	;btemp
 13958  007E                     wtemp0	set	126
 13959                           
 13960                           	psect	intentry
 13961  0004                     __pintentry:	
 13962                           ;incstack = 0
 13963                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13964                           
 13965  0004                     interrupt_function:	
 13966  007E                     saved_w	set	btemp
 13967  0004  00FE               	movwf	btemp
 13968  0005  0E03               	swapf	3,w
 13969  0006  00F2               	movwf	??_isr+2
 13970  0007  0804               	movf	4,w
 13971  0008  00F3               	movwf	??_isr+3
 13972  0009  080A               	movf	10,w
 13973  000A  00F4               	movwf	??_isr+4
 13974  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13975  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13976  000D  087F               	movf	btemp+1,w
 13977  000E  00F5               	movwf	??_isr+5
 13978  000F  160A  118A  2B58   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    64
    Data        0
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     45      74
    BANK3            96      0      57
    BANK2            96      0      64

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), buffer(BANK2[64]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), buffer(BANK2[64]), usart_protocol.value(BANK3[10]), 
		 -> usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), usart_buffer(BANK3[25]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_PROCULUS_VP_Write_String
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _EEPROM_24C1025_Write_Int->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  111333
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24465
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    49    49      0   84423
                                             62 BANK0      4     4      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   11876
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    5601
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    5136
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              6 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    5489
                                             20 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5455
                                             20 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5229
                                              6 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     605
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              8     7      1    5207
                                             15 BANK0      8     7      1
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4854
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     11F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      39       9       59.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     11F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 02 06:54:25 2020

                              _USART_putc 1000                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l49 193A  
         EEPROM_24C1025_Read_Buffer@range 0032          EEPROM_24C1025_Write_Str@chip_add 0029  
                                      fsr 0004                             _USART_put_int 199A  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 181C              PROCULUS_VP_Write_String@text 005C  
      EEPROM_24C1025_Read_Buffer@cnt_1528 0030                                       l303 0F0F  
                                     l412 1A6C                                       l380 1DA0  
                                     l292 045C                                       l356 1966  
                                     l390 1AD0                                       l294 04B8  
                                     l288 044E                                       l385 1DC5  
                                     l386 1DC6                                       l661 1A12  
                                     l741 1008                                       l678 19D4  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0031  
                Decodify_Command@sizedata 00C8                                       _isr 1358  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1DD5                          _ADC_Media_10bits 1E8B  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1D61  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1D29                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1824  
                                    l1130 11B9                                      l1302 09E7  
                                    l1127 1153                                      l1146 10A2  
                                    l1250 0C25                                      l1324 0B26  
                                    l1252 0C03                                      l1326 0B34  
                                    l1246 0B8C                                      l1407 1FEA  
                                    l1280 0D46                                      l1450 1B1F  
                                    l1354 07A1                                      l1267 0CDE  
                                    l1380 11E9                                      l1288 0D5E  
                                    l1393 123F                                      l1394 1249  
                                    l1386 1229                                      l6004 097F  
                                    l6006 08A5                                      l6008 0984  
                                    l6016 19FE                                      l6120 0B5A  
                                    l6018 1A09                                      l6026 1CFA  
                                    l7002 09B9                                      l6122 0B62  
                                    l7004 09C1                                      l6140 0B81  
                                    l6116 0B57                                      l6046 1D43  
                                    l6062 07D1                                      l6310 04D4  
                                    l7022 09DF                                      l6214 0C54  
                                    l6206 0C33                                      l6150 0B96  
                                    l6048 1D59                                      l6064 07ED  
                                    l6400 0727                                      l6312 04D6  
                                    l6072 1067                                      l7120 0B30  
                                    l7104 0AF3                                      l7032 0A06  
                                    l6216 0C56                                      l6224 0C66  
                                    l6144 0B84                                      l6330 04FB  
                                    l6314 04DE                                      l6090 109E  
                                    l7018 09DC                                      l6250 0CFF  
                                    l6242 0CF0                                      l6234 0CD0  
                                    l6404 0729                                      l6340 0511  
                                    l6332 0503                                      l6068 105E  
                                    l7108 0B0C                                      l6180 0BD2  
                                    l6414 075B                                      l7038 0A12  
                                    l6190 0C10                                      l7142 1D69  
                                    l5704 1C23                                      l6424 078A  
                                    l6328 04F9                                      l6088 108E  
                                    l7320 0138                                      l7312 010F  
                                    l7304 00D5                                      l7064 0A80  
                                    l6264 0D11                                      l6256 0D06  
                                    l5730 1561                                      l6418 0771  
                                    l6098 10B1                                      l7402 0304  
                                    l6442 11E1                                      l7090 0ABF  
                                    l7082 0A8B                                      l7058 0A61  
                                    l7066 0A3D                                      l6290 0D5A  
                                    l6258 0D08                                      l7234 0DF2  
                                    l7226 0DDB                                      l7218 0D93  
                                    l7162 1E22                                      l6700 1341  
                                    l7316 011E                                      l6452 11FC  
                                    l7084 0AA8                                      l7068 0A85  
                                    l6268 0D13                                      l6188 0C0E  
                                    l7252 0F35                                      l5726 155B  
                                    l6518 1B84                                      l6542 1C62  
                                    l5822 1E01                                      l5814 1DDD  
                                    l7342 01A1                                      l7326 0150  
                                    l6462 123D                                      l6454 120E  
                                    l7094 0AC1                                      l6286 0D56  
                                    l6198 0C1F                                      l7182 1E3C  
                                    l5728 1560                                      l6712 16BA  
                                    l5816 1DEB                                      l6392 06F3  
                                    l6624 1B36                                      l5840 1CA1  
                                    l7416 0369                                      l7408 0315  
                                    l7360 01EA                                      l7336 0181  
                                    l6464 122E                                      l6448 11F8  
                                    l7264 0FA3                                      l5930 0857  
                                    l6714 16BF                                      l6634 1294  
                                    l5826 1E0C                                      l6394 0710  
                                    l6570 1F19                                      l6482 1FA1  
                                    l7450 03F5                                      l7426 038F  
                                    l7354 01C9                                      l7258 0F8D  
                                    l5764 1609                                      l6804 1014  
                                    l5932 0858                                      l6716 16C0  
                                    l6636 1299                                      l5844 1CAF  
                                    l6492 1FC0                                      l7444 03DB  
                                    l7436 03B5                                      l7372 0241  
                                    l7348 01AE                                      l7292 007B  
                                    l7284 005E                                      l6476 1266  
                                    l7196 1E43                                      ?_isr 0070  
                                    l5790 166D                                      l5766 160E  
                                    l6638 129A                                      l5838 1C93  
                                    l7462 0422                                      l7366 0211  
                                    l6902 19DC                                      l5768 160F  
                                    l5784 1648                                      l5792 159A  
                                    l6816 1026                                      l5928 0852  
                                    l6760 176C                                      l5880 1DAB  
                                    l5856 1B17                                      l5872 1CC3  
                                    l5848 1CBA                                      l6832 1ABC  
                                    l6840 1A32                                      l7456 0406  
                                    l7392 02C3                                      l7288 006D  
                                    l6920 1E69                                      l5794 1672  
                                    l6738 170D                                      l5882 1DAE  
                                    l6586 1BA9                                      l5874 1CE5  
                                    l7474 0452                                      l7386 029E  
                                    l7378 025F                                      l5972 0906  
                                    l6756 1766                                      l6692 1320  
                                    l6588 1BC6                                      l6852 1BEA  
                                    l7644 046B                                      l7468 0442  
                                    l6940 1F4E                                      l7564 14CB  
                                    l5974 090B                                      l6758 176B  
                                    l6782 17B9                                      l6846 1BD6  
                                    l7398 02E0                                      l7486 0460  
                                    l6950 1F86                                      l6942 1F5E  
                                    l6926 1E7E                                      l7590 14F5  
                                    l5976 090C                                      l6792 17E0  
                                    l6848 1BE0                                      l6880 1EA7  
                                    l6794 17E9                                      l6698 12D2  
                                    l6954 1F93                                      l6964 116D  
                                    l5998 0959                                      l6968 1193  
                                    l6898 19D9                                      _BETA 1848  
                                    l6998 09B6                                      STR_1 1850  
                            __CFG_WDTE$ON 0000                                      STR_2 185B  
                                    STR_3 185A                                      STR_4 185C  
                                    STR_5 185A                                      STR_6 185C  
                                    STR_7 185A                                      STR_8 1857  
                             _statuspower 00E8                           ADC_Max_10Bits@i 0032  
                                    _CREN 00C4                                      u6200 0CA5  
                                    u6201 0CA6                                      u6202 0CAB  
                                    u6050 0BF2                                      u7003 1281  
                                    u6203 0CAC                                      u6060 0BF3  
                                    u7013 1292                                      u6045 0BE6  
                                    u5503 1607                                      u7103 1764  
                                    u7023 12E7                                      u5440 1C20  
                                    u5515 15A8                                      _RCEN 048B  
                                    u5525 1A18                                      u6245 0CF2  
                                    u5463 1548                                      u7063 16A7  
                                    u5615 1C96                                      u6191 0C91  
                                    u6183 0C78                                      u6175 0C5A  
                                    u6095 0C14                                      u8007 1D84  
                                    u6192 0C92                                      u5473 1559  
                                    u7145 102C                                      u7073 16B8  
                                    u5545 1DE0                                      u7305 1F75  
                                    u8017 1D14                                      u6345 0D30  
                                    u6193 0C97                                      u6194 0C98  
                                    u5483 15BB                                      u8107 08DB  
                                    u7083 171C                                      u8027 1A20  
                                    u5635 1CA7                                      u7315 1F87  
                                    u6195 0C9D                                      u6196 0C9E  
                                    u8117 0995                                      u8037 1C87  
                                    u5565 1DEC                                      u6605 06A8  
                                    u5645 1CB0                                      u5813 1D0C  
                                    u7245 1E78                                      u8127 15DE  
                                    u5743 083F                                      u8047 1DCF  
                                    u5575 1DF8                                      u6535 05BB  
                                    u8137 168E                                      u5753 0850  
                                    u8057 1AE2                                      u5585 1E02  
                                    u7505 0A4F                                      u7361 117E  
                                    u7362 117F                                      u5763 08B8  
                                    u8067 1307                                      u5675 1B20  
                                    u6635 06DF                                      u7275 1F52  
                                    u7363 1184                                      u7364 1185  
                                    u8077 1352                                      u6645 06F7  
                                    u6565 0614                                      u5925 10A7  
                                    u6805 1205                                      u7525 0A5A  
                                    u7381 11A4                                      u7365 118A  
                                    u7382 11A5                                      u7366 118B  
                                    u5783 0904                                      u8087 173D  
                                    u6735 0746                                      u7295 1F60  
                                    u7535 0A6F                                      u7383 11AA  
                                    u7703 1D7B                                      u7384 11AB  
                                    u8097 17FA                                      u6745 0764  
                                    u6665 0702                                      u5865 1070  
                                    u6825 1221                                      u7385 11B0  
                                    u7386 11B1                                      u6755 077C  
                                    u6845 1236                                      u7565 0A8F  
                                    u5895 108F                                      u7655 0ADE  
                                    u7495 0A46                                      u7665 0AFC  
                                    u7585 0A9A                                      u7675 0B17  
                                    u6965 1F25                                      u6885 1251  
                                    u7695 1C38                                      u6995 1B3F  
                                    u7997 144B                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 193A                                      _main 1443  
                                    _hora 00E6                                      _itoa 1AA9  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
                                    _utoa 1F9C         __size_of_EEPROM_24C1025_Write_Str 00E9  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 0022               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 0800  
                        _BALANCE_RESISTOR 184C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002A                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 0B3C                                     ?_itoa 0031  
                                   _EEADR 010D                           __end_of___flmul 07AE  
                         __end_of___flsub 1A69                           __end_of___fltol 10C0  
                                   _ANSEL 0188                           __end_of___lldiv 1F9C  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1E11                                     i1l505 1380  
                         __end_of___lwmod 1CBF                                     i1l523 1437  
                                   i1l507 1391                                     i1l509 139F  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 196F  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E4              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00D9                                     _errno 00D5  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01A9                ?_EEPROM_24C1025_Write_Byte 002F  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0034  
                            __end_of_BETA 184C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1532                              __end_of_itoa 1AC9  
                            __end_of_utoa 2000                            Send_To_MB@size 0021  
                        _USART_put_buffer 1B30                  __end_of_EEPROM_Read_Byte 1AEB  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 1139                                    ??_utoa 002C  
                        _USART_put_string 1CBF                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0800  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1984                                    i1l5610 1406  
                                  i1l5612 140B                                    i1l5614 13DF  
                                  i1l5616 1412                                    i1l5552 1375  
                                  i1l5562 1393                                    i1l5556 1383  
                                  i1l5548 1366                                    i1l5568 13A0  
                                  i1l5592 13D0         __end_of_EEPROM_24C1025_Write_Byte 199A  
                                  u538_25 13F8                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 002F                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
                        __end_of___xxtofl 126F                        PROCULUS_VP_Write@i 0059  
                __end_of_Decodify_Command 04B9                  ?_EEPROM_24C1025_Read_Int 0034  
                ?_EEPROM_24C1025_Read_Str 0026                  _I2C_Master_RepeatedStart 1935  
    __size_of_EEPROM_24C1025_Write_Buffer 0162                                    ___flge 1139  
                               ??___fladd 0052                                 ??___fldiv 0049  
                               ??___flmul 0031                                 ??___flsub 0066  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00DB  
                       __end_of_ROOM_TEMP 1820                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 0110  
                       _USART_to_Protocol 1EE1                           USART_putc@value 0020  
                                  _minuto 00E5                                 ??_captura 0022  
                      ?_USART_to_Protocol 0070              Decodify_Command@add_24LCxxxx 00C9  
                                  _strcat 1BD1                                    _strcpy 1A2D  
                                  _strlen 19F7         EEPROM_24C1025_Read_Buffer@mem_add 0026  
        __end_of_EEPROM_24C1025_Read_Byte 19F7                        __size_of__Umul8_16 0023  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 0034  
                               ?_ADC_init 0070                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 0010  
                __end_of_MediaPlacaVaccum 1000                                ___flge@ff1 0020  
                              ___flge@ff2 0024                              ___xxtofl@arg 003D  
                            ___xxtofl@exp 003C                              ___xxtofl@val 0033  
                        __end_oflog@coeff 1848                   __end_of__initialization 0032  
     PROCULUS_Control_Register_Write@size 0052                                ___fltol@f1 0043  
                            _Board_Number 00E3                  __end_of_ADC_Media_10bits 1EE1  
                          __pcstackCOMMON 0070                  __size_of_PROCULUS_Buzzer 0022  
               __end_of_USART_to_Protocol 1F3E                     USART_put_string@vetor 0021  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0032  
                __size_of_my_delay_ms_WDT 0038                            _OPTION_REGbits 0081  
                 __size_of_ADC_Max_10Bits 003E                  __end_of_BALANCE_RESISTOR 1850  
        __end_of_EEPROM_24C1025_Write_Int 1AA9                        Decodify_Command@hh 00A0  
                      Decodify_Command@mm 00AA          __end_of_EEPROM_24C1025_Write_Str 1358  
                      Decodify_Command@ss 00B4                      USART_put_buffer@loop 0026  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1BD1           __end_of_EEPROM_24C1025_Fill_All 1055  
                             ?_Send_To_MB 0070                    __size_of_Send_Reply_OK 0009  
                              __pbssBANK1 00CD                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        _RESISTOR_ROOM_TEMP 1818  
         __end_of_EEPROM_24C1025_Read_Int 1B7C           __end_of_EEPROM_24C1025_Read_Str 1800  
                ?_Package_Usart_is_for_me 0070                                 ?_Save_Log 0058  
                          _PROCULUS_Delay 1A10                         __end_of__Umul8_16 1B30  
                              __pmaintext 1443                                   ?___flge 0020  
                     Save_Log@add_datalog 0058                       _EEPROM_Read_Integer 1B7C  
              PROCULUS_Show_Screen@screen 0056                                __pintentry 0004  
                    _PROCULUS_Show_Screen 196F                        ADC_Max_10Bits@Temp 002E  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020                         MediaPlacaVaccum@i 00A9  
                               ?___xxtofl 0033                                   _MAX_ADC 1820  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00BE  
             EEPROM_24C1025_Read_Int@data 003B                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 19C7                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 19DE  
                              __stringtab 1800                       PROCULUS_VP_Write@vp 0052  
             ??_EEPROM_24C1025_Write_Byte 0034                  __end_of_USART_put_buffer 1B54  
              __end_of_EEPROM_Read_String 1A89                    __end_of_PROCULUS_Delay 1A2D  
                __end_of_USART_put_string 1CF2                      __size_of_my_delay_ms 0037  
                              ??_Save_Log 005C                           PROCULUS_Delay@i 0024  
                                 _Vaccum0 00D1                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 0030                                   _Tensao1 00CD  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 005D  
             PROCULUS_Buzzer@time_ms_x_10 0056                           __size_of___flge 0093  
                                 ___fladd 0B3C                                   ___fldiv 099B  
                EEPROM_Write_Integer@addr 002B                                   ___flmul 04B9  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1A4B  
                                 ___fltol 1055                                   ___lldiv 1F3E  
                                 ___lwdiv 1DD5                                   ___lwmod 1C8D  
                           _Send_Reply_OK 195C                       __size_of_Send_To_MB 0028  
                   ?_PROCULUS_Show_Screen 0056                                   _captura 1965  
                        _statuspower_memo 007C                                   __ptext1 1D61  
                                 __ptext2 1E11                                   __ptext3 0D69  
                                 __ptext4 1A4B                                   __ptext5 0B3C  
                                 __ptext6 1139                                   __ptext7 099B  
                                 __ptext8 19C7                                   __ptext9 1E8B  
                       ??_PROCULUS_Buzzer 0058                                   _destino 00E2  
                       ?_EEPROM_Read_Byte 0070                           __size_of_strcat 002C  
                         __size_of_strcpy 001E                           __size_of_strlen 0019  
                            __size_of_isr 00EB                                ??___xxtofl 0037  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 00E7  
                __size_of_I2C_Master_Init 0031                  __size_of_I2C_Master_Read 002D  
                          _usart_protocol 01B9                     ??_EEPROM_Read_Integer 0025  
                __size_of_I2C_Master_Wait 0008                  __size_of_I2C_Master_Stop 0005  
           EEPROM_24C1025_Write_Int@local 0056                                   _pointer 00E1  
           EEPROM_24C1025_Write_Byte@data 0033                                   clrloop0 1943  
                      __end_of_USART_init 1E4D           __end_of_Package_Usart_is_for_me 19DE  
                      __end_of_USART_putc 1010                         ADC_Media_10bits@i 0049  
                    end_of_initialization 0032                  _EEPROM_24C1025_Write_Int 1A89  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 126F  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0037  
                                 itoa@val 0031                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 0027  
         EEPROM_24C1025_Write_Buffer@ctrl 002E                 __size_of_I2C_Master_Start 0009  
               __size_of_I2C_Master_Write 0009                         ?_Decodify_Command 0070  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002D  
                      ??_Decodify_Command 005E                                 _RCSTAbits 0018  
                        I2C_Master_Init@c 002E                          I2C_Master_Read@a 0020  
                          ?_Send_Reply_OK 0070                                   utoa@buf 0030  
               _EEPROM_24C1025_Write_Byte 1984                                   utoa@val 0028  
        __size_of_EEPROM_24C1025_Fill_All 0045                                   strlen@s 0024  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 007A              ??_EEPROM_24C1025_Read_Buffer 002D  
           EEPROM_24C1025_Write_Str@range 002A                                 _ROOM_TEMP 181C  
                          _ADC_Max_10Bits 1E4D                               ___fladd@grs 005D  
        __size_of_EEPROM_24C1025_Read_Int 0028          __size_of_EEPROM_24C1025_Read_Str 016C  
                           ___xxtofl@sign 003B       __end_of_EEPROM_24C1025_Write_Buffer 1694  
             _EEPROM_24C1025_Write_Buffer 1532                               ___fldiv@grs 0055  
                             ___fldiv@rem 004E      PROCULUS_Control_Register_Write@vetor 0054  
        EEPROM_24C1025_Write_Buffer@count 002B           EEPROM_24C1025_Write_Int@mem_add 004E  
        EEPROM_24C1025_Write_Buffer@range 002D                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00C1                         ?_MediaPlacaVaccum 0070  
                   PROCULUS_VP_Write@size 0056           EEPROM_24C1025_Read_Str@chip_add 002E  
                             ___flmul@grs 0039                        ??_MediaPlacaVaccum 0066  
                _PROCULUS_VP_Write_String 19B0                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 0173                         ?_ADC_Media_10bits 0041  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0058  
                      ??_ADC_Media_10bits 0045                            __end_of___flge 11CC  
                   __end_of_USART_put_int 19B0                    __end_of_ADC_Max_10Bits 1E8B  
                             _BAUDCTLbits 0187                            __end_of_strcat 1BFD  
                          __end_of_strcpy 1A4B                            __end_of_strlen 1A10  
                     start_initialization 0015                               __end_of_isr 1443  
                             USART_init@i 0026                              ??_Send_To_MB 0021  
                       ??_I2C_Master_Init 0032                         ??_I2C_Master_Read 0022  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0020  
            __end_of_EEPROM_Write_Integer 1C8D          EEPROM_24C1025_Write_Int@chip_add 0055  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00C0  
                   USART_put_buffer@vetor 0025                           ??_Send_Reply_OK 0025  
                                ??___flge 0028                         __size_of_Save_Log 0079  
                               __Umul8_16 1B0D                        __end_of_Send_To_MB 0828  
        __size_of_Package_Usart_is_for_me 0017                           ?_ADC_Max_10Bits 002A  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 0038  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 004E  
                               ___fladd@b 004A          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 0041                                 ___fldiv@b 0045  
                               ___flmul@a 002D                                 ___flmul@b 0029  
                             __pbssCOMMON 0078                                 ___flsub@a 005E  
                               ___flsub@b 0062                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                       _PROCULUS_VP_Write 07AE                         __size_of___xxtofl 00A3  
                      ?_PROCULUS_VP_Write 0052                       USART_put_buffer@ptr 0027  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 002B  
                        _I2C_Master_Start 194A                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 1953                       ??_PROCULUS_VP_Write 0057  
                          _tempodecorrido 00D7                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1AEB                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 004A                                  ?___fldiv 0041  
                 _EEPROM_24C1025_Fill_All 1010                                  ?___flmul 0029  
                                ?___flsub 005E                                  ?___fltol 0043  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 1A69                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 099B  
              _EEPROM_24C1025_Read_Buffer 0828                     MediaPlacaVaccum@Valor 00A0  
                                ?_captura 0020                                 __pstrings 1800  
                   MediaPlacaVaccum@canal 00A4                           _my_delay_ms_WDT 1D61  
                 _EEPROM_24C1025_Read_Int 1B54                   _EEPROM_24C1025_Read_Str 1694  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0054  
              ??_EEPROM_24C1025_Write_Str 0027                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 07F5                EEPROM_24C1025_Read_Str@cnt 002D  
                                _ADC_init 07F5                          ___lwdiv@quotient 0026  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
                     ADC_Max_10Bits@canal 002D            EEPROM_24C1025_Read_Buffer@data 002B  
          EEPROM_24C1025_Read_Buffer@ctrl 0033                       ADC_Max_10Bits@value 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0022  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 0022  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1942  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0055                    Decodify_Command@OutPut 00C3  
                         _PT100_TRANSLADA 1810                           _Delay_Led_Usart 00DF  
            EEPROM_24C1025_Read_Byte@data 0039               __end_of_EEPROM_Read_Integer 1BA6  
                              _ADCON0bits 001F                               __stringbase 180F  
                              _ADCON1bits 009F                 __size_of_Decodify_Command 0483  
                    _EEPROM_Write_Integer 1C5B            EEPROM_24C1025_Read_Int@mem_add 0034  
                               main@reset 006D                ??_PROCULUS_VP_Write_String 005D  
                     I2C_Master_Read@temp 0024                   __end_of_PROCULUS_Buzzer 1B0D  
                          _generic_status 00E9                                _EECON1bits 018C  
                                _Save_Log 10C0                 ??_EEPROM_24C1025_Fill_All 0030  
                     __end_of_my_delay_ms 1D29              EEPROM_24C1025_Read_Str@range 002F  
            EEPROM_24C1025_Read_Str@texto 002A                   __end_of_my_delay_ms_WDT 1D99  
                            my_delay_ms@i 0026                               ??__Umul8_16 0022  
               __size_of_MediaPlacaVaccum 0297         __size_of_I2C_Master_RepeatedStart 0005  
                        __size_of___fladd 022D                 ??_EEPROM_24C1025_Read_Int 0038  
                 _Package_Usart_is_for_me 19C7                          __size_of___fldiv 01A1  
               ??_EEPROM_24C1025_Read_Str 002B                          __size_of___flmul 02F5  
               ?_I2C_Master_RepeatedStart 0070                          __size_of___flsub 001E  
                        __size_of___fltol 006B                          __size_of___lldiv 005E  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0032  
                      __end_of__stringtab 1810       EEPROM_24C1025_Write_Buffer@chip_add 002C  
                     USART_put_string@ptr 0023                  EEPROM_24C1025_Fill_All@i 0034  
                        __size_of_captura 000A                     ?_EEPROM_Write_Integer 0025  
                         _I2C_Master_Init 1C2A                           _I2C_Master_Read 1BFD  
                                ___xxtofl 11CC                __size_of_PROCULUS_VP_Write 0047  
                         _I2C_Master_Wait 193A                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 0038                           _I2C_Master_Stop 1930  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 11CC  
                                __ptext11 1E4D                                  __ptext20 1F9C  
                                __ptext12 1CF2                                  __ptext21 1C8D  
                                __ptext13 1965                                  __ptext30 1B0D  
                                __ptext22 1EE1                                  __ptext14 1C2A  
                                __ptext31 1A89                                  __ptext23 1B30  
                                __ptext15 1F3E                                  __ptext40 1000  
                                __ptext32 19B0                                  __ptext24 0800  
                                __ptext16 0036                                  __ptext41 1A10  
                                __ptext33 19F7                                  __ptext25 195C  
                                __ptext17 1A2D                                  __ptext50 1694  
                                __ptext42 1BA6                                  __ptext34 07AE  
                                __ptext26 1CBF                                  __ptext18 1BD1  
                                __ptext51 1B54                                  __ptext43 1C5B  
                                __ptext35 196F                                  __ptext27 10C0  
                                __ptext19 1AA9                                  __ptext60 194A  
                                __ptext52 19DE                                  __ptext44 1D99  
                                __ptext36 1AEB                                  __ptext28 1055  
                                __ptext61 193A                                  __ptext53 0828  
                                __ptext45 1A69                                  __ptext37 1DD5  
                                __ptext29 04B9                                  __ptext62 07F5  
                                __ptext54 1935                                  __ptext46 1B7C  
                                __ptext38 1D29                                  __ptext63 1358  
                                __ptext55 1BFD                                  __ptext47 1AC9  
                                __ptext39 199A                                  __ptext56 1010  
                                __ptext48 126F                                  __ptext57 1532  
                                __ptext49 1984                                  __ptext58 1953  
                                __ptext59 1930                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004E                            _PT100_CONSTANT 1814  
                    MediaPlacaVaccum@Temp 00A5                                strcpy@from 0020  
                           __size_of_main 00EF                             __size_of_itoa 0020  
                           __size_of_utoa 0064              EEPROM_24C1025_Fill_All@value 002F  
              PROCULUS_VP_Write_String@vp 005A                   __end_of_PT100_TRANSLADA 1814  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 00DD  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 1BA6  
                                log@coeff 1824                  __end_of_I2C_Master_Start 1953  
                __end_of_I2C_Master_Write 195C                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1818                                  isr@tempo 0076  
                                itoa@base 0033                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0025                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0056                         USART_put_int@dado 0051  
                        _EEPROM_Read_Byte 1AC9                               _my_delay_ms 1CF2  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020               EEPROM_24C1025_Fill_All@page 0035  
                               stringcode 180A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 1965                   __end_of_I2C_Master_Init 1C5B  
                 __end_of_I2C_Master_Read 1C2A                   __end_of_I2C_Master_Wait 1942  
                 __end_of_I2C_Master_Stop 1935              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 0024  
             ?_EEPROM_24C1025_Read_Buffer 0026           EEPROM_24C1025_Fill_All@chip_add 0033  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 002A  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0036                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0025                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1D99  
          EEPROM_24C1025_Read_Str@mem_add 0026                             ___fladd@signs 005A  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                            ___fladd@aexp 005B                              ___fladd@bexp 005C  
       __size_of_EEPROM_24C1025_Read_Byte 0019                 ?_EEPROM_24C1025_Read_Byte 0034  
                     EEPROM_Read_String@c 0026                      __Umul8_16@multiplier 0028  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0024  
                              _USART_init 1E11  
