

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 21 17:12:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text19,local,class=CODE,merge=1,delta=2
    22                           	psect	text20,local,class=CODE,merge=1,delta=2
    23                           	psect	text22,local,class=CODE,merge=1,delta=2
    24                           	psect	text28,local,class=CODE,merge=1,delta=2
    25                           	psect	text32,local,class=CODE,merge=1,delta=2
    26                           	psect	text34,local,class=CODE,merge=1,delta=2
    27                           	psect	text37,local,class=CODE,merge=1,delta=2
    28                           	psect	text39,local,class=CODE,merge=1,delta=2
    29                           	psect	text41,local,class=CODE,merge=1,delta=2
    30                           	psect	text47,local,class=CODE,merge=1,delta=2
    31                           	psect	text48,local,class=CODE,merge=1,delta=2
    32                           	psect	text52,local,class=CODE,merge=1,delta=2
    33                           	psect	text60,local,class=CODE,merge=1,delta=2
    34                           	psect	text61,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	pa_nodes0,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F886 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  000E                     	;# 
   544  000F                     	;# 
   545  0010                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0013                     	;# 
   549  0014                     	;# 
   550  0015                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0017                     	;# 
   554  0018                     	;# 
   555  0019                     	;# 
   556  001A                     	;# 
   557  001B                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001D                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  0081                     	;# 
   564  0085                     	;# 
   565  0086                     	;# 
   566  0087                     	;# 
   567  0089                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  008F                     	;# 
   572  0090                     	;# 
   573  0091                     	;# 
   574  0092                     	;# 
   575  0093                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  0105                     	;# 
   591  0107                     	;# 
   592  0108                     	;# 
   593  0109                     	;# 
   594  010C                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  0185                     	;# 
   600  0187                     	;# 
   601  0188                     	;# 
   602  0189                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  000E                     	;# 
   619  000E                     	;# 
   620  000F                     	;# 
   621  0010                     	;# 
   622  0011                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0014                     	;# 
   626  0015                     	;# 
   627  0015                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  001B                     	;# 
   634  001B                     	;# 
   635  001C                     	;# 
   636  001D                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  0081                     	;# 
   640  0085                     	;# 
   641  0086                     	;# 
   642  0087                     	;# 
   643  0089                     	;# 
   644  008C                     	;# 
   645  008D                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0093                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  009F                     	;# 
   666  0105                     	;# 
   667  0107                     	;# 
   668  0108                     	;# 
   669  0109                     	;# 
   670  010C                     	;# 
   671  010C                     	;# 
   672  010D                     	;# 
   673  010E                     	;# 
   674  010F                     	;# 
   675  0185                     	;# 
   676  0187                     	;# 
   677  0188                     	;# 
   678  0189                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  000E                     	;# 
   696  000F                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0014                     	;# 
   702  0015                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0019                     	;# 
   708  001A                     	;# 
   709  001B                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  001D                     	;# 
   713  001E                     	;# 
   714  001F                     	;# 
   715  0081                     	;# 
   716  0085                     	;# 
   717  0086                     	;# 
   718  0087                     	;# 
   719  0089                     	;# 
   720  008C                     	;# 
   721  008D                     	;# 
   722  008E                     	;# 
   723  008F                     	;# 
   724  0090                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0093                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0094                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0097                     	;# 
   734  0098                     	;# 
   735  0099                     	;# 
   736  009A                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009E                     	;# 
   741  009F                     	;# 
   742  0105                     	;# 
   743  0107                     	;# 
   744  0108                     	;# 
   745  0109                     	;# 
   746  010C                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0185                     	;# 
   752  0187                     	;# 
   753  0188                     	;# 
   754  0189                     	;# 
   755  018C                     	;# 
   756  018D                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000D                     	;# 
   770  000E                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  0081                     	;# 
   792  0085                     	;# 
   793  0086                     	;# 
   794  0087                     	;# 
   795  0089                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  008F                     	;# 
   800  0090                     	;# 
   801  0091                     	;# 
   802  0092                     	;# 
   803  0093                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0094                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0097                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009A                     	;# 
   813  009B                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009E                     	;# 
   817  009F                     	;# 
   818  0105                     	;# 
   819  0107                     	;# 
   820  0108                     	;# 
   821  0109                     	;# 
   822  010C                     	;# 
   823  010C                     	;# 
   824  010D                     	;# 
   825  010E                     	;# 
   826  010F                     	;# 
   827  0185                     	;# 
   828  0187                     	;# 
   829  0188                     	;# 
   830  0189                     	;# 
   831  018C                     	;# 
   832  018D                     	;# 
   833  0000                     	;# 
   834  0001                     	;# 
   835  0002                     	;# 
   836  0003                     	;# 
   837  0004                     	;# 
   838  0005                     	;# 
   839  0006                     	;# 
   840  0007                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  000E                     	;# 
   848  000F                     	;# 
   849  0010                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0014                     	;# 
   854  0015                     	;# 
   855  0015                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001B                     	;# 
   863  001C                     	;# 
   864  001D                     	;# 
   865  001E                     	;# 
   866  001F                     	;# 
   867  0081                     	;# 
   868  0085                     	;# 
   869  0086                     	;# 
   870  0087                     	;# 
   871  0089                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  008E                     	;# 
   875  008F                     	;# 
   876  0090                     	;# 
   877  0091                     	;# 
   878  0092                     	;# 
   879  0093                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0094                     	;# 
   883  0095                     	;# 
   884  0096                     	;# 
   885  0097                     	;# 
   886  0098                     	;# 
   887  0099                     	;# 
   888  009A                     	;# 
   889  009B                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009E                     	;# 
   893  009F                     	;# 
   894  0105                     	;# 
   895  0107                     	;# 
   896  0108                     	;# 
   897  0109                     	;# 
   898  010C                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  010F                     	;# 
   903  0185                     	;# 
   904  0187                     	;# 
   905  0188                     	;# 
   906  0189                     	;# 
   907  018C                     	;# 
   908  018D                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0094                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0097                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009A                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  009F                     	;# 
   970  0105                     	;# 
   971  0107                     	;# 
   972  0108                     	;# 
   973  0109                     	;# 
   974  010C                     	;# 
   975  010C                     	;# 
   976  010D                     	;# 
   977  010E                     	;# 
   978  010F                     	;# 
   979  0185                     	;# 
   980  0187                     	;# 
   981  0188                     	;# 
   982  0189                     	;# 
   983  018C                     	;# 
   984  018D                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001B                     	;# 
  1015  001C                     	;# 
  1016  001D                     	;# 
  1017  001E                     	;# 
  1018  001F                     	;# 
  1019  0081                     	;# 
  1020  0085                     	;# 
  1021  0086                     	;# 
  1022  0087                     	;# 
  1023  0089                     	;# 
  1024  008C                     	;# 
  1025  008D                     	;# 
  1026  008E                     	;# 
  1027  008F                     	;# 
  1028  0090                     	;# 
  1029  0091                     	;# 
  1030  0092                     	;# 
  1031  0093                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0094                     	;# 
  1035  0095                     	;# 
  1036  0096                     	;# 
  1037  0097                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  0105                     	;# 
  1047  0107                     	;# 
  1048  0108                     	;# 
  1049  0109                     	;# 
  1050  010C                     	;# 
  1051  010C                     	;# 
  1052  010D                     	;# 
  1053  010E                     	;# 
  1054  010F                     	;# 
  1055  0185                     	;# 
  1056  0187                     	;# 
  1057  0188                     	;# 
  1058  0189                     	;# 
  1059  018C                     	;# 
  1060  018D                     	;# 
  1061  0000                     	;# 
  1062  0001                     	;# 
  1063  0002                     	;# 
  1064  0003                     	;# 
  1065  0004                     	;# 
  1066  0005                     	;# 
  1067  0006                     	;# 
  1068  0007                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  000E                     	;# 
  1076  000F                     	;# 
  1077  0010                     	;# 
  1078  0011                     	;# 
  1079  0012                     	;# 
  1080  0013                     	;# 
  1081  0014                     	;# 
  1082  0015                     	;# 
  1083  0015                     	;# 
  1084  0016                     	;# 
  1085  0017                     	;# 
  1086  0018                     	;# 
  1087  0019                     	;# 
  1088  001A                     	;# 
  1089  001B                     	;# 
  1090  001B                     	;# 
  1091  001C                     	;# 
  1092  001D                     	;# 
  1093  001E                     	;# 
  1094  001F                     	;# 
  1095  0081                     	;# 
  1096  0085                     	;# 
  1097  0086                     	;# 
  1098  0087                     	;# 
  1099  0089                     	;# 
  1100  008C                     	;# 
  1101  008D                     	;# 
  1102  008E                     	;# 
  1103  008F                     	;# 
  1104  0090                     	;# 
  1105  0091                     	;# 
  1106  0092                     	;# 
  1107  0093                     	;# 
  1108  0093                     	;# 
  1109  0093                     	;# 
  1110  0094                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  009F                     	;# 
  1122  0105                     	;# 
  1123  0107                     	;# 
  1124  0108                     	;# 
  1125  0109                     	;# 
  1126  010C                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0185                     	;# 
  1132  0187                     	;# 
  1133  0188                     	;# 
  1134  0189                     	;# 
  1135  018C                     	;# 
  1136  018D                     	;# 
  1137                           
  1138                           	psect	strings
  1139  1000                     __pstrings:	
  1140  1000                     stringtab:	
  1141  1000                     __stringtab:	
  1142                           
  1143                           ;	String table - string pointers are 1 byte each
  1144  1000  1BFF               	btfsc	btemp+1,7
  1145  1001  280A               	ljmp	stringcode
  1146  1002  1383               	bcf	3,7
  1147  1003  187F               	btfsc	btemp+1,0
  1148  1004  1783               	bsf	3,7
  1149  1005  0800               	movf	0,w
  1150  1006  0A84               	incf	4,f
  1151  1007  1903               	skipnz
  1152  1008  0AFF               	incf	btemp+1,f
  1153  1009  0008               	return
  1154  100A                     stringcode:	
  1155  100A                     stringdir:	
  1156  100A  3010               	movlw	high stringdir
  1157  100B  008A               	movwf	10
  1158  100C  0804               	movf	4,w
  1159  100D  0A84               	incf	4,f
  1160  100E  0782               	addwf	2,f
  1161  100F                     __stringbase:	
  1162  100F  3400               	retlw	0
  1163  1010                     __end_of__stringtab:	
  1164  1010                     log@coeff:	
  1165  1010  3400               	retlw	0
  1166  1011  3400               	retlw	0
  1167  1012  3400               	retlw	0
  1168  1013  3400               	retlw	0
  1169  1014  34C4               	retlw	196
  1170  1015  34FF               	retlw	255
  1171  1016  347F               	retlw	127
  1172  1017  343F               	retlw	63
  1173  1018  3480               	retlw	128
  1174  1019  34EF               	retlw	239
  1175  101A  34FF               	retlw	255
  1176  101B  34BE               	retlw	190
  1177  101C  3490               	retlw	144
  1178  101D  34E1               	retlw	225
  1179  101E  34A9               	retlw	169
  1180  101F  343E               	retlw	62
  1181  1020  34EC               	retlw	236
  1182  1021  3482               	retlw	130
  1183  1022  3476               	retlw	118
  1184  1023  34BE               	retlw	190
  1185  1024  3482               	retlw	130
  1186  1025  34AD               	retlw	173
  1187  1026  342B               	retlw	43
  1188  1027  343E               	retlw	62
  1189  1028  340E               	retlw	14
  1190  1029  343C               	retlw	60
  1191  102A  34C3               	retlw	195
  1192  102B  34BD               	retlw	189
  1193  102C  3487               	retlw	135
  1194  102D  34D1               	retlw	209
  1195  102E  3413               	retlw	19
  1196  102F  343D               	retlw	61
  1197  1030  3441               	retlw	65
  1198  1031  3478               	retlw	120
  1199  1032  34D3               	retlw	211
  1200  1033  34BB               	retlw	187
  1201  1034                     __end_oflog@coeff:	
  1202  1034                     _BETA:	
  1203                           
  1204                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1205  1034  3400               	retlw	0
  1206  1035  3460               	retlw	96
  1207  1036  3478               	retlw	120
  1208  1037  3445               	retlw	69
  1209  1038                     __end_of_BETA:	
  1210  1038                     _BALANCE_RESISTOR:	
  1211                           
  1212                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1213  1038  3400               	retlw	0
  1214  1039  3440               	retlw	64
  1215  103A  341C               	retlw	28
  1216  103B  3446               	retlw	70
  1217  103C                     __end_of_BALANCE_RESISTOR:	
  1218  0019                     _TXREG	set	25
  1219  0018                     _RCSTAbits	set	24
  1220  001A                     _RCREG	set	26
  1221  000E                     _TMR1L	set	14
  1222  000F                     _TMR1H	set	15
  1223  000C                     _PIR1bits	set	12
  1224  001E                     _ADRESH	set	30
  1225  001F                     _ADCON0bits	set	31
  1226  0005                     _PORTAbits	set	5
  1227  0007                     _PORTCbits	set	7
  1228  0010                     _T1CON	set	16
  1229  000B                     _INTCONbits	set	11
  1230  0006                     _PORTBbits	set	6
  1231  0009                     _PORTE	set	9
  1232  0007                     _PORTC	set	7
  1233  0005                     _PORTA	set	5
  1234  0013                     _SSPBUF	set	19
  1235  0014                     _SSPCON	set	20
  1236  0006                     _PORTB	set	6
  1237  00C4                     _CREN	set	196
  1238  0081                     _TMR1CS	set	129
  1239  0085                     _T1CKPS1	set	133
  1240  0084                     _T1CKPS0	set	132
  1241  008C                     _PIE1bits	set	140
  1242  0099                     _SPBRG	set	153
  1243  0098                     _TXSTAbits	set	152
  1244  009E                     _ADRESL	set	158
  1245  009F                     _ADCON1bits	set	159
  1246  009F                     _ADCON1	set	159
  1247  0095                     _WPUB	set	149
  1248  0081                     _OPTION_REGbits	set	129
  1249  0089                     _TRISE	set	137
  1250  0087                     _TRISC	set	135
  1251  0086                     _TRISB	set	134
  1252  0085                     _TRISA	set	133
  1253  008F                     _OSCCONbits	set	143
  1254  0094                     _SSPSTAT	set	148
  1255  0093                     _SSPADD	set	147
  1256  0091                     _SSPCON2	set	145
  1257  043F                     _TRISC7	set	1087
  1258  043E                     _TRISC6	set	1086
  1259  0460                     _TMR1IE	set	1120
  1260  048C                     _ACKEN	set	1164
  1261  048D                     _ACKDT	set	1165
  1262  048B                     _RCEN	set	1163
  1263  048A                     _PEN	set	1162
  1264  0489                     _RSEN	set	1161
  1265  0488                     _SEN	set	1160
  1266  043C                     _TRISC4	set	1084
  1267  043B                     _TRISC3	set	1083
  1268  010C                     _EEDATA	set	268
  1269  010D                     _EEADR	set	269
  1270  0187                     _BAUDCTLbits	set	391
  1271  018D                     _EECON2	set	397
  1272  018C                     _EECON1bits	set	396
  1273  0189                     _ANSELH	set	393
  1274  0188                     _ANSEL	set	392
  1275  103C                     STR_1:	
  1276  103C  3476               	retlw	118	;'v'
  1277  103D  3431               	retlw	49	;'1'
  1278  103E  342E               	retlw	46	;'.'
  1279  103F  3430               	retlw	48	;'0'
  1280  1040  342E               	retlw	46	;'.'
  1281  1041  3431               	retlw	49	;'1'
  1282  1042  3431               	retlw	49	;'1'
  1283  1043  3400               	retlw	0
  1284  1044                     STR_8:	
  1285  1044  344F               	retlw	79	;'O'
  1286  1045  344B               	retlw	75	;'K'
  1287  1046  3400               	retlw	0
  1288  1047                     STR_3:	
  1289  1047  3430               	retlw	48	;'0'
  1290  1048  3400               	retlw	0
  1291  1049                     STR_4:	
  1292  1049  343A               	retlw	58	;':'
  1293  104A  3400               	retlw	0
  1294  1048                     
  1295                           ; #config settings
  1296  0000                     
  1297                           	psect	cinit
  1298  0015                     start_initialization:	
  1299  0015                     __initialization:	
  1300  0015  3063               	movlw	low __pbssBANK0
  1301                           
  1302                           ; Clear objects allocated to COMMON
  1303  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  1304  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1305  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1306  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1307  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1308  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1309                           
  1310                           ; Clear objects allocated to BANK0
  1311  001C  1383               	bcf	3,7	;select IRP bank0
  1312  001D  0084               	movwf	4
  1313  001E  306C               	movlw	low (__pbssBANK0+9)
  1314  001F  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to BANK1
  1317  0024  30CD               	movlw	low __pbssBANK1
  1318  0025  0084               	movwf	4
  1319  0026  30EC               	movlw	low (__pbssBANK1+31)
  1320  0027  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1321  002C  3090               	movlw	low __pbssBANK3
  1322                           
  1323                           ; Clear objects allocated to BANK3
  1324  002D  1783               	bsf	3,7	;select IRP bank2
  1325  002E  0084               	movwf	4
  1326  002F  30EA               	movlw	low (__pbssBANK3+90)
  1327  0030  120A  158A  2001   	fcall	clear_ram0
  1328  0033                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331  0033                     __end_of__initialization:	
  1332  0033  0183               	clrf	3
  1333  0034  160A  118A  2F24   	ljmp	l6599	;jump to C main() function
  1334                           
  1335                           	psect	bssCOMMON
  1336  0070                     __pbssCOMMON:	
  1337  0070                     _Delay_Led_Usart:	
  1338  0070                     	ds	2
  1339  0072                     _Delay_Led_Tmr0:	
  1340  0072                     	ds	2
  1341  0074                     _Delay_Led_Memory:	
  1342  0074                     	ds	2
  1343                           
  1344                           	psect	bssBANK0
  1345  0063                     __pbssBANK0:	
  1346  0063                     _count:	
  1347  0063                     	ds	2
  1348  0065                     _header:	
  1349  0065                     	ds	2
  1350  0067                     _pointer:	
  1351  0067                     	ds	1
  1352  0068                     _destino:	
  1353  0068                     	ds	1
  1354  0069                     _Board_Number:	
  1355  0069                     	ds	1
  1356  006A                     _canal:	
  1357  006A                     	ds	1
  1358  006B                     _generic_status:	
  1359  006B                     	ds	1
  1360                           
  1361                           	psect	bssBANK1
  1362  00CD                     __pbssBANK1:	
  1363  00CD                     _Umidade1:	
  1364  00CD                     	ds	4
  1365  00D1                     _Temperatura0:	
  1366  00D1                     	ds	4
  1367  00D5                     _tempodecorrido:	
  1368  00D5                     	ds	2
  1369  00D7                     _milisegundo:	
  1370  00D7                     	ds	2
  1371  00D9                     _minuto:	
  1372  00D9                     	ds	1
  1373  00DA                     _hora:	
  1374  00DA                     	ds	1
  1375  00DB                     _segundo:	
  1376  00DB                     	ds	1
  1377  00DC                     _usart_protocol:	
  1378  00DC                     	ds	16
  1379                           
  1380                           	psect	bssBANK3
  1381  0190                     __pbssBANK3:	
  1382  0190                     _usart_buffer:	
  1383  0190                     	ds	42
  1384  01BA                     _buffer:	
  1385  01BA                     	ds	32
  1386  01DA                     _texto:	
  1387  01DA                     	ds	16
  1388                           
  1389                           	psect	clrtext
  1390  0801                     clear_ram0:	
  1391                           ;	Called with FSR containing the base address, and
  1392                           ;	W with the last address+1
  1393                           
  1394  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
  1395  0802                     clrloop0:	
  1396  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
  1397  0803  0A84               	incf	4,f	;increment pointer
  1398  0804  0604               	xorwf	4,w	;XOR with final address
  1399  0805  1903               	btfsc	3,2	;have we reached the end yet?
  1400  0806  3400               	retlw	0	;all done for this memory range, return
  1401  0807  0604               	xorwf	4,w	;XOR again to restore value
  1402  0808  2802               	goto	clrloop0	;do the next byte
  1403                           
  1404                           	psect	cstackBANK1
  1405  00A0                     __pcstackBANK1:	
  1406  00A0                     Decodify_Command@hh:	
  1407                           
  1408                           ; 10 bytes @ 0x0
  1409  00A0                     	ds	10
  1410  00AA                     Decodify_Command@mm:	
  1411                           
  1412                           ; 10 bytes @ 0xA
  1413  00AA                     	ds	10
  1414  00B4                     Decodify_Command@ss:	
  1415                           
  1416                           ; 10 bytes @ 0x14
  1417  00B4                     	ds	10
  1418  00BE                     Decodify_Command@dados:	
  1419                           
  1420                           ; 2 bytes @ 0x1E
  1421  00BE                     	ds	2
  1422  00C0                     Decodify_Command@add:	
  1423                           
  1424                           ; 1 bytes @ 0x20
  1425  00C0                     	ds	1
  1426  00C1                     Decodify_Command@tempint:	
  1427                           
  1428                           ; 2 bytes @ 0x21
  1429  00C1                     	ds	2
  1430  00C3                     Decodify_Command@OutPut:	
  1431                           
  1432                           ; 4 bytes @ 0x23
  1433  00C3                     	ds	4
  1434  00C7                     Decodify_Command@tempchar:	
  1435                           
  1436                           ; 1 bytes @ 0x27
  1437  00C7                     	ds	1
  1438  00C8                     Decodify_Command@sizedata:	
  1439                           
  1440                           ; 1 bytes @ 0x28
  1441  00C8                     	ds	1
  1442  00C9                     Decodify_Command@add_24LCxxxx:	
  1443                           
  1444                           ; 4 bytes @ 0x29
  1445  00C9                     	ds	4
  1446                           
  1447                           	psect	cstackCOMMON
  1448  0076                     __pcstackCOMMON:	
  1449  0076                     ?_I2C_Master_Start:	
  1450  0076                     ?_I2C_Master_Stop:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0076                     ?_I2C_Master_RepeatedStart:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0076                     ?_ADC_init:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0076                     ?_mediaLeituraPt100Umidadde:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0076                     ?_Decodify_Command:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0076                     ?_USART_to_Protocol:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0076                     ?_Send_To_MB:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0076                     ?_Send_Reply_OK:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0076                     ?_EEPROM_Read_Byte:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0076                     ?_USART_putc:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0076                     ?_Package_Usart_is_for_me:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0076                     ?_I2C_Master_Wait:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0076                     ?_main:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0076                     ?_isr:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0076                     ??_isr:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x0
  1497  0076                     	ds	4
  1498  007A                     isr@tempo:	
  1499                           
  1500                           ; 2 bytes @ 0x4
  1501  007A                     	ds	2
  1502                           
  1503                           	psect	cstackBANK0
  1504  0020                     __pcstackBANK0:	
  1505  0020                     ??_I2C_Master_Start:	
  1506  0020                     ?_I2C_Master_Write:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0020                     ??_I2C_Master_Stop:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0020                     ?_my_delay_ms_WDT:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0020                     ??_I2C_Master_RepeatedStart:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0020                     ??_ADC_init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0020                     ?_USART_init:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0020                     ??_USART_to_Protocol:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0020                     ?_EEPROM_Write_Byte:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0020                     ??_EEPROM_Read_Byte:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0020                     ??_USART_putc:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0020                     ?_strcpy:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0020                     ?_strcat:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0020                     ?_my_delay_ms:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0020                     ??_Package_Usart_is_for_me:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0020                     ?_PROCULUS_Delay:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0020                     ??_I2C_Master_Wait:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0020                     ?_I2C_Master_Read:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0020                     ?_strlen:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560  0020                     ?_captura:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0020                     ?__Umul8_16:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566  0020                     ?___lwdiv:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569  0020                     ?___lwmod:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0020                     ?___lldiv:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575  0020                     ?___xxtofl:	
  1576                           ; 4 bytes @ 0x0
  1577                           
  1578  0020                     EEPROM_Write_Byte@dado:	
  1579                           ; 4 bytes @ 0x0
  1580                           
  1581  0020                     Package_Usart_is_for_me@retorno:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     USART_putc@value:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     strcpy@from:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     __Umul8_16@multiplicand:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     I2C_Master_Write@d:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     I2C_Master_Read@a:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0020                     PROCULUS_Delay@tempo_ms:	
  1600                           ; 2 bytes @ 0x0
  1601                           
  1602  0020                     ___lwdiv@divisor:	
  1603                           ; 2 bytes @ 0x0
  1604                           
  1605  0020                     ___lwmod@divisor:	
  1606                           ; 2 bytes @ 0x0
  1607                           
  1608  0020                     strcat@from:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611  0020                     strlen@s:	
  1612                           ; 2 bytes @ 0x0
  1613                           
  1614  0020                     my_delay_ms@time:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     my_delay_ms_WDT@time:	
  1618                           ; 4 bytes @ 0x0
  1619                           
  1620  0020                     USART_init@baudrate:	
  1621                           ; 4 bytes @ 0x0
  1622                           
  1623  0020                     ___lldiv@divisor:	
  1624                           ; 4 bytes @ 0x0
  1625                           
  1626  0020                     ___xxtofl@val:	
  1627                           ; 4 bytes @ 0x0
  1628                           
  1629                           
  1630                           ; 4 bytes @ 0x0
  1631  0020                     	ds	1
  1632  0021                     ??_Send_To_MB:	
  1633  0021                     ?_USART_put_string:	
  1634                           ; 1 bytes @ 0x1
  1635                           
  1636  0021                     ??_EEPROM_Write_Byte:	
  1637                           ; 1 bytes @ 0x1
  1638                           
  1639  0021                     ?_USART_put_buffer:	
  1640                           ; 1 bytes @ 0x1
  1641                           
  1642  0021                     ??_strcpy:	
  1643                           ; 1 bytes @ 0x1
  1644                           
  1645  0021                     Send_To_MB@size:	
  1646                           ; 1 bytes @ 0x1
  1647                           
  1648  0021                     USART_put_buffer@size:	
  1649                           ; 1 bytes @ 0x1
  1650                           
  1651  0021                     USART_put_string@vetor:	
  1652                           ; 2 bytes @ 0x1
  1653                           
  1654                           
  1655                           ; 2 bytes @ 0x1
  1656  0021                     	ds	1
  1657  0022                     ??_I2C_Master_Write:	
  1658  0022                     ??_I2C_Master_Read:	
  1659                           ; 1 bytes @ 0x2
  1660                           
  1661  0022                     ??_strlen:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0022                     ??_strcat:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0022                     ??_captura:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0022                     ??_PROCULUS_Delay:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673  0022                     EEPROM_Read_Byte@addr:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0022                     strcpy@to:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0022                     I2C_Master_Read@temp:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0022                     USART_to_Protocol@i:	
  1683                           ; 2 bytes @ 0x2
  1684                           
  1685  0022                     ___lwdiv@dividend:	
  1686                           ; 2 bytes @ 0x2
  1687                           
  1688  0022                     ___lwmod@dividend:	
  1689                           ; 2 bytes @ 0x2
  1690                           
  1691  0022                     strlen@cp:	
  1692                           ; 2 bytes @ 0x2
  1693                           
  1694                           
  1695                           ; 2 bytes @ 0x2
  1696  0022                     	ds	1
  1697  0023                     ??_USART_put_string:	
  1698  0023                     ?_EEPROM_Read_String:	
  1699                           ; 1 bytes @ 0x3
  1700                           
  1701  0023                     ??_USART_put_buffer:	
  1702                           ; 1 bytes @ 0x3
  1703                           
  1704  0023                     ??__Umul8_16:	
  1705                           ; 1 bytes @ 0x3
  1706                           
  1707  0023                     ?_EEPROM_Read_Integer:	
  1708                           ; 1 bytes @ 0x3
  1709                           
  1710  0023                     EEPROM_Write_Byte@addr:	
  1711                           ; 2 bytes @ 0x3
  1712                           
  1713  0023                     EEPROM_Read_String@dado:	
  1714                           ; 1 bytes @ 0x3
  1715                           
  1716  0023                     strcat@cp:	
  1717                           ; 1 bytes @ 0x3
  1718                           
  1719  0023                     strcpy@cp:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722  0023                     USART_put_string@ptr:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725  0023                     __Umul8_16@product:	
  1726                           ; 2 bytes @ 0x3
  1727                           
  1728                           
  1729                           ; 2 bytes @ 0x3
  1730  0023                     	ds	1
  1731  0024                     ??_my_delay_ms_WDT:	
  1732  0024                     ??_USART_init:	
  1733                           ; 1 bytes @ 0x4
  1734                           
  1735  0024                     ??_EEPROM_Read_String:	
  1736                           ; 1 bytes @ 0x4
  1737                           
  1738  0024                     ??_my_delay_ms:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0024                     ??___lwdiv:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0024                     ??___lwmod:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0024                     ??___xxtofl:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0024                     EEPROM_Write_Byte@last_GIE:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0024                     EEPROM_Read_String@addr:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0024                     USART_init@i:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0024                     USART_to_Protocol@usart_protocol:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0024                     ___lwdiv@counter:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     ___lwmod@counter:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     strcat@to:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     PROCULUS_Delay@i:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     ___lldiv@dividend:	
  1775                           ; 2 bytes @ 0x4
  1776                           
  1777                           
  1778                           ; 4 bytes @ 0x4
  1779  0024                     	ds	1
  1780  0025                     ?_EEPROM_Write_Integer:	
  1781  0025                     ??_Send_Reply_OK:	
  1782                           ; 1 bytes @ 0x5
  1783                           
  1784  0025                     ?_EEPROM_Write_String:	
  1785                           ; 1 bytes @ 0x5
  1786                           
  1787  0025                     EEPROM_Write_String@dado:	
  1788                           ; 1 bytes @ 0x5
  1789                           
  1790  0025                     EEPROM_Read_String@c:	
  1791                           ; 1 bytes @ 0x5
  1792                           
  1793  0025                     USART_put_buffer@loop:	
  1794                           ; 1 bytes @ 0x5
  1795                           
  1796  0025                     EEPROM_Write_Integer@dado:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799  0025                     ___lwdiv@quotient:	
  1800                           ; 2 bytes @ 0x5
  1801                           
  1802  0025                     __Umul8_16@word_mpld:	
  1803                           ; 2 bytes @ 0x5
  1804                           
  1805                           
  1806                           ; 2 bytes @ 0x5
  1807  0025                     	ds	1
  1808  0026                     ??_EEPROM_Read_Integer:	
  1809  0026                     ??_EEPROM_Write_String:	
  1810                           ; 1 bytes @ 0x6
  1811                           
  1812  0026                     EEPROM_Read_Integer@addr:	
  1813                           ; 1 bytes @ 0x6
  1814                           
  1815  0026                     EEPROM_Write_String@addr:	
  1816                           ; 1 bytes @ 0x6
  1817                           
  1818  0026                     USART_put_buffer@ptr:	
  1819                           ; 1 bytes @ 0x6
  1820                           
  1821  0026                     my_delay_ms@i:	
  1822                           ; 1 bytes @ 0x6
  1823                           
  1824  0026                     my_delay_ms_WDT@i:	
  1825                           ; 4 bytes @ 0x6
  1826                           
  1827                           
  1828                           ; 4 bytes @ 0x6
  1829  0026                     	ds	1
  1830  0027                     ??_EEPROM_Write_Integer:	
  1831  0027                     ?_utoa:	
  1832                           ; 1 bytes @ 0x7
  1833                           
  1834  0027                     EEPROM_Read_Integer@ptr:	
  1835                           ; 1 bytes @ 0x7
  1836                           
  1837  0027                     USART_put_buffer@vetor:	
  1838                           ; 1 bytes @ 0x7
  1839                           
  1840  0027                     __Umul8_16@multiplier:	
  1841                           ; 1 bytes @ 0x7
  1842                           
  1843  0027                     utoa@val:	
  1844                           ; 1 bytes @ 0x7
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x7
  1848  0027                     	ds	1
  1849  0028                     ??___lldiv:	
  1850  0028                     ?___flmul:	
  1851                           ; 1 bytes @ 0x8
  1852                           
  1853  0028                     ___xxtofl@sign:	
  1854                           ; 4 bytes @ 0x8
  1855                           
  1856  0028                     EEPROM_Read_Integer@result:	
  1857                           ; 1 bytes @ 0x8
  1858                           
  1859  0028                     ___lldiv@quotient:	
  1860                           ; 2 bytes @ 0x8
  1861                           
  1862  0028                     ___flmul@b:	
  1863                           ; 4 bytes @ 0x8
  1864                           
  1865                           
  1866                           ; 4 bytes @ 0x8
  1867  0028                     	ds	1
  1868  0029                     EEPROM_Write_Integer@addr:	
  1869  0029                     ___xxtofl@exp:	
  1870                           ; 1 bytes @ 0x9
  1871                           
  1872  0029                     utoa@base:	
  1873                           ; 1 bytes @ 0x9
  1874                           
  1875                           
  1876                           ; 2 bytes @ 0x9
  1877  0029                     	ds	1
  1878  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1879  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1880                           ; 1 bytes @ 0xA
  1881                           
  1882  002A                     ?_EEPROM_24C1025_Write_Str:	
  1883                           ; 1 bytes @ 0xA
  1884                           
  1885  002A                     ?_EEPROM_24C1025_Read_Str:	
  1886                           ; 1 bytes @ 0xA
  1887                           
  1888  002A                     EEPROM_Write_Integer@ptr:	
  1889                           ; 1 bytes @ 0xA
  1890                           
  1891  002A                     EEPROM_Read_Integer@i:	
  1892                           ; 1 bytes @ 0xA
  1893                           
  1894  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1895                           ; 1 bytes @ 0xA
  1896                           
  1897  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1898                           ; 4 bytes @ 0xA
  1899                           
  1900  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1901                           ; 4 bytes @ 0xA
  1902                           
  1903  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  1904                           ; 4 bytes @ 0xA
  1905                           
  1906  002A                     ___xxtofl@arg:	
  1907                           ; 4 bytes @ 0xA
  1908                           
  1909                           
  1910                           ; 4 bytes @ 0xA
  1911  002A                     	ds	1
  1912  002B                     ??_utoa:	
  1913  002B                     EEPROM_Write_Integer@i:	
  1914                           ; 1 bytes @ 0xB
  1915                           
  1916  002B                     utoa@v:	
  1917                           ; 1 bytes @ 0xB
  1918                           
  1919                           
  1920                           ; 2 bytes @ 0xB
  1921  002B                     	ds	1
  1922  002C                     ___lldiv@counter:	
  1923  002C                     ___flmul@a:	
  1924                           ; 1 bytes @ 0xC
  1925                           
  1926                           
  1927                           ; 4 bytes @ 0xC
  1928  002C                     	ds	1
  1929  002D                     ?_I2C_Master_Init:	
  1930  002D                     utoa@c:	
  1931                           ; 1 bytes @ 0xD
  1932                           
  1933  002D                     I2C_Master_Init@c:	
  1934                           ; 1 bytes @ 0xD
  1935                           
  1936                           
  1937                           ; 4 bytes @ 0xD
  1938  002D                     	ds	1
  1939  002E                     ?_ADC_Media_10bits:	
  1940  002E                     ?___fldiv:	
  1941                           ; 4 bytes @ 0xE
  1942                           
  1943  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1944                           ; 4 bytes @ 0xE
  1945                           
  1946  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1947                           ; 1 bytes @ 0xE
  1948                           
  1949  002E                     EEPROM_24C1025_Write_Str@data:	
  1950                           ; 1 bytes @ 0xE
  1951                           
  1952  002E                     EEPROM_24C1025_Read_Str@texto:	
  1953                           ; 1 bytes @ 0xE
  1954                           
  1955  002E                     utoa@buf:	
  1956                           ; 1 bytes @ 0xE
  1957                           
  1958  002E                     ___fldiv@a:	
  1959                           ; 1 bytes @ 0xE
  1960                           
  1961                           
  1962                           ; 4 bytes @ 0xE
  1963  002E                     	ds	1
  1964  002F                     ?_itoa:	
  1965  002F                     ??_EEPROM_24C1025_Write_Str:	
  1966                           ; 1 bytes @ 0xF
  1967                           
  1968  002F                     ??_EEPROM_24C1025_Read_Str:	
  1969                           ; 1 bytes @ 0xF
  1970                           
  1971  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1972                           ; 1 bytes @ 0xF
  1973                           
  1974  002F                     EEPROM_24C1025_Write_Str@chip_add:	
  1975                           ; 1 bytes @ 0xF
  1976                           
  1977  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1978                           ; 1 bytes @ 0xF
  1979                           
  1980  002F                     itoa@val:	
  1981                           ; 2 bytes @ 0xF
  1982                           
  1983                           
  1984                           ; 2 bytes @ 0xF
  1985  002F                     	ds	1
  1986  0030                     ??_EEPROM_24C1025_Write_Buffer:	
  1987  0030                     ??___flmul:	
  1988                           ; 1 bytes @ 0x10
  1989                           
  1990  0030                     EEPROM_24C1025_Write_Str@range:	
  1991                           ; 1 bytes @ 0x10
  1992                           
  1993  0030                     EEPROM_24C1025_Read_Str@cnt:	
  1994                           ; 1 bytes @ 0x10
  1995                           
  1996                           
  1997                           ; 1 bytes @ 0x10
  1998  0030                     	ds	1
  1999  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  2000  0031                     ??_I2C_Master_Init:	
  2001                           ; 1 bytes @ 0x11
  2002                           
  2003  0031                     EEPROM_24C1025_Write_Str@ctrl:	
  2004                           ; 1 bytes @ 0x11
  2005                           
  2006  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2007                           ; 1 bytes @ 0x11
  2008                           
  2009  0031                     itoa@base:	
  2010                           ; 1 bytes @ 0x11
  2011                           
  2012                           
  2013                           ; 2 bytes @ 0x11
  2014  0031                     	ds	1
  2015  0032                     ??_ADC_Media_10bits:	
  2016  0032                     EEPROM_24C1025_Write_Buffer@count:	
  2017                           ; 1 bytes @ 0x12
  2018                           
  2019  0032                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2020                           ; 1 bytes @ 0x12
  2021                           
  2022  0032                     EEPROM_24C1025_Read_Str@range:	
  2023                           ; 1 bytes @ 0x12
  2024                           
  2025  0032                     ___fldiv@b:	
  2026                           ; 1 bytes @ 0x12
  2027                           
  2028                           
  2029                           ; 4 bytes @ 0x12
  2030  0032                     	ds	1
  2031  0033                     ??_itoa:	
  2032  0033                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2033                           ; 1 bytes @ 0x13
  2034                           
  2035  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2036                           ; 1 bytes @ 0x13
  2037                           
  2038  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2039                           ; 1 bytes @ 0x13
  2040                           
  2041  0033                     ADC_Media_10bits@canal:	
  2042                           ; 1 bytes @ 0x13
  2043                           
  2044                           
  2045                           ; 1 bytes @ 0x13
  2046  0033                     	ds	1
  2047  0034                     EEPROM_24C1025_Write_Buffer@range:	
  2048  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2049                           ; 1 bytes @ 0x14
  2050                           
  2051  0034                     ___flmul@sign:	
  2052                           ; 1 bytes @ 0x14
  2053                           
  2054  0034                     itoa@buf:	
  2055                           ; 1 bytes @ 0x14
  2056                           
  2057  0034                     ADC_Media_10bits@value:	
  2058                           ; 1 bytes @ 0x14
  2059                           
  2060                           
  2061                           ; 2 bytes @ 0x14
  2062  0034                     	ds	1
  2063  0035                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2064  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2065                           ; 1 bytes @ 0x15
  2066                           
  2067  0035                     ___flmul@aexp:	
  2068                           ; 1 bytes @ 0x15
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x15
  2072  0035                     	ds	1
  2073  0036                     ?_EEPROM_24C1025_Write_Byte:	
  2074  0036                     ?_EEPROM_24C1025_Read_Byte:	
  2075                           ; 1 bytes @ 0x16
  2076                           
  2077  0036                     ??___fldiv:	
  2078                           ; 1 bytes @ 0x16
  2079                           
  2080  0036                     ?_EEPROM_24C1025_Read_Int:	
  2081                           ; 1 bytes @ 0x16
  2082                           
  2083  0036                     ADC_Media_10bits@i:	
  2084                           ; 2 bytes @ 0x16
  2085                           
  2086  0036                     ___flmul@bexp:	
  2087                           ; 1 bytes @ 0x16
  2088                           
  2089  0036                     EEPROM_24C1025_Write_Byte@mem_add:	
  2090                           ; 1 bytes @ 0x16
  2091                           
  2092  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2093                           ; 4 bytes @ 0x16
  2094                           
  2095  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2096                           ; 4 bytes @ 0x16
  2097                           
  2098                           
  2099                           ; 4 bytes @ 0x16
  2100  0036                     	ds	1
  2101  0037                     ?___fladd:	
  2102  0037                     ___fladd@b:	
  2103                           ; 4 bytes @ 0x17
  2104                           
  2105  0037                     ___flmul@grs:	
  2106                           ; 4 bytes @ 0x17
  2107                           
  2108                           
  2109                           ; 4 bytes @ 0x17
  2110  0037                     	ds	3
  2111  003A                     ??_EEPROM_24C1025_Read_Byte:	
  2112  003A                     ??_EEPROM_24C1025_Read_Int:	
  2113                           ; 1 bytes @ 0x1A
  2114                           
  2115  003A                     EEPROM_24C1025_Write_Byte@data:	
  2116                           ; 1 bytes @ 0x1A
  2117                           
  2118  003A                     EEPROM_24C1025_Read_Byte@chip_add:	
  2119                           ; 1 bytes @ 0x1A
  2120                           
  2121  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2122                           ; 1 bytes @ 0x1A
  2123                           
  2124  003A                     ___fldiv@rem:	
  2125                           ; 1 bytes @ 0x1A
  2126                           
  2127                           
  2128                           ; 4 bytes @ 0x1A
  2129  003A                     	ds	1
  2130  003B                     ??_EEPROM_24C1025_Write_Byte:	
  2131  003B                     EEPROM_24C1025_Write_Byte@chip_add:	
  2132                           ; 1 bytes @ 0x1B
  2133                           
  2134  003B                     EEPROM_24C1025_Read_Byte@data:	
  2135                           ; 1 bytes @ 0x1B
  2136                           
  2137  003B                     EEPROM_24C1025_Read_Int@data:	
  2138                           ; 1 bytes @ 0x1B
  2139                           
  2140  003B                     ___fladd@a:	
  2141                           ; 2 bytes @ 0x1B
  2142                           
  2143  003B                     ___flmul@prod:	
  2144                           ; 4 bytes @ 0x1B
  2145                           
  2146                           
  2147                           ; 4 bytes @ 0x1B
  2148  003B                     	ds	3
  2149  003E                     ___fldiv@sign:	
  2150                           
  2151                           ; 1 bytes @ 0x1E
  2152  003E                     	ds	1
  2153  003F                     ??___fladd:	
  2154  003F                     ___fldiv@new_exp:	
  2155                           ; 1 bytes @ 0x1F
  2156                           
  2157  003F                     ___flmul@temp:	
  2158                           ; 2 bytes @ 0x1F
  2159                           
  2160                           
  2161                           ; 2 bytes @ 0x1F
  2162  003F                     	ds	2
  2163  0041                     ?___fltol:	
  2164  0041                     ___fltol@f1:	
  2165                           ; 4 bytes @ 0x21
  2166                           
  2167  0041                     ___fldiv@grs:	
  2168                           ; 4 bytes @ 0x21
  2169                           
  2170                           
  2171                           ; 4 bytes @ 0x21
  2172  0041                     	ds	4
  2173  0045                     ??___fltol:	
  2174  0045                     ___fldiv@bexp:	
  2175                           ; 1 bytes @ 0x25
  2176                           
  2177                           
  2178                           ; 1 bytes @ 0x25
  2179  0045                     	ds	1
  2180  0046                     ___fldiv@aexp:	
  2181                           
  2182                           ; 1 bytes @ 0x26
  2183  0046                     	ds	1
  2184  0047                     ___fladd@signs:	
  2185                           
  2186                           ; 1 bytes @ 0x27
  2187  0047                     	ds	1
  2188  0048                     ___fladd@aexp:	
  2189                           
  2190                           ; 1 bytes @ 0x28
  2191  0048                     	ds	1
  2192  0049                     ___fltol@sign1:	
  2193  0049                     ___fladd@bexp:	
  2194                           ; 1 bytes @ 0x29
  2195                           
  2196                           
  2197                           ; 1 bytes @ 0x29
  2198  0049                     	ds	1
  2199  004A                     ___fltol@exp1:	
  2200  004A                     ___fladd@grs:	
  2201                           ; 1 bytes @ 0x2A
  2202                           
  2203                           
  2204                           ; 1 bytes @ 0x2A
  2205  004A                     	ds	1
  2206  004B                     ?_USART_put_int:	
  2207  004B                     ?_EEPROM_24C1025_Write_Int:	
  2208                           ; 1 bytes @ 0x2B
  2209                           
  2210  004B                     ?___flsub:	
  2211                           ; 1 bytes @ 0x2B
  2212                           
  2213  004B                     USART_put_int@value:	
  2214                           ; 4 bytes @ 0x2B
  2215                           
  2216  004B                     EEPROM_24C1025_Write_Int@mem_add:	
  2217                           ; 2 bytes @ 0x2B
  2218                           
  2219  004B                     ___flsub@a:	
  2220                           ; 4 bytes @ 0x2B
  2221                           
  2222                           
  2223                           ; 4 bytes @ 0x2B
  2224  004B                     	ds	2
  2225  004D                     ??_USART_put_int:	
  2226  004D                     USART_put_int@dado:	
  2227                           ; 1 bytes @ 0x2D
  2228                           
  2229                           
  2230                           ; 1 bytes @ 0x2D
  2231  004D                     	ds	1
  2232  004E                     ?_PROCULUS_Control_Register_Write:	
  2233  004E                     ?_PROCULUS_VP_Write:	
  2234                           ; 1 bytes @ 0x2E
  2235                           
  2236  004E                     PROCULUS_Control_Register_Write@size:	
  2237                           ; 1 bytes @ 0x2E
  2238                           
  2239  004E                     PROCULUS_VP_Write@vp:	
  2240                           ; 1 bytes @ 0x2E
  2241                           
  2242                           
  2243                           ; 2 bytes @ 0x2E
  2244  004E                     	ds	1
  2245  004F                     ??_PROCULUS_Control_Register_Write:	
  2246  004F                     EEPROM_24C1025_Write_Int@data:	
  2247                           ; 1 bytes @ 0x2F
  2248                           
  2249  004F                     ___flsub@b:	
  2250                           ; 2 bytes @ 0x2F
  2251                           
  2252                           
  2253                           ; 4 bytes @ 0x2F
  2254  004F                     	ds	1
  2255  0050                     PROCULUS_Control_Register_Write@vetor:	
  2256  0050                     PROCULUS_VP_Write@vetor:	
  2257                           ; 1 bytes @ 0x30
  2258                           
  2259                           
  2260                           ; 1 bytes @ 0x30
  2261  0050                     	ds	1
  2262  0051                     ??_EEPROM_24C1025_Write_Int:	
  2263  0051                     EEPROM_24C1025_Write_Int@chip_add:	
  2264                           ; 1 bytes @ 0x31
  2265                           
  2266  0051                     PROCULUS_Control_Register_Write@i:	
  2267                           ; 1 bytes @ 0x31
  2268                           
  2269  0051                     PROCULUS_VP_Write@size:	
  2270                           ; 1 bytes @ 0x31
  2271                           
  2272                           
  2273                           ; 1 bytes @ 0x31
  2274  0051                     	ds	1
  2275  0052                     ?_PROCULUS_Show_Screen:	
  2276  0052                     ?_PROCULUS_Buzzer:	
  2277                           ; 1 bytes @ 0x32
  2278                           
  2279  0052                     ??_PROCULUS_VP_Write:	
  2280                           ; 1 bytes @ 0x32
  2281                           
  2282  0052                     EEPROM_24C1025_Write_Int@local:	
  2283                           ; 1 bytes @ 0x32
  2284                           
  2285  0052                     PROCULUS_Buzzer@time_ms_x_10:	
  2286                           ; 2 bytes @ 0x32
  2287                           
  2288  0052                     PROCULUS_Show_Screen@screen:	
  2289                           ; 2 bytes @ 0x32
  2290                           
  2291                           
  2292                           ; 2 bytes @ 0x32
  2293  0052                     	ds	1
  2294  0053                     ??_mediaLeituraPt100Umidadde:	
  2295  0053                     ??___flsub:	
  2296                           ; 1 bytes @ 0x33
  2297                           
  2298  0053                     PROCULUS_VP_Write@i:	
  2299                           ; 1 bytes @ 0x33
  2300                           
  2301                           
  2302                           ; 1 bytes @ 0x33
  2303  0053                     	ds	1
  2304  0054                     ?_Save_Log:	
  2305  0054                     ??_PROCULUS_Show_Screen:	
  2306                           ; 1 bytes @ 0x34
  2307                           
  2308  0054                     ??_PROCULUS_Buzzer:	
  2309                           ; 1 bytes @ 0x34
  2310                           
  2311  0054                     ?_PROCULUS_VP_Write_String:	
  2312                           ; 1 bytes @ 0x34
  2313                           
  2314  0054                     ?_EEPROM_24C1025_Fill_All:	
  2315                           ; 1 bytes @ 0x34
  2316                           
  2317  0054                     EEPROM_24C1025_Fill_All@value:	
  2318                           ; 1 bytes @ 0x34
  2319                           
  2320  0054                     PROCULUS_VP_Write_String@vp:	
  2321                           ; 2 bytes @ 0x34
  2322                           
  2323  0054                     PROCULUS_Buzzer@vetor:	
  2324                           ; 2 bytes @ 0x34
  2325                           
  2326  0054                     PROCULUS_Show_Screen@vetor:	
  2327                           ; 2 bytes @ 0x34
  2328                           
  2329  0054                     mediaLeituraPt100Umidadde@tensao:	
  2330                           ; 3 bytes @ 0x34
  2331                           
  2332  0054                     Save_Log@add_datalog:	
  2333                           ; 4 bytes @ 0x34
  2334                           
  2335                           
  2336                           ; 4 bytes @ 0x34
  2337  0054                     	ds	2
  2338  0056                     ??_EEPROM_24C1025_Fill_All:	
  2339  0056                     EEPROM_24C1025_Fill_All@chip_add:	
  2340                           ; 1 bytes @ 0x36
  2341                           
  2342  0056                     PROCULUS_VP_Write_String@text:	
  2343                           ; 1 bytes @ 0x36
  2344                           
  2345                           
  2346                           ; 1 bytes @ 0x36
  2347  0056                     	ds	1
  2348  0057                     ??_PROCULUS_VP_Write_String:	
  2349  0057                     EEPROM_24C1025_Fill_All@mem_add:	
  2350                           ; 1 bytes @ 0x37
  2351                           
  2352                           
  2353                           ; 4 bytes @ 0x37
  2354  0057                     	ds	1
  2355  0058                     ??_Save_Log:	
  2356  0058                     mediaLeituraPt100Umidadde@canal:	
  2357                           ; 1 bytes @ 0x38
  2358                           
  2359                           
  2360                           ; 1 bytes @ 0x38
  2361  0058                     	ds	1
  2362  0059                     mediaLeituraPt100Umidadde@i:	
  2363                           
  2364                           ; 1 bytes @ 0x39
  2365  0059                     	ds	1
  2366  005A                     mediaLeituraPt100Umidadde@Temp:	
  2367                           
  2368                           ; 4 bytes @ 0x3A
  2369  005A                     	ds	1
  2370  005B                     ??_Decodify_Command:	
  2371                           
  2372                           ; 1 bytes @ 0x3B
  2373  005B                     	ds	3
  2374  005E                     ??_main:	
  2375                           
  2376                           ; 1 bytes @ 0x3E
  2377  005E                     	ds	3
  2378  0061                     main@reset:	
  2379                           
  2380                           ; 2 bytes @ 0x41
  2381  0061                     	ds	2
  2382                           
  2383                           	psect	maintext
  2384  1724                     __pmaintext:	
  2385 ;;
  2386 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2387 ;;
  2388 ;; *************** function _main *****************
  2389 ;; Defined at:
  2390 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  reset           2   65[BANK0 ] unsigned int 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : B00/0
  2401 ;;		On exit  : 300/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       2       0       0       0
  2406 ;;      Temps:          0       3       0       0       0
  2407 ;;      Totals:         0       5       0       0       0
  2408 ;;Total ram usage:        5 bytes
  2409 ;; Hardware stack levels required when called:    7
  2410 ;; This function calls:
  2411 ;;		_ADC_init
  2412 ;;		_Decodify_Command
  2413 ;;		_EEPROM_Read_Integer
  2414 ;;		_EEPROM_Write_Integer
  2415 ;;		_I2C_Master_Init
  2416 ;;		_USART_init
  2417 ;;		_mediaLeituraPt100Umidadde
  2418 ;;		_my_delay_ms_WDT
  2419 ;; This function is called by:
  2420 ;;		Startup code after reset
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _main
  2426  1724                     _main:	
  2427  1724                     l6599:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2430                           
  2431                           
  2432                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2433  1724  3002               	movlw	2
  2434  1725  1283               	bcf	3,5	;RP0=0, select bank0
  2435  1726  1303               	bcf	3,6	;RP1=0, select bank0
  2436  1727  00E0               	movwf	??_main+2
  2437  1728  3004               	movlw	4
  2438  1729  00DF               	movwf	??_main+1
  2439  172A  30B9               	movlw	185
  2440  172B  00DE               	movwf	??_main
  2441  172C                     u5377:	
  2442  172C  0BDE               	decfsz	??_main,f
  2443  172D  2F2C               	goto	u5377
  2444  172E  0BDF               	decfsz	??_main+1,f
  2445  172F  2F2C               	goto	u5377
  2446  1730  0BE0               	decfsz	??_main+2,f
  2447  1731  2F2C               	goto	u5377
  2448  1732  2F33               	nop2
  2449                           
  2450                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2451  1733  1683               	bsf	3,5	;RP0=1, select bank1
  2452  1734  1303               	bcf	3,6	;RP1=0, select bank1
  2453  1735  160F               	bsf	15,4	;volatile
  2454                           
  2455                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2456  1736  168F               	bsf	15,5	;volatile
  2457                           
  2458                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2459  1737  170F               	bsf	15,6	;volatile
  2460                           
  2461                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2462  1738  1283               	bcf	3,5	;RP0=0, select bank0
  2463  1739  0185               	clrf	5	;volatile
  2464                           
  2465                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2466  173A  0186               	clrf	6	;volatile
  2467                           
  2468                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2469  173B  0187               	clrf	7	;volatile
  2470                           
  2471                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2472  173C  0189               	clrf	9	;volatile
  2473                           
  2474                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2475  173D  30EF               	movlw	239
  2476  173E  1683               	bsf	3,5	;RP0=1, select bank1
  2477  173F  0085               	movwf	5	;volatile
  2478                           
  2479                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2480  1740  300F               	movlw	15
  2481  1741  0086               	movwf	6	;volatile
  2482                           
  2483                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2484  1742  30F0               	movlw	240
  2485  1743  0087               	movwf	7	;volatile
  2486                           
  2487                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2488  1744  30FF               	movlw	255
  2489  1745  0089               	movwf	9	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2492  1746  3011               	movlw	17
  2493  1747  1703               	bsf	3,6	;RP1=1, select bank3
  2494  1748  0088               	movwf	8	;volatile
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2497  1749  0189               	clrf	9	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2500  174A  1303               	bcf	3,6	;RP1=0, select bank1
  2501  174B  1381               	bcf	1,7	;volatile
  2502                           
  2503                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2504  174C  300F               	movlw	15
  2505  174D  0095               	movwf	21	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2508  174E  1283               	bcf	3,5	;RP0=0, select bank0
  2509  174F  1786               	bsf	6,7	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2512  1750  1706               	bsf	6,6	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2515  1751  1686               	bsf	6,5	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2518  1752  3003               	movlw	3
  2519  1753  01A3               	clrf	my_delay_ms_WDT@time+3
  2520  1754  01A2               	clrf	my_delay_ms_WDT@time+2
  2521  1755  00A1               	movwf	my_delay_ms_WDT@time+1
  2522  1756  30E8               	movlw	232
  2523  1757  00A0               	movwf	my_delay_ms_WDT@time
  2524  1758  120A  158A  2730  160A  118A  	fcall	_my_delay_ms_WDT
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2527  175D  1683               	bsf	3,5	;RP0=1, select bank1
  2528  175E  1281               	bcf	1,5	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2531  175F  1581               	bsf	1,3	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2534  1760  1401               	bsf	1,0	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2537  1761  1481               	bsf	1,1	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2540  1762  1501               	bsf	1,2	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2543  1763  128B               	bcf	11,5	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2546  1764  120B               	bcf	11,4	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2549  1765  178B               	bsf	11,7	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2552  1766  170B               	bsf	11,6	;volatile
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2555  1767  1283               	bcf	3,5	;RP0=0, select bank0
  2556  1768  1610               	bsf	16,4	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2559  1769  1690               	bsf	16,5	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2562  176A  1090               	bcf	16,1	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2565  176B  1683               	bsf	3,5	;RP0=1, select bank1
  2566  176C  140C               	bsf	12,0	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2569  176D  3001               	movlw	1
  2570  176E  1283               	bcf	3,5	;RP0=0, select bank0
  2571  176F  0090               	movwf	16	;volatile
  2572  1770  0064               	clrwdt	;# 
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2575  1771  120A  118A  27EF  160A  118A  	fcall	_ADC_init
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2578  1776  3001               	movlw	1
  2579  1777  01B0               	clrf	I2C_Master_Init@c+3
  2580  1778  00AF               	movwf	I2C_Master_Init@c+2
  2581  1779  3086               	movlw	134
  2582  177A  00AE               	movwf	I2C_Master_Init@c+1
  2583  177B  30A0               	movlw	160
  2584  177C  00AD               	movwf	I2C_Master_Init@c
  2585  177D  160A  118A  24C8  160A  118A  	fcall	_I2C_Master_Init
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2588  1782  1283               	bcf	3,5	;RP0=0, select bank0
  2589  1783  3001               	movlw	1
  2590  1784  01A3               	clrf	USART_init@baudrate+3
  2591  1785  00A2               	movwf	USART_init@baudrate+2
  2592  1786  30C2               	movlw	194
  2593  1787  00A1               	movwf	USART_init@baudrate+1
  2594  1788  01A0               	clrf	USART_init@baudrate
  2595  1789  160A  118A  2442  160A  118A  	fcall	_USART_init
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2598  178E  3010               	movlw	16
  2599  178F  160A  118A  248E  160A  118A  	fcall	_EEPROM_Read_Integer
  2600  1794  0824               	movf	?_EEPROM_Read_Integer+1,w
  2601  1795  00E2               	movwf	main@reset+1
  2602  1796  0823               	movf	?_EEPROM_Read_Integer,w
  2603  1797  00E1               	movwf	main@reset
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2606  1798  0F61               	incfsz	main@reset,w
  2607  1799  2FA5               	goto	l6669
  2608  179A  0A62               	incf	main@reset+1,w
  2609  179B  1D03               	btfss	3,2
  2610  179C  2FA5               	goto	l6669
  2611  179D  3010               	movlw	16
  2612  179E  01A5               	clrf	EEPROM_Write_Integer@dado
  2613  179F  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2614  17A0  160A  118A  253D  160A  118A  	fcall	_EEPROM_Write_Integer
  2615  17A5                     l6669:	
  2616                           
  2617                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2618  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2619  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2620  17A7  0AE1               	incf	main@reset,f
  2621  17A8  1903               	skipnz
  2622  17A9  0AE2               	incf	main@reset+1,f
  2623                           
  2624                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2625  17AA  0862               	movf	main@reset+1,w
  2626  17AB  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2627  17AC  0861               	movf	main@reset,w
  2628  17AD  00A5               	movwf	EEPROM_Write_Integer@dado
  2629  17AE  3010               	movlw	16
  2630  17AF  160A  118A  253D  160A  118A  	fcall	_EEPROM_Write_Integer
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2633  17B4  01F2               	clrf	_Delay_Led_Tmr0	;volatile
  2634  17B5  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
  2635                           
  2636                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2637  17B6  01F0               	clrf	_Delay_Led_Usart	;volatile
  2638  17B7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2641  17B8  01F4               	clrf	_Delay_Led_Memory	;volatile
  2642  17B9  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  2643                           
  2644                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2645  17BA  1683               	bsf	3,5	;RP0=1, select bank1
  2646  17BB  1303               	bcf	3,6	;RP1=0, select bank1
  2647  17BC  01DB               	clrf	_segundo^(0+128)	;volatile
  2648                           
  2649                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2650  17BD  01DA               	clrf	_hora^(0+128)	;volatile
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2653  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2654  17BF  1007               	bcf	7,0	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2657  17C0  1087               	bcf	7,1	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2660  17C1  1105               	bcf	5,2	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2663  17C2  1185               	bcf	5,3	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2666  17C3  0906               	comf	6,w	;volatile
  2667  17C4  00E9               	movwf	_Board_Number
  2668  17C5  300F               	movlw	15
  2669  17C6  05E9               	andwf	_Board_Number,f
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 229:      statuspower.flag_global_condensador=0;
  2672  17C7  01EA               	clrf	_canal
  2673  17C8  0AEA               	incf	_canal,f
  2674  17C9                     l6695:	
  2675  17C9  3002               	movlw	2
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2678  17CA  17EB               	bsf	_generic_status,7
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 270:          if(++canal==2) canal=0;
  2681  17CB  0AEA               	incf	_canal,f
  2682  17CC  066A               	xorwf	_canal,w
  2683  17CD  1903               	btfsc	3,2
  2684  17CE  01EA               	clrf	_canal
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 271:          mediaLeituraPt100Umidadde(canal);
  2687  17CF  086A               	movf	_canal,w
  2688  17D0  120A  118A  207C  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2691  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2692  17D6  1C6B               	btfss	_generic_status,0
  2693  17D7  2FC9               	goto	l6695
  2694                           
  2695                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2696  17D8  1683               	bsf	3,5	;RP0=1, select bank3
  2697  17D9  1703               	bsf	3,6	;RP1=1, select bank3
  2698  17DA  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2699  17DB  1283               	bcf	3,5	;RP0=0, select bank0
  2700  17DC  1303               	bcf	3,6	;RP1=0, select bank0
  2701  17DD  00E6               	movwf	_header+1
  2702  17DE  1683               	bsf	3,5	;RP0=1, select bank3
  2703  17DF  1703               	bsf	3,6	;RP1=1, select bank3
  2704  17E0  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2705  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  2706  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  2707  17E3  00E5               	movwf	_header
  2708                           
  2709                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2710  17E4  3ABB               	xorlw	187
  2711  17E5  30AA               	movlw	170
  2712  17E6  1903               	skipnz
  2713  17E7  0666               	xorwf	_header+1,w
  2714  17E8  1D03               	btfss	3,2
  2715  17E9  2FC9               	goto	l6695
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2718  17EA  1683               	bsf	3,5	;RP0=1, select bank3
  2719  17EB  1703               	bsf	3,6	;RP1=1, select bank3
  2720  17EC  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2721  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  2722  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  2723  17EF  00E8               	movwf	_destino
  2724                           
  2725                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2726  17F0  0669               	xorwf	_Board_Number,w
  2727  17F1  1903               	skipnz
  2728  17F2  2FF5               	goto	l6711
  2729  17F3  0F68               	incfsz	_destino,w
  2730  17F4  2FC9               	goto	l6695
  2731  17F5                     l6711:	
  2732                           
  2733                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2734  17F5  3014               	movlw	20
  2735  17F6  00F0               	movwf	_Delay_Led_Usart	;volatile
  2736  17F7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  2737                           
  2738                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2739  17F8  120A  158A  2064  160A  118A  	fcall	_Decodify_Command
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2742  17FD  1283               	bcf	3,5	;RP0=0, select bank0
  2743  17FE  106B               	bcf	_generic_status,0
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 297:             }
  2746  17FF  2FC9               	goto	l6695
  2747  1800                     __end_of_main:	
  2748                           
  2749                           	psect	text2
  2750  03FB                     __ptext2:	
  2751 ;; *************** function ___flsub *****************
  2752 ;; Defined at:
  2753 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  a               4   43[BANK0 ] void 
  2756 ;;  b               4   47[BANK0 ] void 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  4   43[BANK0 ] void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 300/0
  2765 ;;		On exit  : 300/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       8       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       8       0       0       0
  2772 ;;Total ram usage:        8 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		___fladd
  2777 ;; This function is called by:
  2778 ;;		_mediaLeituraPt100Umidadde
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function ___flsub
  2784  03FB                     ___flsub:	
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2788  03FB  3080               	movlw	128
  2789  03FC  06CE               	xorwf	___flsub@a+3,f
  2790  03FD  0852               	movf	___flsub@b+3,w
  2791  03FE  00BA               	movwf	___fladd@b+3
  2792  03FF  0851               	movf	___flsub@b+2,w
  2793  0400  00B9               	movwf	___fladd@b+2
  2794  0401  0850               	movf	___flsub@b+1,w
  2795  0402  00B8               	movwf	___fladd@b+1
  2796  0403  084F               	movf	___flsub@b,w
  2797  0404  00B7               	movwf	___fladd@b
  2798  0405  084E               	movf	___flsub@a+3,w
  2799  0406  00BE               	movwf	___fladd@a+3
  2800  0407  084D               	movf	___flsub@a+2,w
  2801  0408  00BD               	movwf	___fladd@a+2
  2802  0409  084C               	movf	___flsub@a+1,w
  2803  040A  00BC               	movwf	___fladd@a+1
  2804  040B  084B               	movf	___flsub@a,w
  2805  040C  00BB               	movwf	___fladd@a
  2806  040D  2417               	fcall	___fladd
  2807  040E  083A               	movf	?___fladd+3,w
  2808  040F  00CE               	movwf	?___flsub+3
  2809  0410  0839               	movf	?___fladd+2,w
  2810  0411  00CD               	movwf	?___flsub+2
  2811  0412  0838               	movf	?___fladd+1,w
  2812  0413  00CC               	movwf	?___flsub+1
  2813  0414  0837               	movf	?___fladd,w
  2814  0415  00CB               	movwf	?___flsub
  2815  0416  0008               	return
  2816  0417                     __end_of___flsub:	
  2817  0417                     __ptext3:	
  2818 ;; *************** function ___fladd *****************
  2819 ;; Defined at:
  2820 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  b               4   23[BANK0 ] void 
  2823 ;;  a               4   27[BANK0 ] void 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  grs             1   42[BANK0 ] unsigned char 
  2826 ;;  bexp            1   41[BANK0 ] unsigned char 
  2827 ;;  aexp            1   40[BANK0 ] unsigned char 
  2828 ;;  signs           1   39[BANK0 ] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  4   23[BANK0 ] unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, btemp+1
  2833 ;; Tracked objects:
  2834 ;;		On entry : 300/0
  2835 ;;		On exit  : 300/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       8       0       0       0
  2839 ;;      Locals:         0       4       0       0       0
  2840 ;;      Temps:          0       8       0       0       0
  2841 ;;      Totals:         0      20       0       0       0
  2842 ;;Total ram usage:       20 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_mediaLeituraPt100Umidadde
  2849 ;;		___flsub
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function ___fladd
  2855  0417                     ___fladd:	
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2859  0417  083A               	movf	___fladd@b+3,w
  2860  0418  00C7               	movwf	___fladd@signs
  2861  0419  3080               	movlw	128
  2862  041A  05C7               	andwf	___fladd@signs,f
  2863  041B  1003               	clrc
  2864  041C  0D3A               	rlf	___fladd@b+3,w
  2865  041D  00C9               	movwf	___fladd@bexp
  2866  041E  1BB9               	btfsc	___fladd@b+2,7
  2867  041F  1449               	bsf	___fladd@bexp,0
  2868  0420  0849               	movf	___fladd@bexp,w
  2869  0421  1903               	btfsc	3,2
  2870  0422  2C2B               	goto	l1266
  2871  0423  0F49               	incfsz	___fladd@bexp,w
  2872  0424  2C29               	goto	l1267
  2873  0425  01B7               	clrf	___fladd@b
  2874  0426  01B8               	clrf	___fladd@b+1
  2875  0427  01B9               	clrf	___fladd@b+2
  2876  0428  01BA               	clrf	___fladd@b+3
  2877  0429                     l1267:	
  2878  0429  17B9               	bsf	___fladd@b+2,7
  2879  042A  2C2E               	goto	L2
  2880  042B                     l1266:	
  2881  042B  01B7               	clrf	___fladd@b
  2882  042C  01B8               	clrf	___fladd@b+1
  2883  042D  01B9               	clrf	___fladd@b+2
  2884  042E                     L2:	
  2885  042E  01BA               	clrf	___fladd@b+3
  2886  042F  083E               	movf	___fladd@a+3,w
  2887  0430  00C8               	movwf	___fladd@aexp
  2888  0431  3080               	movlw	128
  2889  0432  05C8               	andwf	___fladd@aexp,f
  2890  0433  0848               	movf	___fladd@aexp,w
  2891  0434  0647               	xorwf	___fladd@signs,w
  2892  0435  1D03               	btfss	3,2
  2893  0436  1747               	bsf	___fladd@signs,6
  2894  0437  1003               	clrc
  2895  0438  0D3E               	rlf	___fladd@a+3,w
  2896  0439  00C8               	movwf	___fladd@aexp
  2897  043A  1BBD               	btfsc	___fladd@a+2,7
  2898  043B  1448               	bsf	___fladd@aexp,0
  2899  043C  0848               	movf	___fladd@aexp,w
  2900  043D  1903               	btfsc	3,2
  2901  043E  2C47               	goto	l1271
  2902  043F  0F48               	incfsz	___fladd@aexp,w
  2903  0440  2C45               	goto	l1272
  2904  0441  01BB               	clrf	___fladd@a
  2905  0442  01BC               	clrf	___fladd@a+1
  2906  0443  01BD               	clrf	___fladd@a+2
  2907  0444  01BE               	clrf	___fladd@a+3
  2908  0445                     l1272:	
  2909  0445  17BD               	bsf	___fladd@a+2,7
  2910  0446  2C4A               	goto	L3
  2911  0447                     l1271:	
  2912  0447  01BB               	clrf	___fladd@a
  2913  0448  01BC               	clrf	___fladd@a+1
  2914  0449  01BD               	clrf	___fladd@a+2
  2915  044A                     L3:	
  2916  044A  01BE               	clrf	___fladd@a+3
  2917  044B  0849               	movf	___fladd@bexp,w
  2918  044C  0248               	subwf	___fladd@aexp,w
  2919  044D  1803               	skipnc
  2920  044E  2C71               	goto	l4013
  2921  044F  1F47               	btfss	___fladd@signs,6
  2922  0450  2C53               	goto	l3983
  2923  0451  3080               	movlw	128
  2924  0452  06C7               	xorwf	___fladd@signs,f
  2925  0453                     l3983:	
  2926  0453  0849               	movf	___fladd@bexp,w
  2927  0454  00CA               	movwf	___fladd@grs
  2928  0455  0848               	movf	___fladd@aexp,w
  2929  0456  00C9               	movwf	___fladd@bexp
  2930  0457  084A               	movf	___fladd@grs,w
  2931  0458  00C8               	movwf	___fladd@aexp
  2932  0459  0837               	movf	___fladd@b,w
  2933  045A  00CA               	movwf	___fladd@grs
  2934  045B  083B               	movf	___fladd@a,w
  2935  045C  00B7               	movwf	___fladd@b
  2936  045D  084A               	movf	___fladd@grs,w
  2937  045E  00BB               	movwf	___fladd@a
  2938  045F  0838               	movf	___fladd@b+1,w
  2939  0460  00CA               	movwf	___fladd@grs
  2940  0461  083C               	movf	___fladd@a+1,w
  2941  0462  00B8               	movwf	___fladd@b+1
  2942  0463  084A               	movf	___fladd@grs,w
  2943  0464  00BC               	movwf	___fladd@a+1
  2944  0465  0839               	movf	___fladd@b+2,w
  2945  0466  00CA               	movwf	___fladd@grs
  2946  0467  083D               	movf	___fladd@a+2,w
  2947  0468  00B9               	movwf	___fladd@b+2
  2948  0469  084A               	movf	___fladd@grs,w
  2949  046A  00BD               	movwf	___fladd@a+2
  2950  046B  083A               	movf	___fladd@b+3,w
  2951  046C  00CA               	movwf	___fladd@grs
  2952  046D  083E               	movf	___fladd@a+3,w
  2953  046E  00BA               	movwf	___fladd@b+3
  2954  046F  084A               	movf	___fladd@grs,w
  2955  0470  00BE               	movwf	___fladd@a+3
  2956  0471                     l4013:	
  2957  0471  01CA               	clrf	___fladd@grs
  2958  0472  0848               	movf	___fladd@aexp,w
  2959  0473  00BF               	movwf	??___fladd
  2960  0474  01C0               	clrf	??___fladd+1
  2961  0475  0840               	movf	??___fladd+1,w
  2962  0476  00C2               	movwf	??___fladd+3
  2963  0477  0849               	movf	___fladd@bexp,w
  2964  0478  023F               	subwf	??___fladd,w
  2965  0479  00C1               	movwf	??___fladd+2
  2966  047A  1C03               	skipc
  2967  047B  03C2               	decf	??___fladd+3,f
  2968  047C  0842               	movf	??___fladd+3,w
  2969  047D  3A80               	xorlw	128
  2970  047E  00FF               	movwf	127
  2971  047F  3080               	movlw	128
  2972  0480  027F               	subwf	127,w
  2973  0481  1D03               	skipz
  2974  0482  2C85               	goto	u2695
  2975  0483  301A               	movlw	26
  2976  0484  0241               	subwf	??___fladd+2,w
  2977  0485                     u2695:	
  2978  0485  1C03               	skipc
  2979  0486  2CA6               	goto	l4029
  2980  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0489  083A               	movf	___fladd@b+3,w
  2983  048A  0439               	iorwf	___fladd@b+2,w
  2984  048B  0438               	iorwf	___fladd@b+1,w
  2985  048C  0437               	iorwf	___fladd@b,w
  2986  048D  1903               	btfsc	3,2
  2987  048E  2C91               	goto	u2700
  2988  048F  3001               	movlw	1
  2989  0490  2C92               	goto	u2710
  2990  0491                     u2700:	
  2991  0491  3000               	movlw	0
  2992  0492                     u2710:	
  2993  0492  00CA               	movwf	___fladd@grs
  2994  0493  01B7               	clrf	___fladd@b
  2995  0494  01B8               	clrf	___fladd@b+1
  2996  0495  01B9               	clrf	___fladd@b+2
  2997  0496  01BA               	clrf	___fladd@b+3
  2998  0497  0848               	movf	___fladd@aexp,w
  2999  0498  00C9               	movwf	___fladd@bexp
  3000  0499  2CAC               	goto	l1277
  3001  049A                     l1279:	
  3002  049A  1C4A               	btfss	___fladd@grs,0
  3003  049B  2CA1               	goto	l1280
  3004  049C  1003               	clrc
  3005  049D  0C4A               	rrf	___fladd@grs,w
  3006  049E  3801               	iorlw	1
  3007  049F  00CA               	movwf	___fladd@grs
  3008  04A0  2CA3               	goto	l1281
  3009  04A1                     l1280:	
  3010  04A1  1003               	clrc
  3011  04A2  0CCA               	rrf	___fladd@grs,f
  3012  04A3                     l1281:	
  3013  04A3  2586  120A  118A   	fcall	PL26	;call to abstracted procedure
  3014  04A6                     l4029:	
  3015  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3016  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3017  04A8  0848               	movf	___fladd@aexp,w
  3018  04A9  0249               	subwf	___fladd@bexp,w
  3019  04AA  1C03               	skipc
  3020  04AB  2C9A               	goto	l1279
  3021  04AC                     l1277:	
  3022  04AC  1B47               	btfsc	___fladd@signs,6
  3023  04AD  2CD5               	goto	l4049
  3024  04AE  0849               	movf	___fladd@bexp,w
  3025  04AF  1D03               	btfss	3,2
  3026  04B0  2CB2               	goto	l4035
  3027  04B1  2D8F               	ljmp	PL50	;call to abstracted procedure
  3028  04B2                     l4035:	
  3029  04B2  083B               	movf	___fladd@a,w
  3030  04B3  07B7               	addwf	___fladd@b,f
  3031  04B4  083C               	movf	___fladd@a+1,w
  3032  04B5  1103               	clrz
  3033  04B6  1803               	skipnc
  3034  04B7  3E01               	addlw	1
  3035  04B8  1D03               	btfss	3,2
  3036  04B9  07B8               	addwf	___fladd@b+1,f
  3037  04BA  083D               	movf	___fladd@a+2,w
  3038  04BB  1103               	clrz
  3039  04BC  1803               	skipnc
  3040  04BD  3E01               	addlw	1
  3041  04BE  1D03               	btfss	3,2
  3042  04BF  07B9               	addwf	___fladd@b+2,f
  3043  04C0  083E               	movf	___fladd@a+3,w
  3044  04C1  1103               	clrz
  3045  04C2  1803               	skipnc
  3046  04C3  3E01               	addlw	1
  3047  04C4  1D03               	btfss	3,2
  3048  04C5  07BA               	addwf	___fladd@b+3,f
  3049  04C6  1C3A               	btfss	___fladd@b+3,0
  3050  04C7  2D51               	goto	l4079
  3051  04C8  1C4A               	btfss	___fladd@grs,0
  3052  04C9  2CCF               	goto	l1288
  3053  04CA  1003               	clrc
  3054  04CB  0C4A               	rrf	___fladd@grs,w
  3055  04CC  3801               	iorlw	1
  3056  04CD  00CA               	movwf	___fladd@grs
  3057  04CE  2CD1               	goto	l1289
  3058  04CF                     l1288:	
  3059  04CF  1003               	clrc
  3060  04D0  0CCA               	rrf	___fladd@grs,f
  3061  04D1                     l1289:	
  3062  04D1  2586  120A  118A   	fcall	PL26	;call to abstracted procedure
  3063  04D4  2D51               	goto	l4079
  3064  04D5                     l4049:	
  3065  04D5  083A               	movf	___fladd@b+3,w
  3066  04D6  3A80               	xorlw	128
  3067  04D7  00FF               	movwf	127
  3068  04D8  083E               	movf	___fladd@a+3,w
  3069  04D9  3A80               	xorlw	128
  3070  04DA  027F               	subwf	127,w
  3071  04DB  1D03               	skipz
  3072  04DC  2CE7               	goto	u2813
  3073  04DD  083D               	movf	___fladd@a+2,w
  3074  04DE  0239               	subwf	___fladd@b+2,w
  3075  04DF  1D03               	skipz
  3076  04E0  2CE7               	goto	u2813
  3077  04E1  083C               	movf	___fladd@a+1,w
  3078  04E2  0238               	subwf	___fladd@b+1,w
  3079  04E3  1D03               	skipz
  3080  04E4  2CE7               	goto	u2813
  3081  04E5  083B               	movf	___fladd@a,w
  3082  04E6  0237               	subwf	___fladd@b,w
  3083  04E7                     u2813:	
  3084  04E7  1803               	skipnc
  3085  04E8  2D27               	goto	l4059
  3086  04E9  30FF               	movlw	255
  3087  04EA  00BF               	movwf	??___fladd
  3088  04EB  00C0               	movwf	??___fladd+1
  3089  04EC  00C1               	movwf	??___fladd+2
  3090  04ED  00C2               	movwf	??___fladd+3
  3091  04EE  083B               	movf	___fladd@a,w
  3092  04EF  00C3               	movwf	??___fladd+4
  3093  04F0  083C               	movf	___fladd@a+1,w
  3094  04F1  00C4               	movwf	??___fladd+5
  3095  04F2  083D               	movf	___fladd@a+2,w
  3096  04F3  00C5               	movwf	??___fladd+6
  3097  04F4  083E               	movf	___fladd@a+3,w
  3098  04F5  00C6               	movwf	??___fladd+7
  3099  04F6  0837               	movf	___fladd@b,w
  3100  04F7  02C3               	subwf	??___fladd+4,f
  3101  04F8  0838               	movf	___fladd@b+1,w
  3102  04F9  1C03               	skipc
  3103  04FA  0F38               	incfsz	___fladd@b+1,w
  3104  04FB  02C4               	subwf	??___fladd+5,f
  3105  04FC  0839               	movf	___fladd@b+2,w
  3106  04FD  1C03               	skipc
  3107  04FE  0F39               	incfsz	___fladd@b+2,w
  3108  04FF  02C5               	subwf	??___fladd+6,f
  3109  0500  083A               	movf	___fladd@b+3,w
  3110  0501  1C03               	skipc
  3111  0502  0F3A               	incfsz	___fladd@b+3,w
  3112  0503  02C6               	subwf	??___fladd+7,f
  3113  0504  0843               	movf	??___fladd+4,w
  3114  0505  07BF               	addwf	??___fladd,f
  3115  0506  0844               	movf	??___fladd+5,w
  3116  0507  1803               	skipnc
  3117  0508  0F44               	incfsz	??___fladd+5,w
  3118  0509  07C0               	addwf	??___fladd+1,f
  3119  050A  0845               	movf	??___fladd+6,w
  3120  050B  1803               	skipnc
  3121  050C  0F45               	incfsz	??___fladd+6,w
  3122  050D  07C1               	addwf	??___fladd+2,f
  3123  050E  0846               	movf	??___fladd+7,w
  3124  050F  1803               	skipnc
  3125  0510  0A46               	incf	??___fladd+7,w
  3126  0511  07C2               	addwf	??___fladd+3,f
  3127  0512  0842               	movf	??___fladd+3,w
  3128  0513  00BA               	movwf	___fladd@b+3
  3129  0514  0841               	movf	??___fladd+2,w
  3130  0515  00B9               	movwf	___fladd@b+2
  3131  0516  0840               	movf	??___fladd+1,w
  3132  0517  00B8               	movwf	___fladd@b+1
  3133  0518  083F               	movf	??___fladd,w
  3134  0519  00B7               	movwf	___fladd@b
  3135  051A  3080               	movlw	128
  3136  051B  06C7               	xorwf	___fladd@signs,f
  3137  051C  09CA               	comf	___fladd@grs,f
  3138  051D  0FCA               	incfsz	___fladd@grs,f
  3139  051E  2D35               	goto	l1294
  3140  051F  0AB7               	incf	___fladd@b,f
  3141  0520  1903               	skipnz
  3142  0521  0AB8               	incf	___fladd@b+1,f
  3143  0522  1903               	skipnz
  3144  0523  0AB9               	incf	___fladd@b+2,f
  3145  0524  1903               	skipnz
  3146  0525  0ABA               	incf	___fladd@b+3,f
  3147  0526  2D35               	goto	l1294
  3148  0527                     l4059:	
  3149  0527  083B               	movf	___fladd@a,w
  3150  0528  02B7               	subwf	___fladd@b,f
  3151  0529  083C               	movf	___fladd@a+1,w
  3152  052A  1C03               	skipc
  3153  052B  0F3C               	incfsz	___fladd@a+1,w
  3154  052C  02B8               	subwf	___fladd@b+1,f
  3155  052D  083D               	movf	___fladd@a+2,w
  3156  052E  1C03               	skipc
  3157  052F  0F3D               	incfsz	___fladd@a+2,w
  3158  0530  02B9               	subwf	___fladd@b+2,f
  3159  0531  083E               	movf	___fladd@a+3,w
  3160  0532  1C03               	skipc
  3161  0533  0F3E               	incfsz	___fladd@a+3,w
  3162  0534  02BA               	subwf	___fladd@b+3,f
  3163  0535                     l1294:	
  3164  0535  083A               	movf	___fladd@b+3,w
  3165  0536  0439               	iorwf	___fladd@b+2,w
  3166  0537  0438               	iorwf	___fladd@b+1,w
  3167  0538  0437               	iorwf	___fladd@b,w
  3168  0539  1D03               	skipz
  3169  053A  2D4F               	goto	l4077
  3170  053B  084A               	movf	___fladd@grs,w
  3171  053C  1D03               	btfss	3,2
  3172  053D  2D4F               	goto	l4077
  3173  053E  2D8F               	ljmp	PL50	;call to abstracted procedure
  3174  053F                     l4065:	
  3175  053F  1003               	clrc
  3176  0540  0DB7               	rlf	___fladd@b,f
  3177  0541  0DB8               	rlf	___fladd@b+1,f
  3178  0542  0DB9               	rlf	___fladd@b+2,f
  3179  0543  0DBA               	rlf	___fladd@b+3,f
  3180  0544  1BCA               	btfsc	___fladd@grs,7
  3181  0545  1437               	bsf	___fladd@b,0
  3182  0546  1C4A               	btfss	___fladd@grs,0
  3183  0547  2D4A               	goto	l1299
  3184  0548  1403               	setc
  3185  0549  2D4B               	goto	L4
  3186  054A                     l1299:	
  3187  054A  1003               	clrc
  3188  054B                     L4:	
  3189  054B  0DCA               	rlf	___fladd@grs,f
  3190  054C  0849               	movf	___fladd@bexp,w
  3191  054D  1D03               	btfss	3,2
  3192  054E  03C9               	decf	___fladd@bexp,f
  3193  054F                     l4077:	
  3194  054F  1FB9               	btfss	___fladd@b+2,7
  3195  0550  2D3F               	goto	l4065
  3196  0551                     l4079:	
  3197  0551  01C8               	clrf	___fladd@aexp
  3198  0552  1FCA               	btfss	___fladd@grs,7
  3199  0553  2D5C               	goto	l4089
  3200  0554  084A               	movf	___fladd@grs,w
  3201  0555  397F               	andlw	127
  3202  0556  1903               	btfsc	3,2
  3203  0557  1837               	btfsc	___fladd@b,0
  3204  0558  2D5A               	goto	l4085
  3205  0559  2D5C               	goto	l4089
  3206  055A                     l4085:	
  3207  055A  01C8               	clrf	___fladd@aexp
  3208  055B  0AC8               	incf	___fladd@aexp,f
  3209  055C                     l4089:	
  3210  055C  0848               	movf	___fladd@aexp,w
  3211  055D  1903               	btfsc	3,2
  3212  055E  2D6F               	goto	l4101
  3213  055F  0AB7               	incf	___fladd@b,f
  3214  0560  1903               	skipnz
  3215  0561  0AB8               	incf	___fladd@b+1,f
  3216  0562  1903               	skipnz
  3217  0563  0AB9               	incf	___fladd@b+2,f
  3218  0564  1903               	skipnz
  3219  0565  0ABA               	incf	___fladd@b+3,f
  3220  0566  1C3A               	btfss	___fladd@b+3,0
  3221  0567  2D6F               	goto	l4101
  3222  0568  0D3A               	rlf	___fladd@b+3,w
  3223  0569  0CBA               	rrf	___fladd@b+3,f
  3224  056A  0CB9               	rrf	___fladd@b+2,f
  3225  056B  0CB8               	rrf	___fladd@b+1,f
  3226  056C  0CB7               	rrf	___fladd@b,f
  3227  056D  0F49               	incfsz	___fladd@bexp,w
  3228  056E  0AC9               	incf	___fladd@bexp,f
  3229  056F                     l4101:	
  3230  056F  0A49               	incf	___fladd@bexp,w
  3231  0570  1D03               	btfss	3,2
  3232  0571  0849               	movf	___fladd@bexp,w
  3233  0572  1D03               	btfss	3,2
  3234  0573  2D7B               	goto	l4109
  3235  0574  01B7               	clrf	___fladd@b
  3236  0575  01B8               	clrf	___fladd@b+1
  3237  0576  01B9               	clrf	___fladd@b+2
  3238  0577  01BA               	clrf	___fladd@b+3
  3239  0578  0849               	movf	___fladd@bexp,w
  3240  0579  1903               	btfsc	3,2
  3241  057A  01C7               	clrf	___fladd@signs
  3242  057B                     l4109:	
  3243  057B  1C49               	btfss	___fladd@bexp,0
  3244  057C  2D7F               	goto	l1314
  3245  057D  17B9               	bsf	___fladd@b+2,7
  3246  057E  2D80               	goto	l4113
  3247  057F                     l1314:	
  3248  057F  13B9               	bcf	___fladd@b+2,7
  3249  0580                     l4113:	
  3250  0580  1003               	clrc
  3251  0581  0C49               	rrf	___fladd@bexp,w
  3252  0582  00BA               	movwf	___fladd@b+3
  3253  0583  1BC7               	btfsc	___fladd@signs,7
  3254  0584  17BA               	bsf	___fladd@b+3,7
  3255  0585  0008               	return
  3256  0586                     __end_of___fladd:	
  3257  0586                     PL26:	
  3258  0586  1837               	btfsc	___fladd@b,0
  3259  0587  17CA               	bsf	___fladd@grs,7
  3260  0588  0D3A               	rlf	___fladd@b+3,w
  3261  0589  0CBA               	rrf	___fladd@b+3,f
  3262  058A  0CB9               	rrf	___fladd@b+2,f
  3263  058B  0CB8               	rrf	___fladd@b+1,f
  3264  058C  0CB7               	rrf	___fladd@b,f
  3265  058D  0AC9               	incf	___fladd@bexp,f
  3266  058E  0008               	return
  3267  058F                     __end_ofPL26:	
  3268  058F                     PL50:	
  3269  058F  01B7               	clrf	?___fladd
  3270  0590  01B8               	clrf	?___fladd+1
  3271  0591  01B9               	clrf	?___fladd+2
  3272  0592  01BA               	clrf	?___fladd+3
  3273  0593  0008               	return
  3274  0594                     __end_ofPL50:	
  3275                           
  3276                           	psect	text4
  3277  0594                     __ptext4:	
  3278 ;; *************** function ___fldiv *****************
  3279 ;; Defined at:
  3280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  a               4   14[BANK0 ] unsigned char 
  3283 ;;  b               4   18[BANK0 ] unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  grs             4   33[BANK0 ] unsigned long 
  3286 ;;  rem             4   26[BANK0 ] unsigned long 
  3287 ;;  new_exp         2   31[BANK0 ] int 
  3288 ;;  aexp            1   38[BANK0 ] unsigned char 
  3289 ;;  bexp            1   37[BANK0 ] unsigned char 
  3290 ;;  sign            1   30[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  4   14[BANK0 ] unsigned char 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, btemp+1
  3295 ;; Tracked objects:
  3296 ;;		On entry : 300/0
  3297 ;;		On exit  : 300/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       8       0       0       0
  3301 ;;      Locals:         0      13       0       0       0
  3302 ;;      Temps:          0       4       0       0       0
  3303 ;;      Totals:         0      25       0       0       0
  3304 ;;Total ram usage:       25 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_mediaLeituraPt100Umidadde
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function ___fldiv
  3316  0594                     ___fldiv:	
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3320  0594  0835               	movf	___fldiv@b+3,w
  3321  0595  00BE               	movwf	___fldiv@sign
  3322  0596  3080               	movlw	128
  3323  0597  05BE               	andwf	___fldiv@sign,f
  3324  0598  1003               	clrc
  3325  0599  0D35               	rlf	___fldiv@b+3,w
  3326  059A  00C5               	movwf	___fldiv@bexp
  3327  059B  1BB4               	btfsc	___fldiv@b+2,7
  3328  059C  1445               	bsf	___fldiv@bexp,0
  3329  059D  0845               	movf	___fldiv@bexp,w
  3330  059E  1903               	btfsc	3,2
  3331  059F  2DA8               	goto	l1323
  3332  05A0  0F45               	incfsz	___fldiv@bexp,w
  3333  05A1  2DA6               	goto	l1324
  3334  05A2  01B2               	clrf	___fldiv@b
  3335  05A3  01B3               	clrf	___fldiv@b+1
  3336  05A4  01B4               	clrf	___fldiv@b+2
  3337  05A5  01B5               	clrf	___fldiv@b+3
  3338  05A6                     l1324:	
  3339  05A6  17B4               	bsf	___fldiv@b+2,7
  3340  05A7  2DAB               	goto	L5
  3341  05A8                     l1323:	
  3342  05A8  01B2               	clrf	___fldiv@b
  3343  05A9  01B3               	clrf	___fldiv@b+1
  3344  05AA  01B4               	clrf	___fldiv@b+2
  3345  05AB                     L5:	
  3346  05AB  01B5               	clrf	___fldiv@b+3
  3347  05AC  0831               	movf	___fldiv@a+3,w
  3348  05AD  3980               	andlw	128
  3349  05AE  06BE               	xorwf	___fldiv@sign,f
  3350  05AF  1003               	clrc
  3351  05B0  0D31               	rlf	___fldiv@a+3,w
  3352  05B1  00C6               	movwf	___fldiv@aexp
  3353  05B2  1BB0               	btfsc	___fldiv@a+2,7
  3354  05B3  1446               	bsf	___fldiv@aexp,0
  3355  05B4  0846               	movf	___fldiv@aexp,w
  3356  05B5  1903               	btfsc	3,2
  3357  05B6  2DBF               	goto	l1327
  3358  05B7  0F46               	incfsz	___fldiv@aexp,w
  3359  05B8  2DBD               	goto	l1328
  3360  05B9  01AE               	clrf	___fldiv@a
  3361  05BA  01AF               	clrf	___fldiv@a+1
  3362  05BB  01B0               	clrf	___fldiv@a+2
  3363  05BC  01B1               	clrf	___fldiv@a+3
  3364  05BD                     l1328:	
  3365  05BD  17B0               	bsf	___fldiv@a+2,7
  3366  05BE  2DC2               	goto	L6
  3367  05BF                     l1327:	
  3368  05BF  01AE               	clrf	___fldiv@a
  3369  05C0  01AF               	clrf	___fldiv@a+1
  3370  05C1  01B0               	clrf	___fldiv@a+2
  3371  05C2                     L6:	
  3372  05C2  01B1               	clrf	___fldiv@a+3
  3373  05C3  0831               	movf	___fldiv@a+3,w
  3374  05C4  0430               	iorwf	___fldiv@a+2,w
  3375  05C5  042F               	iorwf	___fldiv@a+1,w
  3376  05C6  042E               	iorwf	___fldiv@a,w
  3377  05C7  1D03               	skipz
  3378  05C8  2DDC               	goto	l4769
  3379  05C9  3080               	movlw	128
  3380  05CA  01B2               	clrf	___fldiv@b
  3381  05CB  01B3               	clrf	___fldiv@b+1
  3382  05CC  01B4               	clrf	___fldiv@b+2
  3383  05CD  01B5               	clrf	___fldiv@b+3
  3384  05CE  04B4               	iorwf	___fldiv@b+2,f
  3385  05CF  307F               	movlw	127
  3386  05D0  04B5               	iorwf	___fldiv@b+3,f
  3387  05D1                     L7:	
  3388  05D1  083E               	movf	___fldiv@sign,w
  3389  05D2  04B5               	iorwf	___fldiv@b+3,f
  3390  05D3  0835               	movf	___fldiv@b+3,w
  3391  05D4  00B1               	movwf	?___fldiv+3
  3392  05D5  0834               	movf	___fldiv@b+2,w
  3393  05D6  00B0               	movwf	?___fldiv+2
  3394  05D7  0833               	movf	___fldiv@b+1,w
  3395  05D8  00AF               	movwf	?___fldiv+1
  3396  05D9  0832               	movf	___fldiv@b,w
  3397  05DA  00AE               	movwf	?___fldiv
  3398  05DB  0008               	return
  3399  05DC                     l4769:	
  3400  05DC  0845               	movf	___fldiv@bexp,w
  3401  05DD  1D03               	btfss	3,2
  3402  05DE  2DE4               	goto	l4777
  3403  05DF  01AE               	clrf	?___fldiv
  3404  05E0  01AF               	clrf	?___fldiv+1
  3405  05E1  01B0               	clrf	?___fldiv+2
  3406  05E2  01B1               	clrf	?___fldiv+3
  3407  05E3  0008               	return
  3408  05E4                     l4777:	
  3409  05E4  0845               	movf	___fldiv@bexp,w
  3410  05E5  00BF               	movwf	___fldiv@new_exp
  3411  05E6  01C0               	clrf	___fldiv@new_exp+1
  3412  05E7  0846               	movf	___fldiv@aexp,w
  3413  05E8  02BF               	subwf	___fldiv@new_exp,f
  3414  05E9  1C03               	skipc
  3415  05EA  03C0               	decf	___fldiv@new_exp+1,f
  3416  05EB  307F               	movlw	127
  3417  05EC  07BF               	addwf	___fldiv@new_exp,f
  3418  05ED  1803               	skipnc
  3419  05EE  0AC0               	incf	___fldiv@new_exp+1,f
  3420  05EF  0835               	movf	___fldiv@b+3,w
  3421  05F0  00BD               	movwf	___fldiv@rem+3
  3422  05F1  0834               	movf	___fldiv@b+2,w
  3423  05F2  00BC               	movwf	___fldiv@rem+2
  3424  05F3  0833               	movf	___fldiv@b+1,w
  3425  05F4  00BB               	movwf	___fldiv@rem+1
  3426  05F5  0832               	movf	___fldiv@b,w
  3427  05F6  00BA               	movwf	___fldiv@rem
  3428  05F7  01B2               	clrf	___fldiv@b
  3429  05F8  01B3               	clrf	___fldiv@b+1
  3430  05F9  01B4               	clrf	___fldiv@b+2
  3431  05FA  01B5               	clrf	___fldiv@b+3
  3432  05FB  01C1               	clrf	___fldiv@grs
  3433  05FC  01C2               	clrf	___fldiv@grs+1
  3434  05FD  01C3               	clrf	___fldiv@grs+2
  3435  05FE  01C4               	clrf	___fldiv@grs+3
  3436  05FF  01C6               	clrf	___fldiv@aexp
  3437  0600                     l4803:	
  3438  0600  301A               	movlw	26
  3439  0601  0246               	subwf	___fldiv@aexp,w
  3440  0602  1803               	btfsc	3,0
  3441  0603  2E39               	goto	l4805
  3442  0604  0846               	movf	___fldiv@aexp,w
  3443  0605  1903               	btfsc	3,2
  3444  0606  2E18               	goto	l4795
  3445  0607  1003               	clrc
  3446  0608  0DBA               	rlf	___fldiv@rem,f
  3447  0609  0DBB               	rlf	___fldiv@rem+1,f
  3448  060A  0DBC               	rlf	___fldiv@rem+2,f
  3449  060B  0DBD               	rlf	___fldiv@rem+3,f
  3450  060C  1003               	clrc
  3451  060D  0DB2               	rlf	___fldiv@b,f
  3452  060E  0DB3               	rlf	___fldiv@b+1,f
  3453  060F  0DB4               	rlf	___fldiv@b+2,f
  3454  0610  0DB5               	rlf	___fldiv@b+3,f
  3455  0611  1BC4               	btfsc	___fldiv@grs+3,7
  3456  0612  1432               	bsf	___fldiv@b,0
  3457  0613  1003               	clrc
  3458  0614  0DC1               	rlf	___fldiv@grs,f
  3459  0615  0DC2               	rlf	___fldiv@grs+1,f
  3460  0616  0DC3               	rlf	___fldiv@grs+2,f
  3461  0617  0DC4               	rlf	___fldiv@grs+3,f
  3462  0618                     l4795:	
  3463  0618  0831               	movf	___fldiv@a+3,w
  3464  0619  023D               	subwf	___fldiv@rem+3,w
  3465  061A  1D03               	skipz
  3466  061B  2E26               	goto	u3815
  3467  061C  0830               	movf	___fldiv@a+2,w
  3468  061D  023C               	subwf	___fldiv@rem+2,w
  3469  061E  1D03               	skipz
  3470  061F  2E26               	goto	u3815
  3471  0620  082F               	movf	___fldiv@a+1,w
  3472  0621  023B               	subwf	___fldiv@rem+1,w
  3473  0622  1D03               	skipz
  3474  0623  2E26               	goto	u3815
  3475  0624  082E               	movf	___fldiv@a,w
  3476  0625  023A               	subwf	___fldiv@rem,w
  3477  0626                     u3815:	
  3478  0626  1C03               	skipc
  3479  0627  2E37               	goto	l4801
  3480  0628  1744               	bsf	___fldiv@grs+3,6
  3481  0629  082E               	movf	___fldiv@a,w
  3482  062A  02BA               	subwf	___fldiv@rem,f
  3483  062B  082F               	movf	___fldiv@a+1,w
  3484  062C  1C03               	skipc
  3485  062D  0F2F               	incfsz	___fldiv@a+1,w
  3486  062E  02BB               	subwf	___fldiv@rem+1,f
  3487  062F  0830               	movf	___fldiv@a+2,w
  3488  0630  1C03               	skipc
  3489  0631  0F30               	incfsz	___fldiv@a+2,w
  3490  0632  02BC               	subwf	___fldiv@rem+2,f
  3491  0633  0831               	movf	___fldiv@a+3,w
  3492  0634  1C03               	skipc
  3493  0635  0F31               	incfsz	___fldiv@a+3,w
  3494  0636  02BD               	subwf	___fldiv@rem+3,f
  3495  0637                     l4801:	
  3496  0637  0AC6               	incf	___fldiv@aexp,f
  3497  0638  2E00               	goto	l4803
  3498  0639                     l4805:	
  3499  0639  083D               	movf	___fldiv@rem+3,w
  3500  063A  043C               	iorwf	___fldiv@rem+2,w
  3501  063B  043B               	iorwf	___fldiv@rem+1,w
  3502  063C  043A               	iorwf	___fldiv@rem,w
  3503  063D  1D03               	btfss	3,2
  3504  063E  1441               	bsf	___fldiv@grs,0
  3505  063F                     l4819:	
  3506  063F  1BB4               	btfsc	___fldiv@b+2,7
  3507  0640  2E52               	goto	l4821
  3508  0641  1003               	clrc
  3509  0642  0DB2               	rlf	___fldiv@b,f
  3510  0643  0DB3               	rlf	___fldiv@b+1,f
  3511  0644  0DB4               	rlf	___fldiv@b+2,f
  3512  0645  0DB5               	rlf	___fldiv@b+3,f
  3513  0646  1BC4               	btfsc	___fldiv@grs+3,7
  3514  0647  1432               	bsf	___fldiv@b,0
  3515  0648  30FF               	movlw	-1
  3516  0649  1003               	clrc
  3517  064A  0DC1               	rlf	___fldiv@grs,f
  3518  064B  0DC2               	rlf	___fldiv@grs+1,f
  3519  064C  0DC3               	rlf	___fldiv@grs+2,f
  3520  064D  0DC4               	rlf	___fldiv@grs+3,f
  3521  064E  07BF               	addwf	___fldiv@new_exp,f
  3522  064F  1C03               	skipc
  3523  0650  03C0               	decf	___fldiv@new_exp+1,f
  3524  0651  2E3F               	goto	l4819
  3525  0652                     l4821:	
  3526  0652  01C6               	clrf	___fldiv@aexp
  3527  0653  1FC4               	btfss	___fldiv@grs+3,7
  3528  0654  2E67               	goto	l4831
  3529  0655  0841               	movf	___fldiv@grs,w
  3530  0656  00B6               	movwf	??___fldiv
  3531  0657  0842               	movf	___fldiv@grs+1,w
  3532  0658  00B7               	movwf	??___fldiv+1
  3533  0659  0843               	movf	___fldiv@grs+2,w
  3534  065A  00B8               	movwf	??___fldiv+2
  3535  065B  307F               	movlw	127
  3536  065C  0544               	andwf	___fldiv@grs+3,w
  3537  065D  00B9               	movwf	??___fldiv+3
  3538  065E  0438               	iorwf	??___fldiv+2,w
  3539  065F  0437               	iorwf	??___fldiv+1,w
  3540  0660  0436               	iorwf	??___fldiv,w
  3541  0661  1903               	skipnz
  3542  0662  1832               	btfsc	___fldiv@b,0
  3543  0663  2E65               	goto	l4827
  3544  0664  2E67               	goto	l4831
  3545  0665                     l4827:	
  3546  0665  01C6               	clrf	___fldiv@aexp
  3547  0666  0AC6               	incf	___fldiv@aexp,f
  3548  0667                     l4831:	
  3549  0667  0846               	movf	___fldiv@aexp,w
  3550  0668  1903               	btfsc	3,2
  3551  0669  2E7B               	goto	l4841
  3552  066A  0AB2               	incf	___fldiv@b,f
  3553  066B  1903               	skipnz
  3554  066C  0AB3               	incf	___fldiv@b+1,f
  3555  066D  1903               	skipnz
  3556  066E  0AB4               	incf	___fldiv@b+2,f
  3557  066F  1903               	skipnz
  3558  0670  0AB5               	incf	___fldiv@b+3,f
  3559  0671  1C35               	btfss	___fldiv@b+3,0
  3560  0672  2E7B               	goto	l4841
  3561  0673  0D35               	rlf	___fldiv@b+3,w
  3562  0674  0CB5               	rrf	___fldiv@b+3,f
  3563  0675  0CB4               	rrf	___fldiv@b+2,f
  3564  0676  0CB3               	rrf	___fldiv@b+1,f
  3565  0677  0CB2               	rrf	___fldiv@b,f
  3566  0678  0ABF               	incf	___fldiv@new_exp,f
  3567  0679  1903               	skipnz
  3568  067A  0AC0               	incf	___fldiv@new_exp+1,f
  3569  067B                     l4841:	
  3570  067B  0840               	movf	___fldiv@new_exp+1,w
  3571  067C  3A80               	xorlw	128
  3572  067D  00FF               	movwf	127
  3573  067E  3080               	movlw	128
  3574  067F  027F               	subwf	127,w
  3575  0680  1D03               	skipz
  3576  0681  2E84               	goto	u3915
  3577  0682  30FF               	movlw	255
  3578  0683  023F               	subwf	___fldiv@new_exp,w
  3579  0684                     u3915:	
  3580  0684  1C03               	skipc
  3581  0685  2E8F               	goto	l4847
  3582  0686  30FF               	movlw	255
  3583  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0689  00BF               	movwf	___fldiv@new_exp
  3586  068A  01C0               	clrf	___fldiv@new_exp+1
  3587  068B  01B2               	clrf	___fldiv@b
  3588  068C  01B3               	clrf	___fldiv@b+1
  3589  068D  01B4               	clrf	___fldiv@b+2
  3590  068E  01B5               	clrf	___fldiv@b+3
  3591  068F                     l4847:	
  3592  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3594  0691  0840               	movf	___fldiv@new_exp+1,w
  3595  0692  3A80               	xorlw	128
  3596  0693  00FF               	movwf	127
  3597  0694  3080               	movlw	128
  3598  0695  027F               	subwf	127,w
  3599  0696  1D03               	skipz
  3600  0697  2E9A               	goto	u3925
  3601  0698  3001               	movlw	1
  3602  0699  023F               	subwf	___fldiv@new_exp,w
  3603  069A                     u3925:	
  3604  069A  1803               	skipnc
  3605  069B  2EA5               	goto	l4853
  3606  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3607  069D  1303               	bcf	3,6	;RP1=0, select bank0
  3608  069E  01BF               	clrf	___fldiv@new_exp
  3609  069F  01C0               	clrf	___fldiv@new_exp+1
  3610  06A0  01B2               	clrf	___fldiv@b
  3611  06A1  01B3               	clrf	___fldiv@b+1
  3612  06A2  01B4               	clrf	___fldiv@b+2
  3613  06A3  01B5               	clrf	___fldiv@b+3
  3614  06A4  01BE               	clrf	___fldiv@sign
  3615  06A5                     l4853:	
  3616  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3617  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3618  06A7  083F               	movf	___fldiv@new_exp,w
  3619  06A8  00C5               	movwf	___fldiv@bexp
  3620  06A9  1C45               	btfss	___fldiv@bexp,0
  3621  06AA  2EAD               	goto	l1352
  3622  06AB  17B4               	bsf	___fldiv@b+2,7
  3623  06AC  2EAE               	goto	l4859
  3624  06AD                     l1352:	
  3625  06AD  13B4               	bcf	___fldiv@b+2,7
  3626  06AE                     l4859:	
  3627  06AE  1003               	clrc
  3628  06AF  0C45               	rrf	___fldiv@bexp,w
  3629  06B0  00B5               	movwf	___fldiv@b+3
  3630  06B1  2DD1               	goto	L7
  3631  06B2                     __end_of___fldiv:	
  3632                           
  3633                           	psect	text6
  3634  0037                     __ptext6:	
  3635 ;; *************** function _ADC_Media_10bits *****************
  3636 ;; Defined at:
  3637 ;;		line 20 in file "adc.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  canal           1    wreg     unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  canal           1   19[BANK0 ] unsigned char 
  3642 ;;  value           2   20[BANK0 ] unsigned int 
  3643 ;;  i               1   22[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  4   14[BANK0 ] float 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 300/0
  3650 ;;		On exit  : 300/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       4       0       0       0
  3654 ;;      Locals:         0       4       0       0       0
  3655 ;;      Temps:          0       1       0       0       0
  3656 ;;      Totals:         0       9       0       0       0
  3657 ;;Total ram usage:        9 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		___lwdiv
  3662 ;;		___xxtofl
  3663 ;;		_captura
  3664 ;;		_my_delay_ms
  3665 ;; This function is called by:
  3666 ;;		_mediaLeituraPt100Umidadde
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _ADC_Media_10bits
  3672  0037                     _ADC_Media_10bits:	
  3673                           
  3674                           ;incstack = 0
  3675                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3676                           ;ADC_Media_10bits@canal stored from wreg
  3677  0037  00B3               	movwf	ADC_Media_10bits@canal
  3678                           
  3679                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  3680  0038  00B2               	movwf	??_ADC_Media_10bits
  3681  0039  0DB2               	rlf	??_ADC_Media_10bits,f
  3682  003A  0DB2               	rlf	??_ADC_Media_10bits,f
  3683  003B  081F               	movf	31,w	;volatile
  3684  003C  0632               	xorwf	??_ADC_Media_10bits,w
  3685  003D  39C3               	andlw	-61
  3686  003E  0632               	xorwf	??_ADC_Media_10bits,w
  3687                           
  3688                           ;adc.c: 24:       my_delay_ms(1);
  3689  003F  23C9  120A  118A   	fcall	PL38	;call to abstracted procedure
  3690  0042  2333  120A  118A   	fcall	_my_delay_ms
  3691                           
  3692                           ;adc.c: 26:       value=0;
  3693  0045  01B4               	clrf	ADC_Media_10bits@value
  3694  0046  01B5               	clrf	ADC_Media_10bits@value+1
  3695                           
  3696                           ;adc.c: 27:       for(i=1;i<=50;i++)
  3697  0047  01B6               	clrf	ADC_Media_10bits@i
  3698  0048  0AB6               	incf	ADC_Media_10bits@i,f
  3699  0049                     l6223:	
  3700                           
  3701                           ;adc.c: 28:           value+=captura();
  3702  0049  23D6  120A  118A   	fcall	_captura
  3703  004C  0820               	movf	?_captura,w
  3704  004D  07B4               	addwf	ADC_Media_10bits@value,f
  3705  004E  1803               	skipnc
  3706  004F  0AB5               	incf	ADC_Media_10bits@value+1,f
  3707  0050  0821               	movf	?_captura+1,w
  3708  0051  07B5               	addwf	ADC_Media_10bits@value+1,f
  3709  0052  3033               	movlw	51
  3710  0053  0AB6               	incf	ADC_Media_10bits@i,f
  3711  0054  0236               	subwf	ADC_Media_10bits@i,w
  3712  0055  1C03               	skipc
  3713  0056  2849               	goto	l6223
  3714                           
  3715                           ;adc.c: 29:       value/=(i-1);
  3716  0057  0836               	movf	ADC_Media_10bits@i,w
  3717  0058  00A0               	movwf	___lwdiv@divisor
  3718  0059  30FF               	movlw	255
  3719  005A  01A1               	clrf	___lwdiv@divisor+1
  3720  005B  07A0               	addwf	___lwdiv@divisor,f
  3721  005C  1803               	skipnc
  3722  005D  0AA1               	incf	___lwdiv@divisor+1,f
  3723  005E  07A1               	addwf	___lwdiv@divisor+1,f
  3724  005F  0835               	movf	ADC_Media_10bits@value+1,w
  3725  0060  00A3               	movwf	___lwdiv@dividend+1
  3726  0061  0834               	movf	ADC_Media_10bits@value,w
  3727  0062  00A2               	movwf	___lwdiv@dividend
  3728  0063  160A  118A  261A  120A  118A  	fcall	___lwdiv
  3729  0068  0821               	movf	?___lwdiv+1,w
  3730  0069  00B5               	movwf	ADC_Media_10bits@value+1
  3731  006A  0820               	movf	?___lwdiv,w
  3732  006B  00B4               	movwf	ADC_Media_10bits@value
  3733                           
  3734                           ;adc.c: 30:       return value;
  3735  006C  00A0               	movwf	___xxtofl@val
  3736  006D  0835               	movf	ADC_Media_10bits@value+1,w
  3737  006E  00A1               	movwf	___xxtofl@val+1
  3738  006F  3000               	movlw	0
  3739  0070  01A2               	clrf	___xxtofl@val+2
  3740  0071  01A3               	clrf	___xxtofl@val+3
  3741  0072  22C5               	fcall	___xxtofl
  3742  0073  0823               	movf	?___xxtofl+3,w
  3743  0074  00B1               	movwf	?_ADC_Media_10bits+3
  3744  0075  0822               	movf	?___xxtofl+2,w
  3745  0076  00B0               	movwf	?_ADC_Media_10bits+2
  3746  0077  0821               	movf	?___xxtofl+1,w
  3747  0078  00AF               	movwf	?_ADC_Media_10bits+1
  3748  0079  0820               	movf	?___xxtofl,w
  3749  007A  00AE               	movwf	?_ADC_Media_10bits
  3750  007B  0008               	return
  3751  007C                     __end_of_ADC_Media_10bits:	
  3752  007C                     __ptext1:	
  3753 ;; *************** function _mediaLeituraPt100Umidadde *****************
  3754 ;; Defined at:
  3755 ;;		line 733 in file "SlaveLiofilizadorVer1.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  canal           1    wreg     unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  canal           1   56[BANK0 ] unsigned char 
  3760 ;;  Temp            4   58[BANK0 ] float 
  3761 ;;  tensao          4   52[BANK0 ] float 
  3762 ;;  i               1   57[BANK0 ] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 300/0
  3769 ;;		On exit  : 200/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0      10       0       0       0
  3774 ;;      Temps:          0       1       0       0       0
  3775 ;;      Totals:         0      11       0       0       0
  3776 ;;Total ram usage:       11 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		_ADC_Media_10bits
  3781 ;;		_Package_Usart_is_for_me
  3782 ;;		___fladd
  3783 ;;		___fldiv
  3784 ;;		___flmul
  3785 ;;		___flsub
  3786 ;;		___xxtofl
  3787 ;;		_my_delay_ms
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _mediaLeituraPt100Umidadde
  3795  007C                     _mediaLeituraPt100Umidadde:	
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3799                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  3800  007C  00D8               	movwf	mediaLeituraPt100Umidadde@canal
  3801                           
  3802                           ;SlaveLiofilizadorVer1.c: 733: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 734:      {;SlaveLiofilizadorVer1.c: 735:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 736:      float tensao;;SlaveLiofilizadorVer1.c: 737:      char i;;Slave
      +                          LiofilizadorVer1.c: 739:      ADCON0bits.CHS=canal;
  3803  007D  00D3               	movwf	??_mediaLeituraPt100Umidadde
  3804  007E  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  3805  007F  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  3806  0080  081F               	movf	31,w	;volatile
  3807  0081  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  3808  0082  39C3               	andlw	-61
  3809  0083  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  3810                           
  3811                           ;SlaveLiofilizadorVer1.c: 740:      my_delay_ms(1);
  3812  0084  23C9  120A  118A   	fcall	PL38	;call to abstracted procedure
  3813  0087  2333  120A  118A   	fcall	_my_delay_ms
  3814                           
  3815                           ;SlaveLiofilizadorVer1.c: 741:      Temp=0;
  3816  008A  01DA               	clrf	mediaLeituraPt100Umidadde@Temp
  3817  008B  01DB               	clrf	mediaLeituraPt100Umidadde@Temp+1
  3818  008C  01DC               	clrf	mediaLeituraPt100Umidadde@Temp+2
  3819  008D  01DD               	clrf	mediaLeituraPt100Umidadde@Temp+3
  3820                           
  3821                           ;SlaveLiofilizadorVer1.c: 743:      for(i=1;i<15;i++)
  3822  008E  01D9               	clrf	mediaLeituraPt100Umidadde@i
  3823  008F  0AD9               	incf	mediaLeituraPt100Umidadde@i,f
  3824  0090                     l6347:	
  3825                           
  3826                           ;SlaveLiofilizadorVer1.c: 744:         {;SlaveLiofilizadorVer1.c: 745:         Temp+=ADC
      +                          _Media_10bits(canal);
  3827  0090  0858               	movf	mediaLeituraPt100Umidadde@canal,w
  3828  0091  2037               	fcall	_ADC_Media_10bits
  3829  0092  0831               	movf	?_ADC_Media_10bits+3,w
  3830  0093  00BA               	movwf	___fladd@b+3
  3831  0094  0830               	movf	?_ADC_Media_10bits+2,w
  3832  0095  00B9               	movwf	___fladd@b+2
  3833  0096  082F               	movf	?_ADC_Media_10bits+1,w
  3834  0097  00B8               	movwf	___fladd@b+1
  3835  0098  082E               	movf	?_ADC_Media_10bits,w
  3836  0099  00B7               	movwf	___fladd@b
  3837  009A  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3838  009B  00BE               	movwf	___fladd@a+3
  3839  009C  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3840  009D  00BD               	movwf	___fladd@a+2
  3841  009E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3842  009F  00BC               	movwf	___fladd@a+1
  3843  00A0  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3844  00A1  00BB               	movwf	___fladd@a
  3845  00A2  120A  118A  2417  120A  118A  	fcall	___fladd
  3846  00A7  083A               	movf	?___fladd+3,w
  3847  00A8  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3848  00A9  0839               	movf	?___fladd+2,w
  3849  00AA  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3850  00AB  0838               	movf	?___fladd+1,w
  3851  00AC  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3852  00AD  0837               	movf	?___fladd,w
  3853  00AE  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3854                           
  3855                           ;SlaveLiofilizadorVer1.c: 746:         if(Package_Usart_is_for_me()==1) break;
  3856  00AF  23E3  120A  118A   	fcall	_Package_Usart_is_for_me
  3857  00B2  3A01               	xorlw	1
  3858  00B3  1903               	btfsc	3,2
  3859  00B4  28BA               	goto	l6357
  3860  00B5  300F               	movlw	15
  3861                           
  3862                           ;SlaveLiofilizadorVer1.c: 747:         }
  3863  00B6  0AD9               	incf	mediaLeituraPt100Umidadde@i,f
  3864  00B7  0259               	subwf	mediaLeituraPt100Umidadde@i,w
  3865  00B8  1C03               	skipc
  3866  00B9  2890               	goto	l6347
  3867  00BA                     l6357:	
  3868                           
  3869                           ;SlaveLiofilizadorVer1.c: 748:      if(i<10)
  3870  00BA  300A               	movlw	10
  3871  00BB  0259               	subwf	mediaLeituraPt100Umidadde@i,w
  3872  00BC  1C03               	btfss	3,0
  3873  00BD  0008               	return
  3874                           
  3875                           ;SlaveLiofilizadorVer1.c: 755:      if(i==15)
  3876  00BE  300F               	movlw	15
  3877  00BF  0659               	xorwf	mediaLeituraPt100Umidadde@i,w
  3878  00C0  1D03               	btfss	3,2
  3879  00C1  28D0               	goto	l6365
  3880                           
  3881                           ;SlaveLiofilizadorVer1.c: 756:        Temp/=(i-1);
  3882  00C2  0859               	movf	mediaLeituraPt100Umidadde@i,w
  3883  00C3  3EFF               	addlw	255
  3884  00C4  00A0               	movwf	___xxtofl@val
  3885  00C5  30FF               	movlw	255
  3886  00C6  1803               	skipnc
  3887  00C7  3000               	movlw	0
  3888  00C8  00A1               	movwf	___xxtofl@val+1
  3889  00C9  01A2               	clrf	___xxtofl@val+2
  3890  00CA  1BA1               	btfsc	___xxtofl@val+1,7
  3891  00CB  03A2               	decf	___xxtofl@val+2,f
  3892  00CC  0822               	movf	___xxtofl@val+2,w
  3893  00CD  00A3               	movwf	___xxtofl@val+3
  3894  00CE  3001               	movlw	1
  3895  00CF  28D6               	goto	L1
  3896  00D0                     l6365:	
  3897                           
  3898                           ;SlaveLiofilizadorVer1.c: 758:        Temp/=(i);
  3899  00D0  0859               	movf	mediaLeituraPt100Umidadde@i,w
  3900  00D1  00A0               	movwf	___xxtofl@val
  3901  00D2  3001               	movlw	1
  3902  00D3  01A1               	clrf	___xxtofl@val+1
  3903  00D4  01A2               	clrf	___xxtofl@val+2
  3904  00D5  01A3               	clrf	___xxtofl@val+3
  3905  00D6                     L1:	
  3906  00D6  22C5               	fcall	___xxtofl
  3907  00D7  0823               	movf	?___xxtofl+3,w
  3908  00D8  00B1               	movwf	___fldiv@a+3
  3909  00D9  0822               	movf	?___xxtofl+2,w
  3910  00DA  00B0               	movwf	___fldiv@a+2
  3911  00DB  0821               	movf	?___xxtofl+1,w
  3912  00DC  00AF               	movwf	___fldiv@a+1
  3913  00DD  0820               	movf	?___xxtofl,w
  3914  00DE  00AE               	movwf	___fldiv@a
  3915  00DF  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3916  00E0  00B5               	movwf	___fldiv@b+3
  3917  00E1  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3918  00E2  00B4               	movwf	___fldiv@b+2
  3919  00E3  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3920  00E4  00B3               	movwf	___fldiv@b+1
  3921  00E5  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3922  00E6  00B2               	movwf	___fldiv@b
  3923  00E7  120A  118A  2594  120A  118A  	fcall	___fldiv
  3924  00EC  0831               	movf	?___fldiv+3,w
  3925  00ED  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3926  00EE  0830               	movf	?___fldiv+2,w
  3927  00EF  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3928  00F0  082F               	movf	?___fldiv+1,w
  3929  00F1  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3930  00F2  082E               	movf	?___fldiv,w
  3931  00F3  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3932                           
  3933                           ;SlaveLiofilizadorVer1.c: 764:      tensao=(5.0/1023.0);
  3934  00F4  303B               	movlw	59
  3935  00F5  00D7               	movwf	mediaLeituraPt100Umidadde@tensao+3
  3936  00F6  30A0               	movlw	160
  3937  00F7  00D6               	movwf	mediaLeituraPt100Umidadde@tensao+2
  3938  00F8  3028               	movlw	40
  3939  00F9  00D5               	movwf	mediaLeituraPt100Umidadde@tensao+1
  3940  00FA  300A               	movlw	10
  3941  00FB  00D4               	movwf	mediaLeituraPt100Umidadde@tensao
  3942                           
  3943                           ;SlaveLiofilizadorVer1.c: 765:      Temp*=tensao;
  3944  00FC  0857               	movf	mediaLeituraPt100Umidadde@tensao+3,w
  3945  00FD  00AB               	movwf	___flmul@b+3
  3946  00FE  0856               	movf	mediaLeituraPt100Umidadde@tensao+2,w
  3947  00FF  00AA               	movwf	___flmul@b+2
  3948  0100  0855               	movf	mediaLeituraPt100Umidadde@tensao+1,w
  3949  0101  00A9               	movwf	___flmul@b+1
  3950  0102  0854               	movf	mediaLeituraPt100Umidadde@tensao,w
  3951  0103  00A8               	movwf	___flmul@b
  3952  0104  23B9  120A  118A   	fcall	PL24	;call to abstracted procedure
  3953  0107  2156  120A  118A   	fcall	___flmul
  3954                           
  3955                           ;SlaveLiofilizadorVer1.c: 766:      Temp*=40.0;
  3956  010A  23B0  120A  118A   	fcall	PL20	;call to abstracted procedure
  3957  010D  00AB               	movwf	___flmul@b+3
  3958  010E  3020               	movlw	32
  3959  010F  00AA               	movwf	___flmul@b+2
  3960  0110  01A9               	clrf	___flmul@b+1
  3961  0111  01A8               	clrf	___flmul@b
  3962  0112  23B9  120A  118A   	fcall	PL24	;call to abstracted procedure
  3963  0115  2156  120A  118A   	fcall	___flmul
  3964                           
  3965                           ;SlaveLiofilizadorVer1.c: 767:      Temp-=110.0;
  3966  0118  23B0               	fcall	PL20	;call to abstracted procedure
  3967  0119  00CE               	movwf	___flsub@a+3
  3968  011A  30DC               	movlw	220
  3969  011B  00CD               	movwf	___flsub@a+2
  3970  011C  01CC               	clrf	___flsub@a+1
  3971  011D  01CB               	clrf	___flsub@a
  3972  011E  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3973  011F  00D2               	movwf	___flsub@b+3
  3974  0120  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3975  0121  00D1               	movwf	___flsub@b+2
  3976  0122  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3977  0123  00D0               	movwf	___flsub@b+1
  3978  0124  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  3979  0125  00CF               	movwf	___flsub@b
  3980  0126  120A  118A  23FB  120A  118A  	fcall	___flsub
  3981  012B  084E               	movf	?___flsub+3,w
  3982  012C  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3983  012D  084D               	movf	?___flsub+2,w
  3984  012E  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3985  012F  084C               	movf	?___flsub+1,w
  3986  0130  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3987  0131  084B               	movf	?___flsub,w
  3988  0132  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  3989                           
  3990                           ;SlaveLiofilizadorVer1.c: 770:      if(canal==0)
  3991  0133  0858               	movf	mediaLeituraPt100Umidadde@canal,w
  3992  0134  1D03               	btfss	3,2
  3993  0135  2946               	goto	l6379
  3994                           
  3995                           ;SlaveLiofilizadorVer1.c: 771:         {;SlaveLiofilizadorVer1.c: 772:         Temperatu
      +                          ra0=Temp;
  3996  0136  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3997  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3998  0138  00D4               	movwf	(_Temperatura0+3)^(0+128)
  3999  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4000  013A  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4001  013B  1683               	bsf	3,5	;RP0=1, select bank1
  4002  013C  00D3               	movwf	(_Temperatura0+2)^(0+128)
  4003  013D  1283               	bcf	3,5	;RP0=0, select bank0
  4004  013E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4005  013F  1683               	bsf	3,5	;RP0=1, select bank1
  4006  0140  00D2               	movwf	(_Temperatura0+1)^(0+128)
  4007  0141  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0142  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4009  0143  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0144  00D1               	movwf	_Temperatura0^(0+128)
  4011                           
  4012                           ;SlaveLiofilizadorVer1.c: 773:         }
  4013  0145  0008               	return
  4014  0146                     l6379:	
  4015                           
  4016                           ;SlaveLiofilizadorVer1.c: 775:         {;SlaveLiofilizadorVer1.c: 776:         Umidade1=
      +                          Temp;
  4017  0146  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  4018  0147  1683               	bsf	3,5	;RP0=1, select bank1
  4019  0148  00D0               	movwf	(_Umidade1+3)^(0+128)
  4020  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4021  014A  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4022  014B  1683               	bsf	3,5	;RP0=1, select bank1
  4023  014C  00CF               	movwf	(_Umidade1+2)^(0+128)
  4024  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4025  014E  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4026  014F  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0150  00CE               	movwf	(_Umidade1+1)^(0+128)
  4028  0151  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0152  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4030  0153  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0154  00CD               	movwf	_Umidade1^(0+128)
  4032  0155  0008               	return
  4033  0156                     __end_of_mediaLeituraPt100Umidadde:	
  4034  0156                     __ptext26:	
  4035 ;; *************** function ___flmul *****************
  4036 ;; Defined at:
  4037 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  b               4    8[BANK0 ] long 
  4040 ;;  a               4   12[BANK0 ] long 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  prod            4   27[BANK0 ] struct .
  4043 ;;  grs             4   23[BANK0 ] unsigned long 
  4044 ;;  temp            2   31[BANK0 ] struct .
  4045 ;;  bexp            1   22[BANK0 ] unsigned char 
  4046 ;;  aexp            1   21[BANK0 ] unsigned char 
  4047 ;;  sign            1   20[BANK0 ] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  4    8[BANK0 ] unsigned char 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 300/0
  4054 ;;		On exit  : 300/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         0       8       0       0       0
  4058 ;;      Locals:         0      13       0       0       0
  4059 ;;      Temps:          0       4       0       0       0
  4060 ;;      Totals:         0      25       0       0       0
  4061 ;;Total ram usage:       25 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    2
  4064 ;; This function calls:
  4065 ;;		__Umul8_16
  4066 ;; This function is called by:
  4067 ;;		_Decodify_Command
  4068 ;;		_mediaLeituraPt100Umidadde
  4069 ;;		_Save_Log
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function ___flmul
  4075  0156                     ___flmul:	
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4079  0156  082B               	movf	___flmul@b+3,w
  4080  0157  00B4               	movwf	___flmul@sign
  4081  0158  3080               	movlw	128
  4082  0159  05B4               	andwf	___flmul@sign,f
  4083  015A  1003               	clrc
  4084  015B  0D2B               	rlf	___flmul@b+3,w
  4085  015C  00B6               	movwf	___flmul@bexp
  4086  015D  1BAA               	btfsc	___flmul@b+2,7
  4087  015E  1436               	bsf	___flmul@bexp,0
  4088  015F  0836               	movf	___flmul@bexp,w
  4089  0160  1903               	btfsc	3,2
  4090  0161  296A               	goto	l1359
  4091  0162  0F36               	incfsz	___flmul@bexp,w
  4092  0163  2968               	goto	l1360
  4093  0164  01A8               	clrf	___flmul@b
  4094  0165  01A9               	clrf	___flmul@b+1
  4095  0166  01AA               	clrf	___flmul@b+2
  4096  0167  01AB               	clrf	___flmul@b+3
  4097  0168                     l1360:	
  4098  0168  17AA               	bsf	___flmul@b+2,7
  4099  0169  296E               	goto	l5797
  4100  016A                     l1359:	
  4101  016A  01A8               	clrf	___flmul@b
  4102  016B  01A9               	clrf	___flmul@b+1
  4103  016C  01AA               	clrf	___flmul@b+2
  4104  016D  01AB               	clrf	___flmul@b+3
  4105  016E                     l5797:	
  4106  016E  082F               	movf	___flmul@a+3,w
  4107  016F  3980               	andlw	128
  4108  0170  06B4               	xorwf	___flmul@sign,f
  4109  0171  1003               	clrc
  4110  0172  0D2F               	rlf	___flmul@a+3,w
  4111  0173  00B5               	movwf	___flmul@aexp
  4112  0174  1BAE               	btfsc	___flmul@a+2,7
  4113  0175  1435               	bsf	___flmul@aexp,0
  4114  0176  0835               	movf	___flmul@aexp,w
  4115  0177  1903               	btfsc	3,2
  4116  0178  2981               	goto	l1363
  4117  0179  0F35               	incfsz	___flmul@aexp,w
  4118  017A  297F               	goto	l1364
  4119  017B  01AC               	clrf	___flmul@a
  4120  017C  01AD               	clrf	___flmul@a+1
  4121  017D  01AE               	clrf	___flmul@a+2
  4122  017E  01AF               	clrf	___flmul@a+3
  4123  017F                     l1364:	
  4124  017F  17AE               	bsf	___flmul@a+2,7
  4125  0180  2985               	goto	l5809
  4126  0181                     l1363:	
  4127  0181  01AC               	clrf	___flmul@a
  4128  0182  01AD               	clrf	___flmul@a+1
  4129  0183  01AE               	clrf	___flmul@a+2
  4130  0184  01AF               	clrf	___flmul@a+3
  4131  0185                     l5809:	
  4132  0185  0835               	movf	___flmul@aexp,w
  4133  0186  1D03               	btfss	3,2
  4134  0187  0836               	movf	___flmul@bexp,w
  4135  0188  1D03               	btfss	3,2
  4136  0189  298F               	goto	l5813
  4137  018A  01A8               	clrf	?___flmul
  4138  018B  01A9               	clrf	?___flmul+1
  4139  018C  01AA               	clrf	?___flmul+2
  4140  018D  01AB               	clrf	?___flmul+3
  4141  018E  0008               	return
  4142  018F                     l5813:	
  4143  018F  0828               	movf	___flmul@b,w
  4144  0190  00A0               	movwf	__Umul8_16@multiplicand
  4145  0191  082E               	movf	___flmul@a+2,w
  4146  0192  22AA  120A  118A   	fcall	__Umul8_16
  4147  0195  0821               	movf	?__Umul8_16+1,w
  4148  0196  00C0               	movwf	___flmul@temp+1
  4149  0197  0820               	movf	?__Umul8_16,w
  4150  0198  00BF               	movwf	___flmul@temp
  4151  0199  00B7               	movwf	___flmul@grs
  4152  019A  01B8               	clrf	___flmul@grs+1
  4153  019B  01B9               	clrf	___flmul@grs+2
  4154  019C  01BA               	clrf	___flmul@grs+3
  4155  019D  0840               	movf	___flmul@temp+1,w
  4156  019E  00BB               	movwf	___flmul@prod
  4157  019F  01BC               	clrf	___flmul@prod+1
  4158  01A0  01BD               	clrf	___flmul@prod+2
  4159  01A1  01BE               	clrf	___flmul@prod+3
  4160  01A2  0829               	movf	___flmul@b+1,w
  4161  01A3  00A0               	movwf	__Umul8_16@multiplicand
  4162  01A4  082D               	movf	___flmul@a+1,w
  4163  01A5  22AA  120A  118A   	fcall	__Umul8_16
  4164  01A8  2393  120A  118A   	fcall	PL8	;call to abstracted procedure
  4165  01AB  1803               	skipnc
  4166  01AC  07BC               	addwf	___flmul@prod+1,f
  4167  01AD  1803               	skipnc
  4168  01AE  07BD               	addwf	___flmul@prod+2,f
  4169  01AF  1803               	skipnc
  4170  01B0  07BE               	addwf	___flmul@prod+3,f
  4171  01B1  082A               	movf	___flmul@b+2,w
  4172  01B2  00A0               	movwf	__Umul8_16@multiplicand
  4173  01B3  082C               	movf	___flmul@a,w
  4174  01B4  22AA  120A  118A   	fcall	__Umul8_16
  4175  01B7  2393  120A  118A   	fcall	PL8	;call to abstracted procedure
  4176  01BA  23A2  120A  118A   	fcall	PL10	;call to abstracted procedure
  4177  01BD  0829               	movf	___flmul@b+1,w
  4178  01BE  00A0               	movwf	__Umul8_16@multiplicand
  4179  01BF  082C               	movf	___flmul@a,w
  4180  01C0  22AA  120A  118A   	fcall	__Umul8_16
  4181  01C3  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4182  01C6  1803               	skipnc
  4183  01C7  3E01               	addlw	1
  4184  01C8  1D03               	btfss	3,2
  4185  01C9  07BA               	addwf	___flmul@grs+3,f
  4186  01CA  0828               	movf	___flmul@b,w
  4187  01CB  00A0               	movwf	__Umul8_16@multiplicand
  4188  01CC  082D               	movf	___flmul@a+1,w
  4189  01CD  22AA  120A  118A   	fcall	__Umul8_16
  4190  01D0  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4191  01D3  1803               	skipnc
  4192  01D4  3E01               	addlw	1
  4193  01D5  1D03               	btfss	3,2
  4194  01D6  07BA               	addwf	___flmul@grs+3,f
  4195  01D7  0839               	movf	___flmul@grs+2,w
  4196  01D8  00BA               	movwf	___flmul@grs+3
  4197  01D9  0838               	movf	___flmul@grs+1,w
  4198  01DA  00B9               	movwf	___flmul@grs+2
  4199  01DB  0837               	movf	___flmul@grs,w
  4200  01DC  00B8               	movwf	___flmul@grs+1
  4201  01DD  01B7               	clrf	___flmul@grs
  4202  01DE  0828               	movf	___flmul@b,w
  4203  01DF  00A0               	movwf	__Umul8_16@multiplicand
  4204  01E0  082C               	movf	___flmul@a,w
  4205  01E1  22AA  120A  118A   	fcall	__Umul8_16
  4206  01E4  235F  120A  118A   	fcall	PL2	;call to abstracted procedure
  4207  01E7  1803               	skipnc
  4208  01E8  3E01               	addlw	1
  4209  01E9  1D03               	btfss	3,2
  4210  01EA  07BA               	addwf	___flmul@grs+3,f
  4211  01EB  0829               	movf	___flmul@b+1,w
  4212  01EC  00A0               	movwf	__Umul8_16@multiplicand
  4213  01ED  082E               	movf	___flmul@a+2,w
  4214  01EE  22AA  120A  118A   	fcall	__Umul8_16
  4215  01F1  0821               	movf	?__Umul8_16+1,w
  4216  01F2  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4217  01F5  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4218  01F8  23C2  120A  118A   	fcall	PL36	;call to abstracted procedure
  4219  01FB  082D               	movf	___flmul@a+1,w
  4220  01FC  22AA  120A  118A   	fcall	__Umul8_16
  4221  01FF  0821               	movf	?__Umul8_16+1,w
  4222  0200  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4223  0203  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4224  0206  23C2  120A  118A   	fcall	PL36	;call to abstracted procedure
  4225  0209  082E               	movf	___flmul@a+2,w
  4226  020A  22AA  120A  118A   	fcall	__Umul8_16
  4227  020D  0821               	movf	?__Umul8_16+1,w
  4228  020E  2379  120A  118A   	fcall	PL4	;call to abstracted procedure
  4229  0211  0832               	movf	??___flmul+2,w
  4230  0212  00B3               	movwf	??___flmul+3
  4231  0213  0831               	movf	??___flmul+1,w
  4232  0214  00B2               	movwf	??___flmul+2
  4233  0215  0830               	movf	??___flmul,w
  4234  0216  00B1               	movwf	??___flmul+1
  4235  0217  01B0               	clrf	??___flmul
  4236  0218  2382  120A  118A   	fcall	PL6	;call to abstracted procedure
  4237  021B  1803               	skipnc
  4238  021C  3E01               	addlw	1
  4239  021D  1D03               	btfss	3,2
  4240  021E  07BE               	addwf	___flmul@prod+3,f
  4241  021F  083A               	movf	___flmul@grs+3,w
  4242  0220  07BB               	addwf	___flmul@prod,f
  4243  0221  3001               	movlw	1
  4244  0222  23A2  120A  118A   	fcall	PL10	;call to abstracted procedure
  4245  0225  0836               	movf	___flmul@bexp,w
  4246  0226  00BF               	movwf	___flmul@temp
  4247  0227  01C0               	clrf	___flmul@temp+1
  4248  0228  0835               	movf	___flmul@aexp,w
  4249  0229  07BF               	addwf	___flmul@temp,f
  4250  022A  1803               	skipnc
  4251  022B  0AC0               	incf	___flmul@temp+1,f
  4252  022C  3082               	movlw	-126
  4253  022D                     L17:	
  4254  022D  07BF               	addwf	___flmul@temp,f
  4255  022E  1C03               	skipc
  4256  022F  03C0               	decf	___flmul@temp+1,f
  4257  0230  1BBD               	btfsc	___flmul@prod+2,7
  4258  0231  2A40               	goto	l5861
  4259  0232  1003               	clrc
  4260  0233  0DBB               	rlf	___flmul@prod,f
  4261  0234  0DBC               	rlf	___flmul@prod+1,f
  4262  0235  0DBD               	rlf	___flmul@prod+2,f
  4263  0236  0DBE               	rlf	___flmul@prod+3,f
  4264  0237  1BBA               	btfsc	___flmul@grs+3,7
  4265  0238  143B               	bsf	___flmul@prod,0
  4266  0239  30FF               	movlw	-1
  4267  023A  1003               	clrc
  4268  023B  0DB7               	rlf	___flmul@grs,f
  4269  023C  0DB8               	rlf	___flmul@grs+1,f
  4270  023D  0DB9               	rlf	___flmul@grs+2,f
  4271  023E  0DBA               	rlf	___flmul@grs+3,f
  4272  023F  2A2D               	goto	L17
  4273  0240                     l5861:	
  4274  0240  01B5               	clrf	___flmul@aexp
  4275  0241  1FBA               	btfss	___flmul@grs+3,7
  4276  0242  2A55               	goto	l5871
  4277  0243  0837               	movf	___flmul@grs,w
  4278  0244  00B0               	movwf	??___flmul
  4279  0245  0838               	movf	___flmul@grs+1,w
  4280  0246  00B1               	movwf	??___flmul+1
  4281  0247  0839               	movf	___flmul@grs+2,w
  4282  0248  00B2               	movwf	??___flmul+2
  4283  0249  307F               	movlw	127
  4284  024A  053A               	andwf	___flmul@grs+3,w
  4285  024B  00B3               	movwf	??___flmul+3
  4286  024C  0432               	iorwf	??___flmul+2,w
  4287  024D  0431               	iorwf	??___flmul+1,w
  4288  024E  0430               	iorwf	??___flmul,w
  4289  024F  1903               	skipnz
  4290  0250  183B               	btfsc	___flmul@prod,0
  4291  0251  2A53               	goto	l5867
  4292  0252  2A55               	goto	l5871
  4293  0253                     l5867:	
  4294  0253  01B5               	clrf	___flmul@aexp
  4295  0254  0AB5               	incf	___flmul@aexp,f
  4296  0255                     l5871:	
  4297  0255  0835               	movf	___flmul@aexp,w
  4298  0256  1903               	btfsc	3,2
  4299  0257  2A69               	goto	l5881
  4300  0258  0ABB               	incf	___flmul@prod,f
  4301  0259  1903               	skipnz
  4302  025A  0ABC               	incf	___flmul@prod+1,f
  4303  025B  1903               	skipnz
  4304  025C  0ABD               	incf	___flmul@prod+2,f
  4305  025D  1903               	skipnz
  4306  025E  0ABE               	incf	___flmul@prod+3,f
  4307  025F  1C3E               	btfss	___flmul@prod+3,0
  4308  0260  2A69               	goto	l5881
  4309  0261  0D3E               	rlf	___flmul@prod+3,w
  4310  0262  0CBE               	rrf	___flmul@prod+3,f
  4311  0263  0CBD               	rrf	___flmul@prod+2,f
  4312  0264  0CBC               	rrf	___flmul@prod+1,f
  4313  0265  0CBB               	rrf	___flmul@prod,f
  4314  0266  0ABF               	incf	___flmul@temp,f
  4315  0267  1903               	skipnz
  4316  0268  0AC0               	incf	___flmul@temp+1,f
  4317  0269                     l5881:	
  4318  0269  0840               	movf	___flmul@temp+1,w
  4319  026A  3A80               	xorlw	128
  4320  026B  00FF               	movwf	127
  4321  026C  3080               	movlw	128
  4322  026D  027F               	subwf	127,w
  4323  026E  1D03               	skipz
  4324  026F  2A72               	goto	u4855
  4325  0270  30FF               	movlw	255
  4326  0271  023F               	subwf	___flmul@temp,w
  4327  0272                     u4855:	
  4328  0272  1C03               	skipc
  4329  0273  2A7D               	goto	l5885
  4330  0274  307F               	movlw	127
  4331  0275  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0276  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0277  00BE               	movwf	___flmul@prod+3
  4334  0278  3080               	movlw	128
  4335  0279  00BD               	movwf	___flmul@prod+2
  4336  027A  01BC               	clrf	___flmul@prod+1
  4337  027B  01BB               	clrf	___flmul@prod
  4338  027C  2A9F               	goto	l1381
  4339  027D                     l5885:	
  4340  027D  1283               	bcf	3,5	;RP0=0, select bank0
  4341  027E  1303               	bcf	3,6	;RP1=0, select bank0
  4342  027F  0840               	movf	___flmul@temp+1,w
  4343  0280  3A80               	xorlw	128
  4344  0281  00FF               	movwf	127
  4345  0282  3080               	movlw	128
  4346  0283  027F               	subwf	127,w
  4347  0284  1D03               	skipz
  4348  0285  2A88               	goto	u4865
  4349  0286  3001               	movlw	1
  4350  0287  023F               	subwf	___flmul@temp,w
  4351  0288                     u4865:	
  4352  0288  1803               	skipnc
  4353  0289  2A92               	goto	l5891
  4354  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4355  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4356  028C  01BB               	clrf	___flmul@prod
  4357  028D  01BC               	clrf	___flmul@prod+1
  4358  028E  01BD               	clrf	___flmul@prod+2
  4359  028F  01BE               	clrf	___flmul@prod+3
  4360  0290  01B4               	clrf	___flmul@sign
  4361  0291  2A9F               	goto	l1381
  4362  0292                     l5891:	
  4363  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0294  083F               	movf	___flmul@temp,w
  4366  0295  00B6               	movwf	___flmul@bexp
  4367  0296  307F               	movlw	127
  4368  0297  05BD               	andwf	___flmul@prod+2,f
  4369  0298  3000               	movlw	0
  4370  0299  01BE               	clrf	___flmul@prod+3
  4371  029A  1836               	btfsc	___flmul@bexp,0
  4372  029B  17BD               	bsf	___flmul@prod+2,7
  4373  029C  1003               	clrc
  4374  029D  0C36               	rrf	___flmul@bexp,w
  4375  029E  00BE               	movwf	___flmul@prod+3
  4376  029F                     l1381:	
  4377  029F  0834               	movf	___flmul@sign,w
  4378  02A0  04BE               	iorwf	___flmul@prod+3,f
  4379  02A1  083E               	movf	___flmul@prod+3,w
  4380  02A2  00AB               	movwf	?___flmul+3
  4381  02A3  083D               	movf	___flmul@prod+2,w
  4382  02A4  00AA               	movwf	?___flmul+2
  4383  02A5  083C               	movf	___flmul@prod+1,w
  4384  02A6  00A9               	movwf	?___flmul+1
  4385  02A7  083B               	movf	___flmul@prod,w
  4386  02A8  00A8               	movwf	?___flmul
  4387  02A9  0008               	return
  4388  02AA                     __end_of___flmul:	
  4389  02AA                     __ptext27:	
  4390 ;; *************** function __Umul8_16 *****************
  4391 ;; Defined at:
  4392 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  multiplier      1    wreg     unsigned char 
  4395 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4398 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  4399 ;;  product         2    3[BANK0 ] unsigned int 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2    0[BANK0 ] unsigned int 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 300/0
  4406 ;;		On exit  : 300/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         0       3       0       0       0
  4410 ;;      Locals:         0       5       0       0       0
  4411 ;;      Temps:          0       0       0       0       0
  4412 ;;      Totals:         0       8       0       0       0
  4413 ;;Total ram usage:        8 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		___flmul
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function __Umul8_16
  4425  02AA                     __Umul8_16:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4429                           ;__Umul8_16@multiplier stored from wreg
  4430  02AA  00A7               	movwf	__Umul8_16@multiplier
  4431  02AB  01A3               	clrf	__Umul8_16@product
  4432  02AC  01A4               	clrf	__Umul8_16@product+1
  4433  02AD  0820               	movf	__Umul8_16@multiplicand,w
  4434  02AE  00A5               	movwf	__Umul8_16@word_mpld
  4435  02AF  01A6               	clrf	__Umul8_16@word_mpld+1
  4436  02B0                     l5611:	
  4437  02B0  1C27               	btfss	__Umul8_16@multiplier,0
  4438  02B1  2AB8               	goto	l5615
  4439  02B2  0825               	movf	__Umul8_16@word_mpld,w
  4440  02B3  07A3               	addwf	__Umul8_16@product,f
  4441  02B4  1803               	skipnc
  4442  02B5  0AA4               	incf	__Umul8_16@product+1,f
  4443  02B6  0826               	movf	__Umul8_16@word_mpld+1,w
  4444  02B7  07A4               	addwf	__Umul8_16@product+1,f
  4445  02B8                     l5615:	
  4446  02B8  1003               	clrc
  4447  02B9  0DA5               	rlf	__Umul8_16@word_mpld,f
  4448  02BA  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  4449  02BB  1003               	clrc
  4450  02BC  0CA7               	rrf	__Umul8_16@multiplier,f
  4451  02BD  0827               	movf	__Umul8_16@multiplier,w
  4452  02BE  1D03               	btfss	3,2
  4453  02BF  2AB0               	goto	l5611
  4454  02C0  0824               	movf	__Umul8_16@product+1,w
  4455  02C1  00A1               	movwf	?__Umul8_16+1
  4456  02C2  0823               	movf	__Umul8_16@product,w
  4457  02C3  00A0               	movwf	?__Umul8_16
  4458  02C4  0008               	return
  4459  02C5                     __end_of__Umul8_16:	
  4460  02C5                     __ptext9:	
  4461 ;; *************** function ___xxtofl *****************
  4462 ;; Defined at:
  4463 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  sign            1    wreg     unsigned char 
  4466 ;;  val             4    0[BANK0 ] long 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  sign            1    8[BANK0 ] unsigned char 
  4469 ;;  arg             4   10[BANK0 ] unsigned long 
  4470 ;;  exp             1    9[BANK0 ] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  4    0[BANK0 ] unsigned char 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 300/0
  4477 ;;		On exit  : 300/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       4       0       0       0
  4481 ;;      Locals:         0       6       0       0       0
  4482 ;;      Temps:          0       4       0       0       0
  4483 ;;      Totals:         0      14       0       0       0
  4484 ;;Total ram usage:       14 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_mediaLeituraPt100Umidadde
  4491 ;;		_ADC_Media_10bits
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function ___xxtofl
  4497  02C5                     ___xxtofl:	
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4501                           ;___xxtofl@sign stored from wreg
  4502  02C5  00A8               	movwf	___xxtofl@sign
  4503  02C6  0828               	movf	___xxtofl@sign,w
  4504  02C7  1D03               	btfss	3,2
  4505  02C8  1FA3               	btfss	___xxtofl@val+3,7
  4506  02C9  2ADA               	goto	l4247
  4507  02CA  0920               	comf	___xxtofl@val,w
  4508  02CB  00AA               	movwf	___xxtofl@arg
  4509  02CC  0921               	comf	___xxtofl@val+1,w
  4510  02CD  00AB               	movwf	___xxtofl@arg+1
  4511  02CE  0922               	comf	___xxtofl@val+2,w
  4512  02CF  00AC               	movwf	___xxtofl@arg+2
  4513  02D0  0923               	comf	___xxtofl@val+3,w
  4514  02D1  00AD               	movwf	___xxtofl@arg+3
  4515  02D2  0AAA               	incf	___xxtofl@arg,f
  4516  02D3  1903               	skipnz
  4517  02D4  0AAB               	incf	___xxtofl@arg+1,f
  4518  02D5  1903               	skipnz
  4519  02D6  0AAC               	incf	___xxtofl@arg+2,f
  4520  02D7  1903               	skipnz
  4521  02D8  0AAD               	incf	___xxtofl@arg+3,f
  4522  02D9  2AE2               	goto	l1407
  4523  02DA                     l4247:	
  4524  02DA  0823               	movf	___xxtofl@val+3,w
  4525  02DB  00AD               	movwf	___xxtofl@arg+3
  4526  02DC  0822               	movf	___xxtofl@val+2,w
  4527  02DD  00AC               	movwf	___xxtofl@arg+2
  4528  02DE  0821               	movf	___xxtofl@val+1,w
  4529  02DF  00AB               	movwf	___xxtofl@arg+1
  4530  02E0  0820               	movf	___xxtofl@val,w
  4531  02E1  00AA               	movwf	___xxtofl@arg
  4532  02E2                     l1407:	
  4533  02E2  0823               	movf	___xxtofl@val+3,w
  4534  02E3  0422               	iorwf	___xxtofl@val+2,w
  4535  02E4  0421               	iorwf	___xxtofl@val+1,w
  4536  02E5  0420               	iorwf	___xxtofl@val,w
  4537  02E6  1D03               	skipz
  4538  02E7  2AED               	goto	l4251
  4539  02E8  01A0               	clrf	?___xxtofl
  4540  02E9  01A1               	clrf	?___xxtofl+1
  4541  02EA  01A2               	clrf	?___xxtofl+2
  4542  02EB  01A3               	clrf	?___xxtofl+3
  4543  02EC  0008               	return
  4544  02ED                     l4251:	
  4545  02ED  3096               	movlw	150
  4546  02EE  00A9               	movwf	___xxtofl@exp
  4547  02EF                     l4255:	
  4548  02EF  30FE               	movlw	254
  4549  02F0  052D               	andwf	___xxtofl@arg+3,w
  4550  02F1  1903               	btfsc	3,2
  4551  02F2  2B03               	goto	l4259
  4552  02F3  0AA9               	incf	___xxtofl@exp,f
  4553  02F4  23D0  120A  118A   	fcall	PL48	;call to abstracted procedure
  4554  02F7  2AEF               	goto	l4255
  4555  02F8                     l4257:	
  4556  02F8  0AA9               	incf	___xxtofl@exp,f
  4557  02F9  0AAA               	incf	___xxtofl@arg,f
  4558  02FA  1903               	skipnz
  4559  02FB  0AAB               	incf	___xxtofl@arg+1,f
  4560  02FC  1903               	skipnz
  4561  02FD  0AAC               	incf	___xxtofl@arg+2,f
  4562  02FE  1903               	skipnz
  4563  02FF  0AAD               	incf	___xxtofl@arg+3,f
  4564  0300  23D0  120A  118A   	fcall	PL48	;call to abstracted procedure
  4565  0303                     l4259:	
  4566  0303  30FF               	movlw	255
  4567  0304  052D               	andwf	___xxtofl@arg+3,w
  4568  0305  1903               	btfsc	3,2
  4569  0306  2B12               	goto	l4263
  4570  0307  2AF8               	goto	l4257
  4571  0308                     l4265:	
  4572  0308  3002               	movlw	2
  4573  0309  0229               	subwf	___xxtofl@exp,w
  4574  030A  1C03               	btfss	3,0
  4575  030B  2B14               	goto	l1420
  4576  030C  03A9               	decf	___xxtofl@exp,f
  4577  030D  1003               	clrc
  4578  030E  0DAA               	rlf	___xxtofl@arg,f
  4579  030F  0DAB               	rlf	___xxtofl@arg+1,f
  4580  0310  0DAC               	rlf	___xxtofl@arg+2,f
  4581  0311  0DAD               	rlf	___xxtofl@arg+3,f
  4582  0312                     l4263:	
  4583  0312  1FAC               	btfss	___xxtofl@arg+2,7
  4584  0313  2B08               	goto	l4265
  4585  0314                     l1420:	
  4586  0314  1C29               	btfss	___xxtofl@exp,0
  4587  0315  13AC               	bcf	___xxtofl@arg+2,7
  4588  0316  1003               	clrc
  4589  0317  0CA9               	rrf	___xxtofl@exp,f
  4590  0318  0829               	movf	___xxtofl@exp,w
  4591  0319  00A7               	movwf	??___xxtofl+3
  4592  031A  01A6               	clrf	??___xxtofl+2
  4593  031B  01A5               	clrf	??___xxtofl+1
  4594  031C  01A4               	clrf	??___xxtofl
  4595  031D  0824               	movf	??___xxtofl,w
  4596  031E  04AA               	iorwf	___xxtofl@arg,f
  4597  031F  0825               	movf	??___xxtofl+1,w
  4598  0320  04AB               	iorwf	___xxtofl@arg+1,f
  4599  0321  0826               	movf	??___xxtofl+2,w
  4600  0322  04AC               	iorwf	___xxtofl@arg+2,f
  4601  0323  0827               	movf	??___xxtofl+3,w
  4602  0324  04AD               	iorwf	___xxtofl@arg+3,f
  4603  0325  0828               	movf	___xxtofl@sign,w
  4604  0326  1D03               	btfss	3,2
  4605  0327  1FA3               	btfss	___xxtofl@val+3,7
  4606  0328  2B2A               	goto	l4277
  4607  0329  17AD               	bsf	___xxtofl@arg+3,7
  4608  032A                     l4277:	
  4609  032A  082D               	movf	___xxtofl@arg+3,w
  4610  032B  00A3               	movwf	?___xxtofl+3
  4611  032C  082C               	movf	___xxtofl@arg+2,w
  4612  032D  00A2               	movwf	?___xxtofl+2
  4613  032E  082B               	movf	___xxtofl@arg+1,w
  4614  032F  00A1               	movwf	?___xxtofl+1
  4615  0330  082A               	movf	___xxtofl@arg,w
  4616  0331  00A0               	movwf	?___xxtofl
  4617  0332  0008               	return
  4618  0333                     __end_of___xxtofl:	
  4619  0333                     __ptext7:	
  4620 ;; *************** function _my_delay_ms *****************
  4621 ;; Defined at:
  4622 ;;		line 5 in file "my_delay.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  time            4    0[BANK0 ] long 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  i               4    6[BANK0 ] long 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, btemp+1
  4631 ;; Tracked objects:
  4632 ;;		On entry : 300/0
  4633 ;;		On exit  : 300/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         0       4       0       0       0
  4637 ;;      Locals:         0       4       0       0       0
  4638 ;;      Temps:          0       2       0       0       0
  4639 ;;      Totals:         0      10       0       0       0
  4640 ;;Total ram usage:       10 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_mediaLeituraPt100Umidadde
  4647 ;;		_ADC_Media_10bits
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _my_delay_ms
  4653  0333                     _my_delay_ms:	
  4654                           
  4655                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  4659  0333  01A6               	clrf	my_delay_ms@i
  4660  0334  01A7               	clrf	my_delay_ms@i+1
  4661  0335  01A8               	clrf	my_delay_ms@i+2
  4662  0336  01A9               	clrf	my_delay_ms@i+3
  4663  0337                     l3863:	
  4664  0337  0829               	movf	my_delay_ms@i+3,w
  4665  0338  3A80               	xorlw	128
  4666  0339  00FF               	movwf	127
  4667  033A  0823               	movf	my_delay_ms@time+3,w
  4668  033B  3A80               	xorlw	128
  4669  033C  027F               	subwf	127,w
  4670  033D  1D03               	skipz
  4671  033E  2B49               	goto	u2483
  4672  033F  0822               	movf	my_delay_ms@time+2,w
  4673  0340  0228               	subwf	my_delay_ms@i+2,w
  4674  0341  1D03               	skipz
  4675  0342  2B49               	goto	u2483
  4676  0343  0821               	movf	my_delay_ms@time+1,w
  4677  0344  0227               	subwf	my_delay_ms@i+1,w
  4678  0345  1D03               	skipz
  4679  0346  2B49               	goto	u2483
  4680  0347  0820               	movf	my_delay_ms@time,w
  4681  0348  0226               	subwf	my_delay_ms@i,w
  4682  0349                     u2483:	
  4683  0349  1803               	btfsc	3,0
  4684  034A  0008               	return
  4685                           
  4686                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4687  034B  3003               	movlw	3
  4688  034C  1283               	bcf	3,5	;RP0=0, select bank0
  4689  034D  1303               	bcf	3,6	;RP1=0, select bank0
  4690  034E  00A5               	movwf	??_my_delay_ms+1
  4691  034F  3097               	movlw	151
  4692  0350  00A4               	movwf	??_my_delay_ms
  4693  0351                     u5387:	
  4694  0351  0BA4               	decfsz	??_my_delay_ms,f
  4695  0352  2B51               	goto	u5387
  4696  0353  0BA5               	decfsz	??_my_delay_ms+1,f
  4697  0354  2B51               	goto	u5387
  4698                           
  4699                           ;my_delay.c: 10:             }
  4700  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4701  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4702  0357  0AA6               	incf	my_delay_ms@i,f
  4703  0358  1903               	skipnz
  4704  0359  0AA7               	incf	my_delay_ms@i+1,f
  4705  035A  1903               	skipnz
  4706  035B  0AA8               	incf	my_delay_ms@i+2,f
  4707  035C  1903               	skipnz
  4708  035D  0AA9               	incf	my_delay_ms@i+3,f
  4709  035E  2B37               	goto	l3863
  4710  035F                     __end_of_my_delay_ms:	
  4711  035F                     PL2:	
  4712  035F  0821               	movf	?__Umul8_16+1,w
  4713  0360  00C0               	movwf	___flmul@temp+1
  4714  0361  0820               	movf	?__Umul8_16,w
  4715  0362  00BF               	movwf	___flmul@temp
  4716  0363  00B0               	movwf	??___flmul
  4717  0364  0840               	movf	___flmul@temp+1,w
  4718  0365  00B1               	movwf	??___flmul+1
  4719  0366  01B2               	clrf	??___flmul+2
  4720  0367  01B3               	clrf	??___flmul+3
  4721  0368  0830               	movf	??___flmul,w
  4722  0369  07B7               	addwf	___flmul@grs,f
  4723  036A  0831               	movf	??___flmul+1,w
  4724  036B  1103               	clrz
  4725  036C  1803               	skipnc
  4726  036D  3E01               	addlw	1
  4727  036E  1D03               	btfss	3,2
  4728  036F  07B8               	addwf	___flmul@grs+1,f
  4729  0370  0832               	movf	??___flmul+2,w
  4730  0371  1103               	clrz
  4731  0372  1803               	skipnc
  4732  0373  3E01               	addlw	1
  4733  0374  1D03               	btfss	3,2
  4734  0375  07B9               	addwf	___flmul@grs+2,f
  4735  0376  0833               	movf	??___flmul+3,w
  4736  0377  1103               	clrz
  4737  0378  0008               	return
  4738  0379                     __end_ofPL2:	
  4739  0379                     PL4:	
  4740  0379  00C0               	movwf	___flmul@temp+1
  4741  037A  0820               	movf	?__Umul8_16,w
  4742  037B  00BF               	movwf	___flmul@temp
  4743  037C  00B0               	movwf	??___flmul
  4744  037D  0840               	movf	___flmul@temp+1,w
  4745  037E  00B1               	movwf	??___flmul+1
  4746  037F  01B2               	clrf	??___flmul+2
  4747  0380  01B3               	clrf	??___flmul+3
  4748  0381  0008               	return
  4749  0382                     __end_ofPL4:	
  4750  0382                     PL6:	
  4751  0382  0830               	movf	??___flmul,w
  4752  0383  07BB               	addwf	___flmul@prod,f
  4753  0384  0831               	movf	??___flmul+1,w
  4754  0385  1103               	clrz
  4755  0386  1803               	skipnc
  4756  0387  3E01               	addlw	1
  4757  0388  1D03               	btfss	3,2
  4758  0389  07BC               	addwf	___flmul@prod+1,f
  4759  038A  0832               	movf	??___flmul+2,w
  4760  038B  1103               	clrz
  4761  038C  1803               	skipnc
  4762  038D  3E01               	addlw	1
  4763  038E  1D03               	btfss	3,2
  4764  038F  07BD               	addwf	___flmul@prod+2,f
  4765  0390  0833               	movf	??___flmul+3,w
  4766  0391  1103               	clrz
  4767  0392  0008               	return
  4768  0393                     __end_ofPL6:	
  4769  0393                     PL8:	
  4770  0393  0821               	movf	?__Umul8_16+1,w
  4771  0394  00C0               	movwf	___flmul@temp+1
  4772  0395  0820               	movf	?__Umul8_16,w
  4773  0396  00BF               	movwf	___flmul@temp
  4774  0397  07B7               	addwf	___flmul@grs,f
  4775  0398  3001               	movlw	1
  4776  0399  1803               	skipnc
  4777  039A  07B8               	addwf	___flmul@grs+1,f
  4778  039B  1803               	skipnc
  4779  039C  07B9               	addwf	___flmul@grs+2,f
  4780  039D  1803               	skipnc
  4781  039E  07BA               	addwf	___flmul@grs+3,f
  4782  039F  0840               	movf	___flmul@temp+1,w
  4783  03A0  07BB               	addwf	___flmul@prod,f
  4784  03A1  3401               	retlw	1
  4785  03A2                     __end_ofPL8:	
  4786  03A2                     PL10:	
  4787  03A2  1803               	skipnc
  4788  03A3  07BC               	addwf	___flmul@prod+1,f
  4789  03A4  1803               	skipnc
  4790  03A5  07BD               	addwf	___flmul@prod+2,f
  4791  03A6  1803               	skipnc
  4792  03A7  07BE               	addwf	___flmul@prod+3,f
  4793  03A8  0839               	movf	___flmul@grs+2,w
  4794  03A9  00BA               	movwf	___flmul@grs+3
  4795  03AA  0838               	movf	___flmul@grs+1,w
  4796  03AB  00B9               	movwf	___flmul@grs+2
  4797  03AC  0837               	movf	___flmul@grs,w
  4798  03AD  00B8               	movwf	___flmul@grs+1
  4799  03AE  01B7               	clrf	___flmul@grs
  4800  03AF  0008               	return
  4801  03B0                     __end_ofPL10:	
  4802  03B0                     PL20:	
  4803  03B0  082B               	movf	?___flmul+3,w
  4804  03B1  00DD               	movwf	mediaLeituraPt100Umidadde@Temp+3
  4805  03B2  082A               	movf	?___flmul+2,w
  4806  03B3  00DC               	movwf	mediaLeituraPt100Umidadde@Temp+2
  4807  03B4  0829               	movf	?___flmul+1,w
  4808  03B5  00DB               	movwf	mediaLeituraPt100Umidadde@Temp+1
  4809  03B6  0828               	movf	?___flmul,w
  4810  03B7  00DA               	movwf	mediaLeituraPt100Umidadde@Temp
  4811  03B8  3442               	retlw	66
  4812  03B9                     __end_ofPL20:	
  4813  03B9                     PL24:	
  4814  03B9  085D               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  4815  03BA  00AF               	movwf	___flmul@a+3
  4816  03BB  085C               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  4817  03BC  00AE               	movwf	___flmul@a+2
  4818  03BD  085B               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  4819  03BE  00AD               	movwf	___flmul@a+1
  4820  03BF  085A               	movf	mediaLeituraPt100Umidadde@Temp,w
  4821  03C0  00AC               	movwf	___flmul@a
  4822  03C1  0008               	return
  4823  03C2                     __end_ofPL24:	
  4824  03C2                     PL36:	
  4825  03C2  1803               	skipnc
  4826  03C3  3E01               	addlw	1
  4827  03C4  1D03               	btfss	3,2
  4828  03C5  07BE               	addwf	___flmul@prod+3,f
  4829  03C6  082A               	movf	___flmul@b+2,w
  4830  03C7  00A0               	movwf	__Umul8_16@multiplicand
  4831  03C8  0008               	return
  4832  03C9                     __end_ofPL36:	
  4833  03C9                     PL38:	
  4834  03C9  009F               	movwf	31	;volatile
  4835  03CA  01A0               	clrf	my_delay_ms@time
  4836  03CB  0AA0               	incf	my_delay_ms@time,f
  4837  03CC  01A1               	clrf	my_delay_ms@time+1
  4838  03CD  01A2               	clrf	my_delay_ms@time+2
  4839  03CE  01A3               	clrf	my_delay_ms@time+3
  4840  03CF  0008               	return
  4841  03D0                     __end_ofPL38:	
  4842  03D0                     PL48:	
  4843  03D0  1003               	clrc
  4844  03D1  0CAD               	rrf	___xxtofl@arg+3,f
  4845  03D2  0CAC               	rrf	___xxtofl@arg+2,f
  4846  03D3  0CAB               	rrf	___xxtofl@arg+1,f
  4847  03D4  0CAA               	rrf	___xxtofl@arg,f
  4848  03D5  0008               	return
  4849  03D6                     __end_ofPL48:	
  4850  03D6                     __ptext8:	
  4851 ;; *************** function _captura *****************
  4852 ;; Defined at:
  4853 ;;		line 123 in file "adc.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  2    0[BANK0 ] unsigned int 
  4860 ;; Registers used:
  4861 ;;		wreg
  4862 ;; Tracked objects:
  4863 ;;		On entry : 300/0
  4864 ;;		On exit  : 300/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       2       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0
  4870 ;;      Totals:         0       2       0       0       0
  4871 ;;Total ram usage:        2 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_ADC_Media_10bits
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _captura
  4883  03D6                     _captura:	
  4884                           
  4885                           ;adc.c: 124:     ADCON0bits.GO=1;
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _captura: [wreg]
  4889  03D6  149F               	bsf	31,1	;volatile
  4890  03D7                     l478:	
  4891                           ;adc.c: 128:           }
  4892                           
  4893                           
  4894                           ;adc.c: 125:     while(ADCON0bits.GO)
  4895  03D7  189F               	btfsc	31,1	;volatile
  4896  03D8  2BD7               	goto	l478
  4897                           
  4898                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  4899  03D9  081E               	movf	30,w	;volatile
  4900  03DA  00A1               	movwf	?_captura+1
  4901  03DB  01A0               	clrf	?_captura
  4902  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  4903  03DD  081E               	movf	30,w	;volatile
  4904  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  4905  03DF  07A0               	addwf	?_captura,f
  4906  03E0  1803               	skipnc
  4907  03E1  0AA1               	incf	?_captura+1,f
  4908  03E2  0008               	return
  4909  03E3                     __end_of_captura:	
  4910  03E3                     __ptext5:	
  4911 ;; *************** function _Package_Usart_is_for_me *****************
  4912 ;; Defined at:
  4913 ;;		line 8 in file "protocolo.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  retorno         1    0[BANK0 ] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 300/0
  4924 ;;		On exit  : 300/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         0       0       0       0       0
  4928 ;;      Locals:         0       1       0       0       0
  4929 ;;      Temps:          0       0       0       0       0
  4930 ;;      Totals:         0       1       0       0       0
  4931 ;;Total ram usage:        1 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_mediaLeituraPt100Umidadde
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _Package_Usart_is_for_me
  4943  03E3                     _Package_Usart_is_for_me:	
  4944                           
  4945                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4949  03E3  1C6B               	btfss	_generic_status,0
  4950  03E4  2BF6               	goto	l4685
  4951                           
  4952                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4953  03E5  1683               	bsf	3,5	;RP0=1, select bank3
  4954  03E6  1703               	bsf	3,6	;RP1=1, select bank3
  4955  03E7  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  4956  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  4957  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  4958  03EA  0669               	xorwf	_Board_Number,w
  4959  03EB  1903               	skipnz
  4960  03EC  2BF1               	goto	l800
  4961  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  4962  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  4963  03EF  0F13               	incfsz	(_usart_buffer^(0+384)+3),w	;volatile
  4964  03F0  2BF6               	goto	l4685
  4965  03F1                     l800:	
  4966                           
  4967                           ;protocolo.c: 13:             retorno=1;
  4968  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4969  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4970  03F3  01A0               	clrf	Package_Usart_is_for_me@retorno
  4971  03F4  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4972  03F5  2BF9               	goto	l4689
  4973  03F6                     l4685:	
  4974                           
  4975                           ;protocolo.c: 15:             retorno=0;
  4976  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4977  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4978  03F8  01A0               	clrf	Package_Usart_is_for_me@retorno
  4979  03F9                     l4689:	
  4980                           
  4981                           ;protocolo.c: 21:      return retorno;
  4982  03F9  0820               	movf	Package_Usart_is_for_me@retorno,w
  4983  03FA  0008               	return
  4984  03FB                     __end_of_Package_Usart_is_for_me:	
  4985                           
  4986                           	psect	text10
  4987  1442                     __ptext10:	
  4988 ;; *************** function _USART_init *****************
  4989 ;; Defined at:
  4990 ;;		line 18 in file "usart.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  baudrate        4    0[BANK0 ] unsigned long 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  i               1    4[BANK0 ] unsigned char 
  4995 ;;  erro            1    0        unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 300/0
  5002 ;;		On exit  : 300/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5005 ;;      Params:         0       4       0       0       0
  5006 ;;      Locals:         0       1       0       0       0
  5007 ;;      Temps:          0       0       0       0       0
  5008 ;;      Totals:         0       5       0       0       0
  5009 ;;Total ram usage:        5 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_main
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _USART_init
  5021  1442                     _USART_init:	
  5022                           
  5023                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5027  1442  304B               	movlw	75
  5028  1443  0621               	xorwf	USART_init@baudrate+1,w
  5029  1444  0420               	iorwf	USART_init@baudrate,w
  5030  1445  0422               	iorwf	USART_init@baudrate+2,w
  5031  1446  0423               	iorwf	USART_init@baudrate+3,w
  5032  1447  1D03               	btfss	3,2
  5033  1448  2C53               	goto	l6295
  5034                           
  5035                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5036  1449  1798               	bsf	24,7	;volatile
  5037                           
  5038                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5039  144A  1618               	bsf	24,4	;volatile
  5040                           
  5041                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5042  144B  1683               	bsf	3,5	;RP0=1, select bank1
  5043  144C  1518               	bsf	24,2	;volatile
  5044                           
  5045                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5046  144D  1218               	bcf	24,4	;volatile
  5047                           
  5048                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5049  144E  1318               	bcf	24,6	;volatile
  5050                           
  5051                           ;usart.c: 32:           SPBRG =12;
  5052  144F  300C               	movlw	12
  5053  1450  0099               	movwf	25	;volatile
  5054                           
  5055                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5056  1451  170B               	bsf	11,6	;volatile
  5057  1452  2C6C               	goto	L8
  5058  1453                     l6295:	
  5059                           ;usart.c: 35:           }
  5060                           
  5061                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5062                           
  5063  1453  30C2               	movlw	194
  5064  1454  0621               	xorwf	USART_init@baudrate+1,w
  5065  1455  1D03               	skipz
  5066  1456  2C6D               	goto	l6315
  5067  1457  0322               	decf	USART_init@baudrate+2,w
  5068  1458  0420               	iorwf	USART_init@baudrate,w
  5069  1459  0423               	iorwf	USART_init@baudrate+3,w
  5070  145A  1D03               	btfss	3,2
  5071  145B  2C6D               	goto	l6315
  5072                           
  5073                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5074  145C  3010               	movlw	16
  5075  145D  1683               	bsf	3,5	;RP0=1, select bank1
  5076  145E  0099               	movwf	25	;volatile
  5077                           
  5078                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5079  145F  1703               	bsf	3,6	;RP1=1, select bank3
  5080  1460  1587               	bsf	7,3	;volatile
  5081                           
  5082                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5083  1461  1303               	bcf	3,6	;RP1=0, select bank1
  5084  1462  1518               	bsf	24,2	;volatile
  5085                           
  5086                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5087  1463  1283               	bcf	3,5	;RP0=0, select bank0
  5088  1464  1798               	bsf	24,7	;volatile
  5089                           
  5090                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5091  1465  1683               	bsf	3,5	;RP0=1, select bank1
  5092  1466  1218               	bcf	24,4	;volatile
  5093                           
  5094                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5095  1467  1318               	bcf	24,6	;volatile
  5096                           
  5097                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5098  1468  1283               	bcf	3,5	;RP0=0, select bank0
  5099  1469  1618               	bsf	24,4	;volatile
  5100                           
  5101                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5102  146A  170B               	bsf	11,6	;volatile
  5103                           
  5104                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5105  146B  1683               	bsf	3,5	;RP0=1, select bank1
  5106  146C                     L8:	
  5107  146C  168C               	bsf	12,5	;volatile
  5108  146D                     l6315:	
  5109                           
  5110                           ;usart.c: 68:      TRISC6= 1;
  5111  146D  1683               	bsf	3,5	;RP0=1, select bank1
  5112  146E  1707               	bsf	7,6	;volatile
  5113                           
  5114                           ;usart.c: 69:      TRISC7= 1;
  5115  146F  1787               	bsf	7,7	;volatile
  5116                           
  5117                           ;usart.c: 71:      CREN=0;
  5118  1470  1283               	bcf	3,5	;RP0=0, select bank0
  5119  1471  1218               	bcf	24,4	;volatile
  5120                           
  5121                           ;usart.c: 72:      CREN=1;
  5122  1472  1618               	bsf	24,4	;volatile
  5123                           
  5124                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5125  1473  01A4               	clrf	USART_init@i
  5126  1474                     l6329:	
  5127  1474  081A               	movf	26,w	;volatile
  5128  1475  300F               	movlw	15
  5129  1476  0AA4               	incf	USART_init@i,f
  5130  1477  0224               	subwf	USART_init@i,w
  5131  1478  1803               	btfsc	3,0
  5132  1479  0008               	return
  5133  147A  2C74               	goto	l6329
  5134  147B                     __end_of_USART_init:	
  5135                           
  5136                           	psect	text11
  5137  14C8                     __ptext11:	
  5138 ;; *************** function _I2C_Master_Init *****************
  5139 ;; Defined at:
  5140 ;;		line 7 in file "I2C.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  c               4   13[BANK0 ] const unsigned long 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 300/0
  5151 ;;		On exit  : 300/100
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         0       4       0       0       0
  5155 ;;      Locals:         0       0       0       0       0
  5156 ;;      Temps:          0       4       0       0       0
  5157 ;;      Totals:         0       8       0       0       0
  5158 ;;Total ram usage:        8 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    2
  5161 ;; This function calls:
  5162 ;;		___lldiv
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function _I2C_Master_Init
  5170  14C8                     _I2C_Master_Init:	
  5171                           
  5172                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5173                           
  5174                           ;incstack = 0
  5175                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5176  14C8  3028               	movlw	40
  5177  14C9  0094               	movwf	20	;volatile
  5178                           
  5179                           ;I2C.c: 11:   SSPCON2 = 0;
  5180  14CA  1683               	bsf	3,5	;RP0=1, select bank1
  5181  14CB  0191               	clrf	17	;volatile
  5182                           
  5183                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5184  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  5185  14CD  082D               	movf	I2C_Master_Init@c,w
  5186  14CE  00B1               	movwf	??_I2C_Master_Init
  5187  14CF  082E               	movf	I2C_Master_Init@c+1,w
  5188  14D0  00B2               	movwf	??_I2C_Master_Init+1
  5189  14D1  082F               	movf	I2C_Master_Init@c+2,w
  5190  14D2  00B3               	movwf	??_I2C_Master_Init+2
  5191  14D3  0830               	movf	I2C_Master_Init@c+3,w
  5192  14D4  00B4               	movwf	??_I2C_Master_Init+3
  5193  14D5  3002               	movlw	2
  5194  14D6                     u5145:	
  5195  14D6  1003               	clrc
  5196  14D7  0DB1               	rlf	??_I2C_Master_Init,f
  5197  14D8  0DB2               	rlf	??_I2C_Master_Init+1,f
  5198  14D9  0DB3               	rlf	??_I2C_Master_Init+2,f
  5199  14DA  0DB4               	rlf	??_I2C_Master_Init+3,f
  5200  14DB  3EFF               	addlw	-1
  5201  14DC  1D03               	skipz
  5202  14DD  2CD6               	goto	u5145
  5203  14DE  0834               	movf	??_I2C_Master_Init+3,w
  5204  14DF  00A3               	movwf	___lldiv@divisor+3
  5205  14E0  0833               	movf	??_I2C_Master_Init+2,w
  5206  14E1  00A2               	movwf	___lldiv@divisor+2
  5207  14E2  0832               	movf	??_I2C_Master_Init+1,w
  5208  14E3  00A1               	movwf	___lldiv@divisor+1
  5209  14E4  0831               	movf	??_I2C_Master_Init,w
  5210  14E5  00A0               	movwf	___lldiv@divisor
  5211  14E6  307A               	movlw	122
  5212  14E7  01A7               	clrf	___lldiv@dividend+3
  5213  14E8  00A6               	movwf	___lldiv@dividend+2
  5214  14E9  3012               	movlw	18
  5215  14EA  00A5               	movwf	___lldiv@dividend+1
  5216  14EB  01A4               	clrf	___lldiv@dividend
  5217  14EC  24F5               	fcall	___lldiv
  5218  14ED  0820               	movf	?___lldiv,w
  5219  14EE  3EFF               	addlw	255
  5220  14EF  1683               	bsf	3,5	;RP0=1, select bank1
  5221  14F0  0093               	movwf	19	;volatile
  5222                           
  5223                           ;I2C.c: 13:   SSPSTAT = 0;
  5224  14F1  0194               	clrf	20	;volatile
  5225                           
  5226                           ;I2C.c: 14:   TRISC3 = 1;
  5227  14F2  1587               	bsf	7,3	;volatile
  5228                           
  5229                           ;I2C.c: 15:   TRISC4 = 1;
  5230  14F3  1607               	bsf	7,4	;volatile
  5231  14F4  0008               	return
  5232  14F5                     __end_of_I2C_Master_Init:	
  5233  14F5                     __ptext12:	
  5234 ;; *************** function ___lldiv *****************
  5235 ;; Defined at:
  5236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  divisor         4    0[BANK0 ] unsigned long 
  5239 ;;  dividend        4    4[BANK0 ] unsigned long 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  quotient        4    8[BANK0 ] unsigned long 
  5242 ;;  counter         1   12[BANK0 ] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  4    0[BANK0 ] unsigned long 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0
  5247 ;; Tracked objects:
  5248 ;;		On entry : 300/0
  5249 ;;		On exit  : 300/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5252 ;;      Params:         0       8       0       0       0
  5253 ;;      Locals:         0       5       0       0       0
  5254 ;;      Temps:          0       0       0       0       0
  5255 ;;      Totals:         0      13       0       0       0
  5256 ;;Total ram usage:       13 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    1
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_I2C_Master_Init
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function ___lldiv
  5268  14F5                     ___lldiv:	
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5272  14F5  01A8               	clrf	___lldiv@quotient
  5273  14F6  01A9               	clrf	___lldiv@quotient+1
  5274  14F7  01AA               	clrf	___lldiv@quotient+2
  5275  14F8  01AB               	clrf	___lldiv@quotient+3
  5276  14F9  0823               	movf	___lldiv@divisor+3,w
  5277  14FA  0422               	iorwf	___lldiv@divisor+2,w
  5278  14FB  0421               	iorwf	___lldiv@divisor+1,w
  5279  14FC  0420               	iorwf	___lldiv@divisor,w
  5280  14FD  1903               	skipnz
  5281  14FE  2D34               	goto	l6255
  5282  14FF  01AC               	clrf	___lldiv@counter
  5283  1500                     L9:	
  5284  1500  0AAC               	incf	___lldiv@counter,f
  5285  1501  1BA3               	btfsc	___lldiv@divisor+3,7
  5286  1502  2D09               	goto	l6243
  5287  1503  1003               	clrc
  5288  1504  0DA0               	rlf	___lldiv@divisor,f
  5289  1505  0DA1               	rlf	___lldiv@divisor+1,f
  5290  1506  0DA2               	rlf	___lldiv@divisor+2,f
  5291  1507  0DA3               	rlf	___lldiv@divisor+3,f
  5292  1508  2D00               	goto	L9
  5293  1509                     l6243:	
  5294  1509  1003               	clrc
  5295  150A  0DA8               	rlf	___lldiv@quotient,f
  5296  150B  0DA9               	rlf	___lldiv@quotient+1,f
  5297  150C  0DAA               	rlf	___lldiv@quotient+2,f
  5298  150D  0DAB               	rlf	___lldiv@quotient+3,f
  5299  150E  0823               	movf	___lldiv@divisor+3,w
  5300  150F  0227               	subwf	___lldiv@dividend+3,w
  5301  1510  1D03               	skipz
  5302  1511  2D1C               	goto	u5125
  5303  1512  0822               	movf	___lldiv@divisor+2,w
  5304  1513  0226               	subwf	___lldiv@dividend+2,w
  5305  1514  1D03               	skipz
  5306  1515  2D1C               	goto	u5125
  5307  1516  0821               	movf	___lldiv@divisor+1,w
  5308  1517  0225               	subwf	___lldiv@dividend+1,w
  5309  1518  1D03               	skipz
  5310  1519  2D1C               	goto	u5125
  5311  151A  0820               	movf	___lldiv@divisor,w
  5312  151B  0224               	subwf	___lldiv@dividend,w
  5313  151C                     u5125:	
  5314  151C  1C03               	skipc
  5315  151D  2D2E               	goto	L10
  5316  151E  0820               	movf	___lldiv@divisor,w
  5317  151F  02A4               	subwf	___lldiv@dividend,f
  5318  1520  0821               	movf	___lldiv@divisor+1,w
  5319  1521  1C03               	skipc
  5320  1522  0F21               	incfsz	___lldiv@divisor+1,w
  5321  1523  02A5               	subwf	___lldiv@dividend+1,f
  5322  1524  0822               	movf	___lldiv@divisor+2,w
  5323  1525  1C03               	skipc
  5324  1526  0F22               	incfsz	___lldiv@divisor+2,w
  5325  1527  02A6               	subwf	___lldiv@dividend+2,f
  5326  1528  0823               	movf	___lldiv@divisor+3,w
  5327  1529  1C03               	skipc
  5328  152A  0F23               	incfsz	___lldiv@divisor+3,w
  5329  152B  02A7               	subwf	___lldiv@dividend+3,f
  5330  152C  1428               	bsf	___lldiv@quotient,0
  5331  152D  1003               	clrc
  5332  152E                     L10:	
  5333  152E  0CA3               	rrf	___lldiv@divisor+3,f
  5334  152F  0CA2               	rrf	___lldiv@divisor+2,f
  5335  1530  0CA1               	rrf	___lldiv@divisor+1,f
  5336  1531  0CA0               	rrf	___lldiv@divisor,f
  5337  1532  0BAC               	decfsz	___lldiv@counter,f
  5338  1533  2D09               	goto	l6243
  5339  1534                     l6255:	
  5340  1534  082B               	movf	___lldiv@quotient+3,w
  5341  1535  00A3               	movwf	?___lldiv+3
  5342  1536  082A               	movf	___lldiv@quotient+2,w
  5343  1537  00A2               	movwf	?___lldiv+2
  5344  1538  0829               	movf	___lldiv@quotient+1,w
  5345  1539  00A1               	movwf	?___lldiv+1
  5346  153A  0828               	movf	___lldiv@quotient,w
  5347  153B  00A0               	movwf	?___lldiv
  5348  153C  0008               	return
  5349  153D                     __end_of___lldiv:	
  5350                           
  5351                           	psect	text14
  5352  136A                     __ptext14:	
  5353 ;; *************** function _strcpy *****************
  5354 ;; Defined at:
  5355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  to              1    wreg     PTR unsigned char 
  5358 ;;		 -> texto(16), 
  5359 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5360 ;;		 -> STR_2(1), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  to              1    2[BANK0 ] PTR unsigned char 
  5363 ;;		 -> texto(16), 
  5364 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  5365 ;;		 -> texto(16), 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      PTR unsigned char 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5370 ;; Tracked objects:
  5371 ;;		On entry : B00/0
  5372 ;;		On exit  : B00/800
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       1       0       0       0
  5376 ;;      Locals:         0       2       0       0       0
  5377 ;;      Temps:          0       1       0       0       0
  5378 ;;      Totals:         0       4       0       0       0
  5379 ;;Total ram usage:        4 bytes
  5380 ;; Hardware stack levels used:    2
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_Decodify_Command
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _strcpy
  5391  136A                     _strcpy:	
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  5395                           ;strcpy@to stored from wreg
  5396  136A  00A2               	movwf	strcpy@to
  5397  136B  00A3               	movwf	strcpy@cp
  5398  136C                     l4629:	
  5399  136C  0820               	movf	strcpy@from,w
  5400  136D  0084               	movwf	4
  5401  136E  160A  118A  200A  160A  118A  	fcall	stringdir
  5402  1373  00A1               	movwf	??_strcpy
  5403  1374  0823               	movf	strcpy@cp,w
  5404  1375  0084               	movwf	4
  5405  1376  0821               	movf	??_strcpy,w
  5406  1377  1783               	bsf	3,7	;select IRP bank2
  5407  1378  0080               	movwf	0
  5408  1379  0800               	movf	0,w
  5409  137A  1903               	btfsc	3,2
  5410  137B  0008               	return
  5411  137C  0AA3               	incf	strcpy@cp,f
  5412  137D  0AA0               	incf	strcpy@from,f
  5413  137E  2B6C               	goto	l4629
  5414  137F                     __end_of_strcpy:	
  5415                           
  5416                           	psect	text19
  5417  079B                     __ptext19:	
  5418 ;; *************** function _USART_to_Protocol *****************
  5419 ;; Defined at:
  5420 ;;		line 77 in file "usart.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  usart_protoc    1    wreg     PTR struct .
  5423 ;;		 -> usart_protocol(16), 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  5426 ;;		 -> usart_protocol(16), 
  5427 ;;  i               2    2[BANK0 ] int 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 300/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5437 ;;      Params:         0       0       0       0       0
  5438 ;;      Locals:         0       3       0       0       0
  5439 ;;      Temps:          0       2       0       0       0
  5440 ;;      Totals:         0       5       0       0       0
  5441 ;;Total ram usage:        5 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_Decodify_Command
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _USART_to_Protocol
  5453  079B                     _USART_to_Protocol:	
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  5457                           ;USART_to_Protocol@usart_protocol stored from wreg
  5458  079B  00A4               	movwf	USART_to_Protocol@usart_protocol
  5459                           
  5460                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  5461  079C  0084               	movwf	4
  5462  079D  1683               	bsf	3,5	;RP0=1, select bank3
  5463  079E  1703               	bsf	3,6	;RP1=1, select bank3
  5464  079F  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  5465  07A0  1383               	bcf	3,7	;select IRP bank0
  5466  07A1  0080               	movwf	0
  5467  07A2  0A84               	incf	4,f
  5468  07A3  0810               	movf	_usart_buffer^(0+384),w	;volatile
  5469  07A4  0080               	movwf	0
  5470                           
  5471                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  5472  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  5473  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  5474  07A7  0824               	movf	USART_to_Protocol@usart_protocol,w
  5475  07A8  3E02               	addlw	2
  5476  07A9  0084               	movwf	4
  5477  07AA  1683               	bsf	3,5	;RP0=1, select bank3
  5478  07AB  1703               	bsf	3,6	;RP1=1, select bank3
  5479  07AC  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  5480  07AD  0080               	movwf	0
  5481                           
  5482                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  5483  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  5484  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  5485  07B0  0824               	movf	USART_to_Protocol@usart_protocol,w
  5486  07B1  3E03               	addlw	3
  5487  07B2  0084               	movwf	4
  5488  07B3  1683               	bsf	3,5	;RP0=1, select bank3
  5489  07B4  1703               	bsf	3,6	;RP1=1, select bank3
  5490  07B5  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5491  07B6  0080               	movwf	0
  5492                           
  5493                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  5494  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  5495  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  5496  07B9  0824               	movf	USART_to_Protocol@usart_protocol,w
  5497  07BA  3E04               	addlw	4
  5498  07BB  0084               	movwf	4
  5499  07BC  1683               	bsf	3,5	;RP0=1, select bank3
  5500  07BD  1703               	bsf	3,6	;RP1=1, select bank3
  5501  07BE  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  5502  07BF  0080               	movwf	0
  5503                           
  5504                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  5505  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  5506  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  5507  07C2  0824               	movf	USART_to_Protocol@usart_protocol,w
  5508  07C3  3E05               	addlw	5
  5509  07C4  0084               	movwf	4
  5510  07C5  1683               	bsf	3,5	;RP0=1, select bank3
  5511  07C6  1703               	bsf	3,6	;RP1=1, select bank3
  5512  07C7  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  5513  07C8  0080               	movwf	0
  5514                           
  5515                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  5516  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  5517  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  5518  07CB  01A2               	clrf	USART_to_Protocol@i
  5519  07CC  01A3               	clrf	USART_to_Protocol@i+1
  5520  07CD                     l4569:	
  5521  07CD  0824               	movf	USART_to_Protocol@usart_protocol,w
  5522  07CE  3E05               	addlw	5
  5523  07CF  0084               	movwf	4
  5524  07D0  0823               	movf	USART_to_Protocol@i+1,w
  5525  07D1  3A80               	xorlw	128
  5526  07D2  00A0               	movwf	??_USART_to_Protocol
  5527  07D3  3080               	movlw	128
  5528  07D4  0220               	subwf	??_USART_to_Protocol,w
  5529  07D5  1D03               	skipz
  5530  07D6  2FD9               	goto	u3555
  5531  07D7  0800               	movf	0,w
  5532  07D8  0222               	subwf	USART_to_Protocol@i,w
  5533  07D9                     u3555:	
  5534  07D9  1803               	btfsc	3,0
  5535  07DA  0008               	return
  5536                           
  5537                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  5538  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5539  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5540  07DD  0822               	movf	USART_to_Protocol@i,w
  5541  07DE  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  5542  07DF  0084               	movwf	4
  5543  07E0  1783               	bsf	3,7	;select IRP bank3
  5544  07E1  0800               	movf	0,w
  5545  07E2  00A0               	movwf	??_USART_to_Protocol
  5546  07E3  0822               	movf	USART_to_Protocol@i,w
  5547  07E4  0724               	addwf	USART_to_Protocol@usart_protocol,w
  5548  07E5  00A1               	movwf	??_USART_to_Protocol+1
  5549  07E6  3E06               	addlw	6
  5550  07E7  0084               	movwf	4
  5551  07E8  0820               	movf	??_USART_to_Protocol,w
  5552  07E9  1383               	bcf	3,7	;select IRP bank0
  5553  07EA  0080               	movwf	0
  5554  07EB  0AA2               	incf	USART_to_Protocol@i,f
  5555  07EC  1903               	skipnz
  5556  07ED  0AA3               	incf	USART_to_Protocol@i+1,f
  5557  07EE  2FCD               	goto	l4569
  5558  07EF                     __end_of_USART_to_Protocol:	
  5559                           
  5560                           	psect	text20
  5561  13CA                     __ptext20:	
  5562 ;; *************** function _USART_put_buffer *****************
  5563 ;; Defined at:
  5564 ;;		line 99 in file "usart.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  vetor           1    wreg     PTR unsigned char 
  5567 ;;		 -> buffer(32), 
  5568 ;;  size            2    1[BANK0 ] unsigned int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  5571 ;;		 -> buffer(32), 
  5572 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  5573 ;;		 -> USART_put_buffer@vetor(1), 
  5574 ;;  loop            1    5[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 300/0
  5581 ;;		On exit  : 300/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         0       2       0       0       0
  5585 ;;      Locals:         0       3       0       0       0
  5586 ;;      Temps:          0       2       0       0       0
  5587 ;;      Totals:         0       7       0       0       0
  5588 ;;Total ram usage:        7 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    2
  5591 ;; This function calls:
  5592 ;;		_USART_putc
  5593 ;; This function is called by:
  5594 ;;		_Decodify_Command
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _USART_put_buffer
  5600  13CA                     _USART_put_buffer:	
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5604                           ;USART_put_buffer@vetor stored from wreg
  5605  13CA  00A7               	movwf	USART_put_buffer@vetor
  5606  13CB  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  5607                           
  5608                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  5609  13CC  01A5               	clrf	USART_put_buffer@loop
  5610                           
  5611                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  5612  13CD  00A6               	movwf	USART_put_buffer@ptr
  5613  13CE                     l4609:	
  5614                           ;usart.c: 105:     while(loop<size)
  5615                           
  5616                           
  5617                           ;usart.c: 105:     while(loop<size)
  5618  13CE  0825               	movf	USART_put_buffer@loop,w
  5619  13CF  00A3               	movwf	??_USART_put_buffer
  5620  13D0  01A4               	clrf	??_USART_put_buffer+1
  5621  13D1  0822               	movf	USART_put_buffer@size+1,w
  5622  13D2  0224               	subwf	??_USART_put_buffer+1,w
  5623  13D3  1D03               	skipz
  5624  13D4  2BD7               	goto	u3585
  5625  13D5  0821               	movf	USART_put_buffer@size,w
  5626  13D6  0223               	subwf	??_USART_put_buffer,w
  5627  13D7                     u3585:	
  5628  13D7  1803               	btfsc	3,0
  5629  13D8  0008               	return
  5630                           
  5631                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  5632  13D9  0826               	movf	USART_put_buffer@ptr,w
  5633  13DA  0084               	movwf	4
  5634  13DB  1383               	bcf	3,7	;select IRP bank0
  5635  13DC  0800               	movf	0,w
  5636  13DD  120A  158A  23D3  160A  118A  	fcall	_USART_putc
  5637                           
  5638                           ;usart.c: 108:         ptr++;
  5639  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  5640  13E3  0AA6               	incf	USART_put_buffer@ptr,f
  5641                           
  5642                           ;usart.c: 109:         loop++;
  5643  13E4  0AA5               	incf	USART_put_buffer@loop,f
  5644  13E5  2BCE               	goto	l4609
  5645  13E6                     __end_of_USART_put_buffer:	
  5646                           
  5647                           	psect	text22
  5648  140F                     __ptext22:	
  5649 ;; *************** function _Send_Reply_OK *****************
  5650 ;; Defined at:
  5651 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 200/100
  5662 ;;		On exit  : 300/100
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5665 ;;      Params:         0       0       0       0       0
  5666 ;;      Locals:         0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0
  5668 ;;      Totals:         0       0       0       0       0
  5669 ;;Total ram usage:        0 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    3
  5672 ;; This function calls:
  5673 ;;		_USART_put_string
  5674 ;; This function is called by:
  5675 ;;		_Decodify_Command
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function _Send_Reply_OK
  5681  140F                     _Send_Reply_OK:	
  5682  140F                     l6159:	
  5683                           ;incstack = 0
  5684                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5685                           
  5686                           
  5687                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  5688  140F  3035               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5689  1410  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1411  00A1               	movwf	USART_put_string@vetor
  5691  1412  3080               	movlw	128
  5692  1413  00A2               	movwf	USART_put_string@vetor+1
  5693  1414  2C15               	ljmp	l5723
  5694  1415                     __end_of_Send_Reply_OK:	
  5695  1415                     __ptext23:	
  5696 ;; *************** function _USART_put_string *****************
  5697 ;; Defined at:
  5698 ;;		line 168 in file "usart.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  5701 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  5704 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 300/0
  5711 ;;		On exit  : 300/100
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5714 ;;      Params:         0       2       0       0       0
  5715 ;;      Locals:         0       2       0       0       0
  5716 ;;      Temps:          0       0       0       0       0
  5717 ;;      Totals:         0       4       0       0       0
  5718 ;;Total ram usage:        4 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    2
  5721 ;; This function calls:
  5722 ;;		_USART_putc
  5723 ;; This function is called by:
  5724 ;;		_Decodify_Command
  5725 ;;		_Send_Reply_OK
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _USART_put_string
  5731  1415                     _USART_put_string:	
  5732  1415                     l5723:	
  5733                           ;incstack = 0
  5734                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5735                           
  5736                           
  5737                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  5738  1415  0821               	movf	USART_put_string@vetor,w
  5739  1416  00A3               	movwf	USART_put_string@ptr
  5740  1417  0822               	movf	USART_put_string@vetor+1,w
  5741  1418  00A4               	movwf	USART_put_string@ptr+1
  5742  1419                     l5729:	
  5743                           ;usart.c: 172:     while(*(ptr)){
  5744                           
  5745                           
  5746                           ;usart.c: 172:     while(*(ptr)){
  5747  1419  0824               	movf	USART_put_string@ptr+1,w
  5748  141A  00FF               	movwf	127
  5749  141B  0823               	movf	USART_put_string@ptr,w
  5750  141C  0084               	movwf	4
  5751  141D  160A  118A  2000  160A  118A  	fcall	stringtab
  5752  1422  3A00               	xorlw	0
  5753  1423  1903               	btfsc	3,2
  5754  1424  2C38               	goto	l5731
  5755                           
  5756                           ;usart.c: 173:         USART_putc(*(ptr));
  5757  1425  0824               	movf	USART_put_string@ptr+1,w
  5758  1426  00FF               	movwf	127
  5759  1427  0823               	movf	USART_put_string@ptr,w
  5760  1428  0084               	movwf	4
  5761  1429  160A  118A  2000  160A  118A  	fcall	stringtab
  5762  142E  120A  158A  23D3  160A  118A  	fcall	_USART_putc
  5763                           
  5764                           ;usart.c: 174:         ptr++;
  5765  1433  1283               	bcf	3,5	;RP0=0, select bank0
  5766  1434  0AA3               	incf	USART_put_string@ptr,f
  5767  1435  1903               	skipnz
  5768  1436  0AA4               	incf	USART_put_string@ptr+1,f
  5769  1437  2C19               	goto	l5729
  5770  1438                     l5731:	
  5771                           
  5772                           ;usart.c: 176:     USART_putc(*(ptr));
  5773  1438  0824               	movf	USART_put_string@ptr+1,w
  5774  1439  00FF               	movwf	127
  5775  143A  0823               	movf	USART_put_string@ptr,w
  5776  143B  0084               	movwf	4
  5777  143C  160A  118A  2000   	fcall	stringtab
  5778  143F  120A  158A  2BD3   	ljmp	_USART_putc
  5779  1442                     __end_of_USART_put_string:	
  5780                           
  5781                           	psect	text28
  5782  13E6                     __ptext28:	
  5783 ;; *************** function _PROCULUS_VP_Write_String *****************
  5784 ;; Defined at:
  5785 ;;		line 205 in file "proculus.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  vp              2   52[BANK0 ] unsigned int 
  5788 ;;  text            1   54[BANK0 ] PTR unsigned char 
  5789 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 300/0
  5798 ;;		On exit  : 300/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5801 ;;      Params:         0       3       0       0       0
  5802 ;;      Locals:         0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0
  5804 ;;      Totals:         0       3       0       0       0
  5805 ;;Total ram usage:        3 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    4
  5808 ;; This function calls:
  5809 ;;		_PROCULUS_VP_Write
  5810 ;;		_strlen
  5811 ;; This function is called by:
  5812 ;;		_Decodify_Command
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _PROCULUS_VP_Write_String
  5818  13E6                     _PROCULUS_VP_Write_String:	
  5819                           
  5820                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5824  13E6  0855               	movf	PROCULUS_VP_Write_String@vp+1,w
  5825  13E7  00CF               	movwf	PROCULUS_VP_Write@vp+1
  5826  13E8  0854               	movf	PROCULUS_VP_Write_String@vp,w
  5827  13E9  00CE               	movwf	PROCULUS_VP_Write@vp
  5828  13EA  0856               	movf	PROCULUS_VP_Write_String@text,w
  5829  13EB  00D0               	movwf	PROCULUS_VP_Write@vetor
  5830  13EC  0856               	movf	PROCULUS_VP_Write_String@text,w
  5831  13ED  00A0               	movwf	strlen@s
  5832  13EE  01A1               	clrf	strlen@s+1
  5833  13EF  23F6               	fcall	_strlen
  5834  13F0  0820               	movf	?_strlen,w
  5835  13F1  3E01               	addlw	1
  5836  13F2  00D1               	movwf	PROCULUS_VP_Write@size
  5837  13F3  120A  158A  2833   	ljmp	l5765
  5838  13F6                     __end_of_PROCULUS_VP_Write_String:	
  5839  13F6                     __ptext29:	
  5840 ;; *************** function _strlen *****************
  5841 ;; Defined at:
  5842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5845 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  5848 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  2    0[BANK0 ] unsigned int 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5853 ;; Tracked objects:
  5854 ;;		On entry : 300/0
  5855 ;;		On exit  : 300/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5858 ;;      Params:         0       2       0       0       0
  5859 ;;      Locals:         0       2       0       0       0
  5860 ;;      Temps:          0       0       0       0       0
  5861 ;;      Totals:         0       4       0       0       0
  5862 ;;Total ram usage:        4 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    1
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_Decodify_Command
  5869 ;;		_PROCULUS_VP_Write_String
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _strlen
  5875  13F6                     _strlen:	
  5876                           
  5877                           ;incstack = 0
  5878                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5879  13F6  0820               	movf	strlen@s,w
  5880  13F7  00A2               	movwf	strlen@cp
  5881  13F8  0821               	movf	strlen@s+1,w
  5882  13F9  00A3               	movwf	strlen@cp+1
  5883  13FA                     l5737:	
  5884  13FA  0822               	movf	strlen@cp,w
  5885  13FB  0084               	movwf	4
  5886  13FC  1783               	bsf	3,7
  5887  13FD  1C23               	btfss	strlen@cp+1,0
  5888  13FE  1383               	bcf	3,7
  5889  13FF  0800               	movf	0,w
  5890  1400  1903               	btfsc	3,2
  5891  1401  2C06               	goto	l5739
  5892  1402  0AA2               	incf	strlen@cp,f
  5893  1403  1903               	skipnz
  5894  1404  0AA3               	incf	strlen@cp+1,f
  5895  1405  2BFA               	goto	l5737
  5896  1406                     l5739:	
  5897  1406  0820               	movf	strlen@s,w
  5898  1407  0222               	subwf	strlen@cp,w
  5899  1408  00A0               	movwf	?_strlen
  5900  1409  0821               	movf	strlen@s+1,w
  5901  140A  1C03               	skipc
  5902  140B  0A21               	incf	strlen@s+1,w
  5903  140C  0223               	subwf	strlen@cp+1,w
  5904  140D  00A1               	movwf	?_strlen+1
  5905  140E  0008               	return
  5906  140F                     __end_of_strlen:	
  5907                           
  5908                           	psect	text32
  5909  15B7                     __ptext32:	
  5910 ;; *************** function _PROCULUS_Buzzer *****************
  5911 ;; Defined at:
  5912 ;;		line 223 in file "proculus.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  time_ms_x_10    2   50[BANK0 ] unsigned int 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  vetor           2   52[BANK0 ] unsigned char [2]
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 300/0
  5923 ;;		On exit  : 300/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5926 ;;      Params:         0       2       0       0       0
  5927 ;;      Locals:         0       2       0       0       0
  5928 ;;      Temps:          0       0       0       0       0
  5929 ;;      Totals:         0       4       0       0       0
  5930 ;;Total ram usage:        4 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    4
  5933 ;; This function calls:
  5934 ;;		_PROCULUS_Control_Register_Write
  5935 ;;		___lwdiv
  5936 ;; This function is called by:
  5937 ;;		_Decodify_Command
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _PROCULUS_Buzzer
  5943  15B7                     _PROCULUS_Buzzer:	
  5944                           
  5945                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5949  15B7  300A               	movlw	10
  5950  15B8  00A0               	movwf	___lwdiv@divisor
  5951  15B9  01A1               	clrf	___lwdiv@divisor+1
  5952  15BA  0853               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  5953  15BB  00A3               	movwf	___lwdiv@dividend+1
  5954  15BC  0852               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  5955  15BD  00A2               	movwf	___lwdiv@dividend
  5956  15BE  261A               	fcall	___lwdiv
  5957  15BF  0821               	movf	?___lwdiv+1,w
  5958  15C0  00D3               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  5959  15C1  0820               	movf	?___lwdiv,w
  5960  15C2  00D2               	movwf	PROCULUS_Buzzer@time_ms_x_10
  5961                           
  5962                           ;proculus.c: 226:      vetor[0]=0x02;
  5963  15C3  3002               	movlw	2
  5964  15C4  00D4               	movwf	PROCULUS_Buzzer@vetor
  5965                           
  5966                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  5967  15C5  0852               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  5968  15C6  00D5               	movwf	PROCULUS_Buzzer@vetor+1
  5969                           
  5970                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  5971  15C7  3002               	movlw	2
  5972  15C8  00CE               	movwf	PROCULUS_Control_Register_Write@size
  5973  15C9  3054               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  5974  15CA  120A  158A  2809   	ljmp	_PROCULUS_Control_Register_Write
  5975  15CD                     __end_of_PROCULUS_Buzzer:	
  5976  15CD                     __ptext17:	
  5977 ;; *************** function _utoa *****************
  5978 ;; Defined at:
  5979 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  buf             1    wreg     PTR unsigned char 
  5982 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  5983 ;;  val             2    7[BANK0 ] unsigned int 
  5984 ;;  base            2    9[BANK0 ] int 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  5987 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  5988 ;;  v               2   11[BANK0 ] unsigned int 
  5989 ;;  c               1   13[BANK0 ] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      PTR unsigned char 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 300/0
  5996 ;;		On exit  : B00/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5999 ;;      Params:         0       4       0       0       0
  6000 ;;      Locals:         0       4       0       0       0
  6001 ;;      Temps:          0       0       0       0       0
  6002 ;;      Totals:         0       8       0       0       0
  6003 ;;Total ram usage:        8 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    2
  6006 ;; This function calls:
  6007 ;;		___lwdiv
  6008 ;;		___lwmod
  6009 ;; This function is called by:
  6010 ;;		_itoa
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _utoa
  6016  15CD                     _utoa:	
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6020                           ;utoa@buf stored from wreg
  6021  15CD  00AE               	movwf	utoa@buf
  6022  15CE  0828               	movf	utoa@val+1,w
  6023  15CF  00AC               	movwf	utoa@v+1
  6024  15D0  0827               	movf	utoa@val,w
  6025  15D1  00AB               	movwf	utoa@v
  6026  15D2                     l5905:	
  6027  15D2  082A               	movf	utoa@base+1,w
  6028  15D3  00A1               	movwf	___lwdiv@divisor+1
  6029  15D4  0829               	movf	utoa@base,w
  6030  15D5  00A0               	movwf	___lwdiv@divisor
  6031  15D6  082C               	movf	utoa@v+1,w
  6032  15D7  00A3               	movwf	___lwdiv@dividend+1
  6033  15D8  082B               	movf	utoa@v,w
  6034  15D9  00A2               	movwf	___lwdiv@dividend
  6035  15DA  261A  160A  118A   	fcall	___lwdiv
  6036  15DD  0821               	movf	?___lwdiv+1,w
  6037  15DE  00AC               	movwf	utoa@v+1
  6038  15DF  0820               	movf	?___lwdiv,w
  6039  15E0  00AB               	movwf	utoa@v
  6040  15E1  0AAE               	incf	utoa@buf,f
  6041  15E2  042C               	iorwf	utoa@v+1,w
  6042  15E3  1D03               	btfss	3,2
  6043  15E4  2DD2               	goto	l5905
  6044  15E5  082E               	movf	utoa@buf,w
  6045  15E6  0084               	movwf	4
  6046  15E7  1383               	bcf	3,7	;select IRP bank0
  6047  15E8  0180               	clrf	0
  6048  15E9  03AE               	decf	utoa@buf,f
  6049  15EA                     l5915:	
  6050  15EA  082A               	movf	utoa@base+1,w
  6051  15EB  00A1               	movwf	___lwmod@divisor+1
  6052  15EC  0829               	movf	utoa@base,w
  6053  15ED  00A0               	movwf	___lwmod@divisor
  6054  15EE  0828               	movf	utoa@val+1,w
  6055  15EF  00A3               	movwf	___lwmod@dividend+1
  6056  15F0  0827               	movf	utoa@val,w
  6057  15F1  00A2               	movwf	___lwmod@dividend
  6058  15F2  2644  160A  118A   	fcall	___lwmod
  6059  15F5  0820               	movf	?___lwmod,w
  6060  15F6  00AD               	movwf	utoa@c
  6061  15F7  082A               	movf	utoa@base+1,w
  6062  15F8  00A1               	movwf	___lwdiv@divisor+1
  6063  15F9  0829               	movf	utoa@base,w
  6064  15FA  00A0               	movwf	___lwdiv@divisor
  6065  15FB  0828               	movf	utoa@val+1,w
  6066  15FC  00A3               	movwf	___lwdiv@dividend+1
  6067  15FD  0827               	movf	utoa@val,w
  6068  15FE  00A2               	movwf	___lwdiv@dividend
  6069  15FF  261A  160A  118A   	fcall	___lwdiv
  6070  1602  0821               	movf	?___lwdiv+1,w
  6071  1603  00A8               	movwf	utoa@val+1
  6072  1604  0820               	movf	?___lwdiv,w
  6073  1605  00A7               	movwf	utoa@val
  6074  1606  300A               	movlw	10
  6075  1607  022D               	subwf	utoa@c,w
  6076  1608  1C03               	skipc
  6077  1609  2E0C               	goto	l1434
  6078  160A  3007               	movlw	7
  6079  160B  07AD               	addwf	utoa@c,f
  6080  160C                     l1434:	
  6081  160C  3030               	movlw	48
  6082  160D  07AD               	addwf	utoa@c,f
  6083  160E  082E               	movf	utoa@buf,w
  6084  160F  0084               	movwf	4
  6085  1610  082D               	movf	utoa@c,w
  6086  1611  1383               	bcf	3,7	;select IRP bank0
  6087  1612  0080               	movwf	0
  6088  1613  03AE               	decf	utoa@buf,f
  6089  1614  0827               	movf	utoa@val,w
  6090  1615  0428               	iorwf	utoa@val+1,w
  6091  1616  1D03               	btfss	3,2
  6092  1617  2DEA               	goto	l5915
  6093                           
  6094                           ;	Return value of _utoa is never used
  6095  1618  0AAE               	incf	utoa@buf,f
  6096  1619  0008               	return
  6097  161A                     __end_of_utoa:	
  6098  161A                     __ptext33:	
  6099 ;; *************** function ___lwdiv *****************
  6100 ;; Defined at:
  6101 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  divisor         2    0[BANK0 ] unsigned int 
  6104 ;;  dividend        2    2[BANK0 ] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  quotient        2    5[BANK0 ] unsigned int 
  6107 ;;  counter         1    4[BANK0 ] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2    0[BANK0 ] unsigned int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 300/0
  6114 ;;		On exit  : 300/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6117 ;;      Params:         0       4       0       0       0
  6118 ;;      Locals:         0       3       0       0       0
  6119 ;;      Temps:          0       0       0       0       0
  6120 ;;      Totals:         0       7       0       0       0
  6121 ;;Total ram usage:        7 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    1
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_ADC_Media_10bits
  6128 ;;		_PROCULUS_Buzzer
  6129 ;;		_utoa
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function ___lwdiv
  6135  161A                     ___lwdiv:	
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6139  161A  01A5               	clrf	___lwdiv@quotient
  6140  161B  01A6               	clrf	___lwdiv@quotient+1
  6141  161C  0820               	movf	___lwdiv@divisor,w
  6142  161D  0421               	iorwf	___lwdiv@divisor+1,w
  6143  161E  1903               	btfsc	3,2
  6144  161F  2E3F               	goto	l5583
  6145  1620  01A4               	clrf	___lwdiv@counter
  6146  1621                     L18:	
  6147  1621  0AA4               	incf	___lwdiv@counter,f
  6148  1622  1BA1               	btfsc	___lwdiv@divisor+1,7
  6149  1623  2E28               	goto	l5571
  6150  1624  1003               	clrc
  6151  1625  0DA0               	rlf	___lwdiv@divisor,f
  6152  1626  0DA1               	rlf	___lwdiv@divisor+1,f
  6153  1627  2E21               	goto	L18
  6154  1628                     l5571:	
  6155  1628  1003               	clrc
  6156  1629  0DA5               	rlf	___lwdiv@quotient,f
  6157  162A  0DA6               	rlf	___lwdiv@quotient+1,f
  6158  162B  0821               	movf	___lwdiv@divisor+1,w
  6159  162C  0223               	subwf	___lwdiv@dividend+1,w
  6160  162D  1D03               	skipz
  6161  162E  2E31               	goto	u4455
  6162  162F  0820               	movf	___lwdiv@divisor,w
  6163  1630  0222               	subwf	___lwdiv@dividend,w
  6164  1631                     u4455:	
  6165  1631  1C03               	skipc
  6166  1632  2E3B               	goto	L19
  6167  1633  0820               	movf	___lwdiv@divisor,w
  6168  1634  02A2               	subwf	___lwdiv@dividend,f
  6169  1635  0821               	movf	___lwdiv@divisor+1,w
  6170  1636  1C03               	skipc
  6171  1637  03A3               	decf	___lwdiv@dividend+1,f
  6172  1638  02A3               	subwf	___lwdiv@dividend+1,f
  6173  1639  1425               	bsf	___lwdiv@quotient,0
  6174  163A  1003               	clrc
  6175  163B                     L19:	
  6176  163B  0CA1               	rrf	___lwdiv@divisor+1,f
  6177  163C  0CA0               	rrf	___lwdiv@divisor,f
  6178  163D  0BA4               	decfsz	___lwdiv@counter,f
  6179  163E  2E28               	goto	l5571
  6180  163F                     l5583:	
  6181  163F  0826               	movf	___lwdiv@quotient+1,w
  6182  1640  00A1               	movwf	?___lwdiv+1
  6183  1641  0825               	movf	___lwdiv@quotient,w
  6184  1642  00A0               	movwf	?___lwdiv
  6185  1643  0008               	return
  6186  1644                     __end_of___lwdiv:	
  6187  1644                     __ptext18:	
  6188 ;; *************** function ___lwmod *****************
  6189 ;; Defined at:
  6190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  divisor         2    0[BANK0 ] unsigned int 
  6193 ;;  dividend        2    2[BANK0 ] unsigned int 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  counter         1    4[BANK0 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  2    0[BANK0 ] unsigned int 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 300/0
  6202 ;;		On exit  : 300/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         0       4       0       0       0
  6206 ;;      Locals:         0       1       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         0       5       0       0       0
  6209 ;;Total ram usage:        5 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_utoa
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function ___lwmod
  6221  1644                     ___lwmod:	
  6222                           
  6223                           ;incstack = 0
  6224                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6225  1644  0820               	movf	___lwmod@divisor,w
  6226  1645  0421               	iorwf	___lwmod@divisor+1,w
  6227  1646  1903               	btfsc	3,2
  6228  1647  2E63               	goto	l5603
  6229  1648  01A4               	clrf	___lwmod@counter
  6230  1649                     L15:	
  6231  1649  0AA4               	incf	___lwmod@counter,f
  6232  164A  1BA1               	btfsc	___lwmod@divisor+1,7
  6233  164B  2E50               	goto	l5595
  6234  164C  1003               	clrc
  6235  164D  0DA0               	rlf	___lwmod@divisor,f
  6236  164E  0DA1               	rlf	___lwmod@divisor+1,f
  6237  164F  2E49               	goto	L15
  6238  1650                     l5595:	
  6239  1650  0821               	movf	___lwmod@divisor+1,w
  6240  1651  0223               	subwf	___lwmod@dividend+1,w
  6241  1652  1D03               	skipz
  6242  1653  2E56               	goto	u4495
  6243  1654  0820               	movf	___lwmod@divisor,w
  6244  1655  0222               	subwf	___lwmod@dividend,w
  6245  1656                     u4495:	
  6246  1656  1C03               	skipc
  6247  1657  2E5F               	goto	L16
  6248  1658  0820               	movf	___lwmod@divisor,w
  6249  1659  02A2               	subwf	___lwmod@dividend,f
  6250  165A  0821               	movf	___lwmod@divisor+1,w
  6251  165B  1C03               	skipc
  6252  165C  03A3               	decf	___lwmod@dividend+1,f
  6253  165D  02A3               	subwf	___lwmod@dividend+1,f
  6254  165E  1003               	clrc
  6255  165F                     L16:	
  6256  165F  0CA1               	rrf	___lwmod@divisor+1,f
  6257  1660  0CA0               	rrf	___lwmod@divisor,f
  6258  1661  0BA4               	decfsz	___lwmod@counter,f
  6259  1662  2E50               	goto	l5595
  6260  1663                     l5603:	
  6261  1663  0823               	movf	___lwmod@dividend+1,w
  6262  1664  00A1               	movwf	?___lwmod+1
  6263  1665  0822               	movf	___lwmod@dividend,w
  6264  1666  00A0               	movwf	?___lwmod
  6265  1667  0008               	return
  6266  1668                     __end_of___lwmod:	
  6267                           
  6268                           	psect	text34
  6269  0809                     __ptext34:	
  6270 ;; *************** function _PROCULUS_Control_Register_Write *****************
  6271 ;; Defined at:
  6272 ;;		line 13 in file "proculus.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  vetor           1    wreg     PTR unsigned char 
  6275 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6276 ;;  size            1   46[BANK0 ] unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  vetor           1   48[BANK0 ] PTR unsigned char 
  6279 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6280 ;;  i               1   49[BANK0 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 300/0
  6287 ;;		On exit  : 300/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6290 ;;      Params:         0       1       0       0       0
  6291 ;;      Locals:         0       2       0       0       0
  6292 ;;      Temps:          0       1       0       0       0
  6293 ;;      Totals:         0       4       0       0       0
  6294 ;;Total ram usage:        4 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    3
  6297 ;; This function calls:
  6298 ;;		_PROCULUS_Delay
  6299 ;;		_USART_put_int
  6300 ;;		_USART_putc
  6301 ;; This function is called by:
  6302 ;;		_PROCULUS_Buzzer
  6303 ;;		_PROCULUS_Show_Screen
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _PROCULUS_Control_Register_Write
  6309  0809                     _PROCULUS_Control_Register_Write:	
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  6313                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  6314  0809  00D0               	movwf	PROCULUS_Control_Register_Write@vetor
  6315                           
  6316                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  6317  080A  30A5               	movlw	165
  6318  080B  00CB               	movwf	USART_put_int@value
  6319  080C  305A               	movlw	90
  6320  080D  00CC               	movwf	USART_put_int@value+1
  6321  080E  2782  120A  158A   	fcall	_USART_put_int
  6322                           
  6323                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  6324  0811  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0812  084E               	movf	PROCULUS_Control_Register_Write@size,w
  6326  0813  3E01               	addlw	1
  6327  0814  23D3  120A  158A   	fcall	_USART_putc
  6328                           
  6329                           ;proculus.c: 16:      USART_putc(0x80);
  6330  0817  3080               	movlw	128
  6331  0818  23D3  120A  158A   	fcall	_USART_putc
  6332                           
  6333                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  6334  081B  1283               	bcf	3,5	;RP0=0, select bank0
  6335  081C  01D1               	clrf	PROCULUS_Control_Register_Write@i
  6336  081D                     l5761:	
  6337  081D  084E               	movf	PROCULUS_Control_Register_Write@size,w
  6338  081E  0251               	subwf	PROCULUS_Control_Register_Write@i,w
  6339  081F  1803               	btfsc	3,0
  6340  0820  282D               	goto	l5763
  6341                           
  6342                           ;proculus.c: 18:          USART_putc(vetor[i]);
  6343  0821  0851               	movf	PROCULUS_Control_Register_Write@i,w
  6344  0822  0750               	addwf	PROCULUS_Control_Register_Write@vetor,w
  6345  0823  00CF               	movwf	??_PROCULUS_Control_Register_Write
  6346  0824  0084               	movwf	4
  6347  0825  1383               	bcf	3,7	;select IRP bank0
  6348  0826  0800               	movf	0,w
  6349  0827  23D3  120A  158A   	fcall	_USART_putc
  6350  082A  1283               	bcf	3,5	;RP0=0, select bank0
  6351  082B  0AD1               	incf	PROCULUS_Control_Register_Write@i,f
  6352  082C  281D               	goto	l5761
  6353  082D                     l5763:	
  6354                           
  6355                           ;proculus.c: 19:      PROCULUS_Delay(1);
  6356  082D  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6357  082E  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6358  082F  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6359  0830  160A  118A  2BB0   	ljmp	l3629
  6360  0833                     __end_of_PROCULUS_Control_Register_Write:	
  6361  0833                     __ptext30:	
  6362 ;; *************** function _PROCULUS_VP_Write *****************
  6363 ;; Defined at:
  6364 ;;		line 40 in file "proculus.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  vp              2   46[BANK0 ] unsigned int 
  6367 ;;  vetor           1   48[BANK0 ] PTR unsigned char 
  6368 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6369 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6370 ;;  size            1   49[BANK0 ] unsigned char 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  i               1   51[BANK0 ] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 300/0
  6379 ;;		On exit  : 300/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6382 ;;      Params:         0       4       0       0       0
  6383 ;;      Locals:         0       1       0       0       0
  6384 ;;      Temps:          0       1       0       0       0
  6385 ;;      Totals:         0       6       0       0       0
  6386 ;;Total ram usage:        6 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    3
  6389 ;; This function calls:
  6390 ;;		_PROCULUS_Delay
  6391 ;;		_USART_put_int
  6392 ;;		_USART_putc
  6393 ;; This function is called by:
  6394 ;;		_PROCULUS_VP_Write_String
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _PROCULUS_VP_Write
  6400  0833                     _PROCULUS_VP_Write:	
  6401  0833                     l5765:	
  6402                           ;incstack = 0
  6403                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6404                           
  6405                           
  6406                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6407  0833  30A5               	movlw	165
  6408  0834  00CB               	movwf	USART_put_int@value
  6409  0835  305A               	movlw	90
  6410  0836  00CC               	movwf	USART_put_int@value+1
  6411  0837  2782  120A  158A   	fcall	_USART_put_int
  6412                           
  6413                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6414  083A  1283               	bcf	3,5	;RP0=0, select bank0
  6415  083B  0851               	movf	PROCULUS_VP_Write@size,w
  6416  083C  3E03               	addlw	3
  6417  083D  23D3  120A  158A   	fcall	_USART_putc
  6418                           
  6419                           ;proculus.c: 43:      USART_putc(0x82);
  6420  0840  3082               	movlw	130
  6421  0841  23D3  120A  158A   	fcall	_USART_putc
  6422                           
  6423                           ;proculus.c: 44:      USART_put_int(vp);
  6424  0844  1283               	bcf	3,5	;RP0=0, select bank0
  6425  0845  084F               	movf	PROCULUS_VP_Write@vp+1,w
  6426  0846  00CC               	movwf	USART_put_int@value+1
  6427  0847  084E               	movf	PROCULUS_VP_Write@vp,w
  6428  0848  00CB               	movwf	USART_put_int@value
  6429  0849  2782  120A  158A   	fcall	_USART_put_int
  6430                           
  6431                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6432  084C  1283               	bcf	3,5	;RP0=0, select bank0
  6433  084D  01D3               	clrf	PROCULUS_VP_Write@i
  6434  084E                     l5777:	
  6435  084E  0851               	movf	PROCULUS_VP_Write@size,w
  6436  084F  0253               	subwf	PROCULUS_VP_Write@i,w
  6437  0850  1803               	btfsc	3,0
  6438  0851  285E               	goto	l5779
  6439                           
  6440                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6441  0852  0853               	movf	PROCULUS_VP_Write@i,w
  6442  0853  0750               	addwf	PROCULUS_VP_Write@vetor,w
  6443  0854  00D2               	movwf	??_PROCULUS_VP_Write
  6444  0855  0084               	movwf	4
  6445  0856  1383               	bcf	3,7	;select IRP bank0
  6446  0857  0800               	movf	0,w
  6447  0858  23D3  120A  158A   	fcall	_USART_putc
  6448  085B  1283               	bcf	3,5	;RP0=0, select bank0
  6449  085C  0AD3               	incf	PROCULUS_VP_Write@i,f
  6450  085D  284E               	goto	l5777
  6451  085E                     l5779:	
  6452                           
  6453                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6454  085E  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6455  085F  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6456  0860  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6457  0861  160A  118A  2BB0   	ljmp	l3629
  6458  0864                     __end_of_PROCULUS_VP_Write:	
  6459  0864                     __ptext13:	
  6460 ;; *************** function _Decodify_Command *****************
  6461 ;; Defined at:
  6462 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6467 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6468 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6469 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6470 ;;  add             1   32[BANK1 ] unsigned char 
  6471 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6472 ;;  OutPut          4   35[BANK1 ] float 
  6473 ;;  tempint         2   33[BANK1 ] int 
  6474 ;;  dados           2   30[BANK1 ] int 
  6475 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 300/0
  6482 ;;		On exit  : 200/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6485 ;;      Params:         0       0       0       0       0
  6486 ;;      Locals:         0       0      45       0       0
  6487 ;;      Temps:          0       2       0       0       0
  6488 ;;      Totals:         0       2      45       0       0
  6489 ;;Total ram usage:       47 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    6
  6492 ;; This function calls:
  6493 ;;		_EEPROM_24C1025_Fill_All
  6494 ;;		_EEPROM_24C1025_Read_Buffer
  6495 ;;		_EEPROM_24C1025_Read_Byte
  6496 ;;		_EEPROM_24C1025_Read_Int
  6497 ;;		_EEPROM_24C1025_Read_Str
  6498 ;;		_EEPROM_24C1025_Write_Buffer
  6499 ;;		_EEPROM_24C1025_Write_Byte
  6500 ;;		_EEPROM_24C1025_Write_Int
  6501 ;;		_EEPROM_24C1025_Write_Str
  6502 ;;		_EEPROM_Read_Byte
  6503 ;;		_EEPROM_Read_Integer
  6504 ;;		_EEPROM_Read_String
  6505 ;;		_EEPROM_Write_Byte
  6506 ;;		_EEPROM_Write_Integer
  6507 ;;		_EEPROM_Write_String
  6508 ;;		_PROCULUS_Buzzer
  6509 ;;		_PROCULUS_Show_Screen
  6510 ;;		_PROCULUS_VP_Write_String
  6511 ;;		_Save_Log
  6512 ;;		_Send_Reply_OK
  6513 ;;		_Send_To_MB
  6514 ;;		_USART_put_buffer
  6515 ;;		_USART_put_int
  6516 ;;		_USART_put_string
  6517 ;;		_USART_putc
  6518 ;;		_USART_to_Protocol
  6519 ;;		___flmul
  6520 ;;		___fltol
  6521 ;;		_itoa
  6522 ;;		_strcat
  6523 ;;		_strcpy
  6524 ;;		_strlen
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _Decodify_Command
  6532  0864                     _Decodify_Command:	
  6533                           
  6534                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6538  0864  30DC               	movlw	(low (_usart_protocol| 0))& (0+255)
  6539  0865  120A  118A  279B  120A  158A  	fcall	_USART_to_Protocol
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6542  086A  1683               	bsf	3,5	;RP0=1, select bank1
  6543  086B  1303               	bcf	3,6	;RP1=0, select bank1
  6544  086C  0863               	movf	(_usart_protocol^(0+128)+7),w
  6545  086D  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6546                           
  6547                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6548  086E  0864               	movf	(_usart_protocol^(0+128)+8),w
  6549  086F  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6550                           
  6551                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6552  0870  0865               	movf	(_usart_protocol^(0+128)+9),w
  6553  0871  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6554                           
  6555                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6556  0872  0866               	movf	(_usart_protocol^(0+128)+10),w
  6557  0873  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6558                           
  6559                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6560  0874  2B41               	goto	l6593
  6561  0875                     l6391:	
  6562                           
  6563                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6564  0875  300B               	movlw	11
  6565  0876  2398               	fcall	_Send_To_MB
  6566                           
  6567                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.11");
  6568  0877  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6569  0878  1283               	bcf	3,5	;RP0=0, select bank0
  6570  0879  00A1               	movwf	USART_put_string@vetor
  6571  087A  3080               	movlw	128
  6572  087B  00A2               	movwf	USART_put_string@vetor+1
  6573  087C  160A  118A  2C15   	ljmp	l5723
  6574  087F                     l6395:	
  6575                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6576                           
  6577                           
  6578                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  6579  087F  1683               	bsf	3,5	;RP0=1, select bank1
  6580  0880  0862               	movf	(_usart_protocol^(0+128)+6),w
  6581  0881  1D03               	btfss	3,2
  6582  0882  288B               	goto	l6399
  6583                           
  6584                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  6585  0883  0854               	movf	(_Temperatura0+3)^(0+128),w
  6586  0884  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6587  0885  0853               	movf	(_Temperatura0+2)^(0+128),w
  6588  0886  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6589  0887  0852               	movf	(_Temperatura0+1)^(0+128),w
  6590  0888  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6591  0889  0851               	movf	_Temperatura0^(0+128),w
  6592  088A  2892               	goto	L11
  6593  088B                     l6399:	
  6594                           
  6595                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  6596  088B  0850               	movf	(_Umidade1+3)^(0+128),w
  6597  088C  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6598  088D  084F               	movf	(_Umidade1+2)^(0+128),w
  6599  088E  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6600  088F  084E               	movf	(_Umidade1+1)^(0+128),w
  6601  0890  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6602  0891  084D               	movf	_Umidade1^(0+128),w
  6603  0892                     L11:	
  6604  0892  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6605                           
  6606                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6607  0893  3041               	movlw	65
  6608  0894  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0895  00AB               	movwf	___flmul@b+3
  6610  0896  3020               	movlw	32
  6611  0897  00AA               	movwf	___flmul@b+2
  6612  0898  01A9               	clrf	___flmul@b+1
  6613  0899  01A8               	clrf	___flmul@b
  6614  089A  1683               	bsf	3,5	;RP0=1, select bank1
  6615  089B  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6616  089C  1283               	bcf	3,5	;RP0=0, select bank0
  6617  089D  00AF               	movwf	___flmul@a+3
  6618  089E  1683               	bsf	3,5	;RP0=1, select bank1
  6619  089F  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6620  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  6621  08A1  00AE               	movwf	___flmul@a+2
  6622  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  6623  08A3  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6624  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  6625  08A5  00AD               	movwf	___flmul@a+1
  6626  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  6627  08A7  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6628  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  6629  08A9  00AC               	movwf	___flmul@a
  6630  08AA  120A  118A  2156  120A  158A  	fcall	___flmul
  6631  08AF  082B               	movf	?___flmul+3,w
  6632  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  6633  08B1  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6634  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  6635  08B3  082A               	movf	?___flmul+2,w
  6636  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  6637  08B5  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6638  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  6639  08B7  0829               	movf	?___flmul+1,w
  6640  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  6641  08B9  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6642  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  6643  08BB  0828               	movf	?___flmul,w
  6644  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  6645  08BD  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6646                           
  6647                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6648  08BE  138B               	bcf	11,7	;volatile
  6649                           
  6650                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6651  08BF  3002               	movlw	2
  6652  08C0  2398               	fcall	_Send_To_MB
  6653                           
  6654                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6655  08C1  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6656  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  6657  08C3  00C4               	movwf	___fltol@f1+3
  6658  08C4  1683               	bsf	3,5	;RP0=1, select bank1
  6659  08C5  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6660  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  6661  08C7  00C3               	movwf	___fltol@f1+2
  6662  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  6663  08C9  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6664  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  6665  08CB  00C2               	movwf	___fltol@f1+1
  6666  08CC  1683               	bsf	3,5	;RP0=1, select bank1
  6667  08CD  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6668  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  6669  08CF  00C1               	movwf	___fltol@f1
  6670  08D0  120A  118A  2742  120A  158A  	fcall	___fltol
  6671  08D5  0842               	movf	?___fltol+1,w
  6672  08D6  00CC               	movwf	USART_put_int@value+1
  6673  08D7  0841               	movf	?___fltol,w
  6674  08D8  00CB               	movwf	USART_put_int@value
  6675  08D9  2782               	fcall	_USART_put_int
  6676                           
  6677                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6678  08DA  178B               	bsf	11,7	;volatile
  6679                           
  6680                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6681  08DB  0008               	return
  6682  08DC                     l6411:	
  6683                           
  6684                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6685  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  6686  08DD  0862               	movf	(_usart_protocol^(0+128)+6),w
  6687  08DE  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6688                           
  6689                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6690  08DF  0863               	movf	(_usart_protocol^(0+128)+7),w
  6691  08E0  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6692                           
  6693                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6694  08E1  0864               	movf	(_usart_protocol^(0+128)+8),w
  6695  08E2  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6696                           
  6697                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6698  08E3  0865               	movf	(_usart_protocol^(0+128)+9),w
  6699  08E4  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6700                           
  6701                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6702  08E5  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6703  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  6704  08E7  00D7               	movwf	Save_Log@add_datalog+3
  6705  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  6706  08E9  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6707  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  6708  08EB  00D6               	movwf	Save_Log@add_datalog+2
  6709  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  6710  08ED  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6711  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  6712  08EF  00D5               	movwf	Save_Log@add_datalog+1
  6713  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  6714  08F1  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6715  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  6716  08F3  00D4               	movwf	Save_Log@add_datalog
  6717  08F4  120A  118A  26E3   	fcall	_Save_Log
  6718                           
  6719                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6720  08F7  01F2               	clrf	_Delay_Led_Tmr0	;volatile
  6721  08F8  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
  6722                           
  6723                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6724  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  6725  08FA  01D7               	clrf	_milisegundo^(0+128)	;volatile
  6726  08FB  01D8               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6727                           
  6728                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6729  08FC  0008               	return
  6730  08FD                     l6419:	
  6731                           
  6732                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6733  08FD  3002               	movlw	2
  6734  08FE  2398  120A  158A   	fcall	_Send_To_MB
  6735                           
  6736                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  6737  0901  3002               	movlw	2
  6738  0902  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0903  00CB               	movwf	USART_put_int@value
  6740  0904  01CC               	clrf	USART_put_int@value+1
  6741  0905  2F82               	ljmp	l5555
  6742  0906                     l6423:	
  6743                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6744                           
  6745                           
  6746                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6747  0906  1683               	bsf	3,5	;RP0=1, select bank1
  6748  0907  0863               	movf	(_usart_protocol^(0+128)+7),w
  6749  0908  1283               	bcf	3,5	;RP0=0, select bank0
  6750  0909  00A0               	movwf	EEPROM_Write_Byte@dado
  6751  090A  1683               	bsf	3,5	;RP0=1, select bank1
  6752  090B  0862               	movf	(_usart_protocol^(0+128)+6),w
  6753  090C  160A  118A  2577  120A  158A  	fcall	_EEPROM_Write_Byte
  6754  0911                     L12:	
  6755                           
  6756                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6757  0911  3003               	movlw	3
  6758  0912  2398               	fcall	_Send_To_MB
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6761  0913  160A  118A  2C0F   	ljmp	l6159
  6762  0916                     l6427:	
  6763                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6764                           
  6765                           
  6766                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6767  0916  1683               	bsf	3,5	;RP0=1, select bank1
  6768  0917  0862               	movf	(_usart_protocol^(0+128)+6),w
  6769  0918  160A  118A  24A8  120A  158A  	fcall	_EEPROM_Read_Byte
  6770  091D  1683               	bsf	3,5	;RP0=1, select bank1
  6771  091E  1303               	bcf	3,6	;RP1=0, select bank1
  6772  091F  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6773                           
  6774                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6775  0920  3001               	movlw	1
  6776  0921  2398  120A  158A   	fcall	_Send_To_MB
  6777                           
  6778                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6779  0924  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6780  0925  2BD3               	ljmp	_USART_putc
  6781  0926                     l6433:	
  6782                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6783                           
  6784                           
  6785                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6786  0926  1683               	bsf	3,5	;RP0=1, select bank1
  6787  0927  0862               	movf	(_usart_protocol^(0+128)+6),w
  6788  0928  00C0               	movwf	Decodify_Command@add^(0+128)
  6789                           
  6790                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6791  0929  0863               	movf	(_usart_protocol^(0+128)+7),w
  6792  092A  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6793  092B  0864               	movf	(_usart_protocol^(0+128)+8),w
  6794  092C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6795                           
  6796                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6797  092D  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6798  092E  1283               	bcf	3,5	;RP0=0, select bank0
  6799  092F  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6800  0930  1683               	bsf	3,5	;RP0=1, select bank1
  6801  0931  083E               	movf	Decodify_Command@dados^(0+128),w
  6802  0932  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0933  00A5               	movwf	EEPROM_Write_Integer@dado
  6804  0934  1683               	bsf	3,5	;RP0=1, select bank1
  6805  0935  0840               	movf	Decodify_Command@add^(0+128),w
  6806  0936  160A  118A  253D  120A  158A  	fcall	_EEPROM_Write_Integer
  6807  093B  2911               	goto	L12
  6808  093C                     l6441:	
  6809                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6810                           
  6811                           
  6812                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6813  093C  1683               	bsf	3,5	;RP0=1, select bank1
  6814  093D  0862               	movf	(_usart_protocol^(0+128)+6),w
  6815  093E  160A  118A  248E  120A  158A  	fcall	_EEPROM_Read_Integer
  6816  0943  0824               	movf	?_EEPROM_Read_Integer+1,w
  6817  0944  1683               	bsf	3,5	;RP0=1, select bank1
  6818  0945  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6819  0946  1283               	bcf	3,5	;RP0=0, select bank0
  6820  0947  0823               	movf	?_EEPROM_Read_Integer,w
  6821  0948                     L13:	
  6822  0948  1683               	bsf	3,5	;RP0=1, select bank1
  6823  0949  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6824                           
  6825                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6826  094A  3002               	movlw	2
  6827  094B  2398  120A  158A   	fcall	_Send_To_MB
  6828                           
  6829                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6830  094E  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6831  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6832  0950  00CC               	movwf	USART_put_int@value+1
  6833  0951  1683               	bsf	3,5	;RP0=1, select bank1
  6834  0952  0841               	movf	Decodify_Command@tempint^(0+128),w
  6835  0953  1283               	bcf	3,5	;RP0=0, select bank0
  6836  0954  00CB               	movwf	USART_put_int@value
  6837  0955  2F82               	ljmp	l5555
  6838  0956                     l6447:	
  6839                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6840                           
  6841                           
  6842                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6843  0956  30E3               	movlw	(low ((_usart_protocol| 0+7)))& (0+255)
  6844  0957  00A5               	movwf	EEPROM_Write_String@dado
  6845  0958  1683               	bsf	3,5	;RP0=1, select bank1
  6846  0959  0862               	movf	(_usart_protocol^(0+128)+6),w
  6847  095A  160A  118A  2560  120A  158A  	fcall	_EEPROM_Write_String
  6848  095F  2911               	goto	L12
  6849  0960                     l6453:	
  6850                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6851                           
  6852                           
  6853                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6854  0960  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  6855  0961  00A3               	movwf	EEPROM_Read_String@dado
  6856  0962  1683               	bsf	3,5	;RP0=1, select bank1
  6857  0963  0862               	movf	(_usart_protocol^(0+128)+6),w
  6858  0964  160A  118A  247B  120A  158A  	fcall	_EEPROM_Read_String
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6861  0969  3010               	movlw	16
  6862  096A                     L14:	
  6863  096A  2398  120A  158A   	fcall	_Send_To_MB
  6864                           
  6865                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6866  096D  27EA               	fcall	PL44	;call to abstracted procedure
  6867  096E  160A  118A  2C15   	ljmp	l5723
  6868  0971                     l6459:	
  6869                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6870                           
  6871                           
  6872                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6873  0971  1683               	bsf	3,5	;RP0=1, select bank1
  6874  0972  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6875  0973  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0974  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6877  0975  1683               	bsf	3,5	;RP0=1, select bank1
  6878  0976  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6879  0977  1283               	bcf	3,5	;RP0=0, select bank0
  6880  0978  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6881  0979  1683               	bsf	3,5	;RP0=1, select bank1
  6882  097A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6883  097B  1283               	bcf	3,5	;RP0=0, select bank0
  6884  097C  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6885  097D  1683               	bsf	3,5	;RP0=1, select bank1
  6886  097E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6887  097F  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0980  00B6               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6889  0981  1683               	bsf	3,5	;RP0=1, select bank1
  6890  0982  0867               	movf	(_usart_protocol^(0+128)+11),w
  6891  0983  1283               	bcf	3,5	;RP0=0, select bank0
  6892  0984  00BA               	movwf	EEPROM_24C1025_Write_Byte@data
  6893  0985  1683               	bsf	3,5	;RP0=1, select bank1
  6894  0986  0862               	movf	(_usart_protocol^(0+128)+6),w
  6895  0987  2791  120A  158A   	fcall	_EEPROM_24C1025_Write_Byte
  6896  098A  2911               	goto	L12
  6897  098B                     l6465:	
  6898                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6899                           
  6900                           
  6901                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6902  098B  1683               	bsf	3,5	;RP0=1, select bank1
  6903  098C  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6904  098D  1283               	bcf	3,5	;RP0=0, select bank0
  6905  098E  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6906  098F  1683               	bsf	3,5	;RP0=1, select bank1
  6907  0990  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6908  0991  1283               	bcf	3,5	;RP0=0, select bank0
  6909  0992  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6910  0993  1683               	bsf	3,5	;RP0=1, select bank1
  6911  0994  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6912  0995  1283               	bcf	3,5	;RP0=0, select bank0
  6913  0996  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6914  0997  1683               	bsf	3,5	;RP0=1, select bank1
  6915  0998  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6916  0999  1283               	bcf	3,5	;RP0=0, select bank0
  6917  099A  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6918  099B  1683               	bsf	3,5	;RP0=1, select bank1
  6919  099C  0862               	movf	(_usart_protocol^(0+128)+6),w
  6920  099D  160A  118A  237F  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  6921  09A2  1683               	bsf	3,5	;RP0=1, select bank1
  6922  09A3  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6923                           
  6924                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6925  09A4  3001               	movlw	1
  6926  09A5  2398  120A  158A   	fcall	_Send_To_MB
  6927                           
  6928                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6929  09A8  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6930  09A9  2BD3               	ljmp	_USART_putc
  6931  09AA                     l6471:	
  6932                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6933                           
  6934                           
  6935                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6936  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  6937  09AB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6938  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  6939  09AD  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6940  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  6941  09AF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6942  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  6943  09B1  00CD               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6944  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  6945  09B3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6946  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6947  09B5  00CC               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6948  09B6  1683               	bsf	3,5	;RP0=1, select bank1
  6949  09B7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6950  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  6951  09B9  00CB               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6952  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  6953  09BB  0867               	movf	(_usart_protocol^(0+128)+11),w
  6954  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  6955  09BD  00D0               	movwf	EEPROM_24C1025_Write_Int@data+1
  6956  09BE  1683               	bsf	3,5	;RP0=1, select bank1
  6957  09BF  0868               	movf	(_usart_protocol^(0+128)+12),w
  6958  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  6959  09C1  00CF               	movwf	EEPROM_24C1025_Write_Int@data
  6960  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  6961  09C3  0862               	movf	(_usart_protocol^(0+128)+6),w
  6962  09C4  120A  118A  272C  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  6963  09C9  2911               	goto	L12
  6964  09CA                     l6477:	
  6965                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6966                           
  6967                           
  6968                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6969  09CA  1683               	bsf	3,5	;RP0=1, select bank1
  6970  09CB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6971  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6972  09CD  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6973  09CE  1683               	bsf	3,5	;RP0=1, select bank1
  6974  09CF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6975  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6976  09D1  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6977  09D2  1683               	bsf	3,5	;RP0=1, select bank1
  6978  09D3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6979  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  6980  09D5  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6981  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  6982  09D7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6983  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  6984  09D9  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6985  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  6986  09DB  0862               	movf	(_usart_protocol^(0+128)+6),w
  6987  09DC  160A  118A  2396  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  6988  09E1  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6989  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  6990  09E3  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6991  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  6992  09E5  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6993  09E6  2948               	goto	L13
  6994  09E7                     l6483:	
  6995                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6996                           
  6997                           
  6998                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6999  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  7000  09E8  0867               	movf	(_usart_protocol^(0+128)+11),w
  7001  09E9  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  7002                           
  7003                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7004  09EA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7005  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  7006  09EC  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7007  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  7008  09EE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7009  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  7010  09F0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7011  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  7012  09F2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7013  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  7014  09F4  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7015  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  7016  09F6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7017  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  7018  09F8  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7019  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  7020  09FA  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7021  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  7022  09FC  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7023  09FD  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  7024  09FE  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  7025  09FF  3001               	movlw	1
  7026  0A00  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7027  0A01  1683               	bsf	3,5	;RP0=1, select bank1
  7028  0A02  0862               	movf	(_usart_protocol^(0+128)+6),w
  7029  0A03  2556  120A  158A   	fcall	_EEPROM_24C1025_Read_Buffer
  7030                           
  7031                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7032  0A06  1683               	bsf	3,5	;RP0=1, select bank1
  7033  0A07  1303               	bcf	3,6	;RP1=0, select bank1
  7034  0A08  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7035  0A09  2398               	fcall	_Send_To_MB
  7036                           
  7037                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7038  0A0A  0848               	movf	Decodify_Command@sizedata^(0+128),w
  7039  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  7040  0A0C  00A1               	movwf	USART_put_buffer@size
  7041  0A0D  30BA               	movlw	(low (_buffer| (0+256)))& (0+255)
  7042  0A0E  01A2               	clrf	USART_put_buffer@size+1
  7043  0A0F  160A  118A  2BCA   	ljmp	_USART_put_buffer
  7044  0A12                     l6491:	
  7045                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7046                           
  7047                           
  7048                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7049  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  7050  0A13  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7051  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7052  0A15  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7053  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7054  0A17  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7055  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7056  0A19  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7057  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7058  0A1B  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7059  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7060  0A1D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7061  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7062  0A1F  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7063  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7064  0A21  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7065  0A22  1683               	bsf	3,5	;RP0=1, select bank1
  7066  0A23  0867               	movf	(_usart_protocol^(0+128)+11),w
  7067  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  7068  0A25  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7069  0A26  30E8               	movlw	(low ((_usart_protocol| 0+12)))& (0+255)
  7070  0A27  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7071  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  7072  0A29  0862               	movf	(_usart_protocol^(0+128)+6),w
  7073  0A2A  2635  120A  158A   	fcall	_EEPROM_24C1025_Write_Buffer
  7074  0A2D  2911               	goto	L12
  7075  0A2E                     l6497:	
  7076                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7077                           
  7078                           
  7079                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7080  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  7081  0A2F  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7082  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  7083  0A31  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7084  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  7085  0A33  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7086  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0A35  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7088  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  7089  0A37  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7090  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0A39  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7092  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7093  0A3B  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7094  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7095  0A3D  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7096  0A3E  30E7               	movlw	(low ((_usart_protocol| 0+11)))& (0+255)
  7097  0A3F  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  7098  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  7099  0A41  0862               	movf	(_usart_protocol^(0+128)+6),w
  7100  0A42  23E1  120A  158A   	fcall	_EEPROM_24C1025_Write_Str
  7101  0A45  2911               	goto	L12
  7102  0A46                     l6503:	
  7103                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7104                           
  7105                           
  7106                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7107  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7108  0A47  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7109  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7110  0A49  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7111  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  7112  0A4B  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7113  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0A4D  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7115  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  7116  0A4F  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7117  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  7118  0A51  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7119  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  7120  0A53  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7121  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  7122  0A55  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7123  0A56  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7124  0A57  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  7125  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  7126  0A59  0862               	movf	(_usart_protocol^(0+128)+6),w
  7127  0A5A  2475               	fcall	_EEPROM_24C1025_Read_Str
  7128                           
  7129                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7130  0A5B  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7131  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  7132  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  7133  0A5E  00A0               	movwf	strlen@s
  7134  0A5F  3001               	movlw	1
  7135  0A60  00A1               	movwf	strlen@s+1
  7136  0A61  160A  118A  23F6  120A  158A  	fcall	_strlen
  7137  0A66  0820               	movf	?_strlen,w
  7138  0A67  296A               	goto	L14
  7139  0A68                     l6509:	
  7140                           
  7141                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7142  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  7143  0A69  0863               	movf	(_usart_protocol^(0+128)+7),w
  7144  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  7145  0A6B  00D4               	movwf	EEPROM_24C1025_Fill_All@value
  7146  0A6C  01D5               	clrf	EEPROM_24C1025_Fill_All@value+1
  7147  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  7148  0A6E  0862               	movf	(_usart_protocol^(0+128)+6),w
  7149  0A6F  120A  118A  26B2  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7150  0A74  2911               	goto	L12
  7151  0A75                     l6515:	
  7152                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7153                           
  7154                           
  7155                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7156  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  7157  0A76  085A               	movf	_hora^(0+128),w	;volatile
  7158  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7159  0A78  00AF               	movwf	itoa@val
  7160  0A79  300A               	movlw	10
  7161  0A7A  01B0               	clrf	itoa@val+1
  7162  0A7B  00B1               	movwf	itoa@base
  7163  0A7C  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7164  0A7D  01B2               	clrf	itoa@base+1
  7165  0A7E  2768  120A  158A   	fcall	_itoa
  7166                           
  7167                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7168  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  7169  0A82  0859               	movf	_minuto^(0+128),w	;volatile
  7170  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  7171  0A84  00AF               	movwf	itoa@val
  7172  0A85  300A               	movlw	10
  7173  0A86  01B0               	clrf	itoa@val+1
  7174  0A87  00B1               	movwf	itoa@base
  7175  0A88  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7176  0A89  01B2               	clrf	itoa@base+1
  7177  0A8A  2768  120A  158A   	fcall	_itoa
  7178                           
  7179                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7180  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  7181  0A8E  085B               	movf	_segundo^(0+128),w	;volatile
  7182  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  7183  0A90  00AF               	movwf	itoa@val
  7184  0A91  300A               	movlw	10
  7185  0A92  01B0               	clrf	itoa@val+1
  7186  0A93  00B1               	movwf	itoa@base
  7187  0A94  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7188  0A95  01B2               	clrf	itoa@base+1
  7189  0A96  2768               	fcall	_itoa
  7190                           
  7191                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7192  0A97  3039               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7193  0A98  00A0               	movwf	strcpy@from
  7194  0A99  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7195  0A9A  160A  118A  236A  120A  158A  	fcall	_strcpy
  7196                           
  7197                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7198  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  7199  0AA0  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7200  0AA1  1D03               	btfss	3,2
  7201  0AA2  2AAB               	goto	l6523
  7202                           
  7203                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7204  0AA3  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7205  0AA6  23B3  120A  158A   	fcall	_strcat
  7206                           
  7207                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7208  0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  7209  0AAA  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7210  0AAB                     l6523:	
  7211                           
  7212                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7213  0AAB  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7214  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  7215  0AAD  00A0               	movwf	strcat@from
  7216  0AAE  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7217  0AAF  01A1               	clrf	strcat@from+1
  7218  0AB0  23B3  120A  158A   	fcall	_strcat
  7219                           
  7220                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7221  0AB3  27DF  120A  158A   	fcall	PL40	;call to abstracted procedure
  7222  0AB6  23B3  120A  158A   	fcall	_strcat
  7223                           
  7224                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7225  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  7226  0ABA  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7227  0ABB  1D03               	btfss	3,2
  7228  0ABC  2AC5               	goto	l6533
  7229                           
  7230                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7231  0ABD  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7232  0AC0  23B3  120A  158A   	fcall	_strcat
  7233                           
  7234                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7235  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  7236  0AC4  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7237  0AC5                     l6533:	
  7238                           
  7239                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7240  0AC5  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7241  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  7242  0AC7  00A0               	movwf	strcat@from
  7243  0AC8  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7244  0AC9  01A1               	clrf	strcat@from+1
  7245  0ACA  23B3  120A  158A   	fcall	_strcat
  7246                           
  7247                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7248  0ACD  27DF  120A  158A   	fcall	PL40	;call to abstracted procedure
  7249  0AD0  23B3  120A  158A   	fcall	_strcat
  7250                           
  7251                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7252  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  7253  0AD4  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7254  0AD5  1D03               	btfss	3,2
  7255  0AD6  2ADF               	goto	l6543
  7256                           
  7257                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7258  0AD7  27C5  120A  158A   	fcall	PL28	;call to abstracted procedure
  7259  0ADA  23B3  120A  158A   	fcall	_strcat
  7260                           
  7261                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7262  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  7263  0ADE  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7264  0ADF                     l6543:	
  7265                           
  7266                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7267  0ADF  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7268  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  7269  0AE1  00A0               	movwf	strcat@from
  7270  0AE2  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7271  0AE3  01A1               	clrf	strcat@from+1
  7272  0AE4  23B3               	fcall	_strcat
  7273                           
  7274                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7275  0AE5  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  7276  0AE6  00A0               	movwf	strlen@s
  7277  0AE7  3001               	movlw	1
  7278  0AE8  00A1               	movwf	strlen@s+1
  7279  0AE9  160A  118A  23F6  120A  158A  	fcall	_strlen
  7280  0AEE  0820               	movf	?_strlen,w
  7281  0AEF  2398  120A  158A   	fcall	_Send_To_MB
  7282                           
  7283                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7284  0AF2  27EA               	fcall	PL44	;call to abstracted procedure
  7285  0AF3  160A  118A  2415  120A  158A  	fcall	_USART_put_string
  7286                           
  7287                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7288  0AF8  3000               	movlw	0
  7289  0AF9  2BD3               	ljmp	_USART_putc
  7290  0AFA                     l6551:	
  7291                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7292                           
  7293                           
  7294                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7295  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  7296  0AFB  0862               	movf	(_usart_protocol^(0+128)+6),w
  7297  0AFC  00DA               	movwf	_hora^(0+128)	;volatile
  7298                           
  7299                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7300  0AFD  0863               	movf	(_usart_protocol^(0+128)+7),w
  7301  0AFE  00D9               	movwf	_minuto^(0+128)	;volatile
  7302                           
  7303                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7304  0AFF  0864               	movf	(_usart_protocol^(0+128)+8),w
  7305  0B00  00DB               	movwf	_segundo^(0+128)	;volatile
  7306  0B01  2911               	goto	L12
  7307  0B02                     l6557:	
  7308                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7309                           
  7310                           
  7311                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7312  0B02  1683               	bsf	3,5	;RP0=1, select bank1
  7313  0B03  0862               	movf	(_usart_protocol^(0+128)+6),w
  7314  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  7315  0B05  00D2               	movwf	PROCULUS_Show_Screen@screen
  7316  0B06  01D3               	clrf	PROCULUS_Show_Screen@screen+1
  7317  0B07  27F6  120A  158A   	fcall	_PROCULUS_Show_Screen
  7318  0B0A  2911               	goto	L12
  7319  0B0B                     l6563:	
  7320                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7321                           
  7322                           
  7323                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7324  0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  7325  0B0C  0862               	movf	(_usart_protocol^(0+128)+6),w
  7326  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  7327  0B0E  00D3               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7328  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  7329  0B10  0863               	movf	(_usart_protocol^(0+128)+7),w
  7330  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7331  0B12  00D2               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7332  0B13  160A  118A  25B7  120A  158A  	fcall	_PROCULUS_Buzzer
  7333  0B18  2911               	goto	L12
  7334  0B19                     l6569:	
  7335                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7336                           
  7337                           
  7338                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7339  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  7340  0B1A  0862               	movf	(_usart_protocol^(0+128)+6),w
  7341  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7342  0B1C  00D5               	movwf	PROCULUS_VP_Write_String@vp+1
  7343  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  7344  0B1E  0863               	movf	(_usart_protocol^(0+128)+7),w
  7345  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  7346  0B20  00D4               	movwf	PROCULUS_VP_Write_String@vp
  7347  0B21  30E4               	movlw	(low ((_usart_protocol| 0+8)))& (0+255)
  7348  0B22  00D6               	movwf	PROCULUS_VP_Write_String@text
  7349  0B23  160A  118A  23E6  120A  158A  	fcall	_PROCULUS_VP_Write_String
  7350  0B28  2911               	goto	L12
  7351  0B29                     l6575:	
  7352                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7353                           
  7354                           
  7355                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7356  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  7357  0B2A  0862               	movf	(_usart_protocol^(0+128)+6),w
  7358  0B2B  1D03               	btfss	3,2
  7359  0B2C  2B36               	goto	l6581
  7360                           
  7361                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7362  0B2D  0863               	movf	(_usart_protocol^(0+128)+7),w
  7363  0B2E  1D03               	btfss	3,2
  7364  0B2F  2B33               	goto	l417
  7365                           
  7366                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7367  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  7368  0B31  1007               	bcf	7,0	;volatile
  7369  0B32  2911               	goto	L12
  7370  0B33                     l417:	
  7371                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7372                           
  7373                           
  7374                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7375  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0B34  1407               	bsf	7,0	;volatile
  7377  0B35  2911               	goto	L12
  7378  0B36                     l6581:	
  7379  0B36  0B62               	decfsz	(_usart_protocol^(0+128)+6),w
  7380  0B37  2911               	goto	L12
  7381                           
  7382                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7383  0B38  0863               	movf	(_usart_protocol^(0+128)+7),w
  7384  0B39  1D03               	btfss	3,2
  7385  0B3A  2B3E               	goto	l421
  7386                           
  7387                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7388  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7389  0B3C  1087               	bcf	7,1	;volatile
  7390  0B3D  2911               	goto	L12
  7391  0B3E                     l421:	
  7392                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7393                           
  7394                           
  7395                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7396  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7397  0B3F  1487               	bsf	7,1	;volatile
  7398  0B40  2911               	goto	L12
  7399  0B41                     l6593:	
  7400                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7401                           
  7402  0B41  0860               	movf	(_usart_protocol^(0+128)+4),w
  7403  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0B43  00DB               	movwf	??_Decodify_Command
  7405  0B44  01DC               	clrf	??_Decodify_Command+1
  7406                           
  7407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7408                           ; Switch size 1, requested type "space"
  7409                           ; Number of cases is 1, Range of values is 0 to 0
  7410                           ; switch strategies available:
  7411                           ; Name         Instructions Cycles
  7412                           ; simple_byte            4     3 (average)
  7413                           ; direct_byte           11     8 (fixed)
  7414                           ; jumptable            260     6 (fixed)
  7415                           ;	Chosen strategy is simple_byte
  7416  0B45  085C               	movf	??_Decodify_Command+1,w
  7417  0B46  3A00               	xorlw	0	; case 0
  7418  0B47  1903               	skipnz
  7419  0B48  2B4A               	goto	l6737
  7420  0B49  2B97               	goto	l423
  7421  0B4A                     l6737:	
  7422                           
  7423                           ; Switch size 1, requested type "space"
  7424                           ; Number of cases is 25, Range of values is 2 to 43
  7425                           ; switch strategies available:
  7426                           ; Name         Instructions Cycles
  7427                           ; simple_byte           76    39 (average)
  7428                           ; direct_byte          137    11 (fixed)
  7429                           ; jumptable            263     9 (fixed)
  7430                           ;	Chosen strategy is simple_byte
  7431  0B4A  085B               	movf	??_Decodify_Command,w
  7432  0B4B  3A02               	xorlw	2	; case 2
  7433  0B4C  1903               	skipnz
  7434  0B4D  28DC               	goto	l6411
  7435  0B4E  3A01               	xorlw	1	; case 3
  7436  0B4F  1903               	skipnz
  7437  0B50  28FD               	goto	l6419
  7438  0B51  3A0B               	xorlw	11	; case 8
  7439  0B52  1903               	skipnz
  7440  0B53  2906               	goto	l6423
  7441  0B54  3A01               	xorlw	1	; case 9
  7442  0B55  1903               	skipnz
  7443  0B56  2916               	goto	l6427
  7444  0B57  3A03               	xorlw	3	; case 10
  7445  0B58  1903               	skipnz
  7446  0B59  2926               	goto	l6433
  7447  0B5A  3A01               	xorlw	1	; case 11
  7448  0B5B  1903               	skipnz
  7449  0B5C  293C               	goto	l6441
  7450  0B5D  3A07               	xorlw	7	; case 12
  7451  0B5E  1903               	skipnz
  7452  0B5F  2956               	goto	l6447
  7453  0B60  3A01               	xorlw	1	; case 13
  7454  0B61  1903               	skipnz
  7455  0B62  2960               	goto	l6453
  7456  0B63  3A1C               	xorlw	28	; case 17
  7457  0B64  1903               	skipnz
  7458  0B65  2971               	goto	l6459
  7459  0B66  3A03               	xorlw	3	; case 18
  7460  0B67  1903               	skipnz
  7461  0B68  298B               	goto	l6465
  7462  0B69  3A01               	xorlw	1	; case 19
  7463  0B6A  1903               	skipnz
  7464  0B6B  29AA               	goto	l6471
  7465  0B6C  3A07               	xorlw	7	; case 20
  7466  0B6D  1903               	skipnz
  7467  0B6E  29CA               	goto	l6477
  7468  0B6F  3A01               	xorlw	1	; case 21
  7469  0B70  1903               	skipnz
  7470  0B71  2A2E               	goto	l6497
  7471  0B72  3A03               	xorlw	3	; case 22
  7472  0B73  1903               	skipnz
  7473  0B74  2A46               	goto	l6503
  7474  0B75  3A01               	xorlw	1	; case 23
  7475  0B76  1903               	skipnz
  7476  0B77  2A12               	goto	l6491
  7477  0B78  3A0F               	xorlw	15	; case 24
  7478  0B79  1903               	skipnz
  7479  0B7A  29E7               	goto	l6483
  7480  0B7B  3A01               	xorlw	1	; case 25
  7481  0B7C  1903               	skipnz
  7482  0B7D  2A68               	goto	l6509
  7483  0B7E  3A03               	xorlw	3	; case 26
  7484  0B7F  1903               	skipnz
  7485  0B80  287F               	goto	l6395
  7486  0B81  3A04               	xorlw	4	; case 30
  7487  0B82  1903               	skipnz
  7488  0B83  2AFA               	goto	l6551
  7489  0B84  3A01               	xorlw	1	; case 31
  7490  0B85  1903               	skipnz
  7491  0B86  2A75               	goto	l6515
  7492  0B87  3A3F               	xorlw	63	; case 32
  7493  0B88  1903               	skipnz
  7494  0B89  2B02               	goto	l6557
  7495  0B8A  3A01               	xorlw	1	; case 33
  7496  0B8B  1903               	skipnz
  7497  0B8C  2B0B               	goto	l6563
  7498  0B8D  3A05               	xorlw	5	; case 36
  7499  0B8E  1903               	skipnz
  7500  0B8F  2B19               	goto	l6569
  7501  0B90  3A02               	xorlw	2	; case 38
  7502  0B91  1903               	skipnz
  7503  0B92  2B29               	goto	l6575
  7504  0B93  3A0D               	xorlw	13	; case 43
  7505  0B94  1903               	skipnz
  7506  0B95  2875               	goto	l6391
  7507  0B96  2B97               	goto	l423
  7508  0B97                     l423:	
  7509  0B97  0008               	return
  7510  0B98                     __end_of_Decodify_Command:	
  7511  0B98                     __ptext21:	
  7512 ;; *************** function _Send_To_MB *****************
  7513 ;; Defined at:
  7514 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  size            1    wreg     unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  size            1    1[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, pclath, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 300/100
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7528 ;;      Params:         0       0       0       0       0
  7529 ;;      Locals:         0       1       0       0       0
  7530 ;;      Temps:          0       0       0       0       0
  7531 ;;      Totals:         0       1       0       0       0
  7532 ;;Total ram usage:        1 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    2
  7535 ;; This function calls:
  7536 ;;		_USART_putc
  7537 ;; This function is called by:
  7538 ;;		_Decodify_Command
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _Send_To_MB
  7544  0B98                     _Send_To_MB:	
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7548                           ;Send_To_MB@size stored from wreg
  7549  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  7550  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  7551  0B9A  00A1               	movwf	Send_To_MB@size
  7552                           
  7553                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  7554  0B9B  30AA               	movlw	170
  7555  0B9C  23D3  120A  158A   	fcall	_USART_putc
  7556                           
  7557                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  7558  0B9F  30BB               	movlw	187
  7559  0BA0  23D3  120A  158A   	fcall	_USART_putc
  7560                           
  7561                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  7562  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7563  0BA4  0869               	movf	_Board_Number,w
  7564  0BA5  23D3  120A  158A   	fcall	_USART_putc
  7565                           
  7566                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  7567  0BA8  3000               	movlw	0
  7568  0BA9  23D3  120A  158A   	fcall	_USART_putc
  7569                           
  7570                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  7571  0BAC  0860               	movf	(_usart_protocol^(0+128)+4),w
  7572  0BAD  23D3  120A  158A   	fcall	_USART_putc
  7573                           
  7574                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  7575  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  7576  0BB1  0821               	movf	Send_To_MB@size,w
  7577  0BB2  2BD3               	ljmp	_USART_putc
  7578  0BB3                     __end_of_Send_To_MB:	
  7579  0BB3                     __ptext15:	
  7580 ;; *************** function _strcat *****************
  7581 ;; Defined at:
  7582 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  to              1    wreg     PTR unsigned char 
  7585 ;;		 -> texto(16), 
  7586 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7587 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7588 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7591 ;;		 -> texto(16), 
  7592 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7593 ;;		 -> texto(16), 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      PTR unsigned char 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7598 ;; Tracked objects:
  7599 ;;		On entry : B00/800
  7600 ;;		On exit  : B00/800
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       2       0       0       0
  7604 ;;      Locals:         0       2       0       0       0
  7605 ;;      Temps:          0       1       0       0       0
  7606 ;;      Totals:         0       5       0       0       0
  7607 ;;Total ram usage:        5 bytes
  7608 ;; Hardware stack levels used:    2
  7609 ;; Hardware stack levels required when called:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_Decodify_Command
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _strcat
  7619  0BB3                     _strcat:	
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7623                           ;strcat@to stored from wreg
  7624  0BB3  00A4               	movwf	strcat@to
  7625  0BB4  00A3               	movwf	strcat@cp
  7626  0BB5                     l4635:	
  7627  0BB5  0823               	movf	strcat@cp,w
  7628  0BB6  0084               	movwf	4
  7629  0BB7  0800               	movf	0,w
  7630  0BB8  1903               	btfsc	3,2
  7631  0BB9  2BC0               	goto	l4639
  7632  0BBA  0AA3               	incf	strcat@cp,f
  7633  0BBB  2BB5               	goto	l4635
  7634  0BBC                     l4637:	
  7635  0BBC  0AA3               	incf	strcat@cp,f
  7636  0BBD  0AA0               	incf	strcat@from,f
  7637  0BBE  1903               	skipnz
  7638  0BBF  0AA1               	incf	strcat@from+1,f
  7639  0BC0                     l4639:	
  7640  0BC0  0821               	movf	strcat@from+1,w
  7641  0BC1  00FF               	movwf	127
  7642  0BC2  0820               	movf	strcat@from,w
  7643  0BC3  0084               	movwf	4
  7644  0BC4  160A  118A  2000  120A  158A  	fcall	stringtab
  7645  0BC9  00A2               	movwf	??_strcat
  7646  0BCA  0823               	movf	strcat@cp,w
  7647  0BCB  0084               	movwf	4
  7648  0BCC  0822               	movf	??_strcat,w
  7649  0BCD  1783               	bsf	3,7	;select IRP bank2
  7650  0BCE  0080               	movwf	0
  7651  0BCF  0800               	movf	0,w
  7652  0BD0  1903               	btfsc	3,2
  7653  0BD1  0008               	return
  7654  0BD2  2BBC               	goto	l4637
  7655  0BD3                     __end_of_strcat:	
  7656  0BD3                     __ptext36:	
  7657 ;; *************** function _USART_putc *****************
  7658 ;; Defined at:
  7659 ;;		line 89 in file "usart.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  value           1    wreg     unsigned char 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  value           1    0[BANK0 ] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg
  7668 ;; Tracked objects:
  7669 ;;		On entry : 200/100
  7670 ;;		On exit  : 300/100
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7673 ;;      Params:         0       0       0       0       0
  7674 ;;      Locals:         0       1       0       0       0
  7675 ;;      Temps:          0       0       0       0       0
  7676 ;;      Totals:         0       1       0       0       0
  7677 ;;Total ram usage:        1 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_Decodify_Command
  7684 ;;		_Send_To_MB
  7685 ;;		_PROCULUS_Control_Register_Write
  7686 ;;		_PROCULUS_VP_Write
  7687 ;;		_USART_put_buffer
  7688 ;;		_USART_put_int
  7689 ;;		_USART_put_string
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _USART_putc
  7695  0BD3                     _USART_putc:	
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _USART_putc: [wreg]
  7699                           ;USART_putc@value stored from wreg
  7700  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  7701  0BD4  00A0               	movwf	USART_putc@value
  7702                           
  7703                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  7704  0BD5  3014               	movlw	20
  7705  0BD6  00F0               	movwf	_Delay_Led_Usart	;volatile
  7706  0BD7  01F1               	clrf	_Delay_Led_Usart+1	;volatile
  7707  0BD8                     l863:	
  7708                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  7709                           
  7710  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  7711  0BD9  1C98               	btfss	24,1	;volatile
  7712  0BDA  2BD8               	goto	l863
  7713                           
  7714                           ;usart.c: 93:     TXREG=value;
  7715  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  7716  0BDC  0820               	movf	USART_putc@value,w
  7717  0BDD  0099               	movwf	25	;volatile
  7718                           
  7719                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  7720  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  7721  0BDF  1698               	bsf	24,5	;volatile
  7722  0BE0  0008               	return
  7723  0BE1                     __end_of_USART_putc:	
  7724  0BE1                     __ptext44:	
  7725 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  7726 ;; Defined at:
  7727 ;;		line 146 in file "EEPROM_24C1025.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  chip_add        1    wreg     unsigned char 
  7730 ;;  mem_add         4   10[BANK0 ] unsigned long 
  7731 ;;  data            1   14[BANK0 ] PTR unsigned char 
  7732 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  chip_add        1   15[BANK0 ] unsigned char 
  7735 ;;  ctrl            1   17[BANK0 ] unsigned char 
  7736 ;;  range           1   16[BANK0 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 300/100
  7743 ;;		On exit  : 300/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7746 ;;      Params:         0       5       0       0       0
  7747 ;;      Locals:         0       3       0       0       0
  7748 ;;      Temps:          0       0       0       0       0
  7749 ;;      Totals:         0       8       0       0       0
  7750 ;;Total ram usage:        8 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    3
  7753 ;; This function calls:
  7754 ;;		_I2C_Master_Start
  7755 ;;		_I2C_Master_Stop
  7756 ;;		_I2C_Master_Write
  7757 ;;		_my_delay_ms_WDT
  7758 ;; This function is called by:
  7759 ;;		_Decodify_Command
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function _EEPROM_24C1025_Write_Str
  7765  0BE1                     _EEPROM_24C1025_Write_Str:	
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  7769                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  7770  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  7771  0BE2  00AF               	movwf	EEPROM_24C1025_Write_Str@chip_add
  7772                           
  7773                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
  7774  0BE3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7775  0BE4  1D03               	btfss	3,2
  7776  0BE5  0008               	return
  7777  0BE6  3002               	movlw	2
  7778  0BE7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7779  0BE8  1D03               	skipz
  7780  0BE9  2BF0               	goto	u4913
  7781  0BEA  3000               	movlw	0
  7782  0BEB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7783  0BEC  1D03               	skipz
  7784  0BED  2BF0               	goto	u4913
  7785  0BEE  3000               	movlw	0
  7786  0BEF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7787  0BF0                     u4913:	
  7788  0BF0  1803               	btfsc	3,0
  7789  0BF1  0008               	return
  7790  0BF2                     L20:	
  7791                           
  7792                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  7793  0BF2  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7794  0BF3  1D03               	btfss	3,2
  7795  0BF4  2C01               	goto	l5941
  7796  0BF5  3001               	movlw	1
  7797  0BF6  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7798  0BF7  1D03               	skipz
  7799  0BF8  2BFF               	goto	u4923
  7800  0BF9  3000               	movlw	0
  7801  0BFA  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7802  0BFB  1D03               	skipz
  7803  0BFC  2BFF               	goto	u4923
  7804  0BFD  3000               	movlw	0
  7805  0BFE  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7806  0BFF                     u4923:	
  7807  0BFF  1C03               	btfss	3,0
  7808  0C00  2C04               	goto	l5943
  7809  0C01                     l5941:	
  7810  0C01  3008               	movlw	8
  7811  0C02  00B0               	movwf	EEPROM_24C1025_Write_Str@range
  7812  0C03  2C05               	goto	l5945
  7813  0C04                     l5943:	
  7814  0C04  01B0               	clrf	EEPROM_24C1025_Write_Str@range
  7815  0C05                     l5945:	
  7816                           
  7817                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
  7818  0C05  082F               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  7819  0C06  00B1               	movwf	EEPROM_24C1025_Write_Str@ctrl
  7820  0C07  30A0               	movlw	160
  7821                           
  7822                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
  7823  0C08  1003               	clrc
  7824  0C09  0DB1               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  7825                           
  7826                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
  7827  0C0A  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  7828                           
  7829                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
  7830  0C0B  0830               	movf	EEPROM_24C1025_Write_Str@range,w
  7831  0C0C  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  7832                           
  7833                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
  7834  0C0D  2705  120A  158A   	fcall	_I2C_Master_Start
  7835                           
  7836                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
  7837  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  7838  0C11  0831               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  7839  0C12  00A0               	movwf	I2C_Master_Write@d
  7840  0C13  01A1               	clrf	I2C_Master_Write@d+1
  7841  0C14  26FF  120A  158A   	fcall	_I2C_Master_Write
  7842                           
  7843                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
  7844  0C17  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7845  0C18  00A0               	movwf	I2C_Master_Write@d
  7846  0C19  01A1               	clrf	I2C_Master_Write@d+1
  7847  0C1A  26FF  120A  158A   	fcall	_I2C_Master_Write
  7848                           
  7849                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
  7850  0C1D  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  7851  0C1E  00A0               	movwf	I2C_Master_Write@d
  7852  0C1F  01A1               	clrf	I2C_Master_Write@d+1
  7853  0C20  26FF  120A  158A   	fcall	_I2C_Master_Write
  7854  0C23                     l6005:	
  7855                           ;EEPROM_24C1025.c: 162:      while(*data)
  7856                           
  7857                           
  7858                           ;EEPROM_24C1025.c: 162:      while(*data)
  7859  0C23  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7860  0C24  0084               	movwf	4
  7861  0C25  1383               	bcf	3,7	;select IRP bank0
  7862  0C26  0800               	movf	0,w
  7863  0C27  1903               	btfsc	3,2
  7864  0C28  2C69               	goto	l6007
  7865  0C29  0064               	clrwdt	;# 
  7866                           
  7867                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
  7868  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  7869  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  7870  0C2C  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  7871  0C2D  1D03               	btfss	3,2
  7872  0C2E  0008               	return
  7873  0C2F  3002               	movlw	2
  7874  0C30  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  7875  0C31  1D03               	skipz
  7876  0C32  2C39               	goto	u4933
  7877  0C33  3000               	movlw	0
  7878  0C34  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  7879  0C35  1D03               	skipz
  7880  0C36  2C39               	goto	u4933
  7881  0C37  3000               	movlw	0
  7882  0C38  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  7883  0C39                     u4933:	
  7884  0C39  1803               	btfsc	3,0
  7885  0C3A  0008               	return
  7886                           
  7887                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
  7888  0C3B  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  7889  0C3C  3E01               	addlw	1
  7890  0C3D  397F               	andlw	127
  7891  0C3E  1D03               	btfss	3,2
  7892  0C3F  2C59               	goto	l5999
  7893                           
  7894                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
  7895  0C40  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7896  0C41  27D2  120A  158A   	fcall	PL32	;call to abstracted procedure
  7897  0C44  26FF  120A  158A   	fcall	_I2C_Master_Write
  7898                           
  7899                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
  7900  0C47  270B  120A  158A   	fcall	_I2C_Master_Stop
  7901                           
  7902                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
  7903  0C4A  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  7904  0C4D  2730  120A  158A   	fcall	_my_delay_ms_WDT
  7905                           
  7906                           ;EEPROM_24C1025.c: 172:             mem_add++;
  7907  0C50  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  7908  0C51  1903               	skipnz
  7909  0C52  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  7910  0C53  1903               	skipnz
  7911  0C54  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  7912  0C55  1903               	skipnz
  7913  0C56  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  7914                           
  7915                           ;EEPROM_24C1025.c: 173:             data++;
  7916  0C57  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  7917  0C58  2BF2               	goto	L20
  7918  0C59                     l5999:	
  7919                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  7920                           
  7921                           
  7922                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
  7923  0C59  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  7924  0C5A  27D2  120A  158A   	fcall	PL32	;call to abstracted procedure
  7925  0C5D  26FF  120A  158A   	fcall	_I2C_Master_Write
  7926                           
  7927                           ;EEPROM_24C1025.c: 188:             data++;
  7928  0C60  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  7929                           
  7930                           ;EEPROM_24C1025.c: 189:             mem_add++;
  7931  0C61  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  7932  0C62  1903               	skipnz
  7933  0C63  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  7934  0C64  1903               	skipnz
  7935  0C65  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  7936  0C66  1903               	skipnz
  7937  0C67  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  7938  0C68  2C23               	goto	l6005
  7939  0C69                     l6007:	
  7940                           
  7941                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
  7942  0C69  01A0               	clrf	I2C_Master_Write@d
  7943  0C6A  01A1               	clrf	I2C_Master_Write@d+1
  7944  0C6B  26FF  120A  158A   	fcall	_I2C_Master_Write
  7945                           
  7946                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
  7947  0C6E  270B  120A  158A   	fcall	_I2C_Master_Stop
  7948                           
  7949                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
  7950  0C71  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  7951  0C74  2F30               	ljmp	l3501
  7952  0C75                     __end_of_EEPROM_24C1025_Write_Str:	
  7953  0C75                     __ptext46:	
  7954 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  7955 ;; Defined at:
  7956 ;;		line 201 in file "EEPROM_24C1025.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  chip_add        1    wreg     unsigned char 
  7959 ;;  mem_add         4   10[BANK0 ] unsigned long 
  7960 ;;  texto           1   14[BANK0 ] PTR unsigned char 
  7961 ;;		 -> texto(16), 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  chip_add        1   17[BANK0 ] unsigned char 
  7964 ;;  ctrl            1   19[BANK0 ] unsigned char 
  7965 ;;  range           1   18[BANK0 ] unsigned char 
  7966 ;;  cnt             1   16[BANK0 ] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 300/100
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7976 ;;      Params:         0       5       0       0       0
  7977 ;;      Locals:         0       4       0       0       0
  7978 ;;      Temps:          0       1       0       0       0
  7979 ;;      Totals:         0      10       0       0       0
  7980 ;;Total ram usage:       10 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    3
  7983 ;; This function calls:
  7984 ;;		_I2C_Master_Read
  7985 ;;		_I2C_Master_RepeatedStart
  7986 ;;		_I2C_Master_Start
  7987 ;;		_I2C_Master_Stop
  7988 ;;		_I2C_Master_Write
  7989 ;;		_my_delay_ms_WDT
  7990 ;; This function is called by:
  7991 ;;		_Decodify_Command
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           
  7996                           ;psect for function _EEPROM_24C1025_Read_Str
  7997  0C75                     _EEPROM_24C1025_Read_Str:	
  7998                           
  7999                           ;incstack = 0
  8000                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  8001                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  8002  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  8003  0C76  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
  8004                           
  8005                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
  8006  0C77  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8007                           
  8008                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
  8009  0C78  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8010  0C79  1D03               	btfss	3,2
  8011  0C7A  0008               	return
  8012  0C7B  3002               	movlw	2
  8013  0C7C  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8014  0C7D  1D03               	skipz
  8015  0C7E  2C85               	goto	u4973
  8016  0C7F  3000               	movlw	0
  8017  0C80  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8018  0C81  1D03               	skipz
  8019  0C82  2C85               	goto	u4973
  8020  0C83  3000               	movlw	0
  8021  0C84  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8022  0C85                     u4973:	
  8023  0C85  1803               	btfsc	3,0
  8024  0C86  0008               	return
  8025                           
  8026                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8027  0C87  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8028  0C88  1D03               	btfss	3,2
  8029  0C89  2C96               	goto	l6019
  8030  0C8A  3001               	movlw	1
  8031  0C8B  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8032  0C8C  1D03               	skipz
  8033  0C8D  2C94               	goto	u4983
  8034  0C8E  3000               	movlw	0
  8035  0C8F  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8036  0C90  1D03               	skipz
  8037  0C91  2C94               	goto	u4983
  8038  0C92  3000               	movlw	0
  8039  0C93  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8040  0C94                     u4983:	
  8041  0C94  1C03               	btfss	3,0
  8042  0C95  2C99               	goto	l6021
  8043  0C96                     l6019:	
  8044  0C96  3008               	movlw	8
  8045  0C97  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  8046  0C98  2C9A               	goto	l6023
  8047  0C99                     l6021:	
  8048  0C99  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8049  0C9A                     l6023:	
  8050                           
  8051                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
  8052                           
  8053                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
  8054                           
  8055                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
  8056                           
  8057                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
  8058                           
  8059                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
  8060  0C9A  27A8  120A  158A   	fcall	PL14	;call to abstracted procedure
  8061                           
  8062                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
  8063  0C9D  2705  120A  158A   	fcall	_I2C_Master_Start
  8064                           
  8065                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
  8066  0CA0  27F0  120A  158A   	fcall	PL46	;call to abstracted procedure
  8067  0CA3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8068                           
  8069                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
  8070  0CA6  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8071  0CA7  00A0               	movwf	I2C_Master_Write@d
  8072  0CA8  01A1               	clrf	I2C_Master_Write@d+1
  8073  0CA9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8074                           
  8075                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
  8076  0CAC  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8077  0CAD  00A0               	movwf	I2C_Master_Write@d
  8078  0CAE  01A1               	clrf	I2C_Master_Write@d+1
  8079  0CAF  26FF  120A  158A   	fcall	_I2C_Master_Write
  8080                           
  8081                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
  8082  0CB2  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8083                           
  8084                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
  8085  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  8086  0CB6  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8087  0CB7  00A0               	movwf	I2C_Master_Write@d
  8088  0CB8  01A1               	clrf	I2C_Master_Write@d+1
  8089  0CB9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8090                           
  8091                           ;EEPROM_24C1025.c: 222:      cnt=0;
  8092  0CBC  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
  8093  0CBD                     l69:	
  8094                           ;EEPROM_24C1025.c: 223:      do{
  8095                           
  8096  0CBD  0064               	clrwdt	;# 
  8097                           
  8098                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
  8099  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  8100  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  8101  0CC0  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8102  0CC1  1D03               	btfss	3,2
  8103  0CC2  2D44               	goto	l6101
  8104  0CC3  3002               	movlw	2
  8105  0CC4  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8106  0CC5  1D03               	skipz
  8107  0CC6  2CCD               	goto	u4993
  8108  0CC7  3000               	movlw	0
  8109  0CC8  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8110  0CC9  1D03               	skipz
  8111  0CCA  2CCD               	goto	u4993
  8112  0CCB  3000               	movlw	0
  8113  0CCC  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8114  0CCD                     u4993:	
  8115  0CCD  1803               	btfsc	3,0
  8116  0CCE  2D44               	goto	l6101
  8117                           
  8118                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
  8119  0CCF  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8120  0CD0  3E01               	addlw	1
  8121  0CD1  397F               	andlw	127
  8122  0CD2  1D03               	btfss	3,2
  8123  0CD3  2D25               	goto	l6091
  8124                           
  8125                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
  8126  0CD4  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8127  0CD5  0084               	movwf	4
  8128  0CD6  01A0               	clrf	I2C_Master_Read@a
  8129  0CD7  01A1               	clrf	I2C_Master_Read@a+1
  8130  0CD8  270E  120A  158A   	fcall	_I2C_Master_Read
  8131  0CDB  0820               	movf	?_I2C_Master_Read,w
  8132  0CDC  1783               	bsf	3,7	;select IRP bank2
  8133  0CDD  0080               	movwf	0
  8134                           
  8135                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
  8136  0CDE  270B  120A  158A   	fcall	_I2C_Master_Stop
  8137                           
  8138                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
  8139  0CE1  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8140  0CE4  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8141                           
  8142                           ;EEPROM_24C1025.c: 232:              mem_add++;
  8143  0CE7  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8144  0CE8  1903               	skipnz
  8145  0CE9  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8146  0CEA  1903               	skipnz
  8147  0CEB  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8148  0CEC  1903               	skipnz
  8149  0CED  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8150                           
  8151                           ;EEPROM_24C1025.c: 233:              texto++;
  8152  0CEE  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
  8153                           
  8154                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8155  0CEF  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8156  0CF0  1D03               	btfss	3,2
  8157  0CF1  2CFE               	goto	l6065
  8158  0CF2  3001               	movlw	1
  8159  0CF3  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8160  0CF4  1D03               	skipz
  8161  0CF5  2CFC               	goto	u5013
  8162  0CF6  3000               	movlw	0
  8163  0CF7  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8164  0CF8  1D03               	skipz
  8165  0CF9  2CFC               	goto	u5013
  8166  0CFA  3000               	movlw	0
  8167  0CFB  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8168  0CFC                     u5013:	
  8169  0CFC  1C03               	btfss	3,0
  8170  0CFD  2D01               	goto	l6067
  8171  0CFE                     l6065:	
  8172  0CFE  3008               	movlw	8
  8173  0CFF  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  8174  0D00  2D02               	goto	l6069
  8175  0D01                     l6067:	
  8176  0D01  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  8177  0D02                     l6069:	
  8178                           
  8179                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
  8180                           
  8181                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
  8182                           
  8183                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
  8184                           
  8185                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
  8186                           
  8187                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
  8188  0D02  27A8  120A  158A   	fcall	PL14	;call to abstracted procedure
  8189                           
  8190                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
  8191  0D05  2705  120A  158A   	fcall	_I2C_Master_Start
  8192                           
  8193                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
  8194  0D08  27F0  120A  158A   	fcall	PL46	;call to abstracted procedure
  8195  0D0B  26FF  120A  158A   	fcall	_I2C_Master_Write
  8196                           
  8197                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
  8198  0D0E  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8199  0D0F  00A0               	movwf	I2C_Master_Write@d
  8200  0D10  01A1               	clrf	I2C_Master_Write@d+1
  8201  0D11  26FF  120A  158A   	fcall	_I2C_Master_Write
  8202                           
  8203                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
  8204  0D14  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8205  0D15  00A0               	movwf	I2C_Master_Write@d
  8206  0D16  01A1               	clrf	I2C_Master_Write@d+1
  8207  0D17  26FF  120A  158A   	fcall	_I2C_Master_Write
  8208                           
  8209                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
  8210  0D1A  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8211                           
  8212                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
  8213  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  8214  0D1E  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8215  0D1F  00A0               	movwf	I2C_Master_Write@d
  8216  0D20  01A1               	clrf	I2C_Master_Write@d+1
  8217  0D21  26FF  120A  158A   	fcall	_I2C_Master_Write
  8218                           
  8219                           ;EEPROM_24C1025.c: 247:              }
  8220  0D24  2D3D               	goto	l6099
  8221  0D25                     l6091:	
  8222                           
  8223                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
  8224  0D25  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8225  0D26  0084               	movwf	4
  8226  0D27  01A0               	clrf	I2C_Master_Read@a
  8227  0D28  0AA0               	incf	I2C_Master_Read@a,f
  8228  0D29  01A1               	clrf	I2C_Master_Read@a+1
  8229  0D2A  270E  120A  158A   	fcall	_I2C_Master_Read
  8230  0D2D  0820               	movf	?_I2C_Master_Read,w
  8231  0D2E  1783               	bsf	3,7	;select IRP bank2
  8232  0D2F  0080               	movwf	0
  8233                           
  8234                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
  8235  0D30  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
  8236  0D31  0084               	movwf	4
  8237  0D32  0800               	movf	0,w
  8238  0D33  1903               	btfsc	3,2
  8239  0D34  2D44               	goto	l6101
  8240                           
  8241                           ;EEPROM_24C1025.c: 252:              texto++;
  8242  0D35  0AAE               	incf	EEPROM_24C1025_Read_Str@texto,f
  8243                           
  8244                           ;EEPROM_24C1025.c: 253:              mem_add++;
  8245  0D36  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8246  0D37  1903               	skipnz
  8247  0D38  0AAB               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8248  0D39  1903               	skipnz
  8249  0D3A  0AAC               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8250  0D3B  1903               	skipnz
  8251  0D3C  0AAD               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8252  0D3D                     l6099:	
  8253                           
  8254                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
  8255  0D3D  0830               	movf	EEPROM_24C1025_Read_Str@cnt,w
  8256  0D3E  0AB0               	incf	EEPROM_24C1025_Read_Str@cnt,f
  8257  0D3F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
  8258  0D40  3040               	movlw	64
  8259  0D41  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
  8260  0D42  1C03               	skipc
  8261  0D43  2CBD               	goto	l69
  8262  0D44                     l6101:	
  8263                           
  8264                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
  8265  0D44  01A0               	clrf	I2C_Master_Read@a
  8266  0D45  01A1               	clrf	I2C_Master_Read@a+1
  8267  0D46  270E  120A  158A   	fcall	_I2C_Master_Read
  8268                           
  8269                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
  8270  0D49  270B  120A  158A   	fcall	_I2C_Master_Stop
  8271                           
  8272                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  8273  0D4C  30B9               	movlw	185
  8274  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  8275  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  8276  0D4F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
  8277  0D50                     u5437:	
  8278  0D50  2D51               	nop2
  8279  0D51  2D52               	nop2
  8280  0D52  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8281  0D53  2D50               	goto	u5437
  8282  0D54  2D55               	nop2
  8283  0D55  0008               	return
  8284  0D56                     __end_of_EEPROM_24C1025_Read_Str:	
  8285  0D56                     __ptext49:	
  8286 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
  8287 ;; Defined at:
  8288 ;;		line 77 in file "EEPROM_24C1025.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  chip_add        1    wreg     unsigned char 
  8291 ;;  mem_add         4   10[BANK0 ] unsigned long 
  8292 ;;  sizedata        1   14[BANK0 ] unsigned char 
  8293 ;;  data            2   15[BANK0 ] PTR unsigned char 
  8294 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  chip_add        1   19[BANK0 ] unsigned char 
  8297 ;;  cnt             1   18[BANK0 ] unsigned char 
  8298 ;;  ctrl            1   21[BANK0 ] unsigned char 
  8299 ;;  range           1   20[BANK0 ] unsigned char 
  8300 ;;  cnt             1    0        unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 200/100
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8310 ;;      Params:         0       7       0       0       0
  8311 ;;      Locals:         0       4       0       0       0
  8312 ;;      Temps:          0       1       0       0       0
  8313 ;;      Totals:         0      12       0       0       0
  8314 ;;Total ram usage:       12 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    3
  8317 ;; This function calls:
  8318 ;;		_I2C_Master_Read
  8319 ;;		_I2C_Master_RepeatedStart
  8320 ;;		_I2C_Master_Start
  8321 ;;		_I2C_Master_Stop
  8322 ;;		_I2C_Master_Write
  8323 ;;		_my_delay_ms_WDT
  8324 ;; This function is called by:
  8325 ;;		_EEPROM_24C1025_Read_Byte
  8326 ;;		_EEPROM_24C1025_Read_Int
  8327 ;;		_Decodify_Command
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           
  8332                           ;psect for function _EEPROM_24C1025_Read_Buffer
  8333  0D56                     _EEPROM_24C1025_Read_Buffer:	
  8334                           
  8335                           ;incstack = 0
  8336                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  8337                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
  8338  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  8339  0D57  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
  8340                           
  8341                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
  8342  0D58  3014               	movlw	20
  8343  0D59  00F4               	movwf	_Delay_Led_Memory	;volatile
  8344  0D5A  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  8345                           
  8346                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
  8347  0D5B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8348  0D5C  1D03               	btfss	3,2
  8349  0D5D  0008               	return
  8350  0D5E  3002               	movlw	2
  8351  0D5F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8352  0D60  1D03               	skipz
  8353  0D61  2D68               	goto	u4533
  8354  0D62  3000               	movlw	0
  8355  0D63  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8356  0D64  1D03               	skipz
  8357  0D65  2D68               	goto	u4533
  8358  0D66  3000               	movlw	0
  8359  0D67  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8360  0D68                     u4533:	
  8361  0D68  1803               	btfsc	3,0
  8362  0D69  0008               	return
  8363                           
  8364                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8365  0D6A  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8366  0D6B  1D03               	btfss	3,2
  8367  0D6C  2D79               	goto	l5633
  8368  0D6D  3001               	movlw	1
  8369  0D6E  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8370  0D6F  1D03               	skipz
  8371  0D70  2D77               	goto	u4543
  8372  0D71  3000               	movlw	0
  8373  0D72  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8374  0D73  1D03               	skipz
  8375  0D74  2D77               	goto	u4543
  8376  0D75  3000               	movlw	0
  8377  0D76  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8378  0D77                     u4543:	
  8379  0D77  1C03               	btfss	3,0
  8380  0D78  2D7C               	goto	l5635
  8381  0D79                     l5633:	
  8382  0D79  3008               	movlw	8
  8383  0D7A  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
  8384  0D7B  2D7D               	goto	l5637
  8385  0D7C                     l5635:	
  8386  0D7C  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
  8387  0D7D                     l5637:	
  8388                           
  8389                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
  8390                           
  8391                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
  8392                           
  8393                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
  8394                           
  8395                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
  8396                           
  8397                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
  8398  0D7D  27B2  120A  158A   	fcall	PL18	;call to abstracted procedure
  8399                           
  8400                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
  8401  0D80  2705  120A  158A   	fcall	_I2C_Master_Start
  8402                           
  8403                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
  8404  0D83  27E4  120A  158A   	fcall	PL42	;call to abstracted procedure
  8405  0D86  26FF  120A  158A   	fcall	_I2C_Master_Write
  8406                           
  8407                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
  8408  0D89  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8409  0D8A  00A0               	movwf	I2C_Master_Write@d
  8410  0D8B  01A1               	clrf	I2C_Master_Write@d+1
  8411  0D8C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8412                           
  8413                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
  8414  0D8F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8415  0D90  00A0               	movwf	I2C_Master_Write@d
  8416  0D91  01A1               	clrf	I2C_Master_Write@d+1
  8417  0D92  26FF  120A  158A   	fcall	_I2C_Master_Write
  8418                           
  8419                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
  8420  0D95  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8421                           
  8422                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
  8423  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  8424  0D99  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  8425  0D9A  00A0               	movwf	I2C_Master_Write@d
  8426  0D9B  01A1               	clrf	I2C_Master_Write@d+1
  8427  0D9C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8428                           
  8429                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
  8430  0D9F  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
  8431  0DA0                     l5713:	
  8432  0DA0  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
  8433  0DA1  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
  8434  0DA2  1803               	btfsc	3,0
  8435  0DA3  2E23               	goto	l5715
  8436  0DA4  0064               	clrwdt	;# 
  8437                           
  8438                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
  8439  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8440  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8441  0DA7  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8442  0DA8  1D03               	btfss	3,2
  8443  0DA9  2E23               	goto	l5715
  8444  0DAA  3002               	movlw	2
  8445  0DAB  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8446  0DAC  1D03               	skipz
  8447  0DAD  2DB4               	goto	u4553
  8448  0DAE  3000               	movlw	0
  8449  0DAF  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8450  0DB0  1D03               	skipz
  8451  0DB1  2DB4               	goto	u4553
  8452  0DB2  3000               	movlw	0
  8453  0DB3  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8454  0DB4                     u4553:	
  8455  0DB4  1803               	btfsc	3,0
  8456  0DB5  2E23               	goto	l5715
  8457                           
  8458                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
  8459  0DB6  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8460  0DB7  3E01               	addlw	1
  8461  0DB8  397F               	andlw	127
  8462  0DB9  1D03               	btfss	3,2
  8463  0DBA  2E0D               	goto	l5705
  8464                           
  8465                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
  8466  0DBB  27D8  120A  158A   	fcall	PL34	;call to abstracted procedure
  8467  0DBE  01A1               	clrf	I2C_Master_Read@a+1
  8468  0DBF  270E  120A  158A   	fcall	_I2C_Master_Read
  8469  0DC2  0820               	movf	?_I2C_Master_Read,w
  8470  0DC3  0080               	movwf	0
  8471                           
  8472                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
  8473  0DC4  270B  120A  158A   	fcall	_I2C_Master_Stop
  8474                           
  8475                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
  8476  0DC7  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8477  0DCA  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8478                           
  8479                           ;EEPROM_24C1025.c: 114:              mem_add++;
  8480  0DCD  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  8481  0DCE  1903               	skipnz
  8482  0DCF  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  8483  0DD0  1903               	skipnz
  8484  0DD1  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  8485  0DD2  1903               	skipnz
  8486  0DD3  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  8487                           
  8488                           ;EEPROM_24C1025.c: 115:              data++;
  8489  0DD4  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
  8490  0DD5  1903               	skipnz
  8491  0DD6  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  8492                           
  8493                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8494  0DD7  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  8495  0DD8  1D03               	btfss	3,2
  8496  0DD9  2DE6               	goto	l5679
  8497  0DDA  3001               	movlw	1
  8498  0DDB  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  8499  0DDC  1D03               	skipz
  8500  0DDD  2DE4               	goto	u4573
  8501  0DDE  3000               	movlw	0
  8502  0DDF  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8503  0DE0  1D03               	skipz
  8504  0DE1  2DE4               	goto	u4573
  8505  0DE2  3000               	movlw	0
  8506  0DE3  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8507  0DE4                     u4573:	
  8508  0DE4  1C03               	btfss	3,0
  8509  0DE5  2DE9               	goto	l5681
  8510  0DE6                     l5679:	
  8511  0DE6  3008               	movlw	8
  8512  0DE7  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
  8513  0DE8  2DEA               	goto	l5683
  8514  0DE9                     l5681:	
  8515  0DE9  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
  8516  0DEA                     l5683:	
  8517                           
  8518                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
  8519                           
  8520                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
  8521                           
  8522                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
  8523                           
  8524                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
  8525                           
  8526                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
  8527  0DEA  27B2  120A  158A   	fcall	PL18	;call to abstracted procedure
  8528                           
  8529                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
  8530  0DED  2705  120A  158A   	fcall	_I2C_Master_Start
  8531                           
  8532                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
  8533  0DF0  27E4  120A  158A   	fcall	PL42	;call to abstracted procedure
  8534  0DF3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8535                           
  8536                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
  8537  0DF6  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  8538  0DF7  00A0               	movwf	I2C_Master_Write@d
  8539  0DF8  01A1               	clrf	I2C_Master_Write@d+1
  8540  0DF9  26FF  120A  158A   	fcall	_I2C_Master_Write
  8541                           
  8542                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
  8543  0DFC  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  8544  0DFD  00A0               	movwf	I2C_Master_Write@d
  8545  0DFE  01A1               	clrf	I2C_Master_Write@d+1
  8546  0DFF  26FF  120A  158A   	fcall	_I2C_Master_Write
  8547                           
  8548                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
  8549  0E02  2765  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8550                           
  8551                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
  8552  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  8553  0E06  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  8554  0E07  00A0               	movwf	I2C_Master_Write@d
  8555  0E08  01A1               	clrf	I2C_Master_Write@d+1
  8556  0E09  26FF  120A  158A   	fcall	_I2C_Master_Write
  8557                           
  8558                           ;EEPROM_24C1025.c: 129:              }
  8559  0E0C  2E21               	goto	l5711
  8560  0E0D                     l5705:	
  8561                           
  8562                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
  8563  0E0D  27D8  120A  158A   	fcall	PL34	;call to abstracted procedure
  8564  0E10  0AA0               	incf	I2C_Master_Read@a,f
  8565  0E11  01A1               	clrf	I2C_Master_Read@a+1
  8566  0E12  270E  120A  158A   	fcall	_I2C_Master_Read
  8567  0E15  0820               	movf	?_I2C_Master_Read,w
  8568  0E16  0080               	movwf	0
  8569                           
  8570                           ;EEPROM_24C1025.c: 133:              data++;
  8571  0E17  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
  8572  0E18  1903               	skipnz
  8573  0E19  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  8574                           
  8575                           ;EEPROM_24C1025.c: 134:              mem_add++;
  8576  0E1A  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  8577  0E1B  1903               	skipnz
  8578  0E1C  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  8579  0E1D  1903               	skipnz
  8580  0E1E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  8581  0E1F  1903               	skipnz
  8582  0E20  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  8583  0E21                     l5711:	
  8584                           
  8585                           ;EEPROM_24C1025.c: 136:         }
  8586  0E21  0AB2               	incf	EEPROM_24C1025_Read_Buffer@cnt_103,f
  8587  0E22  2DA0               	goto	l5713
  8588  0E23                     l5715:	
  8589                           
  8590                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
  8591  0E23  01A0               	clrf	I2C_Master_Read@a
  8592  0E24  01A1               	clrf	I2C_Master_Read@a+1
  8593  0E25  270E  120A  158A   	fcall	_I2C_Master_Read
  8594                           
  8595                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
  8596  0E28  270B  120A  158A   	fcall	_I2C_Master_Stop
  8597                           
  8598                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
  8599  0E2B  30B9               	movlw	185
  8600  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  8601  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  8602  0E2E  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
  8603  0E2F                     u5447:	
  8604  0E2F  2E30               	nop2
  8605  0E30  2E31               	nop2
  8606  0E31  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  8607  0E32  2E2F               	goto	u5447
  8608  0E33  2E34               	nop2
  8609  0E34  0008               	return
  8610  0E35                     __end_of_EEPROM_24C1025_Read_Buffer:	
  8611  0E35                     __ptext54:	
  8612 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
  8613 ;; Defined at:
  8614 ;;		line 14 in file "EEPROM_24C1025.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  chip_add        1    wreg     unsigned char 
  8617 ;;  mem_add         4   10[BANK0 ] unsigned long 
  8618 ;;  sizedata        1   14[BANK0 ] unsigned char 
  8619 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8620 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  chip_add        1   19[BANK0 ] unsigned char 
  8623 ;;  ctrl            1   21[BANK0 ] unsigned char 
  8624 ;;  range           1   20[BANK0 ] unsigned char 
  8625 ;;  count           1   18[BANK0 ] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      void 
  8628 ;; Registers used:
  8629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 200/100
  8632 ;;		On exit  : 300/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8635 ;;      Params:         0       6       0       0       0
  8636 ;;      Locals:         0       4       0       0       0
  8637 ;;      Temps:          0       2       0       0       0
  8638 ;;      Totals:         0      12       0       0       0
  8639 ;;Total ram usage:       12 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    3
  8642 ;; This function calls:
  8643 ;;		_I2C_Master_Start
  8644 ;;		_I2C_Master_Stop
  8645 ;;		_I2C_Master_Write
  8646 ;;		_my_delay_ms_WDT
  8647 ;; This function is called by:
  8648 ;;		_EEPROM_24C1025_Write_Byte
  8649 ;;		_EEPROM_24C1025_Write_Int
  8650 ;;		_Decodify_Command
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function _EEPROM_24C1025_Write_Buffer
  8656  0E35                     _EEPROM_24C1025_Write_Buffer:	
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  8660                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
  8661  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  8662  0E36  00B3               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
  8663                           
  8664                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
  8665  0E37  3014               	movlw	20
  8666  0E38  00F4               	movwf	_Delay_Led_Memory	;volatile
  8667  0E39  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  8668                           
  8669                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
  8670  0E3A  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8671  0E3B  1D03               	btfss	3,2
  8672  0E3C  0008               	return
  8673  0E3D  3002               	movlw	2
  8674  0E3E  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8675  0E3F  1D03               	skipz
  8676  0E40  2E47               	goto	u4353
  8677  0E41  3000               	movlw	0
  8678  0E42  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8679  0E43  1D03               	skipz
  8680  0E44  2E47               	goto	u4353
  8681  0E45  3000               	movlw	0
  8682  0E46  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8683  0E47                     u4353:	
  8684  0E47  1803               	btfsc	3,0
  8685  0E48  0008               	return
  8686                           
  8687                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8688  0E49  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8689  0E4A  1D03               	btfss	3,2
  8690  0E4B  2E58               	goto	l5457
  8691  0E4C  3001               	movlw	1
  8692  0E4D  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8693  0E4E  1D03               	skipz
  8694  0E4F  2E56               	goto	u4363
  8695  0E50  3000               	movlw	0
  8696  0E51  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8697  0E52  1D03               	skipz
  8698  0E53  2E56               	goto	u4363
  8699  0E54  3000               	movlw	0
  8700  0E55  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8701  0E56                     u4363:	
  8702  0E56  1C03               	btfss	3,0
  8703  0E57  2E5B               	goto	l5459
  8704  0E58                     l5457:	
  8705  0E58  3008               	movlw	8
  8706  0E59  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
  8707  0E5A  2E5C               	goto	l5461
  8708  0E5B                     l5459:	
  8709  0E5B  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
  8710  0E5C                     l5461:	
  8711                           
  8712                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
  8713                           
  8714                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
  8715                           
  8716                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
  8717                           
  8718                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
  8719  0E5C  27BC  120A  158A   	fcall	PL22	;call to abstracted procedure
  8720                           
  8721                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
  8722  0E5F  2705  120A  158A   	fcall	_I2C_Master_Start
  8723                           
  8724                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
  8725  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0E63  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  8727  0E64  00A0               	movwf	I2C_Master_Write@d
  8728  0E65  01A1               	clrf	I2C_Master_Write@d+1
  8729  0E66  26FF  120A  158A   	fcall	_I2C_Master_Write
  8730                           
  8731                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
  8732  0E69  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8733  0E6A  00A0               	movwf	I2C_Master_Write@d
  8734  0E6B  01A1               	clrf	I2C_Master_Write@d+1
  8735  0E6C  26FF  120A  158A   	fcall	_I2C_Master_Write
  8736                           
  8737                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
  8738  0E6F  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8739  0E70  00A0               	movwf	I2C_Master_Write@d
  8740  0E71  01A1               	clrf	I2C_Master_Write@d+1
  8741  0E72  26FF  120A  158A   	fcall	_I2C_Master_Write
  8742                           
  8743                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
  8744  0E75  01B2               	clrf	EEPROM_24C1025_Write_Buffer@count
  8745  0E76                     l5525:	
  8746  0E76  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
  8747  0E77  3EFF               	addlw	255
  8748  0E78  00B0               	movwf	??_EEPROM_24C1025_Write_Buffer
  8749  0E79  30FF               	movlw	255
  8750  0E7A  1803               	skipnc
  8751  0E7B  3000               	movlw	0
  8752  0E7C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  8753  0E7D  3A80               	xorlw	128
  8754  0E7E  3C80               	sublw	128
  8755  0E7F  1D03               	skipz
  8756  0E80  2E83               	goto	u4405
  8757  0E81  0830               	movf	??_EEPROM_24C1025_Write_Buffer,w
  8758  0E82  0232               	subwf	EEPROM_24C1025_Write_Buffer@count,w
  8759  0E83                     u4405:	
  8760  0E83  1803               	btfsc	3,0
  8761  0E84  2EF0               	goto	l5527
  8762  0E85  0064               	clrwdt	;# 
  8763                           
  8764                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
  8765  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  8766  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  8767  0E88  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8768  0E89  1D03               	btfss	3,2
  8769  0E8A  0008               	return
  8770  0E8B  3002               	movlw	2
  8771  0E8C  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8772  0E8D  1D03               	skipz
  8773  0E8E  2E95               	goto	u4373
  8774  0E8F  3000               	movlw	0
  8775  0E90  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8776  0E91  1D03               	skipz
  8777  0E92  2E95               	goto	u4373
  8778  0E93  3000               	movlw	0
  8779  0E94  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8780  0E95                     u4373:	
  8781  0E95  1803               	btfsc	3,0
  8782  0E96  0008               	return
  8783                           
  8784                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
  8785  0E97  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8786  0E98  3E01               	addlw	1
  8787  0E99  397F               	andlw	127
  8788  0E9A  1D03               	btfss	3,2
  8789  0E9B  2EE0               	goto	l5517
  8790                           
  8791                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
  8792  0E9C  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8793  0E9F  26FF  120A  158A   	fcall	_I2C_Master_Write
  8794                           
  8795                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
  8796  0EA2  270B  120A  158A   	fcall	_I2C_Master_Stop
  8797                           
  8798                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
  8799  0EA5  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8800  0EA8  2730  120A  158A   	fcall	_my_delay_ms_WDT
  8801                           
  8802                           ;EEPROM_24C1025.c: 47:             mem_add++;
  8803  0EAB  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  8804  0EAC  1903               	skipnz
  8805  0EAD  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  8806  0EAE  1903               	skipnz
  8807  0EAF  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  8808  0EB0  1903               	skipnz
  8809  0EB1  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  8810                           
  8811                           ;EEPROM_24C1025.c: 48:             data++;
  8812  0EB2  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
  8813                           
  8814                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8815  0EB3  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  8816  0EB4  1D03               	btfss	3,2
  8817  0EB5  2EC2               	goto	l5497
  8818  0EB6  3001               	movlw	1
  8819  0EB7  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  8820  0EB8  1D03               	skipz
  8821  0EB9  2EC0               	goto	u4393
  8822  0EBA  3000               	movlw	0
  8823  0EBB  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8824  0EBC  1D03               	skipz
  8825  0EBD  2EC0               	goto	u4393
  8826  0EBE  3000               	movlw	0
  8827  0EBF  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8828  0EC0                     u4393:	
  8829  0EC0  1C03               	btfss	3,0
  8830  0EC1  2EC5               	goto	l5499
  8831  0EC2                     l5497:	
  8832  0EC2  3008               	movlw	8
  8833  0EC3  00B4               	movwf	EEPROM_24C1025_Write_Buffer@range
  8834  0EC4  2EC6               	goto	l5501
  8835  0EC5                     l5499:	
  8836  0EC5  01B4               	clrf	EEPROM_24C1025_Write_Buffer@range
  8837  0EC6                     l5501:	
  8838                           
  8839                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
  8840                           
  8841                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
  8842                           
  8843                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
  8844                           
  8845                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
  8846  0EC6  27BC  120A  158A   	fcall	PL22	;call to abstracted procedure
  8847                           
  8848                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
  8849  0EC9  2705  120A  158A   	fcall	_I2C_Master_Start
  8850                           
  8851                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
  8852  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  8853  0ECD  0835               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  8854  0ECE  00A0               	movwf	I2C_Master_Write@d
  8855  0ECF  01A1               	clrf	I2C_Master_Write@d+1
  8856  0ED0  26FF  120A  158A   	fcall	_I2C_Master_Write
  8857                           
  8858                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
  8859  0ED3  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  8860  0ED4  00A0               	movwf	I2C_Master_Write@d
  8861  0ED5  01A1               	clrf	I2C_Master_Write@d+1
  8862  0ED6  26FF  120A  158A   	fcall	_I2C_Master_Write
  8863                           
  8864                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
  8865  0ED9  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  8866  0EDA  00A0               	movwf	I2C_Master_Write@d
  8867  0EDB  01A1               	clrf	I2C_Master_Write@d+1
  8868  0EDC  26FF  120A  158A   	fcall	_I2C_Master_Write
  8869                           
  8870                           ;EEPROM_24C1025.c: 59:             }
  8871  0EDF  2EEE               	goto	l5523
  8872  0EE0                     l5517:	
  8873                           
  8874                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
  8875  0EE0  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8876  0EE3  26FF  120A  158A   	fcall	_I2C_Master_Write
  8877                           
  8878                           ;EEPROM_24C1025.c: 63:             data++;
  8879  0EE6  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
  8880                           
  8881                           ;EEPROM_24C1025.c: 64:             mem_add++;
  8882  0EE7  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  8883  0EE8  1903               	skipnz
  8884  0EE9  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  8885  0EEA  1903               	skipnz
  8886  0EEB  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  8887  0EEC  1903               	skipnz
  8888  0EED  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  8889  0EEE                     l5523:	
  8890                           
  8891                           ;EEPROM_24C1025.c: 66:      }
  8892  0EEE  0AB2               	incf	EEPROM_24C1025_Write_Buffer@count,f
  8893  0EEF  2E76               	goto	l5525
  8894  0EF0                     l5527:	
  8895                           
  8896                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
  8897  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  8898  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  8899  0EF2  27CB  120A  158A   	fcall	PL30	;call to abstracted procedure
  8900  0EF5  26FF  120A  158A   	fcall	_I2C_Master_Write
  8901                           
  8902                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
  8903  0EF8  270B  120A  158A   	fcall	_I2C_Master_Stop
  8904                           
  8905                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
  8906  0EFB  27A1  120A  158A   	fcall	PL12	;call to abstracted procedure
  8907  0EFE  2F30               	ljmp	l3501
  8908  0EFF                     __end_of_EEPROM_24C1025_Write_Buffer:	
  8909  0EFF                     __ptext56:	
  8910 ;; *************** function _I2C_Master_Write *****************
  8911 ;; Defined at:
  8912 ;;		line 64 in file "I2C.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  d               2    0[BANK0 ] unsigned int 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, pclath, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 300/0
  8923 ;;		On exit  : 300/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8926 ;;      Params:         0       2       0       0       0
  8927 ;;      Locals:         0       0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0
  8929 ;;      Totals:         0       2       0       0       0
  8930 ;;Total ram usage:        2 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    2
  8933 ;; This function calls:
  8934 ;;		_I2C_Master_Wait
  8935 ;; This function is called by:
  8936 ;;		_EEPROM_24C1025_Write_Buffer
  8937 ;;		_EEPROM_24C1025_Read_Buffer
  8938 ;;		_EEPROM_24C1025_Write_Str
  8939 ;;		_EEPROM_24C1025_Read_Str
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _I2C_Master_Write
  8945  0EFF                     _I2C_Master_Write:	
  8946                           
  8947                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8951  0EFF  17EB               	bsf	_generic_status,7
  8952                           
  8953                           ;I2C.c: 67:   I2C_Master_Wait();
  8954  0F00  275D               	fcall	_I2C_Master_Wait
  8955                           
  8956                           ;I2C.c: 68:   SSPBUF = d;
  8957  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  8958  0F02  0820               	movf	I2C_Master_Write@d,w
  8959  0F03  0093               	movwf	19	;volatile
  8960  0F04  0008               	return
  8961  0F05                     __end_of_I2C_Master_Write:	
  8962  0F05                     __ptext58:	
  8963 ;; *************** function _I2C_Master_Start *****************
  8964 ;; Defined at:
  8965 ;;		line 45 in file "I2C.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0, pclath, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 300/0
  8976 ;;		On exit  : 300/100
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8979 ;;      Params:         0       0       0       0       0
  8980 ;;      Locals:         0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0
  8982 ;;      Totals:         0       0       0       0       0
  8983 ;;Total ram usage:        0 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    2
  8986 ;; This function calls:
  8987 ;;		_I2C_Master_Wait
  8988 ;; This function is called by:
  8989 ;;		_EEPROM_24C1025_Write_Buffer
  8990 ;;		_EEPROM_24C1025_Read_Buffer
  8991 ;;		_EEPROM_24C1025_Write_Str
  8992 ;;		_EEPROM_24C1025_Read_Str
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _I2C_Master_Start
  8998  0F05                     _I2C_Master_Start:	
  8999                           
  9000                           ;I2C.c: 47:   Delay_Led_Memory=20;
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9004  0F05  3014               	movlw	20
  9005  0F06  00F4               	movwf	_Delay_Led_Memory	;volatile
  9006  0F07  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  9007                           
  9008                           ;I2C.c: 48:   I2C_Master_Wait();
  9009  0F08  275D               	fcall	_I2C_Master_Wait
  9010                           
  9011                           ;I2C.c: 49:   SEN = 1;
  9012  0F09  1411               	bsf	17,0	;volatile
  9013  0F0A  0008               	return
  9014  0F0B                     __end_of_I2C_Master_Start:	
  9015  0F0B                     __ptext57:	
  9016 ;; *************** function _I2C_Master_Stop *****************
  9017 ;; Defined at:
  9018 ;;		line 58 in file "I2C.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 300/0
  9029 ;;		On exit  : 300/100
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9032 ;;      Params:         0       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0
  9035 ;;      Totals:         0       0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    2
  9039 ;; This function calls:
  9040 ;;		_I2C_Master_Wait
  9041 ;; This function is called by:
  9042 ;;		_EEPROM_24C1025_Write_Buffer
  9043 ;;		_EEPROM_24C1025_Read_Buffer
  9044 ;;		_EEPROM_24C1025_Write_Str
  9045 ;;		_EEPROM_24C1025_Read_Str
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           
  9050                           ;psect for function _I2C_Master_Stop
  9051  0F0B                     _I2C_Master_Stop:	
  9052                           
  9053                           ;I2C.c: 60:   I2C_Master_Wait();
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9057  0F0B  275D               	fcall	_I2C_Master_Wait
  9058                           
  9059                           ;I2C.c: 61:   PEN = 1;
  9060  0F0C  1511               	bsf	17,2	;volatile
  9061  0F0D  0008               	return
  9062  0F0E                     __end_of_I2C_Master_Stop:	
  9063  0F0E                     __ptext51:	
  9064 ;; *************** function _I2C_Master_Read *****************
  9065 ;; Defined at:
  9066 ;;		line 71 in file "I2C.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  a               2    0[BANK0 ] unsigned short 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  temp            2    2[BANK0 ] unsigned short 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    0[BANK0 ] unsigned short 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0, pclath, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 300/0
  9077 ;;		On exit  : 300/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9080 ;;      Params:         0       2       0       0       0
  9081 ;;      Locals:         0       2       0       0       0
  9082 ;;      Temps:          0       0       0       0       0
  9083 ;;      Totals:         0       4       0       0       0
  9084 ;;Total ram usage:        4 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    2
  9087 ;; This function calls:
  9088 ;;		_I2C_Master_Wait
  9089 ;; This function is called by:
  9090 ;;		_EEPROM_24C1025_Read_Buffer
  9091 ;;		_EEPROM_24C1025_Read_Str
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           
  9096                           ;psect for function _I2C_Master_Read
  9097  0F0E                     _I2C_Master_Read:	
  9098                           
  9099                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9103  0F0E  17EB               	bsf	_generic_status,7
  9104                           
  9105                           ;I2C.c: 75:   I2C_Master_Wait();
  9106  0F0F  275D  120A  158A   	fcall	_I2C_Master_Wait
  9107                           
  9108                           ;I2C.c: 76:   RCEN = 1;
  9109  0F12  1591               	bsf	17,3	;volatile
  9110                           
  9111                           ;I2C.c: 77:   I2C_Master_Wait();
  9112  0F13  275D  120A  158A   	fcall	_I2C_Master_Wait
  9113                           
  9114                           ;I2C.c: 78:   temp = SSPBUF;
  9115  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  9116  0F17  0813               	movf	19,w	;volatile
  9117  0F18  00A2               	movwf	I2C_Master_Read@temp
  9118  0F19  01A3               	clrf	I2C_Master_Read@temp+1
  9119                           
  9120                           ;I2C.c: 79:   I2C_Master_Wait();
  9121  0F1A  275D  120A  158A   	fcall	_I2C_Master_Wait
  9122                           
  9123                           ;I2C.c: 80:   ACKDT = (a)?0:1;
  9124  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  9125  0F1E  0820               	movf	I2C_Master_Read@a,w
  9126  0F1F  0421               	iorwf	I2C_Master_Read@a+1,w
  9127  0F20  1D03               	btfss	3,2
  9128  0F21  2F26               	goto	u4410
  9129  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  9130  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  9131  0F24  1691               	bsf	17,5	;volatile
  9132  0F25  2F29               	goto	l5549
  9133  0F26                     u4410:	
  9134  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  9135  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  9136  0F28  1291               	bcf	17,5	;volatile
  9137  0F29                     l5549:	
  9138                           
  9139                           ;I2C.c: 81:   ACKEN = 1;
  9140  0F29  1611               	bsf	17,4	;volatile
  9141                           
  9142                           ;I2C.c: 82:   return temp;
  9143  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  9144  0F2B  0823               	movf	I2C_Master_Read@temp+1,w
  9145  0F2C  00A1               	movwf	?_I2C_Master_Read+1
  9146  0F2D  0822               	movf	I2C_Master_Read@temp,w
  9147  0F2E  00A0               	movwf	?_I2C_Master_Read
  9148  0F2F  0008               	return
  9149  0F30                     __end_of_I2C_Master_Read:	
  9150  0F30                     __ptext55:	
  9151 ;; *************** function _my_delay_ms_WDT *****************
  9152 ;; Defined at:
  9153 ;;		line 13 in file "my_delay.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  time            4    0[BANK0 ] long 
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;  i               4    6[BANK0 ] long 
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		wreg, status,2, status,0, btemp+1
  9162 ;; Tracked objects:
  9163 ;;		On entry : 300/0
  9164 ;;		On exit  : 300/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9167 ;;      Params:         0       4       0       0       0
  9168 ;;      Locals:         0       4       0       0       0
  9169 ;;      Temps:          0       2       0       0       0
  9170 ;;      Totals:         0      10       0       0       0
  9171 ;;Total ram usage:       10 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    1
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_EEPROM_24C1025_Write_Buffer
  9178 ;;		_EEPROM_24C1025_Read_Buffer
  9179 ;;		_EEPROM_24C1025_Write_Str
  9180 ;;		_EEPROM_24C1025_Read_Str
  9181 ;;		_main
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           
  9186                           ;psect for function _my_delay_ms_WDT
  9187  0F30                     _my_delay_ms_WDT:	
  9188  0F30                     l3501:	
  9189                           ;incstack = 0
  9190                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  9191                           
  9192                           
  9193                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  9194  0F30  01A6               	clrf	my_delay_ms_WDT@i
  9195  0F31  01A7               	clrf	my_delay_ms_WDT@i+1
  9196  0F32  01A8               	clrf	my_delay_ms_WDT@i+2
  9197  0F33  01A9               	clrf	my_delay_ms_WDT@i+3
  9198  0F34                     l3507:	
  9199  0F34  0829               	movf	my_delay_ms_WDT@i+3,w
  9200  0F35  3A80               	xorlw	128
  9201  0F36  00FF               	movwf	127
  9202  0F37  0823               	movf	my_delay_ms_WDT@time+3,w
  9203  0F38  3A80               	xorlw	128
  9204  0F39  027F               	subwf	127,w
  9205  0F3A  1D03               	skipz
  9206  0F3B  2F46               	goto	u2153
  9207  0F3C  0822               	movf	my_delay_ms_WDT@time+2,w
  9208  0F3D  0228               	subwf	my_delay_ms_WDT@i+2,w
  9209  0F3E  1D03               	skipz
  9210  0F3F  2F46               	goto	u2153
  9211  0F40  0821               	movf	my_delay_ms_WDT@time+1,w
  9212  0F41  0227               	subwf	my_delay_ms_WDT@i+1,w
  9213  0F42  1D03               	skipz
  9214  0F43  2F46               	goto	u2153
  9215  0F44  0820               	movf	my_delay_ms_WDT@time,w
  9216  0F45  0226               	subwf	my_delay_ms_WDT@i,w
  9217  0F46                     u2153:	
  9218  0F46  1803               	btfsc	3,0
  9219  0F47  0008               	return
  9220  0F48  0064               	clrwdt	;# 
  9221                           
  9222                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  9223  0F49  3003               	movlw	3
  9224  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  9225  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  9226  0F4C  00A5               	movwf	??_my_delay_ms_WDT+1
  9227  0F4D  3097               	movlw	151
  9228  0F4E  00A4               	movwf	??_my_delay_ms_WDT
  9229  0F4F                     u5457:	
  9230  0F4F  0BA4               	decfsz	??_my_delay_ms_WDT,f
  9231  0F50  2F4F               	goto	u5457
  9232  0F51  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  9233  0F52  2F4F               	goto	u5457
  9234                           
  9235                           ;my_delay.c: 19:             }
  9236  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  9237  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  9238  0F55  0AA6               	incf	my_delay_ms_WDT@i,f
  9239  0F56  1903               	skipnz
  9240  0F57  0AA7               	incf	my_delay_ms_WDT@i+1,f
  9241  0F58  1903               	skipnz
  9242  0F59  0AA8               	incf	my_delay_ms_WDT@i+2,f
  9243  0F5A  1903               	skipnz
  9244  0F5B  0AA9               	incf	my_delay_ms_WDT@i+3,f
  9245  0F5C  2F34               	goto	l3507
  9246  0F5D                     __end_of_my_delay_ms_WDT:	
  9247  0F5D                     __ptext59:	
  9248 ;; *************** function _I2C_Master_Wait *****************
  9249 ;; Defined at:
  9250 ;;		line 40 in file "I2C.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2
  9259 ;; Tracked objects:
  9260 ;;		On entry : 200/0
  9261 ;;		On exit  : 300/100
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9264 ;;      Params:         0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    1
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_I2C_Master_Start
  9275 ;;		_I2C_Master_RepeatedStart
  9276 ;;		_I2C_Master_Stop
  9277 ;;		_I2C_Master_Write
  9278 ;;		_I2C_Master_Read
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _I2C_Master_Wait
  9284  0F5D                     _I2C_Master_Wait:	
  9285  0F5D                     l182:	
  9286                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9290                           
  9291  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  9292  0F5E  1914               	btfsc	20,2	;volatile
  9293  0F5F  2F5D               	goto	l182
  9294  0F60  0811               	movf	17,w	;volatile
  9295  0F61  391F               	andlw	31
  9296  0F62  1903               	btfsc	3,2
  9297  0F63  0008               	return
  9298  0F64  2F5D               	goto	l182
  9299  0F65                     __end_of_I2C_Master_Wait:	
  9300  0F65                     __ptext50:	
  9301 ;; *************** function _I2C_Master_RepeatedStart *****************
  9302 ;; Defined at:
  9303 ;;		line 52 in file "I2C.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 300/0
  9314 ;;		On exit  : 300/100
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9317 ;;      Params:         0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0
  9320 ;;      Totals:         0       0       0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:    2
  9324 ;; This function calls:
  9325 ;;		_I2C_Master_Wait
  9326 ;; This function is called by:
  9327 ;;		_EEPROM_24C1025_Read_Buffer
  9328 ;;		_EEPROM_24C1025_Read_Str
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           
  9333                           ;psect for function _I2C_Master_RepeatedStart
  9334  0F65                     _I2C_Master_RepeatedStart:	
  9335                           
  9336                           ;I2C.c: 54:   I2C_Master_Wait();
  9337                           
  9338                           ;incstack = 0
  9339                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  9340  0F65  275D               	fcall	_I2C_Master_Wait
  9341                           
  9342                           ;I2C.c: 55:   RSEN = 1;
  9343  0F66  1491               	bsf	17,1	;volatile
  9344  0F67  0008               	return
  9345  0F68                     __end_of_I2C_Master_RepeatedStart:	
  9346  0F68                     __ptext16:	
  9347 ;; *************** function _itoa *****************
  9348 ;; Defined at:
  9349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  buf             1    wreg     PTR unsigned char 
  9352 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9353 ;;  val             2   15[BANK0 ] int 
  9354 ;;  base            2   17[BANK0 ] int 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  9357 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9358 ;;  cp              1    0        PTR unsigned char 
  9359 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      PTR unsigned char 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : 300/0
  9366 ;;		On exit  : B00/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9369 ;;      Params:         0       4       0       0       0
  9370 ;;      Locals:         0       2       0       0       0
  9371 ;;      Temps:          0       0       0       0       0
  9372 ;;      Totals:         0       6       0       0       0
  9373 ;;Total ram usage:        6 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    3
  9376 ;; This function calls:
  9377 ;;		_utoa
  9378 ;; This function is called by:
  9379 ;;		_Decodify_Command
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           
  9384                           ;psect for function _itoa
  9385  0F68                     _itoa:	
  9386                           
  9387                           ;incstack = 0
  9388                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9389                           ;itoa@buf stored from wreg
  9390  0F68  00B4               	movwf	itoa@buf
  9391  0F69  1FB0               	btfss	itoa@val+1,7
  9392  0F6A  2F76               	goto	l6193
  9393  0F6B  0834               	movf	itoa@buf,w
  9394  0F6C  0084               	movwf	4
  9395  0F6D  302D               	movlw	45
  9396  0F6E  1383               	bcf	3,7	;select IRP bank0
  9397  0F6F  0080               	movwf	0
  9398  0F70  0AB4               	incf	itoa@buf,f
  9399  0F71  09AF               	comf	itoa@val,f
  9400  0F72  09B0               	comf	itoa@val+1,f
  9401  0F73  0AAF               	incf	itoa@val,f
  9402  0F74  1903               	skipnz
  9403  0F75  0AB0               	incf	itoa@val+1,f
  9404  0F76                     l6193:	
  9405  0F76  0830               	movf	itoa@val+1,w
  9406  0F77  00A8               	movwf	utoa@val+1
  9407  0F78  082F               	movf	itoa@val,w
  9408  0F79  00A7               	movwf	utoa@val
  9409  0F7A  0832               	movf	itoa@base+1,w
  9410  0F7B  00AA               	movwf	utoa@base+1
  9411  0F7C  0831               	movf	itoa@base,w
  9412  0F7D  00A9               	movwf	utoa@base
  9413  0F7E  0834               	movf	itoa@buf,w
  9414  0F7F  160A  118A  2DCD   	ljmp	_utoa
  9415  0F82                     __end_of_itoa:	
  9416  0F82                     __ptext35:	
  9417 ;; *************** function _USART_put_int *****************
  9418 ;; Defined at:
  9419 ;;		line 138 in file "usart.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  value           2   43[BANK0 ] int 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  dado            1   45[BANK0 ] PTR unsigned char 
  9424 ;;		 -> USART_put_int@value(2), 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 300/0
  9431 ;;		On exit  : 300/100
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9434 ;;      Params:         0       2       0       0       0
  9435 ;;      Locals:         0       1       0       0       0
  9436 ;;      Temps:          0       0       0       0       0
  9437 ;;      Totals:         0       3       0       0       0
  9438 ;;Total ram usage:        3 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    2
  9441 ;; This function calls:
  9442 ;;		_USART_putc
  9443 ;; This function is called by:
  9444 ;;		_Decodify_Command
  9445 ;;		_PROCULUS_Control_Register_Write
  9446 ;;		_PROCULUS_VP_Write
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           
  9451                           ;psect for function _USART_put_int
  9452  0F82                     _USART_put_int:	
  9453  0F82                     l5555:	
  9454                           ;incstack = 0
  9455                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9456                           
  9457                           
  9458                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9459  0F82  304B               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9460  0F83  00CD               	movwf	USART_put_int@dado
  9461                           
  9462                           ;usart.c: 141:      USART_putc(*(dado+1));
  9463  0F84  0A4D               	incf	USART_put_int@dado,w
  9464  0F85  0084               	movwf	4
  9465  0F86  1383               	bcf	3,7	;select IRP bank0
  9466  0F87  0800               	movf	0,w
  9467  0F88  23D3  120A  158A   	fcall	_USART_putc
  9468                           
  9469                           ;usart.c: 142:      USART_putc(*dado);
  9470  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  9471  0F8C  084D               	movf	USART_put_int@dado,w
  9472  0F8D  0084               	movwf	4
  9473  0F8E  1383               	bcf	3,7	;select IRP bank0
  9474  0F8F  0800               	movf	0,w
  9475  0F90  2BD3               	ljmp	_USART_putc
  9476  0F91                     __end_of_USART_put_int:	
  9477  0F91                     __ptext45:	
  9478 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  9479 ;; Defined at:
  9480 ;;		line 268 in file "EEPROM_24C1025.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  chip_add        1    wreg     unsigned char 
  9483 ;;  mem_add         4   22[BANK0 ] unsigned long 
  9484 ;;  data            1   26[BANK0 ] unsigned char 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  chip_add        1   27[BANK0 ] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 300/100
  9493 ;;		On exit  : 300/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9496 ;;      Params:         0       5       0       0       0
  9497 ;;      Locals:         0       1       0       0       0
  9498 ;;      Temps:          0       0       0       0       0
  9499 ;;      Totals:         0       6       0       0       0
  9500 ;;Total ram usage:        6 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    4
  9503 ;; This function calls:
  9504 ;;		_EEPROM_24C1025_Write_Buffer
  9505 ;; This function is called by:
  9506 ;;		_Decodify_Command
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           
  9511                           ;psect for function _EEPROM_24C1025_Write_Byte
  9512  0F91                     _EEPROM_24C1025_Write_Byte:	
  9513                           
  9514                           ;incstack = 0
  9515                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9516                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  9517  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  9518  0F92  00BB               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  9519                           
  9520                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  9521  0F93  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  9522  0F94  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9523  0F95  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  9524  0F96  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9525  0F97  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  9526  0F98  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9527  0F99  0836               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  9528  0F9A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9529  0F9B  303A               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  9530  0F9C  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  9531  0F9D  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  9532  0F9E  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  9533  0F9F  083B               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  9534  0FA0  2E35               	ljmp	_EEPROM_24C1025_Write_Buffer
  9535  0FA1                     __end_of_EEPROM_24C1025_Write_Byte:	
  9536  0FA1                     PL12:	
  9537  0FA1  3005               	movlw	5
  9538  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  9539  0FA3  00A0               	movwf	my_delay_ms_WDT@time
  9540  0FA4  01A1               	clrf	my_delay_ms_WDT@time+1
  9541  0FA5  01A2               	clrf	my_delay_ms_WDT@time+2
  9542  0FA6  01A3               	clrf	my_delay_ms_WDT@time+3
  9543  0FA7  0008               	return
  9544  0FA8                     __end_ofPL12:	
  9545  0FA8                     PL14:	
  9546  0FA8  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
  9547  0FA9  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
  9548  0FAA  30A0               	movlw	160
  9549  0FAB  1003               	clrc
  9550  0FAC  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
  9551  0FAD  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9552  0FAE  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
  9553  0FAF  0832               	movf	EEPROM_24C1025_Read_Str@range,w
  9554  0FB0  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9555  0FB1  0008               	return
  9556  0FB2                     __end_ofPL14:	
  9557  0FB2                     PL18:	
  9558  0FB2  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
  9559  0FB3  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
  9560  0FB4  30A0               	movlw	160
  9561  0FB5  1003               	clrc
  9562  0FB6  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9563  0FB7  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9564  0FB8  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
  9565  0FB9  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
  9566  0FBA  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
  9567  0FBB  0008               	return
  9568  0FBC                     __end_ofPL18:	
  9569  0FBC                     PL22:	
  9570  0FBC  0833               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
  9571  0FBD  00B5               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
  9572  0FBE  30A0               	movlw	160
  9573  0FBF  1003               	clrc
  9574  0FC0  0DB5               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9575  0FC1  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9576  0FC2  0834               	movf	EEPROM_24C1025_Write_Buffer@range,w
  9577  0FC3  04B5               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
  9578  0FC4  0008               	return
  9579  0FC5                     __end_ofPL22:	
  9580  0FC5                     PL28:	
  9581  0FC5  3038               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  9582  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  9583  0FC7  00A0               	movwf	strcat@from
  9584  0FC8  3080               	movlw	128
  9585  0FC9  00A1               	movwf	strcat@from+1
  9586  0FCA  34DA               	retlw	(low (_texto| (0+256)))& (0+255)
  9587  0FCB                     __end_ofPL28:	
  9588  0FCB                     PL30:	
  9589  0FCB  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
  9590  0FCC  0084               	movwf	4
  9591  0FCD  1383               	bcf	3,7	;select IRP bank0
  9592  0FCE  0800               	movf	0,w
  9593  0FCF  00A0               	movwf	I2C_Master_Write@d
  9594  0FD0  01A1               	clrf	I2C_Master_Write@d+1
  9595  0FD1  0008               	return
  9596  0FD2                     __end_ofPL30:	
  9597  0FD2                     PL32:	
  9598  0FD2  0084               	movwf	4
  9599  0FD3  1383               	bcf	3,7	;select IRP bank0
  9600  0FD4  0800               	movf	0,w
  9601  0FD5  00A0               	movwf	I2C_Master_Write@d
  9602  0FD6  01A1               	clrf	I2C_Master_Write@d+1
  9603  0FD7  0008               	return
  9604  0FD8                     __end_ofPL32:	
  9605  0FD8                     PL34:	
  9606  0FD8  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
  9607  0FD9  0084               	movwf	4
  9608  0FDA  1783               	bsf	3,7
  9609  0FDB  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
  9610  0FDC  1383               	bcf	3,7
  9611  0FDD  01A0               	clrf	I2C_Master_Read@a
  9612  0FDE  0008               	return
  9613  0FDF                     __end_ofPL34:	
  9614  0FDF                     PL40:	
  9615  0FDF  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  9616  0FE0  00A0               	movwf	strcat@from
  9617  0FE1  3080               	movlw	128
  9618  0FE2  00A1               	movwf	strcat@from+1
  9619  0FE3  34DA               	retlw	(low (_texto| (0+256)))& (0+255)
  9620  0FE4                     __end_ofPL40:	
  9621  0FE4                     PL42:	
  9622  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  9623  0FE5  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9624  0FE6  39FE               	andlw	254
  9625  0FE7  00A0               	movwf	I2C_Master_Write@d
  9626  0FE8  01A1               	clrf	I2C_Master_Write@d+1
  9627  0FE9  0008               	return
  9628  0FEA                     __end_ofPL42:	
  9629  0FEA                     PL44:	
  9630  0FEA  30DA               	movlw	(low (_texto| (0+256)))& (0+255)
  9631  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  9632  0FEC  00A1               	movwf	USART_put_string@vetor
  9633  0FED  3001               	movlw	1
  9634  0FEE  00A2               	movwf	USART_put_string@vetor+1
  9635  0FEF  0008               	return
  9636  0FF0                     __end_ofPL44:	
  9637  0FF0                     PL46:	
  9638  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  9639  0FF1  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9640  0FF2  39FE               	andlw	254
  9641  0FF3  00A0               	movwf	I2C_Master_Write@d
  9642  0FF4  01A1               	clrf	I2C_Master_Write@d+1
  9643  0FF5  0008               	return
  9644  0FF6                     __end_ofPL46:	
  9645  0FF6                     __ptext31:	
  9646 ;; *************** function _PROCULUS_Show_Screen *****************
  9647 ;; Defined at:
  9648 ;;		line 243 in file "proculus.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  screen          2   50[BANK0 ] unsigned int 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  vetor           3   52[BANK0 ] unsigned char [3]
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 300/0
  9659 ;;		On exit  : 300/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9662 ;;      Params:         0       2       0       0       0
  9663 ;;      Locals:         0       3       0       0       0
  9664 ;;      Temps:          0       0       0       0       0
  9665 ;;      Totals:         0       5       0       0       0
  9666 ;;Total ram usage:        5 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    4
  9669 ;; This function calls:
  9670 ;;		_PROCULUS_Control_Register_Write
  9671 ;; This function is called by:
  9672 ;;		_Decodify_Command
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _PROCULUS_Show_Screen
  9678  0FF6                     _PROCULUS_Show_Screen:	
  9679                           
  9680                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9684  0FF6  3003               	movlw	3
  9685  0FF7  00D4               	movwf	PROCULUS_Show_Screen@vetor
  9686                           
  9687                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9688  0FF8  0853               	movf	PROCULUS_Show_Screen@screen+1,w
  9689  0FF9  00D5               	movwf	PROCULUS_Show_Screen@vetor+1
  9690                           
  9691                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9692  0FFA  0852               	movf	PROCULUS_Show_Screen@screen,w
  9693  0FFB  00D6               	movwf	PROCULUS_Show_Screen@vetor+2
  9694                           
  9695                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9696  0FFC  3003               	movlw	3
  9697  0FFD  00CE               	movwf	PROCULUS_Control_Register_Write@size
  9698  0FFE  3054               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9699  0FFF  2809               	ljmp	_PROCULUS_Control_Register_Write
  9700  1000                     __end_of_PROCULUS_Show_Screen:	
  9701                           
  9702                           	psect	text37
  9703  13B0                     __ptext37:	
  9704 ;; *************** function _PROCULUS_Delay *****************
  9705 ;; Defined at:
  9706 ;;		line 267 in file "proculus.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  i               2    4[BANK0 ] unsigned int 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 300/0
  9717 ;;		On exit  : 300/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9720 ;;      Params:         0       2       0       0       0
  9721 ;;      Locals:         0       2       0       0       0
  9722 ;;      Temps:          0       2       0       0       0
  9723 ;;      Totals:         0       6       0       0       0
  9724 ;;Total ram usage:        6 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    1
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_PROCULUS_Control_Register_Write
  9731 ;;		_PROCULUS_VP_Write
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _PROCULUS_Delay
  9737  13B0                     _PROCULUS_Delay:	
  9738  13B0                     l3629:	
  9739                           ;incstack = 0
  9740                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9741                           
  9742                           
  9743                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9744  13B0  01A4               	clrf	PROCULUS_Delay@i
  9745  13B1  01A5               	clrf	PROCULUS_Delay@i+1
  9746  13B2                     l3635:	
  9747  13B2  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9748  13B3  0225               	subwf	PROCULUS_Delay@i+1,w
  9749  13B4  1D03               	skipz
  9750  13B5  2BB8               	goto	u2255
  9751  13B6  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9752  13B7  0224               	subwf	PROCULUS_Delay@i,w
  9753  13B8                     u2255:	
  9754  13B8  1803               	btfsc	3,0
  9755  13B9  0008               	return
  9756                           
  9757                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9758  13BA  3003               	movlw	3
  9759  13BB  1283               	bcf	3,5	;RP0=0, select bank0
  9760  13BC  1303               	bcf	3,6	;RP1=0, select bank0
  9761  13BD  00A3               	movwf	??_PROCULUS_Delay+1
  9762  13BE  3097               	movlw	151
  9763  13BF  00A2               	movwf	??_PROCULUS_Delay
  9764  13C0                     u5397:	
  9765  13C0  0BA2               	decfsz	??_PROCULUS_Delay,f
  9766  13C1  2BC0               	goto	u5397
  9767  13C2  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9768  13C3  2BC0               	goto	u5397
  9769                           
  9770                           ;proculus.c: 270:     }
  9771  13C4  1283               	bcf	3,5	;RP0=0, select bank0
  9772  13C5  1303               	bcf	3,6	;RP1=0, select bank0
  9773  13C6  0AA4               	incf	PROCULUS_Delay@i,f
  9774  13C7  1903               	skipnz
  9775  13C8  0AA5               	incf	PROCULUS_Delay@i+1,f
  9776  13C9  2BB2               	goto	l3635
  9777  13CA                     __end_of_PROCULUS_Delay:	
  9778                           
  9779                           	psect	text39
  9780  153D                     __ptext39:	
  9781 ;; *************** function _EEPROM_Write_Integer *****************
  9782 ;; Defined at:
  9783 ;;		line 68 in file "eeprom.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  addr            1    wreg     unsigned char 
  9786 ;;  dado            2    5[BANK0 ] unsigned int 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  addr            1    9[BANK0 ] unsigned char 
  9789 ;;  i               1   11[BANK0 ] unsigned char 
  9790 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9791 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9792 ;;  addr_memo       1    0        unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 200/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9802 ;;      Params:         0       2       0       0       0
  9803 ;;      Locals:         0       3       0       0       0
  9804 ;;      Temps:          0       2       0       0       0
  9805 ;;      Totals:         0       7       0       0       0
  9806 ;;Total ram usage:        7 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:    2
  9809 ;; This function calls:
  9810 ;;		_EEPROM_Write_Byte
  9811 ;; This function is called by:
  9812 ;;		_main
  9813 ;;		_Decodify_Command
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           
  9818                           ;psect for function _EEPROM_Write_Integer
  9819  153D                     _EEPROM_Write_Integer:	
  9820                           
  9821                           ;incstack = 0
  9822                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9823                           ;EEPROM_Write_Integer@addr stored from wreg
  9824  153D  1283               	bcf	3,5	;RP0=0, select bank0
  9825  153E  00A9               	movwf	EEPROM_Write_Integer@addr
  9826                           
  9827                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9828  153F  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9829  1540  00AA               	movwf	EEPROM_Write_Integer@ptr
  9830                           
  9831                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9832  1541  01AB               	clrf	EEPROM_Write_Integer@i
  9833  1542                     l4541:	
  9834                           
  9835                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9836  1542  082A               	movf	EEPROM_Write_Integer@ptr,w
  9837  1543  0084               	movwf	4
  9838  1544  1383               	bcf	3,7	;select IRP bank0
  9839  1545  0800               	movf	0,w
  9840  1546  00A0               	movwf	EEPROM_Write_Byte@dado
  9841  1547  0829               	movf	EEPROM_Write_Integer@addr,w
  9842  1548  2577  160A  118A   	fcall	_EEPROM_Write_Byte
  9843  154B  1283               	bcf	3,5	;RP0=0, select bank0
  9844  154C  1303               	bcf	3,6	;RP1=0, select bank0
  9845  154D  3002               	movlw	2
  9846  154E  0AAA               	incf	EEPROM_Write_Integer@ptr,f
  9847  154F  0AA9               	incf	EEPROM_Write_Integer@addr,f
  9848  1550  0AAB               	incf	EEPROM_Write_Integer@i,f
  9849  1551  022B               	subwf	EEPROM_Write_Integer@i,w
  9850  1552  1C03               	skipc
  9851  1553  2D42               	goto	l4541
  9852                           
  9853                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9854  1554  304E               	movlw	78
  9855  1555  1283               	bcf	3,5	;RP0=0, select bank0
  9856  1556  1303               	bcf	3,6	;RP1=0, select bank0
  9857  1557  00A8               	movwf	??_EEPROM_Write_Integer+1
  9858  1558  30EA               	movlw	234
  9859  1559  00A7               	movwf	??_EEPROM_Write_Integer
  9860  155A                     u5407:	
  9861  155A  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9862  155B  2D5A               	goto	u5407
  9863  155C  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9864  155D  2D5A               	goto	u5407
  9865  155E  0000               	nop
  9866  155F  0008               	return
  9867  1560                     __end_of_EEPROM_Write_Integer:	
  9868  1560                     __ptext38:	
  9869 ;; *************** function _EEPROM_Write_String *****************
  9870 ;; Defined at:
  9871 ;;		line 97 in file "eeprom.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  addr            1    wreg     unsigned char 
  9874 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9875 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  addr            1    6[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 300/100
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9887 ;;      Params:         0       1       0       0       0
  9888 ;;      Locals:         0       1       0       0       0
  9889 ;;      Temps:          0       0       0       0       0
  9890 ;;      Totals:         0       2       0       0       0
  9891 ;;Total ram usage:        2 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    2
  9894 ;; This function calls:
  9895 ;;		_EEPROM_Write_Byte
  9896 ;; This function is called by:
  9897 ;;		_Decodify_Command
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _EEPROM_Write_String
  9903  1560                     _EEPROM_Write_String:	
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9907                           ;EEPROM_Write_String@addr stored from wreg
  9908  1560  1283               	bcf	3,5	;RP0=0, select bank0
  9909  1561  00A6               	movwf	EEPROM_Write_String@addr
  9910  1562                     l6169:	
  9911                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9912                           
  9913                           
  9914                           ;eeprom.c: 99:     while(*dado)
  9915  1562  0825               	movf	EEPROM_Write_String@dado,w
  9916  1563  0084               	movwf	4
  9917  1564  1383               	bcf	3,7	;select IRP bank0
  9918  1565  0800               	movf	0,w
  9919  1566  1903               	btfsc	3,2
  9920  1567  2D73               	goto	l6171
  9921                           
  9922                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9923  1568  25B1  160A  118A   	fcall	PL52	;call to abstracted procedure
  9924  156B  2577  160A  118A   	fcall	_EEPROM_Write_Byte
  9925                           
  9926                           ;eeprom.c: 102:      addr++;
  9927  156E  1283               	bcf	3,5	;RP0=0, select bank0
  9928  156F  1303               	bcf	3,6	;RP1=0, select bank0
  9929  1570  0AA6               	incf	EEPROM_Write_String@addr,f
  9930                           
  9931                           ;eeprom.c: 103:      dado++;
  9932  1571  0AA5               	incf	EEPROM_Write_String@dado,f
  9933  1572  2D62               	goto	l6169
  9934  1573                     l6171:	
  9935                           
  9936                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9937  1573  25B1  160A  118A   	fcall	PL52	;call to abstracted procedure
  9938  1576  2D77               	ljmp	_EEPROM_Write_Byte
  9939  1577                     __end_of_EEPROM_Write_String:	
  9940  1577                     __ptext40:	
  9941 ;; *************** function _EEPROM_Write_Byte *****************
  9942 ;; Defined at:
  9943 ;;		line 21 in file "eeprom.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  addr            1    wreg     unsigned char 
  9946 ;;  dado            1    0[BANK0 ] unsigned char 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  addr            1    3[BANK0 ] unsigned char 
  9949 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg, status,2, status,0
  9954 ;; Tracked objects:
  9955 ;;		On entry : 200/100
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9959 ;;      Params:         0       1       0       0       0
  9960 ;;      Locals:         0       2       0       0       0
  9961 ;;      Temps:          0       2       0       0       0
  9962 ;;      Totals:         0       5       0       0       0
  9963 ;;Total ram usage:        5 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    1
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_Decodify_Command
  9970 ;;		_EEPROM_Write_Integer
  9971 ;;		_EEPROM_Write_String
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           
  9976                           ;psect for function _EEPROM_Write_Byte
  9977  1577                     _EEPROM_Write_Byte:	
  9978                           
  9979                           ;incstack = 0
  9980                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9981                           ;EEPROM_Write_Byte@addr stored from wreg
  9982  1577  1283               	bcf	3,5	;RP0=0, select bank0
  9983  1578  00A3               	movwf	EEPROM_Write_Byte@addr
  9984                           
  9985                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9986  1579  3014               	movlw	20
  9987  157A  00F4               	movwf	_Delay_Led_Memory	;volatile
  9988  157B  01F5               	clrf	_Delay_Led_Memory+1	;volatile
  9989  157C                     l502:	
  9990                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9991                           
  9992  157C  1683               	bsf	3,5	;RP0=1, select bank3
  9993  157D  1703               	bsf	3,6	;RP1=1, select bank3
  9994  157E  188C               	btfsc	12,1	;volsfr
  9995  157F  2D7C               	goto	l502
  9996                           
  9997                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9998  1580  1F8B               	btfss	11,7	;volatile
  9999  1581  2D87               	goto	l3813
 10000                           
 10001                           ;eeprom.c: 28:           last_GIE=1;
 10002  1582  1283               	bcf	3,5	;RP0=0, select bank0
 10003  1583  1303               	bcf	3,6	;RP1=0, select bank0
 10004  1584  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10005  1585  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10006  1586  2D8A               	goto	l3815
 10007  1587                     l3813:	
 10008                           
 10009                           ;eeprom.c: 30:           last_GIE=0;
 10010  1587  1283               	bcf	3,5	;RP0=0, select bank0
 10011  1588  1303               	bcf	3,6	;RP1=0, select bank0
 10012  1589  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10013  158A                     l3815:	
 10014                           
 10015                           ;eeprom.c: 32:        EEADR=addr;
 10016  158A  0823               	movf	EEPROM_Write_Byte@addr,w
 10017  158B  1703               	bsf	3,6	;RP1=1, select bank2
 10018  158C  008D               	movwf	13	;volatile
 10019                           
 10020                           ;eeprom.c: 33:        EEDATA=dado;
 10021  158D  1303               	bcf	3,6	;RP1=0, select bank0
 10022  158E  0820               	movf	EEPROM_Write_Byte@dado,w
 10023  158F  1703               	bsf	3,6	;RP1=1, select bank2
 10024  1590  008C               	movwf	12	;volatile
 10025                           
 10026                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10027  1591  1683               	bsf	3,5	;RP0=1, select bank3
 10028  1592  138C               	bcf	12,7	;volsfr
 10029                           
 10030                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10031  1593  150C               	bsf	12,2	;volsfr
 10032                           
 10033                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10034  1594  138B               	bcf	11,7	;volatile
 10035                           
 10036                           ;eeprom.c: 37:        EECON2=0x55;
 10037  1595  3055               	movlw	85
 10038  1596  008D               	movwf	13	;volsfr
 10039                           
 10040                           ;eeprom.c: 38:        EECON2=0xAA;
 10041  1597  30AA               	movlw	170
 10042  1598  008D               	movwf	13	;volsfr
 10043                           
 10044                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10045  1599  148C               	bsf	12,1	;volsfr
 10046                           
 10047                           ;eeprom.c: 41:        if(last_GIE==1)
 10048  159A  1283               	bcf	3,5	;RP0=0, select bank0
 10049  159B  1303               	bcf	3,6	;RP1=0, select bank0
 10050  159C  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10051  159D  1D03               	btfss	3,2
 10052  159E  2DA1               	goto	l507
 10053                           
 10054                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10055  159F  178B               	bsf	11,7	;volatile
 10056  15A0  2DA2               	goto	l508
 10057  15A1                     l507:	
 10058                           ;eeprom.c: 43:        else
 10059                           
 10060                           
 10061                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10062  15A1  138B               	bcf	11,7	;volatile
 10063  15A2                     l508:	
 10064                           
 10065                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10066  15A2  1683               	bsf	3,5	;RP0=1, select bank3
 10067  15A3  1703               	bsf	3,6	;RP1=1, select bank3
 10068  15A4  110C               	bcf	12,2	;volsfr
 10069                           
 10070                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10071  15A5  304E               	movlw	78
 10072  15A6  1283               	bcf	3,5	;RP0=0, select bank0
 10073  15A7  1303               	bcf	3,6	;RP1=0, select bank0
 10074  15A8  00A2               	movwf	??_EEPROM_Write_Byte+1
 10075  15A9  30EA               	movlw	234
 10076  15AA  00A1               	movwf	??_EEPROM_Write_Byte
 10077  15AB                     u5417:	
 10078  15AB  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10079  15AC  2DAB               	goto	u5417
 10080  15AD  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10081  15AE  2DAB               	goto	u5417
 10082  15AF  0000               	nop
 10083  15B0  0008               	return
 10084  15B1                     __end_of_EEPROM_Write_Byte:	
 10085  15B1                     PL52:	
 10086  15B1  0825               	movf	EEPROM_Write_String@dado,w
 10087  15B2  0084               	movwf	4
 10088  15B3  0800               	movf	0,w
 10089  15B4  00A0               	movwf	EEPROM_Write_Byte@dado
 10090  15B5  0826               	movf	EEPROM_Write_String@addr,w
 10091  15B6  0008               	return
 10092  15B7                     __end_ofPL52:	
 10093                           
 10094                           	psect	text41
 10095  147B                     __ptext41:	
 10096 ;; *************** function _EEPROM_Read_String *****************
 10097 ;; Defined at:
 10098 ;;		line 109 in file "eeprom.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  addr            1    wreg     unsigned char 
 10101 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10102 ;;		 -> texto(16), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  addr            1    4[BANK0 ] unsigned char 
 10105 ;;  c               1    5[BANK0 ] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      void 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 300/100
 10112 ;;		On exit  : B00/800
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10115 ;;      Params:         0       1       0       0       0
 10116 ;;      Locals:         0       2       0       0       0
 10117 ;;      Temps:          0       0       0       0       0
 10118 ;;      Totals:         0       3       0       0       0
 10119 ;;Total ram usage:        3 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    2
 10122 ;; This function calls:
 10123 ;;		_EEPROM_Read_Byte
 10124 ;; This function is called by:
 10125 ;;		_Decodify_Command
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _EEPROM_Read_String
 10131  147B                     _EEPROM_Read_String:	
 10132                           
 10133                           ;incstack = 0
 10134                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10135                           ;EEPROM_Read_String@addr stored from wreg
 10136  147B  1283               	bcf	3,5	;RP0=0, select bank0
 10137  147C  00A4               	movwf	EEPROM_Read_String@addr
 10138  147D                     l534:	
 10139                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10140                           
 10141                           
 10142                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10143  147D  0824               	movf	EEPROM_Read_String@addr,w
 10144  147E  24A8  160A  118A   	fcall	_EEPROM_Read_Byte
 10145  1481  1303               	bcf	3,6	;RP1=0, select bank0
 10146  1482  00A5               	movwf	EEPROM_Read_String@c
 10147  1483  0AA4               	incf	EEPROM_Read_String@addr,f
 10148                           
 10149                           ;eeprom.c: 114:         *(dado++)=c;
 10150  1484  0823               	movf	EEPROM_Read_String@dado,w
 10151  1485  0084               	movwf	4
 10152  1486  0825               	movf	EEPROM_Read_String@c,w
 10153  1487  1783               	bsf	3,7	;select IRP bank2
 10154  1488  0080               	movwf	0
 10155  1489  0AA3               	incf	EEPROM_Read_String@dado,f
 10156                           
 10157                           ;eeprom.c: 116:       }while(c);
 10158  148A  0825               	movf	EEPROM_Read_String@c,w
 10159  148B  1903               	btfsc	3,2
 10160  148C  0008               	return
 10161  148D  2C7D               	goto	l534
 10162  148E                     __end_of_EEPROM_Read_String:	
 10163  148E                     __ptext42:	
 10164 ;; *************** function _EEPROM_Read_Integer *****************
 10165 ;; Defined at:
 10166 ;;		line 81 in file "eeprom.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  addr            1    wreg     unsigned char 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  addr            1    6[BANK0 ] unsigned char 
 10171 ;;  result          2    8[BANK0 ] unsigned int 
 10172 ;;  i               1   10[BANK0 ] unsigned char 
 10173 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10174 ;;		 -> EEPROM_Read_Integer@result(2), 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  2    3[BANK0 ] unsigned int 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 200/0
 10181 ;;		On exit  : B00/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10184 ;;      Params:         0       3       0       0       0
 10185 ;;      Locals:         0       5       0       0       0
 10186 ;;      Temps:          0       0       0       0       0
 10187 ;;      Totals:         0       8       0       0       0
 10188 ;;Total ram usage:        8 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    2
 10191 ;; This function calls:
 10192 ;;		_EEPROM_Read_Byte
 10193 ;; This function is called by:
 10194 ;;		_main
 10195 ;;		_Decodify_Command
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function _EEPROM_Read_Integer
 10201  148E                     _EEPROM_Read_Integer:	
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10205                           ;EEPROM_Read_Integer@addr stored from wreg
 10206  148E  1283               	bcf	3,5	;RP0=0, select bank0
 10207  148F  00A6               	movwf	EEPROM_Read_Integer@addr
 10208                           
 10209                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10210  1490  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10211  1491  00A7               	movwf	EEPROM_Read_Integer@ptr
 10212                           
 10213                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10214  1492  01AA               	clrf	EEPROM_Read_Integer@i
 10215  1493                     l6139:	
 10216                           
 10217                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10218  1493  0827               	movf	EEPROM_Read_Integer@ptr,w
 10219  1494  0084               	movwf	4
 10220  1495  0826               	movf	EEPROM_Read_Integer@addr,w
 10221  1496  24A8  160A  118A   	fcall	_EEPROM_Read_Byte
 10222  1499  1383               	bcf	3,7	;select IRP bank0
 10223  149A  0080               	movwf	0
 10224  149B  1303               	bcf	3,6	;RP1=0, select bank0
 10225  149C  3002               	movlw	2
 10226  149D  0AA6               	incf	EEPROM_Read_Integer@addr,f
 10227  149E  0AA7               	incf	EEPROM_Read_Integer@ptr,f
 10228  149F  0AAA               	incf	EEPROM_Read_Integer@i,f
 10229  14A0  022A               	subwf	EEPROM_Read_Integer@i,w
 10230  14A1  1C03               	skipc
 10231  14A2  2C93               	goto	l6139
 10232                           
 10233                           ;eeprom.c: 89:       return result;
 10234  14A3  0829               	movf	EEPROM_Read_Integer@result+1,w
 10235  14A4  00A4               	movwf	?_EEPROM_Read_Integer+1
 10236  14A5  0828               	movf	EEPROM_Read_Integer@result,w
 10237  14A6  00A3               	movwf	?_EEPROM_Read_Integer
 10238  14A7  0008               	return
 10239  14A8                     __end_of_EEPROM_Read_Integer:	
 10240  14A8                     __ptext43:	
 10241 ;; *************** function _EEPROM_Read_Byte *****************
 10242 ;; Defined at:
 10243 ;;		line 52 in file "eeprom.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  addr            1    wreg     unsigned char 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;  addr            1    2[BANK0 ] unsigned char 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      unsigned char 
 10250 ;; Registers used:
 10251 ;;		wreg
 10252 ;; Tracked objects:
 10253 ;;		On entry : 200/100
 10254 ;;		On exit  : 300/200
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10257 ;;      Params:         0       0       0       0       0
 10258 ;;      Locals:         0       1       0       0       0
 10259 ;;      Temps:          0       2       0       0       0
 10260 ;;      Totals:         0       3       0       0       0
 10261 ;;Total ram usage:        3 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    1
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_Decodify_Command
 10268 ;;		_EEPROM_Read_Integer
 10269 ;;		_EEPROM_Read_String
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           
 10274                           ;psect for function _EEPROM_Read_Byte
 10275  14A8                     _EEPROM_Read_Byte:	
 10276                           
 10277                           ;incstack = 0
 10278                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10279                           ;EEPROM_Read_Byte@addr stored from wreg
 10280  14A8  1283               	bcf	3,5	;RP0=0, select bank0
 10281  14A9  00A2               	movwf	EEPROM_Read_Byte@addr
 10282                           
 10283                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10284  14AA  3014               	movlw	20
 10285  14AB  00F4               	movwf	_Delay_Led_Memory	;volatile
 10286  14AC  01F5               	clrf	_Delay_Led_Memory+1	;volatile
 10287  14AD                     l512:	
 10288                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10289                           
 10290  14AD  1683               	bsf	3,5	;RP0=1, select bank3
 10291  14AE  1703               	bsf	3,6	;RP1=1, select bank3
 10292  14AF  188C               	btfsc	12,1	;volsfr
 10293  14B0  2CAD               	goto	l512
 10294                           
 10295                           ;eeprom.c: 57:    EEADR=addr;
 10296  14B1  1283               	bcf	3,5	;RP0=0, select bank0
 10297  14B2  1303               	bcf	3,6	;RP1=0, select bank0
 10298  14B3  0822               	movf	EEPROM_Read_Byte@addr,w
 10299  14B4  1703               	bsf	3,6	;RP1=1, select bank2
 10300  14B5  008D               	movwf	13	;volatile
 10301                           
 10302                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10303  14B6  1683               	bsf	3,5	;RP0=1, select bank3
 10304  14B7  138C               	bcf	12,7	;volsfr
 10305                           
 10306                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10307  14B8  140C               	bsf	12,0	;volsfr
 10308                           
 10309                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10310  14B9  304E               	movlw	78
 10311  14BA  1283               	bcf	3,5	;RP0=0, select bank0
 10312  14BB  1303               	bcf	3,6	;RP1=0, select bank0
 10313  14BC  00A1               	movwf	??_EEPROM_Read_Byte+1
 10314  14BD  30EA               	movlw	234
 10315  14BE  00A0               	movwf	??_EEPROM_Read_Byte
 10316  14BF                     u5427:	
 10317  14BF  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10318  14C0  2CBF               	goto	u5427
 10319  14C1  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10320  14C2  2CBF               	goto	u5427
 10321  14C3  0000               	nop
 10322                           
 10323                           ;eeprom.c: 61:    return EEDATA;
 10324  14C4  1283               	bcf	3,5	;RP0=0, select bank2
 10325  14C5  1703               	bsf	3,6	;RP1=1, select bank2
 10326  14C6  080C               	movf	12,w	;volatile
 10327  14C7  0008               	return
 10328  14C8                     __end_of_EEPROM_Read_Byte:	
 10329                           
 10330                           	psect	text47
 10331  1396                     __ptext47:	
 10332 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10333 ;; Defined at:
 10334 ;;		line 287 in file "EEPROM_24C1025.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  chip_add        1    wreg     unsigned char 
 10337 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  chip_add        1   26[BANK0 ] unsigned char 
 10340 ;;  data            2   27[BANK0 ] unsigned char [2]
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2   22[BANK0 ] unsigned int 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 300/100
 10347 ;;		On exit  : 300/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10350 ;;      Params:         0       4       0       0       0
 10351 ;;      Locals:         0       3       0       0       0
 10352 ;;      Temps:          0       0       0       0       0
 10353 ;;      Totals:         0       7       0       0       0
 10354 ;;Total ram usage:        7 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    4
 10357 ;; This function calls:
 10358 ;;		_EEPROM_24C1025_Read_Buffer
 10359 ;; This function is called by:
 10360 ;;		_Decodify_Command
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _EEPROM_24C1025_Read_Int
 10366  1396                     _EEPROM_24C1025_Read_Int:	
 10367                           
 10368                           ;incstack = 0
 10369                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10370                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10371  1396  1283               	bcf	3,5	;RP0=0, select bank0
 10372  1397  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10373                           
 10374                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10375  1398  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10376  1399  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10377  139A  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10378  139B  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10379  139C  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10380  139D  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10381  139E  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10382  139F  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10383  13A0  3002               	movlw	2
 10384  13A1  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10385  13A2  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10386  13A3  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10387  13A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10388  13A5  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10389  13A6  120A  158A  2556   	fcall	_EEPROM_24C1025_Read_Buffer
 10390                           
 10391                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 10392  13A9  1283               	bcf	3,5	;RP0=0, select bank0
 10393  13AA  1303               	bcf	3,6	;RP1=0, select bank0
 10394  13AB  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 10395  13AC  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10396  13AD  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10397  13AE  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10398  13AF  0008               	return
 10399  13B0                     __end_of_EEPROM_24C1025_Read_Int:	
 10400                           
 10401                           	psect	text48
 10402  137F                     __ptext48:	
 10403 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10404 ;; Defined at:
 10405 ;;		line 273 in file "EEPROM_24C1025.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;  chip_add        1    wreg     unsigned char 
 10408 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  chip_add        1   26[BANK0 ] unsigned char 
 10411 ;;  data            1   27[BANK0 ] unsigned char 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      unsigned char 
 10414 ;; Registers used:
 10415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10416 ;; Tracked objects:
 10417 ;;		On entry : 300/100
 10418 ;;		On exit  : 300/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10421 ;;      Params:         0       4       0       0       0
 10422 ;;      Locals:         0       2       0       0       0
 10423 ;;      Temps:          0       0       0       0       0
 10424 ;;      Totals:         0       6       0       0       0
 10425 ;;Total ram usage:        6 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    4
 10428 ;; This function calls:
 10429 ;;		_EEPROM_24C1025_Read_Buffer
 10430 ;; This function is called by:
 10431 ;;		_Decodify_Command
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _EEPROM_24C1025_Read_Byte
 10437  137F                     _EEPROM_24C1025_Read_Byte:	
 10438                           
 10439                           ;incstack = 0
 10440                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10441                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10442  137F  1283               	bcf	3,5	;RP0=0, select bank0
 10443  1380  00BA               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10444                           
 10445                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10446  1381  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10447  1382  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10448  1383  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10449  1384  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10450  1385  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10451  1386  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10452  1387  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10453  1388  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10454  1389  303B               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10455  138A  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10456  138B  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10457  138C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10458  138D  01B0               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10459  138E  083A               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10460  138F  120A  158A  2556   	fcall	_EEPROM_24C1025_Read_Buffer
 10461                           
 10462                           ;EEPROM_24C1025.c: 276:     return data;
 10463  1392  1283               	bcf	3,5	;RP0=0, select bank0
 10464  1393  1303               	bcf	3,6	;RP1=0, select bank0
 10465  1394  083B               	movf	EEPROM_24C1025_Read_Byte@data,w
 10466  1395  0008               	return
 10467  1396                     __end_of_EEPROM_24C1025_Read_Byte:	
 10468                           
 10469                           	psect	text52
 10470  06B2                     __ptext52:	
 10471 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 10472 ;; Defined at:
 10473 ;;		line 294 in file "EEPROM_24C1025.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  chip_add        1    wreg     unsigned char 
 10476 ;;  value           2   52[BANK0 ] unsigned int 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  chip_add        1   54[BANK0 ] unsigned char 
 10479 ;;  mem_add         4   55[BANK0 ] unsigned long 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 300/100
 10486 ;;		On exit  : 300/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10489 ;;      Params:         0       2       0       0       0
 10490 ;;      Locals:         0       5       0       0       0
 10491 ;;      Temps:          0       0       0       0       0
 10492 ;;      Totals:         0       7       0       0       0
 10493 ;;Total ram usage:        7 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:    5
 10496 ;; This function calls:
 10497 ;;		_EEPROM_24C1025_Write_Int
 10498 ;; This function is called by:
 10499 ;;		_Decodify_Command
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           
 10504                           ;psect for function _EEPROM_24C1025_Fill_All
 10505  06B2                     _EEPROM_24C1025_Fill_All:	
 10506                           
 10507                           ;incstack = 0
 10508                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10509                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 10510  06B2  1283               	bcf	3,5	;RP0=0, select bank0
 10511  06B3  00D6               	movwf	EEPROM_24C1025_Fill_All@chip_add
 10512                           
 10513                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 10514  06B4  01D7               	clrf	EEPROM_24C1025_Fill_All@mem_add
 10515  06B5  01D8               	clrf	EEPROM_24C1025_Fill_All@mem_add+1
 10516  06B6  01D9               	clrf	EEPROM_24C1025_Fill_All@mem_add+2
 10517  06B7  01DA               	clrf	EEPROM_24C1025_Fill_All@mem_add+3
 10518  06B8                     l6125:	
 10519                           
 10520                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 10521  06B8  085A               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 10522  06B9  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 10523  06BA  0859               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 10524  06BB  00CD               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 10525  06BC  0858               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 10526  06BD  00CC               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 10527  06BE  0857               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 10528  06BF  00CB               	movwf	EEPROM_24C1025_Write_Int@mem_add
 10529  06C0  0855               	movf	EEPROM_24C1025_Fill_All@value+1,w
 10530  06C1  00D0               	movwf	EEPROM_24C1025_Write_Int@data+1
 10531  06C2  0854               	movf	EEPROM_24C1025_Fill_All@value,w
 10532  06C3  00CF               	movwf	EEPROM_24C1025_Write_Int@data
 10533  06C4  0856               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 10534  06C5  272C  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 10535  06C8  0064               	clrwdt	;# 
 10536                           
 10537                           ;EEPROM_24C1025.c: 300:         }
 10538  06C9  3002               	movlw	2
 10539  06CA  1283               	bcf	3,5	;RP0=0, select bank0
 10540  06CB  1303               	bcf	3,6	;RP1=0, select bank0
 10541  06CC  07D7               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 10542  06CD  3001               	movlw	1
 10543  06CE  1803               	skipnc
 10544  06CF  07D8               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 10545  06D0  1803               	skipnc
 10546  06D1  07D9               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 10547  06D2  1803               	skipnc
 10548  06D3  07DA               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 10549  06D4  085A               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 10550  06D5  1D03               	btfss	3,2
 10551  06D6  0008               	return
 10552  06D7  0859               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 10553  06D8  1D03               	btfss	3,2
 10554  06D9  0008               	return
 10555  06DA  3004               	movlw	4
 10556  06DB  0258               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 10557  06DC  1D03               	skipz
 10558  06DD  2EE0               	goto	u5043
 10559  06DE  3000               	movlw	0
 10560  06DF  0257               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 10561  06E0                     u5043:	
 10562  06E0  1803               	btfsc	3,0
 10563  06E1  0008               	return
 10564  06E2  2EB8               	goto	l6125
 10565  06E3                     __end_of_EEPROM_24C1025_Fill_All:	
 10566  06E3                     __ptext24:	
 10567 ;; *************** function _Save_Log *****************
 10568 ;; Defined at:
 10569 ;;		line 1029 in file "SlaveLiofilizadorVer1.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  add_datalog     4   52[BANK0 ] unsigned long 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 300/0
 10580 ;;		On exit  : 300/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10583 ;;      Params:         0       4       0       0       0
 10584 ;;      Locals:         0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0
 10586 ;;      Totals:         0       4       0       0       0
 10587 ;;Total ram usage:        4 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    5
 10590 ;; This function calls:
 10591 ;;		_EEPROM_24C1025_Write_Int
 10592 ;;		___flmul
 10593 ;;		___fltol
 10594 ;; This function is called by:
 10595 ;;		_Decodify_Command
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           
 10600                           ;psect for function _Save_Log
 10601  06E3                     _Save_Log:	
 10602                           
 10603                           ;SlaveLiofilizadorVer1.c: 1030:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Temperatura0*10.0));
 10604                           
 10605                           ;incstack = 0
 10606                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10607  06E3  2791               	fcall	PL16	;call to abstracted procedure
 10608  06E4  0854               	movf	(_Temperatura0+3)^(0+128),w
 10609  06E5  1283               	bcf	3,5	;RP0=0, select bank0
 10610  06E6  00AF               	movwf	___flmul@a+3
 10611  06E7  1683               	bsf	3,5	;RP0=1, select bank1
 10612  06E8  0853               	movf	(_Temperatura0+2)^(0+128),w
 10613  06E9  1283               	bcf	3,5	;RP0=0, select bank0
 10614  06EA  00AE               	movwf	___flmul@a+2
 10615  06EB  1683               	bsf	3,5	;RP0=1, select bank1
 10616  06EC  0852               	movf	(_Temperatura0+1)^(0+128),w
 10617  06ED  1283               	bcf	3,5	;RP0=0, select bank0
 10618  06EE  00AD               	movwf	___flmul@a+1
 10619  06EF  1683               	bsf	3,5	;RP0=1, select bank1
 10620  06F0  0851               	movf	_Temperatura0^(0+128),w
 10621  06F1  1283               	bcf	3,5	;RP0=0, select bank0
 10622  06F2  00AC               	movwf	___flmul@a
 10623  06F3  3041               	movlw	65
 10624  06F4  00AB               	movwf	___flmul@b+3
 10625  06F5  3020               	movlw	32
 10626  06F6  00AA               	movwf	___flmul@b+2
 10627  06F7  01A9               	clrf	___flmul@b+1
 10628  06F8  01A8               	clrf	___flmul@b
 10629  06F9  120A  118A  2156  120A  118A  	fcall	___flmul
 10630  06FE  082B               	movf	?___flmul+3,w
 10631  06FF  00C4               	movwf	___fltol@f1+3
 10632  0700  082A               	movf	?___flmul+2,w
 10633  0701  00C3               	movwf	___fltol@f1+2
 10634  0702  0829               	movf	?___flmul+1,w
 10635  0703  00C2               	movwf	___fltol@f1+1
 10636  0704  0828               	movf	?___flmul,w
 10637  0705  00C1               	movwf	___fltol@f1
 10638  0706  2742  120A  118A   	fcall	___fltol
 10639  0709  0842               	movf	?___fltol+1,w
 10640  070A  00D0               	movwf	EEPROM_24C1025_Write_Int@data+1
 10641  070B  0841               	movf	?___fltol,w
 10642  070C  00CF               	movwf	EEPROM_24C1025_Write_Int@data
 10643  070D  3000               	movlw	0
 10644  070E  272C  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 10645                           
 10646                           ;SlaveLiofilizadorVer1.c: 1031:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) U
      +                          midade1);
 10647  0711  2791  120A  118A   	fcall	PL16	;call to abstracted procedure
 10648  0714  0850               	movf	(_Umidade1+3)^(0+128),w
 10649  0715  1283               	bcf	3,5	;RP0=0, select bank0
 10650  0716  00C4               	movwf	___fltol@f1+3
 10651  0717  1683               	bsf	3,5	;RP0=1, select bank1
 10652  0718  084F               	movf	(_Umidade1+2)^(0+128),w
 10653  0719  1283               	bcf	3,5	;RP0=0, select bank0
 10654  071A  00C3               	movwf	___fltol@f1+2
 10655  071B  1683               	bsf	3,5	;RP0=1, select bank1
 10656  071C  084E               	movf	(_Umidade1+1)^(0+128),w
 10657  071D  1283               	bcf	3,5	;RP0=0, select bank0
 10658  071E  00C2               	movwf	___fltol@f1+1
 10659  071F  1683               	bsf	3,5	;RP0=1, select bank1
 10660  0720  084D               	movf	_Umidade1^(0+128),w
 10661  0721  1283               	bcf	3,5	;RP0=0, select bank0
 10662  0722  00C1               	movwf	___fltol@f1
 10663  0723  2742  120A  118A   	fcall	___fltol
 10664  0726  0842               	movf	?___fltol+1,w
 10665  0727  00D0               	movwf	EEPROM_24C1025_Write_Int@data+1
 10666  0728  0841               	movf	?___fltol,w
 10667  0729  00CF               	movwf	EEPROM_24C1025_Write_Int@data
 10668  072A  3001               	movlw	1
 10669  072B  2F2C               	ljmp	_EEPROM_24C1025_Write_Int
 10670  072C                     __end_of_Save_Log:	
 10671  072C                     __ptext53:	
 10672 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 10673 ;; Defined at:
 10674 ;;		line 279 in file "EEPROM_24C1025.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  chip_add        1    wreg     unsigned char 
 10677 ;;  mem_add         4   43[BANK0 ] unsigned long 
 10678 ;;  data            2   47[BANK0 ] int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  chip_add        1   49[BANK0 ] unsigned char 
 10681 ;;  local           2   50[BANK0 ] unsigned char [2]
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10686 ;; Tracked objects:
 10687 ;;		On entry : 200/100
 10688 ;;		On exit  : 300/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10691 ;;      Params:         0       6       0       0       0
 10692 ;;      Locals:         0       3       0       0       0
 10693 ;;      Temps:          0       0       0       0       0
 10694 ;;      Totals:         0       9       0       0       0
 10695 ;;Total ram usage:        9 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    4
 10698 ;; This function calls:
 10699 ;;		_EEPROM_24C1025_Write_Buffer
 10700 ;; This function is called by:
 10701 ;;		_EEPROM_24C1025_Fill_All
 10702 ;;		_Decodify_Command
 10703 ;;		_Save_Log
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _EEPROM_24C1025_Write_Int
 10709  072C                     _EEPROM_24C1025_Write_Int:	
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10713                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 10714  072C  1283               	bcf	3,5	;RP0=0, select bank0
 10715  072D  00D1               	movwf	EEPROM_24C1025_Write_Int@chip_add
 10716                           
 10717                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 10718  072E  0850               	movf	EEPROM_24C1025_Write_Int@data+1,w
 10719  072F  00D2               	movwf	EEPROM_24C1025_Write_Int@local
 10720                           
 10721                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 10722  0730  084F               	movf	EEPROM_24C1025_Write_Int@data,w
 10723  0731  00D3               	movwf	EEPROM_24C1025_Write_Int@local+1
 10724                           
 10725                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 10726  0732  084E               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 10727  0733  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10728  0734  084D               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 10729  0735  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10730  0736  084C               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 10731  0737  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10732  0738  084B               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 10733  0739  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10734  073A  3002               	movlw	2
 10735  073B  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 10736  073C  3052               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 10737  073D  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10738  073E  0851               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 10739  073F  120A  158A  2E35   	ljmp	_EEPROM_24C1025_Write_Buffer
 10740  0742                     __end_of_EEPROM_24C1025_Write_Int:	
 10741  0742                     __ptext25:	
 10742 ;; *************** function ___fltol *****************
 10743 ;; Defined at:
 10744 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  f1              4   33[BANK0 ] void 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  exp1            1   42[BANK0 ] unsigned char 
 10749 ;;  sign1           1   41[BANK0 ] unsigned char 
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  4   33[BANK0 ] long 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0
 10754 ;; Tracked objects:
 10755 ;;		On entry : 300/0
 10756 ;;		On exit  : 300/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10759 ;;      Params:         0       4       0       0       0
 10760 ;;      Locals:         0       2       0       0       0
 10761 ;;      Temps:          0       4       0       0       0
 10762 ;;      Totals:         0      10       0       0       0
 10763 ;;Total ram usage:       10 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    1
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_Decodify_Command
 10770 ;;		_Save_Log
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function ___fltol
 10776  0742                     ___fltol:	
 10777                           
 10778                           ;incstack = 0
 10779                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10780  0742  1003               	clrc
 10781  0743  0D43               	rlf	___fltol@f1+2,w
 10782  0744  0D44               	rlf	___fltol@f1+3,w
 10783  0745  00CA               	movwf	___fltol@exp1
 10784  0746  084A               	movf	___fltol@exp1,w
 10785  0747  1D03               	btfss	3,2
 10786  0748  2F4E               	goto	l3907
 10787  0749                     l3905:	
 10788  0749  01C1               	clrf	?___fltol
 10789  074A  01C2               	clrf	?___fltol+1
 10790  074B  01C3               	clrf	?___fltol+2
 10791  074C  01C4               	clrf	?___fltol+3
 10792  074D  0008               	return
 10793  074E                     l3907:	
 10794  074E  0841               	movf	___fltol@f1,w
 10795  074F  00C5               	movwf	??___fltol
 10796  0750  0842               	movf	___fltol@f1+1,w
 10797  0751  00C6               	movwf	??___fltol+1
 10798  0752  0843               	movf	___fltol@f1+2,w
 10799  0753  00C7               	movwf	??___fltol+2
 10800  0754  0844               	movf	___fltol@f1+3,w
 10801  0755  00C8               	movwf	??___fltol+3
 10802  0756  301F               	movlw	31
 10803  0757                     u2535:	
 10804  0757  1003               	clrc
 10805  0758  0CC8               	rrf	??___fltol+3,f
 10806  0759  0CC7               	rrf	??___fltol+2,f
 10807  075A  0CC6               	rrf	??___fltol+1,f
 10808  075B  0CC5               	rrf	??___fltol,f
 10809  075C  3EFF               	addlw	-1
 10810  075D  1D03               	skipz
 10811  075E  2F57               	goto	u2535
 10812  075F  0845               	movf	??___fltol,w
 10813  0760  00C9               	movwf	___fltol@sign1
 10814  0761  3096               	movlw	150
 10815  0762  17C3               	bsf	___fltol@f1+2,7
 10816  0763  01C4               	clrf	___fltol@f1+3
 10817  0764  02CA               	subwf	___fltol@exp1,f
 10818  0765  1FCA               	btfss	___fltol@exp1,7
 10819  0766  2F74               	goto	l3925
 10820  0767  084A               	movf	___fltol@exp1,w
 10821  0768  3A80               	xorlw	128
 10822  0769  3E97               	addlw	151
 10823  076A  1C03               	btfss	3,0
 10824  076B  2F49               	goto	l3905
 10825  076C                     l3921:	
 10826  076C  1003               	clrc
 10827  076D  0CC4               	rrf	___fltol@f1+3,f
 10828  076E  0CC3               	rrf	___fltol@f1+2,f
 10829  076F  0CC2               	rrf	___fltol@f1+1,f
 10830  0770  0CC1               	rrf	___fltol@f1,f
 10831  0771  0FCA               	incfsz	___fltol@exp1,f
 10832  0772  2F6C               	goto	l3921
 10833  0773  2F82               	goto	l3933
 10834  0774                     l3925:	
 10835  0774  3020               	movlw	32
 10836  0775  024A               	subwf	___fltol@exp1,w
 10837  0776  1803               	btfsc	3,0
 10838  0777  2F49               	goto	l3905
 10839  0778                     l3931:	
 10840  0778  084A               	movf	___fltol@exp1,w
 10841  0779  1903               	btfsc	3,2
 10842  077A  2F82               	goto	l3933
 10843  077B  1003               	clrc
 10844  077C  0DC1               	rlf	___fltol@f1,f
 10845  077D  0DC2               	rlf	___fltol@f1+1,f
 10846  077E  0DC3               	rlf	___fltol@f1+2,f
 10847  077F  0DC4               	rlf	___fltol@f1+3,f
 10848  0780  03CA               	decf	___fltol@exp1,f
 10849  0781  2F78               	goto	l3931
 10850  0782                     l3933:	
 10851  0782  0849               	movf	___fltol@sign1,w
 10852  0783  1903               	btfsc	3,2
 10853  0784  0008               	return
 10854  0785  09C1               	comf	___fltol@f1,f
 10855  0786  09C2               	comf	___fltol@f1+1,f
 10856  0787  09C3               	comf	___fltol@f1+2,f
 10857  0788  09C4               	comf	___fltol@f1+3,f
 10858  0789  0AC1               	incf	___fltol@f1,f
 10859  078A  1903               	skipnz
 10860  078B  0AC2               	incf	___fltol@f1+1,f
 10861  078C  1903               	skipnz
 10862  078D  0AC3               	incf	___fltol@f1+2,f
 10863  078E  1903               	skipnz
 10864  078F  0AC4               	incf	___fltol@f1+3,f
 10865  0790  0008               	return
 10866  0791                     __end_of___fltol:	
 10867  0791                     PL16:	
 10868  0791  0857               	movf	Save_Log@add_datalog+3,w
 10869  0792  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 10870  0793  0856               	movf	Save_Log@add_datalog+2,w
 10871  0794  00CD               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 10872  0795  0855               	movf	Save_Log@add_datalog+1,w
 10873  0796  00CC               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 10874  0797  0854               	movf	Save_Log@add_datalog,w
 10875  0798  00CB               	movwf	EEPROM_24C1025_Write_Int@mem_add
 10876  0799  1683               	bsf	3,5	;RP0=1, select bank1
 10877  079A  0008               	return
 10878  079B                     __end_ofPL16:	
 10879                           
 10880                           	psect	text60
 10881  07EF                     __ptext60:	
 10882 ;; *************** function _ADC_init *****************
 10883 ;; Defined at:
 10884 ;;		line 10 in file "adc.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, status,2, status,0
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/100
 10895 ;;		On exit  : 300/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10898 ;;      Params:         0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    1
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           
 10913                           ;psect for function _ADC_init
 10914  07EF                     _ADC_init:	
 10915                           
 10916                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 10917                           
 10918                           ;incstack = 0
 10919                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 10920  07EF  30C0               	movlw	192
 10921  07F0  1283               	bcf	3,5	;RP0=0, select bank0
 10922  07F1  1303               	bcf	3,6	;RP1=0, select bank0
 10923  07F2  049F               	iorwf	31,f	;volatile
 10924                           
 10925                           ;adc.c: 12:      ADCON1=0b10000000;
 10926  07F3  3080               	movlw	128
 10927  07F4  1683               	bsf	3,5	;RP0=1, select bank1
 10928  07F5  009F               	movwf	31	;volatile
 10929                           
 10930                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 10931  07F6  179F               	bsf	31,7	;volatile
 10932                           
 10933                           ;adc.c: 14:      ADCON0bits.ADON=1;
 10934  07F7  1283               	bcf	3,5	;RP0=0, select bank0
 10935  07F8  141F               	bsf	31,0	;volatile
 10936  07F9  0008               	return
 10937  07FA                     __end_of_ADC_init:	
 10938                           
 10939                           	psect	text61
 10940  1668                     __ptext61:	
 10941 ;; *************** function _isr *****************
 10942 ;; Defined at:
 10943 ;;		line 29 in file "isr.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;		None
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  tempo           2    4[COMMON] unsigned int 
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 300/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10957 ;;      Params:         0       0       0       0       0
 10958 ;;      Locals:         2       0       0       0       0
 10959 ;;      Temps:          4       0       0       0       0
 10960 ;;      Totals:         6       0       0       0       0
 10961 ;;Total ram usage:        6 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		Interrupt level 1
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _isr
 10972  1668                     _isr:	
 10973                           
 10974                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 10975  1668  188B               	btfsc	11,1	;volatile
 10976                           
 10977                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 10978  1669  108B               	bcf	11,1	;volatile
 10979                           
 10980                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 10981                           
 10982                           ;isr.c: 37:       }
 10983  166A  1C0C               	btfss	12,0	;volatile
 10984  166B  2ECC               	goto	i1l5373
 10985                           
 10986                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 10987  166C  30B1               	movlw	177
 10988  166D  008F               	movwf	15	;volatile
 10989                           
 10990                           ;isr.c: 42:                 TMR1L=0xF3;
 10991  166E  30F3               	movlw	243
 10992  166F  008E               	movwf	14	;volatile
 10993                           
 10994                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 10995  1670  100C               	bcf	12,0	;volatile
 10996                           
 10997                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 10998  1671  1FEB               	btfss	_generic_status,7
 10999  1672  2E75               	goto	i1l5329
 11000                           
 11001                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 11002  1673  13EB               	bcf	_generic_status,7
 11003  1674  0064               	clrwdt	;# 
 11004  1675                     i1l5329:	
 11005                           
 11006                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 11007  1675  300A               	movlw	10
 11008  1676  07F2               	addwf	_Delay_Led_Tmr0,f	;volatile
 11009  1677  1803               	skipnc
 11010  1678  0AF3               	incf	_Delay_Led_Tmr0+1,f	;volatile
 11011                           
 11012                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 11013  1679  3003               	movlw	3
 11014  167A  0273               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 11015  167B  30E8               	movlw	232
 11016  167C  1903               	skipnz
 11017  167D  0272               	subwf	_Delay_Led_Tmr0,w	;volatile
 11018  167E  1C03               	skipc
 11019  167F  2E82               	goto	i1l5333
 11020                           
 11021                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 11022  1680  01F2               	clrf	_Delay_Led_Tmr0	;volatile
 11023  1681  01F3               	clrf	_Delay_Led_Tmr0+1	;volatile
 11024  1682                     i1l5333:	
 11025                           
 11026                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 11027  1682  3001               	movlw	1
 11028  1683  0273               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 11029  1684  30F4               	movlw	244
 11030  1685  1903               	skipnz
 11031  1686  0272               	subwf	_Delay_Led_Tmr0,w	;volatile
 11032  1687  1803               	skipnc
 11033  1688  2E8D               	goto	i1l627
 11034                           
 11035                           ;isr.c: 55:                    PORTBbits.RB7=1;
 11036  1689  1283               	bcf	3,5	;RP0=0, select bank0
 11037  168A  1303               	bcf	3,6	;RP1=0, select bank0
 11038  168B  1786               	bsf	6,7	;volatile
 11039  168C  2E90               	goto	i1l5337
 11040  168D                     i1l627:	
 11041                           ;isr.c: 56:                 else
 11042                           
 11043                           
 11044                           ;isr.c: 57:                    PORTBbits.RB7=0;
 11045  168D  1283               	bcf	3,5	;RP0=0, select bank0
 11046  168E  1303               	bcf	3,6	;RP1=0, select bank0
 11047  168F  1386               	bcf	6,7	;volatile
 11048  1690                     i1l5337:	
 11049                           
 11050                           ;isr.c: 60:                 if(Delay_Led_Usart){
 11051  1690  0870               	movf	_Delay_Led_Usart,w	;volatile
 11052  1691  0471               	iorwf	_Delay_Led_Usart+1,w	;volatile
 11053  1692  1903               	btfsc	3,2
 11054  1693  2E9C               	goto	i1l629
 11055                           
 11056                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 11057  1694  300A               	movlw	10
 11058  1695  02F0               	subwf	_Delay_Led_Usart,f	;volatile
 11059  1696  3000               	movlw	0
 11060  1697  1C03               	skipc
 11061  1698  03F1               	decf	_Delay_Led_Usart+1,f	;volatile
 11062  1699  02F1               	subwf	_Delay_Led_Usart+1,f	;volatile
 11063                           
 11064                           ;isr.c: 62:                    PORTBbits.RB6=1;
 11065  169A  1706               	bsf	6,6	;volatile
 11066                           
 11067                           ;isr.c: 63:                    }
 11068  169B  2E9D               	goto	i1l5343
 11069  169C                     i1l629:	
 11070                           ;isr.c: 64:                 else{
 11071                           
 11072                           
 11073                           ;isr.c: 65:                    PORTBbits.RB6=0;
 11074  169C  1306               	bcf	6,6	;volatile
 11075  169D                     i1l5343:	
 11076                           
 11077                           ;isr.c: 68:                 if(Delay_Led_Memory){
 11078  169D  0874               	movf	_Delay_Led_Memory,w	;volatile
 11079  169E  0475               	iorwf	_Delay_Led_Memory+1,w	;volatile
 11080  169F  1903               	btfsc	3,2
 11081  16A0  2EA9               	goto	i1l631
 11082                           
 11083                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 11084  16A1  300A               	movlw	10
 11085  16A2  02F4               	subwf	_Delay_Led_Memory,f	;volatile
 11086  16A3  3000               	movlw	0
 11087  16A4  1C03               	skipc
 11088  16A5  03F5               	decf	_Delay_Led_Memory+1,f	;volatile
 11089  16A6  02F5               	subwf	_Delay_Led_Memory+1,f	;volatile
 11090                           
 11091                           ;isr.c: 70:                    PORTBbits.RB5=1;
 11092  16A7  1686               	bsf	6,5	;volatile
 11093                           
 11094                           ;isr.c: 71:                    }
 11095  16A8  2EAA               	goto	i1l5349
 11096  16A9                     i1l631:	
 11097                           ;isr.c: 72:                 else{
 11098                           
 11099                           
 11100                           ;isr.c: 73:                    PORTBbits.RB5=0;
 11101  16A9  1286               	bcf	6,5	;volatile
 11102  16AA                     i1l5349:	
 11103                           
 11104                           ;isr.c: 77:                 tempodecorrido+=10;
 11105  16AA  300A               	movlw	10
 11106  16AB  1683               	bsf	3,5	;RP0=1, select bank1
 11107  16AC  07D5               	addwf	_tempodecorrido^(0+128),f	;volatile
 11108  16AD  1803               	skipnc
 11109  16AE  0AD6               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 11110                           
 11111                           ;isr.c: 78:                 milisegundo+=10;
 11112  16AF  07D7               	addwf	_milisegundo^(0+128),f	;volatile
 11113  16B0  1803               	skipnc
 11114  16B1  0AD8               	incf	(_milisegundo+1)^(0+128),f	;volatile
 11115                           
 11116                           ;isr.c: 79:                 if(milisegundo==1000){
 11117  16B2  30E8               	movlw	232
 11118  16B3  0657               	xorwf	_milisegundo^(0+128),w	;volatile
 11119  16B4  3003               	movlw	3
 11120  16B5  1903               	skipnz
 11121  16B6  0658               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 11122  16B7  1D03               	btfss	3,2
 11123  16B8  2ECC               	goto	i1l5373
 11124                           
 11125                           ;isr.c: 80:                    milisegundo=0;
 11126  16B9  01D7               	clrf	_milisegundo^(0+128)	;volatile
 11127  16BA  01D8               	clrf	(_milisegundo+1)^(0+128)	;volatile
 11128                           
 11129                           ;isr.c: 81:                    segundo++;
 11130  16BB  0ADB               	incf	_segundo^(0+128),f	;volatile
 11131                           
 11132                           ;isr.c: 88:                    if(segundo==60){
 11133  16BC  303C               	movlw	60
 11134  16BD  065B               	xorwf	_segundo^(0+128),w	;volatile
 11135  16BE  1D03               	btfss	3,2
 11136  16BF  2ECC               	goto	i1l5373
 11137                           
 11138                           ;isr.c: 89:                       segundo=0;
 11139  16C0  01DB               	clrf	_segundo^(0+128)	;volatile
 11140                           
 11141                           ;isr.c: 90:                       minuto++;
 11142  16C1  0AD9               	incf	_minuto^(0+128),f	;volatile
 11143                           
 11144                           ;isr.c: 91:                       if(minuto==60){
 11145  16C2  303C               	movlw	60
 11146  16C3  0659               	xorwf	_minuto^(0+128),w	;volatile
 11147  16C4  1D03               	btfss	3,2
 11148  16C5  2ECC               	goto	i1l5373
 11149                           
 11150                           ;isr.c: 92:                          minuto=0;
 11151  16C6  01D9               	clrf	_minuto^(0+128)	;volatile
 11152                           
 11153                           ;isr.c: 93:                          hora++;
 11154  16C7  0ADA               	incf	_hora^(0+128),f	;volatile
 11155                           
 11156                           ;isr.c: 94:                          if(hora==24){
 11157  16C8  3018               	movlw	24
 11158  16C9  065A               	xorwf	_hora^(0+128),w	;volatile
 11159  16CA  1903               	btfsc	3,2
 11160                           
 11161                           ;isr.c: 95:                             hora=0;
 11162  16CB  01DA               	clrf	_hora^(0+128)	;volatile
 11163  16CC                     i1l5373:	
 11164                           ;isr.c: 99:                 }
 11165                           
 11166                           
 11167                           ;isr.c: 104:     if(PIR1bits.RCIF)
 11168  16CC  1283               	bcf	3,5	;RP0=0, select bank0
 11169  16CD  1E8C               	btfss	12,5	;volatile
 11170  16CE  2F19               	goto	i1l645
 11171  16CF  301E               	movlw	30
 11172                           
 11173                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 11174  16D0  146B               	bsf	_generic_status,0
 11175                           
 11176                           ;isr.c: 109:         tempo=30;
 11177  16D1  00FA               	movwf	isr@tempo
 11178  16D2  01FB               	clrf	isr@tempo+1
 11179                           
 11180                           ;isr.c: 110:         count=0;
 11181  16D3  01E3               	clrf	_count	;volatile
 11182  16D4  01E4               	clrf	_count+1	;volatile
 11183                           
 11184                           ;isr.c: 111:         pointer=usart_buffer;
 11185  16D5  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 11186  16D6  00E7               	movwf	_pointer
 11187  16D7                     i1l5393:	
 11188                           ;isr.c: 112:         while(tempo)
 11189                           
 11190                           
 11191                           ;isr.c: 112:         while(tempo)
 11192  16D7  087A               	movf	isr@tempo,w
 11193  16D8  047B               	iorwf	isr@tempo+1,w
 11194  16D9  1903               	btfsc	3,2
 11195  16DA  2F00               	goto	i1l5395
 11196                           
 11197                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 11198  16DB  1283               	bcf	3,5	;RP0=0, select bank0
 11199  16DC  1303               	bcf	3,6	;RP1=0, select bank0
 11200  16DD  1E8C               	btfss	12,5	;volatile
 11201  16DE  2EF9               	goto	i1l5391
 11202                           
 11203                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 11204  16DF  0867               	movf	_pointer,w
 11205  16E0  0084               	movwf	4
 11206  16E1  081A               	movf	26,w	;volatile
 11207  16E2  1783               	bsf	3,7	;select IRP bank2
 11208  16E3  0080               	movwf	0
 11209                           
 11210                           ;isr.c: 118:                 if(count<32+10 -1)
 11211  16E4  0864               	movf	_count+1,w	;volatile
 11212  16E5  3A80               	xorlw	128
 11213  16E6  00FF               	movwf	127
 11214  16E7  3080               	movlw	128
 11215  16E8  027F               	subwf	127,w
 11216  16E9  1D03               	skipz
 11217  16EA  2EED               	goto	u430_25
 11218  16EB  3029               	movlw	41
 11219  16EC  0263               	subwf	_count,w	;volatile
 11220  16ED                     u430_25:	
 11221  16ED  1803               	skipnc
 11222  16EE  2EF5               	goto	i1l5389
 11223                           
 11224                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 11225  16EF  1283               	bcf	3,5	;RP0=0, select bank0
 11226  16F0  1303               	bcf	3,6	;RP1=0, select bank0
 11227  16F1  0AE3               	incf	_count,f	;volatile
 11228  16F2  1903               	skipnz
 11229  16F3  0AE4               	incf	_count+1,f	;volatile
 11230                           
 11231                           ;isr.c: 121:                    pointer++;
 11232  16F4  0AE7               	incf	_pointer,f
 11233  16F5                     i1l5389:	
 11234                           
 11235                           ;isr.c: 123:                 tempo=30;
 11236  16F5  301E               	movlw	30
 11237  16F6  00FA               	movwf	isr@tempo
 11238  16F7  01FB               	clrf	isr@tempo+1
 11239                           
 11240                           ;isr.c: 124:             }
 11241  16F8  2ED7               	goto	i1l5393
 11242  16F9                     i1l5391:	
 11243                           
 11244                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 11245  16F9  3001               	movlw	1
 11246  16FA  02FA               	subwf	isr@tempo,f
 11247  16FB  3000               	movlw	0
 11248  16FC  1C03               	skipc
 11249  16FD  03FB               	decf	isr@tempo+1,f
 11250  16FE  02FB               	subwf	isr@tempo+1,f
 11251  16FF  2ED7               	goto	i1l5393
 11252  1700                     i1l5395:	
 11253                           
 11254                           ;isr.c: 131:         (*pointer)=0;
 11255  1700  1283               	bcf	3,5	;RP0=0, select bank0
 11256  1701  1303               	bcf	3,6	;RP1=0, select bank0
 11257  1702  0867               	movf	_pointer,w
 11258  1703  0084               	movwf	4
 11259  1704  1783               	bsf	3,7	;select IRP bank2
 11260  1705  0180               	clrf	0
 11261                           
 11262                           ;isr.c: 133:         if(RCSTAbits.OERR){
 11263  1706  1C98               	btfss	24,1	;volatile
 11264  1707  2F19               	goto	i1l645
 11265                           
 11266                           ;isr.c: 134:            CREN=0;
 11267  1708  1218               	bcf	24,4	;volatile
 11268                           
 11269                           ;isr.c: 135:            CREN=1;
 11270  1709  1618               	bsf	24,4	;volatile
 11271                           
 11272                           ;isr.c: 136:            tempo=RCREG;
 11273  170A  081A               	movf	26,w	;volatile
 11274  170B  00FA               	movwf	isr@tempo
 11275  170C  01FB               	clrf	isr@tempo+1
 11276                           
 11277                           ;isr.c: 137:            tempo=RCREG;
 11278  170D  081A               	movf	26,w	;volatile
 11279  170E  00FA               	movwf	isr@tempo
 11280  170F  01FB               	clrf	isr@tempo+1
 11281                           
 11282                           ;isr.c: 138:            tempo=RCREG;
 11283  1710  081A               	movf	26,w	;volatile
 11284  1711  00FA               	movwf	isr@tempo
 11285  1712  01FB               	clrf	isr@tempo+1
 11286                           
 11287                           ;isr.c: 139:            usart_buffer[0]=0;
 11288  1713  1683               	bsf	3,5	;RP0=1, select bank3
 11289  1714  1703               	bsf	3,6	;RP1=1, select bank3
 11290  1715  0190               	clrf	_usart_buffer^(0+384)	;volatile
 11291                           
 11292                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 11293  1716  1283               	bcf	3,5	;RP0=0, select bank0
 11294  1717  1303               	bcf	3,6	;RP1=0, select bank0
 11295  1718  14EB               	bsf	_generic_status,1
 11296  1719                     i1l645:	
 11297  1719  0879               	movf	??_isr+3,w
 11298  171A  00FF               	movwf	127
 11299  171B  0878               	movf	??_isr+2,w
 11300  171C  008A               	movwf	10
 11301  171D  0877               	movf	??_isr+1,w
 11302  171E  0084               	movwf	4
 11303  171F  0E76               	swapf	??_isr^(0+4294967168),w
 11304  1720  0083               	movwf	3
 11305  1721  0EFE               	swapf	126,f
 11306  1722  0E7E               	swapf	126,w
 11307  1723  0009               	retfie
 11308  1724                     __end_of_isr:	
 11309  007E                     btemp	set	126	;btemp
 11310  007E                     wtemp0	set	126
 11311                           
 11312                           	psect	intentry
 11313  0004                     __pintentry:	
 11314                           ;incstack = 0
 11315                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 11316                           
 11317  0004                     interrupt_function:	
 11318  007E                     saved_w	set	btemp
 11319  0004  00FE               	movwf	btemp
 11320  0005  0E03               	swapf	3,w
 11321  0006  00F6               	movwf	??_isr
 11322  0007  0804               	movf	4,w
 11323  0008  00F7               	movwf	??_isr+1
 11324  0009  080A               	movf	10,w
 11325  000A  00F8               	movwf	??_isr+2
 11326  000B  1283               	bcf	3,5	;RP0=0, select bank0
 11327  000C  1303               	bcf	3,6	;RP1=0, select bank0
 11328  000D  087F               	movf	btemp+1,w
 11329  000E  00F9               	movwf	??_isr+3
 11330  000F  160A  118A  2E68   	ljmp	_isr


Data Sizes:
    Strings     15
    Constant    44
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     67      76
    BANK1            80     45      76
    BANK3            96      0      90
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK3[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(1) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK3[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK1[10]), usart_protocol(BANK1[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mediaLeituraPt100Umidadde
    _mediaLeituraPt100Umidadde->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  127855
                                             62 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           11    11      0   17774
                                             51 BANK0     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3773
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3528
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1784
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2067
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0  107465
                                             59 BANK0      2     2      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     602
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     602
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   13652
                                             52 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             33 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    5134
                                              8 BANK0     25    17      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3345
                                             52 BANK0      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     250
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    6     2      4    2822
                                             46 BANK0      6     2      4
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             50 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3050
                                             50 BANK0      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             46 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                             43 BANK0      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     875
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     979
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     5      3     229
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                             8     3      5    6284
                                             10 BANK0      8     3      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7264
                                             22 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             10     5      5    7344
                                             10 BANK0     10     5      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    8234
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    8200
                                             22 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     6      7    7974
                                             10 BANK0     12     5      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     955
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8160
                                             52 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    7909
                                             43 BANK0      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         12     6      6    6982
                                             10 BANK0     12     6      6
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     578
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4911
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      FE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5A       9       93.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      FE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 21 17:12:55 2020

                              _USART_putc 0BD3                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 0046                              ___fldiv@bexp 0045  
                                       pc 0002                              ___fldiv@sign 003E  
                                      PL2 035F                                        PL4 0379  
                                      PL6 0382                                        PL8 0393  
                                      l69 0CBD           EEPROM_24C1025_Read_Buffer@range 0034  
        EEPROM_24C1025_Write_Str@chip_add 002F                                        fsr 0004  
                           _USART_put_int 0F82                  Decodify_Command@tempchar 00C7  
                     __Umul8_16@word_mpld 0025                                       PL10 03A2  
                                     PL20 03B0                                       PL12 0FA1  
                                     PL30 0FCB                                       PL22 0FBC  
                                     PL14 0FA8                                       PL40 0FDF  
                                     PL32 0FD2                                       PL24 03B9  
                                     PL16 0791                                       PL50 058F  
                                     PL42 0FE4                                       PL34 0FD8  
                                     PL26 0586                                       PL18 0FB2  
                                     PL52 15B1                                       PL44 0FEA  
                                     PL36 03C2                                       PL28 0FC5  
                                     PL46 0FF0                                       PL38 03C9  
                                     PL48 03D0              PROCULUS_VP_Write_String@text 0056  
                                     l421 0B3E                                       l182 0F5D  
                                     l502 157C                                       l423 0B97  
                                     l512 14AD                                       l417 0B33  
                                     l507 15A1                                       l508 15A2  
                                     l534 147D                                       l800 03F1  
                                     l478 03D7                                       l863 0BD8  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0033  
                Decodify_Command@sizedata 00C8                                       _isr 1668  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 15B1                          _ADC_Media_10bits 0037  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0035  
                            ___flmul@bexp 0036                    PROCULUS_VP_Write@vetor 0050  
            ?_EEPROM_24C1025_Write_Buffer 002A                              ___flmul@sign 0034  
                            ___flmul@temp 003F                              ___flmul@prod 003B  
 __end_of_PROCULUS_Control_Register_Write 0833  __size_of_PROCULUS_Control_Register_Write 002A  
       ??_PROCULUS_Control_Register_Write 004F          ?_PROCULUS_Control_Register_Write 004E  
         _PROCULUS_Control_Register_Write 0809                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004A                                      l1314 057F  
                                    l1323 05A8                                      l1420 0314  
                                    l1324 05A6                                      l1407 02E2  
                                    l1327 05BF                                      l1271 0447  
                                    l1360 0168                                      l1352 06AD  
                                    l1328 05BD                                      l1280 04A1  
                                    l1272 0445                                      l1281 04A3  
                                    l1434 160C                                      l1266 042B  
                                    l1363 0181                                      l1267 0429  
                                    l1364 017F                                      l1381 029F  
                                    l4101 056F                                      l1277 04AC  
                                    l4013 0471                                      l1294 0535  
                                    l1359 016A                                      l1279 049A  
                                    l1288 04CF                                      l4113 0580  
                                    l1289 04D1                                      l1299 054A  
                                    l4035 04B2                                      l3501 0F30  
                                    l4109 057B                                      l4029 04A6  
                                    l4065 053F                                      l4049 04D5  
                                    l3507 0F34                                      l4251 02ED  
                                    l4059 0527                                      l6101 0D44  
                                    l6021 0C99                                      l6005 0C23  
                                    l4085 055A                                      l4077 054F  
                                    l6023 0C9A                                      l6007 0C69  
                                    l4263 0312                                      l4255 02EF  
                                    l4247 02DA                                      l4079 0551  
                                    l4265 0308                                      l4257 02F8  
                                    l4089 055C                                      l6019 0C96  
                                    l3635 13B2                                      l4259 0303  
                                    l5501 0EC6                                      l6125 06B8  
                                    l3813 1587                                      l4541 1542  
                                    l3629 13B0                                      l4277 032A  
                                    l3815 158A                                      l6223 0049  
                                    l6065 0CFE                                      l3921 076C  
                                    l3905 0749                                      l4609 13CE  
                                    l4801 0637                                      l5523 0EEE  
                                    l6067 0D01                                      l6091 0D25  
                                    l6139 1493                                      l6171 1573  
                                    l5611 02B0                                      l3931 0778  
                                    l3907 074E                                      l5603 1663  
                                    l4635 0BB5                                      l6411 08DC  
                                    l6243 1509                                      l6315 146D  
                                    l4803 0600                                      l5517 0EE0  
                                    l5525 0E76                                      l5461 0E5C  
                                    l6069 0D02                                      l3933 0782  
                                    l3925 0774                                      l4637 0BBC  
                                    l4629 136C                                      l4821 0652  
                                    l4805 0639                                      l5527 0EF0  
                                    l5711 0E21                                      l5615 02B8  
                                    l6159 140F                                      l4639 0BC0  
                                    l6503 0A46                                      l6423 0906  
                                    l6255 1534                                      l3863 0337  
                                    l4831 0667                                      l5457 0E58  
                                    l5705 0E0D                                      l5713 0DA0  
                                    l5633 0D79                                      l6169 1562  
                                    l4569 07CD                                      l6193 0F76  
                                    l6441 093C                                      l6433 0926  
                                    l6329 1474                                      l4841 067B  
                                    l5459 0E5B                                      l5715 0E23  
                                    l5635 0D7C                                      l6099 0D3D  
                                    l5555 0F82                                      l5571 1628  
                                    l5731 1438                                      l5723 1415  
                                    l6523 0AAB                                      l6515 0A75  
                                    l6427 0916                                      l6419 08FD  
                                    l4827 0665                                      l4819 063F  
                                    l6347 0090                                      l5549 0F29  
                                    l5637 0D7D                                      l5813 018F  
                                    l6533 0AC5                                      l6509 0A68  
                                    l6453 0960                                      l4685 03F6  
                                    l4853 06A5                                      l6365 00D0  
                                    l6357 00BA                                      l5583 163F  
                                    l6551 0AFA                                      l6543 0ADF  
                                    l6471 09AA                                      l6447 0956  
                                    l6391 0875                                      l6295 1453  
                                    l4847 068F                                      l3983 0453  
                                    l6711 17F5                                      l5497 0EC2  
                                    l5681 0DE9                                      l5761 081D  
                                    l5737 13FA                                      l5809 0185  
                                    l5729 1419                                      l5905 15D2  
                                    l6465 098B                                      l4689 03F9  
                                    l4777 05E4                                      l4769 05DC  
                                    l5499 0EC5                                      l5683 0DEA  
                                    l5763 082D                                      l5739 1406  
                                    l5595 1650                                      l5915 15EA  
                                    l6563 0B0B                                      l6491 0A12  
                                    l6483 09E7                                      l6459 0971  
                                    l6395 087F                                      l4859 06AE  
                                    l4795 0618                                      l6379 0146  
                                    ?_isr 0076                                      l5941 0C01  
                                    l5765 0833                                      l5861 0240  
                                    l6581 0B36                                      l6557 0B02  
                                    l6477 09CA                                      l5679 0DE6  
                                    l5943 0C04                                      l5871 0255  
                                    l6575 0B29                                      l6399 088B  
                                    l5945 0C05                                      l5777 084E  
                                    l5881 0269                                      l6737 0B4A  
                                    l6569 0B19                                      l6497 0A2E  
                                    l6593 0B41                                      l5779 085E  
                                    l5891 0292                                      l5867 0253  
                                    l5885 027D                                      l5797 016E  
                                    l6669 17A5                                      l6695 17C9  
                                    l6599 1724                                      l5999 0C59  
                                    _BETA 1034                                      STR_1 103C  
                            __CFG_WDTE$ON 0000                                      STR_2 1048  
                                    STR_3 1047                                      STR_4 1049  
                                    STR_5 1047                                      STR_6 1049  
                                    STR_7 1047                                      STR_8 1044  
                                    _CREN 00C4                                      u2153 0F46  
                                    u2255 13B8                                      u2700 0491  
                                    u5013 0CFC                                      u2710 0492  
                                    u2535 0757                                      u4410 0F26  
                                    u5043 06E0                                      u2483 0349  
                                    u4405 0E83                                      u5125 151C  
                                    u2813 04E7                                      u4353 0E47  
                                    u5145 14D6                                      u4363 0E56  
                                    u3555 07D9                                      u4373 0E95  
                                    u4533 0D68                                      u4543 0D77  
                                    u5407 155A                                      u4455 1631  
                                    u3815 0626                                      u2695 0485  
                                    u4393 0EC0                                      u4553 0DB4  
                                    u5417 15AB                                      u3585 13D7  
                                    u5427 14BF                                      u3915 0684  
                                    _RCEN 048B                                      u4573 0DE4  
                                    u5437 0D50                                      u3925 069A  
                                    u5447 0E2F                                      u4495 1656  
                                    u5457 0F4F                                      u4913 0BF0  
                                    u5377 172C                                      u4923 0BFF  
                                    u5387 0351                                      u4933 0C39  
                                    u5397 13C0                                      u4855 0272  
                                    u4865 0288                                      u4973 0C85  
                                    u4983 0C94                                      u4993 0CCD  
                                    _RSEN 0489                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0054                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 0F68  
                                    _main 1724                                      _hora 00DA  
                                    _itoa 0F68         __size_of_EEPROM_24C1025_Write_Int 0016  
                                    btemp 007E                                      _utoa 15CD  
       __size_of_EEPROM_24C1025_Write_Str 0094                 ?_EEPROM_24C1025_Write_Int 004B  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 002A  
             __size_of_EEPROM_Read_String 0013                                      start 0012  
                        __end_of_ADC_init 07FA                          _BALANCE_RESISTOR 1038  
                         ___fldiv@new_exp 003F        EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                   ??_isr 0076                          ?_I2C_Master_Init 002D  
                        ?_I2C_Master_Read 0020                          ?_I2C_Master_Wait 0076  
                        ?_I2C_Master_Stop 0076                            ?_USART_put_int 004B  
                           ___fltol@sign1 0049                           __end_of___fladd 0586  
                                   ?_main 0076                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 06B2  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 02AA                           __end_of___flsub 0417  
                         __end_of___fltol 0791                                     _ANSEL 0188  
                         __end_of___lldiv 153D                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 1644  
                         __end_of___lwmod 1668                                     i1l631 16A9  
                                   i1l627 168D                                     i1l645 1719  
                                   i1l629 169C                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 003A                                     _TRISE 0089  
                                   _TXREG 0019                     ADC_Media_10bits@canal 0033  
                         __end_of_captura 03E3                             __CFG_PWRTE$ON 0000  
                            _usart_buffer 0190                     ADC_Media_10bits@value 0034  
               EEPROM_Read_Integer@result 0028                                     _canal 006A  
            __size_of_EEPROM_Read_Integer 001A                                     _count 0063  
           ??_EEPROM_24C1025_Write_Buffer 0030        __size_of_EEPROM_24C1025_Write_Byte 0010  
                                   _texto 01DA                ?_EEPROM_24C1025_Write_Byte 0036  
                                   pclath 000A                                     utoa@c 002D  
                                   utoa@v 002B                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0036  
                            __end_of_BETA 1038                   __size_of_PROCULUS_Delay 001A  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0010  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 0054                               ?_USART_putc 0076  
                            __end_of_main 1800                              __end_of_itoa 0F82  
                            __end_of_utoa 161A                            Send_To_MB@size 0021  
                        _USART_put_buffer 13CA                  __end_of_EEPROM_Read_Byte 14C8  
                                  ??_main 005E                                    ??_itoa 0033  
                        __end_of_Save_Log 072C                                    ??_utoa 002B  
                        _USART_put_string 1415                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003A  
                       ?_I2C_Master_Start 0076                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0054                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0B98  
                   EEPROM_Write_Integer@i 002B                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1000                mediaLeituraPt100Umidadde@i 0059  
                                  i1l5333 1682                                    i1l5343 169D  
                                  i1l5337 1690                                    i1l5329 1675  
                                  i1l5349 16AA                                    i1l5373 16CC  
                                  i1l5391 16F9                                    i1l5393 16D7  
                                  i1l5395 1700                                    i1l5389 16F5  
                                  u430_25 16ED         __end_of_EEPROM_24C1025_Write_Byte 0FA1  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 0054  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 0057  
                        __end_of___xxtofl 0333                        PROCULUS_VP_Write@i 0053  
                __end_of_Decodify_Command 0B98                  ?_EEPROM_24C1025_Read_Int 0036  
                ?_EEPROM_24C1025_Read_Str 002A                  _I2C_Master_RepeatedStart 0F65  
              ?_mediaLeituraPt100Umidadde 0076      __size_of_EEPROM_24C1025_Write_Buffer 00CA  
                               ??___fladd 003F                                 ??___fldiv 0036  
                               ??___flmul 0030                                 ??___flsub 0053  
                               ??___fltol 0045                           ??_USART_put_int 004D  
                               ??___lldiv 0028                                    _header 0065  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 01BA                         _USART_to_Protocol 079B  
                         USART_putc@value 0020         EEPROM_24C1025_Read_Buffer@cnt_103 0032  
                                  _minuto 00D9                                 ??_captura 0022  
                      ?_USART_to_Protocol 0076              Decodify_Command@add_24LCxxxx 00C9  
                                  _strcat 0BB3                                    _strcpy 136A  
                                  _strlen 13F6         EEPROM_24C1025_Read_Buffer@mem_add 002A  
        __end_of_EEPROM_24C1025_Read_Byte 1396                        __size_of__Umul8_16 001B  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 003B  
                               ?_ADC_init 0076            mediaLeituraPt100Umidadde@canal 0058  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                     __size_of_USART_putc 000E                              ___xxtofl@arg 002A  
                            ___xxtofl@exp 0029                              ___xxtofl@val 0020  
                        __end_oflog@coeff 1034                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 004E                                ___fltol@f1 0041  
                            _Board_Number 0069                  __end_of_ADC_Media_10bits 007C  
                          __pcstackCOMMON 0076                  __size_of_PROCULUS_Buzzer 0016  
               __end_of_USART_to_Protocol 07EF                     USART_put_string@vetor 0021  
                              __end_ofPL2 0379                                __end_ofPL4 0382  
                              __end_ofPL6 0393                                __end_ofPL8 03A2  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0023  
                __size_of_my_delay_ms_WDT 002D                            _OPTION_REGbits 0081  
                __end_of_BALANCE_RESISTOR 103C          __end_of_EEPROM_24C1025_Write_Int 0742  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 0C75                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0025                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1577  
         __end_of_EEPROM_24C1025_Fill_All 06E3                               ?_Send_To_MB 0076  
                  __size_of_Send_Reply_OK 0006                                __pbssBANK0 0063  
                              __pbssBANK1 00CD                                __pbssBANK3 0190  
         __end_of_EEPROM_24C1025_Read_Int 13B0           __end_of_EEPROM_24C1025_Read_Str 0D56  
                ?_Package_Usart_is_for_me 0076                                 ?_Save_Log 0054  
                          _PROCULUS_Delay 13B0                         __end_of__Umul8_16 02C5  
                              __pmaintext 1724                       Save_Log@add_datalog 0054  
                     _EEPROM_Read_Integer 148E                PROCULUS_Show_Screen@screen 0052  
                              __pintentry 0004                      _PROCULUS_Show_Screen 0FF6  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020                                 ?___xxtofl 0020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00BE  
             EEPROM_24C1025_Read_Int@data 003B                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 13F6                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 137F  
                              __stringtab 1000                       PROCULUS_VP_Write@vp 004E  
             ??_EEPROM_24C1025_Write_Byte 003B                  __end_of_USART_put_buffer 13E6  
              __end_of_EEPROM_Read_String 148E                    __end_of_PROCULUS_Delay 13CA  
                __end_of_USART_put_string 1442                      __size_of_my_delay_ms 002C  
                              ??_Save_Log 0058                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0033  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 0054  
             PROCULUS_Buzzer@time_ms_x_10 0052                                   ___fladd 0417  
                                 ___fldiv 0594                  EEPROM_Write_Integer@addr 0029  
                                 ___flmul 0156                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 03FB                                   ___fltol 0742  
                                 ___lldiv 14F5                                   ___lwdiv 161A  
                                 ___lwmod 1644                             _Send_Reply_OK 140F  
                     __size_of_Send_To_MB 001B                     ?_PROCULUS_Show_Screen 0052  
                                 _captura 03D6                                   __ptext1 007C  
                                 __ptext2 03FB                                   __ptext3 0417  
                                 __ptext4 0594                                   __ptext5 03E3  
                                 __ptext6 0037                                   __ptext7 0333  
                                 __ptext8 03D6                                   __ptext9 02C5  
                       ??_PROCULUS_Buzzer 0054                                   _destino 0068  
                       ?_EEPROM_Read_Byte 0076                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0019  
                            __size_of_isr 00BC                                ??___xxtofl 0024  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 00DB  
                __size_of_I2C_Master_Init 002D                  __size_of_I2C_Master_Read 0022  
                          _usart_protocol 00DC                     ??_EEPROM_Read_Integer 0026  
                __size_of_I2C_Master_Wait 0008                  __size_of_I2C_Master_Stop 0003  
           EEPROM_24C1025_Write_Int@local 0052                                   _pointer 0067  
           EEPROM_24C1025_Write_Byte@data 003A                                   clrloop0 0802  
                      __end_of_USART_init 147B           __end_of_Package_Usart_is_for_me 03FB  
                      __end_of_USART_putc 0BE1                         ADC_Media_10bits@i 0036  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 072C  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 0BE1  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0035                 __size_of_I2C_Master_Start 0006  
               __size_of_I2C_Master_Write 0006                         ?_Decodify_Command 0076  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002C  
                      ??_Decodify_Command 005B                                 _RCSTAbits 0018  
             ??_mediaLeituraPt100Umidadde 0053                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0076  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 0F91  
                                 utoa@val 0027           mediaLeituraPt100Umidadde@tensao 0054  
        __size_of_EEPROM_24C1025_Fill_All 0031                                   strlen@s 0020  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 0074              ??_EEPROM_24C1025_Read_Buffer 0031  
           EEPROM_24C1025_Write_Str@range 0030                               ___fladd@grs 004A  
        __size_of_EEPROM_24C1025_Read_Int 001A          __size_of_EEPROM_24C1025_Read_Str 00E1  
                           ___xxtofl@sign 0028       __end_of_EEPROM_24C1025_Write_Buffer 0EFF  
             _EEPROM_24C1025_Write_Buffer 0E35                               ___fldiv@grs 0041  
                             ___fldiv@rem 003A      PROCULUS_Control_Register_Write@vetor 0050  
        EEPROM_24C1025_Write_Buffer@count 0032           EEPROM_24C1025_Write_Int@mem_add 004B  
        EEPROM_24C1025_Write_Buffer@range 0034                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00C1                     PROCULUS_VP_Write@size 0051  
         EEPROM_24C1025_Read_Str@chip_add 0031                               ___flmul@grs 0037  
                _PROCULUS_VP_Write_String 13E6                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00DF                         ?_ADC_Media_10bits 002E  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0054  
                      ??_ADC_Media_10bits 0032                     __end_of_USART_put_int 0F91  
                             _BAUDCTLbits 0187                            __end_of_strcat 0BD3  
                          __end_of_strcpy 137F                            __end_of_strlen 140F  
                             __end_ofPL10 03B0                               __end_ofPL20 03B9  
                             __end_ofPL12 0FA8                               __end_ofPL30 0FD2  
                             __end_ofPL22 0FC5                               __end_ofPL14 0FB2  
                             __end_ofPL40 0FE4                               __end_ofPL32 0FD8  
                             __end_ofPL24 03C2                               __end_ofPL16 079B  
                             __end_ofPL50 0594                               __end_ofPL42 0FEA  
                             __end_ofPL34 0FDF                               __end_ofPL26 058F  
                             __end_ofPL18 0FBC                               __end_ofPL52 15B7  
                             __end_ofPL44 0FF0                               __end_ofPL36 03C9  
                             __end_ofPL28 0FCB                               __end_ofPL46 0FF6  
                             __end_ofPL38 03D0                               __end_ofPL48 03D6  
                     start_initialization 0015                 _mediaLeituraPt100Umidadde 007C  
                             __end_of_isr 1724                               USART_init@i 0024  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1560  
        EEPROM_24C1025_Write_Int@chip_add 0051                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0027  
                         ??_Send_Reply_OK 0025                         __size_of_Save_Log 0049  
                               __Umul8_16 02AA             mediaLeituraPt100Umidadde@Temp 005A  
                      __end_of_Send_To_MB 0BB3          __size_of_Package_Usart_is_for_me 0018  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 003A  
      EEPROM_24C1025_Write_Buffer@mem_add 002A                                 ___fladd@a 003B  
                               ___fladd@b 0037          EEPROM_24C1025_Write_Byte@mem_add 0036  
                               ___fldiv@a 002E                                 ___fldiv@b 0032  
                               ___flmul@a 002C                                 ___flmul@b 0028  
                             __pbssCOMMON 0070                                 ___flsub@a 004B  
                               ___flsub@b 004F                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                       _PROCULUS_VP_Write 0833                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 004E                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0017  
                        _I2C_Master_Start 0F05                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0EFF                       ??_PROCULUS_VP_Write 0052  
                          _tempodecorrido 00D5                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 15B7                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 0037                                  ?___fldiv 002E  
                 _EEPROM_24C1025_Fill_All 06B2                                  ?___flmul 0028  
                                ?___flsub 004B                                  ?___fltol 0041  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 147B                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 0E35  
              _EEPROM_24C1025_Read_Buffer 0D56                                  ?_captura 0020  
                               __pstrings 1000                           _my_delay_ms_WDT 0F30  
                 _EEPROM_24C1025_Read_Int 1396                   _EEPROM_24C1025_Read_Str 0C75  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0051  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 0864                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 07EF                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0035  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0020  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 0801  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0051                    Decodify_Command@OutPut 00C3  
                         _Delay_Led_Usart 0070              EEPROM_24C1025_Read_Byte@data 003B  
             __end_of_EEPROM_Read_Integer 14A8                                _ADCON0bits 001F  
                             __stringbase 100F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0334                      _EEPROM_Write_Integer 153D  
          EEPROM_24C1025_Read_Int@mem_add 0036                                 main@reset 0061  
              ??_PROCULUS_VP_Write_String 0057                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 15CD        __size_of_mediaLeituraPt100Umidadde 00DA  
                          _generic_status 006B                                _EECON1bits 018C  
                                _Save_Log 06E3                 ??_EEPROM_24C1025_Fill_All 0056  
                     __end_of_my_delay_ms 035F              EEPROM_24C1025_Read_Str@range 0032  
            EEPROM_24C1025_Read_Str@texto 002E                                  _Umidade1 00CD  
                 __end_of_my_delay_ms_WDT 0F5D                              my_delay_ms@i 0026  
                             ??__Umul8_16 0023         __size_of_I2C_Master_RepeatedStart 0003  
                        __size_of___fladd 016F                 ??_EEPROM_24C1025_Read_Int 003A  
                 _Package_Usart_is_for_me 03E3                          __size_of___fldiv 011E  
               ??_EEPROM_24C1025_Read_Str 002F                          __size_of___flmul 0154  
               ?_I2C_Master_RepeatedStart 0076                          __size_of___flsub 001C  
                        __size_of___fltol 004F                          __size_of___lldiv 0048  
                        __size_of___lwdiv 002A                          __size_of___lwmod 0024  
                      __end_of__stringtab 1010       EEPROM_24C1025_Write_Buffer@chip_add 0033  
                     USART_put_string@ptr 0023                          __size_of_captura 000D  
                   ?_EEPROM_Write_Integer 0025                              _Temperatura0 00D1  
                         _I2C_Master_Init 14C8                           _I2C_Master_Read 0F0E  
                                ___xxtofl 02C5                __size_of_PROCULUS_VP_Write 0031  
                         _I2C_Master_Wait 0F5D                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 003A                           _I2C_Master_Stop 0F0B  
               __size_of_ADC_Media_10bits 0045                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0024                                  __ptext10 1442  
                                __ptext11 14C8                                  __ptext20 13CA  
                                __ptext12 14F5                                  __ptext21 0B98  
                                __ptext13 0864                                  __ptext30 0833  
                                __ptext22 140F                                  __ptext14 136A  
                                __ptext31 0FF6                                  __ptext23 1415  
                                __ptext15 0BB3                                  __ptext40 1577  
                                __ptext32 15B7                                  __ptext24 06E3  
                                __ptext16 0F68                                  __ptext41 147B  
                                __ptext33 161A                                  __ptext25 0742  
                                __ptext17 15CD                                  __ptext50 0F65  
                                __ptext42 148E                                  __ptext34 0809  
                                __ptext26 0156                                  __ptext18 1644  
                                __ptext51 0F0E                                  __ptext43 14A8  
                                __ptext35 0F82                                  __ptext27 02AA  
                                __ptext19 079B                                  __ptext60 07EF  
                                __ptext52 06B2                                  __ptext44 0BE1  
                                __ptext36 0BD3                                  __ptext28 13E6  
                                __ptext61 1668                                  __ptext53 072C  
                                __ptext45 0F91                                  __ptext37 13B0  
                                __ptext29 13F6                                  __ptext54 0E35  
                                __ptext46 0C75                                  __ptext38 1560  
                                __ptext55 0F30                                  __ptext47 1396  
                                __ptext39 153D                                  __ptext56 0EFF  
                                __ptext48 137F                                  __ptext57 0F0B  
                                __ptext49 0D56                                  __ptext58 0F05  
                                __ptext59 0F5D                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004B                                strcpy@from 0020  
                           __size_of_main 00DC                             __size_of_itoa 001A  
                           __size_of_utoa 004D              EEPROM_24C1025_Fill_All@value 0054  
              PROCULUS_VP_Write_String@vp 0054       EEPROM_24C1025_Write_Buffer@sizedata 002E  
                             _milisegundo 00D7         __end_of_mediaLeituraPt100Umidadde 0156  
                          _Delay_Led_Tmr0 0072             __size_of_PROCULUS_Show_Screen 000A  
                     _EEPROM_Write_String 1560                                  log@coeff 1010  
                __end_of_I2C_Master_Start 0F0B                  __end_of_I2C_Master_Write 0F05  
                              _INTCONbits 000B                                  isr@tempo 007A  
                                itoa@base 0031                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0024                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0052                         USART_put_int@dado 004D  
                        _EEPROM_Read_Byte 14A8                               _my_delay_ms 0333  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 000F  
            EEPROM_24C1025_Write_Int@data 004F                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0026                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 100A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1415  
                 __end_of_I2C_Master_Init 14F5                   __end_of_I2C_Master_Read 0F30  
                 __end_of_I2C_Master_Wait 0F65                   __end_of_I2C_Master_Stop 0F0E  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0031  
               __size_of_USART_put_buffer 001C               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 0056                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 0029                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0864  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 002D                          ___lldiv@quotient 0028  
                       I2C_Master_Write@d 0020                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0022  
                                strcpy@to 0022                           ___lwmod@counter 0024  
                                stringdir 100A                                  stringtab 1000  
                       _EEPROM_Write_Byte 1577            EEPROM_24C1025_Read_Str@mem_add 002A  
                           ___fladd@signs 0047                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 0048  
                            ___fladd@bexp 0049         __size_of_EEPROM_24C1025_Read_Byte 0017  
               ?_EEPROM_24C1025_Read_Byte 0036                       EEPROM_Read_String@c 0025  
                    __Umul8_16@multiplier 0027                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1442  
