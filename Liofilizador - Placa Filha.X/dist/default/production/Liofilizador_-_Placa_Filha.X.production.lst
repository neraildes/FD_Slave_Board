

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 09:45:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103                           
  1104                           	psect	strings
  1105  1800                     __pstrings:	
  1106  1800                     stringtab:	
  1107  1800                     __stringtab:	
  1108                           
  1109                           ;	String table - string pointers are 1 byte each
  1110  1800  1BFF               	btfsc	btemp+1,7
  1111  1801  280A               	ljmp	stringcode
  1112  1802  1383               	bcf	3,7
  1113  1803  187F               	btfsc	btemp+1,0
  1114  1804  1783               	bsf	3,7
  1115  1805  0800               	movf	0,w
  1116  1806  0A84               	incf	4,f
  1117  1807  1903               	skipnz
  1118  1808  0AFF               	incf	btemp+1,f
  1119  1809  0008               	return
  1120  180A                     stringcode:	
  1121  180A                     stringdir:	
  1122  180A  3018               	movlw	high stringdir
  1123  180B  008A               	movwf	10
  1124  180C  0804               	movf	4,w
  1125  180D  0A84               	incf	4,f
  1126  180E  0782               	addwf	2,f
  1127  180F                     __stringbase:	
  1128  180F  3400               	retlw	0
  1129  1810                     __end_of__stringtab:	
  1130  1810                     _PT100_TRANSLADA:	
  1131  1810  3466               	retlw	102
  1132  1811  3466               	retlw	102
  1133  1812  34A6               	retlw	166
  1134  1813  34BF               	retlw	191
  1135  1814                     __end_of_PT100_TRANSLADA:	
  1136  1814                     _PT100_CONSTANT:	
  1137  1814  3414               	retlw	20
  1138  1815  34AE               	retlw	174
  1139  1816  342B               	retlw	43
  1140  1817  34C1               	retlw	193
  1141  1818                     __end_of_PT100_CONSTANT:	
  1142  1818                     _RESISTOR_ROOM_TEMP:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1145  1818  3400               	retlw	0
  1146  1819  3440               	retlw	64
  1147  181A  341C               	retlw	28
  1148  181B  3446               	retlw	70
  1149  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1150  181C                     _ROOM_TEMP:	
  1151                           
  1152                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1153  181C  3466               	retlw	102
  1154  181D  3486               	retlw	134
  1155  181E  3496               	retlw	150
  1156  181F  3443               	retlw	67
  1157  1820                     __end_of_ROOM_TEMP:	
  1158  1820                     _MAX_ADC:	
  1159                           
  1160                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1161  1820  3400               	retlw	0
  1162  1821  34C0               	retlw	192
  1163  1822  347F               	retlw	127
  1164  1823  3444               	retlw	68
  1165  1824                     __end_of_MAX_ADC:	
  1166  1824                     log@coeff:	
  1167  1824  3400               	retlw	0
  1168  1825  3400               	retlw	0
  1169  1826  3400               	retlw	0
  1170  1827  3400               	retlw	0
  1171  1828  34C4               	retlw	196
  1172  1829  34FF               	retlw	255
  1173  182A  347F               	retlw	127
  1174  182B  343F               	retlw	63
  1175  182C  3480               	retlw	128
  1176  182D  34EF               	retlw	239
  1177  182E  34FF               	retlw	255
  1178  182F  34BE               	retlw	190
  1179  1830  3490               	retlw	144
  1180  1831  34E1               	retlw	225
  1181  1832  34A9               	retlw	169
  1182  1833  343E               	retlw	62
  1183  1834  34EC               	retlw	236
  1184  1835  3482               	retlw	130
  1185  1836  3476               	retlw	118
  1186  1837  34BE               	retlw	190
  1187  1838  3482               	retlw	130
  1188  1839  34AD               	retlw	173
  1189  183A  342B               	retlw	43
  1190  183B  343E               	retlw	62
  1191  183C  340E               	retlw	14
  1192  183D  343C               	retlw	60
  1193  183E  34C3               	retlw	195
  1194  183F  34BD               	retlw	189
  1195  1840  3487               	retlw	135
  1196  1841  34D1               	retlw	209
  1197  1842  3413               	retlw	19
  1198  1843  343D               	retlw	61
  1199  1844  3441               	retlw	65
  1200  1845  3478               	retlw	120
  1201  1846  34D3               	retlw	211
  1202  1847  34BB               	retlw	187
  1203  1848                     __end_oflog@coeff:	
  1204  1848                     _BETA:	
  1205                           
  1206                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1207  1848  3400               	retlw	0
  1208  1849  3460               	retlw	96
  1209  184A  3478               	retlw	120
  1210  184B  3445               	retlw	69
  1211  184C                     __end_of_BETA:	
  1212  184C                     _BALANCE_RESISTOR:	
  1213                           
  1214                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1215  184C  3400               	retlw	0
  1216  184D  3440               	retlw	64
  1217  184E  341C               	retlw	28
  1218  184F  3446               	retlw	70
  1219  1850                     __end_of_BALANCE_RESISTOR:	
  1220  0019                     _TXREG	set	25
  1221  0018                     _RCSTAbits	set	24
  1222  001A                     _RCREG	set	26
  1223  000E                     _TMR1L	set	14
  1224  000F                     _TMR1H	set	15
  1225  000C                     _PIR1bits	set	12
  1226  001E                     _ADRESH	set	30
  1227  001F                     _ADCON0bits	set	31
  1228  0005                     _PORTAbits	set	5
  1229  0007                     _PORTCbits	set	7
  1230  0010                     _T1CON	set	16
  1231  000B                     _INTCONbits	set	11
  1232  0006                     _PORTBbits	set	6
  1233  0009                     _PORTE	set	9
  1234  0007                     _PORTC	set	7
  1235  0005                     _PORTA	set	5
  1236  0013                     _SSPBUF	set	19
  1237  0014                     _SSPCON	set	20
  1238  0006                     _PORTB	set	6
  1239  00C4                     _CREN	set	196
  1240  0081                     _TMR1CS	set	129
  1241  0085                     _T1CKPS1	set	133
  1242  0084                     _T1CKPS0	set	132
  1243  008C                     _PIE1bits	set	140
  1244  0099                     _SPBRG	set	153
  1245  0098                     _TXSTAbits	set	152
  1246  009E                     _ADRESL	set	158
  1247  009F                     _ADCON1	set	159
  1248  009F                     _ADCON1bits	set	159
  1249  0095                     _WPUB	set	149
  1250  0081                     _OPTION_REGbits	set	129
  1251  0089                     _TRISE	set	137
  1252  0087                     _TRISC	set	135
  1253  0086                     _TRISB	set	134
  1254  0085                     _TRISA	set	133
  1255  008F                     _OSCCONbits	set	143
  1256  0094                     _SSPSTAT	set	148
  1257  0093                     _SSPADD	set	147
  1258  0091                     _SSPCON2	set	145
  1259  043F                     _TRISC7	set	1087
  1260  043E                     _TRISC6	set	1086
  1261  0460                     _TMR1IE	set	1120
  1262  048C                     _ACKEN	set	1164
  1263  048D                     _ACKDT	set	1165
  1264  048B                     _RCEN	set	1163
  1265  048A                     _PEN	set	1162
  1266  0489                     _RSEN	set	1161
  1267  0488                     _SEN	set	1160
  1268  043C                     _TRISC4	set	1084
  1269  043B                     _TRISC3	set	1083
  1270  010C                     _EEDATA	set	268
  1271  010D                     _EEADR	set	269
  1272  0187                     _BAUDCTLbits	set	391
  1273  018D                     _EECON2	set	397
  1274  018C                     _EECON1bits	set	396
  1275  0189                     _ANSELH	set	393
  1276  0188                     _ANSEL	set	392
  1277  1850                     STR_1:	
  1278  1850  3476               	retlw	118	;'v'
  1279  1851  3431               	retlw	49	;'1'
  1280  1852  342E               	retlw	46	;'.'
  1281  1853  3430               	retlw	48	;'0'
  1282  1854  342E               	retlw	46	;'.'
  1283  1855  3435               	retlw	53	;'5'
  1284  1856  3400               	retlw	0
  1285  1857                     STR_8:	
  1286  1857  344F               	retlw	79	;'O'
  1287  1858  344B               	retlw	75	;'K'
  1288  1859  3400               	retlw	0
  1289  185A                     STR_3:	
  1290  185A  3430               	retlw	48	;'0'
  1291  185B  3400               	retlw	0
  1292  185C                     STR_4:	
  1293  185C  343A               	retlw	58	;':'
  1294  185D  3400               	retlw	0
  1295  185B                     
  1296                           ; #config settings
  1297  0000                     
  1298                           	psect	cinit
  1299  0015                     start_initialization:	
  1300  0015                     __initialization:	
  1301                           
  1302                           ; Clear objects allocated to COMMON
  1303  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1304  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1305  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1306  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1307  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1308                           
  1309                           ; Clear objects allocated to BANK1
  1310  001A  1383               	bcf	3,7	;select IRP bank0
  1311  001B  30CF               	movlw	low __pbssBANK1
  1312  001C  0084               	movwf	4
  1313  001D  30EC               	movlw	low (__pbssBANK1+29)
  1314  001E  160A  158A  214E  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to BANK3
  1317  0023  1783               	bsf	3,7	;select IRP bank2
  1318  0024  3090               	movlw	low __pbssBANK3
  1319  0025  0084               	movwf	4
  1320  0026  30C9               	movlw	low (__pbssBANK3+57)
  1321  0027  160A  158A  214E  120A  118A  	fcall	clear_ram0
  1322                           
  1323                           ; Clear objects allocated to BANK2
  1324  002C  3010               	movlw	low __pbssBANK2
  1325  002D  0084               	movwf	4
  1326  002E  3050               	movlw	low (__pbssBANK2+64)
  1327  002F  160A  158A  214E   	fcall	clear_ram0
  1328  0032                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331  0032                     __end_of__initialization:	
  1332  0032  0183               	clrf	3
  1333  0033  160A  118A  2C43   	ljmp	_main	;jump to C main() function
  1334                           
  1335                           	psect	bssCOMMON
  1336  0078                     __pbssCOMMON:	
  1337  0078                     _Delay_Led_Tmr0:	
  1338  0078                     	ds	2
  1339  007A                     _Delay_Led_Memory:	
  1340  007A                     	ds	2
  1341  007C                     _statuspower_memo:	
  1342  007C                     	ds	1
  1343                           
  1344                           	psect	bssBANK1
  1345  00CF                     __pbssBANK1:	
  1346  00CF                     _Tensao1:	
  1347  00CF                     	ds	4
  1348  00D3                     _Vaccum0:	
  1349  00D3                     	ds	4
  1350  00D7                     _errno:	
  1351  00D7                     	ds	2
  1352  00D9                     _tempodecorrido:	
  1353  00D9                     	ds	2
  1354  00DB                     _count:	
  1355  00DB                     	ds	2
  1356  00DD                     _header:	
  1357  00DD                     	ds	2
  1358  00DF                     _milisegundo:	
  1359  00DF                     	ds	2
  1360  00E1                     _Delay_Led_Usart:	
  1361  00E1                     	ds	2
  1362  00E3                     _pointer:	
  1363  00E3                     	ds	1
  1364  00E4                     _destino:	
  1365  00E4                     	ds	1
  1366  00E5                     _Board_Number:	
  1367  00E5                     	ds	1
  1368  00E6                     _canal:	
  1369  00E6                     	ds	1
  1370  00E7                     _minuto:	
  1371  00E7                     	ds	1
  1372  00E8                     _hora:	
  1373  00E8                     	ds	1
  1374  00E9                     _segundo:	
  1375  00E9                     	ds	1
  1376  00EA                     _statuspower:	
  1377  00EA                     	ds	1
  1378  00EB                     _generic_status:	
  1379  00EB                     	ds	1
  1380                           
  1381                           	psect	bssBANK3
  1382  0190                     __pbssBANK3:	
  1383  0190                     _usart_buffer:	
  1384  0190                     	ds	25
  1385  01A9                     _texto:	
  1386  01A9                     	ds	16
  1387  01B9                     _usart_protocol:	
  1388  01B9                     	ds	16
  1389                           
  1390                           	psect	bssBANK2
  1391  0110                     __pbssBANK2:	
  1392  0110                     _buffer:	
  1393  0110                     	ds	64
  1394                           
  1395                           	psect	clrtext
  1396  194E                     clear_ram0:	
  1397                           ;	Called with FSR containing the base address, and
  1398                           ;	W with the last address+1
  1399                           
  1400  194E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401  194F                     clrloop0:	
  1402  194F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403  1950  0A84               	incf	4,f	;increment pointer
  1404  1951  0604               	xorwf	4,w	;XOR with final address
  1405  1952  1903               	btfsc	3,2	;have we reached the end yet?
  1406  1953  3400               	retlw	0	;all done for this memory range, return
  1407  1954  0604               	xorwf	4,w	;XOR again to restore value
  1408  1955  294F               	goto	clrloop0	;do the next byte
  1409                           
  1410                           	psect	cstackBANK1
  1411  00A0                     __pcstackBANK1:	
  1412  00A0                     MediaPlacaVaccum@Valor:	
  1413  00A0                     Decodify_Command@hh:	
  1414                           ; 4 bytes @ 0x0
  1415                           
  1416                           
  1417                           ; 10 bytes @ 0x0
  1418  00A0                     	ds	4
  1419  00A4                     MediaPlacaVaccum@canal:	
  1420                           
  1421                           ; 1 bytes @ 0x4
  1422  00A4                     	ds	1
  1423  00A5                     MediaPlacaVaccum@Temp:	
  1424                           
  1425                           ; 4 bytes @ 0x5
  1426  00A5                     	ds	4
  1427  00A9                     MediaPlacaVaccum@i:	
  1428                           
  1429                           ; 2 bytes @ 0x9
  1430  00A9                     	ds	1
  1431  00AA                     Decodify_Command@mm:	
  1432                           
  1433                           ; 10 bytes @ 0xA
  1434  00AA                     	ds	10
  1435  00B4                     Decodify_Command@ss:	
  1436                           
  1437                           ; 10 bytes @ 0x14
  1438  00B4                     	ds	10
  1439  00BE                     Decodify_Command@dados:	
  1440                           
  1441                           ; 2 bytes @ 0x1E
  1442  00BE                     	ds	2
  1443  00C0                     Decodify_Command@add:	
  1444                           
  1445                           ; 1 bytes @ 0x20
  1446  00C0                     	ds	1
  1447  00C1                     Decodify_Command@tempint:	
  1448                           
  1449                           ; 2 bytes @ 0x21
  1450  00C1                     	ds	2
  1451  00C3                     Decodify_Command@OutPut:	
  1452                           
  1453                           ; 4 bytes @ 0x23
  1454  00C3                     	ds	4
  1455  00C7                     Decodify_Command@tempchar:	
  1456                           
  1457                           ; 1 bytes @ 0x27
  1458  00C7                     	ds	1
  1459  00C8                     Decodify_Command@valor:	
  1460                           
  1461                           ; 2 bytes @ 0x28
  1462  00C8                     	ds	2
  1463  00CA                     Decodify_Command@sizedata:	
  1464                           
  1465                           ; 1 bytes @ 0x2A
  1466  00CA                     	ds	1
  1467  00CB                     Decodify_Command@add_24LCxxxx:	
  1468                           
  1469                           ; 4 bytes @ 0x2B
  1470  00CB                     	ds	4
  1471                           
  1472                           	psect	cstackCOMMON
  1473  0070                     __pcstackCOMMON:	
  1474  0070                     ?_ADC_init:	
  1475  0070                     ?_MediaPlacaVaccum:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_Decodify_Command:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_USART_to_Protocol:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_Send_To_MB:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_Send_Reply_OK:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_EEPROM_Read_Byte:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_USART_putc:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_Package_Usart_is_for_me:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_I2C_Master_Wait:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_I2C_Master_Start:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_I2C_Master_RepeatedStart:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_I2C_Master_Stop:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_main:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_isr:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ??_isr:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0x0
  1522  0070                     	ds	6
  1523  0076                     isr@tempo:	
  1524                           
  1525                           ; 2 bytes @ 0x6
  1526  0076                     	ds	2
  1527                           
  1528                           	psect	cstackBANK0
  1529  0020                     __pcstackBANK0:	
  1530  0020                     ?___flge:	
  1531  0020                     ?_my_delay_ms_WDT:	
  1532                           ; 1 bit 
  1533                           
  1534  0020                     ??_ADC_init:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0020                     ?_USART_init:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0020                     ??_USART_to_Protocol:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0020                     ?_EEPROM_Write_Byte:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0020                     ??_EEPROM_Read_Byte:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0020                     ??_USART_putc:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0020                     ?_strcpy:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0020                     ?_strcat:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0020                     ?_my_delay_ms:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0020                     ??_Package_Usart_is_for_me:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0020                     ?_PROCULUS_Delay:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0020                     ??_I2C_Master_Wait:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0020                     ??_I2C_Master_Start:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0020                     ??_I2C_Master_RepeatedStart:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0020                     ??_I2C_Master_Stop:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0020                     ?_I2C_Master_Write:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0020                     ?_strlen:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0020                     ?_captura:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588  0020                     ?__Umul8_16:	
  1589                           ; 2 bytes @ 0x0
  1590                           
  1591  0020                     ?_I2C_Master_Read:	
  1592                           ; 2 bytes @ 0x0
  1593                           
  1594  0020                     ?___lwdiv:	
  1595                           ; 2 bytes @ 0x0
  1596                           
  1597  0020                     ?___lwmod:	
  1598                           ; 2 bytes @ 0x0
  1599                           
  1600  0020                     ?___lldiv:	
  1601                           ; 2 bytes @ 0x0
  1602                           
  1603  0020                     EEPROM_Write_Byte@dado:	
  1604                           ; 4 bytes @ 0x0
  1605                           
  1606  0020                     Package_Usart_is_for_me@retorno:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     USART_putc@value:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     strcpy@from:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     __Umul8_16@multiplicand:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     I2C_Master_Write@d:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     I2C_Master_Read@a:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624  0020                     PROCULUS_Delay@tempo_ms:	
  1625                           ; 2 bytes @ 0x0
  1626                           
  1627  0020                     ___lwdiv@divisor:	
  1628                           ; 2 bytes @ 0x0
  1629                           
  1630  0020                     ___lwmod@divisor:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0020                     strcat@from:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0020                     my_delay_ms@time:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0020                     my_delay_ms_WDT@time:	
  1640                           ; 4 bytes @ 0x0
  1641                           
  1642  0020                     USART_init@baudrate:	
  1643                           ; 4 bytes @ 0x0
  1644                           
  1645  0020                     ___lldiv@divisor:	
  1646                           ; 4 bytes @ 0x0
  1647                           
  1648  0020                     ___flge@ff1:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0x0
  1653  0020                     	ds	1
  1654  0021                     ??_Send_To_MB:	
  1655  0021                     ?_USART_put_string:	
  1656                           ; 1 bytes @ 0x1
  1657                           
  1658  0021                     ??_EEPROM_Write_Byte:	
  1659                           ; 1 bytes @ 0x1
  1660                           
  1661  0021                     ?_USART_put_buffer:	
  1662                           ; 1 bytes @ 0x1
  1663                           
  1664  0021                     ??_strcpy:	
  1665                           ; 1 bytes @ 0x1
  1666                           
  1667  0021                     Send_To_MB@size:	
  1668                           ; 1 bytes @ 0x1
  1669                           
  1670  0021                     USART_put_buffer@size:	
  1671                           ; 1 bytes @ 0x1
  1672                           
  1673  0021                     USART_put_string@vetor:	
  1674                           ; 2 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0x1
  1678  0021                     	ds	1
  1679  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1680  0022                     ?_EEPROM_24C1025_Write_Str:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0022                     ??_strlen:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686  0022                     ??_strcat:	
  1687                           ; 1 bytes @ 0x2
  1688                           
  1689  0022                     ??_captura:	
  1690                           ; 1 bytes @ 0x2
  1691                           
  1692  0022                     ??_PROCULUS_Delay:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0022                     ??__Umul8_16:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0022                     ??_I2C_Master_Write:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0022                     ??_I2C_Master_Read:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0022                     EEPROM_Read_Byte@addr:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707  0022                     strcpy@to:	
  1708                           ; 1 bytes @ 0x2
  1709                           
  1710  0022                     USART_to_Protocol@i:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0022                     ___lwdiv@dividend:	
  1714                           ; 2 bytes @ 0x2
  1715                           
  1716  0022                     ___lwmod@dividend:	
  1717                           ; 2 bytes @ 0x2
  1718                           
  1719  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1720                           ; 2 bytes @ 0x2
  1721                           
  1722  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1723                           ; 4 bytes @ 0x2
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0x2
  1727  0022                     	ds	1
  1728  0023                     ??_USART_put_string:	
  1729  0023                     ?_EEPROM_Read_String:	
  1730                           ; 1 bytes @ 0x3
  1731                           
  1732  0023                     ??_USART_put_buffer:	
  1733                           ; 1 bytes @ 0x3
  1734                           
  1735  0023                     ?_EEPROM_Read_Integer:	
  1736                           ; 1 bytes @ 0x3
  1737                           
  1738  0023                     EEPROM_Write_Byte@addr:	
  1739                           ; 2 bytes @ 0x3
  1740                           
  1741  0023                     EEPROM_Read_String@dado:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744  0023                     strcat@cp:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747  0023                     strcpy@cp:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0023                     strlen@cp:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     USART_put_string@ptr:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0x3
  1758  0023                     	ds	1
  1759  0024                     ??_my_delay_ms_WDT:	
  1760  0024                     ??_USART_init:	
  1761                           ; 1 bytes @ 0x4
  1762                           
  1763  0024                     ??_EEPROM_Read_String:	
  1764                           ; 1 bytes @ 0x4
  1765                           
  1766  0024                     ??_my_delay_ms:	
  1767                           ; 1 bytes @ 0x4
  1768                           
  1769  0024                     ??___lwdiv:	
  1770                           ; 1 bytes @ 0x4
  1771                           
  1772  0024                     ??___lwmod:	
  1773                           ; 1 bytes @ 0x4
  1774                           
  1775  0024                     EEPROM_Write_Byte@last_GIE:	
  1776                           ; 1 bytes @ 0x4
  1777                           
  1778  0024                     USART_to_Protocol@usart_protocol:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781  0024                     strcat@to:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784  0024                     strlen@s:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0024                     I2C_Master_Read@temp:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0024                     PROCULUS_Delay@i:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793  0024                     __Umul8_16@product:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796  0024                     ___lldiv@dividend:	
  1797                           ; 2 bytes @ 0x4
  1798                           
  1799  0024                     ___flge@ff2:	
  1800                           ; 4 bytes @ 0x4
  1801                           
  1802                           
  1803                           ; 4 bytes @ 0x4
  1804  0024                     	ds	1
  1805  0025                     ??_EEPROM_Read_Integer:	
  1806  0025                     ?_EEPROM_Write_Integer:	
  1807                           ; 1 bytes @ 0x5
  1808                           
  1809  0025                     ??_Send_Reply_OK:	
  1810                           ; 1 bytes @ 0x5
  1811                           
  1812  0025                     ?_EEPROM_Write_String:	
  1813                           ; 1 bytes @ 0x5
  1814                           
  1815  0025                     EEPROM_Write_String@dado:	
  1816                           ; 1 bytes @ 0x5
  1817                           
  1818  0025                     EEPROM_Read_String@addr:	
  1819                           ; 1 bytes @ 0x5
  1820                           
  1821  0025                     USART_put_buffer@vetor:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824  0025                     ___lwdiv@counter:	
  1825                           ; 1 bytes @ 0x5
  1826                           
  1827  0025                     ___lwmod@counter:	
  1828                           ; 1 bytes @ 0x5
  1829                           
  1830  0025                     EEPROM_Write_Integer@dado:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833                           
  1834                           ; 2 bytes @ 0x5
  1835  0025                     	ds	1
  1836  0026                     ??_EEPROM_Write_String:	
  1837  0026                     ?_EEPROM_24C1025_Read_Buffer:	
  1838                           ; 1 bytes @ 0x6
  1839                           
  1840  0026                     ?_EEPROM_24C1025_Read_Str:	
  1841                           ; 1 bytes @ 0x6
  1842                           
  1843  0026                     EEPROM_Read_Integer@addr:	
  1844                           ; 1 bytes @ 0x6
  1845                           
  1846  0026                     EEPROM_Read_String@c:	
  1847                           ; 1 bytes @ 0x6
  1848                           
  1849  0026                     USART_init@i:	
  1850                           ; 1 bytes @ 0x6
  1851                           
  1852  0026                     USART_put_buffer@loop:	
  1853                           ; 1 bytes @ 0x6
  1854                           
  1855  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     EEPROM_24C1025_Write_Str@data:	
  1859                           ; 1 bytes @ 0x6
  1860                           
  1861  0026                     ___lwdiv@quotient:	
  1862                           ; 1 bytes @ 0x6
  1863                           
  1864  0026                     __Umul8_16@word_mpld:	
  1865                           ; 2 bytes @ 0x6
  1866                           
  1867  0026                     my_delay_ms@i:	
  1868                           ; 2 bytes @ 0x6
  1869                           
  1870  0026                     my_delay_ms_WDT@i:	
  1871                           ; 4 bytes @ 0x6
  1872                           
  1873  0026                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1874                           ; 4 bytes @ 0x6
  1875                           
  1876  0026                     EEPROM_24C1025_Read_Str@mem_add:	
  1877                           ; 4 bytes @ 0x6
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0x6
  1881  0026                     	ds	1
  1882  0027                     ??_EEPROM_Write_Integer:	
  1883  0027                     ??_EEPROM_24C1025_Write_Str:	
  1884                           ; 1 bytes @ 0x7
  1885                           
  1886  0027                     EEPROM_Read_Integer@ptr:	
  1887                           ; 1 bytes @ 0x7
  1888                           
  1889  0027                     EEPROM_Write_String@addr:	
  1890                           ; 1 bytes @ 0x7
  1891                           
  1892  0027                     USART_put_buffer@ptr:	
  1893                           ; 1 bytes @ 0x7
  1894                           
  1895  0027                     EEPROM_24C1025_Write_Buffer@data:	
  1896                           ; 1 bytes @ 0x7
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x7
  1900  0027                     	ds	1
  1901  0028                     ?_utoa:	
  1902  0028                     ??___lldiv:	
  1903                           ; 1 bytes @ 0x8
  1904                           
  1905  0028                     ??___flge:	
  1906                           ; 1 bytes @ 0x8
  1907                           
  1908  0028                     __Umul8_16@multiplier:	
  1909                           ; 1 bytes @ 0x8
  1910                           
  1911  0028                     EEPROM_Read_Integer@result:	
  1912                           ; 1 bytes @ 0x8
  1913                           
  1914  0028                     utoa@val:	
  1915                           ; 2 bytes @ 0x8
  1916                           
  1917                           
  1918                           ; 2 bytes @ 0x8
  1919  0028                     	ds	1
  1920  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  1921  0029                     ?___flmul:	
  1922                           ; 1 bytes @ 0x9
  1923                           
  1924  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  1925                           ; 4 bytes @ 0x9
  1926                           
  1927  0029                     ___lldiv@quotient:	
  1928                           ; 1 bytes @ 0x9
  1929                           
  1930  0029                     ___flmul@b:	
  1931                           ; 4 bytes @ 0x9
  1932                           
  1933                           
  1934                           ; 4 bytes @ 0x9
  1935  0029                     	ds	1
  1936  002A                     ?_ADC_Max_10Bits:	
  1937  002A                     EEPROM_Write_Integer@ptr:	
  1938                           ; 2 bytes @ 0xA
  1939                           
  1940  002A                     EEPROM_Read_Integer@i:	
  1941                           ; 1 bytes @ 0xA
  1942                           
  1943  002A                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1944                           ; 1 bytes @ 0xA
  1945                           
  1946  002A                     EEPROM_24C1025_Write_Str@range:	
  1947                           ; 1 bytes @ 0xA
  1948                           
  1949  002A                     EEPROM_24C1025_Read_Str@texto:	
  1950                           ; 1 bytes @ 0xA
  1951                           
  1952  002A                     utoa@base:	
  1953                           ; 1 bytes @ 0xA
  1954                           
  1955                           
  1956                           ; 2 bytes @ 0xA
  1957  002A                     	ds	1
  1958  002B                     ??_EEPROM_24C1025_Read_Str:	
  1959  002B                     EEPROM_Write_Integer@addr:	
  1960                           ; 1 bytes @ 0xB
  1961                           
  1962  002B                     EEPROM_24C1025_Write_Buffer@count:	
  1963                           ; 1 bytes @ 0xB
  1964                           
  1965  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  1966                           ; 1 bytes @ 0xB
  1967                           
  1968  002B                     EEPROM_24C1025_Read_Buffer@data:	
  1969                           ; 1 bytes @ 0xB
  1970                           
  1971                           
  1972                           ; 2 bytes @ 0xB
  1973  002B                     	ds	1
  1974  002C                     ??_ADC_Max_10Bits:	
  1975  002C                     ??_utoa:	
  1976                           ; 1 bytes @ 0xC
  1977                           
  1978  002C                     EEPROM_Write_Integer@i:	
  1979                           ; 1 bytes @ 0xC
  1980                           
  1981  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  1982                           ; 1 bytes @ 0xC
  1983                           
  1984                           
  1985                           ; 1 bytes @ 0xC
  1986  002C                     	ds	1
  1987  002D                     ??_EEPROM_24C1025_Read_Buffer:	
  1988  002D                     ADC_Max_10Bits@canal:	
  1989                           ; 1 bytes @ 0xD
  1990                           
  1991  002D                     EEPROM_24C1025_Write_Buffer@range:	
  1992                           ; 1 bytes @ 0xD
  1993                           
  1994  002D                     EEPROM_24C1025_Read_Str@cnt:	
  1995                           ; 1 bytes @ 0xD
  1996                           
  1997  002D                     ___lldiv@counter:	
  1998                           ; 1 bytes @ 0xD
  1999                           
  2000  002D                     utoa@v:	
  2001                           ; 1 bytes @ 0xD
  2002                           
  2003  002D                     ___flmul@a:	
  2004                           ; 2 bytes @ 0xD
  2005                           
  2006                           
  2007                           ; 4 bytes @ 0xD
  2008  002D                     	ds	1
  2009  002E                     ?_I2C_Master_Init:	
  2010  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2011                           ; 1 bytes @ 0xE
  2012                           
  2013  002E                     EEPROM_24C1025_Read_Str@chip_add:	
  2014                           ; 1 bytes @ 0xE
  2015                           
  2016  002E                     ADC_Max_10Bits@Temp:	
  2017                           ; 1 bytes @ 0xE
  2018                           
  2019  002E                     I2C_Master_Init@c:	
  2020                           ; 2 bytes @ 0xE
  2021                           
  2022                           
  2023                           ; 4 bytes @ 0xE
  2024  002E                     	ds	1
  2025  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2026  002F                     ?_EEPROM_24C1025_Fill_All:	
  2027                           ; 1 bytes @ 0xF
  2028                           
  2029  002F                     EEPROM_24C1025_Read_Str@range:	
  2030                           ; 1 bytes @ 0xF
  2031                           
  2032  002F                     EEPROM_24C1025_Fill_All@value:	
  2033                           ; 1 bytes @ 0xF
  2034                           
  2035  002F                     utoa@c:	
  2036                           ; 1 bytes @ 0xF
  2037                           
  2038  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2039                           ; 1 bytes @ 0xF
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0xF
  2043  002F                     	ds	1
  2044  0030                     ??_EEPROM_24C1025_Fill_All:	
  2045  0030                     EEPROM_24C1025_Read_Buffer@cnt_1529:	
  2046                           ; 1 bytes @ 0x10
  2047                           
  2048  0030                     EEPROM_24C1025_Read_Str@ctrl:	
  2049                           ; 1 bytes @ 0x10
  2050                           
  2051  0030                     utoa@buf:	
  2052                           ; 1 bytes @ 0x10
  2053                           
  2054  0030                     ADC_Max_10Bits@value:	
  2055                           ; 1 bytes @ 0x10
  2056                           
  2057                           
  2058                           ; 2 bytes @ 0x10
  2059  0030                     	ds	1
  2060  0031                     ?_itoa:	
  2061  0031                     ??___flmul:	
  2062                           ; 1 bytes @ 0x11
  2063                           
  2064  0031                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2065                           ; 1 bytes @ 0x11
  2066                           
  2067  0031                     itoa@val:	
  2068                           ; 1 bytes @ 0x11
  2069                           
  2070                           
  2071                           ; 2 bytes @ 0x11
  2072  0031                     	ds	1
  2073  0032                     ??_I2C_Master_Init:	
  2074  0032                     ADC_Max_10Bits@i:	
  2075                           ; 1 bytes @ 0x12
  2076                           
  2077  0032                     EEPROM_24C1025_Read_Buffer@range:	
  2078                           ; 1 bytes @ 0x12
  2079                           
  2080                           
  2081                           ; 1 bytes @ 0x12
  2082  0032                     	ds	1
  2083  0033                     ?___xxtofl:	
  2084  0033                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2085                           ; 4 bytes @ 0x13
  2086                           
  2087  0033                     EEPROM_24C1025_Write_Byte@data:	
  2088                           ; 1 bytes @ 0x13
  2089                           
  2090  0033                     EEPROM_24C1025_Fill_All@chip_add:	
  2091                           ; 1 bytes @ 0x13
  2092                           
  2093  0033                     itoa@base:	
  2094                           ; 1 bytes @ 0x13
  2095                           
  2096  0033                     ___xxtofl@val:	
  2097                           ; 2 bytes @ 0x13
  2098                           
  2099                           
  2100                           ; 4 bytes @ 0x13
  2101  0033                     	ds	1
  2102  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2103  0034                     ?_EEPROM_24C1025_Read_Byte:	
  2104                           ; 1 bytes @ 0x14
  2105                           
  2106  0034                     ?_EEPROM_24C1025_Read_Int:	
  2107                           ; 1 bytes @ 0x14
  2108                           
  2109  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2110                           ; 2 bytes @ 0x14
  2111                           
  2112  0034                     EEPROM_24C1025_Fill_All@i:	
  2113                           ; 1 bytes @ 0x14
  2114                           
  2115  0034                     EEPROM_24C1025_Read_Byte@mem_add:	
  2116                           ; 1 bytes @ 0x14
  2117                           
  2118  0034                     EEPROM_24C1025_Read_Int@mem_add:	
  2119                           ; 4 bytes @ 0x14
  2120                           
  2121                           
  2122                           ; 4 bytes @ 0x14
  2123  0034                     	ds	1
  2124  0035                     ??_itoa:	
  2125  0035                     EEPROM_24C1025_Fill_All@page:	
  2126                           ; 1 bytes @ 0x15
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x15
  2130  0035                     	ds	1
  2131  0036                     ___flmul@sign:	
  2132                           
  2133                           ; 1 bytes @ 0x16
  2134  0036                     	ds	1
  2135  0037                     ??___xxtofl:	
  2136  0037                     ___flmul@aexp:	
  2137                           ; 1 bytes @ 0x17
  2138                           
  2139  0037                     itoa@buf:	
  2140                           ; 1 bytes @ 0x17
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x17
  2144  0037                     	ds	1
  2145  0038                     ??_EEPROM_24C1025_Read_Byte:	
  2146  0038                     ??_EEPROM_24C1025_Read_Int:	
  2147                           ; 1 bytes @ 0x18
  2148                           
  2149  0038                     EEPROM_24C1025_Read_Byte@chip_add:	
  2150                           ; 1 bytes @ 0x18
  2151                           
  2152  0038                     ___flmul@bexp:	
  2153                           ; 1 bytes @ 0x18
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x18
  2157  0038                     	ds	1
  2158  0039                     EEPROM_24C1025_Read_Byte@data:	
  2159  0039                     ___flmul@grs:	
  2160                           ; 1 bytes @ 0x19
  2161                           
  2162                           
  2163                           ; 4 bytes @ 0x19
  2164  0039                     	ds	1
  2165  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2166                           
  2167                           ; 1 bytes @ 0x1A
  2168  003A                     	ds	1
  2169  003B                     ___xxtofl@sign:	
  2170  003B                     EEPROM_24C1025_Read_Int@data:	
  2171                           ; 1 bytes @ 0x1B
  2172                           
  2173                           
  2174                           ; 2 bytes @ 0x1B
  2175  003B                     	ds	1
  2176  003C                     ___xxtofl@exp:	
  2177                           
  2178                           ; 1 bytes @ 0x1C
  2179  003C                     	ds	1
  2180  003D                     ___flmul@prod:	
  2181  003D                     ___xxtofl@arg:	
  2182                           ; 4 bytes @ 0x1D
  2183                           
  2184                           
  2185                           ; 4 bytes @ 0x1D
  2186  003D                     	ds	4
  2187  0041                     ?_ADC_Media_10bits:	
  2188  0041                     ?___fldiv:	
  2189                           ; 4 bytes @ 0x21
  2190                           
  2191  0041                     ___flmul@temp:	
  2192                           ; 4 bytes @ 0x21
  2193                           
  2194  0041                     ___fldiv@a:	
  2195                           ; 2 bytes @ 0x21
  2196                           
  2197                           
  2198                           ; 4 bytes @ 0x21
  2199  0041                     	ds	2
  2200  0043                     ?___fltol:	
  2201  0043                     ___fltol@f1:	
  2202                           ; 4 bytes @ 0x23
  2203                           
  2204                           
  2205                           ; 4 bytes @ 0x23
  2206  0043                     	ds	2
  2207  0045                     ??_ADC_Media_10bits:	
  2208  0045                     ___fldiv@b:	
  2209                           ; 1 bytes @ 0x25
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0x25
  2213  0045                     	ds	1
  2214  0046                     ADC_Media_10bits@canal:	
  2215                           
  2216                           ; 1 bytes @ 0x26
  2217  0046                     	ds	1
  2218  0047                     ??___fltol:	
  2219  0047                     ADC_Media_10bits@value:	
  2220                           ; 1 bytes @ 0x27
  2221                           
  2222                           
  2223                           ; 2 bytes @ 0x27
  2224  0047                     	ds	2
  2225  0049                     ??___fldiv:	
  2226  0049                     ADC_Media_10bits@i:	
  2227                           ; 1 bytes @ 0x29
  2228                           
  2229                           
  2230                           ; 1 bytes @ 0x29
  2231  0049                     	ds	1
  2232  004A                     ?___fladd:	
  2233  004A                     ___fladd@b:	
  2234                           ; 4 bytes @ 0x2A
  2235                           
  2236                           
  2237                           ; 4 bytes @ 0x2A
  2238  004A                     	ds	2
  2239  004C                     ___fltol@sign1:	
  2240                           
  2241                           ; 1 bytes @ 0x2C
  2242  004C                     	ds	1
  2243  004D                     ___fltol@exp1:	
  2244                           
  2245                           ; 1 bytes @ 0x2D
  2246  004D                     	ds	1
  2247  004E                     ?_USART_put_int:	
  2248  004E                     ?_EEPROM_24C1025_Write_Int:	
  2249                           ; 1 bytes @ 0x2E
  2250                           
  2251  004E                     USART_put_int@value:	
  2252                           ; 1 bytes @ 0x2E
  2253                           
  2254  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2255                           ; 2 bytes @ 0x2E
  2256                           
  2257  004E                     ___fladd@a:	
  2258                           ; 4 bytes @ 0x2E
  2259                           
  2260  004E                     ___fldiv@rem:	
  2261                           ; 4 bytes @ 0x2E
  2262                           
  2263                           
  2264                           ; 4 bytes @ 0x2E
  2265  004E                     	ds	2
  2266  0050                     ??_USART_put_int:	
  2267                           
  2268                           ; 1 bytes @ 0x30
  2269  0050                     	ds	1
  2270  0051                     USART_put_int@dado:	
  2271                           
  2272                           ; 1 bytes @ 0x31
  2273  0051                     	ds	1
  2274  0052                     ?_PROCULUS_Control_Register_Write:	
  2275  0052                     ?_PROCULUS_VP_Write:	
  2276                           ; 1 bytes @ 0x32
  2277                           
  2278  0052                     ??___fladd:	
  2279                           ; 1 bytes @ 0x32
  2280                           
  2281  0052                     PROCULUS_Control_Register_Write@size:	
  2282                           ; 1 bytes @ 0x32
  2283                           
  2284  0052                     ___fldiv@sign:	
  2285                           ; 1 bytes @ 0x32
  2286                           
  2287  0052                     PROCULUS_VP_Write@vp:	
  2288                           ; 1 bytes @ 0x32
  2289                           
  2290  0052                     EEPROM_24C1025_Write_Int@data:	
  2291                           ; 2 bytes @ 0x32
  2292                           
  2293                           
  2294                           ; 2 bytes @ 0x32
  2295  0052                     	ds	1
  2296  0053                     ??_PROCULUS_Control_Register_Write:	
  2297  0053                     ___fldiv@new_exp:	
  2298                           ; 1 bytes @ 0x33
  2299                           
  2300                           
  2301                           ; 2 bytes @ 0x33
  2302  0053                     	ds	1
  2303  0054                     ??_EEPROM_24C1025_Write_Int:	
  2304  0054                     PROCULUS_Control_Register_Write@vetor:	
  2305                           ; 1 bytes @ 0x34
  2306                           
  2307  0054                     PROCULUS_VP_Write@vetor:	
  2308                           ; 1 bytes @ 0x34
  2309                           
  2310                           
  2311                           ; 2 bytes @ 0x34
  2312  0054                     	ds	1
  2313  0055                     PROCULUS_Control_Register_Write@i:	
  2314  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2315                           ; 1 bytes @ 0x35
  2316                           
  2317  0055                     ___fldiv@grs:	
  2318                           ; 1 bytes @ 0x35
  2319                           
  2320                           
  2321                           ; 4 bytes @ 0x35
  2322  0055                     	ds	1
  2323  0056                     ?_PROCULUS_Show_Screen:	
  2324  0056                     ?_PROCULUS_Buzzer:	
  2325                           ; 1 bytes @ 0x36
  2326                           
  2327  0056                     PROCULUS_VP_Write@size:	
  2328                           ; 1 bytes @ 0x36
  2329                           
  2330  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2331                           ; 1 bytes @ 0x36
  2332                           
  2333  0056                     PROCULUS_Show_Screen@screen:	
  2334                           ; 2 bytes @ 0x36
  2335                           
  2336  0056                     EEPROM_24C1025_Write_Int@local:	
  2337                           ; 2 bytes @ 0x36
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x36
  2341  0056                     	ds	1
  2342  0057                     ??_PROCULUS_VP_Write:	
  2343                           
  2344                           ; 1 bytes @ 0x37
  2345  0057                     	ds	1
  2346  0058                     ?_Save_Log:	
  2347  0058                     ??_PROCULUS_Show_Screen:	
  2348                           ; 1 bytes @ 0x38
  2349                           
  2350  0058                     ??_PROCULUS_Buzzer:	
  2351                           ; 1 bytes @ 0x38
  2352                           
  2353  0058                     Save_Log@add_datalog:	
  2354                           ; 1 bytes @ 0x38
  2355                           
  2356                           
  2357                           ; 4 bytes @ 0x38
  2358  0058                     	ds	1
  2359  0059                     PROCULUS_VP_Write@i:	
  2360  0059                     ___fldiv@bexp:	
  2361                           ; 1 bytes @ 0x39
  2362                           
  2363  0059                     PROCULUS_Buzzer@vetor:	
  2364                           ; 1 bytes @ 0x39
  2365                           
  2366  0059                     PROCULUS_Show_Screen@vetor:	
  2367                           ; 2 bytes @ 0x39
  2368                           
  2369                           
  2370                           ; 3 bytes @ 0x39
  2371  0059                     	ds	1
  2372  005A                     ?_PROCULUS_VP_Write_String:	
  2373  005A                     ___fladd@signs:	
  2374                           ; 1 bytes @ 0x3A
  2375                           
  2376  005A                     ___fldiv@aexp:	
  2377                           ; 1 bytes @ 0x3A
  2378                           
  2379  005A                     PROCULUS_VP_Write_String@vp:	
  2380                           ; 1 bytes @ 0x3A
  2381                           
  2382                           
  2383                           ; 2 bytes @ 0x3A
  2384  005A                     	ds	1
  2385  005B                     ___fladd@aexp:	
  2386                           
  2387                           ; 1 bytes @ 0x3B
  2388  005B                     	ds	1
  2389  005C                     ??_Save_Log:	
  2390  005C                     PROCULUS_VP_Write_String@text:	
  2391                           ; 1 bytes @ 0x3C
  2392                           
  2393  005C                     ___fladd@bexp:	
  2394                           ; 1 bytes @ 0x3C
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x3C
  2398  005C                     	ds	1
  2399  005D                     ??_PROCULUS_VP_Write_String:	
  2400  005D                     ___fladd@grs:	
  2401                           ; 1 bytes @ 0x3D
  2402                           
  2403                           
  2404                           ; 1 bytes @ 0x3D
  2405  005D                     	ds	1
  2406  005E                     ??_Decodify_Command:	
  2407  005E                     ?___flsub:	
  2408                           ; 1 bytes @ 0x3E
  2409                           
  2410  005E                     ___flsub@a:	
  2411                           ; 4 bytes @ 0x3E
  2412                           
  2413                           
  2414                           ; 4 bytes @ 0x3E
  2415  005E                     	ds	4
  2416  0062                     ___flsub@b:	
  2417                           
  2418                           ; 4 bytes @ 0x42
  2419  0062                     	ds	4
  2420  0066                     ??_MediaPlacaVaccum:	
  2421  0066                     ??___flsub:	
  2422                           ; 1 bytes @ 0x46
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0x46
  2426  0066                     	ds	4
  2427  006A                     ??_main:	
  2428                           
  2429                           ; 1 bytes @ 0x4A
  2430  006A                     	ds	3
  2431  006D                     main@reset:	
  2432                           
  2433                           ; 2 bytes @ 0x4D
  2434  006D                     	ds	2
  2435                           
  2436                           	psect	maintext
  2437  1443                     __pmaintext:	
  2438 ;;
  2439 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2440 ;;
  2441 ;; *************** function _main *****************
  2442 ;; Defined at:
  2443 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  reset           2   77[BANK0 ] unsigned int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : B00/0
  2454 ;;		On exit  : 300/100
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       0       0       0       0
  2458 ;;      Locals:         0       2       0       0       0
  2459 ;;      Temps:          0       3       0       0       0
  2460 ;;      Totals:         0       5       0       0       0
  2461 ;;Total ram usage:        5 bytes
  2462 ;; Hardware stack levels required when called:    7
  2463 ;; This function calls:
  2464 ;;		_ADC_init
  2465 ;;		_Decodify_Command
  2466 ;;		_EEPROM_Read_Integer
  2467 ;;		_EEPROM_Write_Integer
  2468 ;;		_I2C_Master_Init
  2469 ;;		_MediaPlacaVaccum
  2470 ;;		_USART_init
  2471 ;;		_my_delay_ms_WDT
  2472 ;; This function is called by:
  2473 ;;		Startup code after reset
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _main
  2479  1443                     _main:	
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2485  1443  3002               	movlw	2
  2486  1444  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1445  1303               	bcf	3,6	;RP1=0, select bank0
  2488  1446  00EC               	movwf	??_main+2
  2489  1447  3004               	movlw	4
  2490  1448  00EB               	movwf	??_main+1
  2491  1449  30B9               	movlw	185
  2492  144A  00EA               	movwf	??_main
  2493  144B                     u7997:	
  2494  144B  0BEA               	decfsz	??_main,f
  2495  144C  2C4B               	goto	u7997
  2496  144D  0BEB               	decfsz	??_main+1,f
  2497  144E  2C4B               	goto	u7997
  2498  144F  0BEC               	decfsz	??_main+2,f
  2499  1450  2C4B               	goto	u7997
  2500  1451  2C52               	nop2
  2501                           
  2502                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2503  1452  1683               	bsf	3,5	;RP0=1, select bank1
  2504  1453  1303               	bcf	3,6	;RP1=0, select bank1
  2505  1454  160F               	bsf	15,4	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2508  1455  168F               	bsf	15,5	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2511  1456  170F               	bsf	15,6	;volatile
  2512                           
  2513                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2514  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2515  1458  0185               	clrf	5	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2518  1459  0186               	clrf	6	;volatile
  2519                           
  2520                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2521  145A  0187               	clrf	7	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2524  145B  0189               	clrf	9	;volatile
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2527  145C  30EF               	movlw	239
  2528  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2529  145E  0085               	movwf	5	;volatile
  2530                           
  2531                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2532  145F  300F               	movlw	15
  2533  1460  0086               	movwf	6	;volatile
  2534                           
  2535                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2536  1461  30F0               	movlw	240
  2537  1462  0087               	movwf	7	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2540  1463  30FF               	movlw	255
  2541  1464  0089               	movwf	9	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2544  1465  3011               	movlw	17
  2545  1466  1703               	bsf	3,6	;RP1=1, select bank3
  2546  1467  0088               	movwf	8	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2549  1468  0189               	clrf	9	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2552  1469  1303               	bcf	3,6	;RP1=0, select bank1
  2553  146A  1381               	bcf	1,7	;volatile
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2556  146B  300F               	movlw	15
  2557  146C  0095               	movwf	21	;volatile
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2560  146D  1283               	bcf	3,5	;RP0=0, select bank0
  2561  146E  1786               	bsf	6,7	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2564  146F  1706               	bsf	6,6	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2567  1470  1686               	bsf	6,5	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2570  1471  3000               	movlw	0
  2571  1472  00A3               	movwf	my_delay_ms_WDT@time+3
  2572  1473  3000               	movlw	0
  2573  1474  00A2               	movwf	my_delay_ms_WDT@time+2
  2574  1475  3003               	movlw	3
  2575  1476  00A1               	movwf	my_delay_ms_WDT@time+1
  2576  1477  30E8               	movlw	232
  2577  1478  00A0               	movwf	my_delay_ms_WDT@time
  2578  1479  160A  158A  2580  160A  118A  	fcall	_my_delay_ms_WDT
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2581  147E  1683               	bsf	3,5	;RP0=1, select bank1
  2582  147F  1281               	bcf	1,5	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2585  1480  1581               	bsf	1,3	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2588  1481  1401               	bsf	1,0	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2591  1482  1481               	bsf	1,1	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2594  1483  1501               	bsf	1,2	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2597  1484  128B               	bcf	11,5	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2600  1485  120B               	bcf	11,4	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2603  1486  178B               	bsf	11,7	;volatile
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2606  1487  170B               	bsf	11,6	;volatile
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2609  1488  1283               	bcf	3,5	;RP0=0, select bank0
  2610  1489  1610               	bsf	16,4	;volatile
  2611                           
  2612                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2613  148A  1690               	bsf	16,5	;volatile
  2614                           
  2615                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2616  148B  1090               	bcf	16,1	;volatile
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2619  148C  1683               	bsf	3,5	;RP0=1, select bank1
  2620  148D  140C               	bsf	12,0	;volatile
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2623  148E  3001               	movlw	1
  2624  148F  1283               	bcf	3,5	;RP0=0, select bank0
  2625  1490  0090               	movwf	16	;volatile
  2626  1491  0064               	clrwdt	;# 
  2627                           
  2628                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2629  1492  120A  118A  27F2  160A  118A  	fcall	_ADC_init
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2632  1497  3000               	movlw	0
  2633  1498  00B1               	movwf	I2C_Master_Init@c+3
  2634  1499  3001               	movlw	1
  2635  149A  00B0               	movwf	I2C_Master_Init@c+2
  2636  149B  3086               	movlw	134
  2637  149C  00AF               	movwf	I2C_Master_Init@c+1
  2638  149D  30A0               	movlw	160
  2639  149E  00AE               	movwf	I2C_Master_Init@c
  2640  149F  160A  158A  2449  160A  118A  	fcall	_I2C_Master_Init
  2641                           
  2642                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2643  14A4  3000               	movlw	0
  2644  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  2645  14A6  00A3               	movwf	USART_init@baudrate+3
  2646  14A7  3001               	movlw	1
  2647  14A8  00A2               	movwf	USART_init@baudrate+2
  2648  14A9  30C2               	movlw	194
  2649  14AA  00A1               	movwf	USART_init@baudrate+1
  2650  14AB  3000               	movlw	0
  2651  14AC  00A0               	movwf	USART_init@baudrate
  2652  14AD  160A  158A  2630  160A  118A  	fcall	_USART_init
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2655  14B2  3010               	movlw	16
  2656  14B3  160A  158A  239B  160A  118A  	fcall	_EEPROM_Read_Integer
  2657  14B8  0824               	movf	?_EEPROM_Read_Integer+1,w
  2658  14B9  00EE               	movwf	main@reset+1
  2659  14BA  0823               	movf	?_EEPROM_Read_Integer,w
  2660  14BB  00ED               	movwf	main@reset
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2663  14BC  0A6D               	incf	main@reset,w
  2664  14BD  1D03               	skipz
  2665  14BE  2CCB               	goto	l7576
  2666  14BF  0A6E               	incf	main@reset+1,w
  2667  14C0  1D03               	btfss	3,2
  2668  14C1  2CCB               	goto	l7576
  2669  14C2  3000               	movlw	0
  2670  14C3  00A5               	movwf	EEPROM_Write_Integer@dado
  2671  14C4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2672  14C5  3010               	movlw	16
  2673  14C6  160A  158A  247A  160A  118A  	fcall	_EEPROM_Write_Integer
  2674  14CB                     l7576:	
  2675                           
  2676                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2677  14CB  3001               	movlw	1
  2678  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  2679  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  2680  14CE  07ED               	addwf	main@reset,f
  2681  14CF  1803               	skipnc
  2682  14D0  0AEE               	incf	main@reset+1,f
  2683  14D1  3000               	movlw	0
  2684  14D2  07EE               	addwf	main@reset+1,f
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2687  14D3  086E               	movf	main@reset+1,w
  2688  14D4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2689  14D5  086D               	movf	main@reset,w
  2690  14D6  00A5               	movwf	EEPROM_Write_Integer@dado
  2691  14D7  3010               	movlw	16
  2692  14D8  160A  158A  247A  160A  118A  	fcall	_EEPROM_Write_Integer
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2695  14DD  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2696  14DE  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2699  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  2700  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  2701  14E1  01E1               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2702  14E2  01E2               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2705  14E3  01FA               	clrf	_Delay_Led_Memory	;volatile
  2706  14E4  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2709  14E5  01E9               	clrf	_segundo^(0+128)	;volatile
  2710                           
  2711                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2712  14E6  01E8               	clrf	_hora^(0+128)	;volatile
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2715  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  2716  14E8  1007               	bcf	7,0	;volatile
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2719  14E9  1087               	bcf	7,1	;volatile
  2720                           
  2721                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2722  14EA  1105               	bcf	5,2	;volatile
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2725  14EB  1185               	bcf	5,3	;volatile
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2728  14EC  0906               	comf	6,w	;volatile
  2729  14ED  390F               	andlw	15
  2730  14EE  00EA               	movwf	??_main
  2731  14EF  086A               	movf	??_main,w
  2732  14F0  1683               	bsf	3,5	;RP0=1, select bank1
  2733  14F1  00E5               	movwf	_Board_Number^(0+128)
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2736  14F2  01E6               	clrf	_canal^(0+128)
  2737  14F3  0AE6               	incf	_canal^(0+128),f
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2740  14F4  116A               	bcf	_statuspower^(0+128),2
  2741  14F5                     l7602:	
  2742                           
  2743                           ;SlaveLiofilizadorVer1.c: 245:           {;SlaveLiofilizadorVer1.c: 247:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2744  14F5  17EB               	bsf	_generic_status^(0+128),7
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 273:          if(++canal==2) canal=0;
  2747  14F6  3001               	movlw	1
  2748  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2749  14F8  00EA               	movwf	??_main
  2750  14F9  086A               	movf	??_main,w
  2751  14FA  1683               	bsf	3,5	;RP0=1, select bank1
  2752  14FB  07E6               	addwf	_canal^(0+128),f
  2753  14FC  3002               	movlw	2
  2754  14FD  0666               	xorwf	_canal^(0+128),w
  2755  14FE  1903               	btfsc	3,2
  2756  14FF  01E6               	clrf	_canal^(0+128)
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 274:          MediaPlacaVaccum(canal);
  2759  1500  0866               	movf	_canal^(0+128),w
  2760  1501  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 282:          if(generic_status.flag_usart_rx==1)
  2763  1506  1683               	bsf	3,5	;RP0=1, select bank1
  2764  1507  1C6B               	btfss	_generic_status^(0+128),0
  2765  1508  2CF5               	goto	l7602
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 283:             {;SlaveLiofilizadorVer1.c: 284:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2768  1509  1703               	bsf	3,6	;RP1=1, select bank3
  2769  150A  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2770  150B  1303               	bcf	3,6	;RP1=0, select bank1
  2771  150C  00DE               	movwf	(_header+1)^(0+128)
  2772  150D  1703               	bsf	3,6	;RP1=1, select bank3
  2773  150E  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2774  150F  1303               	bcf	3,6	;RP1=0, select bank1
  2775  1510  00DD               	movwf	_header^(0+128)
  2776                           
  2777                           ;SlaveLiofilizadorVer1.c: 285:             if(header==0xAABB)
  2778  1511  30BB               	movlw	187
  2779  1512  065D               	xorwf	_header^(0+128),w
  2780  1513  30AA               	movlw	170
  2781  1514  1903               	skipnz
  2782  1515  065E               	xorwf	(_header+1)^(0+128),w
  2783  1516  1D03               	btfss	3,2
  2784  1517  2CF5               	goto	l7602
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 286:                {;SlaveLiofilizadorVer1.c: 287:           
      +                               destino =usart_buffer[3];
  2787  1518  1703               	bsf	3,6	;RP1=1, select bank3
  2788  1519  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2789  151A  1283               	bcf	3,5	;RP0=0, select bank0
  2790  151B  1303               	bcf	3,6	;RP1=0, select bank0
  2791  151C  00EA               	movwf	??_main
  2792  151D  086A               	movf	??_main,w
  2793  151E  1683               	bsf	3,5	;RP0=1, select bank1
  2794  151F  00E4               	movwf	_destino^(0+128)
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 288:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2797  1520  0864               	movf	_destino^(0+128),w
  2798  1521  0665               	xorwf	_Board_Number^(0+128),w
  2799  1522  1D03               	btfss	3,2
  2800  1523  0A64               	incf	_destino^(0+128),w
  2801  1524  1D03               	btfss	3,2
  2802  1525  2CF5               	goto	l7602
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 289:                       {;SlaveLiofilizadorVer1.c: 290:    
      +                                             Delay_Led_Usart=20;
  2805  1526  3014               	movlw	20
  2806  1527  00E1               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2807  1528  3000               	movlw	0
  2808  1529  00E2               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2809                           
  2810                           ;SlaveLiofilizadorVer1.c: 291:                       Decodify_Command();
  2811  152A  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2812                           
  2813                           ;SlaveLiofilizadorVer1.c: 292:                       generic_status.flag_usart_rx=0;
  2814  152F  1683               	bsf	3,5	;RP0=1, select bank1
  2815  1530  106B               	bcf	_generic_status^(0+128),0
  2816                           
  2817                           ;SlaveLiofilizadorVer1.c: 295:             }
  2818  1531  2CF5               	goto	l7602
  2819  1532                     __end_of_main:	
  2820                           
  2821                           	psect	text1
  2822  1D80                     __ptext1:	
  2823 ;; *************** function _my_delay_ms_WDT *****************
  2824 ;; Defined at:
  2825 ;;		line 13 in file "my_delay.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  time            4    0[BANK0 ] long 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  i               4    6[BANK0 ] long 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, btemp+1
  2834 ;; Tracked objects:
  2835 ;;		On entry : 300/0
  2836 ;;		On exit  : 300/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       4       0       0       0
  2840 ;;      Locals:         0       4       0       0       0
  2841 ;;      Temps:          0       2       0       0       0
  2842 ;;      Totals:         0      10       0       0       0
  2843 ;;Total ram usage:       10 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _my_delay_ms_WDT
  2855  1D80                     _my_delay_ms_WDT:	
  2856                           
  2857                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
  2861  1D80  3000               	movlw	0
  2862  1D81  00A9               	movwf	my_delay_ms_WDT@i+3
  2863  1D82  3000               	movlw	0
  2864  1D83  00A8               	movwf	my_delay_ms_WDT@i+2
  2865  1D84  3000               	movlw	0
  2866  1D85  00A7               	movwf	my_delay_ms_WDT@i+1
  2867  1D86  3000               	movlw	0
  2868  1D87  00A6               	movwf	my_delay_ms_WDT@i
  2869  1D88                     l7152:	
  2870  1D88  0829               	movf	my_delay_ms_WDT@i+3,w
  2871  1D89  3A80               	xorlw	128
  2872  1D8A  00FF               	movwf	127
  2873  1D8B  0823               	movf	my_delay_ms_WDT@time+3,w
  2874  1D8C  3A80               	xorlw	128
  2875  1D8D  027F               	subwf	127,w
  2876  1D8E  1D03               	skipz
  2877  1D8F  2D9A               	goto	u7703
  2878  1D90  0822               	movf	my_delay_ms_WDT@time+2,w
  2879  1D91  0228               	subwf	my_delay_ms_WDT@i+2,w
  2880  1D92  1D03               	skipz
  2881  1D93  2D9A               	goto	u7703
  2882  1D94  0821               	movf	my_delay_ms_WDT@time+1,w
  2883  1D95  0227               	subwf	my_delay_ms_WDT@i+1,w
  2884  1D96  1D03               	skipz
  2885  1D97  2D9A               	goto	u7703
  2886  1D98  0820               	movf	my_delay_ms_WDT@time,w
  2887  1D99  0226               	subwf	my_delay_ms_WDT@i,w
  2888  1D9A                     u7703:	
  2889  1D9A  1803               	btfsc	3,0
  2890  1D9B  0008               	return
  2891  1D9C  0064               	clrwdt	;# 
  2892                           
  2893                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2894  1D9D  3003               	movlw	3
  2895  1D9E  1283               	bcf	3,5	;RP0=0, select bank0
  2896  1D9F  1303               	bcf	3,6	;RP1=0, select bank0
  2897  1DA0  00A5               	movwf	??_my_delay_ms_WDT+1
  2898  1DA1  3097               	movlw	151
  2899  1DA2  00A4               	movwf	??_my_delay_ms_WDT
  2900  1DA3                     u8007:	
  2901  1DA3  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2902  1DA4  2DA3               	goto	u8007
  2903  1DA5  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2904  1DA6  2DA3               	goto	u8007
  2905                           
  2906                           ;my_delay.c: 19:             }
  2907  1DA7  3001               	movlw	1
  2908  1DA8  1283               	bcf	3,5	;RP0=0, select bank0
  2909  1DA9  1303               	bcf	3,6	;RP1=0, select bank0
  2910  1DAA  07A6               	addwf	my_delay_ms_WDT@i,f
  2911  1DAB  3000               	movlw	0
  2912  1DAC  1803               	skipnc
  2913  1DAD  3001               	movlw	1
  2914  1DAE  07A7               	addwf	my_delay_ms_WDT@i+1,f
  2915  1DAF  3000               	movlw	0
  2916  1DB0  1803               	skipnc
  2917  1DB1  3001               	movlw	1
  2918  1DB2  07A8               	addwf	my_delay_ms_WDT@i+2,f
  2919  1DB3  3000               	movlw	0
  2920  1DB4  1803               	skipnc
  2921  1DB5  3001               	movlw	1
  2922  1DB6  07A9               	addwf	my_delay_ms_WDT@i+3,f
  2923  1DB7  2D88               	goto	l7152
  2924  1DB8                     __end_of_my_delay_ms_WDT:	
  2925                           
  2926                           	psect	text2
  2927  1E30                     __ptext2:	
  2928 ;; *************** function _USART_init *****************
  2929 ;; Defined at:
  2930 ;;		line 18 in file "usart.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  i               1    6[BANK0 ] unsigned char 
  2935 ;;  erro            1    0        unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 300/0
  2942 ;;		On exit  : 300/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       4       0       0       0
  2946 ;;      Locals:         0       2       0       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       7       0       0       0
  2949 ;;Total ram usage:        7 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _USART_init
  2961  1E30                     _USART_init:	
  2962                           
  2963                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2967  1E30  304B               	movlw	75
  2968  1E31  0621               	xorwf	USART_init@baudrate+1,w
  2969  1E32  0420               	iorwf	USART_init@baudrate,w
  2970  1E33  0422               	iorwf	USART_init@baudrate+2,w
  2971  1E34  0423               	iorwf	USART_init@baudrate+3,w
  2972  1E35  1D03               	btfss	3,2
  2973  1E36  2E41               	goto	l7172
  2974                           
  2975                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2976  1E37  1798               	bsf	24,7	;volatile
  2977                           
  2978                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2979  1E38  1618               	bsf	24,4	;volatile
  2980                           
  2981                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2982  1E39  1683               	bsf	3,5	;RP0=1, select bank1
  2983  1E3A  1518               	bsf	24,2	;volatile
  2984                           
  2985                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2986  1E3B  1218               	bcf	24,4	;volatile
  2987                           
  2988                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2989  1E3C  1318               	bcf	24,6	;volatile
  2990                           
  2991                           ;usart.c: 32:           SPBRG =12;
  2992  1E3D  300C               	movlw	12
  2993  1E3E  0099               	movwf	25	;volatile
  2994                           
  2995                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2996  1E3F  170B               	bsf	11,6	;volatile
  2997  1E40  2E5A               	goto	L1
  2998  1E41                     l7172:	
  2999                           ;usart.c: 35:           }
  3000                           
  3001                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  3002                           
  3003  1E41  30C2               	movlw	194
  3004  1E42  0621               	xorwf	USART_init@baudrate+1,w
  3005  1E43  1D03               	skipz
  3006  1E44  2E5B               	goto	l7192
  3007  1E45  0322               	decf	USART_init@baudrate+2,w
  3008  1E46  0420               	iorwf	USART_init@baudrate,w
  3009  1E47  0423               	iorwf	USART_init@baudrate+3,w
  3010  1E48  1D03               	btfss	3,2
  3011  1E49  2E5B               	goto	l7192
  3012                           
  3013                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  3014  1E4A  3010               	movlw	16
  3015  1E4B  1683               	bsf	3,5	;RP0=1, select bank1
  3016  1E4C  0099               	movwf	25	;volatile
  3017                           
  3018                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  3019  1E4D  1703               	bsf	3,6	;RP1=1, select bank3
  3020  1E4E  1587               	bsf	7,3	;volatile
  3021                           
  3022                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  3023  1E4F  1303               	bcf	3,6	;RP1=0, select bank1
  3024  1E50  1518               	bsf	24,2	;volatile
  3025                           
  3026                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  3027  1E51  1283               	bcf	3,5	;RP0=0, select bank0
  3028  1E52  1798               	bsf	24,7	;volatile
  3029                           
  3030                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  3031  1E53  1683               	bsf	3,5	;RP0=1, select bank1
  3032  1E54  1218               	bcf	24,4	;volatile
  3033                           
  3034                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  3035  1E55  1318               	bcf	24,6	;volatile
  3036                           
  3037                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3038  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  3039  1E57  1618               	bsf	24,4	;volatile
  3040                           
  3041                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3042  1E58  170B               	bsf	11,6	;volatile
  3043                           
  3044                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3045  1E59  1683               	bsf	3,5	;RP0=1, select bank1
  3046  1E5A                     L1:	
  3047  1E5A  168C               	bsf	12,5	;volatile
  3048  1E5B                     l7192:	
  3049                           
  3050                           ;usart.c: 68:      TRISC6= 1;
  3051  1E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3052  1E5C  1707               	bsf	7,6	;volatile
  3053                           
  3054                           ;usart.c: 69:      TRISC7= 1;
  3055  1E5D  1787               	bsf	7,7	;volatile
  3056                           
  3057                           ;usart.c: 71:      CREN=0;
  3058  1E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3059  1E5F  1218               	bcf	24,4	;volatile
  3060                           
  3061                           ;usart.c: 72:      CREN=1;
  3062  1E60  1618               	bsf	24,4	;volatile
  3063                           
  3064                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3065  1E61  01A6               	clrf	USART_init@i
  3066  1E62                     l7206:	
  3067  1E62  081A               	movf	26,w	;volatile
  3068  1E63  3001               	movlw	1
  3069  1E64  00A4               	movwf	??_USART_init
  3070  1E65  0824               	movf	??_USART_init,w
  3071  1E66  07A6               	addwf	USART_init@i,f
  3072  1E67  300F               	movlw	15
  3073  1E68  0226               	subwf	USART_init@i,w
  3074  1E69  1803               	btfsc	3,0
  3075  1E6A  0008               	return
  3076  1E6B  2E62               	goto	l7206
  3077  1E6C                     __end_of_USART_init:	
  3078                           
  3079                           	psect	text3
  3080  0D69                     __ptext3:	
  3081 ;; *************** function _MediaPlacaVaccum *****************
  3082 ;; Defined at:
  3083 ;;		line 788 in file "SlaveLiofilizadorVer1.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  canal           1    wreg     unsigned char 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  canal           1    4[BANK1 ] unsigned char 
  3088 ;;  Temp            4    5[BANK1 ] float 
  3089 ;;  Valor           4    0[BANK1 ] float 
  3090 ;;  i               2    9[BANK1 ] unsigned int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 300/100
  3097 ;;		On exit  : 200/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         0       0      11       0       0
  3102 ;;      Temps:          0       4       0       0       0
  3103 ;;      Totals:         0       4      11       0       0
  3104 ;;Total ram usage:       15 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		_ADC_Max_10Bits
  3109 ;;		_ADC_Media_10bits
  3110 ;;		_Package_Usart_is_for_me
  3111 ;;		___fladd
  3112 ;;		___fldiv
  3113 ;;		___flge
  3114 ;;		___flmul
  3115 ;;		___flsub
  3116 ;;		___xxtofl
  3117 ;;		_my_delay_ms
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _MediaPlacaVaccum
  3125  0D69                     _MediaPlacaVaccum:	
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3129                           ;MediaPlacaVaccum@canal stored from wreg
  3130  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3131                           
  3132                           ;SlaveLiofilizadorVer1.c: 789:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 790:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 794:      if(canal==0)
  3133  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3134  0D6B  1D03               	btfss	3,2
  3135  0D6C  2F0F               	goto	l303
  3136                           
  3137                           ;SlaveLiofilizadorVer1.c: 795:        {;SlaveLiofilizadorVer1.c: 796:        ADCON1bits.
      +                          VCFG0=1;
  3138  0D6D  161F               	bsf	31,4	;volatile
  3139                           
  3140                           ;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.VCFG1=1;
  3141  0D6E  169F               	bsf	31,5	;volatile
  3142                           
  3143                           ;SlaveLiofilizadorVer1.c: 798:        ADCON0bits.CHS=canal;
  3144  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3145  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3147  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3148  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3149  0D74  081F               	movf	31,w	;volatile
  3150  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3151  0D76  39C3               	andlw	-61
  3152  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3153  0D78  009F               	movwf	31	;volatile
  3154                           
  3155                           ;SlaveLiofilizadorVer1.c: 799:        my_delay_ms(10);
  3156  0D79  3000               	movlw	0
  3157  0D7A  00A3               	movwf	my_delay_ms@time+3
  3158  0D7B  3000               	movlw	0
  3159  0D7C  00A2               	movwf	my_delay_ms@time+2
  3160  0D7D  3000               	movlw	0
  3161  0D7E  00A1               	movwf	my_delay_ms@time+1
  3162  0D7F  300A               	movlw	10
  3163  0D80  00A0               	movwf	my_delay_ms@time
  3164  0D81  160A  158A  2511  120A  158A  	fcall	_my_delay_ms
  3165                           
  3166                           ;SlaveLiofilizadorVer1.c: 800:        Temp=0;
  3167  0D86  3000               	movlw	0
  3168  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3170  0D89  3000               	movlw	0
  3171  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3172  0D8B  3000               	movlw	0
  3173  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3174  0D8D  3000               	movlw	0
  3175  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3176                           
  3177                           ;SlaveLiofilizadorVer1.c: 802:        for(i=1;i<15;i++)
  3178  0D8F  3001               	movlw	1
  3179  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3180  0D91  3000               	movlw	0
  3181  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3182  0D93                     l7228:	
  3183                           
  3184                           ;SlaveLiofilizadorVer1.c: 803:            {;SlaveLiofilizadorVer1.c: 804:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3185  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3186  0D94  160A  158A  26EF  120A  158A  	fcall	_ADC_Media_10bits
  3187  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3188  0D9A  00CD               	movwf	___fladd@b+3
  3189  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3190  0D9C  00CC               	movwf	___fladd@b+2
  3191  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3192  0D9E  00CB               	movwf	___fladd@b+1
  3193  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3194  0DA0  00CA               	movwf	___fladd@b
  3195  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3197  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0DA4  00D1               	movwf	___fladd@a+3
  3199  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3201  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0DA8  00D0               	movwf	___fladd@a+2
  3203  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3205  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DAC  00CF               	movwf	___fladd@a+1
  3207  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3209  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0DB0  00CE               	movwf	___fladd@a
  3211  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3212  0DB6  084D               	movf	?___fladd+3,w
  3213  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3215  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0DBA  084C               	movf	?___fladd+2,w
  3217  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3219  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0DBE  084B               	movf	?___fladd+1,w
  3221  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3223  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0DC2  084A               	movf	?___fladd,w
  3225  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3227                           
  3228                           ;SlaveLiofilizadorVer1.c: 805:            if(Package_Usart_is_for_me()==1) break;
  3229  0DC5  160A  158A  21E3  120A  158A  	fcall	_Package_Usart_is_for_me
  3230  0DCA  3A01               	xorlw	1
  3231  0DCB  1903               	btfsc	3,2
  3232  0DCC  2DDB               	goto	l7236
  3233                           
  3234                           ;SlaveLiofilizadorVer1.c: 806:            }
  3235  0DCD  3001               	movlw	1
  3236  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3238  0DD0  1803               	skipnc
  3239  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3240  0DD2  3000               	movlw	0
  3241  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3242  0DD4  3000               	movlw	0
  3243  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3244  0DD6  300F               	movlw	15
  3245  0DD7  1903               	skipnz
  3246  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3247  0DD9  1C03               	skipc
  3248  0DDA  2D93               	goto	l7228
  3249  0DDB                     l7236:	
  3250                           
  3251                           ;SlaveLiofilizadorVer1.c: 807:        if(i<10)
  3252  0DDB  3000               	movlw	0
  3253  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3255  0DDE  300A               	movlw	10
  3256  0DDF  1903               	skipnz
  3257  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3258  0DE1  1C03               	btfss	3,0
  3259  0DE2  0008               	return
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 813:        if(i==15)
  3262  0DE3  300F               	movlw	15
  3263  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3264  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3265  0DE6  1D03               	btfss	3,2
  3266  0DE7  2DF2               	goto	l7244
  3267                           
  3268                           ;SlaveLiofilizadorVer1.c: 814:          Temp/=(i-1);
  3269  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3270  0DE9  3EFF               	addlw	255
  3271  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0DEB  00B3               	movwf	___xxtofl@val
  3273  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3275  0DEE  1803               	skipnc
  3276  0DEF  3E01               	addlw	1
  3277  0DF0  3EFF               	addlw	255
  3278  0DF1  2DF7               	goto	L2
  3279  0DF2                     l7244:	
  3280                           
  3281                           ;SlaveLiofilizadorVer1.c: 816:          Temp/=(i);
  3282  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3283  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0DF4  00B3               	movwf	___xxtofl@val
  3285  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3287  0DF7                     L2:	
  3288  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3289  0DF8  00B4               	movwf	___xxtofl@val+1
  3290  0DF9  01B5               	clrf	___xxtofl@val+2
  3291  0DFA  01B6               	clrf	___xxtofl@val+3
  3292  0DFB  3000               	movlw	0
  3293  0DFC  160A  118A  21CC  120A  158A  	fcall	___xxtofl
  3294  0E01  0836               	movf	?___xxtofl+3,w
  3295  0E02  00C4               	movwf	___fldiv@a+3
  3296  0E03  0835               	movf	?___xxtofl+2,w
  3297  0E04  00C3               	movwf	___fldiv@a+2
  3298  0E05  0834               	movf	?___xxtofl+1,w
  3299  0E06  00C2               	movwf	___fldiv@a+1
  3300  0E07  0833               	movf	?___xxtofl,w
  3301  0E08  00C1               	movwf	___fldiv@a
  3302  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3304  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E0C  00C8               	movwf	___fldiv@b+3
  3306  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3308  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E10  00C7               	movwf	___fldiv@b+2
  3310  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3312  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E14  00C6               	movwf	___fldiv@b+1
  3314  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3315  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3316  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0E18  00C5               	movwf	___fldiv@b
  3318  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3319  0E1E  0844               	movf	?___fldiv+3,w
  3320  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3322  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E22  0843               	movf	?___fldiv+2,w
  3324  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3326  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0E26  0842               	movf	?___fldiv+1,w
  3328  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3330  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0E2A  0841               	movf	?___fldiv,w
  3332  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3334                           
  3335                           ;SlaveLiofilizadorVer1.c: 818:        Vaccum0 =1023.0-Temp;
  3336  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3337  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0E2F  00E1               	movwf	___flsub@a+3
  3339  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3341  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0E33  00E0               	movwf	___flsub@a+2
  3343  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3345  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0E37  00DF               	movwf	___flsub@a+1
  3347  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3349  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0E3B  00DE               	movwf	___flsub@a
  3351  0E3C  3044               	movlw	68
  3352  0E3D  00E5               	movwf	___flsub@b+3
  3353  0E3E  307F               	movlw	127
  3354  0E3F  00E4               	movwf	___flsub@b+2
  3355  0E40  30C0               	movlw	192
  3356  0E41  00E3               	movwf	___flsub@b+1
  3357  0E42  3000               	movlw	0
  3358  0E43  00E2               	movwf	___flsub@b
  3359  0E44  160A  158A  226A  120A  158A  	fcall	___flsub
  3360  0E49  0861               	movf	?___flsub+3,w
  3361  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0E4B  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3363  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0E4D  0860               	movf	?___flsub+2,w
  3365  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0E4F  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3367  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E51  085F               	movf	?___flsub+1,w
  3369  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E53  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3371  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0E55  085E               	movf	?___flsub,w
  3373  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0E57  00D3               	movwf	_Vaccum0^(0+128)
  3375                           
  3376                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0*=Vaccum0;
  3377  0E58  0856               	movf	(_Vaccum0+3)^(0+128),w
  3378  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0E5A  00AC               	movwf	___flmul@b+3
  3380  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0E5C  0855               	movf	(_Vaccum0+2)^(0+128),w
  3382  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0E5E  00AB               	movwf	___flmul@b+2
  3384  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0E60  0854               	movf	(_Vaccum0+1)^(0+128),w
  3386  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0E62  00AA               	movwf	___flmul@b+1
  3388  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0E64  0853               	movf	_Vaccum0^(0+128),w
  3390  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E66  00A9               	movwf	___flmul@b
  3392  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0E68  0856               	movf	(_Vaccum0+3)^(0+128),w
  3394  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0E6A  00B0               	movwf	___flmul@a+3
  3396  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0E6C  0855               	movf	(_Vaccum0+2)^(0+128),w
  3398  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0E6E  00AF               	movwf	___flmul@a+2
  3400  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0E70  0854               	movf	(_Vaccum0+1)^(0+128),w
  3402  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0E72  00AE               	movwf	___flmul@a+1
  3404  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3405  0E74  0853               	movf	_Vaccum0^(0+128),w
  3406  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0E76  00AD               	movwf	___flmul@a
  3408  0E77  120A  118A  24B6  120A  158A  	fcall	___flmul
  3409  0E7C  082C               	movf	?___flmul+3,w
  3410  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0E7E  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3412  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E80  082B               	movf	?___flmul+2,w
  3414  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0E82  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3416  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0E84  082A               	movf	?___flmul+1,w
  3418  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0E86  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3420  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0E88  0829               	movf	?___flmul,w
  3422  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0E8A  00D3               	movwf	_Vaccum0^(0+128)
  3424                           
  3425                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=0.00222;
  3426  0E8B  303B               	movlw	59
  3427  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0E8D  00AC               	movwf	___flmul@b+3
  3429  0E8E  3011               	movlw	17
  3430  0E8F  00AB               	movwf	___flmul@b+2
  3431  0E90  307D               	movlw	125
  3432  0E91  00AA               	movwf	___flmul@b+1
  3433  0E92  306B               	movlw	107
  3434  0E93  00A9               	movwf	___flmul@b
  3435  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0E95  0856               	movf	(_Vaccum0+3)^(0+128),w
  3437  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0E97  00B0               	movwf	___flmul@a+3
  3439  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0E99  0855               	movf	(_Vaccum0+2)^(0+128),w
  3441  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0E9B  00AF               	movwf	___flmul@a+2
  3443  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0E9D  0854               	movf	(_Vaccum0+1)^(0+128),w
  3445  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0E9F  00AE               	movwf	___flmul@a+1
  3447  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0EA1  0853               	movf	_Vaccum0^(0+128),w
  3449  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0EA3  00AD               	movwf	___flmul@a
  3451  0EA4  120A  118A  24B6  120A  158A  	fcall	___flmul
  3452  0EA9  082C               	movf	?___flmul+3,w
  3453  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0EAB  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3455  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0EAD  082B               	movf	?___flmul+2,w
  3457  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0EAF  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3459  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0EB1  082A               	movf	?___flmul+1,w
  3461  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0EB3  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3463  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0EB5  0829               	movf	?___flmul,w
  3465  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0EB7  00D3               	movwf	_Vaccum0^(0+128)
  3467                           
  3468                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0+=150;
  3469  0EB8  3043               	movlw	67
  3470  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0EBA  00CD               	movwf	___fladd@b+3
  3472  0EBB  3016               	movlw	22
  3473  0EBC  00CC               	movwf	___fladd@b+2
  3474  0EBD  3000               	movlw	0
  3475  0EBE  00CB               	movwf	___fladd@b+1
  3476  0EBF  3000               	movlw	0
  3477  0EC0  00CA               	movwf	___fladd@b
  3478  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0EC2  0856               	movf	(_Vaccum0+3)^(0+128),w
  3480  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0EC4  00D1               	movwf	___fladd@a+3
  3482  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0EC6  0855               	movf	(_Vaccum0+2)^(0+128),w
  3484  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0EC8  00D0               	movwf	___fladd@a+2
  3486  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0ECA  0854               	movf	(_Vaccum0+1)^(0+128),w
  3488  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0ECC  00CF               	movwf	___fladd@a+1
  3490  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0ECE  0853               	movf	_Vaccum0^(0+128),w
  3492  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0ED0  00CE               	movwf	___fladd@a
  3494  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3495  0ED6  084D               	movf	?___fladd+3,w
  3496  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0ED8  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3498  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0EDA  084C               	movf	?___fladd+2,w
  3500  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0EDC  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3502  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0EDE  084B               	movf	?___fladd+1,w
  3504  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0EE0  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3506  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0EE2  084A               	movf	?___fladd,w
  3508  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0EE4  00D3               	movwf	_Vaccum0^(0+128)
  3510                           
  3511                           ;SlaveLiofilizadorVer1.c: 823:        if(Vaccum0>2000)Vaccum0=2000;
  3512  0EE5  3044               	movlw	68
  3513  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0EE7  00A3               	movwf	___flge@ff1+3
  3515  0EE8  30FA               	movlw	250
  3516  0EE9  00A2               	movwf	___flge@ff1+2
  3517  0EEA  3000               	movlw	0
  3518  0EEB  00A1               	movwf	___flge@ff1+1
  3519  0EEC  3000               	movlw	0
  3520  0EED  00A0               	movwf	___flge@ff1
  3521  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0EEF  0856               	movf	(_Vaccum0+3)^(0+128),w
  3523  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0EF1  00A7               	movwf	___flge@ff2+3
  3525  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0EF3  0855               	movf	(_Vaccum0+2)^(0+128),w
  3527  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0EF5  00A6               	movwf	___flge@ff2+2
  3529  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3530  0EF7  0854               	movf	(_Vaccum0+1)^(0+128),w
  3531  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0EF9  00A5               	movwf	___flge@ff2+1
  3533  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3534  0EFB  0853               	movf	_Vaccum0^(0+128),w
  3535  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0EFD  00A4               	movwf	___flge@ff2
  3537  0EFE  160A  118A  2139  120A  158A  	fcall	___flge
  3538  0F03  1803               	btfsc	3,0
  3539  0F04  0008               	return
  3540  0F05  3044               	movlw	68
  3541  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0F07  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3543  0F08  30FA               	movlw	250
  3544  0F09  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3545  0F0A  3000               	movlw	0
  3546  0F0B  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3547  0F0C  3000               	movlw	0
  3548  0F0D  00D3               	movwf	_Vaccum0^(0+128)
  3549  0F0E  0008               	return
  3550  0F0F                     l303:	
  3551                           ;SlaveLiofilizadorVer1.c: 826:      else
  3552                           
  3553                           
  3554                           ;SlaveLiofilizadorVer1.c: 827:        {;SlaveLiofilizadorVer1.c: 828:        ADCON1bits.
      +                          VCFG0=0;
  3555  0F0F  121F               	bcf	31,4	;volatile
  3556                           
  3557                           ;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.VCFG1=0;
  3558  0F10  129F               	bcf	31,5	;volatile
  3559                           
  3560                           ;SlaveLiofilizadorVer1.c: 830:        ADCON0bits.CHS=canal;
  3561  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3562  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3564  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3565  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3566  0F16  081F               	movf	31,w	;volatile
  3567  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3568  0F18  39C3               	andlw	-61
  3569  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3570  0F1A  009F               	movwf	31	;volatile
  3571                           
  3572                           ;SlaveLiofilizadorVer1.c: 831:        my_delay_ms(10);
  3573  0F1B  3000               	movlw	0
  3574  0F1C  00A3               	movwf	my_delay_ms@time+3
  3575  0F1D  3000               	movlw	0
  3576  0F1E  00A2               	movwf	my_delay_ms@time+2
  3577  0F1F  3000               	movlw	0
  3578  0F20  00A1               	movwf	my_delay_ms@time+1
  3579  0F21  300A               	movlw	10
  3580  0F22  00A0               	movwf	my_delay_ms@time
  3581  0F23  160A  158A  2511  120A  158A  	fcall	_my_delay_ms
  3582                           
  3583                           ;SlaveLiofilizadorVer1.c: 832:        Temp=0;
  3584  0F28  3000               	movlw	0
  3585  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3587  0F2B  3000               	movlw	0
  3588  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3589  0F2D  3000               	movlw	0
  3590  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3591  0F2F  3000               	movlw	0
  3592  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3593                           
  3594                           ;SlaveLiofilizadorVer1.c: 834:        for(i=1;i<15;i++)
  3595  0F31  3001               	movlw	1
  3596  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3597  0F33  3000               	movlw	0
  3598  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3599  0F35                     l7262:	
  3600                           
  3601                           ;SlaveLiofilizadorVer1.c: 835:            {;SlaveLiofilizadorVer1.c: 836:            Val
      +                          or=ADC_Max_10Bits(canal);
  3602  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3603  0F36  160A  158A  266C  120A  158A  	fcall	_ADC_Max_10Bits
  3604  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3605  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3606  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3607  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3608  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3609  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3610  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3611  0F42  00B6               	movwf	___xxtofl@val+3
  3612  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3613  0F44  00B5               	movwf	___xxtofl@val+2
  3614  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3615  0F46  00B4               	movwf	___xxtofl@val+1
  3616  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3617  0F48  00B3               	movwf	___xxtofl@val
  3618  0F49  3000               	movlw	0
  3619  0F4A  160A  118A  21CC  120A  158A  	fcall	___xxtofl
  3620  0F4F  0836               	movf	?___xxtofl+3,w
  3621  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3623  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0F53  0835               	movf	?___xxtofl+2,w
  3625  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3627  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0F57  0834               	movf	?___xxtofl+1,w
  3629  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3631  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0F5B  0833               	movf	?___xxtofl,w
  3633  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3635                           
  3636                           ;SlaveLiofilizadorVer1.c: 837:            if(Valor>Temp) Temp=Valor;
  3637  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3638  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0F60  00A3               	movwf	___flge@ff1+3
  3640  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3642  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0F64  00A2               	movwf	___flge@ff1+2
  3644  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3646  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0F68  00A1               	movwf	___flge@ff1+1
  3648  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3650  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0F6C  00A0               	movwf	___flge@ff1
  3652  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3654  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0F70  00A7               	movwf	___flge@ff2+3
  3656  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3657  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3658  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0F74  00A6               	movwf	___flge@ff2+2
  3660  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3661  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3662  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0F78  00A5               	movwf	___flge@ff2+1
  3664  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3666  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0F7C  00A4               	movwf	___flge@ff2
  3668  0F7D  160A  118A  2139  120A  158A  	fcall	___flge
  3669  0F82  1803               	btfsc	3,0
  3670  0F83  2F8D               	goto	l7268
  3671  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3673  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3674  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3675  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3676  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3677  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3678  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3679  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3680  0F8D                     l7268:	
  3681                           
  3682                           ;SlaveLiofilizadorVer1.c: 838:            if(Package_Usart_is_for_me()==1) break;
  3683  0F8D  160A  158A  21E3  120A  158A  	fcall	_Package_Usart_is_for_me
  3684  0F92  3A01               	xorlw	1
  3685  0F93  1903               	btfsc	3,2
  3686  0F94  2FA3               	goto	l7274
  3687                           
  3688                           ;SlaveLiofilizadorVer1.c: 839:            }
  3689  0F95  3001               	movlw	1
  3690  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3692  0F98  1803               	skipnc
  3693  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3694  0F9A  3000               	movlw	0
  3695  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3696  0F9C  3000               	movlw	0
  3697  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3698  0F9E  300F               	movlw	15
  3699  0F9F  1903               	skipnz
  3700  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3701  0FA1  1C03               	skipc
  3702  0FA2  2F35               	goto	l7262
  3703  0FA3                     l7274:	
  3704                           
  3705                           ;SlaveLiofilizadorVer1.c: 840:         if(i<10)
  3706  0FA3  3000               	movlw	0
  3707  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3709  0FA6  300A               	movlw	10
  3710  0FA7  1903               	skipnz
  3711  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3712  0FA9  1C03               	btfss	3,0
  3713  0FAA  0008               	return
  3714                           
  3715                           ;SlaveLiofilizadorVer1.c: 845:         Tensao1 =Temp*0.318296;
  3716  0FAB  303E               	movlw	62
  3717  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0FAD  00AC               	movwf	___flmul@b+3
  3719  0FAE  30A2               	movlw	162
  3720  0FAF  00AB               	movwf	___flmul@b+2
  3721  0FB0  30F7               	movlw	247
  3722  0FB1  00AA               	movwf	___flmul@b+1
  3723  0FB2  30B1               	movlw	177
  3724  0FB3  00A9               	movwf	___flmul@b
  3725  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3727  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FB7  00B0               	movwf	___flmul@a+3
  3729  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3731  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0FBB  00AF               	movwf	___flmul@a+2
  3733  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3735  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0FBF  00AE               	movwf	___flmul@a+1
  3737  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3739  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0FC3  00AD               	movwf	___flmul@a
  3741  0FC4  120A  118A  24B6  120A  158A  	fcall	___flmul
  3742  0FC9  082C               	movf	?___flmul+3,w
  3743  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3744  0FCB  00D2               	movwf	(_Tensao1+3)^(0+128)
  3745  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0FCD  082B               	movf	?___flmul+2,w
  3747  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0FCF  00D1               	movwf	(_Tensao1+2)^(0+128)
  3749  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0FD1  082A               	movf	?___flmul+1,w
  3751  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0FD3  00D0               	movwf	(_Tensao1+1)^(0+128)
  3753  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0FD5  0829               	movf	?___flmul,w
  3755  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3756  0FD7  00CF               	movwf	_Tensao1^(0+128)
  3757                           
  3758                           ;SlaveLiofilizadorVer1.c: 846:         if(Tensao1<15) Tensao1=0;
  3759  0FD8  0852               	movf	(_Tensao1+3)^(0+128),w
  3760  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0FDA  00A3               	movwf	___flge@ff1+3
  3762  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0FDC  0851               	movf	(_Tensao1+2)^(0+128),w
  3764  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0FDE  00A2               	movwf	___flge@ff1+2
  3766  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3767  0FE0  0850               	movf	(_Tensao1+1)^(0+128),w
  3768  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0FE2  00A1               	movwf	___flge@ff1+1
  3770  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3771  0FE4  084F               	movf	_Tensao1^(0+128),w
  3772  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3773  0FE6  00A0               	movwf	___flge@ff1
  3774  0FE7  3041               	movlw	65
  3775  0FE8  00A7               	movwf	___flge@ff2+3
  3776  0FE9  3070               	movlw	112
  3777  0FEA  00A6               	movwf	___flge@ff2+2
  3778  0FEB  3000               	movlw	0
  3779  0FEC  00A5               	movwf	___flge@ff2+1
  3780  0FED  3000               	movlw	0
  3781  0FEE  00A4               	movwf	___flge@ff2
  3782  0FEF  160A  118A  2139  120A  158A  	fcall	___flge
  3783  0FF4  1803               	btfsc	3,0
  3784  0FF5  0008               	return
  3785  0FF6  3000               	movlw	0
  3786  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0FF8  00D2               	movwf	(_Tensao1+3)^(0+128)
  3788  0FF9  3000               	movlw	0
  3789  0FFA  00D1               	movwf	(_Tensao1+2)^(0+128)
  3790  0FFB  3000               	movlw	0
  3791  0FFC  00D0               	movwf	(_Tensao1+1)^(0+128)
  3792  0FFD  3000               	movlw	0
  3793  0FFE  00CF               	movwf	_Tensao1^(0+128)
  3794  0FFF  0008               	return
  3795  1000                     __end_of_MediaPlacaVaccum:	
  3796                           
  3797                           	psect	text4
  3798  1A6A                     __ptext4:	
  3799 ;; *************** function ___flsub *****************
  3800 ;; Defined at:
  3801 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  a               4   62[BANK0 ] void 
  3804 ;;  b               4   66[BANK0 ] void 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  4   62[BANK0 ] void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 300/0
  3813 ;;		On exit  : 300/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       8       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       8       0       0       0
  3820 ;;Total ram usage:        8 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    2
  3823 ;; This function calls:
  3824 ;;		___fladd
  3825 ;; This function is called by:
  3826 ;;		_MediaPlacaVaccum
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function ___flsub
  3832  1A6A                     ___flsub:	
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3836  1A6A  3080               	movlw	128
  3837  1A6B  06E1               	xorwf	___flsub@a+3,f
  3838  1A6C  0865               	movf	___flsub@b+3,w
  3839  1A6D  00CD               	movwf	___fladd@b+3
  3840  1A6E  0864               	movf	___flsub@b+2,w
  3841  1A6F  00CC               	movwf	___fladd@b+2
  3842  1A70  0863               	movf	___flsub@b+1,w
  3843  1A71  00CB               	movwf	___fladd@b+1
  3844  1A72  0862               	movf	___flsub@b,w
  3845  1A73  00CA               	movwf	___fladd@b
  3846  1A74  0861               	movf	___flsub@a+3,w
  3847  1A75  00D1               	movwf	___fladd@a+3
  3848  1A76  0860               	movf	___flsub@a+2,w
  3849  1A77  00D0               	movwf	___fladd@a+2
  3850  1A78  085F               	movf	___flsub@a+1,w
  3851  1A79  00CF               	movwf	___fladd@a+1
  3852  1A7A  085E               	movf	___flsub@a,w
  3853  1A7B  00CE               	movwf	___fladd@a
  3854  1A7C  120A  158A  233C   	fcall	___fladd
  3855  1A7F  084D               	movf	?___fladd+3,w
  3856  1A80  00E1               	movwf	?___flsub+3
  3857  1A81  084C               	movf	?___fladd+2,w
  3858  1A82  00E0               	movwf	?___flsub+2
  3859  1A83  084B               	movf	?___fladd+1,w
  3860  1A84  00DF               	movwf	?___flsub+1
  3861  1A85  084A               	movf	?___fladd,w
  3862  1A86  00DE               	movwf	?___flsub
  3863  1A87  0008               	return
  3864  1A88                     __end_of___flsub:	
  3865                           
  3866                           	psect	text5
  3867  0B3C                     __ptext5:	
  3868 ;; *************** function ___fladd *****************
  3869 ;; Defined at:
  3870 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  b               4   42[BANK0 ] void 
  3873 ;;  a               4   46[BANK0 ] void 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  grs             1   61[BANK0 ] unsigned char 
  3876 ;;  bexp            1   60[BANK0 ] unsigned char 
  3877 ;;  aexp            1   59[BANK0 ] unsigned char 
  3878 ;;  signs           1   58[BANK0 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  4   42[BANK0 ] unsigned char 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, btemp+1
  3883 ;; Tracked objects:
  3884 ;;		On entry : 300/0
  3885 ;;		On exit  : 300/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       8       0       0       0
  3889 ;;      Locals:         0       4       0       0       0
  3890 ;;      Temps:          0       8       0       0       0
  3891 ;;      Totals:         0      20       0       0       0
  3892 ;;Total ram usage:       20 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_MediaPlacaVaccum
  3899 ;;		___flsub
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function ___fladd
  3905  0B3C                     ___fladd:	
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3909  0B3C  084D               	movf	___fladd@b+3,w
  3910  0B3D  3980               	andlw	128
  3911  0B3E  00D2               	movwf	??___fladd
  3912  0B3F  0852               	movf	??___fladd,w
  3913  0B40  00DA               	movwf	___fladd@signs
  3914  0B41  084D               	movf	___fladd@b+3,w
  3915  0B42  00D2               	movwf	??___fladd
  3916  0B43  0752               	addwf	??___fladd,w
  3917  0B44  00D3               	movwf	??___fladd+1
  3918  0B45  0853               	movf	??___fladd+1,w
  3919  0B46  00DC               	movwf	___fladd@bexp
  3920  0B47  1BCC               	btfsc	___fladd@b+2,7
  3921  0B48  145C               	bsf	___fladd@bexp,0
  3922  0B49  085C               	movf	___fladd@bexp,w
  3923  0B4A  1903               	btfsc	3,2
  3924  0B4B  2B5A               	goto	l6128
  3925  0B4C  0A5C               	incf	___fladd@bexp,w
  3926  0B4D  1D03               	btfss	3,2
  3927  0B4E  2B57               	goto	l6124
  3928  0B4F  3000               	movlw	0
  3929  0B50  00CD               	movwf	___fladd@b+3
  3930  0B51  3000               	movlw	0
  3931  0B52  00CC               	movwf	___fladd@b+2
  3932  0B53  3000               	movlw	0
  3933  0B54  00CB               	movwf	___fladd@b+1
  3934  0B55  3000               	movlw	0
  3935  0B56  00CA               	movwf	___fladd@b
  3936  0B57                     l6124:	
  3937  0B57  17CC               	bsf	___fladd@b+2,7
  3938  0B58  01CD               	clrf	___fladd@b+3
  3939  0B59  2B62               	goto	l6130
  3940  0B5A                     l6128:	
  3941  0B5A  3000               	movlw	0
  3942  0B5B  00CD               	movwf	___fladd@b+3
  3943  0B5C  3000               	movlw	0
  3944  0B5D  00CC               	movwf	___fladd@b+2
  3945  0B5E  3000               	movlw	0
  3946  0B5F  00CB               	movwf	___fladd@b+1
  3947  0B60  3000               	movlw	0
  3948  0B61  00CA               	movwf	___fladd@b
  3949  0B62                     l6130:	
  3950  0B62  0851               	movf	___fladd@a+3,w
  3951  0B63  3980               	andlw	128
  3952  0B64  00D2               	movwf	??___fladd
  3953  0B65  0852               	movf	??___fladd,w
  3954  0B66  00DB               	movwf	___fladd@aexp
  3955  0B67  085B               	movf	___fladd@aexp,w
  3956  0B68  065A               	xorwf	___fladd@signs,w
  3957  0B69  1D03               	btfss	3,2
  3958  0B6A  175A               	bsf	___fladd@signs,6
  3959  0B6B  0851               	movf	___fladd@a+3,w
  3960  0B6C  00D2               	movwf	??___fladd
  3961  0B6D  0752               	addwf	??___fladd,w
  3962  0B6E  00D3               	movwf	??___fladd+1
  3963  0B6F  0853               	movf	??___fladd+1,w
  3964  0B70  00DB               	movwf	___fladd@aexp
  3965  0B71  1BD0               	btfsc	___fladd@a+2,7
  3966  0B72  145B               	bsf	___fladd@aexp,0
  3967  0B73  085B               	movf	___fladd@aexp,w
  3968  0B74  1903               	btfsc	3,2
  3969  0B75  2B84               	goto	l6152
  3970  0B76  0A5B               	incf	___fladd@aexp,w
  3971  0B77  1D03               	btfss	3,2
  3972  0B78  2B81               	goto	l6148
  3973  0B79  3000               	movlw	0
  3974  0B7A  00D1               	movwf	___fladd@a+3
  3975  0B7B  3000               	movlw	0
  3976  0B7C  00D0               	movwf	___fladd@a+2
  3977  0B7D  3000               	movlw	0
  3978  0B7E  00CF               	movwf	___fladd@a+1
  3979  0B7F  3000               	movlw	0
  3980  0B80  00CE               	movwf	___fladd@a
  3981  0B81                     l6148:	
  3982  0B81  17D0               	bsf	___fladd@a+2,7
  3983  0B82  01D1               	clrf	___fladd@a+3
  3984  0B83  2B8C               	goto	l1246
  3985  0B84                     l6152:	
  3986  0B84  3000               	movlw	0
  3987  0B85  00D1               	movwf	___fladd@a+3
  3988  0B86  3000               	movlw	0
  3989  0B87  00D0               	movwf	___fladd@a+2
  3990  0B88  3000               	movlw	0
  3991  0B89  00CF               	movwf	___fladd@a+1
  3992  0B8A  3000               	movlw	0
  3993  0B8B  00CE               	movwf	___fladd@a
  3994  0B8C                     l1246:	
  3995  0B8C  085C               	movf	___fladd@bexp,w
  3996  0B8D  025B               	subwf	___fladd@aexp,w
  3997  0B8E  1803               	skipnc
  3998  0B8F  2BD2               	goto	l6188
  3999  0B90  1F5A               	btfss	___fladd@signs,6
  4000  0B91  2B96               	goto	l6158
  4001  0B92  3080               	movlw	128
  4002  0B93  00D2               	movwf	??___fladd
  4003  0B94  0852               	movf	??___fladd,w
  4004  0B95  06DA               	xorwf	___fladd@signs,f
  4005  0B96                     l6158:	
  4006  0B96  085C               	movf	___fladd@bexp,w
  4007  0B97  00D2               	movwf	??___fladd
  4008  0B98  0852               	movf	??___fladd,w
  4009  0B99  00DD               	movwf	___fladd@grs
  4010  0B9A  085B               	movf	___fladd@aexp,w
  4011  0B9B  00D2               	movwf	??___fladd
  4012  0B9C  0852               	movf	??___fladd,w
  4013  0B9D  00DC               	movwf	___fladd@bexp
  4014  0B9E  085D               	movf	___fladd@grs,w
  4015  0B9F  00D2               	movwf	??___fladd
  4016  0BA0  0852               	movf	??___fladd,w
  4017  0BA1  00DB               	movwf	___fladd@aexp
  4018  0BA2  084A               	movf	___fladd@b,w
  4019  0BA3  00D2               	movwf	??___fladd
  4020  0BA4  0852               	movf	??___fladd,w
  4021  0BA5  00DD               	movwf	___fladd@grs
  4022  0BA6  084E               	movf	___fladd@a,w
  4023  0BA7  00D2               	movwf	??___fladd
  4024  0BA8  0852               	movf	??___fladd,w
  4025  0BA9  00CA               	movwf	___fladd@b
  4026  0BAA  085D               	movf	___fladd@grs,w
  4027  0BAB  00D2               	movwf	??___fladd
  4028  0BAC  0852               	movf	??___fladd,w
  4029  0BAD  00CE               	movwf	___fladd@a
  4030  0BAE  084B               	movf	___fladd@b+1,w
  4031  0BAF  00D2               	movwf	??___fladd
  4032  0BB0  0852               	movf	??___fladd,w
  4033  0BB1  00DD               	movwf	___fladd@grs
  4034  0BB2  084F               	movf	___fladd@a+1,w
  4035  0BB3  00D2               	movwf	??___fladd
  4036  0BB4  0852               	movf	??___fladd,w
  4037  0BB5  00CB               	movwf	___fladd@b+1
  4038  0BB6  085D               	movf	___fladd@grs,w
  4039  0BB7  00D2               	movwf	??___fladd
  4040  0BB8  0852               	movf	??___fladd,w
  4041  0BB9  00CF               	movwf	___fladd@a+1
  4042  0BBA  084C               	movf	___fladd@b+2,w
  4043  0BBB  00D2               	movwf	??___fladd
  4044  0BBC  0852               	movf	??___fladd,w
  4045  0BBD  00DD               	movwf	___fladd@grs
  4046  0BBE  0850               	movf	___fladd@a+2,w
  4047  0BBF  00D2               	movwf	??___fladd
  4048  0BC0  0852               	movf	??___fladd,w
  4049  0BC1  00CC               	movwf	___fladd@b+2
  4050  0BC2  085D               	movf	___fladd@grs,w
  4051  0BC3  00D2               	movwf	??___fladd
  4052  0BC4  0852               	movf	??___fladd,w
  4053  0BC5  00D0               	movwf	___fladd@a+2
  4054  0BC6  084D               	movf	___fladd@b+3,w
  4055  0BC7  00D2               	movwf	??___fladd
  4056  0BC8  0852               	movf	??___fladd,w
  4057  0BC9  00DD               	movwf	___fladd@grs
  4058  0BCA  0851               	movf	___fladd@a+3,w
  4059  0BCB  00D2               	movwf	??___fladd
  4060  0BCC  0852               	movf	??___fladd,w
  4061  0BCD  00CD               	movwf	___fladd@b+3
  4062  0BCE  085D               	movf	___fladd@grs,w
  4063  0BCF  00D2               	movwf	??___fladd
  4064  0BD0  0852               	movf	??___fladd,w
  4065  0BD1  00D1               	movwf	___fladd@a+3
  4066  0BD2                     l6188:	
  4067  0BD2  01DD               	clrf	___fladd@grs
  4068  0BD3  085B               	movf	___fladd@aexp,w
  4069  0BD4  00D2               	movwf	??___fladd
  4070  0BD5  01D3               	clrf	??___fladd+1
  4071  0BD6  0853               	movf	??___fladd+1,w
  4072  0BD7  00D5               	movwf	??___fladd+3
  4073  0BD8  085C               	movf	___fladd@bexp,w
  4074  0BD9  0252               	subwf	??___fladd,w
  4075  0BDA  00D4               	movwf	??___fladd+2
  4076  0BDB  1C03               	skipc
  4077  0BDC  03D5               	decf	??___fladd+3,f
  4078  0BDD  0855               	movf	??___fladd+3,w
  4079  0BDE  3A80               	xorlw	128
  4080  0BDF  00FF               	movwf	127
  4081  0BE0  3080               	movlw	128
  4082  0BE1  027F               	subwf	127,w
  4083  0BE2  1D03               	skipz
  4084  0BE3  2BE6               	goto	u6045
  4085  0BE4  301A               	movlw	26
  4086  0BE5  0254               	subwf	??___fladd+2,w
  4087  0BE6                     u6045:	
  4088  0BE6  1C03               	skipc
  4089  0BE7  2C1F               	goto	l6206
  4090  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0BEA  084D               	movf	___fladd@b+3,w
  4093  0BEB  044C               	iorwf	___fladd@b+2,w
  4094  0BEC  044B               	iorwf	___fladd@b+1,w
  4095  0BED  044A               	iorwf	___fladd@b,w
  4096  0BEE  1903               	btfsc	3,2
  4097  0BEF  2BF2               	goto	u6050
  4098  0BF0  3001               	movlw	1
  4099  0BF1  2BF3               	goto	u6060
  4100  0BF2                     u6050:	
  4101  0BF2  3000               	movlw	0
  4102  0BF3                     u6060:	
  4103  0BF3  00D2               	movwf	??___fladd
  4104  0BF4  0852               	movf	??___fladd,w
  4105  0BF5  00DD               	movwf	___fladd@grs
  4106  0BF6  3000               	movlw	0
  4107  0BF7  00CD               	movwf	___fladd@b+3
  4108  0BF8  3000               	movlw	0
  4109  0BF9  00CC               	movwf	___fladd@b+2
  4110  0BFA  3000               	movlw	0
  4111  0BFB  00CB               	movwf	___fladd@b+1
  4112  0BFC  3000               	movlw	0
  4113  0BFD  00CA               	movwf	___fladd@b
  4114  0BFE  085B               	movf	___fladd@aexp,w
  4115  0BFF  00D2               	movwf	??___fladd
  4116  0C00  0852               	movf	??___fladd,w
  4117  0C01  00DC               	movwf	___fladd@bexp
  4118  0C02  2C25               	goto	l1250
  4119  0C03                     l1252:	
  4120  0C03  1C5D               	btfss	___fladd@grs,0
  4121  0C04  2C0E               	goto	l6196
  4122  0C05  085D               	movf	___fladd@grs,w
  4123  0C06  00D2               	movwf	??___fladd
  4124  0C07  1003               	clrc
  4125  0C08  0C52               	rrf	??___fladd,w
  4126  0C09  3801               	iorlw	1
  4127  0C0A  00D3               	movwf	??___fladd+1
  4128  0C0B  0853               	movf	??___fladd+1,w
  4129  0C0C  00DD               	movwf	___fladd@grs
  4130  0C0D  2C10               	goto	l6198
  4131  0C0E                     l6196:	
  4132  0C0E  1003               	clrc
  4133  0C0F  0CDD               	rrf	___fladd@grs,f
  4134  0C10                     l6198:	
  4135  0C10  184A               	btfsc	___fladd@b,0
  4136  0C11  17DD               	bsf	___fladd@grs,7
  4137  0C12  3001               	movlw	1
  4138  0C13  00D2               	movwf	??___fladd
  4139  0C14                     u6095:	
  4140  0C14  0D4D               	rlf	___fladd@b+3,w
  4141  0C15  0CCD               	rrf	___fladd@b+3,f
  4142  0C16  0CCC               	rrf	___fladd@b+2,f
  4143  0C17  0CCB               	rrf	___fladd@b+1,f
  4144  0C18  0CCA               	rrf	___fladd@b,f
  4145  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4146  0C1A  2C14               	goto	u6095
  4147  0C1B  3001               	movlw	1
  4148  0C1C  00D2               	movwf	??___fladd
  4149  0C1D  0852               	movf	??___fladd,w
  4150  0C1E  07DC               	addwf	___fladd@bexp,f
  4151  0C1F                     l6206:	
  4152  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0C21  085B               	movf	___fladd@aexp,w
  4155  0C22  025C               	subwf	___fladd@bexp,w
  4156  0C23  1C03               	skipc
  4157  0C24  2C03               	goto	l1252
  4158  0C25                     l1250:	
  4159  0C25  1B5A               	btfsc	___fladd@signs,6
  4160  0C26  2C66               	goto	l6232
  4161  0C27  085C               	movf	___fladd@bexp,w
  4162  0C28  1D03               	btfss	3,2
  4163  0C29  2C33               	goto	l6214
  4164  0C2A  3000               	movlw	0
  4165  0C2B  00CD               	movwf	?___fladd+3
  4166  0C2C  3000               	movlw	0
  4167  0C2D  00CC               	movwf	?___fladd+2
  4168  0C2E  3000               	movlw	0
  4169  0C2F  00CB               	movwf	?___fladd+1
  4170  0C30  3000               	movlw	0
  4171  0C31  00CA               	movwf	?___fladd
  4172  0C32  0008               	return
  4173  0C33                     l6214:	
  4174  0C33  084E               	movf	___fladd@a,w
  4175  0C34  07CA               	addwf	___fladd@b,f
  4176  0C35  084F               	movf	___fladd@a+1,w
  4177  0C36  1103               	clrz
  4178  0C37  1803               	skipnc
  4179  0C38  3E01               	addlw	1
  4180  0C39  1D03               	btfss	3,2
  4181  0C3A  07CB               	addwf	___fladd@b+1,f
  4182  0C3B  0850               	movf	___fladd@a+2,w
  4183  0C3C  1103               	clrz
  4184  0C3D  1803               	skipnc
  4185  0C3E  3E01               	addlw	1
  4186  0C3F  1D03               	btfss	3,2
  4187  0C40  07CC               	addwf	___fladd@b+2,f
  4188  0C41  0851               	movf	___fladd@a+3,w
  4189  0C42  1103               	clrz
  4190  0C43  1803               	skipnc
  4191  0C44  3E01               	addlw	1
  4192  0C45  1D03               	btfss	3,2
  4193  0C46  07CD               	addwf	___fladd@b+3,f
  4194  0C47  1C4D               	btfss	___fladd@b+3,0
  4195  0C48  2D08               	goto	l6266
  4196  0C49  1C5D               	btfss	___fladd@grs,0
  4197  0C4A  2C54               	goto	l6222
  4198  0C4B  085D               	movf	___fladd@grs,w
  4199  0C4C  00D2               	movwf	??___fladd
  4200  0C4D  1003               	clrc
  4201  0C4E  0C52               	rrf	??___fladd,w
  4202  0C4F  3801               	iorlw	1
  4203  0C50  00D3               	movwf	??___fladd+1
  4204  0C51  0853               	movf	??___fladd+1,w
  4205  0C52  00DD               	movwf	___fladd@grs
  4206  0C53  2C56               	goto	l6224
  4207  0C54                     l6222:	
  4208  0C54  1003               	clrc
  4209  0C55  0CDD               	rrf	___fladd@grs,f
  4210  0C56                     l6224:	
  4211  0C56  184A               	btfsc	___fladd@b,0
  4212  0C57  17DD               	bsf	___fladd@grs,7
  4213  0C58  3001               	movlw	1
  4214  0C59  00D2               	movwf	??___fladd
  4215  0C5A                     u6175:	
  4216  0C5A  0D4D               	rlf	___fladd@b+3,w
  4217  0C5B  0CCD               	rrf	___fladd@b+3,f
  4218  0C5C  0CCC               	rrf	___fladd@b+2,f
  4219  0C5D  0CCB               	rrf	___fladd@b+1,f
  4220  0C5E  0CCA               	rrf	___fladd@b,f
  4221  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4222  0C60  2C5A               	goto	u6175
  4223  0C61  3001               	movlw	1
  4224  0C62  00D2               	movwf	??___fladd
  4225  0C63  0852               	movf	??___fladd,w
  4226  0C64  07DC               	addwf	___fladd@bexp,f
  4227  0C65  2D08               	goto	l6266
  4228  0C66                     l6232:	
  4229  0C66  084D               	movf	___fladd@b+3,w
  4230  0C67  3A80               	xorlw	128
  4231  0C68  00FF               	movwf	127
  4232  0C69  0851               	movf	___fladd@a+3,w
  4233  0C6A  3A80               	xorlw	128
  4234  0C6B  027F               	subwf	127,w
  4235  0C6C  1D03               	skipz
  4236  0C6D  2C78               	goto	u6183
  4237  0C6E  0850               	movf	___fladd@a+2,w
  4238  0C6F  024C               	subwf	___fladd@b+2,w
  4239  0C70  1D03               	skipz
  4240  0C71  2C78               	goto	u6183
  4241  0C72  084F               	movf	___fladd@a+1,w
  4242  0C73  024B               	subwf	___fladd@b+1,w
  4243  0C74  1D03               	skipz
  4244  0C75  2C78               	goto	u6183
  4245  0C76  084E               	movf	___fladd@a,w
  4246  0C77  024A               	subwf	___fladd@b,w
  4247  0C78                     u6183:	
  4248  0C78  1803               	skipnc
  4249  0C79  2CD0               	goto	l6242
  4250  0C7A  30FF               	movlw	255
  4251  0C7B  00D2               	movwf	??___fladd
  4252  0C7C  30FF               	movlw	255
  4253  0C7D  00D3               	movwf	??___fladd+1
  4254  0C7E  30FF               	movlw	255
  4255  0C7F  00D4               	movwf	??___fladd+2
  4256  0C80  30FF               	movlw	255
  4257  0C81  00D5               	movwf	??___fladd+3
  4258  0C82  084E               	movf	___fladd@a,w
  4259  0C83  00D6               	movwf	??___fladd+4
  4260  0C84  084F               	movf	___fladd@a+1,w
  4261  0C85  00D7               	movwf	??___fladd+5
  4262  0C86  0850               	movf	___fladd@a+2,w
  4263  0C87  00D8               	movwf	??___fladd+6
  4264  0C88  0851               	movf	___fladd@a+3,w
  4265  0C89  00D9               	movwf	??___fladd+7
  4266  0C8A  084A               	movf	___fladd@b,w
  4267  0C8B  02D6               	subwf	??___fladd+4,f
  4268  0C8C  084B               	movf	___fladd@b+1,w
  4269  0C8D  1C03               	skipc
  4270  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4271  0C8F  2C91               	goto	u6191
  4272  0C90  2C92               	goto	u6192
  4273  0C91                     u6191:	
  4274  0C91  02D7               	subwf	??___fladd+5,f
  4275  0C92                     u6192:	
  4276  0C92  084C               	movf	___fladd@b+2,w
  4277  0C93  1C03               	skipc
  4278  0C94  0F4C               	incfsz	___fladd@b+2,w
  4279  0C95  2C97               	goto	u6193
  4280  0C96  2C98               	goto	u6194
  4281  0C97                     u6193:	
  4282  0C97  02D8               	subwf	??___fladd+6,f
  4283  0C98                     u6194:	
  4284  0C98  084D               	movf	___fladd@b+3,w
  4285  0C99  1C03               	skipc
  4286  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4287  0C9B  2C9D               	goto	u6195
  4288  0C9C  2C9E               	goto	u6196
  4289  0C9D                     u6195:	
  4290  0C9D  02D9               	subwf	??___fladd+7,f
  4291  0C9E                     u6196:	
  4292  0C9E  0856               	movf	??___fladd+4,w
  4293  0C9F  07D2               	addwf	??___fladd,f
  4294  0CA0  0857               	movf	??___fladd+5,w
  4295  0CA1  1803               	skipnc
  4296  0CA2  0F57               	incfsz	??___fladd+5,w
  4297  0CA3  2CA5               	goto	u6200
  4298  0CA4  2CA6               	goto	u6201
  4299  0CA5                     u6200:	
  4300  0CA5  07D3               	addwf	??___fladd+1,f
  4301  0CA6                     u6201:	
  4302  0CA6  0858               	movf	??___fladd+6,w
  4303  0CA7  1803               	skipnc
  4304  0CA8  0F58               	incfsz	??___fladd+6,w
  4305  0CA9  2CAB               	goto	u6202
  4306  0CAA  2CAC               	goto	u6203
  4307  0CAB                     u6202:	
  4308  0CAB  07D4               	addwf	??___fladd+2,f
  4309  0CAC                     u6203:	
  4310  0CAC  0859               	movf	??___fladd+7,w
  4311  0CAD  1803               	skipnc
  4312  0CAE  0A59               	incf	??___fladd+7,w
  4313  0CAF  07D5               	addwf	??___fladd+3,f
  4314  0CB0  0855               	movf	??___fladd+3,w
  4315  0CB1  00CD               	movwf	___fladd@b+3
  4316  0CB2  0854               	movf	??___fladd+2,w
  4317  0CB3  00CC               	movwf	___fladd@b+2
  4318  0CB4  0853               	movf	??___fladd+1,w
  4319  0CB5  00CB               	movwf	___fladd@b+1
  4320  0CB6  0852               	movf	??___fladd,w
  4321  0CB7  00CA               	movwf	___fladd@b
  4322  0CB8  3080               	movlw	128
  4323  0CB9  00D2               	movwf	??___fladd
  4324  0CBA  0852               	movf	??___fladd,w
  4325  0CBB  06DA               	xorwf	___fladd@signs,f
  4326  0CBC  09DD               	comf	___fladd@grs,f
  4327  0CBD  0ADD               	incf	___fladd@grs,f
  4328  0CBE  085D               	movf	___fladd@grs,w
  4329  0CBF  1D03               	btfss	3,2
  4330  0CC0  2CDE               	goto	l1267
  4331  0CC1  3001               	movlw	1
  4332  0CC2  07CA               	addwf	___fladd@b,f
  4333  0CC3  3000               	movlw	0
  4334  0CC4  1803               	skipnc
  4335  0CC5  3001               	movlw	1
  4336  0CC6  07CB               	addwf	___fladd@b+1,f
  4337  0CC7  3000               	movlw	0
  4338  0CC8  1803               	skipnc
  4339  0CC9  3001               	movlw	1
  4340  0CCA  07CC               	addwf	___fladd@b+2,f
  4341  0CCB  3000               	movlw	0
  4342  0CCC  1803               	skipnc
  4343  0CCD  3001               	movlw	1
  4344  0CCE  07CD               	addwf	___fladd@b+3,f
  4345  0CCF  2CDE               	goto	l1267
  4346  0CD0                     l6242:	
  4347  0CD0  084E               	movf	___fladd@a,w
  4348  0CD1  02CA               	subwf	___fladd@b,f
  4349  0CD2  084F               	movf	___fladd@a+1,w
  4350  0CD3  1C03               	skipc
  4351  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4352  0CD5  02CB               	subwf	___fladd@b+1,f
  4353  0CD6  0850               	movf	___fladd@a+2,w
  4354  0CD7  1C03               	skipc
  4355  0CD8  0F50               	incfsz	___fladd@a+2,w
  4356  0CD9  02CC               	subwf	___fladd@b+2,f
  4357  0CDA  0851               	movf	___fladd@a+3,w
  4358  0CDB  1C03               	skipc
  4359  0CDC  0F51               	incfsz	___fladd@a+3,w
  4360  0CDD  02CD               	subwf	___fladd@b+3,f
  4361  0CDE                     l1267:	
  4362  0CDE  084D               	movf	___fladd@b+3,w
  4363  0CDF  044C               	iorwf	___fladd@b+2,w
  4364  0CE0  044B               	iorwf	___fladd@b+1,w
  4365  0CE1  044A               	iorwf	___fladd@b,w
  4366  0CE2  1D03               	skipz
  4367  0CE3  2D06               	goto	l6264
  4368  0CE4  085D               	movf	___fladd@grs,w
  4369  0CE5  1D03               	btfss	3,2
  4370  0CE6  2D06               	goto	l6264
  4371  0CE7  3000               	movlw	0
  4372  0CE8  00CD               	movwf	?___fladd+3
  4373  0CE9  3000               	movlw	0
  4374  0CEA  00CC               	movwf	?___fladd+2
  4375  0CEB  3000               	movlw	0
  4376  0CEC  00CB               	movwf	?___fladd+1
  4377  0CED  3000               	movlw	0
  4378  0CEE  00CA               	movwf	?___fladd
  4379  0CEF  0008               	return
  4380  0CF0                     l6250:	
  4381  0CF0  3001               	movlw	1
  4382  0CF1  00D2               	movwf	??___fladd
  4383  0CF2                     u6245:	
  4384  0CF2  1003               	clrc
  4385  0CF3  0DCA               	rlf	___fladd@b,f
  4386  0CF4  0DCB               	rlf	___fladd@b+1,f
  4387  0CF5  0DCC               	rlf	___fladd@b+2,f
  4388  0CF6  0DCD               	rlf	___fladd@b+3,f
  4389  0CF7  0BD2               	decfsz	??___fladd,f
  4390  0CF8  2CF2               	goto	u6245
  4391  0CF9  1BDD               	btfsc	___fladd@grs,7
  4392  0CFA  144A               	bsf	___fladd@b,0
  4393  0CFB  1C5D               	btfss	___fladd@grs,0
  4394  0CFC  2CFF               	goto	l6258
  4395  0CFD  1403               	setc
  4396  0CFE  2D00               	goto	L3
  4397  0CFF                     l6258:	
  4398  0CFF  1003               	clrc
  4399  0D00                     L3:	
  4400  0D00  0DDD               	rlf	___fladd@grs,f
  4401  0D01  085C               	movf	___fladd@bexp,w
  4402  0D02  1903               	btfsc	3,2
  4403  0D03  2D06               	goto	l6264
  4404  0D04  3001               	movlw	1
  4405  0D05  02DC               	subwf	___fladd@bexp,f
  4406  0D06                     l6264:	
  4407  0D06  1FCC               	btfss	___fladd@b+2,7
  4408  0D07  2CF0               	goto	l6250
  4409  0D08                     l6266:	
  4410  0D08  01DB               	clrf	___fladd@aexp
  4411  0D09  1FDD               	btfss	___fladd@grs,7
  4412  0D0A  2D13               	goto	l6276
  4413  0D0B  085D               	movf	___fladd@grs,w
  4414  0D0C  397F               	andlw	127
  4415  0D0D  1903               	btfsc	3,2
  4416  0D0E  184A               	btfsc	___fladd@b,0
  4417  0D0F  2D11               	goto	l6272
  4418  0D10  2D13               	goto	l6276
  4419  0D11                     l6272:	
  4420  0D11  01DB               	clrf	___fladd@aexp
  4421  0D12  0ADB               	incf	___fladd@aexp,f
  4422  0D13                     l6276:	
  4423  0D13  085B               	movf	___fladd@aexp,w
  4424  0D14  1903               	btfsc	3,2
  4425  0D15  2D46               	goto	l1280
  4426  0D16  3001               	movlw	1
  4427  0D17  07CA               	addwf	___fladd@b,f
  4428  0D18  3000               	movlw	0
  4429  0D19  1803               	skipnc
  4430  0D1A  3001               	movlw	1
  4431  0D1B  07CB               	addwf	___fladd@b+1,f
  4432  0D1C  3000               	movlw	0
  4433  0D1D  1803               	skipnc
  4434  0D1E  3001               	movlw	1
  4435  0D1F  07CC               	addwf	___fladd@b+2,f
  4436  0D20  3000               	movlw	0
  4437  0D21  1803               	skipnc
  4438  0D22  3001               	movlw	1
  4439  0D23  07CD               	addwf	___fladd@b+3,f
  4440  0D24  1C4D               	btfss	___fladd@b+3,0
  4441  0D25  2D46               	goto	l1280
  4442  0D26  084A               	movf	___fladd@b,w
  4443  0D27  00D2               	movwf	??___fladd
  4444  0D28  084B               	movf	___fladd@b+1,w
  4445  0D29  00D3               	movwf	??___fladd+1
  4446  0D2A  084C               	movf	___fladd@b+2,w
  4447  0D2B  00D4               	movwf	??___fladd+2
  4448  0D2C  084D               	movf	___fladd@b+3,w
  4449  0D2D  00D5               	movwf	??___fladd+3
  4450  0D2E  3001               	movlw	1
  4451  0D2F  00D6               	movwf	??___fladd+4
  4452  0D30                     u6345:	
  4453  0D30  0D55               	rlf	??___fladd+3,w
  4454  0D31  0CD5               	rrf	??___fladd+3,f
  4455  0D32  0CD4               	rrf	??___fladd+2,f
  4456  0D33  0CD3               	rrf	??___fladd+1,f
  4457  0D34  0CD2               	rrf	??___fladd,f
  4458  0D35  0BD6               	decfsz	??___fladd+4,f
  4459  0D36  2D30               	goto	u6345
  4460  0D37  0855               	movf	??___fladd+3,w
  4461  0D38  00CD               	movwf	___fladd@b+3
  4462  0D39  0854               	movf	??___fladd+2,w
  4463  0D3A  00CC               	movwf	___fladd@b+2
  4464  0D3B  0853               	movf	??___fladd+1,w
  4465  0D3C  00CB               	movwf	___fladd@b+1
  4466  0D3D  0852               	movf	??___fladd,w
  4467  0D3E  00CA               	movwf	___fladd@b
  4468  0D3F  0A5C               	incf	___fladd@bexp,w
  4469  0D40  1903               	btfsc	3,2
  4470  0D41  2D46               	goto	l1280
  4471  0D42  3001               	movlw	1
  4472  0D43  00D2               	movwf	??___fladd
  4473  0D44  0852               	movf	??___fladd,w
  4474  0D45  07DC               	addwf	___fladd@bexp,f
  4475  0D46                     l1280:	
  4476  0D46  0A5C               	incf	___fladd@bexp,w
  4477  0D47  1D03               	btfss	3,2
  4478  0D48  085C               	movf	___fladd@bexp,w
  4479  0D49  1D03               	btfss	3,2
  4480  0D4A  2D56               	goto	l6294
  4481  0D4B  3000               	movlw	0
  4482  0D4C  00CD               	movwf	___fladd@b+3
  4483  0D4D  3000               	movlw	0
  4484  0D4E  00CC               	movwf	___fladd@b+2
  4485  0D4F  3000               	movlw	0
  4486  0D50  00CB               	movwf	___fladd@b+1
  4487  0D51  3000               	movlw	0
  4488  0D52  00CA               	movwf	___fladd@b
  4489  0D53  085C               	movf	___fladd@bexp,w
  4490  0D54  1903               	btfsc	3,2
  4491  0D55  01DA               	clrf	___fladd@signs
  4492  0D56                     l6294:	
  4493  0D56  1C5C               	btfss	___fladd@bexp,0
  4494  0D57  2D5A               	goto	l6298
  4495  0D58  17CC               	bsf	___fladd@b+2,7
  4496  0D59  2D5E               	goto	l1288
  4497  0D5A                     l6298:	
  4498  0D5A  307F               	movlw	127
  4499  0D5B  00D2               	movwf	??___fladd
  4500  0D5C  0852               	movf	??___fladd,w
  4501  0D5D  05CC               	andwf	___fladd@b+2,f
  4502  0D5E                     l1288:	
  4503  0D5E  085C               	movf	___fladd@bexp,w
  4504  0D5F  00D2               	movwf	??___fladd
  4505  0D60  1003               	clrc
  4506  0D61  0C52               	rrf	??___fladd,w
  4507  0D62  00D3               	movwf	??___fladd+1
  4508  0D63  0853               	movf	??___fladd+1,w
  4509  0D64  00CD               	movwf	___fladd@b+3
  4510  0D65  1FDA               	btfss	___fladd@signs,7
  4511  0D66  0008               	return
  4512  0D67  17CD               	bsf	___fladd@b+3,7
  4513  0D68  0008               	return
  4514  0D69                     __end_of___fladd:	
  4515                           
  4516                           	psect	text6
  4517  1139                     __ptext6:	
  4518 ;; *************** function ___flge *****************
  4519 ;; Defined at:
  4520 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  ff1             4    0[BANK0 ] unsigned char 
  4523 ;;  ff2             4    4[BANK0 ] unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 300/0
  4532 ;;		On exit  : 300/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       8       0       0       0
  4536 ;;      Locals:         0       0       0       0       0
  4537 ;;      Temps:          0       4       0       0       0
  4538 ;;      Totals:         0      12       0       0       0
  4539 ;;Total ram usage:       12 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_MediaPlacaVaccum
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function ___flge
  4551  1139                     ___flge:	
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4555  1139  3000               	movlw	0
  4556  113A  0520               	andwf	___flge@ff1,w
  4557  113B  00A8               	movwf	??___flge
  4558  113C  3000               	movlw	0
  4559  113D  0521               	andwf	___flge@ff1+1,w
  4560  113E  00A9               	movwf	??___flge+1
  4561  113F  3080               	movlw	128
  4562  1140  0522               	andwf	___flge@ff1+2,w
  4563  1141  00AA               	movwf	??___flge+2
  4564  1142  307F               	movlw	127
  4565  1143  0523               	andwf	___flge@ff1+3,w
  4566  1144  00AB               	movwf	??___flge+3
  4567  1145  082B               	movf	??___flge+3,w
  4568  1146  042A               	iorwf	??___flge+2,w
  4569  1147  0429               	iorwf	??___flge+1,w
  4570  1148  0428               	iorwf	??___flge,w
  4571  1149  1D03               	skipz
  4572  114A  2953               	goto	l1127
  4573  114B  3000               	movlw	0
  4574  114C  00A3               	movwf	___flge@ff1+3
  4575  114D  3000               	movlw	0
  4576  114E  00A2               	movwf	___flge@ff1+2
  4577  114F  3000               	movlw	0
  4578  1150  00A1               	movwf	___flge@ff1+1
  4579  1151  3000               	movlw	0
  4580  1152  00A0               	movwf	___flge@ff1
  4581  1153                     l1127:	
  4582  1153  3000               	movlw	0
  4583  1154  0524               	andwf	___flge@ff2,w
  4584  1155  00A8               	movwf	??___flge
  4585  1156  3000               	movlw	0
  4586  1157  0525               	andwf	___flge@ff2+1,w
  4587  1158  00A9               	movwf	??___flge+1
  4588  1159  3080               	movlw	128
  4589  115A  0526               	andwf	___flge@ff2+2,w
  4590  115B  00AA               	movwf	??___flge+2
  4591  115C  307F               	movlw	127
  4592  115D  0527               	andwf	___flge@ff2+3,w
  4593  115E  00AB               	movwf	??___flge+3
  4594  115F  082B               	movf	??___flge+3,w
  4595  1160  042A               	iorwf	??___flge+2,w
  4596  1161  0429               	iorwf	??___flge+1,w
  4597  1162  0428               	iorwf	??___flge,w
  4598  1163  1D03               	skipz
  4599  1164  296D               	goto	l6974
  4600  1165  3000               	movlw	0
  4601  1166  00A7               	movwf	___flge@ff2+3
  4602  1167  3000               	movlw	0
  4603  1168  00A6               	movwf	___flge@ff2+2
  4604  1169  3000               	movlw	0
  4605  116A  00A5               	movwf	___flge@ff2+1
  4606  116B  3000               	movlw	0
  4607  116C  00A4               	movwf	___flge@ff2
  4608  116D                     l6974:	
  4609  116D  1FA3               	btfss	___flge@ff1+3,7
  4610  116E  2993               	goto	l6978
  4611  116F  3000               	movlw	0
  4612  1170  00A8               	movwf	??___flge
  4613  1171  3000               	movlw	0
  4614  1172  00A9               	movwf	??___flge+1
  4615  1173  3000               	movlw	0
  4616  1174  00AA               	movwf	??___flge+2
  4617  1175  3080               	movlw	128
  4618  1176  00AB               	movwf	??___flge+3
  4619  1177  0820               	movf	___flge@ff1,w
  4620  1178  02A8               	subwf	??___flge,f
  4621  1179  0821               	movf	___flge@ff1+1,w
  4622  117A  1C03               	skipc
  4623  117B  0F21               	incfsz	___flge@ff1+1,w
  4624  117C  297E               	goto	u7361
  4625  117D  297F               	goto	u7362
  4626  117E                     u7361:	
  4627  117E  02A9               	subwf	??___flge+1,f
  4628  117F                     u7362:	
  4629  117F  0822               	movf	___flge@ff1+2,w
  4630  1180  1C03               	skipc
  4631  1181  0F22               	incfsz	___flge@ff1+2,w
  4632  1182  2984               	goto	u7363
  4633  1183  2985               	goto	u7364
  4634  1184                     u7363:	
  4635  1184  02AA               	subwf	??___flge+2,f
  4636  1185                     u7364:	
  4637  1185  0823               	movf	___flge@ff1+3,w
  4638  1186  1C03               	skipc
  4639  1187  0F23               	incfsz	___flge@ff1+3,w
  4640  1188  298A               	goto	u7365
  4641  1189  298B               	goto	u7366
  4642  118A                     u7365:	
  4643  118A  02AB               	subwf	??___flge+3,f
  4644  118B                     u7366:	
  4645  118B  082B               	movf	??___flge+3,w
  4646  118C  00A3               	movwf	___flge@ff1+3
  4647  118D  082A               	movf	??___flge+2,w
  4648  118E  00A2               	movwf	___flge@ff1+2
  4649  118F  0829               	movf	??___flge+1,w
  4650  1190  00A1               	movwf	___flge@ff1+1
  4651  1191  0828               	movf	??___flge,w
  4652  1192  00A0               	movwf	___flge@ff1
  4653  1193                     l6978:	
  4654  1193  1FA7               	btfss	___flge@ff2+3,7
  4655  1194  29B9               	goto	l1130
  4656  1195  3000               	movlw	0
  4657  1196  00A8               	movwf	??___flge
  4658  1197  3000               	movlw	0
  4659  1198  00A9               	movwf	??___flge+1
  4660  1199  3000               	movlw	0
  4661  119A  00AA               	movwf	??___flge+2
  4662  119B  3080               	movlw	128
  4663  119C  00AB               	movwf	??___flge+3
  4664  119D  0824               	movf	___flge@ff2,w
  4665  119E  02A8               	subwf	??___flge,f
  4666  119F  0825               	movf	___flge@ff2+1,w
  4667  11A0  1C03               	skipc
  4668  11A1  0F25               	incfsz	___flge@ff2+1,w
  4669  11A2  29A4               	goto	u7381
  4670  11A3  29A5               	goto	u7382
  4671  11A4                     u7381:	
  4672  11A4  02A9               	subwf	??___flge+1,f
  4673  11A5                     u7382:	
  4674  11A5  0826               	movf	___flge@ff2+2,w
  4675  11A6  1C03               	skipc
  4676  11A7  0F26               	incfsz	___flge@ff2+2,w
  4677  11A8  29AA               	goto	u7383
  4678  11A9  29AB               	goto	u7384
  4679  11AA                     u7383:	
  4680  11AA  02AA               	subwf	??___flge+2,f
  4681  11AB                     u7384:	
  4682  11AB  0827               	movf	___flge@ff2+3,w
  4683  11AC  1C03               	skipc
  4684  11AD  0F27               	incfsz	___flge@ff2+3,w
  4685  11AE  29B0               	goto	u7385
  4686  11AF  29B1               	goto	u7386
  4687  11B0                     u7385:	
  4688  11B0  02AB               	subwf	??___flge+3,f
  4689  11B1                     u7386:	
  4690  11B1  082B               	movf	??___flge+3,w
  4691  11B2  00A7               	movwf	___flge@ff2+3
  4692  11B3  082A               	movf	??___flge+2,w
  4693  11B4  00A6               	movwf	___flge@ff2+2
  4694  11B5  0829               	movf	??___flge+1,w
  4695  11B6  00A5               	movwf	___flge@ff2+1
  4696  11B7  0828               	movf	??___flge,w
  4697  11B8  00A4               	movwf	___flge@ff2
  4698  11B9                     l1130:	
  4699  11B9  3080               	movlw	128
  4700  11BA  06A3               	xorwf	___flge@ff1+3,f
  4701  11BB  3080               	movlw	128
  4702  11BC  06A7               	xorwf	___flge@ff2+3,f
  4703  11BD  0827               	movf	___flge@ff2+3,w
  4704  11BE  0223               	subwf	___flge@ff1+3,w
  4705  11BF  1D03               	skipz
  4706  11C0  0008               	return
  4707  11C1  0826               	movf	___flge@ff2+2,w
  4708  11C2  0222               	subwf	___flge@ff1+2,w
  4709  11C3  1D03               	skipz
  4710  11C4  0008               	return
  4711  11C5  0825               	movf	___flge@ff2+1,w
  4712  11C6  0221               	subwf	___flge@ff1+1,w
  4713  11C7  1D03               	skipz
  4714  11C8  0008               	return
  4715  11C9  0824               	movf	___flge@ff2,w
  4716  11CA  0220               	subwf	___flge@ff1,w
  4717  11CB  0008               	return
  4718  11CC                     __end_of___flge:	
  4719                           
  4720                           	psect	text7
  4721  099B                     __ptext7:	
  4722 ;; *************** function ___fldiv *****************
  4723 ;; Defined at:
  4724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  a               4   33[BANK0 ] unsigned char 
  4727 ;;  b               4   37[BANK0 ] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  grs             4   53[BANK0 ] unsigned long 
  4730 ;;  rem             4   46[BANK0 ] unsigned long 
  4731 ;;  new_exp         2   51[BANK0 ] int 
  4732 ;;  aexp            1   58[BANK0 ] unsigned char 
  4733 ;;  bexp            1   57[BANK0 ] unsigned char 
  4734 ;;  sign            1   50[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4   33[BANK0 ] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, btemp+1
  4739 ;; Tracked objects:
  4740 ;;		On entry : 300/0
  4741 ;;		On exit  : 300/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       8       0       0       0
  4745 ;;      Locals:         0      13       0       0       0
  4746 ;;      Temps:          0       5       0       0       0
  4747 ;;      Totals:         0      26       0       0       0
  4748 ;;Total ram usage:       26 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_MediaPlacaVaccum
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function ___fldiv
  4760  099B                     ___fldiv:	
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4764  099B  0848               	movf	___fldiv@b+3,w
  4765  099C  3980               	andlw	128
  4766  099D  00C9               	movwf	??___fldiv
  4767  099E  0849               	movf	??___fldiv,w
  4768  099F  00D2               	movwf	___fldiv@sign
  4769  09A0  0848               	movf	___fldiv@b+3,w
  4770  09A1  00C9               	movwf	??___fldiv
  4771  09A2  0749               	addwf	??___fldiv,w
  4772  09A3  00CA               	movwf	??___fldiv+1
  4773  09A4  084A               	movf	??___fldiv+1,w
  4774  09A5  00D9               	movwf	___fldiv@bexp
  4775  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4776  09A7  1459               	bsf	___fldiv@bexp,0
  4777  09A8  0859               	movf	___fldiv@bexp,w
  4778  09A9  1903               	btfsc	3,2
  4779  09AA  29B9               	goto	l7012
  4780  09AB  0A59               	incf	___fldiv@bexp,w
  4781  09AC  1D03               	btfss	3,2
  4782  09AD  29B6               	goto	l7008
  4783  09AE  3000               	movlw	0
  4784  09AF  00C8               	movwf	___fldiv@b+3
  4785  09B0  3000               	movlw	0
  4786  09B1  00C7               	movwf	___fldiv@b+2
  4787  09B2  3000               	movlw	0
  4788  09B3  00C6               	movwf	___fldiv@b+1
  4789  09B4  3000               	movlw	0
  4790  09B5  00C5               	movwf	___fldiv@b
  4791  09B6                     l7008:	
  4792  09B6  17C7               	bsf	___fldiv@b+2,7
  4793  09B7  01C8               	clrf	___fldiv@b+3
  4794  09B8  29C1               	goto	l7014
  4795  09B9                     l7012:	
  4796  09B9  3000               	movlw	0
  4797  09BA  00C8               	movwf	___fldiv@b+3
  4798  09BB  3000               	movlw	0
  4799  09BC  00C7               	movwf	___fldiv@b+2
  4800  09BD  3000               	movlw	0
  4801  09BE  00C6               	movwf	___fldiv@b+1
  4802  09BF  3000               	movlw	0
  4803  09C0  00C5               	movwf	___fldiv@b
  4804  09C1                     l7014:	
  4805  09C1  0844               	movf	___fldiv@a+3,w
  4806  09C2  3980               	andlw	128
  4807  09C3  00C9               	movwf	??___fldiv
  4808  09C4  0849               	movf	??___fldiv,w
  4809  09C5  06D2               	xorwf	___fldiv@sign,f
  4810  09C6  0844               	movf	___fldiv@a+3,w
  4811  09C7  00C9               	movwf	??___fldiv
  4812  09C8  0749               	addwf	??___fldiv,w
  4813  09C9  00CA               	movwf	??___fldiv+1
  4814  09CA  084A               	movf	??___fldiv+1,w
  4815  09CB  00DA               	movwf	___fldiv@aexp
  4816  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4817  09CD  145A               	bsf	___fldiv@aexp,0
  4818  09CE  085A               	movf	___fldiv@aexp,w
  4819  09CF  1903               	btfsc	3,2
  4820  09D0  29DF               	goto	l7032
  4821  09D1  0A5A               	incf	___fldiv@aexp,w
  4822  09D2  1D03               	btfss	3,2
  4823  09D3  29DC               	goto	l7028
  4824  09D4  3000               	movlw	0
  4825  09D5  00C4               	movwf	___fldiv@a+3
  4826  09D6  3000               	movlw	0
  4827  09D7  00C3               	movwf	___fldiv@a+2
  4828  09D8  3000               	movlw	0
  4829  09D9  00C2               	movwf	___fldiv@a+1
  4830  09DA  3000               	movlw	0
  4831  09DB  00C1               	movwf	___fldiv@a
  4832  09DC                     l7028:	
  4833  09DC  17C3               	bsf	___fldiv@a+2,7
  4834  09DD  01C4               	clrf	___fldiv@a+3
  4835  09DE  29E7               	goto	l1302
  4836  09DF                     l7032:	
  4837  09DF  3000               	movlw	0
  4838  09E0  00C4               	movwf	___fldiv@a+3
  4839  09E1  3000               	movlw	0
  4840  09E2  00C3               	movwf	___fldiv@a+2
  4841  09E3  3000               	movlw	0
  4842  09E4  00C2               	movwf	___fldiv@a+1
  4843  09E5  3000               	movlw	0
  4844  09E6  00C1               	movwf	___fldiv@a
  4845  09E7                     l1302:	
  4846  09E7  0844               	movf	___fldiv@a+3,w
  4847  09E8  0443               	iorwf	___fldiv@a+2,w
  4848  09E9  0442               	iorwf	___fldiv@a+1,w
  4849  09EA  0441               	iorwf	___fldiv@a,w
  4850  09EB  1D03               	skipz
  4851  09EC  2A06               	goto	l7042
  4852  09ED  3000               	movlw	0
  4853  09EE  00C8               	movwf	___fldiv@b+3
  4854  09EF  3000               	movlw	0
  4855  09F0  00C7               	movwf	___fldiv@b+2
  4856  09F1  3000               	movlw	0
  4857  09F2  00C6               	movwf	___fldiv@b+1
  4858  09F3  3000               	movlw	0
  4859  09F4  00C5               	movwf	___fldiv@b
  4860  09F5  3080               	movlw	128
  4861  09F6  04C7               	iorwf	___fldiv@b+2,f
  4862  09F7  307F               	movlw	127
  4863  09F8  04C8               	iorwf	___fldiv@b+3,f
  4864  09F9                     L5:	
  4865  09F9  0852               	movf	___fldiv@sign,w
  4866  09FA  00C9               	movwf	??___fldiv
  4867  09FB  0849               	movf	??___fldiv,w
  4868  09FC  04C8               	iorwf	___fldiv@b+3,f
  4869  09FD  0848               	movf	___fldiv@b+3,w
  4870  09FE  00C4               	movwf	?___fldiv+3
  4871  09FF  0847               	movf	___fldiv@b+2,w
  4872  0A00  00C3               	movwf	?___fldiv+2
  4873  0A01  0846               	movf	___fldiv@b+1,w
  4874  0A02  00C2               	movwf	?___fldiv+1
  4875  0A03  0845               	movf	___fldiv@b,w
  4876  0A04  00C1               	movwf	?___fldiv
  4877  0A05  0008               	return
  4878  0A06                     l7042:	
  4879  0A06  0859               	movf	___fldiv@bexp,w
  4880  0A07  1D03               	btfss	3,2
  4881  0A08  2A12               	goto	l7048
  4882  0A09  3000               	movlw	0
  4883  0A0A  00C4               	movwf	?___fldiv+3
  4884  0A0B  3000               	movlw	0
  4885  0A0C  00C3               	movwf	?___fldiv+2
  4886  0A0D  3000               	movlw	0
  4887  0A0E  00C2               	movwf	?___fldiv+1
  4888  0A0F  3000               	movlw	0
  4889  0A10  00C1               	movwf	?___fldiv
  4890  0A11  0008               	return
  4891  0A12                     l7048:	
  4892  0A12  0859               	movf	___fldiv@bexp,w
  4893  0A13  00C9               	movwf	??___fldiv
  4894  0A14  01CA               	clrf	??___fldiv+1
  4895  0A15  084A               	movf	??___fldiv+1,w
  4896  0A16  00CC               	movwf	??___fldiv+3
  4897  0A17  085A               	movf	___fldiv@aexp,w
  4898  0A18  0249               	subwf	??___fldiv,w
  4899  0A19  00CB               	movwf	??___fldiv+2
  4900  0A1A  1C03               	skipc
  4901  0A1B  03CC               	decf	??___fldiv+3,f
  4902  0A1C  084B               	movf	??___fldiv+2,w
  4903  0A1D  3E7F               	addlw	127
  4904  0A1E  00D3               	movwf	___fldiv@new_exp
  4905  0A1F  084C               	movf	??___fldiv+3,w
  4906  0A20  1803               	skipnc
  4907  0A21  3E01               	addlw	1
  4908  0A22  3E00               	addlw	0
  4909  0A23  00D4               	movwf	___fldiv@new_exp+1
  4910  0A24  0848               	movf	___fldiv@b+3,w
  4911  0A25  00D1               	movwf	___fldiv@rem+3
  4912  0A26  0847               	movf	___fldiv@b+2,w
  4913  0A27  00D0               	movwf	___fldiv@rem+2
  4914  0A28  0846               	movf	___fldiv@b+1,w
  4915  0A29  00CF               	movwf	___fldiv@rem+1
  4916  0A2A  0845               	movf	___fldiv@b,w
  4917  0A2B  00CE               	movwf	___fldiv@rem
  4918  0A2C  3000               	movlw	0
  4919  0A2D  00C8               	movwf	___fldiv@b+3
  4920  0A2E  3000               	movlw	0
  4921  0A2F  00C7               	movwf	___fldiv@b+2
  4922  0A30  3000               	movlw	0
  4923  0A31  00C6               	movwf	___fldiv@b+1
  4924  0A32  3000               	movlw	0
  4925  0A33  00C5               	movwf	___fldiv@b
  4926  0A34  3000               	movlw	0
  4927  0A35  00D8               	movwf	___fldiv@grs+3
  4928  0A36  3000               	movlw	0
  4929  0A37  00D7               	movwf	___fldiv@grs+2
  4930  0A38  3000               	movlw	0
  4931  0A39  00D6               	movwf	___fldiv@grs+1
  4932  0A3A  3000               	movlw	0
  4933  0A3B  00D5               	movwf	___fldiv@grs
  4934  0A3C  01DA               	clrf	___fldiv@aexp
  4935  0A3D                     l7076:	
  4936  0A3D  301A               	movlw	26
  4937  0A3E  025A               	subwf	___fldiv@aexp,w
  4938  0A3F  1803               	btfsc	3,0
  4939  0A40  2A85               	goto	l7078
  4940  0A41  085A               	movf	___fldiv@aexp,w
  4941  0A42  1903               	btfsc	3,2
  4942  0A43  2A61               	goto	l7068
  4943  0A44  3001               	movlw	1
  4944  0A45  00C9               	movwf	??___fldiv
  4945  0A46                     u7495:	
  4946  0A46  1003               	clrc
  4947  0A47  0DCE               	rlf	___fldiv@rem,f
  4948  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4949  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4950  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4951  0A4B  0BC9               	decfsz	??___fldiv,f
  4952  0A4C  2A46               	goto	u7495
  4953  0A4D  3001               	movlw	1
  4954  0A4E  00C9               	movwf	??___fldiv
  4955  0A4F                     u7505:	
  4956  0A4F  1003               	clrc
  4957  0A50  0DC5               	rlf	___fldiv@b,f
  4958  0A51  0DC6               	rlf	___fldiv@b+1,f
  4959  0A52  0DC7               	rlf	___fldiv@b+2,f
  4960  0A53  0DC8               	rlf	___fldiv@b+3,f
  4961  0A54  0BC9               	decfsz	??___fldiv,f
  4962  0A55  2A4F               	goto	u7505
  4963  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4964  0A57  1445               	bsf	___fldiv@b,0
  4965  0A58  3001               	movlw	1
  4966  0A59  00C9               	movwf	??___fldiv
  4967  0A5A                     u7525:	
  4968  0A5A  1003               	clrc
  4969  0A5B  0DD5               	rlf	___fldiv@grs,f
  4970  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4971  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4972  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4973  0A5F  0BC9               	decfsz	??___fldiv,f
  4974  0A60  2A5A               	goto	u7525
  4975  0A61                     l7068:	
  4976  0A61  0844               	movf	___fldiv@a+3,w
  4977  0A62  0251               	subwf	___fldiv@rem+3,w
  4978  0A63  1D03               	skipz
  4979  0A64  2A6F               	goto	u7535
  4980  0A65  0843               	movf	___fldiv@a+2,w
  4981  0A66  0250               	subwf	___fldiv@rem+2,w
  4982  0A67  1D03               	skipz
  4983  0A68  2A6F               	goto	u7535
  4984  0A69  0842               	movf	___fldiv@a+1,w
  4985  0A6A  024F               	subwf	___fldiv@rem+1,w
  4986  0A6B  1D03               	skipz
  4987  0A6C  2A6F               	goto	u7535
  4988  0A6D  0841               	movf	___fldiv@a,w
  4989  0A6E  024E               	subwf	___fldiv@rem,w
  4990  0A6F                     u7535:	
  4991  0A6F  1C03               	skipc
  4992  0A70  2A80               	goto	l7074
  4993  0A71  1758               	bsf	___fldiv@grs+3,6
  4994  0A72  0841               	movf	___fldiv@a,w
  4995  0A73  02CE               	subwf	___fldiv@rem,f
  4996  0A74  0842               	movf	___fldiv@a+1,w
  4997  0A75  1C03               	skipc
  4998  0A76  0F42               	incfsz	___fldiv@a+1,w
  4999  0A77  02CF               	subwf	___fldiv@rem+1,f
  5000  0A78  0843               	movf	___fldiv@a+2,w
  5001  0A79  1C03               	skipc
  5002  0A7A  0F43               	incfsz	___fldiv@a+2,w
  5003  0A7B  02D0               	subwf	___fldiv@rem+2,f
  5004  0A7C  0844               	movf	___fldiv@a+3,w
  5005  0A7D  1C03               	skipc
  5006  0A7E  0F44               	incfsz	___fldiv@a+3,w
  5007  0A7F  02D1               	subwf	___fldiv@rem+3,f
  5008  0A80                     l7074:	
  5009  0A80  3001               	movlw	1
  5010  0A81  00C9               	movwf	??___fldiv
  5011  0A82  0849               	movf	??___fldiv,w
  5012  0A83  07DA               	addwf	___fldiv@aexp,f
  5013  0A84  2A3D               	goto	l7076
  5014  0A85                     l7078:	
  5015  0A85  0851               	movf	___fldiv@rem+3,w
  5016  0A86  0450               	iorwf	___fldiv@rem+2,w
  5017  0A87  044F               	iorwf	___fldiv@rem+1,w
  5018  0A88  044E               	iorwf	___fldiv@rem,w
  5019  0A89  1D03               	btfss	3,2
  5020  0A8A  1455               	bsf	___fldiv@grs,0
  5021  0A8B                     l7092:	
  5022  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  5023  0A8C  2AA8               	goto	l7094
  5024  0A8D  3001               	movlw	1
  5025  0A8E  00C9               	movwf	??___fldiv
  5026  0A8F                     u7565:	
  5027  0A8F  1003               	clrc
  5028  0A90  0DC5               	rlf	___fldiv@b,f
  5029  0A91  0DC6               	rlf	___fldiv@b+1,f
  5030  0A92  0DC7               	rlf	___fldiv@b+2,f
  5031  0A93  0DC8               	rlf	___fldiv@b+3,f
  5032  0A94  0BC9               	decfsz	??___fldiv,f
  5033  0A95  2A8F               	goto	u7565
  5034  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  5035  0A97  1445               	bsf	___fldiv@b,0
  5036  0A98  3001               	movlw	1
  5037  0A99  00C9               	movwf	??___fldiv
  5038  0A9A                     u7585:	
  5039  0A9A  1003               	clrc
  5040  0A9B  0DD5               	rlf	___fldiv@grs,f
  5041  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5042  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5043  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5044  0A9F  0BC9               	decfsz	??___fldiv,f
  5045  0AA0  2A9A               	goto	u7585
  5046  0AA1  30FF               	movlw	255
  5047  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5048  0AA3  1803               	skipnc
  5049  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5050  0AA5  30FF               	movlw	255
  5051  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5052  0AA7  2A8B               	goto	l7092
  5053  0AA8                     l7094:	
  5054  0AA8  01DA               	clrf	___fldiv@aexp
  5055  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5056  0AAA  2AC1               	goto	l7104
  5057  0AAB  30FF               	movlw	255
  5058  0AAC  0555               	andwf	___fldiv@grs,w
  5059  0AAD  00C9               	movwf	??___fldiv
  5060  0AAE  30FF               	movlw	255
  5061  0AAF  0556               	andwf	___fldiv@grs+1,w
  5062  0AB0  00CA               	movwf	??___fldiv+1
  5063  0AB1  30FF               	movlw	255
  5064  0AB2  0557               	andwf	___fldiv@grs+2,w
  5065  0AB3  00CB               	movwf	??___fldiv+2
  5066  0AB4  307F               	movlw	127
  5067  0AB5  0558               	andwf	___fldiv@grs+3,w
  5068  0AB6  00CC               	movwf	??___fldiv+3
  5069  0AB7  084C               	movf	??___fldiv+3,w
  5070  0AB8  044B               	iorwf	??___fldiv+2,w
  5071  0AB9  044A               	iorwf	??___fldiv+1,w
  5072  0ABA  0449               	iorwf	??___fldiv,w
  5073  0ABB  1903               	skipnz
  5074  0ABC  1845               	btfsc	___fldiv@b,0
  5075  0ABD  2ABF               	goto	l7100
  5076  0ABE  2AC1               	goto	l7104
  5077  0ABF                     l7100:	
  5078  0ABF  01DA               	clrf	___fldiv@aexp
  5079  0AC0  0ADA               	incf	___fldiv@aexp,f
  5080  0AC1                     l7104:	
  5081  0AC1  085A               	movf	___fldiv@aexp,w
  5082  0AC2  1903               	btfsc	3,2
  5083  0AC3  2AF3               	goto	l7114
  5084  0AC4  3001               	movlw	1
  5085  0AC5  07C5               	addwf	___fldiv@b,f
  5086  0AC6  3000               	movlw	0
  5087  0AC7  1803               	skipnc
  5088  0AC8  3001               	movlw	1
  5089  0AC9  07C6               	addwf	___fldiv@b+1,f
  5090  0ACA  3000               	movlw	0
  5091  0ACB  1803               	skipnc
  5092  0ACC  3001               	movlw	1
  5093  0ACD  07C7               	addwf	___fldiv@b+2,f
  5094  0ACE  3000               	movlw	0
  5095  0ACF  1803               	skipnc
  5096  0AD0  3001               	movlw	1
  5097  0AD1  07C8               	addwf	___fldiv@b+3,f
  5098  0AD2  1C48               	btfss	___fldiv@b+3,0
  5099  0AD3  2AF3               	goto	l7114
  5100  0AD4  0845               	movf	___fldiv@b,w
  5101  0AD5  00C9               	movwf	??___fldiv
  5102  0AD6  0846               	movf	___fldiv@b+1,w
  5103  0AD7  00CA               	movwf	??___fldiv+1
  5104  0AD8  0847               	movf	___fldiv@b+2,w
  5105  0AD9  00CB               	movwf	??___fldiv+2
  5106  0ADA  0848               	movf	___fldiv@b+3,w
  5107  0ADB  00CC               	movwf	??___fldiv+3
  5108  0ADC  3001               	movlw	1
  5109  0ADD  00CD               	movwf	??___fldiv+4
  5110  0ADE                     u7655:	
  5111  0ADE  0D4C               	rlf	??___fldiv+3,w
  5112  0ADF  0CCC               	rrf	??___fldiv+3,f
  5113  0AE0  0CCB               	rrf	??___fldiv+2,f
  5114  0AE1  0CCA               	rrf	??___fldiv+1,f
  5115  0AE2  0CC9               	rrf	??___fldiv,f
  5116  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5117  0AE4  2ADE               	goto	u7655
  5118  0AE5  084C               	movf	??___fldiv+3,w
  5119  0AE6  00C8               	movwf	___fldiv@b+3
  5120  0AE7  084B               	movf	??___fldiv+2,w
  5121  0AE8  00C7               	movwf	___fldiv@b+2
  5122  0AE9  084A               	movf	??___fldiv+1,w
  5123  0AEA  00C6               	movwf	___fldiv@b+1
  5124  0AEB  0849               	movf	??___fldiv,w
  5125  0AEC  00C5               	movwf	___fldiv@b
  5126  0AED  3001               	movlw	1
  5127  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5128  0AEF  1803               	skipnc
  5129  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5130  0AF1  3000               	movlw	0
  5131  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5132  0AF3                     l7114:	
  5133  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5134  0AF4  3A80               	xorlw	128
  5135  0AF5  00FF               	movwf	127
  5136  0AF6  3080               	movlw	128
  5137  0AF7  027F               	subwf	127,w
  5138  0AF8  1D03               	skipz
  5139  0AF9  2AFC               	goto	u7665
  5140  0AFA  30FF               	movlw	255
  5141  0AFB  0253               	subwf	___fldiv@new_exp,w
  5142  0AFC                     u7665:	
  5143  0AFC  1C03               	skipc
  5144  0AFD  2B0C               	goto	l7118
  5145  0AFE  30FF               	movlw	255
  5146  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0B01  00D3               	movwf	___fldiv@new_exp
  5149  0B02  3000               	movlw	0
  5150  0B03  00D4               	movwf	___fldiv@new_exp+1
  5151  0B04  3000               	movlw	0
  5152  0B05  00C8               	movwf	___fldiv@b+3
  5153  0B06  3000               	movlw	0
  5154  0B07  00C7               	movwf	___fldiv@b+2
  5155  0B08  3000               	movlw	0
  5156  0B09  00C6               	movwf	___fldiv@b+1
  5157  0B0A  3000               	movlw	0
  5158  0B0B  00C5               	movwf	___fldiv@b
  5159  0B0C                     l7118:	
  5160  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5163  0B0F  3A80               	xorlw	128
  5164  0B10  00FF               	movwf	127
  5165  0B11  3080               	movlw	128
  5166  0B12  027F               	subwf	127,w
  5167  0B13  1D03               	skipz
  5168  0B14  2B17               	goto	u7675
  5169  0B15  3001               	movlw	1
  5170  0B16  0253               	subwf	___fldiv@new_exp,w
  5171  0B17                     u7675:	
  5172  0B17  1803               	skipnc
  5173  0B18  2B26               	goto	l1324
  5174  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0B1B  01D3               	clrf	___fldiv@new_exp
  5177  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5178  0B1D  3000               	movlw	0
  5179  0B1E  00C8               	movwf	___fldiv@b+3
  5180  0B1F  3000               	movlw	0
  5181  0B20  00C7               	movwf	___fldiv@b+2
  5182  0B21  3000               	movlw	0
  5183  0B22  00C6               	movwf	___fldiv@b+1
  5184  0B23  3000               	movlw	0
  5185  0B24  00C5               	movwf	___fldiv@b
  5186  0B25  01D2               	clrf	___fldiv@sign
  5187  0B26                     l1324:	
  5188  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0B28  0853               	movf	___fldiv@new_exp,w
  5191  0B29  00C9               	movwf	??___fldiv
  5192  0B2A  0849               	movf	??___fldiv,w
  5193  0B2B  00D9               	movwf	___fldiv@bexp
  5194  0B2C  1C59               	btfss	___fldiv@bexp,0
  5195  0B2D  2B30               	goto	l7130
  5196  0B2E  17C7               	bsf	___fldiv@b+2,7
  5197  0B2F  2B34               	goto	l1326
  5198  0B30                     l7130:	
  5199  0B30  307F               	movlw	127
  5200  0B31  00C9               	movwf	??___fldiv
  5201  0B32  0849               	movf	??___fldiv,w
  5202  0B33  05C7               	andwf	___fldiv@b+2,f
  5203  0B34                     l1326:	
  5204  0B34  0859               	movf	___fldiv@bexp,w
  5205  0B35  00C9               	movwf	??___fldiv
  5206  0B36  1003               	clrc
  5207  0B37  0C49               	rrf	??___fldiv,w
  5208  0B38  00CA               	movwf	??___fldiv+1
  5209  0B39  084A               	movf	??___fldiv+1,w
  5210  0B3A  00C8               	movwf	___fldiv@b+3
  5211  0B3B  29F9               	goto	L5
  5212  0B3C                     __end_of___fldiv:	
  5213                           
  5214                           	psect	text8
  5215  19E3                     __ptext8:	
  5216 ;; *************** function _Package_Usart_is_for_me *****************
  5217 ;; Defined at:
  5218 ;;		line 8 in file "protocolo.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  retorno         1    0[BANK0 ] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      unsigned char 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 200/100
  5229 ;;		On exit  : 300/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       0       0       0       0
  5233 ;;      Locals:         0       1       0       0       0
  5234 ;;      Temps:          0       0       0       0       0
  5235 ;;      Totals:         0       1       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_MediaPlacaVaccum
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function _Package_Usart_is_for_me
  5248  19E3                     _Package_Usart_is_for_me:	
  5249                           
  5250                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5254  19E3  1683               	bsf	3,5	;RP0=1, select bank1
  5255  19E4  1C6B               	btfss	_generic_status^(0+128),0
  5256  19E5  29F5               	goto	l6908
  5257                           
  5258                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5259  19E6  1703               	bsf	3,6	;RP1=1, select bank3
  5260  19E7  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5261  19E8  1303               	bcf	3,6	;RP1=0, select bank1
  5262  19E9  0665               	xorwf	_Board_Number^(0+128),w
  5263  19EA  1903               	skipnz
  5264  19EB  29F0               	goto	l678
  5265  19EC  1703               	bsf	3,6	;RP1=1, select bank3
  5266  19ED  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5267  19EE  1D03               	btfss	3,2
  5268  19EF  29F5               	goto	l6908
  5269  19F0                     l678:	
  5270                           
  5271                           ;protocolo.c: 13:             retorno=1;
  5272  19F0  1283               	bcf	3,5	;RP0=0, select bank0
  5273  19F1  1303               	bcf	3,6	;RP1=0, select bank0
  5274  19F2  01A0               	clrf	Package_Usart_is_for_me@retorno
  5275  19F3  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5276  19F4  29F8               	goto	l6912
  5277  19F5                     l6908:	
  5278                           
  5279                           ;protocolo.c: 15:             retorno=0;
  5280  19F5  1283               	bcf	3,5	;RP0=0, select bank0
  5281  19F6  1303               	bcf	3,6	;RP1=0, select bank0
  5282  19F7  01A0               	clrf	Package_Usart_is_for_me@retorno
  5283  19F8                     l6912:	
  5284                           
  5285                           ;protocolo.c: 21:      return retorno;
  5286  19F8  0820               	movf	Package_Usart_is_for_me@retorno,w
  5287  19F9  0008               	return
  5288  19FA                     __end_of_Package_Usart_is_for_me:	
  5289                           
  5290                           	psect	text9
  5291  1EEF                     __ptext9:	
  5292 ;; *************** function _ADC_Media_10bits *****************
  5293 ;; Defined at:
  5294 ;;		line 20 in file "adc.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  canal           1    wreg     unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  canal           1   38[BANK0 ] unsigned char 
  5299 ;;  value           2   39[BANK0 ] unsigned int 
  5300 ;;  i               1   41[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4   33[BANK0 ] float 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 300/100
  5307 ;;		On exit  : 300/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       4       0       0       0
  5311 ;;      Locals:         0       4       0       0       0
  5312 ;;      Temps:          0       1       0       0       0
  5313 ;;      Totals:         0       9       0       0       0
  5314 ;;Total ram usage:        9 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		___lwdiv
  5319 ;;		___xxtofl
  5320 ;;		_captura
  5321 ;;		_my_delay_ms
  5322 ;; This function is called by:
  5323 ;;		_MediaPlacaVaccum
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _ADC_Media_10bits
  5329  1EEF                     _ADC_Media_10bits:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5333                           ;ADC_Media_10bits@canal stored from wreg
  5334  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5335  1EF0  00C6               	movwf	ADC_Media_10bits@canal
  5336                           
  5337                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5338  1EF1  0846               	movf	ADC_Media_10bits@canal,w
  5339  1EF2  00C5               	movwf	??_ADC_Media_10bits
  5340  1EF3  0DC5               	rlf	??_ADC_Media_10bits,f
  5341  1EF4  0DC5               	rlf	??_ADC_Media_10bits,f
  5342  1EF5  081F               	movf	31,w	;volatile
  5343  1EF6  0645               	xorwf	??_ADC_Media_10bits,w
  5344  1EF7  39C3               	andlw	-61
  5345  1EF8  0645               	xorwf	??_ADC_Media_10bits,w
  5346  1EF9  009F               	movwf	31	;volatile
  5347                           
  5348                           ;adc.c: 24:       my_delay_ms(10);
  5349  1EFA  3000               	movlw	0
  5350  1EFB  00A3               	movwf	my_delay_ms@time+3
  5351  1EFC  3000               	movlw	0
  5352  1EFD  00A2               	movwf	my_delay_ms@time+2
  5353  1EFE  3000               	movlw	0
  5354  1EFF  00A1               	movwf	my_delay_ms@time+1
  5355  1F00  300A               	movlw	10
  5356  1F01  00A0               	movwf	my_delay_ms@time
  5357  1F02  160A  158A  2511  160A  158A  	fcall	_my_delay_ms
  5358                           
  5359                           ;adc.c: 26:       value=0;
  5360  1F07  01C7               	clrf	ADC_Media_10bits@value
  5361  1F08  01C8               	clrf	ADC_Media_10bits@value+1
  5362                           
  5363                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5364  1F09  01C9               	clrf	ADC_Media_10bits@i
  5365  1F0A  0AC9               	incf	ADC_Media_10bits@i,f
  5366  1F0B                     l6890:	
  5367                           
  5368                           ;adc.c: 28:           value+=captura();
  5369  1F0B  160A  158A  2171  160A  158A  	fcall	_captura
  5370  1F10  0820               	movf	?_captura,w
  5371  1F11  07C7               	addwf	ADC_Media_10bits@value,f
  5372  1F12  1803               	skipnc
  5373  1F13  0AC8               	incf	ADC_Media_10bits@value+1,f
  5374  1F14  0821               	movf	?_captura+1,w
  5375  1F15  07C8               	addwf	ADC_Media_10bits@value+1,f
  5376  1F16  3001               	movlw	1
  5377  1F17  00C5               	movwf	??_ADC_Media_10bits
  5378  1F18  0845               	movf	??_ADC_Media_10bits,w
  5379  1F19  07C9               	addwf	ADC_Media_10bits@i,f
  5380  1F1A  3033               	movlw	51
  5381  1F1B  0249               	subwf	ADC_Media_10bits@i,w
  5382  1F1C  1C03               	skipc
  5383  1F1D  2F0B               	goto	l6890
  5384                           
  5385                           ;adc.c: 29:       value/=(i-1);
  5386  1F1E  0849               	movf	ADC_Media_10bits@i,w
  5387  1F1F  3EFF               	addlw	255
  5388  1F20  00A0               	movwf	___lwdiv@divisor
  5389  1F21  30FF               	movlw	255
  5390  1F22  1803               	skipnc
  5391  1F23  3000               	movlw	0
  5392  1F24  00A1               	movwf	___lwdiv@divisor+1
  5393  1F25  0848               	movf	ADC_Media_10bits@value+1,w
  5394  1F26  00A3               	movwf	___lwdiv@dividend+1
  5395  1F27  0847               	movf	ADC_Media_10bits@value,w
  5396  1F28  00A2               	movwf	___lwdiv@dividend
  5397  1F29  160A  158A  25F4  160A  158A  	fcall	___lwdiv
  5398  1F2E  0821               	movf	?___lwdiv+1,w
  5399  1F2F  00C8               	movwf	ADC_Media_10bits@value+1
  5400  1F30  0820               	movf	?___lwdiv,w
  5401  1F31  00C7               	movwf	ADC_Media_10bits@value
  5402                           
  5403                           ;adc.c: 30:       return value;
  5404  1F32  0847               	movf	ADC_Media_10bits@value,w
  5405  1F33  00B3               	movwf	___xxtofl@val
  5406  1F34  0848               	movf	ADC_Media_10bits@value+1,w
  5407  1F35  00B4               	movwf	___xxtofl@val+1
  5408  1F36  01B5               	clrf	___xxtofl@val+2
  5409  1F37  01B6               	clrf	___xxtofl@val+3
  5410  1F38  3000               	movlw	0
  5411  1F39  160A  118A  21CC   	fcall	___xxtofl
  5412  1F3C  0836               	movf	?___xxtofl+3,w
  5413  1F3D  00C4               	movwf	?_ADC_Media_10bits+3
  5414  1F3E  0835               	movf	?___xxtofl+2,w
  5415  1F3F  00C3               	movwf	?_ADC_Media_10bits+2
  5416  1F40  0834               	movf	?___xxtofl+1,w
  5417  1F41  00C2               	movwf	?_ADC_Media_10bits+1
  5418  1F42  0833               	movf	?___xxtofl,w
  5419  1F43  00C1               	movwf	?_ADC_Media_10bits
  5420  1F44  0008               	return
  5421  1F45                     __end_of_ADC_Media_10bits:	
  5422                           
  5423                           	psect	text10
  5424  11CC                     __ptext10:	
  5425 ;; *************** function ___xxtofl *****************
  5426 ;; Defined at:
  5427 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  sign            1    wreg     unsigned char 
  5430 ;;  val             4   19[BANK0 ] long 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  sign            1   27[BANK0 ] unsigned char 
  5433 ;;  arg             4   29[BANK0 ] unsigned long 
  5434 ;;  exp             1   28[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  4   19[BANK0 ] unsigned char 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 300/0
  5441 ;;		On exit  : 300/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       4       0       0       0
  5445 ;;      Locals:         0       6       0       0       0
  5446 ;;      Temps:          0       4       0       0       0
  5447 ;;      Totals:         0      14       0       0       0
  5448 ;;Total ram usage:       14 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_MediaPlacaVaccum
  5455 ;;		_ADC_Media_10bits
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function ___xxtofl
  5461  11CC                     ___xxtofl:	
  5462                           
  5463                           ;incstack = 0
  5464                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5465                           ;___xxtofl@sign stored from wreg
  5466  11CC  00BB               	movwf	___xxtofl@sign
  5467  11CD  083B               	movf	___xxtofl@sign,w
  5468  11CE  1D03               	btfss	3,2
  5469  11CF  1FB6               	btfss	___xxtofl@val+3,7
  5470  11D0  29E1               	goto	l6450
  5471  11D1  0933               	comf	___xxtofl@val,w
  5472  11D2  00BD               	movwf	___xxtofl@arg
  5473  11D3  0934               	comf	___xxtofl@val+1,w
  5474  11D4  00BE               	movwf	___xxtofl@arg+1
  5475  11D5  0935               	comf	___xxtofl@val+2,w
  5476  11D6  00BF               	movwf	___xxtofl@arg+2
  5477  11D7  0936               	comf	___xxtofl@val+3,w
  5478  11D8  00C0               	movwf	___xxtofl@arg+3
  5479  11D9  0ABD               	incf	___xxtofl@arg,f
  5480  11DA  1903               	skipnz
  5481  11DB  0ABE               	incf	___xxtofl@arg+1,f
  5482  11DC  1903               	skipnz
  5483  11DD  0ABF               	incf	___xxtofl@arg+2,f
  5484  11DE  1903               	skipnz
  5485  11DF  0AC0               	incf	___xxtofl@arg+3,f
  5486  11E0  29E9               	goto	l1380
  5487  11E1                     l6450:	
  5488  11E1  0836               	movf	___xxtofl@val+3,w
  5489  11E2  00C0               	movwf	___xxtofl@arg+3
  5490  11E3  0835               	movf	___xxtofl@val+2,w
  5491  11E4  00BF               	movwf	___xxtofl@arg+2
  5492  11E5  0834               	movf	___xxtofl@val+1,w
  5493  11E6  00BE               	movwf	___xxtofl@arg+1
  5494  11E7  0833               	movf	___xxtofl@val,w
  5495  11E8  00BD               	movwf	___xxtofl@arg
  5496  11E9                     l1380:	
  5497  11E9  0836               	movf	___xxtofl@val+3,w
  5498  11EA  0435               	iorwf	___xxtofl@val+2,w
  5499  11EB  0434               	iorwf	___xxtofl@val+1,w
  5500  11EC  0433               	iorwf	___xxtofl@val,w
  5501  11ED  1D03               	skipz
  5502  11EE  29F8               	goto	l6456
  5503  11EF  3000               	movlw	0
  5504  11F0  00B6               	movwf	?___xxtofl+3
  5505  11F1  3000               	movlw	0
  5506  11F2  00B5               	movwf	?___xxtofl+2
  5507  11F3  3000               	movlw	0
  5508  11F4  00B4               	movwf	?___xxtofl+1
  5509  11F5  3000               	movlw	0
  5510  11F6  00B3               	movwf	?___xxtofl
  5511  11F7  0008               	return
  5512  11F8                     l6456:	
  5513  11F8  3096               	movlw	150
  5514  11F9  00B7               	movwf	??___xxtofl
  5515  11FA  0837               	movf	??___xxtofl,w
  5516  11FB  00BC               	movwf	___xxtofl@exp
  5517  11FC                     l6460:	
  5518  11FC  30FE               	movlw	254
  5519  11FD  0540               	andwf	___xxtofl@arg+3,w
  5520  11FE  1903               	btfsc	3,2
  5521  11FF  2A29               	goto	l1386
  5522  1200  3001               	movlw	1
  5523  1201  00B7               	movwf	??___xxtofl
  5524  1202  0837               	movf	??___xxtofl,w
  5525  1203  07BC               	addwf	___xxtofl@exp,f
  5526  1204  3001               	movlw	1
  5527  1205                     u6805:	
  5528  1205  1003               	clrc
  5529  1206  0CC0               	rrf	___xxtofl@arg+3,f
  5530  1207  0CBF               	rrf	___xxtofl@arg+2,f
  5531  1208  0CBE               	rrf	___xxtofl@arg+1,f
  5532  1209  0CBD               	rrf	___xxtofl@arg,f
  5533  120A  3EFF               	addlw	-1
  5534  120B  1D03               	skipz
  5535  120C  2A05               	goto	u6805
  5536  120D  29FC               	goto	l6460
  5537  120E                     l6462:	
  5538  120E  3001               	movlw	1
  5539  120F  00B7               	movwf	??___xxtofl
  5540  1210  0837               	movf	??___xxtofl,w
  5541  1211  07BC               	addwf	___xxtofl@exp,f
  5542  1212  3001               	movlw	1
  5543  1213  07BD               	addwf	___xxtofl@arg,f
  5544  1214  3000               	movlw	0
  5545  1215  1803               	skipnc
  5546  1216  3001               	movlw	1
  5547  1217  07BE               	addwf	___xxtofl@arg+1,f
  5548  1218  3000               	movlw	0
  5549  1219  1803               	skipnc
  5550  121A  3001               	movlw	1
  5551  121B  07BF               	addwf	___xxtofl@arg+2,f
  5552  121C  3000               	movlw	0
  5553  121D  1803               	skipnc
  5554  121E  3001               	movlw	1
  5555  121F  07C0               	addwf	___xxtofl@arg+3,f
  5556  1220  3001               	movlw	1
  5557  1221                     u6825:	
  5558  1221  1003               	clrc
  5559  1222  0CC0               	rrf	___xxtofl@arg+3,f
  5560  1223  0CBF               	rrf	___xxtofl@arg+2,f
  5561  1224  0CBE               	rrf	___xxtofl@arg+1,f
  5562  1225  0CBD               	rrf	___xxtofl@arg,f
  5563  1226  3EFF               	addlw	-1
  5564  1227  1D03               	skipz
  5565  1228  2A21               	goto	u6825
  5566  1229                     l1386:	
  5567  1229  30FF               	movlw	255
  5568  122A  0540               	andwf	___xxtofl@arg+3,w
  5569  122B  1903               	btfsc	3,2
  5570  122C  2A3D               	goto	l6470
  5571  122D  2A0E               	goto	l6462
  5572  122E                     l6472:	
  5573  122E  3002               	movlw	2
  5574  122F  023C               	subwf	___xxtofl@exp,w
  5575  1230  1C03               	btfss	3,0
  5576  1231  2A3F               	goto	l1393
  5577  1232  3001               	movlw	1
  5578  1233  02BC               	subwf	___xxtofl@exp,f
  5579  1234  3001               	movlw	1
  5580  1235  00B7               	movwf	??___xxtofl
  5581  1236                     u6845:	
  5582  1236  1003               	clrc
  5583  1237  0DBD               	rlf	___xxtofl@arg,f
  5584  1238  0DBE               	rlf	___xxtofl@arg+1,f
  5585  1239  0DBF               	rlf	___xxtofl@arg+2,f
  5586  123A  0DC0               	rlf	___xxtofl@arg+3,f
  5587  123B  0BB7               	decfsz	??___xxtofl,f
  5588  123C  2A36               	goto	u6845
  5589  123D                     l6470:	
  5590  123D  1FBF               	btfss	___xxtofl@arg+2,7
  5591  123E  2A2E               	goto	l6472
  5592  123F                     l1393:	
  5593  123F  183C               	btfsc	___xxtofl@exp,0
  5594  1240  2A49               	goto	l1394
  5595  1241  30FF               	movlw	255
  5596  1242  05BD               	andwf	___xxtofl@arg,f
  5597  1243  30FF               	movlw	255
  5598  1244  05BE               	andwf	___xxtofl@arg+1,f
  5599  1245  307F               	movlw	127
  5600  1246  05BF               	andwf	___xxtofl@arg+2,f
  5601  1247  30FF               	movlw	255
  5602  1248  05C0               	andwf	___xxtofl@arg+3,f
  5603  1249                     l1394:	
  5604  1249  1003               	clrc
  5605  124A  0CBC               	rrf	___xxtofl@exp,f
  5606  124B  083C               	movf	___xxtofl@exp,w
  5607  124C  00B7               	movwf	??___xxtofl
  5608  124D  01B8               	clrf	??___xxtofl+1
  5609  124E  01B9               	clrf	??___xxtofl+2
  5610  124F  01BA               	clrf	??___xxtofl+3
  5611  1250  3018               	movlw	24
  5612  1251                     u6885:	
  5613  1251  1003               	clrc
  5614  1252  0DB7               	rlf	??___xxtofl,f
  5615  1253  0DB8               	rlf	??___xxtofl+1,f
  5616  1254  0DB9               	rlf	??___xxtofl+2,f
  5617  1255  0DBA               	rlf	??___xxtofl+3,f
  5618  1256  3EFF               	addlw	-1
  5619  1257  1D03               	skipz
  5620  1258  2A51               	goto	u6885
  5621  1259  0837               	movf	??___xxtofl,w
  5622  125A  04BD               	iorwf	___xxtofl@arg,f
  5623  125B  0838               	movf	??___xxtofl+1,w
  5624  125C  04BE               	iorwf	___xxtofl@arg+1,f
  5625  125D  0839               	movf	??___xxtofl+2,w
  5626  125E  04BF               	iorwf	___xxtofl@arg+2,f
  5627  125F  083A               	movf	??___xxtofl+3,w
  5628  1260  04C0               	iorwf	___xxtofl@arg+3,f
  5629  1261  083B               	movf	___xxtofl@sign,w
  5630  1262  1D03               	btfss	3,2
  5631  1263  1FB6               	btfss	___xxtofl@val+3,7
  5632  1264  2A66               	goto	l6484
  5633  1265  17C0               	bsf	___xxtofl@arg+3,7
  5634  1266                     l6484:	
  5635  1266  0840               	movf	___xxtofl@arg+3,w
  5636  1267  00B6               	movwf	?___xxtofl+3
  5637  1268  083F               	movf	___xxtofl@arg+2,w
  5638  1269  00B5               	movwf	?___xxtofl+2
  5639  126A  083E               	movf	___xxtofl@arg+1,w
  5640  126B  00B4               	movwf	?___xxtofl+1
  5641  126C  083D               	movf	___xxtofl@arg,w
  5642  126D  00B3               	movwf	?___xxtofl
  5643  126E  0008               	return
  5644  126F                     __end_of___xxtofl:	
  5645                           
  5646                           	psect	text11
  5647  1E6C                     __ptext11:	
  5648 ;; *************** function _ADC_Max_10Bits *****************
  5649 ;; Defined at:
  5650 ;;		line 34 in file "adc.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  canal           1    wreg     unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  canal           1   13[BANK0 ] unsigned char 
  5655 ;;  value           2   16[BANK0 ] unsigned int 
  5656 ;;  Temp            2   14[BANK0 ] unsigned int 
  5657 ;;  i               1   18[BANK0 ] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2   10[BANK0 ] unsigned int 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 300/100
  5664 ;;		On exit  : 300/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5667 ;;      Params:         0       2       0       0       0
  5668 ;;      Locals:         0       6       0       0       0
  5669 ;;      Temps:          0       1       0       0       0
  5670 ;;      Totals:         0       9       0       0       0
  5671 ;;Total ram usage:        9 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    2
  5674 ;; This function calls:
  5675 ;;		_captura
  5676 ;;		_my_delay_ms
  5677 ;; This function is called by:
  5678 ;;		_MediaPlacaVaccum
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _ADC_Max_10Bits
  5684  1E6C                     _ADC_Max_10Bits:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5688                           ;ADC_Max_10Bits@canal stored from wreg
  5689  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1E6D  00AD               	movwf	ADC_Max_10Bits@canal
  5691                           
  5692                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5693  1E6E  082D               	movf	ADC_Max_10Bits@canal,w
  5694  1E6F  00AC               	movwf	??_ADC_Max_10Bits
  5695  1E70  0DAC               	rlf	??_ADC_Max_10Bits,f
  5696  1E71  0DAC               	rlf	??_ADC_Max_10Bits,f
  5697  1E72  081F               	movf	31,w	;volatile
  5698  1E73  062C               	xorwf	??_ADC_Max_10Bits,w
  5699  1E74  39C3               	andlw	-61
  5700  1E75  062C               	xorwf	??_ADC_Max_10Bits,w
  5701  1E76  009F               	movwf	31	;volatile
  5702                           
  5703                           ;adc.c: 39:       my_delay_ms(10);
  5704  1E77  3000               	movlw	0
  5705  1E78  00A3               	movwf	my_delay_ms@time+3
  5706  1E79  3000               	movlw	0
  5707  1E7A  00A2               	movwf	my_delay_ms@time+2
  5708  1E7B  3000               	movlw	0
  5709  1E7C  00A1               	movwf	my_delay_ms@time+1
  5710  1E7D  300A               	movlw	10
  5711  1E7E  00A0               	movwf	my_delay_ms@time
  5712  1E7F  160A  158A  2511  160A  158A  	fcall	_my_delay_ms
  5713                           
  5714                           ;adc.c: 41:       value=0;
  5715  1E84  01B0               	clrf	ADC_Max_10Bits@value
  5716  1E85  01B1               	clrf	ADC_Max_10Bits@value+1
  5717                           
  5718                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5719  1E86  01B2               	clrf	ADC_Max_10Bits@i
  5720  1E87  0AB2               	incf	ADC_Max_10Bits@i,f
  5721  1E88                     l6930:	
  5722                           
  5723                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5724  1E88  160A  158A  2171  160A  158A  	fcall	_captura
  5725  1E8D  0821               	movf	?_captura+1,w
  5726  1E8E  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5727  1E8F  0820               	movf	?_captura,w
  5728  1E90  00AE               	movwf	ADC_Max_10Bits@Temp
  5729                           
  5730                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5731  1E91  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5732  1E92  0231               	subwf	ADC_Max_10Bits@value+1,w
  5733  1E93  1D03               	skipz
  5734  1E94  2E97               	goto	u7245
  5735  1E95  082E               	movf	ADC_Max_10Bits@Temp,w
  5736  1E96  0230               	subwf	ADC_Max_10Bits@value,w
  5737  1E97                     u7245:	
  5738  1E97  1803               	skipnc
  5739  1E98  2E9D               	goto	l6936
  5740  1E99  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5741  1E9A  00B1               	movwf	ADC_Max_10Bits@value+1
  5742  1E9B  082E               	movf	ADC_Max_10Bits@Temp,w
  5743  1E9C  00B0               	movwf	ADC_Max_10Bits@value
  5744  1E9D                     l6936:	
  5745                           
  5746                           ;adc.c: 46:           }
  5747  1E9D  3001               	movlw	1
  5748  1E9E  00AC               	movwf	??_ADC_Max_10Bits
  5749  1E9F  082C               	movf	??_ADC_Max_10Bits,w
  5750  1EA0  07B2               	addwf	ADC_Max_10Bits@i,f
  5751  1EA1  3033               	movlw	51
  5752  1EA2  0232               	subwf	ADC_Max_10Bits@i,w
  5753  1EA3  1C03               	skipc
  5754  1EA4  2E88               	goto	l6930
  5755                           
  5756                           ;adc.c: 47:       return value;
  5757  1EA5  0831               	movf	ADC_Max_10Bits@value+1,w
  5758  1EA6  00AB               	movwf	?_ADC_Max_10Bits+1
  5759  1EA7  0830               	movf	ADC_Max_10Bits@value,w
  5760  1EA8  00AA               	movwf	?_ADC_Max_10Bits
  5761  1EA9  0008               	return
  5762  1EAA                     __end_of_ADC_Max_10Bits:	
  5763                           
  5764                           	psect	text12
  5765  1D11                     __ptext12:	
  5766 ;; *************** function _my_delay_ms *****************
  5767 ;; Defined at:
  5768 ;;		line 5 in file "my_delay.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  time            4    0[BANK0 ] long 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  i               4    6[BANK0 ] long 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, btemp+1
  5777 ;; Tracked objects:
  5778 ;;		On entry : 300/0
  5779 ;;		On exit  : 300/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       4       0       0       0
  5783 ;;      Locals:         0       4       0       0       0
  5784 ;;      Temps:          0       2       0       0       0
  5785 ;;      Totals:         0      10       0       0       0
  5786 ;;Total ram usage:       10 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_MediaPlacaVaccum
  5793 ;;		_ADC_Media_10bits
  5794 ;;		_ADC_Max_10Bits
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _my_delay_ms
  5800  1D11                     _my_delay_ms:	
  5801                           
  5802                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5806  1D11  3000               	movlw	0
  5807  1D12  00A9               	movwf	my_delay_ms@i+3
  5808  1D13  3000               	movlw	0
  5809  1D14  00A8               	movwf	my_delay_ms@i+2
  5810  1D15  3000               	movlw	0
  5811  1D16  00A7               	movwf	my_delay_ms@i+1
  5812  1D17  3000               	movlw	0
  5813  1D18  00A6               	movwf	my_delay_ms@i
  5814  1D19                     l6034:	
  5815  1D19  0829               	movf	my_delay_ms@i+3,w
  5816  1D1A  3A80               	xorlw	128
  5817  1D1B  00FF               	movwf	127
  5818  1D1C  0823               	movf	my_delay_ms@time+3,w
  5819  1D1D  3A80               	xorlw	128
  5820  1D1E  027F               	subwf	127,w
  5821  1D1F  1D03               	skipz
  5822  1D20  2D2B               	goto	u5813
  5823  1D21  0822               	movf	my_delay_ms@time+2,w
  5824  1D22  0228               	subwf	my_delay_ms@i+2,w
  5825  1D23  1D03               	skipz
  5826  1D24  2D2B               	goto	u5813
  5827  1D25  0821               	movf	my_delay_ms@time+1,w
  5828  1D26  0227               	subwf	my_delay_ms@i+1,w
  5829  1D27  1D03               	skipz
  5830  1D28  2D2B               	goto	u5813
  5831  1D29  0820               	movf	my_delay_ms@time,w
  5832  1D2A  0226               	subwf	my_delay_ms@i,w
  5833  1D2B                     u5813:	
  5834  1D2B  1803               	btfsc	3,0
  5835  1D2C  0008               	return
  5836                           
  5837                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5838  1D2D  3003               	movlw	3
  5839  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  5840  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  5841  1D30  00A5               	movwf	??_my_delay_ms+1
  5842  1D31  3097               	movlw	151
  5843  1D32  00A4               	movwf	??_my_delay_ms
  5844  1D33                     u8017:	
  5845  1D33  0BA4               	decfsz	??_my_delay_ms,f
  5846  1D34  2D33               	goto	u8017
  5847  1D35  0BA5               	decfsz	??_my_delay_ms+1,f
  5848  1D36  2D33               	goto	u8017
  5849                           
  5850                           ;my_delay.c: 10:             }
  5851  1D37  3001               	movlw	1
  5852  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  5853  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  5854  1D3A  07A6               	addwf	my_delay_ms@i,f
  5855  1D3B  3000               	movlw	0
  5856  1D3C  1803               	skipnc
  5857  1D3D  3001               	movlw	1
  5858  1D3E  07A7               	addwf	my_delay_ms@i+1,f
  5859  1D3F  3000               	movlw	0
  5860  1D40  1803               	skipnc
  5861  1D41  3001               	movlw	1
  5862  1D42  07A8               	addwf	my_delay_ms@i+2,f
  5863  1D43  3000               	movlw	0
  5864  1D44  1803               	skipnc
  5865  1D45  3001               	movlw	1
  5866  1D46  07A9               	addwf	my_delay_ms@i+3,f
  5867  1D47  2D19               	goto	l6034
  5868  1D48                     __end_of_my_delay_ms:	
  5869                           
  5870                           	psect	text13
  5871  1971                     __ptext13:	
  5872 ;; *************** function _captura *****************
  5873 ;; Defined at:
  5874 ;;		line 123 in file "adc.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  2    0[BANK0 ] unsigned int 
  5881 ;; Registers used:
  5882 ;;		wreg
  5883 ;; Tracked objects:
  5884 ;;		On entry : 300/0
  5885 ;;		On exit  : 300/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5888 ;;      Params:         0       2       0       0       0
  5889 ;;      Locals:         0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0
  5891 ;;      Totals:         0       2       0       0       0
  5892 ;;Total ram usage:        2 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    1
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_ADC_Media_10bits
  5899 ;;		_ADC_Max_10Bits
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _captura
  5905  1971                     _captura:	
  5906                           
  5907                           ;adc.c: 124:     ADCON0bits.GO=1;
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _captura: [wreg]
  5911  1971  149F               	bsf	31,1	;volatile
  5912  1972                     l356:	
  5913                           ;adc.c: 128:           }
  5914                           
  5915                           
  5916                           ;adc.c: 125:     while(ADCON0bits.GO)
  5917  1972  189F               	btfsc	31,1	;volatile
  5918  1973  2972               	goto	l356
  5919                           
  5920                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5921  1974  081E               	movf	30,w	;volatile
  5922  1975  00A1               	movwf	?_captura+1
  5923  1976  1683               	bsf	3,5	;RP0=1, select bank1
  5924  1977  081E               	movf	30,w	;volatile
  5925  1978  1283               	bcf	3,5	;RP0=0, select bank0
  5926  1979  00A0               	movwf	?_captura
  5927  197A  0008               	return
  5928  197B                     __end_of_captura:	
  5929                           
  5930                           	psect	text14
  5931  1C49                     __ptext14:	
  5932 ;; *************** function _I2C_Master_Init *****************
  5933 ;; Defined at:
  5934 ;;		line 7 in file "I2C.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  c               4   14[BANK0 ] const unsigned long 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 300/0
  5945 ;;		On exit  : 300/100
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5948 ;;      Params:         0       4       0       0       0
  5949 ;;      Locals:         0       0       0       0       0
  5950 ;;      Temps:          0       4       0       0       0
  5951 ;;      Totals:         0       8       0       0       0
  5952 ;;Total ram usage:        8 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    2
  5955 ;; This function calls:
  5956 ;;		___lldiv
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _I2C_Master_Init
  5964  1C49                     _I2C_Master_Init:	
  5965                           
  5966                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5967                           
  5968                           ;incstack = 0
  5969                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5970  1C49  3028               	movlw	40
  5971  1C4A  0094               	movwf	20	;volatile
  5972                           
  5973                           ;I2C.c: 11:   SSPCON2 = 0;
  5974  1C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5975  1C4C  0191               	clrf	17	;volatile
  5976                           
  5977                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5978  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  5979  1C4E  082E               	movf	I2C_Master_Init@c,w
  5980  1C4F  00B2               	movwf	??_I2C_Master_Init
  5981  1C50  082F               	movf	I2C_Master_Init@c+1,w
  5982  1C51  00B3               	movwf	??_I2C_Master_Init+1
  5983  1C52  0830               	movf	I2C_Master_Init@c+2,w
  5984  1C53  00B4               	movwf	??_I2C_Master_Init+2
  5985  1C54  0831               	movf	I2C_Master_Init@c+3,w
  5986  1C55  00B5               	movwf	??_I2C_Master_Init+3
  5987  1C56  3002               	movlw	2
  5988  1C57                     u7695:	
  5989  1C57  1003               	clrc
  5990  1C58  0DB2               	rlf	??_I2C_Master_Init,f
  5991  1C59  0DB3               	rlf	??_I2C_Master_Init+1,f
  5992  1C5A  0DB4               	rlf	??_I2C_Master_Init+2,f
  5993  1C5B  0DB5               	rlf	??_I2C_Master_Init+3,f
  5994  1C5C  3EFF               	addlw	-1
  5995  1C5D  1D03               	skipz
  5996  1C5E  2C57               	goto	u7695
  5997  1C5F  0835               	movf	??_I2C_Master_Init+3,w
  5998  1C60  00A3               	movwf	___lldiv@divisor+3
  5999  1C61  0834               	movf	??_I2C_Master_Init+2,w
  6000  1C62  00A2               	movwf	___lldiv@divisor+2
  6001  1C63  0833               	movf	??_I2C_Master_Init+1,w
  6002  1C64  00A1               	movwf	___lldiv@divisor+1
  6003  1C65  0832               	movf	??_I2C_Master_Init,w
  6004  1C66  00A0               	movwf	___lldiv@divisor
  6005  1C67  3000               	movlw	0
  6006  1C68  00A7               	movwf	___lldiv@dividend+3
  6007  1C69  307A               	movlw	122
  6008  1C6A  00A6               	movwf	___lldiv@dividend+2
  6009  1C6B  3012               	movlw	18
  6010  1C6C  00A5               	movwf	___lldiv@dividend+1
  6011  1C6D  3000               	movlw	0
  6012  1C6E  00A4               	movwf	___lldiv@dividend
  6013  1C6F  160A  158A  27A2   	fcall	___lldiv
  6014  1C72  0820               	movf	?___lldiv,w
  6015  1C73  3EFF               	addlw	255
  6016  1C74  1683               	bsf	3,5	;RP0=1, select bank1
  6017  1C75  0093               	movwf	19	;volatile
  6018                           
  6019                           ;I2C.c: 13:   SSPSTAT = 0;
  6020  1C76  0194               	clrf	20	;volatile
  6021                           
  6022                           ;I2C.c: 14:   TRISC3 = 1;
  6023  1C77  1587               	bsf	7,3	;volatile
  6024                           
  6025                           ;I2C.c: 15:   TRISC4 = 1;
  6026  1C78  1607               	bsf	7,4	;volatile
  6027  1C79  0008               	return
  6028  1C7A                     __end_of_I2C_Master_Init:	
  6029                           
  6030                           	psect	text15
  6031  1FA2                     __ptext15:	
  6032 ;; *************** function ___lldiv *****************
  6033 ;; Defined at:
  6034 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  divisor         4    0[BANK0 ] unsigned long 
  6037 ;;  dividend        4    4[BANK0 ] unsigned long 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  quotient        4    9[BANK0 ] unsigned long 
  6040 ;;  counter         1   13[BANK0 ] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  4    0[BANK0 ] unsigned long 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 300/0
  6047 ;;		On exit  : 300/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         0       8       0       0       0
  6051 ;;      Locals:         0       5       0       0       0
  6052 ;;      Temps:          0       1       0       0       0
  6053 ;;      Totals:         0      14       0       0       0
  6054 ;;Total ram usage:       14 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_I2C_Master_Init
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function ___lldiv
  6066  1FA2                     ___lldiv:	
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6070  1FA2  3000               	movlw	0
  6071  1FA3  00AC               	movwf	___lldiv@quotient+3
  6072  1FA4  3000               	movlw	0
  6073  1FA5  00AB               	movwf	___lldiv@quotient+2
  6074  1FA6  3000               	movlw	0
  6075  1FA7  00AA               	movwf	___lldiv@quotient+1
  6076  1FA8  3000               	movlw	0
  6077  1FA9  00A9               	movwf	___lldiv@quotient
  6078  1FAA  0823               	movf	___lldiv@divisor+3,w
  6079  1FAB  0422               	iorwf	___lldiv@divisor+2,w
  6080  1FAC  0421               	iorwf	___lldiv@divisor+1,w
  6081  1FAD  0420               	iorwf	___lldiv@divisor,w
  6082  1FAE  1903               	skipnz
  6083  1FAF  2FF7               	goto	l6964
  6084  1FB0  01AD               	clrf	___lldiv@counter
  6085  1FB1  0AAD               	incf	___lldiv@counter,f
  6086  1FB2                     l6950:	
  6087  1FB2  1BA3               	btfsc	___lldiv@divisor+3,7
  6088  1FB3  2FC2               	goto	l6952
  6089  1FB4  3001               	movlw	1
  6090  1FB5  00A8               	movwf	??___lldiv
  6091  1FB6                     u7275:	
  6092  1FB6  1003               	clrc
  6093  1FB7  0DA0               	rlf	___lldiv@divisor,f
  6094  1FB8  0DA1               	rlf	___lldiv@divisor+1,f
  6095  1FB9  0DA2               	rlf	___lldiv@divisor+2,f
  6096  1FBA  0DA3               	rlf	___lldiv@divisor+3,f
  6097  1FBB  0BA8               	decfsz	??___lldiv,f
  6098  1FBC  2FB6               	goto	u7275
  6099  1FBD  3001               	movlw	1
  6100  1FBE  00A8               	movwf	??___lldiv
  6101  1FBF  0828               	movf	??___lldiv,w
  6102  1FC0  07AD               	addwf	___lldiv@counter,f
  6103  1FC1  2FB2               	goto	l6950
  6104  1FC2                     l6952:	
  6105  1FC2  3001               	movlw	1
  6106  1FC3  00A8               	movwf	??___lldiv
  6107  1FC4                     u7295:	
  6108  1FC4  1003               	clrc
  6109  1FC5  0DA9               	rlf	___lldiv@quotient,f
  6110  1FC6  0DAA               	rlf	___lldiv@quotient+1,f
  6111  1FC7  0DAB               	rlf	___lldiv@quotient+2,f
  6112  1FC8  0DAC               	rlf	___lldiv@quotient+3,f
  6113  1FC9  0BA8               	decfsz	??___lldiv,f
  6114  1FCA  2FC4               	goto	u7295
  6115  1FCB  0823               	movf	___lldiv@divisor+3,w
  6116  1FCC  0227               	subwf	___lldiv@dividend+3,w
  6117  1FCD  1D03               	skipz
  6118  1FCE  2FD9               	goto	u7305
  6119  1FCF  0822               	movf	___lldiv@divisor+2,w
  6120  1FD0  0226               	subwf	___lldiv@dividend+2,w
  6121  1FD1  1D03               	skipz
  6122  1FD2  2FD9               	goto	u7305
  6123  1FD3  0821               	movf	___lldiv@divisor+1,w
  6124  1FD4  0225               	subwf	___lldiv@dividend+1,w
  6125  1FD5  1D03               	skipz
  6126  1FD6  2FD9               	goto	u7305
  6127  1FD7  0820               	movf	___lldiv@divisor,w
  6128  1FD8  0224               	subwf	___lldiv@dividend,w
  6129  1FD9                     u7305:	
  6130  1FD9  1C03               	skipc
  6131  1FDA  2FEA               	goto	l6960
  6132  1FDB  0820               	movf	___lldiv@divisor,w
  6133  1FDC  02A4               	subwf	___lldiv@dividend,f
  6134  1FDD  0821               	movf	___lldiv@divisor+1,w
  6135  1FDE  1C03               	skipc
  6136  1FDF  0F21               	incfsz	___lldiv@divisor+1,w
  6137  1FE0  02A5               	subwf	___lldiv@dividend+1,f
  6138  1FE1  0822               	movf	___lldiv@divisor+2,w
  6139  1FE2  1C03               	skipc
  6140  1FE3  0F22               	incfsz	___lldiv@divisor+2,w
  6141  1FE4  02A6               	subwf	___lldiv@dividend+2,f
  6142  1FE5  0823               	movf	___lldiv@divisor+3,w
  6143  1FE6  1C03               	skipc
  6144  1FE7  0F23               	incfsz	___lldiv@divisor+3,w
  6145  1FE8  02A7               	subwf	___lldiv@dividend+3,f
  6146  1FE9  1429               	bsf	___lldiv@quotient,0
  6147  1FEA                     l6960:	
  6148  1FEA  3001               	movlw	1
  6149  1FEB                     u7315:	
  6150  1FEB  1003               	clrc
  6151  1FEC  0CA3               	rrf	___lldiv@divisor+3,f
  6152  1FED  0CA2               	rrf	___lldiv@divisor+2,f
  6153  1FEE  0CA1               	rrf	___lldiv@divisor+1,f
  6154  1FEF  0CA0               	rrf	___lldiv@divisor,f
  6155  1FF0  3EFF               	addlw	-1
  6156  1FF1  1D03               	skipz
  6157  1FF2  2FEB               	goto	u7315
  6158  1FF3  3001               	movlw	1
  6159  1FF4  02AD               	subwf	___lldiv@counter,f
  6160  1FF5  1D03               	btfss	3,2
  6161  1FF6  2FC2               	goto	l6952
  6162  1FF7                     l6964:	
  6163  1FF7  082C               	movf	___lldiv@quotient+3,w
  6164  1FF8  00A3               	movwf	?___lldiv+3
  6165  1FF9  082B               	movf	___lldiv@quotient+2,w
  6166  1FFA  00A2               	movwf	?___lldiv+2
  6167  1FFB  082A               	movf	___lldiv@quotient+1,w
  6168  1FFC  00A1               	movwf	?___lldiv+1
  6169  1FFD  0829               	movf	___lldiv@quotient,w
  6170  1FFE  00A0               	movwf	?___lldiv
  6171  1FFF  0008               	return
  6172  2000                     __end_of___lldiv:	
  6173                           
  6174                           	psect	text16
  6175  0036                     __ptext16:	
  6176 ;; *************** function _Decodify_Command *****************
  6177 ;; Defined at:
  6178 ;;		line 303 in file "SlaveLiofilizadorVer1.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6183 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6184 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6185 ;;  sizedata        1   42[BANK1 ] unsigned char 
  6186 ;;  valor           2   40[BANK1 ] int 
  6187 ;;  add             1   32[BANK1 ] unsigned char 
  6188 ;;  add_24LCxxxx    4   43[BANK1 ] unsigned long 
  6189 ;;  OutPut          4   35[BANK1 ] float 
  6190 ;;  tempint         2   33[BANK1 ] int 
  6191 ;;  dados           2   30[BANK1 ] int 
  6192 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 300/100
  6199 ;;		On exit  : 200/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       0       0       0       0
  6203 ;;      Locals:         0       0      47       0       0
  6204 ;;      Temps:          0       4       0       0       0
  6205 ;;      Totals:         0       4      47       0       0
  6206 ;;Total ram usage:       51 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    6
  6209 ;; This function calls:
  6210 ;;		_EEPROM_24C1025_Fill_All
  6211 ;;		_EEPROM_24C1025_Read_Buffer
  6212 ;;		_EEPROM_24C1025_Read_Byte
  6213 ;;		_EEPROM_24C1025_Read_Int
  6214 ;;		_EEPROM_24C1025_Read_Str
  6215 ;;		_EEPROM_24C1025_Write_Buffer
  6216 ;;		_EEPROM_24C1025_Write_Byte
  6217 ;;		_EEPROM_24C1025_Write_Int
  6218 ;;		_EEPROM_24C1025_Write_Str
  6219 ;;		_EEPROM_Read_Byte
  6220 ;;		_EEPROM_Read_Integer
  6221 ;;		_EEPROM_Read_String
  6222 ;;		_EEPROM_Write_Byte
  6223 ;;		_EEPROM_Write_Integer
  6224 ;;		_EEPROM_Write_String
  6225 ;;		_PROCULUS_Buzzer
  6226 ;;		_PROCULUS_Show_Screen
  6227 ;;		_PROCULUS_VP_Write_String
  6228 ;;		_Save_Log
  6229 ;;		_Send_Reply_OK
  6230 ;;		_Send_To_MB
  6231 ;;		_USART_put_buffer
  6232 ;;		_USART_put_int
  6233 ;;		_USART_put_string
  6234 ;;		_USART_putc
  6235 ;;		_USART_to_Protocol
  6236 ;;		___flmul
  6237 ;;		___fltol
  6238 ;;		_itoa
  6239 ;;		_strcat
  6240 ;;		_strcpy
  6241 ;;		_strlen
  6242 ;; This function is called by:
  6243 ;;		_main
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _Decodify_Command
  6249  0036                     _Decodify_Command:	
  6250                           
  6251                           ;SlaveLiofilizadorVer1.c: 305:     int dados;;SlaveLiofilizadorVer1.c: 306:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 307:     int tempint;;SlaveLiofilizadorVer1.c: 308:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 309:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 321:     USART_to_Protocol(&usart_protocol);
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6255  0036  30B9               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6256  0037  160A  158A  2745  120A  118A  	fcall	_USART_to_Protocol
  6257                           
  6258                           ;SlaveLiofilizadorVer1.c: 323:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6259  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6260  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6261  003E  0840               	movf	(_usart_protocol^(0+384)+7),w
  6262  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6264  0041  00DE               	movwf	??_Decodify_Command
  6265  0042  085E               	movf	??_Decodify_Command,w
  6266  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0044  00CE               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6268                           
  6269                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6270  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6271  0046  0841               	movf	(_usart_protocol^(0+384)+8),w
  6272  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0049  00DE               	movwf	??_Decodify_Command
  6275  004A  085E               	movf	??_Decodify_Command,w
  6276  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6277  004C  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6278                           
  6279                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6280  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6281  004E  0842               	movf	(_usart_protocol^(0+384)+9),w
  6282  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6283  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6284  0051  00DE               	movwf	??_Decodify_Command
  6285  0052  085E               	movf	??_Decodify_Command,w
  6286  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6287  0054  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6288                           
  6289                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6290  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6291  0056  0843               	movf	(_usart_protocol^(0+384)+10),w
  6292  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0059  00DE               	movwf	??_Decodify_Command
  6295  005A  085E               	movf	??_Decodify_Command,w
  6296  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6297  005C  00CB               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6298                           
  6299                           ;SlaveLiofilizadorVer1.c: 333:     switch(usart_protocol.command){
  6300  005D  2C5D               	goto	l7498
  6301  005E                     l7294:	
  6302                           
  6303                           ;SlaveLiofilizadorVer1.c: 342:              Send_To_MB(11);
  6304  005E  300B               	movlw	11
  6305  005F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6306                           
  6307                           ;SlaveLiofilizadorVer1.c: 343:              USART_put_string("v1.0.5");
  6308  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6309  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0066  00A1               	movwf	USART_put_string@vetor
  6311  0067  3080               	movlw	128
  6312  0068  00A2               	movwf	USART_put_string@vetor+1
  6313  0069  160A  158A  24DE   	fcall	_USART_put_string
  6314                           
  6315                           ;SlaveLiofilizadorVer1.c: 344:              break;
  6316  006C  0008               	return
  6317  006D                     l7298:	
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 361:              if(usart_protocol.value[0]==0)
  6320  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6321  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6322  006F  083F               	movf	(_usart_protocol^(0+384)+6),w
  6323  0070  1D03               	btfss	3,2
  6324  0071  287B               	goto	l7302
  6325                           
  6326                           ;SlaveLiofilizadorVer1.c: 362:                 OutPut=Tensao1;
  6327  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6328  0073  0852               	movf	(_Tensao1+3)^(0+128),w
  6329  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6330  0075  0851               	movf	(_Tensao1+2)^(0+128),w
  6331  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6332  0077  0850               	movf	(_Tensao1+1)^(0+128),w
  6333  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6334  0079  084F               	movf	_Tensao1^(0+128),w
  6335  007A  2883               	goto	L6
  6336  007B                     l7302:	
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Vaccum0;
  6339  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6340  007C  0856               	movf	(_Vaccum0+3)^(0+128),w
  6341  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6342  007E  0855               	movf	(_Vaccum0+2)^(0+128),w
  6343  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6344  0080  0854               	movf	(_Vaccum0+1)^(0+128),w
  6345  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6346  0082  0853               	movf	_Vaccum0^(0+128),w
  6347  0083                     L6:	
  6348  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6349                           
  6350                           ;SlaveLiofilizadorVer1.c: 367:              OutPut*=10.0;
  6351  0084  3041               	movlw	65
  6352  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0086  00AC               	movwf	___flmul@b+3
  6354  0087  3020               	movlw	32
  6355  0088  00AB               	movwf	___flmul@b+2
  6356  0089  3000               	movlw	0
  6357  008A  00AA               	movwf	___flmul@b+1
  6358  008B  3000               	movlw	0
  6359  008C  00A9               	movwf	___flmul@b
  6360  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6361  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6362  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0090  00B0               	movwf	___flmul@a+3
  6364  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6365  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6366  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0094  00AF               	movwf	___flmul@a+2
  6368  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6370  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0098  00AE               	movwf	___flmul@a+1
  6372  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6373  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6374  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6375  009C  00AD               	movwf	___flmul@a
  6376  009D  120A  118A  24B6  120A  118A  	fcall	___flmul
  6377  00A2  082C               	movf	?___flmul+3,w
  6378  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6379  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6380  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6381  00A6  082B               	movf	?___flmul+2,w
  6382  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6383  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6384  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6385  00AA  082A               	movf	?___flmul+1,w
  6386  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6387  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6388  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6389  00AE  0829               	movf	?___flmul,w
  6390  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6391  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6392                           
  6393                           ;SlaveLiofilizadorVer1.c: 369:              INTCONbits.GIE=0;
  6394  00B1  138B               	bcf	11,7	;volatile
  6395                           
  6396                           ;SlaveLiofilizadorVer1.c: 370:              Send_To_MB(2);
  6397  00B2  3002               	movlw	2
  6398  00B3  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6399                           
  6400                           ;SlaveLiofilizadorVer1.c: 371:              USART_put_int(OutPut);
  6401  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6402  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6403  00BA  00C6               	movwf	___fltol@f1+3
  6404  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6405  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6406  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6407  00BE  00C5               	movwf	___fltol@f1+2
  6408  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6409  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6410  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6411  00C2  00C4               	movwf	___fltol@f1+1
  6412  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6413  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6414  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6415  00C6  00C3               	movwf	___fltol@f1
  6416  00C7  160A  118A  20CE  120A  118A  	fcall	___fltol
  6417  00CC  0844               	movf	?___fltol+1,w
  6418  00CD  00CF               	movwf	USART_put_int@value+1
  6419  00CE  0843               	movf	?___fltol,w
  6420  00CF  00CE               	movwf	USART_put_int@value
  6421  00D0  160A  158A  21B6   	fcall	_USART_put_int
  6422                           
  6423                           ;SlaveLiofilizadorVer1.c: 372:              INTCONbits.GIE=1;
  6424  00D3  178B               	bsf	11,7	;volatile
  6425                           
  6426                           ;SlaveLiofilizadorVer1.c: 373:              break;
  6427  00D4  0008               	return
  6428  00D5                     l7314:	
  6429                           
  6430                           ;SlaveLiofilizadorVer1.c: 378:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6431  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6432  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6433  00D7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6434  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6435  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6436  00DA  00DE               	movwf	??_Decodify_Command
  6437  00DB  085E               	movf	??_Decodify_Command,w
  6438  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6439  00DD  00CE               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6440                           
  6441                           ;SlaveLiofilizadorVer1.c: 379:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6442  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  6443  00DF  0840               	movf	(_usart_protocol^(0+384)+7),w
  6444  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  6445  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  6446  00E2  00DE               	movwf	??_Decodify_Command
  6447  00E3  085E               	movf	??_Decodify_Command,w
  6448  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6449  00E5  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6450                           
  6451                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6452  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  6453  00E7  0841               	movf	(_usart_protocol^(0+384)+8),w
  6454  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  6455  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  6456  00EA  00DE               	movwf	??_Decodify_Command
  6457  00EB  085E               	movf	??_Decodify_Command,w
  6458  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6459  00ED  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6460                           
  6461                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6462  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6463  00EF  0842               	movf	(_usart_protocol^(0+384)+9),w
  6464  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6465  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6466  00F2  00DE               	movwf	??_Decodify_Command
  6467  00F3  085E               	movf	??_Decodify_Command,w
  6468  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6469  00F5  00CB               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6470                           
  6471                           ;SlaveLiofilizadorVer1.c: 382:              Save_Log(add_24LCxxxx);
  6472  00F6  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6473  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6474  00F8  00DB               	movwf	Save_Log@add_datalog+3
  6475  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  6476  00FA  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6477  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6478  00FC  00DA               	movwf	Save_Log@add_datalog+2
  6479  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  6480  00FE  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6481  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0100  00D9               	movwf	Save_Log@add_datalog+1
  6483  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6484  0102  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6485  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0104  00D8               	movwf	Save_Log@add_datalog
  6487  0105  160A  118A  2006   	fcall	_Save_Log
  6488                           
  6489                           ;SlaveLiofilizadorVer1.c: 383:              Delay_Led_Tmr0=0;
  6490  0108  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6491  0109  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6492                           
  6493                           ;SlaveLiofilizadorVer1.c: 384:              milisegundo=0;
  6494  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6495  010B  1303               	bcf	3,6	;RP1=0, select bank1
  6496  010C  01DF               	clrf	_milisegundo^(0+128)	;volatile
  6497  010D  01E0               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6498                           
  6499                           ;SlaveLiofilizadorVer1.c: 385:              break;
  6500  010E  0008               	return
  6501  010F                     l7322:	
  6502                           
  6503                           ;SlaveLiofilizadorVer1.c: 397:              Send_To_MB(2);
  6504  010F  3002               	movlw	2
  6505  0110  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6506                           
  6507                           ;SlaveLiofilizadorVer1.c: 399:              USART_put_int(1);
  6508  0115  3001               	movlw	1
  6509  0116  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0117  00CE               	movwf	USART_put_int@value
  6511  0118  3000               	movlw	0
  6512  0119  00CF               	movwf	USART_put_int@value+1
  6513  011A  160A  158A  21B6   	fcall	_USART_put_int
  6514                           
  6515                           ;SlaveLiofilizadorVer1.c: 409:              break;
  6516  011D  0008               	return
  6517  011E                     l7326:	
  6518                           
  6519                           ;SlaveLiofilizadorVer1.c: 426:              EEPROM_Write_Byte(usart_protocol.value[0],
  6520  011E  1683               	bsf	3,5	;RP0=1, select bank3
  6521  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6522  0120  0840               	movf	(_usart_protocol^(0+384)+7),w
  6523  0121  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0123  00DE               	movwf	??_Decodify_Command
  6526  0124  085E               	movf	??_Decodify_Command,w
  6527  0125  00A0               	movwf	EEPROM_Write_Byte@dado
  6528  0126  1683               	bsf	3,5	;RP0=1, select bank3
  6529  0127  1703               	bsf	3,6	;RP1=1, select bank3
  6530  0128  083F               	movf	(_usart_protocol^(0+384)+6),w
  6531  0129  160A  158A  25B8  120A  118A  	fcall	_EEPROM_Write_Byte
  6532  012E                     L7:	
  6533                           
  6534                           ;SlaveLiofilizadorVer1.c: 428:              Send_To_MB(3);
  6535  012E  3003               	movlw	3
  6536  012F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6537                           
  6538                           ;SlaveLiofilizadorVer1.c: 429:              Send_Reply_OK();
  6539  0134  160A  158A  2168   	fcall	_Send_Reply_OK
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 430:              break;
  6542  0137  0008               	return
  6543  0138                     l7330:	
  6544                           
  6545                           ;SlaveLiofilizadorVer1.c: 432:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6546  0138  1683               	bsf	3,5	;RP0=1, select bank3
  6547  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6548  013A  083F               	movf	(_usart_protocol^(0+384)+6),w
  6549  013B  160A  158A  22E8  120A  118A  	fcall	_EEPROM_Read_Byte
  6550  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6551  0141  00DE               	movwf	??_Decodify_Command
  6552  0142  085E               	movf	??_Decodify_Command,w
  6553  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6554  0144  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6555                           
  6556                           ;SlaveLiofilizadorVer1.c: 433:              Send_To_MB(1);;
  6557  0145  3001               	movlw	1
  6558  0146  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6559                           
  6560                           ;SlaveLiofilizadorVer1.c: 434:              USART_putc(tempchar);
  6561  014B  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6562  014C  160A  158A  217B   	fcall	_USART_putc
  6563                           
  6564                           ;SlaveLiofilizadorVer1.c: 435:              break;
  6565  014F  0008               	return
  6566  0150                     l7336:	
  6567                           
  6568                           ;SlaveLiofilizadorVer1.c: 437:              {;SlaveLiofilizadorVer1.c: 438:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 439:              add=usart_protocol.value[
      +                          0];
  6569  0150  1683               	bsf	3,5	;RP0=1, select bank3
  6570  0151  1703               	bsf	3,6	;RP1=1, select bank3
  6571  0152  083F               	movf	(_usart_protocol^(0+384)+6),w
  6572  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0154  1303               	bcf	3,6	;RP1=0, select bank0
  6574  0155  00DE               	movwf	??_Decodify_Command
  6575  0156  085E               	movf	??_Decodify_Command,w
  6576  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6577  0158  00C0               	movwf	Decodify_Command@add^(0+128)
  6578                           
  6579                           ;SlaveLiofilizadorVer1.c: 440:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6580  0159  1703               	bsf	3,6	;RP1=1, select bank3
  6581  015A  0841               	movf	(_usart_protocol^(0+384)+8),w
  6582  015B  1283               	bcf	3,5	;RP0=0, select bank0
  6583  015C  1303               	bcf	3,6	;RP1=0, select bank0
  6584  015D  00DE               	movwf	??_Decodify_Command
  6585  015E  01DF               	clrf	??_Decodify_Command+1
  6586  015F  1683               	bsf	3,5	;RP0=1, select bank3
  6587  0160  1703               	bsf	3,6	;RP1=1, select bank3
  6588  0161  0840               	movf	(_usart_protocol^(0+384)+7),w
  6589  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6590  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6591  0164  00E0               	movwf	??_Decodify_Command+2
  6592  0165  01E1               	clrf	??_Decodify_Command+3
  6593  0166  0860               	movf	??_Decodify_Command+2,w
  6594  0167  00E1               	movwf	??_Decodify_Command+3
  6595  0168  01E0               	clrf	??_Decodify_Command+2
  6596  0169  085E               	movf	??_Decodify_Command,w
  6597  016A  0460               	iorwf	??_Decodify_Command+2,w
  6598  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6599  016C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6600  016D  1283               	bcf	3,5	;RP0=0, select bank0
  6601  016E  085F               	movf	??_Decodify_Command+1,w
  6602  016F  0461               	iorwf	??_Decodify_Command+3,w
  6603  0170  1683               	bsf	3,5	;RP0=1, select bank1
  6604  0171  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6605                           
  6606                           ;SlaveLiofilizadorVer1.c: 441:              EEPROM_Write_Integer(add,dados);
  6607  0172  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6608  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0174  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6610  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6611  0176  083E               	movf	Decodify_Command@dados^(0+128),w
  6612  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6613  0178  00A5               	movwf	EEPROM_Write_Integer@dado
  6614  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6615  017A  0840               	movf	Decodify_Command@add^(0+128),w
  6616  017B  160A  158A  247A  120A  118A  	fcall	_EEPROM_Write_Integer
  6617  0180  292E               	goto	L7
  6618  0181                     l7346:	
  6619                           ;SlaveLiofilizadorVer1.c: 442:              Send_To_MB(3);
  6620                           
  6621                           
  6622                           ;SlaveLiofilizadorVer1.c: 447:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6623  0181  1683               	bsf	3,5	;RP0=1, select bank3
  6624  0182  1703               	bsf	3,6	;RP1=1, select bank3
  6625  0183  083F               	movf	(_usart_protocol^(0+384)+6),w
  6626  0184  160A  158A  239B  120A  118A  	fcall	_EEPROM_Read_Integer
  6627  0189  0824               	movf	?_EEPROM_Read_Integer+1,w
  6628  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6629  018B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6630  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6631  018D  0823               	movf	?_EEPROM_Read_Integer,w
  6632  018E                     L8:	
  6633  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6634  018F  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6635                           
  6636                           ;SlaveLiofilizadorVer1.c: 448:              Send_To_MB(2);
  6637  0190  3002               	movlw	2
  6638  0191  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6639                           
  6640                           ;SlaveLiofilizadorVer1.c: 449:              USART_put_int(tempint);
  6641  0196  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6642  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6643  0198  00CF               	movwf	USART_put_int@value+1
  6644  0199  1683               	bsf	3,5	;RP0=1, select bank1
  6645  019A  0841               	movf	Decodify_Command@tempint^(0+128),w
  6646  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6647  019C  00CE               	movwf	USART_put_int@value
  6648  019D  160A  158A  21B6   	fcall	_USART_put_int
  6649                           
  6650                           ;SlaveLiofilizadorVer1.c: 450:              break;
  6651  01A0  0008               	return
  6652  01A1                     l7352:	
  6653                           
  6654                           ;SlaveLiofilizadorVer1.c: 453:              EEPROM_Write_String(usart_protocol.value[0],
  6655  01A1  30C0               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6656  01A2  00DE               	movwf	??_Decodify_Command
  6657  01A3  085E               	movf	??_Decodify_Command,w
  6658  01A4  00A5               	movwf	EEPROM_Write_String@dado
  6659  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  6660  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  6661  01A7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6662  01A8  160A  158A  23C5  120A  118A  	fcall	_EEPROM_Write_String
  6663  01AD  292E               	goto	L7
  6664  01AE                     l7358:	
  6665                           ;SlaveLiofilizadorVer1.c: 455:              Send_To_MB(3);
  6666                           
  6667                           
  6668                           ;SlaveLiofilizadorVer1.c: 459:              {;SlaveLiofilizadorVer1.c: 461:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6669  01AE  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6670  01AF  00DE               	movwf	??_Decodify_Command
  6671  01B0  085E               	movf	??_Decodify_Command,w
  6672  01B1  00A3               	movwf	EEPROM_Read_String@dado
  6673  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  6674  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  6675  01B4  083F               	movf	(_usart_protocol^(0+384)+6),w
  6676  01B5  160A  158A  2288  120A  118A  	fcall	_EEPROM_Read_String
  6677                           
  6678                           ;SlaveLiofilizadorVer1.c: 462:              Send_To_MB(sizeof(texto));
  6679  01BA  3010               	movlw	16
  6680  01BB                     L9:	
  6681  01BB  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6682                           
  6683                           ;SlaveLiofilizadorVer1.c: 463:              USART_put_string(texto);
  6684  01C0  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6685  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6686  01C2  00A1               	movwf	USART_put_string@vetor
  6687  01C3  3001               	movlw	1
  6688  01C4  00A2               	movwf	USART_put_string@vetor+1
  6689  01C5  160A  158A  24DE   	fcall	_USART_put_string
  6690                           
  6691                           ;SlaveLiofilizadorVer1.c: 464:              break;
  6692  01C8  0008               	return
  6693  01C9                     l7364:	
  6694                           
  6695                           ;SlaveLiofilizadorVer1.c: 469:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6696  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6697  01CA  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6698  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  6699  01CC  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6700  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6701  01CE  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6702  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6703  01D0  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6704  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6705  01D2  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6706  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6707  01D4  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6708  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6709  01D6  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6710  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6711  01D8  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6712  01D9  30C4               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6713  01DA  00DE               	movwf	??_Decodify_Command
  6714  01DB  085E               	movf	??_Decodify_Command,w
  6715  01DC  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  6716  01DD  1683               	bsf	3,5	;RP0=1, select bank3
  6717  01DE  1703               	bsf	3,6	;RP1=1, select bank3
  6718  01DF  083F               	movf	(_usart_protocol^(0+384)+6),w
  6719  01E0  160A  158A  21A0  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6720  01E5  292E               	goto	L7
  6721  01E6                     l7370:	
  6722                           ;SlaveLiofilizadorVer1.c: 472:              Send_To_MB(3);
  6723                           
  6724                           
  6725                           ;SlaveLiofilizadorVer1.c: 476:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6726  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  6727  01E7  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6728  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6729  01E9  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6730  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6731  01EB  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6732  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6733  01ED  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6734  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6735  01EF  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6736  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6737  01F1  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6738  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6739  01F3  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6740  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6741  01F5  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6742  01F6  1683               	bsf	3,5	;RP0=1, select bank3
  6743  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  6744  01F8  083F               	movf	(_usart_protocol^(0+384)+6),w
  6745  01F9  160A  158A  2213  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6746  01FE  00DE               	movwf	??_Decodify_Command
  6747  01FF  085E               	movf	??_Decodify_Command,w
  6748  0200  1683               	bsf	3,5	;RP0=1, select bank1
  6749  0201  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6750                           
  6751                           ;SlaveLiofilizadorVer1.c: 480:              Send_To_MB(1);
  6752  0202  3001               	movlw	1
  6753  0203  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6754                           
  6755                           ;SlaveLiofilizadorVer1.c: 481:              USART_putc(tempchar);
  6756  0208  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6757  0209  160A  158A  217B   	fcall	_USART_putc
  6758                           
  6759                           ;SlaveLiofilizadorVer1.c: 482:              break;
  6760  020C  0008               	return
  6761  020D                     l7376:	
  6762                           
  6763                           ;SlaveLiofilizadorVer1.c: 484:              {;SlaveLiofilizadorVer1.c: 485:             
      +                           int valor;;SlaveLiofilizadorVer1.c: 486:              ((char *)&valor)[1]=(usart_protoc
      +                          ol.value[5]);
  6764  020D  1683               	bsf	3,5	;RP0=1, select bank3
  6765  020E  1703               	bsf	3,6	;RP1=1, select bank3
  6766  020F  0844               	movf	(_usart_protocol^(0+384)+11),w
  6767  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6768  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6769  0212  00DE               	movwf	??_Decodify_Command
  6770  0213  085E               	movf	??_Decodify_Command,w
  6771  0214  1683               	bsf	3,5	;RP0=1, select bank1
  6772  0215  00C9               	movwf	(Decodify_Command@valor^(0+128)+1)
  6773                           
  6774                           ;SlaveLiofilizadorVer1.c: 487:              ((char *)&valor)[0]=(usart_protocol.value[6]
      +                          );
  6775  0216  1703               	bsf	3,6	;RP1=1, select bank3
  6776  0217  0845               	movf	(_usart_protocol^(0+384)+12),w
  6777  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6778  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6779  021A  00DE               	movwf	??_Decodify_Command
  6780  021B  085E               	movf	??_Decodify_Command,w
  6781  021C  1683               	bsf	3,5	;RP0=1, select bank1
  6782  021D  00C8               	movwf	Decodify_Command@valor^(0+128)
  6783                           
  6784                           ;SlaveLiofilizadorVer1.c: 488:              EEPROM_24C1025_Write_Int(usart_protocol.valu
      +                          e[0],
  6785  021E  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6786  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0220  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6788  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6789  0222  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6790  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0224  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6792  0225  1683               	bsf	3,5	;RP0=1, select bank1
  6793  0226  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6794  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6795  0228  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6796  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6797  022A  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6798  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6799  022C  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6800  022D  1683               	bsf	3,5	;RP0=1, select bank1
  6801  022E  0849               	movf	(Decodify_Command@valor+1)^(0+128),w
  6802  022F  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0230  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6804  0231  1683               	bsf	3,5	;RP0=1, select bank1
  6805  0232  0848               	movf	Decodify_Command@valor^(0+128),w
  6806  0233  1283               	bcf	3,5	;RP0=0, select bank0
  6807  0234  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6808  0235  1683               	bsf	3,5	;RP0=1, select bank3
  6809  0236  1703               	bsf	3,6	;RP1=1, select bank3
  6810  0237  083F               	movf	(_usart_protocol^(0+384)+6),w
  6811  0238  160A  158A  22A8  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6812  023D  292E               	goto	L7
  6813  023E                     l7384:	
  6814                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6815                           
  6816                           
  6817                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6818  023E  1683               	bsf	3,5	;RP0=1, select bank1
  6819  023F  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6820  0240  1283               	bcf	3,5	;RP0=0, select bank0
  6821  0241  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6822  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6823  0243  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6824  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0245  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6826  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6827  0247  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6828  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0249  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6830  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6831  024B  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6832  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6833  024D  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6834  024E  1683               	bsf	3,5	;RP0=1, select bank3
  6835  024F  1703               	bsf	3,6	;RP1=1, select bank3
  6836  0250  083F               	movf	(_usart_protocol^(0+384)+6),w
  6837  0251  160A  158A  2373  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6838  0256  0835               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6839  0257  1683               	bsf	3,5	;RP0=1, select bank1
  6840  0258  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6841  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6842  025A  0834               	movf	?_EEPROM_24C1025_Read_Int,w
  6843  025B  298E               	goto	L8
  6844  025C                     l7390:	
  6845                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6846                           
  6847                           
  6848                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6849  025C  1683               	bsf	3,5	;RP0=1, select bank3
  6850  025D  1703               	bsf	3,6	;RP1=1, select bank3
  6851  025E  0844               	movf	(_usart_protocol^(0+384)+11),w
  6852  025F  1283               	bcf	3,5	;RP0=0, select bank0
  6853  0260  1303               	bcf	3,6	;RP1=0, select bank0
  6854  0261  00DE               	movwf	??_Decodify_Command
  6855  0262  085E               	movf	??_Decodify_Command,w
  6856  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6857  0264  00CA               	movwf	Decodify_Command@sizedata^(0+128)
  6858                           
  6859                           ;SlaveLiofilizadorVer1.c: 507:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6860  0265  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6861  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0267  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6863  0268  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0269  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6865  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6866  026B  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6867  026C  1683               	bsf	3,5	;RP0=1, select bank1
  6868  026D  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6869  026E  1283               	bcf	3,5	;RP0=0, select bank0
  6870  026F  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6871  0270  1683               	bsf	3,5	;RP0=1, select bank1
  6872  0271  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6873  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6874  0273  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6875  0274  1683               	bsf	3,5	;RP0=1, select bank1
  6876  0275  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6877  0276  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0277  00DE               	movwf	??_Decodify_Command
  6879  0278  085E               	movf	??_Decodify_Command,w
  6880  0279  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6881  027A  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6882  027B  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
  6883  027C  3001               	movlw	1
  6884  027D  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6885  027E  1683               	bsf	3,5	;RP0=1, select bank3
  6886  027F  1703               	bsf	3,6	;RP1=1, select bank3
  6887  0280  083F               	movf	(_usart_protocol^(0+384)+6),w
  6888  0281  120A  158A  2028  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6889                           
  6890                           ;SlaveLiofilizadorVer1.c: 514:              Send_To_MB(sizedata);
  6891  0286  1683               	bsf	3,5	;RP0=1, select bank1
  6892  0287  1303               	bcf	3,6	;RP1=0, select bank1
  6893  0288  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6894  0289  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6895                           
  6896                           ;SlaveLiofilizadorVer1.c: 515:              USART_put_buffer(buffer,sizedata);
  6897  028E  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6898  028F  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0290  00DE               	movwf	??_Decodify_Command
  6900  0291  01DF               	clrf	??_Decodify_Command+1
  6901  0292  085E               	movf	??_Decodify_Command,w
  6902  0293  00A1               	movwf	USART_put_buffer@size
  6903  0294  085F               	movf	??_Decodify_Command+1,w
  6904  0295  00A2               	movwf	USART_put_buffer@size+1
  6905  0296  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6906  0297  160A  158A  234F   	fcall	_USART_put_buffer
  6907                           
  6908                           ;SlaveLiofilizadorVer1.c: 516:              };SlaveLiofilizadorVer1.c: 517:             
      +                           break;
  6909  029A  0008               	return
  6910  029B                     l7398:	
  6911                           
  6912                           ;SlaveLiofilizadorVer1.c: 520:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6913  029B  1683               	bsf	3,5	;RP0=1, select bank1
  6914  029C  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6915  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6916  029E  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6917  029F  1683               	bsf	3,5	;RP0=1, select bank1
  6918  02A0  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6919  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  6920  02A2  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6921  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  6922  02A4  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6923  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  6924  02A6  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6925  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  6926  02A8  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6927  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6928  02AA  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6929  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  6930  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  6931  02AD  0844               	movf	(_usart_protocol^(0+384)+11),w
  6932  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  6933  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  6934  02B0  00DE               	movwf	??_Decodify_Command
  6935  02B1  085E               	movf	??_Decodify_Command,w
  6936  02B2  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6937  02B3  30C5               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6938  02B4  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  6939  02B5  3001               	movlw	1
  6940  02B6  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6941  02B7  1683               	bsf	3,5	;RP0=1, select bank3
  6942  02B8  1703               	bsf	3,6	;RP1=1, select bank3
  6943  02B9  083F               	movf	(_usart_protocol^(0+384)+6),w
  6944  02BA  160A  118A  2532  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6945  02BF  292E               	goto	L7
  6946  02C0                     l7404:	
  6947                           ;SlaveLiofilizadorVer1.c: 525:              Send_To_MB(3);
  6948                           
  6949                           
  6950                           ;SlaveLiofilizadorVer1.c: 530:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6951  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  6952  02C1  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6953  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  6954  02C3  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6955  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  6956  02C5  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6957  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  6958  02C7  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6959  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  6960  02C9  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6961  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  6962  02CB  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6963  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  6964  02CD  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6965  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  6966  02CF  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6967  02D0  30C4               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6968  02D1  00DE               	movwf	??_Decodify_Command
  6969  02D2  085E               	movf	??_Decodify_Command,w
  6970  02D3  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  6971  02D4  1683               	bsf	3,5	;RP0=1, select bank3
  6972  02D5  1703               	bsf	3,6	;RP1=1, select bank3
  6973  02D6  083F               	movf	(_usart_protocol^(0+384)+6),w
  6974  02D7  160A  118A  226F  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6975  02DC  292E               	goto	L7
  6976  02DD                     l7410:	
  6977                           ;SlaveLiofilizadorVer1.c: 533:              Send_To_MB(3);
  6978                           
  6979                           
  6980                           ;SlaveLiofilizadorVer1.c: 537:              {;SlaveLiofilizadorVer1.c: 538:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6981  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  6982  02DE  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6983  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6984  02E0  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6985  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  6986  02E2  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6987  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6988  02E4  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6989  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  6990  02E6  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6991  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  6992  02E8  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6993  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  6994  02EA  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6995  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  6996  02EC  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6997  02ED  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6998  02EE  00DE               	movwf	??_Decodify_Command
  6999  02EF  085E               	movf	??_Decodify_Command,w
  7000  02F0  00AA               	movwf	EEPROM_24C1025_Read_Str@texto
  7001  02F1  1683               	bsf	3,5	;RP0=1, select bank3
  7002  02F2  1703               	bsf	3,6	;RP1=1, select bank3
  7003  02F3  083F               	movf	(_usart_protocol^(0+384)+6),w
  7004  02F4  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  7005                           
  7006                           ;SlaveLiofilizadorVer1.c: 542:              Send_To_MB(strlen(texto));
  7007  02F9  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7008  02FA  160A  158A  21FA  120A  118A  	fcall	_strlen
  7009  02FF  0820               	movf	?_strlen,w
  7010  0300  29BB               	goto	L9
  7011  0301                     l7414:	
  7012                           
  7013                           ;SlaveLiofilizadorVer1.c: 548:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7014  0301  1683               	bsf	3,5	;RP0=1, select bank3
  7015  0302  1703               	bsf	3,6	;RP1=1, select bank3
  7016  0303  0840               	movf	(_usart_protocol^(0+384)+7),w
  7017  0304  1283               	bcf	3,5	;RP0=0, select bank0
  7018  0305  1303               	bcf	3,6	;RP1=0, select bank0
  7019  0306  00DE               	movwf	??_Decodify_Command
  7020  0307  085E               	movf	??_Decodify_Command,w
  7021  0308  00AF               	movwf	EEPROM_24C1025_Fill_All@value
  7022  0309  1683               	bsf	3,5	;RP0=1, select bank3
  7023  030A  1703               	bsf	3,6	;RP1=1, select bank3
  7024  030B  083F               	movf	(_usart_protocol^(0+384)+6),w
  7025  030C  160A  158A  26AA  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7026  0311  292E               	goto	L7
  7027  0312                     l7420:	
  7028                           ;SlaveLiofilizadorVer1.c: 550:              Send_To_MB(3);
  7029                           
  7030                           
  7031                           ;SlaveLiofilizadorVer1.c: 555:              {;SlaveLiofilizadorVer1.c: 556:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 557:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 558:              char ss[10];;SlaveLiofilizadorVer1.c: 560:              itoa(hh
      +                          ,hora,10);
  7032  0312  1683               	bsf	3,5	;RP0=1, select bank1
  7033  0313  0868               	movf	_hora^(0+128),w	;volatile
  7034  0314  1283               	bcf	3,5	;RP0=0, select bank0
  7035  0315  00DE               	movwf	??_Decodify_Command
  7036  0316  01DF               	clrf	??_Decodify_Command+1
  7037  0317  085E               	movf	??_Decodify_Command,w
  7038  0318  00B1               	movwf	itoa@val
  7039  0319  085F               	movf	??_Decodify_Command+1,w
  7040  031A  00B2               	movwf	itoa@val+1
  7041  031B  300A               	movlw	10
  7042  031C  00B3               	movwf	itoa@base
  7043  031D  3000               	movlw	0
  7044  031E  00B4               	movwf	itoa@base+1
  7045  031F  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7046  0320  160A  158A  22C8  120A  118A  	fcall	_itoa
  7047                           
  7048                           ;SlaveLiofilizadorVer1.c: 561:              itoa(mm,minuto,10);
  7049  0325  1683               	bsf	3,5	;RP0=1, select bank1
  7050  0326  0867               	movf	_minuto^(0+128),w	;volatile
  7051  0327  1283               	bcf	3,5	;RP0=0, select bank0
  7052  0328  00DE               	movwf	??_Decodify_Command
  7053  0329  01DF               	clrf	??_Decodify_Command+1
  7054  032A  085E               	movf	??_Decodify_Command,w
  7055  032B  00B1               	movwf	itoa@val
  7056  032C  085F               	movf	??_Decodify_Command+1,w
  7057  032D  00B2               	movwf	itoa@val+1
  7058  032E  300A               	movlw	10
  7059  032F  00B3               	movwf	itoa@base
  7060  0330  3000               	movlw	0
  7061  0331  00B4               	movwf	itoa@base+1
  7062  0332  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7063  0333  160A  158A  22C8  120A  118A  	fcall	_itoa
  7064                           
  7065                           ;SlaveLiofilizadorVer1.c: 562:              itoa(ss,segundo,10);
  7066  0338  1683               	bsf	3,5	;RP0=1, select bank1
  7067  0339  0869               	movf	_segundo^(0+128),w	;volatile
  7068  033A  1283               	bcf	3,5	;RP0=0, select bank0
  7069  033B  00DE               	movwf	??_Decodify_Command
  7070  033C  01DF               	clrf	??_Decodify_Command+1
  7071  033D  085E               	movf	??_Decodify_Command,w
  7072  033E  00B1               	movwf	itoa@val
  7073  033F  085F               	movf	??_Decodify_Command+1,w
  7074  0340  00B2               	movwf	itoa@val+1
  7075  0341  300A               	movlw	10
  7076  0342  00B3               	movwf	itoa@base
  7077  0343  3000               	movlw	0
  7078  0344  00B4               	movwf	itoa@base+1
  7079  0345  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7080  0346  160A  158A  22C8  120A  118A  	fcall	_itoa
  7081                           
  7082                           ;SlaveLiofilizadorVer1.c: 565:              strcpy(texto,"");
  7083  034B  304C               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7084  034C  00DE               	movwf	??_Decodify_Command
  7085  034D  085E               	movf	??_Decodify_Command,w
  7086  034E  00A0               	movwf	strcpy@from
  7087  034F  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7088  0350  160A  158A  224C  120A  118A  	fcall	_strcpy
  7089                           
  7090                           ;SlaveLiofilizadorVer1.c: 566:              if (hh[1]==0)
  7091  0355  1683               	bsf	3,5	;RP0=1, select bank1
  7092  0356  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7093  0357  1D03               	btfss	3,2
  7094  0358  2B66               	goto	l7428
  7095                           
  7096                           ;SlaveLiofilizadorVer1.c: 567:                 {;SlaveLiofilizadorVer1.c: 568:          
      +                                 strcat(texto,"0");
  7097  0359  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7098  035A  1283               	bcf	3,5	;RP0=0, select bank0
  7099  035B  00A0               	movwf	strcat@from
  7100  035C  3080               	movlw	128
  7101  035D  00A1               	movwf	strcat@from+1
  7102  035E  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7103  035F  160A  158A  23F0  120A  118A  	fcall	_strcat
  7104                           
  7105                           ;SlaveLiofilizadorVer1.c: 569:                 hh[2]=0;
  7106  0364  1683               	bsf	3,5	;RP0=1, select bank1
  7107  0365  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7108  0366                     l7428:	
  7109                           
  7110                           ;SlaveLiofilizadorVer1.c: 571:              strcat(texto,hh);
  7111  0366  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7112  0367  1283               	bcf	3,5	;RP0=0, select bank0
  7113  0368  00A0               	movwf	strcat@from
  7114  0369  3000               	movlw	0
  7115  036A  00A1               	movwf	strcat@from+1
  7116  036B  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7117  036C  160A  158A  23F0  120A  118A  	fcall	_strcat
  7118                           
  7119                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,":");
  7120  0371  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7121  0372  00A0               	movwf	strcat@from
  7122  0373  3080               	movlw	128
  7123  0374  00A1               	movwf	strcat@from+1
  7124  0375  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7125  0376  160A  158A  23F0  120A  118A  	fcall	_strcat
  7126                           
  7127                           ;SlaveLiofilizadorVer1.c: 573:              if(mm[1]==0)
  7128  037B  1683               	bsf	3,5	;RP0=1, select bank1
  7129  037C  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7130  037D  1D03               	btfss	3,2
  7131  037E  2B8C               	goto	l7438
  7132                           
  7133                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 strcat(texto,"0");
  7134  037F  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7135  0380  1283               	bcf	3,5	;RP0=0, select bank0
  7136  0381  00A0               	movwf	strcat@from
  7137  0382  3080               	movlw	128
  7138  0383  00A1               	movwf	strcat@from+1
  7139  0384  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7140  0385  160A  158A  23F0  120A  118A  	fcall	_strcat
  7141                           
  7142                           ;SlaveLiofilizadorVer1.c: 576:                 mm[2]=0;
  7143  038A  1683               	bsf	3,5	;RP0=1, select bank1
  7144  038B  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7145  038C                     l7438:	
  7146                           
  7147                           ;SlaveLiofilizadorVer1.c: 578:              strcat(texto,mm);
  7148  038C  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7149  038D  1283               	bcf	3,5	;RP0=0, select bank0
  7150  038E  00A0               	movwf	strcat@from
  7151  038F  3000               	movlw	0
  7152  0390  00A1               	movwf	strcat@from+1
  7153  0391  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7154  0392  160A  158A  23F0  120A  118A  	fcall	_strcat
  7155                           
  7156                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,":");
  7157  0397  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7158  0398  00A0               	movwf	strcat@from
  7159  0399  3080               	movlw	128
  7160  039A  00A1               	movwf	strcat@from+1
  7161  039B  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7162  039C  160A  158A  23F0  120A  118A  	fcall	_strcat
  7163                           
  7164                           ;SlaveLiofilizadorVer1.c: 580:              if(ss[1]==0)
  7165  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  7166  03A2  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7167  03A3  1D03               	btfss	3,2
  7168  03A4  2BB2               	goto	l7448
  7169                           
  7170                           ;SlaveLiofilizadorVer1.c: 581:                 {;SlaveLiofilizadorVer1.c: 582:          
      +                                 strcat(texto,"0");
  7171  03A5  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7172  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  7173  03A7  00A0               	movwf	strcat@from
  7174  03A8  3080               	movlw	128
  7175  03A9  00A1               	movwf	strcat@from+1
  7176  03AA  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7177  03AB  160A  158A  23F0  120A  118A  	fcall	_strcat
  7178                           
  7179                           ;SlaveLiofilizadorVer1.c: 583:                 ss[2]=0;
  7180  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  7181  03B1  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7182  03B2                     l7448:	
  7183                           
  7184                           ;SlaveLiofilizadorVer1.c: 585:              strcat(texto,ss);
  7185  03B2  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7186  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  7187  03B4  00A0               	movwf	strcat@from
  7188  03B5  3000               	movlw	0
  7189  03B6  00A1               	movwf	strcat@from+1
  7190  03B7  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7191  03B8  160A  158A  23F0  120A  118A  	fcall	_strcat
  7192                           
  7193                           ;SlaveLiofilizadorVer1.c: 586:              Send_To_MB(strlen(texto));
  7194  03BD  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7195  03BE  160A  158A  21FA  120A  118A  	fcall	_strlen
  7196  03C3  0820               	movf	?_strlen,w
  7197  03C4  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  7198                           
  7199                           ;SlaveLiofilizadorVer1.c: 587:              USART_put_string(texto);
  7200  03C9  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7201  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  7202  03CB  00A1               	movwf	USART_put_string@vetor
  7203  03CC  3001               	movlw	1
  7204  03CD  00A2               	movwf	USART_put_string@vetor+1
  7205  03CE  160A  158A  24DE  120A  118A  	fcall	_USART_put_string
  7206                           
  7207                           ;SlaveLiofilizadorVer1.c: 588:              USART_putc(0);
  7208  03D3  3000               	movlw	0
  7209  03D4  160A  158A  217B   	fcall	_USART_putc
  7210                           
  7211                           ;SlaveLiofilizadorVer1.c: 589:              };SlaveLiofilizadorVer1.c: 590:             
      +                           break;
  7212  03D7  0008               	return
  7213  03D8                     l7456:	
  7214                           
  7215                           ;SlaveLiofilizadorVer1.c: 593:              hora=usart_protocol.value[0];
  7216  03D8  1683               	bsf	3,5	;RP0=1, select bank3
  7217  03D9  1703               	bsf	3,6	;RP1=1, select bank3
  7218  03DA  083F               	movf	(_usart_protocol^(0+384)+6),w
  7219  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  7220  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  7221  03DD  00DE               	movwf	??_Decodify_Command
  7222  03DE  085E               	movf	??_Decodify_Command,w
  7223  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  7224  03E0  00E8               	movwf	_hora^(0+128)	;volatile
  7225                           
  7226                           ;SlaveLiofilizadorVer1.c: 594:              minuto=usart_protocol.value[1];
  7227  03E1  1703               	bsf	3,6	;RP1=1, select bank3
  7228  03E2  0840               	movf	(_usart_protocol^(0+384)+7),w
  7229  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  7230  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  7231  03E5  00DE               	movwf	??_Decodify_Command
  7232  03E6  085E               	movf	??_Decodify_Command,w
  7233  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  7234  03E8  00E7               	movwf	_minuto^(0+128)	;volatile
  7235                           
  7236                           ;SlaveLiofilizadorVer1.c: 595:              segundo=usart_protocol.value[2];
  7237  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  7238  03EA  0841               	movf	(_usart_protocol^(0+384)+8),w
  7239  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  7240  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  7241  03ED  00DE               	movwf	??_Decodify_Command
  7242  03EE  085E               	movf	??_Decodify_Command,w
  7243  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  7244  03F0  00E9               	movwf	_segundo^(0+128)	;volatile
  7245  03F1  292E               	goto	L7
  7246  03F2                     l7462:	
  7247                           ;SlaveLiofilizadorVer1.c: 596:              Send_To_MB(3);
  7248                           
  7249                           
  7250                           ;SlaveLiofilizadorVer1.c: 601:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7251  03F2  1683               	bsf	3,5	;RP0=1, select bank3
  7252  03F3  1703               	bsf	3,6	;RP1=1, select bank3
  7253  03F4  083F               	movf	(_usart_protocol^(0+384)+6),w
  7254  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  7255  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  7256  03F7  00DE               	movwf	??_Decodify_Command
  7257  03F8  01DF               	clrf	??_Decodify_Command+1
  7258  03F9  085E               	movf	??_Decodify_Command,w
  7259  03FA  00D6               	movwf	PROCULUS_Show_Screen@screen
  7260  03FB  085F               	movf	??_Decodify_Command+1,w
  7261  03FC  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7262  03FD  160A  158A  218B  120A  118A  	fcall	_PROCULUS_Show_Screen
  7263  0402  292E               	goto	L7
  7264  0403                     l7468:	
  7265                           ;SlaveLiofilizadorVer1.c: 602:              Send_To_MB(3);
  7266                           
  7267                           
  7268                           ;SlaveLiofilizadorVer1.c: 607:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7269  0403  1683               	bsf	3,5	;RP0=1, select bank3
  7270  0404  1703               	bsf	3,6	;RP1=1, select bank3
  7271  0405  083F               	movf	(_usart_protocol^(0+384)+6),w
  7272  0406  1283               	bcf	3,5	;RP0=0, select bank0
  7273  0407  1303               	bcf	3,6	;RP1=0, select bank0
  7274  0408  00DE               	movwf	??_Decodify_Command
  7275  0409  01DF               	clrf	??_Decodify_Command+1
  7276  040A  085E               	movf	??_Decodify_Command,w
  7277  040B  00DF               	movwf	??_Decodify_Command+1
  7278  040C  01DE               	clrf	??_Decodify_Command
  7279  040D  1683               	bsf	3,5	;RP0=1, select bank3
  7280  040E  1703               	bsf	3,6	;RP1=1, select bank3
  7281  040F  0840               	movf	(_usart_protocol^(0+384)+7),w
  7282  0410  1283               	bcf	3,5	;RP0=0, select bank0
  7283  0411  1303               	bcf	3,6	;RP1=0, select bank0
  7284  0412  075E               	addwf	??_Decodify_Command,w
  7285  0413  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7286  0414  3000               	movlw	0
  7287  0415  1803               	skipnc
  7288  0416  3001               	movlw	1
  7289  0417  075F               	addwf	??_Decodify_Command+1,w
  7290  0418  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7291  0419  160A  158A  230A  120A  118A  	fcall	_PROCULUS_Buzzer
  7292  041E  292E               	goto	L7
  7293  041F                     l7474:	
  7294                           ;SlaveLiofilizadorVer1.c: 609:              Send_To_MB(3);
  7295                           
  7296                           
  7297                           ;SlaveLiofilizadorVer1.c: 613:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7298  041F  1683               	bsf	3,5	;RP0=1, select bank3
  7299  0420  1703               	bsf	3,6	;RP1=1, select bank3
  7300  0421  083F               	movf	(_usart_protocol^(0+384)+6),w
  7301  0422  1283               	bcf	3,5	;RP0=0, select bank0
  7302  0423  1303               	bcf	3,6	;RP1=0, select bank0
  7303  0424  00DE               	movwf	??_Decodify_Command
  7304  0425  01DF               	clrf	??_Decodify_Command+1
  7305  0426  085E               	movf	??_Decodify_Command,w
  7306  0427  00DF               	movwf	??_Decodify_Command+1
  7307  0428  01DE               	clrf	??_Decodify_Command
  7308  0429  1683               	bsf	3,5	;RP0=1, select bank3
  7309  042A  1703               	bsf	3,6	;RP1=1, select bank3
  7310  042B  0840               	movf	(_usart_protocol^(0+384)+7),w
  7311  042C  1283               	bcf	3,5	;RP0=0, select bank0
  7312  042D  1303               	bcf	3,6	;RP1=0, select bank0
  7313  042E  075E               	addwf	??_Decodify_Command,w
  7314  042F  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7315  0430  3000               	movlw	0
  7316  0431  1803               	skipnc
  7317  0432  3001               	movlw	1
  7318  0433  075F               	addwf	??_Decodify_Command+1,w
  7319  0434  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7320  0435  30C1               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7321  0436  00E0               	movwf	??_Decodify_Command+2
  7322  0437  0860               	movf	??_Decodify_Command+2,w
  7323  0438  00DC               	movwf	PROCULUS_VP_Write_String@text
  7324  0439  160A  158A  21CC  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7325  043E  292E               	goto	L7
  7326  043F                     l7480:	
  7327                           ;SlaveLiofilizadorVer1.c: 616:              Send_To_MB(3);
  7328                           
  7329                           
  7330                           ;SlaveLiofilizadorVer1.c: 622:              if(usart_protocol.value[0]==0)
  7331  043F  1683               	bsf	3,5	;RP0=1, select bank3
  7332  0440  1703               	bsf	3,6	;RP1=1, select bank3
  7333  0441  083F               	movf	(_usart_protocol^(0+384)+6),w
  7334  0442  1D03               	btfss	3,2
  7335  0443  2C4F               	goto	l7486
  7336                           
  7337                           ;SlaveLiofilizadorVer1.c: 623:                 {;SlaveLiofilizadorVer1.c: 624:          
      +                                 if(!usart_protocol.value[1])
  7338  0444  0840               	movf	(_usart_protocol^(0+384)+7),w
  7339  0445  1D03               	btfss	3,2
  7340  0446  2C4B               	goto	l288
  7341                           
  7342                           ;SlaveLiofilizadorVer1.c: 625:                    PORTCbits.RC0=0;
  7343  0447  1283               	bcf	3,5	;RP0=0, select bank0
  7344  0448  1303               	bcf	3,6	;RP1=0, select bank0
  7345  0449  1007               	bcf	7,0	;volatile
  7346  044A  292E               	goto	L7
  7347  044B                     l288:	
  7348                           ;SlaveLiofilizadorVer1.c: 626:                 else
  7349                           
  7350                           
  7351                           ;SlaveLiofilizadorVer1.c: 627:                    PORTCbits.RC0=1;
  7352  044B  1283               	bcf	3,5	;RP0=0, select bank0
  7353  044C  1303               	bcf	3,6	;RP1=0, select bank0
  7354  044D  1407               	bsf	7,0	;volatile
  7355  044E  292E               	goto	L7
  7356  044F                     l7486:	
  7357  044F  033F               	decf	(_usart_protocol^(0+384)+6),w
  7358  0450  1D03               	btfss	3,2
  7359  0451  292E               	goto	L7
  7360                           
  7361                           ;SlaveLiofilizadorVer1.c: 630:                      {;SlaveLiofilizadorVer1.c: 631:     
      +                                            if(!usart_protocol.value[1])
  7362  0452  0840               	movf	(_usart_protocol^(0+384)+7),w
  7363  0453  1D03               	btfss	3,2
  7364  0454  2C59               	goto	l292
  7365                           
  7366                           ;SlaveLiofilizadorVer1.c: 632:                          PORTCbits.RC1=0;
  7367  0455  1283               	bcf	3,5	;RP0=0, select bank0
  7368  0456  1303               	bcf	3,6	;RP1=0, select bank0
  7369  0457  1087               	bcf	7,1	;volatile
  7370  0458  292E               	goto	L7
  7371  0459                     l292:	
  7372                           ;SlaveLiofilizadorVer1.c: 633:                       else
  7373                           
  7374                           
  7375                           ;SlaveLiofilizadorVer1.c: 634:                          PORTCbits.RC1=1;
  7376  0459  1283               	bcf	3,5	;RP0=0, select bank0
  7377  045A  1303               	bcf	3,6	;RP1=0, select bank0
  7378  045B  1487               	bsf	7,1	;volatile
  7379  045C  292E               	goto	L7
  7380  045D                     l7498:	
  7381                           ;SlaveLiofilizadorVer1.c: 636:              Send_To_MB(3);
  7382                           
  7383  045D  1703               	bsf	3,6	;RP1=1, select bank3
  7384  045E  083D               	movf	(_usart_protocol^(0+384)+4),w
  7385  045F  1283               	bcf	3,5	;RP0=0, select bank0
  7386  0460  1303               	bcf	3,6	;RP1=0, select bank0
  7387  0461  00DE               	movwf	??_Decodify_Command
  7388  0462  01DF               	clrf	??_Decodify_Command+1
  7389                           
  7390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7391                           ; Switch size 1, requested type "simple"
  7392                           ; Number of cases is 1, Range of values is 0 to 0
  7393                           ; switch strategies available:
  7394                           ; Name         Instructions Cycles
  7395                           ; simple_byte            4     3 (average)
  7396                           ; direct_byte           11     8 (fixed)
  7397                           ; jumptable            260     6 (fixed)
  7398                           ;	Chosen strategy is simple_byte
  7399  0463  085F               	movf	??_Decodify_Command+1,w
  7400  0464  3A00               	xorlw	0	; case 0
  7401  0465  1903               	skipnz
  7402  0466  2C68               	goto	l7656
  7403  0467  2CB5               	goto	l294
  7404  0468                     l7656:	
  7405                           
  7406                           ; Switch size 1, requested type "simple"
  7407                           ; Number of cases is 25, Range of values is 2 to 43
  7408                           ; switch strategies available:
  7409                           ; Name         Instructions Cycles
  7410                           ; simple_byte           76    39 (average)
  7411                           ; direct_byte          137    11 (fixed)
  7412                           ; jumptable            263     9 (fixed)
  7413                           ;	Chosen strategy is simple_byte
  7414  0468  085E               	movf	??_Decodify_Command,w
  7415  0469  3A02               	xorlw	2	; case 2
  7416  046A  1903               	skipnz
  7417  046B  28D5               	goto	l7314
  7418  046C  3A01               	xorlw	1	; case 3
  7419  046D  1903               	skipnz
  7420  046E  290F               	goto	l7322
  7421  046F  3A0B               	xorlw	11	; case 8
  7422  0470  1903               	skipnz
  7423  0471  291E               	goto	l7326
  7424  0472  3A01               	xorlw	1	; case 9
  7425  0473  1903               	skipnz
  7426  0474  2938               	goto	l7330
  7427  0475  3A03               	xorlw	3	; case 10
  7428  0476  1903               	skipnz
  7429  0477  2950               	goto	l7336
  7430  0478  3A01               	xorlw	1	; case 11
  7431  0479  1903               	skipnz
  7432  047A  2981               	goto	l7346
  7433  047B  3A07               	xorlw	7	; case 12
  7434  047C  1903               	skipnz
  7435  047D  29A1               	goto	l7352
  7436  047E  3A01               	xorlw	1	; case 13
  7437  047F  1903               	skipnz
  7438  0480  29AE               	goto	l7358
  7439  0481  3A1C               	xorlw	28	; case 17
  7440  0482  1903               	skipnz
  7441  0483  29C9               	goto	l7364
  7442  0484  3A03               	xorlw	3	; case 18
  7443  0485  1903               	skipnz
  7444  0486  29E6               	goto	l7370
  7445  0487  3A01               	xorlw	1	; case 19
  7446  0488  1903               	skipnz
  7447  0489  2A0D               	goto	l7376
  7448  048A  3A07               	xorlw	7	; case 20
  7449  048B  1903               	skipnz
  7450  048C  2A3E               	goto	l7384
  7451  048D  3A01               	xorlw	1	; case 21
  7452  048E  1903               	skipnz
  7453  048F  2AC0               	goto	l7404
  7454  0490  3A03               	xorlw	3	; case 22
  7455  0491  1903               	skipnz
  7456  0492  2ADD               	goto	l7410
  7457  0493  3A01               	xorlw	1	; case 23
  7458  0494  1903               	skipnz
  7459  0495  2A9B               	goto	l7398
  7460  0496  3A0F               	xorlw	15	; case 24
  7461  0497  1903               	skipnz
  7462  0498  2A5C               	goto	l7390
  7463  0499  3A01               	xorlw	1	; case 25
  7464  049A  1903               	skipnz
  7465  049B  2B01               	goto	l7414
  7466  049C  3A03               	xorlw	3	; case 26
  7467  049D  1903               	skipnz
  7468  049E  286D               	goto	l7298
  7469  049F  3A04               	xorlw	4	; case 30
  7470  04A0  1903               	skipnz
  7471  04A1  2BD8               	goto	l7456
  7472  04A2  3A01               	xorlw	1	; case 31
  7473  04A3  1903               	skipnz
  7474  04A4  2B12               	goto	l7420
  7475  04A5  3A3F               	xorlw	63	; case 32
  7476  04A6  1903               	skipnz
  7477  04A7  2BF2               	goto	l7462
  7478  04A8  3A01               	xorlw	1	; case 33
  7479  04A9  1903               	skipnz
  7480  04AA  2C03               	goto	l7468
  7481  04AB  3A05               	xorlw	5	; case 36
  7482  04AC  1903               	skipnz
  7483  04AD  2C1F               	goto	l7474
  7484  04AE  3A02               	xorlw	2	; case 38
  7485  04AF  1903               	skipnz
  7486  04B0  2C3F               	goto	l7480
  7487  04B1  3A0D               	xorlw	13	; case 43
  7488  04B2  1903               	skipnz
  7489  04B3  285E               	goto	l7294
  7490  04B4  2CB5               	goto	l294
  7491  04B5                     l294:	
  7492  04B5  0008               	return
  7493  04B6                     __end_of_Decodify_Command:	
  7494                           
  7495                           	psect	text17
  7496  1A4C                     __ptext17:	
  7497 ;; *************** function _strcpy *****************
  7498 ;; Defined at:
  7499 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  to              1    wreg     PTR unsigned char 
  7502 ;;		 -> texto(16), 
  7503 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7504 ;;		 -> STR_2(1), 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7507 ;;		 -> texto(16), 
  7508 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7509 ;;		 -> texto(16), 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      PTR unsigned char 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7514 ;; Tracked objects:
  7515 ;;		On entry : B00/0
  7516 ;;		On exit  : B00/800
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       1       0       0       0
  7520 ;;      Locals:         0       2       0       0       0
  7521 ;;      Temps:          0       1       0       0       0
  7522 ;;      Totals:         0       4       0       0       0
  7523 ;;Total ram usage:        4 bytes
  7524 ;; Hardware stack levels used:    2
  7525 ;; Hardware stack levels required when called:    1
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_Decodify_Command
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           
  7534                           ;psect for function _strcpy
  7535  1A4C                     _strcpy:	
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7539                           ;strcpy@to stored from wreg
  7540  1A4C  00A2               	movwf	strcpy@to
  7541  1A4D  0822               	movf	strcpy@to,w
  7542  1A4E  00A1               	movwf	??_strcpy
  7543  1A4F  0821               	movf	??_strcpy,w
  7544  1A50  00A3               	movwf	strcpy@cp
  7545  1A51                     l6850:	
  7546  1A51  0820               	movf	strcpy@from,w
  7547  1A52  0084               	movwf	4
  7548  1A53  160A  158A  200A  160A  158A  	fcall	stringdir
  7549  1A58  00A1               	movwf	??_strcpy
  7550  1A59  0823               	movf	strcpy@cp,w
  7551  1A5A  0084               	movwf	4
  7552  1A5B  0821               	movf	??_strcpy,w
  7553  1A5C  1783               	bsf	3,7	;select IRP bank2
  7554  1A5D  0080               	movwf	0
  7555  1A5E  0800               	movf	0,w
  7556  1A5F  1903               	btfsc	3,2
  7557  1A60  0008               	return
  7558  1A61  3001               	movlw	1
  7559  1A62  00A1               	movwf	??_strcpy
  7560  1A63  0821               	movf	??_strcpy,w
  7561  1A64  07A3               	addwf	strcpy@cp,f
  7562  1A65  3001               	movlw	1
  7563  1A66  00A1               	movwf	??_strcpy
  7564  1A67  0821               	movf	??_strcpy,w
  7565  1A68  07A0               	addwf	strcpy@from,f
  7566  1A69  2A51               	goto	l6850
  7567  1A6A                     __end_of_strcpy:	
  7568                           
  7569                           	psect	text18
  7570  1BF0                     __ptext18:	
  7571 ;; *************** function _strcat *****************
  7572 ;; Defined at:
  7573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  to              1    wreg     PTR unsigned char 
  7576 ;;		 -> texto(16), 
  7577 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7578 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7579 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7582 ;;		 -> texto(16), 
  7583 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7584 ;;		 -> texto(16), 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      PTR unsigned char 
  7587 ;; Registers used:
  7588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7589 ;; Tracked objects:
  7590 ;;		On entry : B00/800
  7591 ;;		On exit  : B00/800
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7594 ;;      Params:         0       2       0       0       0
  7595 ;;      Locals:         0       2       0       0       0
  7596 ;;      Temps:          0       1       0       0       0
  7597 ;;      Totals:         0       5       0       0       0
  7598 ;;Total ram usage:        5 bytes
  7599 ;; Hardware stack levels used:    2
  7600 ;; Hardware stack levels required when called:    1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_Decodify_Command
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function _strcat
  7610  1BF0                     _strcat:	
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7614                           ;strcat@to stored from wreg
  7615  1BF0  00A4               	movwf	strcat@to
  7616  1BF1  0824               	movf	strcat@to,w
  7617  1BF2  00A2               	movwf	??_strcat
  7618  1BF3  0822               	movf	??_strcat,w
  7619  1BF4  00A3               	movwf	strcat@cp
  7620  1BF5                     l6856:	
  7621  1BF5  0823               	movf	strcat@cp,w
  7622  1BF6  0084               	movwf	4
  7623  1BF7  0800               	movf	0,w
  7624  1BF8  1903               	btfsc	3,2
  7625  1BF9  2C09               	goto	l6862
  7626  1BFA  3001               	movlw	1
  7627  1BFB  00A2               	movwf	??_strcat
  7628  1BFC  0822               	movf	??_strcat,w
  7629  1BFD  07A3               	addwf	strcat@cp,f
  7630  1BFE  2BF5               	goto	l6856
  7631  1BFF                     l6858:	
  7632  1BFF  3001               	movlw	1
  7633  1C00  00A2               	movwf	??_strcat
  7634  1C01  0822               	movf	??_strcat,w
  7635  1C02  07A3               	addwf	strcat@cp,f
  7636  1C03  3001               	movlw	1
  7637  1C04  07A0               	addwf	strcat@from,f
  7638  1C05  1803               	skipnc
  7639  1C06  0AA1               	incf	strcat@from+1,f
  7640  1C07  3000               	movlw	0
  7641  1C08  07A1               	addwf	strcat@from+1,f
  7642  1C09                     l6862:	
  7643  1C09  0821               	movf	strcat@from+1,w
  7644  1C0A  00FF               	movwf	127
  7645  1C0B  0820               	movf	strcat@from,w
  7646  1C0C  0084               	movwf	4
  7647  1C0D  160A  158A  2000  160A  158A  	fcall	stringtab
  7648  1C12  00A2               	movwf	??_strcat
  7649  1C13  0823               	movf	strcat@cp,w
  7650  1C14  0084               	movwf	4
  7651  1C15  0822               	movf	??_strcat,w
  7652  1C16  1783               	bsf	3,7	;select IRP bank2
  7653  1C17  0080               	movwf	0
  7654  1C18  0800               	movf	0,w
  7655  1C19  1903               	btfsc	3,2
  7656  1C1A  0008               	return
  7657  1C1B  2BFF               	goto	l6858
  7658  1C1C                     __end_of_strcat:	
  7659                           
  7660                           	psect	text19
  7661  1AC8                     __ptext19:	
  7662 ;; *************** function _itoa *****************
  7663 ;; Defined at:
  7664 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  buf             1    wreg     PTR unsigned char 
  7667 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7668 ;;  val             2   17[BANK0 ] int 
  7669 ;;  base            2   19[BANK0 ] int 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7672 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7673 ;;  cp              1    0        PTR unsigned char 
  7674 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      PTR unsigned char 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 300/0
  7681 ;;		On exit  : B00/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7684 ;;      Params:         0       4       0       0       0
  7685 ;;      Locals:         0       2       0       0       0
  7686 ;;      Temps:          0       1       0       0       0
  7687 ;;      Totals:         0       7       0       0       0
  7688 ;;Total ram usage:        7 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    3
  7691 ;; This function calls:
  7692 ;;		_utoa
  7693 ;; This function is called by:
  7694 ;;		_Decodify_Command
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           
  7699                           ;psect for function _itoa
  7700  1AC8                     _itoa:	
  7701                           
  7702                           ;incstack = 0
  7703                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7704                           ;itoa@buf stored from wreg
  7705  1AC8  00B7               	movwf	itoa@buf
  7706  1AC9  1FB2               	btfss	itoa@val+1,7
  7707  1ACA  2ADB               	goto	l6842
  7708  1ACB  302D               	movlw	45
  7709  1ACC  00B5               	movwf	??_itoa
  7710  1ACD  0837               	movf	itoa@buf,w
  7711  1ACE  0084               	movwf	4
  7712  1ACF  0835               	movf	??_itoa,w
  7713  1AD0  1383               	bcf	3,7	;select IRP bank0
  7714  1AD1  0080               	movwf	0
  7715  1AD2  3001               	movlw	1
  7716  1AD3  00B5               	movwf	??_itoa
  7717  1AD4  0835               	movf	??_itoa,w
  7718  1AD5  07B7               	addwf	itoa@buf,f
  7719  1AD6  09B1               	comf	itoa@val,f
  7720  1AD7  09B2               	comf	itoa@val+1,f
  7721  1AD8  0AB1               	incf	itoa@val,f
  7722  1AD9  1903               	skipnz
  7723  1ADA  0AB2               	incf	itoa@val+1,f
  7724  1ADB                     l6842:	
  7725  1ADB  0832               	movf	itoa@val+1,w
  7726  1ADC  00A9               	movwf	utoa@val+1
  7727  1ADD  0831               	movf	itoa@val,w
  7728  1ADE  00A8               	movwf	utoa@val
  7729  1ADF  0834               	movf	itoa@base+1,w
  7730  1AE0  00AB               	movwf	utoa@base+1
  7731  1AE1  0833               	movf	itoa@base,w
  7732  1AE2  00AA               	movwf	utoa@base
  7733  1AE3  0837               	movf	itoa@buf,w
  7734  1AE4  160A  118A  206A   	fcall	_utoa
  7735  1AE7  0008               	return
  7736  1AE8                     __end_of_itoa:	
  7737                           
  7738                           	psect	text20
  7739  106A                     __ptext20:	
  7740 ;; *************** function _utoa *****************
  7741 ;; Defined at:
  7742 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  buf             1    wreg     PTR unsigned char 
  7745 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7746 ;;  val             2    8[BANK0 ] unsigned int 
  7747 ;;  base            2   10[BANK0 ] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7750 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7751 ;;  v               2   13[BANK0 ] unsigned int 
  7752 ;;  c               1   15[BANK0 ] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      PTR unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 300/0
  7759 ;;		On exit  : B00/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7762 ;;      Params:         0       4       0       0       0
  7763 ;;      Locals:         0       4       0       0       0
  7764 ;;      Temps:          0       1       0       0       0
  7765 ;;      Totals:         0       9       0       0       0
  7766 ;;Total ram usage:        9 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    2
  7769 ;; This function calls:
  7770 ;;		___lwdiv
  7771 ;;		___lwmod
  7772 ;; This function is called by:
  7773 ;;		_itoa
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function _utoa
  7779  106A                     _utoa:	
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7783                           ;utoa@buf stored from wreg
  7784  106A  00B0               	movwf	utoa@buf
  7785  106B  0829               	movf	utoa@val+1,w
  7786  106C  00AE               	movwf	utoa@v+1
  7787  106D  0828               	movf	utoa@val,w
  7788  106E  00AD               	movwf	utoa@v
  7789  106F                     l6490:	
  7790  106F  082B               	movf	utoa@base+1,w
  7791  1070  00A1               	movwf	___lwdiv@divisor+1
  7792  1071  082A               	movf	utoa@base,w
  7793  1072  00A0               	movwf	___lwdiv@divisor
  7794  1073  082E               	movf	utoa@v+1,w
  7795  1074  00A3               	movwf	___lwdiv@dividend+1
  7796  1075  082D               	movf	utoa@v,w
  7797  1076  00A2               	movwf	___lwdiv@dividend
  7798  1077  160A  158A  25F4  160A  118A  	fcall	___lwdiv
  7799  107C  0821               	movf	?___lwdiv+1,w
  7800  107D  00AE               	movwf	utoa@v+1
  7801  107E  0820               	movf	?___lwdiv,w
  7802  107F  00AD               	movwf	utoa@v
  7803  1080  3001               	movlw	1
  7804  1081  00AC               	movwf	??_utoa
  7805  1082  082C               	movf	??_utoa,w
  7806  1083  07B0               	addwf	utoa@buf,f
  7807  1084  082D               	movf	utoa@v,w
  7808  1085  042E               	iorwf	utoa@v+1,w
  7809  1086  1D03               	btfss	3,2
  7810  1087  286F               	goto	l6490
  7811  1088  0830               	movf	utoa@buf,w
  7812  1089  0084               	movwf	4
  7813  108A  1383               	bcf	3,7	;select IRP bank0
  7814  108B  0180               	clrf	0
  7815  108C  3001               	movlw	1
  7816  108D  02B0               	subwf	utoa@buf,f
  7817  108E                     l6500:	
  7818  108E  082B               	movf	utoa@base+1,w
  7819  108F  00A1               	movwf	___lwmod@divisor+1
  7820  1090  082A               	movf	utoa@base,w
  7821  1091  00A0               	movwf	___lwmod@divisor
  7822  1092  0829               	movf	utoa@val+1,w
  7823  1093  00A3               	movwf	___lwmod@dividend+1
  7824  1094  0828               	movf	utoa@val,w
  7825  1095  00A2               	movwf	___lwmod@dividend
  7826  1096  160A  158A  24AC  160A  118A  	fcall	___lwmod
  7827  109B  0820               	movf	?___lwmod,w
  7828  109C  00AC               	movwf	??_utoa
  7829  109D  082C               	movf	??_utoa,w
  7830  109E  00AF               	movwf	utoa@c
  7831  109F  082B               	movf	utoa@base+1,w
  7832  10A0  00A1               	movwf	___lwdiv@divisor+1
  7833  10A1  082A               	movf	utoa@base,w
  7834  10A2  00A0               	movwf	___lwdiv@divisor
  7835  10A3  0829               	movf	utoa@val+1,w
  7836  10A4  00A3               	movwf	___lwdiv@dividend+1
  7837  10A5  0828               	movf	utoa@val,w
  7838  10A6  00A2               	movwf	___lwdiv@dividend
  7839  10A7  160A  158A  25F4  160A  118A  	fcall	___lwdiv
  7840  10AC  0821               	movf	?___lwdiv+1,w
  7841  10AD  00A9               	movwf	utoa@val+1
  7842  10AE  0820               	movf	?___lwdiv,w
  7843  10AF  00A8               	movwf	utoa@val
  7844  10B0  300A               	movlw	10
  7845  10B1  022F               	subwf	utoa@c,w
  7846  10B2  1C03               	skipc
  7847  10B3  28B8               	goto	l1407
  7848  10B4  3007               	movlw	7
  7849  10B5  00AC               	movwf	??_utoa
  7850  10B6  082C               	movf	??_utoa,w
  7851  10B7  07AF               	addwf	utoa@c,f
  7852  10B8                     l1407:	
  7853  10B8  3030               	movlw	48
  7854  10B9  00AC               	movwf	??_utoa
  7855  10BA  082C               	movf	??_utoa,w
  7856  10BB  07AF               	addwf	utoa@c,f
  7857  10BC  082F               	movf	utoa@c,w
  7858  10BD  00AC               	movwf	??_utoa
  7859  10BE  0830               	movf	utoa@buf,w
  7860  10BF  0084               	movwf	4
  7861  10C0  082C               	movf	??_utoa,w
  7862  10C1  1383               	bcf	3,7	;select IRP bank0
  7863  10C2  0080               	movwf	0
  7864  10C3  3001               	movlw	1
  7865  10C4  02B0               	subwf	utoa@buf,f
  7866  10C5  0828               	movf	utoa@val,w
  7867  10C6  0429               	iorwf	utoa@val+1,w
  7868  10C7  1D03               	btfss	3,2
  7869  10C8  288E               	goto	l6500
  7870                           
  7871                           ;	Return value of _utoa is never used
  7872  10C9  3001               	movlw	1
  7873  10CA  00AC               	movwf	??_utoa
  7874  10CB  082C               	movf	??_utoa,w
  7875  10CC  07B0               	addwf	utoa@buf,f
  7876  10CD  0008               	return
  7877  10CE                     __end_of_utoa:	
  7878                           
  7879                           	psect	text21
  7880  1CAC                     __ptext21:	
  7881 ;; *************** function ___lwmod *****************
  7882 ;; Defined at:
  7883 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  divisor         2    0[BANK0 ] unsigned int 
  7886 ;;  dividend        2    2[BANK0 ] unsigned int 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  counter         1    5[BANK0 ] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  2    0[BANK0 ] unsigned int 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 300/0
  7895 ;;		On exit  : 300/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7898 ;;      Params:         0       4       0       0       0
  7899 ;;      Locals:         0       1       0       0       0
  7900 ;;      Temps:          0       1       0       0       0
  7901 ;;      Totals:         0       6       0       0       0
  7902 ;;Total ram usage:        6 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    1
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_utoa
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           
  7913                           ;psect for function ___lwmod
  7914  1CAC                     ___lwmod:	
  7915                           
  7916                           ;incstack = 0
  7917                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7918  1CAC  0820               	movf	___lwmod@divisor,w
  7919  1CAD  0421               	iorwf	___lwmod@divisor+1,w
  7920  1CAE  1903               	btfsc	3,2
  7921  1CAF  2CD9               	goto	l5856
  7922  1CB0  01A5               	clrf	___lwmod@counter
  7923  1CB1  0AA5               	incf	___lwmod@counter,f
  7924  1CB2                     l5846:	
  7925  1CB2  1BA1               	btfsc	___lwmod@divisor+1,7
  7926  1CB3  2CC0               	goto	l5848
  7927  1CB4  3001               	movlw	1
  7928  1CB5                     u5615:	
  7929  1CB5  1003               	clrc
  7930  1CB6  0DA0               	rlf	___lwmod@divisor,f
  7931  1CB7  0DA1               	rlf	___lwmod@divisor+1,f
  7932  1CB8  3EFF               	addlw	-1
  7933  1CB9  1D03               	skipz
  7934  1CBA  2CB5               	goto	u5615
  7935  1CBB  3001               	movlw	1
  7936  1CBC  00A4               	movwf	??___lwmod
  7937  1CBD  0824               	movf	??___lwmod,w
  7938  1CBE  07A5               	addwf	___lwmod@counter,f
  7939  1CBF  2CB2               	goto	l5846
  7940  1CC0                     l5848:	
  7941  1CC0  0821               	movf	___lwmod@divisor+1,w
  7942  1CC1  0223               	subwf	___lwmod@dividend+1,w
  7943  1CC2  1D03               	skipz
  7944  1CC3  2CC6               	goto	u5635
  7945  1CC4  0820               	movf	___lwmod@divisor,w
  7946  1CC5  0222               	subwf	___lwmod@dividend,w
  7947  1CC6                     u5635:	
  7948  1CC6  1C03               	skipc
  7949  1CC7  2CCE               	goto	l5852
  7950  1CC8  0820               	movf	___lwmod@divisor,w
  7951  1CC9  02A2               	subwf	___lwmod@dividend,f
  7952  1CCA  0821               	movf	___lwmod@divisor+1,w
  7953  1CCB  1C03               	skipc
  7954  1CCC  03A3               	decf	___lwmod@dividend+1,f
  7955  1CCD  02A3               	subwf	___lwmod@dividend+1,f
  7956  1CCE                     l5852:	
  7957  1CCE  3001               	movlw	1
  7958  1CCF                     u5645:	
  7959  1CCF  1003               	clrc
  7960  1CD0  0CA1               	rrf	___lwmod@divisor+1,f
  7961  1CD1  0CA0               	rrf	___lwmod@divisor,f
  7962  1CD2  3EFF               	addlw	-1
  7963  1CD3  1D03               	skipz
  7964  1CD4  2CCF               	goto	u5645
  7965  1CD5  3001               	movlw	1
  7966  1CD6  02A5               	subwf	___lwmod@counter,f
  7967  1CD7  1D03               	btfss	3,2
  7968  1CD8  2CC0               	goto	l5848
  7969  1CD9                     l5856:	
  7970  1CD9  0823               	movf	___lwmod@dividend+1,w
  7971  1CDA  00A1               	movwf	?___lwmod+1
  7972  1CDB  0822               	movf	___lwmod@dividend,w
  7973  1CDC  00A0               	movwf	?___lwmod
  7974  1CDD  0008               	return
  7975  1CDE                     __end_of___lwmod:	
  7976                           
  7977                           	psect	text22
  7978  1F45                     __ptext22:	
  7979 ;; *************** function _USART_to_Protocol *****************
  7980 ;; Defined at:
  7981 ;;		line 77 in file "usart.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  usart_protoc    1    wreg     PTR struct .
  7984 ;;		 -> usart_protocol(16), 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7987 ;;		 -> usart_protocol(16), 
  7988 ;;  i               2    2[BANK0 ] int 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 300/100
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7998 ;;      Params:         0       0       0       0       0
  7999 ;;      Locals:         0       3       0       0       0
  8000 ;;      Temps:          0       2       0       0       0
  8001 ;;      Totals:         0       5       0       0       0
  8002 ;;Total ram usage:        5 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    1
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_Decodify_Command
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           
  8013                           ;psect for function _USART_to_Protocol
  8014  1F45                     _USART_to_Protocol:	
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  8018                           ;USART_to_Protocol@usart_protocol stored from wreg
  8019  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  8020  1F46  00A4               	movwf	USART_to_Protocol@usart_protocol
  8021                           
  8022                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  8023  1F47  0824               	movf	USART_to_Protocol@usart_protocol,w
  8024  1F48  0084               	movwf	4
  8025  1F49  1683               	bsf	3,5	;RP0=1, select bank3
  8026  1F4A  1703               	bsf	3,6	;RP1=1, select bank3
  8027  1F4B  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8028  1F4C  1783               	bsf	3,7	;select IRP bank2
  8029  1F4D  0080               	movwf	0
  8030  1F4E  0A84               	incf	4,f
  8031  1F4F  0810               	movf	_usart_buffer^(0+384),w	;volatile
  8032  1F50  0080               	movwf	0
  8033                           
  8034                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8035  1F51  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8036  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  8037  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  8038  1F54  00A0               	movwf	??_USART_to_Protocol
  8039  1F55  0824               	movf	USART_to_Protocol@usart_protocol,w
  8040  1F56  3E02               	addlw	2
  8041  1F57  0084               	movwf	4
  8042  1F58  0820               	movf	??_USART_to_Protocol,w
  8043  1F59  0080               	movwf	0
  8044                           
  8045                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8046  1F5A  1683               	bsf	3,5	;RP0=1, select bank3
  8047  1F5B  1703               	bsf	3,6	;RP1=1, select bank3
  8048  1F5C  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8049  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  8050  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  8051  1F5F  00A0               	movwf	??_USART_to_Protocol
  8052  1F60  0824               	movf	USART_to_Protocol@usart_protocol,w
  8053  1F61  3E03               	addlw	3
  8054  1F62  0084               	movwf	4
  8055  1F63  0820               	movf	??_USART_to_Protocol,w
  8056  1F64  0080               	movwf	0
  8057                           
  8058                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8059  1F65  1683               	bsf	3,5	;RP0=1, select bank3
  8060  1F66  1703               	bsf	3,6	;RP1=1, select bank3
  8061  1F67  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8062  1F68  1283               	bcf	3,5	;RP0=0, select bank0
  8063  1F69  1303               	bcf	3,6	;RP1=0, select bank0
  8064  1F6A  00A0               	movwf	??_USART_to_Protocol
  8065  1F6B  0824               	movf	USART_to_Protocol@usart_protocol,w
  8066  1F6C  3E04               	addlw	4
  8067  1F6D  0084               	movwf	4
  8068  1F6E  0820               	movf	??_USART_to_Protocol,w
  8069  1F6F  0080               	movwf	0
  8070                           
  8071                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8072  1F70  1683               	bsf	3,5	;RP0=1, select bank3
  8073  1F71  1703               	bsf	3,6	;RP1=1, select bank3
  8074  1F72  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8075  1F73  1283               	bcf	3,5	;RP0=0, select bank0
  8076  1F74  1303               	bcf	3,6	;RP1=0, select bank0
  8077  1F75  00A0               	movwf	??_USART_to_Protocol
  8078  1F76  0824               	movf	USART_to_Protocol@usart_protocol,w
  8079  1F77  3E05               	addlw	5
  8080  1F78  0084               	movwf	4
  8081  1F79  0820               	movf	??_USART_to_Protocol,w
  8082  1F7A  0080               	movwf	0
  8083                           
  8084                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8085  1F7B  01A2               	clrf	USART_to_Protocol@i
  8086  1F7C  01A3               	clrf	USART_to_Protocol@i+1
  8087  1F7D                     l6578:	
  8088  1F7D  0824               	movf	USART_to_Protocol@usart_protocol,w
  8089  1F7E  3E05               	addlw	5
  8090  1F7F  0084               	movwf	4
  8091  1F80  0823               	movf	USART_to_Protocol@i+1,w
  8092  1F81  3A80               	xorlw	128
  8093  1F82  00A0               	movwf	??_USART_to_Protocol
  8094  1F83  3080               	movlw	128
  8095  1F84  0220               	subwf	??_USART_to_Protocol,w
  8096  1F85  1D03               	skipz
  8097  1F86  2F89               	goto	u6965
  8098  1F87  0800               	movf	0,w
  8099  1F88  0222               	subwf	USART_to_Protocol@i,w
  8100  1F89                     u6965:	
  8101  1F89  1803               	btfsc	3,0
  8102  1F8A  0008               	return
  8103                           
  8104                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8105  1F8B  1283               	bcf	3,5	;RP0=0, select bank0
  8106  1F8C  1303               	bcf	3,6	;RP1=0, select bank0
  8107  1F8D  0822               	movf	USART_to_Protocol@i,w
  8108  1F8E  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8109  1F8F  0084               	movwf	4
  8110  1F90  1783               	bsf	3,7	;select IRP bank3
  8111  1F91  0800               	movf	0,w
  8112  1F92  00A0               	movwf	??_USART_to_Protocol
  8113  1F93  0822               	movf	USART_to_Protocol@i,w
  8114  1F94  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8115  1F95  00A1               	movwf	??_USART_to_Protocol+1
  8116  1F96  0821               	movf	??_USART_to_Protocol+1,w
  8117  1F97  3E06               	addlw	6
  8118  1F98  0084               	movwf	4
  8119  1F99  0820               	movf	??_USART_to_Protocol,w
  8120  1F9A  0080               	movwf	0
  8121  1F9B  3001               	movlw	1
  8122  1F9C  07A2               	addwf	USART_to_Protocol@i,f
  8123  1F9D  1803               	skipnc
  8124  1F9E  0AA3               	incf	USART_to_Protocol@i+1,f
  8125  1F9F  3000               	movlw	0
  8126  1FA0  07A3               	addwf	USART_to_Protocol@i+1,f
  8127  1FA1  2F7D               	goto	l6578
  8128  1FA2                     __end_of_USART_to_Protocol:	
  8129                           
  8130                           	psect	text23
  8131  1B4F                     __ptext23:	
  8132 ;; *************** function _USART_put_buffer *****************
  8133 ;; Defined at:
  8134 ;;		line 99 in file "usart.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  vetor           1    wreg     PTR unsigned char 
  8137 ;;		 -> buffer(64), 
  8138 ;;  size            2    1[BANK0 ] unsigned int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8141 ;;		 -> buffer(64), 
  8142 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8143 ;;		 -> USART_put_buffer@vetor(1), 
  8144 ;;  loop            1    6[BANK0 ] unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 300/0
  8151 ;;		On exit  : 300/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8154 ;;      Params:         0       2       0       0       0
  8155 ;;      Locals:         0       3       0       0       0
  8156 ;;      Temps:          0       2       0       0       0
  8157 ;;      Totals:         0       7       0       0       0
  8158 ;;Total ram usage:        7 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    2
  8161 ;; This function calls:
  8162 ;;		_USART_putc
  8163 ;; This function is called by:
  8164 ;;		_Decodify_Command
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function _USART_put_buffer
  8170  1B4F                     _USART_put_buffer:	
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8174                           ;USART_put_buffer@vetor stored from wreg
  8175  1B4F  00A5               	movwf	USART_put_buffer@vetor
  8176                           
  8177                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8178  1B50  01A6               	clrf	USART_put_buffer@loop
  8179                           
  8180                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8181  1B51  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8182  1B52  00A3               	movwf	??_USART_put_buffer
  8183  1B53  0823               	movf	??_USART_put_buffer,w
  8184  1B54  00A7               	movwf	USART_put_buffer@ptr
  8185  1B55                     l6634:	
  8186                           ;usart.c: 105:     while(loop<size)
  8187                           
  8188                           
  8189                           ;usart.c: 105:     while(loop<size)
  8190  1B55  0826               	movf	USART_put_buffer@loop,w
  8191  1B56  00A3               	movwf	??_USART_put_buffer
  8192  1B57  01A4               	clrf	??_USART_put_buffer+1
  8193  1B58  0822               	movf	USART_put_buffer@size+1,w
  8194  1B59  0224               	subwf	??_USART_put_buffer+1,w
  8195  1B5A  1D03               	skipz
  8196  1B5B  2B5E               	goto	u6995
  8197  1B5C  0821               	movf	USART_put_buffer@size,w
  8198  1B5D  0223               	subwf	??_USART_put_buffer,w
  8199  1B5E                     u6995:	
  8200  1B5E  1803               	btfsc	3,0
  8201  1B5F  0008               	return
  8202                           
  8203                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8204  1B60  0827               	movf	USART_put_buffer@ptr,w
  8205  1B61  0084               	movwf	4
  8206  1B62  1383               	bcf	3,7	;select IRP bank0
  8207  1B63  0800               	movf	0,w
  8208  1B64  160A  158A  217B  160A  158A  	fcall	_USART_putc
  8209                           
  8210                           ;usart.c: 108:         ptr++;
  8211  1B69  3001               	movlw	1
  8212  1B6A  1283               	bcf	3,5	;RP0=0, select bank0
  8213  1B6B  00A3               	movwf	??_USART_put_buffer
  8214  1B6C  0823               	movf	??_USART_put_buffer,w
  8215  1B6D  07A7               	addwf	USART_put_buffer@ptr,f
  8216                           
  8217                           ;usart.c: 109:         loop++;
  8218  1B6E  3001               	movlw	1
  8219  1B6F  00A3               	movwf	??_USART_put_buffer
  8220  1B70  0823               	movf	??_USART_put_buffer,w
  8221  1B71  07A6               	addwf	USART_put_buffer@loop,f
  8222  1B72  2B55               	goto	l6634
  8223  1B73                     __end_of_USART_put_buffer:	
  8224                           
  8225                           	psect	text24
  8226  0800                     __ptext24:	
  8227 ;; *************** function _Send_To_MB *****************
  8228 ;; Defined at:
  8229 ;;		line 646 in file "SlaveLiofilizadorVer1.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  size            1    wreg     unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  size            1    1[BANK0 ] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 300/100
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8243 ;;      Params:         0       0       0       0       0
  8244 ;;      Locals:         0       1       0       0       0
  8245 ;;      Temps:          0       0       0       0       0
  8246 ;;      Totals:         0       1       0       0       0
  8247 ;;Total ram usage:        1 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    2
  8250 ;; This function calls:
  8251 ;;		_USART_putc
  8252 ;; This function is called by:
  8253 ;;		_Decodify_Command
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _Send_To_MB
  8259  0800                     _Send_To_MB:	
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8263                           ;Send_To_MB@size stored from wreg
  8264  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0802  00A1               	movwf	Send_To_MB@size
  8267                           
  8268                           ;SlaveLiofilizadorVer1.c: 648:      USART_putc(0xAA);
  8269  0803  30AA               	movlw	170
  8270  0804  160A  158A  217B  120A  158A  	fcall	_USART_putc
  8271                           
  8272                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xBB);
  8273  0809  30BB               	movlw	187
  8274  080A  160A  158A  217B  120A  158A  	fcall	_USART_putc
  8275                           
  8276                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(Board_Number);
  8277  080F  0865               	movf	_Board_Number^(0+128),w
  8278  0810  160A  158A  217B  120A  158A  	fcall	_USART_putc
  8279                           
  8280                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(0x00);
  8281  0815  3000               	movlw	0
  8282  0816  160A  158A  217B  120A  158A  	fcall	_USART_putc
  8283                           
  8284                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(usart_protocol.command);
  8285  081B  1703               	bsf	3,6	;RP1=1, select bank3
  8286  081C  083D               	movf	(_usart_protocol^(0+384)+4),w
  8287  081D  160A  158A  217B  120A  158A  	fcall	_USART_putc
  8288                           
  8289                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(size);
  8290  0822  1283               	bcf	3,5	;RP0=0, select bank0
  8291  0823  0821               	movf	Send_To_MB@size,w
  8292  0824  160A  158A  217B   	fcall	_USART_putc
  8293  0827  0008               	return
  8294  0828                     __end_of_Send_To_MB:	
  8295                           
  8296                           	psect	text25
  8297  1968                     __ptext25:	
  8298 ;; *************** function _Send_Reply_OK *****************
  8299 ;; Defined at:
  8300 ;;		line 657 in file "SlaveLiofilizadorVer1.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;		None
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;		None
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 300/100
  8311 ;;		On exit  : 300/100
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8314 ;;      Params:         0       0       0       0       0
  8315 ;;      Locals:         0       0       0       0       0
  8316 ;;      Temps:          0       0       0       0       0
  8317 ;;      Totals:         0       0       0       0       0
  8318 ;;Total ram usage:        0 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    3
  8321 ;; This function calls:
  8322 ;;		_USART_put_string
  8323 ;; This function is called by:
  8324 ;;		_Decodify_Command
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function _Send_Reply_OK
  8330  1968                     _Send_Reply_OK:	
  8331                           
  8332                           ;SlaveLiofilizadorVer1.c: 658:      USART_put_string("OK");
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8336  1968  3048               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8337  1969  1283               	bcf	3,5	;RP0=0, select bank0
  8338  196A  00A1               	movwf	USART_put_string@vetor
  8339  196B  3080               	movlw	128
  8340  196C  00A2               	movwf	USART_put_string@vetor+1
  8341  196D  160A  158A  24DE   	fcall	_USART_put_string
  8342  1970  0008               	return
  8343  1971                     __end_of_Send_Reply_OK:	
  8344                           
  8345                           	psect	text26
  8346  1CDE                     __ptext26:	
  8347 ;; *************** function _USART_put_string *****************
  8348 ;; Defined at:
  8349 ;;		line 168 in file "usart.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8352 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8355 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 300/0
  8362 ;;		On exit  : 300/100
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8365 ;;      Params:         0       2       0       0       0
  8366 ;;      Locals:         0       2       0       0       0
  8367 ;;      Temps:          0       0       0       0       0
  8368 ;;      Totals:         0       4       0       0       0
  8369 ;;Total ram usage:        4 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    2
  8372 ;; This function calls:
  8373 ;;		_USART_putc
  8374 ;; This function is called by:
  8375 ;;		_Decodify_Command
  8376 ;;		_Send_Reply_OK
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _USART_put_string
  8382  1CDE                     _USART_put_string:	
  8383                           
  8384                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8385                           
  8386                           ;incstack = 0
  8387                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8388  1CDE  0821               	movf	USART_put_string@vetor,w
  8389  1CDF  00A3               	movwf	USART_put_string@ptr
  8390  1CE0  0822               	movf	USART_put_string@vetor+1,w
  8391  1CE1  00A4               	movwf	USART_put_string@ptr+1
  8392  1CE2                     l5880:	
  8393                           ;usart.c: 172:     while(*(ptr)){
  8394                           
  8395                           
  8396                           ;usart.c: 172:     while(*(ptr)){
  8397  1CE2  0824               	movf	USART_put_string@ptr+1,w
  8398  1CE3  00FF               	movwf	127
  8399  1CE4  0823               	movf	USART_put_string@ptr,w
  8400  1CE5  0084               	movwf	4
  8401  1CE6  160A  158A  2000  160A  158A  	fcall	stringtab
  8402  1CEB  3A00               	xorlw	0
  8403  1CEC  1903               	btfsc	3,2
  8404  1CED  2D04               	goto	l5882
  8405                           
  8406                           ;usart.c: 173:         USART_putc(*(ptr));
  8407  1CEE  0824               	movf	USART_put_string@ptr+1,w
  8408  1CEF  00FF               	movwf	127
  8409  1CF0  0823               	movf	USART_put_string@ptr,w
  8410  1CF1  0084               	movwf	4
  8411  1CF2  160A  158A  2000  160A  158A  	fcall	stringtab
  8412  1CF7  160A  158A  217B  160A  158A  	fcall	_USART_putc
  8413                           
  8414                           ;usart.c: 174:         ptr++;
  8415  1CFC  3001               	movlw	1
  8416  1CFD  1283               	bcf	3,5	;RP0=0, select bank0
  8417  1CFE  07A3               	addwf	USART_put_string@ptr,f
  8418  1CFF  1803               	skipnc
  8419  1D00  0AA4               	incf	USART_put_string@ptr+1,f
  8420  1D01  3000               	movlw	0
  8421  1D02  07A4               	addwf	USART_put_string@ptr+1,f
  8422  1D03  2CE2               	goto	l5880
  8423  1D04                     l5882:	
  8424                           
  8425                           ;usart.c: 176:     USART_putc(*(ptr));
  8426  1D04  0824               	movf	USART_put_string@ptr+1,w
  8427  1D05  00FF               	movwf	127
  8428  1D06  0823               	movf	USART_put_string@ptr,w
  8429  1D07  0084               	movwf	4
  8430  1D08  160A  158A  2000  160A  158A  	fcall	stringtab
  8431  1D0D  160A  158A  217B   	fcall	_USART_putc
  8432  1D10  0008               	return
  8433  1D11                     __end_of_USART_put_string:	
  8434                           
  8435                           	psect	text27
  8436  1006                     __ptext27:	
  8437 ;; *************** function _Save_Log *****************
  8438 ;; Defined at:
  8439 ;;		line 1013 in file "SlaveLiofilizadorVer1.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  1    wreg      void 
  8446 ;; Registers used:
  8447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8448 ;; Tracked objects:
  8449 ;;		On entry : 300/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8453 ;;      Params:         0       4       0       0       0
  8454 ;;      Locals:         0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0
  8456 ;;      Totals:         0       4       0       0       0
  8457 ;;Total ram usage:        4 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    5
  8460 ;; This function calls:
  8461 ;;		_EEPROM_24C1025_Write_Int
  8462 ;;		___flmul
  8463 ;;		___fltol
  8464 ;; This function is called by:
  8465 ;;		_Decodify_Command
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function _Save_Log
  8471  1006                     _Save_Log:	
  8472                           
  8473                           ;SlaveLiofilizadorVer1.c: 1014:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tensao1
      +                          *10);
  8474                           
  8475                           ;incstack = 0
  8476                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8477  1006  085B               	movf	Save_Log@add_datalog+3,w
  8478  1007  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8479  1008  085A               	movf	Save_Log@add_datalog+2,w
  8480  1009  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8481  100A  0859               	movf	Save_Log@add_datalog+1,w
  8482  100B  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8483  100C  0858               	movf	Save_Log@add_datalog,w
  8484  100D  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8485  100E  1683               	bsf	3,5	;RP0=1, select bank1
  8486  100F  0852               	movf	(_Tensao1+3)^(0+128),w
  8487  1010  1283               	bcf	3,5	;RP0=0, select bank0
  8488  1011  00B0               	movwf	___flmul@a+3
  8489  1012  1683               	bsf	3,5	;RP0=1, select bank1
  8490  1013  0851               	movf	(_Tensao1+2)^(0+128),w
  8491  1014  1283               	bcf	3,5	;RP0=0, select bank0
  8492  1015  00AF               	movwf	___flmul@a+2
  8493  1016  1683               	bsf	3,5	;RP0=1, select bank1
  8494  1017  0850               	movf	(_Tensao1+1)^(0+128),w
  8495  1018  1283               	bcf	3,5	;RP0=0, select bank0
  8496  1019  00AE               	movwf	___flmul@a+1
  8497  101A  1683               	bsf	3,5	;RP0=1, select bank1
  8498  101B  084F               	movf	_Tensao1^(0+128),w
  8499  101C  1283               	bcf	3,5	;RP0=0, select bank0
  8500  101D  00AD               	movwf	___flmul@a
  8501  101E  3041               	movlw	65
  8502  101F  00AC               	movwf	___flmul@b+3
  8503  1020  3020               	movlw	32
  8504  1021  00AB               	movwf	___flmul@b+2
  8505  1022  3000               	movlw	0
  8506  1023  00AA               	movwf	___flmul@b+1
  8507  1024  3000               	movlw	0
  8508  1025  00A9               	movwf	___flmul@b
  8509  1026  120A  118A  24B6  160A  118A  	fcall	___flmul
  8510  102B  082C               	movf	?___flmul+3,w
  8511  102C  00C6               	movwf	___fltol@f1+3
  8512  102D  082B               	movf	?___flmul+2,w
  8513  102E  00C5               	movwf	___fltol@f1+2
  8514  102F  082A               	movf	?___flmul+1,w
  8515  1030  00C4               	movwf	___fltol@f1+1
  8516  1031  0829               	movf	?___flmul,w
  8517  1032  00C3               	movwf	___fltol@f1
  8518  1033  160A  118A  20CE  160A  118A  	fcall	___fltol
  8519  1038  0844               	movf	?___fltol+1,w
  8520  1039  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8521  103A  0843               	movf	?___fltol,w
  8522  103B  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8523  103C  3000               	movlw	0
  8524  103D  160A  158A  22A8  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8525                           
  8526                           ;SlaveLiofilizadorVer1.c: 1015:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Vaccum0
      +                          );
  8527  1042  1283               	bcf	3,5	;RP0=0, select bank0
  8528  1043  1303               	bcf	3,6	;RP1=0, select bank0
  8529  1044  085B               	movf	Save_Log@add_datalog+3,w
  8530  1045  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8531  1046  085A               	movf	Save_Log@add_datalog+2,w
  8532  1047  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8533  1048  0859               	movf	Save_Log@add_datalog+1,w
  8534  1049  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8535  104A  0858               	movf	Save_Log@add_datalog,w
  8536  104B  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8537  104C  1683               	bsf	3,5	;RP0=1, select bank1
  8538  104D  0856               	movf	(_Vaccum0+3)^(0+128),w
  8539  104E  1283               	bcf	3,5	;RP0=0, select bank0
  8540  104F  00C6               	movwf	___fltol@f1+3
  8541  1050  1683               	bsf	3,5	;RP0=1, select bank1
  8542  1051  0855               	movf	(_Vaccum0+2)^(0+128),w
  8543  1052  1283               	bcf	3,5	;RP0=0, select bank0
  8544  1053  00C5               	movwf	___fltol@f1+2
  8545  1054  1683               	bsf	3,5	;RP0=1, select bank1
  8546  1055  0854               	movf	(_Vaccum0+1)^(0+128),w
  8547  1056  1283               	bcf	3,5	;RP0=0, select bank0
  8548  1057  00C4               	movwf	___fltol@f1+1
  8549  1058  1683               	bsf	3,5	;RP0=1, select bank1
  8550  1059  0853               	movf	_Vaccum0^(0+128),w
  8551  105A  1283               	bcf	3,5	;RP0=0, select bank0
  8552  105B  00C3               	movwf	___fltol@f1
  8553  105C  160A  118A  20CE  160A  118A  	fcall	___fltol
  8554  1061  0844               	movf	?___fltol+1,w
  8555  1062  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8556  1063  0843               	movf	?___fltol,w
  8557  1064  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8558  1065  3001               	movlw	1
  8559  1066  160A  158A  22A8   	fcall	_EEPROM_24C1025_Write_Int
  8560  1069  0008               	return
  8561  106A                     __end_of_Save_Log:	
  8562                           
  8563                           	psect	text28
  8564  10CE                     __ptext28:	
  8565 ;; *************** function ___fltol *****************
  8566 ;; Defined at:
  8567 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  f1              4   35[BANK0 ] void 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  exp1            1   45[BANK0 ] unsigned char 
  8572 ;;  sign1           1   44[BANK0 ] unsigned char 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  4   35[BANK0 ] long 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0
  8577 ;; Tracked objects:
  8578 ;;		On entry : 300/0
  8579 ;;		On exit  : 300/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8582 ;;      Params:         0       4       0       0       0
  8583 ;;      Locals:         0       2       0       0       0
  8584 ;;      Temps:          0       5       0       0       0
  8585 ;;      Totals:         0      11       0       0       0
  8586 ;;Total ram usage:       11 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    1
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_Decodify_Command
  8593 ;;		_Save_Log
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           
  8598                           ;psect for function ___fltol
  8599  10CE                     ___fltol:	
  8600                           
  8601                           ;incstack = 0
  8602                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8603  10CE  1003               	clrc
  8604  10CF  0D45               	rlf	___fltol@f1+2,w
  8605  10D0  0D46               	rlf	___fltol@f1+3,w
  8606  10D1  00C7               	movwf	??___fltol
  8607  10D2  0847               	movf	??___fltol,w
  8608  10D3  00CD               	movwf	___fltol@exp1
  8609  10D4  084D               	movf	___fltol@exp1,w
  8610  10D5  1D03               	btfss	3,2
  8611  10D6  28E0               	goto	l6080
  8612  10D7                     l6076:	
  8613  10D7  3000               	movlw	0
  8614  10D8  00C6               	movwf	?___fltol+3
  8615  10D9  3000               	movlw	0
  8616  10DA  00C5               	movwf	?___fltol+2
  8617  10DB  3000               	movlw	0
  8618  10DC  00C4               	movwf	?___fltol+1
  8619  10DD  3000               	movlw	0
  8620  10DE  00C3               	movwf	?___fltol
  8621  10DF  0008               	return
  8622  10E0                     l6080:	
  8623  10E0  0843               	movf	___fltol@f1,w
  8624  10E1  00C7               	movwf	??___fltol
  8625  10E2  0844               	movf	___fltol@f1+1,w
  8626  10E3  00C8               	movwf	??___fltol+1
  8627  10E4  0845               	movf	___fltol@f1+2,w
  8628  10E5  00C9               	movwf	??___fltol+2
  8629  10E6  0846               	movf	___fltol@f1+3,w
  8630  10E7  00CA               	movwf	??___fltol+3
  8631  10E8  301F               	movlw	31
  8632  10E9                     u5865:	
  8633  10E9  1003               	clrc
  8634  10EA  0CCA               	rrf	??___fltol+3,f
  8635  10EB  0CC9               	rrf	??___fltol+2,f
  8636  10EC  0CC8               	rrf	??___fltol+1,f
  8637  10ED  0CC7               	rrf	??___fltol,f
  8638  10EE  3EFF               	addlw	-1
  8639  10EF  1D03               	skipz
  8640  10F0  28E9               	goto	u5865
  8641  10F1  0847               	movf	??___fltol,w
  8642  10F2  00CB               	movwf	??___fltol+4
  8643  10F3  084B               	movf	??___fltol+4,w
  8644  10F4  00CC               	movwf	___fltol@sign1
  8645  10F5  17C5               	bsf	___fltol@f1+2,7
  8646  10F6  30FF               	movlw	255
  8647  10F7  05C3               	andwf	___fltol@f1,f
  8648  10F8  30FF               	movlw	255
  8649  10F9  05C4               	andwf	___fltol@f1+1,f
  8650  10FA  30FF               	movlw	255
  8651  10FB  05C5               	andwf	___fltol@f1+2,f
  8652  10FC  3000               	movlw	0
  8653  10FD  05C6               	andwf	___fltol@f1+3,f
  8654  10FE  3096               	movlw	150
  8655  10FF  02CD               	subwf	___fltol@exp1,f
  8656  1100  1FCD               	btfss	___fltol@exp1,7
  8657  1101  2917               	goto	l6098
  8658  1102  084D               	movf	___fltol@exp1,w
  8659  1103  3A80               	xorlw	128
  8660  1104  3E97               	addlw	151
  8661  1105  1C03               	btfss	3,0
  8662  1106  28D7               	goto	l6076
  8663  1107                     l6096:	
  8664  1107  3001               	movlw	1
  8665  1108                     u5895:	
  8666  1108  1003               	clrc
  8667  1109  0CC6               	rrf	___fltol@f1+3,f
  8668  110A  0CC5               	rrf	___fltol@f1+2,f
  8669  110B  0CC4               	rrf	___fltol@f1+1,f
  8670  110C  0CC3               	rrf	___fltol@f1,f
  8671  110D  3EFF               	addlw	-1
  8672  110E  1D03               	skipz
  8673  110F  2908               	goto	u5895
  8674  1110  3001               	movlw	1
  8675  1111  00C7               	movwf	??___fltol
  8676  1112  0847               	movf	??___fltol,w
  8677  1113  07CD               	addwf	___fltol@exp1,f
  8678  1114  1903               	btfsc	3,2
  8679  1115  292A               	goto	l6106
  8680  1116  2907               	goto	l6096
  8681  1117                     l6098:	
  8682  1117  3020               	movlw	32
  8683  1118  024D               	subwf	___fltol@exp1,w
  8684  1119  1803               	btfsc	3,0
  8685  111A  28D7               	goto	l6076
  8686  111B                     l1146:	
  8687  111B  084D               	movf	___fltol@exp1,w
  8688  111C  1903               	btfsc	3,2
  8689  111D  292A               	goto	l6106
  8690  111E  3001               	movlw	1
  8691  111F  00C7               	movwf	??___fltol
  8692  1120                     u5925:	
  8693  1120  1003               	clrc
  8694  1121  0DC3               	rlf	___fltol@f1,f
  8695  1122  0DC4               	rlf	___fltol@f1+1,f
  8696  1123  0DC5               	rlf	___fltol@f1+2,f
  8697  1124  0DC6               	rlf	___fltol@f1+3,f
  8698  1125  0BC7               	decfsz	??___fltol,f
  8699  1126  2920               	goto	u5925
  8700  1127  3001               	movlw	1
  8701  1128  02CD               	subwf	___fltol@exp1,f
  8702  1129  291B               	goto	l1146
  8703  112A                     l6106:	
  8704  112A  084C               	movf	___fltol@sign1,w
  8705  112B  1903               	btfsc	3,2
  8706  112C  0008               	return
  8707  112D  09C3               	comf	___fltol@f1,f
  8708  112E  09C4               	comf	___fltol@f1+1,f
  8709  112F  09C5               	comf	___fltol@f1+2,f
  8710  1130  09C6               	comf	___fltol@f1+3,f
  8711  1131  0AC3               	incf	___fltol@f1,f
  8712  1132  1903               	skipnz
  8713  1133  0AC4               	incf	___fltol@f1+1,f
  8714  1134  1903               	skipnz
  8715  1135  0AC5               	incf	___fltol@f1+2,f
  8716  1136  1903               	skipnz
  8717  1137  0AC6               	incf	___fltol@f1+3,f
  8718  1138  0008               	return
  8719  1139                     __end_of___fltol:	
  8720                           
  8721                           	psect	text29
  8722  04B6                     __ptext29:	
  8723 ;; *************** function ___flmul *****************
  8724 ;; Defined at:
  8725 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  b               4    9[BANK0 ] long 
  8728 ;;  a               4   13[BANK0 ] long 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  prod            4   29[BANK0 ] struct .
  8731 ;;  grs             4   25[BANK0 ] unsigned long 
  8732 ;;  temp            2   33[BANK0 ] struct .
  8733 ;;  bexp            1   24[BANK0 ] unsigned char 
  8734 ;;  aexp            1   23[BANK0 ] unsigned char 
  8735 ;;  sign            1   22[BANK0 ] unsigned char 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  4    9[BANK0 ] unsigned char 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 300/0
  8742 ;;		On exit  : 300/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8745 ;;      Params:         0       8       0       0       0
  8746 ;;      Locals:         0      13       0       0       0
  8747 ;;      Temps:          0       5       0       0       0
  8748 ;;      Totals:         0      26       0       0       0
  8749 ;;Total ram usage:       26 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    2
  8752 ;; This function calls:
  8753 ;;		__Umul8_16
  8754 ;; This function is called by:
  8755 ;;		_Decodify_Command
  8756 ;;		_MediaPlacaVaccum
  8757 ;;		_Save_Log
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           
  8762                           ;psect for function ___flmul
  8763  04B6                     ___flmul:	
  8764                           
  8765                           ;incstack = 0
  8766                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8767  04B6  082C               	movf	___flmul@b+3,w
  8768  04B7  3980               	andlw	128
  8769  04B8  00B1               	movwf	??___flmul
  8770  04B9  0831               	movf	??___flmul,w
  8771  04BA  00B6               	movwf	___flmul@sign
  8772  04BB  082C               	movf	___flmul@b+3,w
  8773  04BC  00B1               	movwf	??___flmul
  8774  04BD  0731               	addwf	??___flmul,w
  8775  04BE  00B2               	movwf	??___flmul+1
  8776  04BF  0832               	movf	??___flmul+1,w
  8777  04C0  00B8               	movwf	___flmul@bexp
  8778  04C1  1BAB               	btfsc	___flmul@b+2,7
  8779  04C2  1438               	bsf	___flmul@bexp,0
  8780  04C3  0838               	movf	___flmul@bexp,w
  8781  04C4  1903               	btfsc	3,2
  8782  04C5  2CD3               	goto	l6320
  8783  04C6  0A38               	incf	___flmul@bexp,w
  8784  04C7  1D03               	btfss	3,2
  8785  04C8  2CD1               	goto	l6318
  8786  04C9  3000               	movlw	0
  8787  04CA  00AC               	movwf	___flmul@b+3
  8788  04CB  3000               	movlw	0
  8789  04CC  00AB               	movwf	___flmul@b+2
  8790  04CD  3000               	movlw	0
  8791  04CE  00AA               	movwf	___flmul@b+1
  8792  04CF  3000               	movlw	0
  8793  04D0  00A9               	movwf	___flmul@b
  8794  04D1                     l6318:	
  8795  04D1  17AB               	bsf	___flmul@b+2,7
  8796  04D2  2CDB               	goto	l6322
  8797  04D3                     l6320:	
  8798  04D3  3000               	movlw	0
  8799  04D4  00AC               	movwf	___flmul@b+3
  8800  04D5  3000               	movlw	0
  8801  04D6  00AB               	movwf	___flmul@b+2
  8802  04D7  3000               	movlw	0
  8803  04D8  00AA               	movwf	___flmul@b+1
  8804  04D9  3000               	movlw	0
  8805  04DA  00A9               	movwf	___flmul@b
  8806  04DB                     l6322:	
  8807  04DB  0830               	movf	___flmul@a+3,w
  8808  04DC  3980               	andlw	128
  8809  04DD  00B1               	movwf	??___flmul
  8810  04DE  0831               	movf	??___flmul,w
  8811  04DF  06B6               	xorwf	___flmul@sign,f
  8812  04E0  0830               	movf	___flmul@a+3,w
  8813  04E1  00B1               	movwf	??___flmul
  8814  04E2  0731               	addwf	??___flmul,w
  8815  04E3  00B2               	movwf	??___flmul+1
  8816  04E4  0832               	movf	??___flmul+1,w
  8817  04E5  00B7               	movwf	___flmul@aexp
  8818  04E6  1BAF               	btfsc	___flmul@a+2,7
  8819  04E7  1437               	bsf	___flmul@aexp,0
  8820  04E8  0837               	movf	___flmul@aexp,w
  8821  04E9  1903               	btfsc	3,2
  8822  04EA  2CF8               	goto	l6338
  8823  04EB  0A37               	incf	___flmul@aexp,w
  8824  04EC  1D03               	btfss	3,2
  8825  04ED  2CF6               	goto	l6336
  8826  04EE  3000               	movlw	0
  8827  04EF  00B0               	movwf	___flmul@a+3
  8828  04F0  3000               	movlw	0
  8829  04F1  00AF               	movwf	___flmul@a+2
  8830  04F2  3000               	movlw	0
  8831  04F3  00AE               	movwf	___flmul@a+1
  8832  04F4  3000               	movlw	0
  8833  04F5  00AD               	movwf	___flmul@a
  8834  04F6                     l6336:	
  8835  04F6  17AF               	bsf	___flmul@a+2,7
  8836  04F7  2D00               	goto	l6340
  8837  04F8                     l6338:	
  8838  04F8  3000               	movlw	0
  8839  04F9  00B0               	movwf	___flmul@a+3
  8840  04FA  3000               	movlw	0
  8841  04FB  00AF               	movwf	___flmul@a+2
  8842  04FC  3000               	movlw	0
  8843  04FD  00AE               	movwf	___flmul@a+1
  8844  04FE  3000               	movlw	0
  8845  04FF  00AD               	movwf	___flmul@a
  8846  0500                     l6340:	
  8847  0500  0837               	movf	___flmul@aexp,w
  8848  0501  1D03               	btfss	3,2
  8849  0502  0838               	movf	___flmul@bexp,w
  8850  0503  1D03               	btfss	3,2
  8851  0504  2D0E               	goto	l6348
  8852  0505  3000               	movlw	0
  8853  0506  00AC               	movwf	?___flmul+3
  8854  0507  3000               	movlw	0
  8855  0508  00AB               	movwf	?___flmul+2
  8856  0509  3000               	movlw	0
  8857  050A  00AA               	movwf	?___flmul+1
  8858  050B  3000               	movlw	0
  8859  050C  00A9               	movwf	?___flmul
  8860  050D  0008               	return
  8861  050E                     l6348:	
  8862  050E  0829               	movf	___flmul@b,w
  8863  050F  00B1               	movwf	??___flmul
  8864  0510  0831               	movf	??___flmul,w
  8865  0511  00A0               	movwf	__Umul8_16@multiplicand
  8866  0512  082F               	movf	___flmul@a+2,w
  8867  0513  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  8868  0518  0821               	movf	?__Umul8_16+1,w
  8869  0519  00C2               	movwf	___flmul@temp+1
  8870  051A  0820               	movf	?__Umul8_16,w
  8871  051B  00C1               	movwf	___flmul@temp
  8872  051C  0841               	movf	___flmul@temp,w
  8873  051D  00B1               	movwf	??___flmul
  8874  051E  01B2               	clrf	??___flmul+1
  8875  051F  01B3               	clrf	??___flmul+2
  8876  0520  01B4               	clrf	??___flmul+3
  8877  0521  0834               	movf	??___flmul+3,w
  8878  0522  00BC               	movwf	___flmul@grs+3
  8879  0523  0833               	movf	??___flmul+2,w
  8880  0524  00BB               	movwf	___flmul@grs+2
  8881  0525  0832               	movf	??___flmul+1,w
  8882  0526  00BA               	movwf	___flmul@grs+1
  8883  0527  0831               	movf	??___flmul,w
  8884  0528  00B9               	movwf	___flmul@grs
  8885  0529  0842               	movf	___flmul@temp+1,w
  8886  052A  00B1               	movwf	??___flmul
  8887  052B  01B2               	clrf	??___flmul+1
  8888  052C  01B3               	clrf	??___flmul+2
  8889  052D  01B4               	clrf	??___flmul+3
  8890  052E  0834               	movf	??___flmul+3,w
  8891  052F  00C0               	movwf	___flmul@prod+3
  8892  0530  0833               	movf	??___flmul+2,w
  8893  0531  00BF               	movwf	___flmul@prod+2
  8894  0532  0832               	movf	??___flmul+1,w
  8895  0533  00BE               	movwf	___flmul@prod+1
  8896  0534  0831               	movf	??___flmul,w
  8897  0535  00BD               	movwf	___flmul@prod
  8898  0536  082A               	movf	___flmul@b+1,w
  8899  0537  00B1               	movwf	??___flmul
  8900  0538  0831               	movf	??___flmul,w
  8901  0539  00A0               	movwf	__Umul8_16@multiplicand
  8902  053A  082E               	movf	___flmul@a+1,w
  8903  053B  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  8904  0540  0821               	movf	?__Umul8_16+1,w
  8905  0541  00C2               	movwf	___flmul@temp+1
  8906  0542  0820               	movf	?__Umul8_16,w
  8907  0543  00C1               	movwf	___flmul@temp
  8908  0544  0841               	movf	___flmul@temp,w
  8909  0545  00B1               	movwf	??___flmul
  8910  0546  01B2               	clrf	??___flmul+1
  8911  0547  01B3               	clrf	??___flmul+2
  8912  0548  01B4               	clrf	??___flmul+3
  8913  0549  0831               	movf	??___flmul,w
  8914  054A  07B9               	addwf	___flmul@grs,f
  8915  054B  0832               	movf	??___flmul+1,w
  8916  054C  1103               	clrz
  8917  054D  1803               	skipnc
  8918  054E  3E01               	addlw	1
  8919  054F  1D03               	btfss	3,2
  8920  0550  07BA               	addwf	___flmul@grs+1,f
  8921  0551  0833               	movf	??___flmul+2,w
  8922  0552  1103               	clrz
  8923  0553  1803               	skipnc
  8924  0554  3E01               	addlw	1
  8925  0555  1D03               	btfss	3,2
  8926  0556  07BB               	addwf	___flmul@grs+2,f
  8927  0557  0834               	movf	??___flmul+3,w
  8928  0558  1103               	clrz
  8929  0559  1803               	skipnc
  8930  055A  3E01               	addlw	1
  8931  055B  1D03               	btfss	3,2
  8932  055C  07BC               	addwf	___flmul@grs+3,f
  8933  055D  0842               	movf	___flmul@temp+1,w
  8934  055E  00B1               	movwf	??___flmul
  8935  055F  01B2               	clrf	??___flmul+1
  8936  0560  01B3               	clrf	??___flmul+2
  8937  0561  01B4               	clrf	??___flmul+3
  8938  0562  0831               	movf	??___flmul,w
  8939  0563  07BD               	addwf	___flmul@prod,f
  8940  0564  0832               	movf	??___flmul+1,w
  8941  0565  1103               	clrz
  8942  0566  1803               	skipnc
  8943  0567  3E01               	addlw	1
  8944  0568  1D03               	btfss	3,2
  8945  0569  07BE               	addwf	___flmul@prod+1,f
  8946  056A  0833               	movf	??___flmul+2,w
  8947  056B  1103               	clrz
  8948  056C  1803               	skipnc
  8949  056D  3E01               	addlw	1
  8950  056E  1D03               	btfss	3,2
  8951  056F  07BF               	addwf	___flmul@prod+2,f
  8952  0570  0834               	movf	??___flmul+3,w
  8953  0571  1103               	clrz
  8954  0572  1803               	skipnc
  8955  0573  3E01               	addlw	1
  8956  0574  1D03               	btfss	3,2
  8957  0575  07C0               	addwf	___flmul@prod+3,f
  8958  0576  082B               	movf	___flmul@b+2,w
  8959  0577  00B1               	movwf	??___flmul
  8960  0578  0831               	movf	??___flmul,w
  8961  0579  00A0               	movwf	__Umul8_16@multiplicand
  8962  057A  082D               	movf	___flmul@a,w
  8963  057B  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  8964  0580  0821               	movf	?__Umul8_16+1,w
  8965  0581  00C2               	movwf	___flmul@temp+1
  8966  0582  0820               	movf	?__Umul8_16,w
  8967  0583  00C1               	movwf	___flmul@temp
  8968  0584  0841               	movf	___flmul@temp,w
  8969  0585  00B1               	movwf	??___flmul
  8970  0586  01B2               	clrf	??___flmul+1
  8971  0587  01B3               	clrf	??___flmul+2
  8972  0588  01B4               	clrf	??___flmul+3
  8973  0589  0831               	movf	??___flmul,w
  8974  058A  07B9               	addwf	___flmul@grs,f
  8975  058B  0832               	movf	??___flmul+1,w
  8976  058C  1103               	clrz
  8977  058D  1803               	skipnc
  8978  058E  3E01               	addlw	1
  8979  058F  1D03               	btfss	3,2
  8980  0590  07BA               	addwf	___flmul@grs+1,f
  8981  0591  0833               	movf	??___flmul+2,w
  8982  0592  1103               	clrz
  8983  0593  1803               	skipnc
  8984  0594  3E01               	addlw	1
  8985  0595  1D03               	btfss	3,2
  8986  0596  07BB               	addwf	___flmul@grs+2,f
  8987  0597  0834               	movf	??___flmul+3,w
  8988  0598  1103               	clrz
  8989  0599  1803               	skipnc
  8990  059A  3E01               	addlw	1
  8991  059B  1D03               	btfss	3,2
  8992  059C  07BC               	addwf	___flmul@grs+3,f
  8993  059D  0842               	movf	___flmul@temp+1,w
  8994  059E  00B1               	movwf	??___flmul
  8995  059F  01B2               	clrf	??___flmul+1
  8996  05A0  01B3               	clrf	??___flmul+2
  8997  05A1  01B4               	clrf	??___flmul+3
  8998  05A2  0831               	movf	??___flmul,w
  8999  05A3  07BD               	addwf	___flmul@prod,f
  9000  05A4  0832               	movf	??___flmul+1,w
  9001  05A5  1103               	clrz
  9002  05A6  1803               	skipnc
  9003  05A7  3E01               	addlw	1
  9004  05A8  1D03               	btfss	3,2
  9005  05A9  07BE               	addwf	___flmul@prod+1,f
  9006  05AA  0833               	movf	??___flmul+2,w
  9007  05AB  1103               	clrz
  9008  05AC  1803               	skipnc
  9009  05AD  3E01               	addlw	1
  9010  05AE  1D03               	btfss	3,2
  9011  05AF  07BF               	addwf	___flmul@prod+2,f
  9012  05B0  0834               	movf	??___flmul+3,w
  9013  05B1  1103               	clrz
  9014  05B2  1803               	skipnc
  9015  05B3  3E01               	addlw	1
  9016  05B4  1D03               	btfss	3,2
  9017  05B5  07C0               	addwf	___flmul@prod+3,f
  9018  05B6  3008               	movlw	8
  9019  05B7  00B1               	movwf	??___flmul
  9020  05B8                     u6535:	
  9021  05B8  1003               	clrc
  9022  05B9  0DB9               	rlf	___flmul@grs,f
  9023  05BA  0DBA               	rlf	___flmul@grs+1,f
  9024  05BB  0DBB               	rlf	___flmul@grs+2,f
  9025  05BC  0DBC               	rlf	___flmul@grs+3,f
  9026  05BD  0BB1               	decfsz	??___flmul,f
  9027  05BE  2DB8               	goto	u6535
  9028  05BF  082A               	movf	___flmul@b+1,w
  9029  05C0  00B1               	movwf	??___flmul
  9030  05C1  0831               	movf	??___flmul,w
  9031  05C2  00A0               	movwf	__Umul8_16@multiplicand
  9032  05C3  082D               	movf	___flmul@a,w
  9033  05C4  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9034  05C9  0821               	movf	?__Umul8_16+1,w
  9035  05CA  00C2               	movwf	___flmul@temp+1
  9036  05CB  0820               	movf	?__Umul8_16,w
  9037  05CC  00C1               	movwf	___flmul@temp
  9038  05CD  0841               	movf	___flmul@temp,w
  9039  05CE  00B1               	movwf	??___flmul
  9040  05CF  0842               	movf	___flmul@temp+1,w
  9041  05D0  00B2               	movwf	??___flmul+1
  9042  05D1  01B3               	clrf	??___flmul+2
  9043  05D2  01B4               	clrf	??___flmul+3
  9044  05D3  0831               	movf	??___flmul,w
  9045  05D4  07B9               	addwf	___flmul@grs,f
  9046  05D5  0832               	movf	??___flmul+1,w
  9047  05D6  1103               	clrz
  9048  05D7  1803               	skipnc
  9049  05D8  3E01               	addlw	1
  9050  05D9  1D03               	btfss	3,2
  9051  05DA  07BA               	addwf	___flmul@grs+1,f
  9052  05DB  0833               	movf	??___flmul+2,w
  9053  05DC  1103               	clrz
  9054  05DD  1803               	skipnc
  9055  05DE  3E01               	addlw	1
  9056  05DF  1D03               	btfss	3,2
  9057  05E0  07BB               	addwf	___flmul@grs+2,f
  9058  05E1  0834               	movf	??___flmul+3,w
  9059  05E2  1103               	clrz
  9060  05E3  1803               	skipnc
  9061  05E4  3E01               	addlw	1
  9062  05E5  1D03               	btfss	3,2
  9063  05E6  07BC               	addwf	___flmul@grs+3,f
  9064  05E7  0829               	movf	___flmul@b,w
  9065  05E8  00B1               	movwf	??___flmul
  9066  05E9  0831               	movf	??___flmul,w
  9067  05EA  00A0               	movwf	__Umul8_16@multiplicand
  9068  05EB  082E               	movf	___flmul@a+1,w
  9069  05EC  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9070  05F1  0821               	movf	?__Umul8_16+1,w
  9071  05F2  00C2               	movwf	___flmul@temp+1
  9072  05F3  0820               	movf	?__Umul8_16,w
  9073  05F4  00C1               	movwf	___flmul@temp
  9074  05F5  0841               	movf	___flmul@temp,w
  9075  05F6  00B1               	movwf	??___flmul
  9076  05F7  0842               	movf	___flmul@temp+1,w
  9077  05F8  00B2               	movwf	??___flmul+1
  9078  05F9  01B3               	clrf	??___flmul+2
  9079  05FA  01B4               	clrf	??___flmul+3
  9080  05FB  0831               	movf	??___flmul,w
  9081  05FC  07B9               	addwf	___flmul@grs,f
  9082  05FD  0832               	movf	??___flmul+1,w
  9083  05FE  1103               	clrz
  9084  05FF  1803               	skipnc
  9085  0600  3E01               	addlw	1
  9086  0601  1D03               	btfss	3,2
  9087  0602  07BA               	addwf	___flmul@grs+1,f
  9088  0603  0833               	movf	??___flmul+2,w
  9089  0604  1103               	clrz
  9090  0605  1803               	skipnc
  9091  0606  3E01               	addlw	1
  9092  0607  1D03               	btfss	3,2
  9093  0608  07BB               	addwf	___flmul@grs+2,f
  9094  0609  0834               	movf	??___flmul+3,w
  9095  060A  1103               	clrz
  9096  060B  1803               	skipnc
  9097  060C  3E01               	addlw	1
  9098  060D  1D03               	btfss	3,2
  9099  060E  07BC               	addwf	___flmul@grs+3,f
  9100  060F  3008               	movlw	8
  9101  0610  00B1               	movwf	??___flmul
  9102  0611                     u6565:	
  9103  0611  1003               	clrc
  9104  0612  0DB9               	rlf	___flmul@grs,f
  9105  0613  0DBA               	rlf	___flmul@grs+1,f
  9106  0614  0DBB               	rlf	___flmul@grs+2,f
  9107  0615  0DBC               	rlf	___flmul@grs+3,f
  9108  0616  0BB1               	decfsz	??___flmul,f
  9109  0617  2E11               	goto	u6565
  9110  0618  0829               	movf	___flmul@b,w
  9111  0619  00B1               	movwf	??___flmul
  9112  061A  0831               	movf	??___flmul,w
  9113  061B  00A0               	movwf	__Umul8_16@multiplicand
  9114  061C  082D               	movf	___flmul@a,w
  9115  061D  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9116  0622  0821               	movf	?__Umul8_16+1,w
  9117  0623  00C2               	movwf	___flmul@temp+1
  9118  0624  0820               	movf	?__Umul8_16,w
  9119  0625  00C1               	movwf	___flmul@temp
  9120  0626  0841               	movf	___flmul@temp,w
  9121  0627  00B1               	movwf	??___flmul
  9122  0628  0842               	movf	___flmul@temp+1,w
  9123  0629  00B2               	movwf	??___flmul+1
  9124  062A  01B3               	clrf	??___flmul+2
  9125  062B  01B4               	clrf	??___flmul+3
  9126  062C  0831               	movf	??___flmul,w
  9127  062D  07B9               	addwf	___flmul@grs,f
  9128  062E  0832               	movf	??___flmul+1,w
  9129  062F  1103               	clrz
  9130  0630  1803               	skipnc
  9131  0631  3E01               	addlw	1
  9132  0632  1D03               	btfss	3,2
  9133  0633  07BA               	addwf	___flmul@grs+1,f
  9134  0634  0833               	movf	??___flmul+2,w
  9135  0635  1103               	clrz
  9136  0636  1803               	skipnc
  9137  0637  3E01               	addlw	1
  9138  0638  1D03               	btfss	3,2
  9139  0639  07BB               	addwf	___flmul@grs+2,f
  9140  063A  0834               	movf	??___flmul+3,w
  9141  063B  1103               	clrz
  9142  063C  1803               	skipnc
  9143  063D  3E01               	addlw	1
  9144  063E  1D03               	btfss	3,2
  9145  063F  07BC               	addwf	___flmul@grs+3,f
  9146  0640  082A               	movf	___flmul@b+1,w
  9147  0641  00B1               	movwf	??___flmul
  9148  0642  0831               	movf	??___flmul,w
  9149  0643  00A0               	movwf	__Umul8_16@multiplicand
  9150  0644  082F               	movf	___flmul@a+2,w
  9151  0645  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9152  064A  0821               	movf	?__Umul8_16+1,w
  9153  064B  00C2               	movwf	___flmul@temp+1
  9154  064C  0820               	movf	?__Umul8_16,w
  9155  064D  00C1               	movwf	___flmul@temp
  9156  064E  0841               	movf	___flmul@temp,w
  9157  064F  00B1               	movwf	??___flmul
  9158  0650  0842               	movf	___flmul@temp+1,w
  9159  0651  00B2               	movwf	??___flmul+1
  9160  0652  01B3               	clrf	??___flmul+2
  9161  0653  01B4               	clrf	??___flmul+3
  9162  0654  0831               	movf	??___flmul,w
  9163  0655  07BD               	addwf	___flmul@prod,f
  9164  0656  0832               	movf	??___flmul+1,w
  9165  0657  1103               	clrz
  9166  0658  1803               	skipnc
  9167  0659  3E01               	addlw	1
  9168  065A  1D03               	btfss	3,2
  9169  065B  07BE               	addwf	___flmul@prod+1,f
  9170  065C  0833               	movf	??___flmul+2,w
  9171  065D  1103               	clrz
  9172  065E  1803               	skipnc
  9173  065F  3E01               	addlw	1
  9174  0660  1D03               	btfss	3,2
  9175  0661  07BF               	addwf	___flmul@prod+2,f
  9176  0662  0834               	movf	??___flmul+3,w
  9177  0663  1103               	clrz
  9178  0664  1803               	skipnc
  9179  0665  3E01               	addlw	1
  9180  0666  1D03               	btfss	3,2
  9181  0667  07C0               	addwf	___flmul@prod+3,f
  9182  0668  082B               	movf	___flmul@b+2,w
  9183  0669  00B1               	movwf	??___flmul
  9184  066A  0831               	movf	??___flmul,w
  9185  066B  00A0               	movwf	__Umul8_16@multiplicand
  9186  066C  082E               	movf	___flmul@a+1,w
  9187  066D  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9188  0672  0821               	movf	?__Umul8_16+1,w
  9189  0673  00C2               	movwf	___flmul@temp+1
  9190  0674  0820               	movf	?__Umul8_16,w
  9191  0675  00C1               	movwf	___flmul@temp
  9192  0676  0841               	movf	___flmul@temp,w
  9193  0677  00B1               	movwf	??___flmul
  9194  0678  0842               	movf	___flmul@temp+1,w
  9195  0679  00B2               	movwf	??___flmul+1
  9196  067A  01B3               	clrf	??___flmul+2
  9197  067B  01B4               	clrf	??___flmul+3
  9198  067C  0831               	movf	??___flmul,w
  9199  067D  07BD               	addwf	___flmul@prod,f
  9200  067E  0832               	movf	??___flmul+1,w
  9201  067F  1103               	clrz
  9202  0680  1803               	skipnc
  9203  0681  3E01               	addlw	1
  9204  0682  1D03               	btfss	3,2
  9205  0683  07BE               	addwf	___flmul@prod+1,f
  9206  0684  0833               	movf	??___flmul+2,w
  9207  0685  1103               	clrz
  9208  0686  1803               	skipnc
  9209  0687  3E01               	addlw	1
  9210  0688  1D03               	btfss	3,2
  9211  0689  07BF               	addwf	___flmul@prod+2,f
  9212  068A  0834               	movf	??___flmul+3,w
  9213  068B  1103               	clrz
  9214  068C  1803               	skipnc
  9215  068D  3E01               	addlw	1
  9216  068E  1D03               	btfss	3,2
  9217  068F  07C0               	addwf	___flmul@prod+3,f
  9218  0690  082B               	movf	___flmul@b+2,w
  9219  0691  00B1               	movwf	??___flmul
  9220  0692  0831               	movf	??___flmul,w
  9221  0693  00A0               	movwf	__Umul8_16@multiplicand
  9222  0694  082F               	movf	___flmul@a+2,w
  9223  0695  160A  158A  232C  120A  118A  	fcall	__Umul8_16
  9224  069A  0821               	movf	?__Umul8_16+1,w
  9225  069B  00C2               	movwf	___flmul@temp+1
  9226  069C  0820               	movf	?__Umul8_16,w
  9227  069D  00C1               	movwf	___flmul@temp
  9228  069E  0841               	movf	___flmul@temp,w
  9229  069F  00B1               	movwf	??___flmul
  9230  06A0  0842               	movf	___flmul@temp+1,w
  9231  06A1  00B2               	movwf	??___flmul+1
  9232  06A2  01B3               	clrf	??___flmul+2
  9233  06A3  01B4               	clrf	??___flmul+3
  9234  06A4  3008               	movlw	8
  9235  06A5                     u6605:	
  9236  06A5  1003               	clrc
  9237  06A6  0DB1               	rlf	??___flmul,f
  9238  06A7  0DB2               	rlf	??___flmul+1,f
  9239  06A8  0DB3               	rlf	??___flmul+2,f
  9240  06A9  0DB4               	rlf	??___flmul+3,f
  9241  06AA  3EFF               	addlw	-1
  9242  06AB  1D03               	skipz
  9243  06AC  2EA5               	goto	u6605
  9244  06AD  0831               	movf	??___flmul,w
  9245  06AE  07BD               	addwf	___flmul@prod,f
  9246  06AF  0832               	movf	??___flmul+1,w
  9247  06B0  1103               	clrz
  9248  06B1  1803               	skipnc
  9249  06B2  3E01               	addlw	1
  9250  06B3  1D03               	btfss	3,2
  9251  06B4  07BE               	addwf	___flmul@prod+1,f
  9252  06B5  0833               	movf	??___flmul+2,w
  9253  06B6  1103               	clrz
  9254  06B7  1803               	skipnc
  9255  06B8  3E01               	addlw	1
  9256  06B9  1D03               	btfss	3,2
  9257  06BA  07BF               	addwf	___flmul@prod+2,f
  9258  06BB  0834               	movf	??___flmul+3,w
  9259  06BC  1103               	clrz
  9260  06BD  1803               	skipnc
  9261  06BE  3E01               	addlw	1
  9262  06BF  1D03               	btfss	3,2
  9263  06C0  07C0               	addwf	___flmul@prod+3,f
  9264  06C1  083C               	movf	___flmul@grs+3,w
  9265  06C2  00B1               	movwf	??___flmul
  9266  06C3  01B2               	clrf	??___flmul+1
  9267  06C4  01B3               	clrf	??___flmul+2
  9268  06C5  01B4               	clrf	??___flmul+3
  9269  06C6  0831               	movf	??___flmul,w
  9270  06C7  07BD               	addwf	___flmul@prod,f
  9271  06C8  0832               	movf	??___flmul+1,w
  9272  06C9  1103               	clrz
  9273  06CA  1803               	skipnc
  9274  06CB  3E01               	addlw	1
  9275  06CC  1D03               	btfss	3,2
  9276  06CD  07BE               	addwf	___flmul@prod+1,f
  9277  06CE  0833               	movf	??___flmul+2,w
  9278  06CF  1103               	clrz
  9279  06D0  1803               	skipnc
  9280  06D1  3E01               	addlw	1
  9281  06D2  1D03               	btfss	3,2
  9282  06D3  07BF               	addwf	___flmul@prod+2,f
  9283  06D4  0834               	movf	??___flmul+3,w
  9284  06D5  1103               	clrz
  9285  06D6  1803               	skipnc
  9286  06D7  3E01               	addlw	1
  9287  06D8  1D03               	btfss	3,2
  9288  06D9  07C0               	addwf	___flmul@prod+3,f
  9289  06DA  3008               	movlw	8
  9290  06DB  00B1               	movwf	??___flmul
  9291  06DC                     u6635:	
  9292  06DC  1003               	clrc
  9293  06DD  0DB9               	rlf	___flmul@grs,f
  9294  06DE  0DBA               	rlf	___flmul@grs+1,f
  9295  06DF  0DBB               	rlf	___flmul@grs+2,f
  9296  06E0  0DBC               	rlf	___flmul@grs+3,f
  9297  06E1  0BB1               	decfsz	??___flmul,f
  9298  06E2  2EDC               	goto	u6635
  9299  06E3  0838               	movf	___flmul@bexp,w
  9300  06E4  0737               	addwf	___flmul@aexp,w
  9301  06E5  00B1               	movwf	??___flmul
  9302  06E6  01B2               	clrf	??___flmul+1
  9303  06E7  0DB2               	rlf	??___flmul+1,f
  9304  06E8  0831               	movf	??___flmul,w
  9305  06E9  3E82               	addlw	130
  9306  06EA  00C1               	movwf	___flmul@temp
  9307  06EB  0832               	movf	??___flmul+1,w
  9308  06EC  1803               	skipnc
  9309  06ED  3E01               	addlw	1
  9310  06EE  3EFF               	addlw	255
  9311  06EF  00C2               	movwf	___flmul@temp+1
  9312  06F0                     l6400:	
  9313  06F0  1BBF               	btfsc	___flmul@prod+2,7
  9314  06F1  2F0D               	goto	l6402
  9315  06F2  3001               	movlw	1
  9316  06F3  00B1               	movwf	??___flmul
  9317  06F4                     u6645:	
  9318  06F4  1003               	clrc
  9319  06F5  0DBD               	rlf	___flmul@prod,f
  9320  06F6  0DBE               	rlf	___flmul@prod+1,f
  9321  06F7  0DBF               	rlf	___flmul@prod+2,f
  9322  06F8  0DC0               	rlf	___flmul@prod+3,f
  9323  06F9  0BB1               	decfsz	??___flmul,f
  9324  06FA  2EF4               	goto	u6645
  9325  06FB  1BBC               	btfsc	___flmul@grs+3,7
  9326  06FC  143D               	bsf	___flmul@prod,0
  9327  06FD  3001               	movlw	1
  9328  06FE  00B1               	movwf	??___flmul
  9329  06FF                     u6665:	
  9330  06FF  1003               	clrc
  9331  0700  0DB9               	rlf	___flmul@grs,f
  9332  0701  0DBA               	rlf	___flmul@grs+1,f
  9333  0702  0DBB               	rlf	___flmul@grs+2,f
  9334  0703  0DBC               	rlf	___flmul@grs+3,f
  9335  0704  0BB1               	decfsz	??___flmul,f
  9336  0705  2EFF               	goto	u6665
  9337  0706  30FF               	movlw	255
  9338  0707  07C1               	addwf	___flmul@temp,f
  9339  0708  1803               	skipnc
  9340  0709  0AC2               	incf	___flmul@temp+1,f
  9341  070A  30FF               	movlw	255
  9342  070B  07C2               	addwf	___flmul@temp+1,f
  9343  070C  2EF0               	goto	l6400
  9344  070D                     l6402:	
  9345  070D  01B7               	clrf	___flmul@aexp
  9346  070E  1FBC               	btfss	___flmul@grs+3,7
  9347  070F  2F26               	goto	l6412
  9348  0710  30FF               	movlw	255
  9349  0711  0539               	andwf	___flmul@grs,w
  9350  0712  00B1               	movwf	??___flmul
  9351  0713  30FF               	movlw	255
  9352  0714  053A               	andwf	___flmul@grs+1,w
  9353  0715  00B2               	movwf	??___flmul+1
  9354  0716  30FF               	movlw	255
  9355  0717  053B               	andwf	___flmul@grs+2,w
  9356  0718  00B3               	movwf	??___flmul+2
  9357  0719  307F               	movlw	127
  9358  071A  053C               	andwf	___flmul@grs+3,w
  9359  071B  00B4               	movwf	??___flmul+3
  9360  071C  0834               	movf	??___flmul+3,w
  9361  071D  0433               	iorwf	??___flmul+2,w
  9362  071E  0432               	iorwf	??___flmul+1,w
  9363  071F  0431               	iorwf	??___flmul,w
  9364  0720  1903               	skipnz
  9365  0721  183D               	btfsc	___flmul@prod,0
  9366  0722  2F24               	goto	l6408
  9367  0723  2F26               	goto	l6412
  9368  0724                     l6408:	
  9369  0724  01B7               	clrf	___flmul@aexp
  9370  0725  0AB7               	incf	___flmul@aexp,f
  9371  0726                     l6412:	
  9372  0726  0837               	movf	___flmul@aexp,w
  9373  0727  1903               	btfsc	3,2
  9374  0728  2F58               	goto	l6422
  9375  0729  3001               	movlw	1
  9376  072A  07BD               	addwf	___flmul@prod,f
  9377  072B  3000               	movlw	0
  9378  072C  1803               	skipnc
  9379  072D  3001               	movlw	1
  9380  072E  07BE               	addwf	___flmul@prod+1,f
  9381  072F  3000               	movlw	0
  9382  0730  1803               	skipnc
  9383  0731  3001               	movlw	1
  9384  0732  07BF               	addwf	___flmul@prod+2,f
  9385  0733  3000               	movlw	0
  9386  0734  1803               	skipnc
  9387  0735  3001               	movlw	1
  9388  0736  07C0               	addwf	___flmul@prod+3,f
  9389  0737  1C40               	btfss	___flmul@prod+3,0
  9390  0738  2F58               	goto	l6422
  9391  0739  083D               	movf	___flmul@prod,w
  9392  073A  00B1               	movwf	??___flmul
  9393  073B  083E               	movf	___flmul@prod+1,w
  9394  073C  00B2               	movwf	??___flmul+1
  9395  073D  083F               	movf	___flmul@prod+2,w
  9396  073E  00B3               	movwf	??___flmul+2
  9397  073F  0840               	movf	___flmul@prod+3,w
  9398  0740  00B4               	movwf	??___flmul+3
  9399  0741  3001               	movlw	1
  9400  0742  00B5               	movwf	??___flmul+4
  9401  0743                     u6735:	
  9402  0743  0D34               	rlf	??___flmul+3,w
  9403  0744  0CB4               	rrf	??___flmul+3,f
  9404  0745  0CB3               	rrf	??___flmul+2,f
  9405  0746  0CB2               	rrf	??___flmul+1,f
  9406  0747  0CB1               	rrf	??___flmul,f
  9407  0748  0BB5               	decfsz	??___flmul+4,f
  9408  0749  2F43               	goto	u6735
  9409  074A  0834               	movf	??___flmul+3,w
  9410  074B  00C0               	movwf	___flmul@prod+3
  9411  074C  0833               	movf	??___flmul+2,w
  9412  074D  00BF               	movwf	___flmul@prod+2
  9413  074E  0832               	movf	??___flmul+1,w
  9414  074F  00BE               	movwf	___flmul@prod+1
  9415  0750  0831               	movf	??___flmul,w
  9416  0751  00BD               	movwf	___flmul@prod
  9417  0752  3001               	movlw	1
  9418  0753  07C1               	addwf	___flmul@temp,f
  9419  0754  1803               	skipnc
  9420  0755  0AC2               	incf	___flmul@temp+1,f
  9421  0756  3000               	movlw	0
  9422  0757  07C2               	addwf	___flmul@temp+1,f
  9423  0758                     l6422:	
  9424  0758  0842               	movf	___flmul@temp+1,w
  9425  0759  3A80               	xorlw	128
  9426  075A  00FF               	movwf	127
  9427  075B  3080               	movlw	128
  9428  075C  027F               	subwf	127,w
  9429  075D  1D03               	skipz
  9430  075E  2F61               	goto	u6745
  9431  075F  30FF               	movlw	255
  9432  0760  0241               	subwf	___flmul@temp,w
  9433  0761                     u6745:	
  9434  0761  1C03               	skipc
  9435  0762  2F6E               	goto	l6426
  9436  0763  307F               	movlw	127
  9437  0764  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0765  1303               	bcf	3,6	;RP1=0, select bank0
  9439  0766  00C0               	movwf	___flmul@prod+3
  9440  0767  3080               	movlw	128
  9441  0768  00BF               	movwf	___flmul@prod+2
  9442  0769  3000               	movlw	0
  9443  076A  00BE               	movwf	___flmul@prod+1
  9444  076B  3000               	movlw	0
  9445  076C  00BD               	movwf	___flmul@prod
  9446  076D  2F9E               	goto	l1354
  9447  076E                     l6426:	
  9448  076E  1283               	bcf	3,5	;RP0=0, select bank0
  9449  076F  1303               	bcf	3,6	;RP1=0, select bank0
  9450  0770  0842               	movf	___flmul@temp+1,w
  9451  0771  3A80               	xorlw	128
  9452  0772  00FF               	movwf	127
  9453  0773  3080               	movlw	128
  9454  0774  027F               	subwf	127,w
  9455  0775  1D03               	skipz
  9456  0776  2F79               	goto	u6755
  9457  0777  3001               	movlw	1
  9458  0778  0241               	subwf	___flmul@temp,w
  9459  0779                     u6755:	
  9460  0779  1803               	skipnc
  9461  077A  2F87               	goto	l6432
  9462  077B  3000               	movlw	0
  9463  077C  1283               	bcf	3,5	;RP0=0, select bank0
  9464  077D  1303               	bcf	3,6	;RP1=0, select bank0
  9465  077E  00C0               	movwf	___flmul@prod+3
  9466  077F  3000               	movlw	0
  9467  0780  00BF               	movwf	___flmul@prod+2
  9468  0781  3000               	movlw	0
  9469  0782  00BE               	movwf	___flmul@prod+1
  9470  0783  3000               	movlw	0
  9471  0784  00BD               	movwf	___flmul@prod
  9472  0785  01B6               	clrf	___flmul@sign
  9473  0786  2F9E               	goto	l1354
  9474  0787                     l6432:	
  9475  0787  1283               	bcf	3,5	;RP0=0, select bank0
  9476  0788  1303               	bcf	3,6	;RP1=0, select bank0
  9477  0789  0841               	movf	___flmul@temp,w
  9478  078A  00B1               	movwf	??___flmul
  9479  078B  0831               	movf	??___flmul,w
  9480  078C  00B8               	movwf	___flmul@bexp
  9481  078D  30FF               	movlw	255
  9482  078E  05BD               	andwf	___flmul@prod,f
  9483  078F  30FF               	movlw	255
  9484  0790  05BE               	andwf	___flmul@prod+1,f
  9485  0791  307F               	movlw	127
  9486  0792  05BF               	andwf	___flmul@prod+2,f
  9487  0793  3000               	movlw	0
  9488  0794  05C0               	andwf	___flmul@prod+3,f
  9489  0795  1838               	btfsc	___flmul@bexp,0
  9490  0796  17BF               	bsf	___flmul@prod+2,7
  9491  0797  0838               	movf	___flmul@bexp,w
  9492  0798  00B1               	movwf	??___flmul
  9493  0799  1003               	clrc
  9494  079A  0C31               	rrf	??___flmul,w
  9495  079B  00B2               	movwf	??___flmul+1
  9496  079C  0832               	movf	??___flmul+1,w
  9497  079D  00C0               	movwf	___flmul@prod+3
  9498  079E                     l1354:	
  9499  079E  0836               	movf	___flmul@sign,w
  9500  079F  00B1               	movwf	??___flmul
  9501  07A0  0831               	movf	??___flmul,w
  9502  07A1  04C0               	iorwf	___flmul@prod+3,f
  9503  07A2  0840               	movf	___flmul@prod+3,w
  9504  07A3  00AC               	movwf	?___flmul+3
  9505  07A4  083F               	movf	___flmul@prod+2,w
  9506  07A5  00AB               	movwf	?___flmul+2
  9507  07A6  083E               	movf	___flmul@prod+1,w
  9508  07A7  00AA               	movwf	?___flmul+1
  9509  07A8  083D               	movf	___flmul@prod,w
  9510  07A9  00A9               	movwf	?___flmul
  9511  07AA  0008               	return
  9512  07AB                     __end_of___flmul:	
  9513                           
  9514                           	psect	text30
  9515  1B2C                     __ptext30:	
  9516 ;; *************** function __Umul8_16 *****************
  9517 ;; Defined at:
  9518 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  multiplier      1    wreg     unsigned char 
  9521 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9524 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9525 ;;  product         2    4[BANK0 ] unsigned int 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2    0[BANK0 ] unsigned int 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0
  9530 ;; Tracked objects:
  9531 ;;		On entry : 300/0
  9532 ;;		On exit  : 300/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9535 ;;      Params:         0       2       0       0       0
  9536 ;;      Locals:         0       5       0       0       0
  9537 ;;      Temps:          0       2       0       0       0
  9538 ;;      Totals:         0       9       0       0       0
  9539 ;;Total ram usage:        9 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    1
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		___flmul
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           
  9550                           ;psect for function __Umul8_16
  9551  1B2C                     __Umul8_16:	
  9552                           
  9553                           ;incstack = 0
  9554                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9555                           ;__Umul8_16@multiplier stored from wreg
  9556  1B2C  00A8               	movwf	__Umul8_16@multiplier
  9557  1B2D  01A4               	clrf	__Umul8_16@product
  9558  1B2E  01A5               	clrf	__Umul8_16@product+1
  9559  1B2F  0820               	movf	__Umul8_16@multiplicand,w
  9560  1B30  00A2               	movwf	??__Umul8_16
  9561  1B31  01A3               	clrf	??__Umul8_16+1
  9562  1B32  0822               	movf	??__Umul8_16,w
  9563  1B33  00A6               	movwf	__Umul8_16@word_mpld
  9564  1B34  0823               	movf	??__Umul8_16+1,w
  9565  1B35  00A7               	movwf	__Umul8_16@word_mpld+1
  9566  1B36                     l5864:	
  9567  1B36  1C28               	btfss	__Umul8_16@multiplier,0
  9568  1B37  2B3E               	goto	l1450
  9569  1B38  0826               	movf	__Umul8_16@word_mpld,w
  9570  1B39  07A4               	addwf	__Umul8_16@product,f
  9571  1B3A  1803               	skipnc
  9572  1B3B  0AA5               	incf	__Umul8_16@product+1,f
  9573  1B3C  0827               	movf	__Umul8_16@word_mpld+1,w
  9574  1B3D  07A5               	addwf	__Umul8_16@product+1,f
  9575  1B3E                     l1450:	
  9576  1B3E  3001               	movlw	1
  9577  1B3F                     u5675:	
  9578  1B3F  1003               	clrc
  9579  1B40  0DA6               	rlf	__Umul8_16@word_mpld,f
  9580  1B41  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9581  1B42  3EFF               	addlw	-1
  9582  1B43  1D03               	skipz
  9583  1B44  2B3F               	goto	u5675
  9584  1B45  1003               	clrc
  9585  1B46  0CA8               	rrf	__Umul8_16@multiplier,f
  9586  1B47  0828               	movf	__Umul8_16@multiplier,w
  9587  1B48  1D03               	btfss	3,2
  9588  1B49  2B36               	goto	l5864
  9589  1B4A  0825               	movf	__Umul8_16@product+1,w
  9590  1B4B  00A1               	movwf	?__Umul8_16+1
  9591  1B4C  0824               	movf	__Umul8_16@product,w
  9592  1B4D  00A0               	movwf	?__Umul8_16
  9593  1B4E  0008               	return
  9594  1B4F                     __end_of__Umul8_16:	
  9595                           
  9596                           	psect	text31
  9597  1AA8                     __ptext31:	
  9598 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  9599 ;; Defined at:
  9600 ;;		line 278 in file "EEPROM_24C1025.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  chip_add        1    wreg     unsigned char 
  9603 ;;  mem_add         4   46[BANK0 ] unsigned long 
  9604 ;;  data            2   50[BANK0 ] int 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  chip_add        1   53[BANK0 ] unsigned char 
  9607 ;;  local           2   54[BANK0 ] unsigned char [2]
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/300
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9617 ;;      Params:         0       6       0       0       0
  9618 ;;      Locals:         0       3       0       0       0
  9619 ;;      Temps:          0       1       0       0       0
  9620 ;;      Totals:         0      10       0       0       0
  9621 ;;Total ram usage:       10 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    4
  9624 ;; This function calls:
  9625 ;;		_EEPROM_24C1025_Write_Buffer
  9626 ;; This function is called by:
  9627 ;;		_Decodify_Command
  9628 ;;		_Save_Log
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function _EEPROM_24C1025_Write_Int
  9634  1AA8                     _EEPROM_24C1025_Write_Int:	
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9638                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  9639  1AA8  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1AA9  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1AAA  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
  9642                           
  9643                           ;EEPROM_24C1025.c: 279:      char local[2];;EEPROM_24C1025.c: 280:      local[0]=((char 
      +                          *)&data)[1];
  9644  1AAB  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
  9645  1AAC  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9646  1AAD  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9647  1AAE  00D6               	movwf	EEPROM_24C1025_Write_Int@local
  9648                           
  9649                           ;EEPROM_24C1025.c: 281:      local[1]=((char *)&data)[0];
  9650  1AAF  0852               	movf	EEPROM_24C1025_Write_Int@data,w
  9651  1AB0  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9652  1AB1  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9653  1AB2  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
  9654                           
  9655                           ;EEPROM_24C1025.c: 282:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  9656  1AB3  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
  9657  1AB4  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9658  1AB5  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
  9659  1AB6  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9660  1AB7  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
  9661  1AB8  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9662  1AB9  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
  9663  1ABA  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9664  1ABB  3002               	movlw	2
  9665  1ABC  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9666  1ABD  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9667  1ABE  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  9668  1ABF  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  9669  1AC0  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  9670  1AC1  3000               	movlw	0
  9671  1AC2  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9672  1AC3  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
  9673  1AC4  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
  9674  1AC7  0008               	return
  9675  1AC8                     __end_of_EEPROM_24C1025_Write_Int:	
  9676                           
  9677                           	psect	text32
  9678  19CC                     __ptext32:	
  9679 ;; *************** function _PROCULUS_VP_Write_String *****************
  9680 ;; Defined at:
  9681 ;;		line 205 in file "proculus.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  vp              2   58[BANK0 ] unsigned int 
  9684 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9685 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 300/0
  9694 ;;		On exit  : 300/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9697 ;;      Params:         0       3       0       0       0
  9698 ;;      Locals:         0       0       0       0       0
  9699 ;;      Temps:          0       1       0       0       0
  9700 ;;      Totals:         0       4       0       0       0
  9701 ;;Total ram usage:        4 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    4
  9704 ;; This function calls:
  9705 ;;		_PROCULUS_VP_Write
  9706 ;;		_strlen
  9707 ;; This function is called by:
  9708 ;;		_Decodify_Command
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           
  9713                           ;psect for function _PROCULUS_VP_Write_String
  9714  19CC                     _PROCULUS_VP_Write_String:	
  9715                           
  9716                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9717                           
  9718                           ;incstack = 0
  9719                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9720  19CC  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9721  19CD  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9722  19CE  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9723  19CF  00D2               	movwf	PROCULUS_VP_Write@vp
  9724  19D0  085C               	movf	PROCULUS_VP_Write_String@text,w
  9725  19D1  00D4               	movwf	PROCULUS_VP_Write@vetor
  9726  19D2  3001               	movlw	1
  9727  19D3  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9728  19D4  085C               	movf	PROCULUS_VP_Write_String@text,w
  9729  19D5  160A  158A  21FA  160A  158A  	fcall	_strlen
  9730  19DA  0820               	movf	?_strlen,w
  9731  19DB  3E01               	addlw	1
  9732  19DC  00DD               	movwf	??_PROCULUS_VP_Write_String
  9733  19DD  085D               	movf	??_PROCULUS_VP_Write_String,w
  9734  19DE  00D6               	movwf	PROCULUS_VP_Write@size
  9735  19DF  120A  118A  27AB   	fcall	_PROCULUS_VP_Write
  9736  19E2  0008               	return
  9737  19E3                     __end_of_PROCULUS_VP_Write_String:	
  9738                           
  9739                           	psect	text33
  9740  19FA                     __ptext33:	
  9741 ;; *************** function _strlen *****************
  9742 ;; Defined at:
  9743 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  s               1    wreg     PTR const unsigned char 
  9746 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9749 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9750 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9751 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  2    0[BANK0 ] unsigned int 
  9754 ;; Registers used:
  9755 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/300
  9758 ;;		On exit  : B00/800
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9761 ;;      Params:         0       2       0       0       0
  9762 ;;      Locals:         0       2       0       0       0
  9763 ;;      Temps:          0       1       0       0       0
  9764 ;;      Totals:         0       5       0       0       0
  9765 ;;Total ram usage:        5 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_Decodify_Command
  9772 ;;		_PROCULUS_VP_Write_String
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           
  9777                           ;psect for function _strlen
  9778  19FA                     _strlen:	
  9779                           
  9780                           ;incstack = 0
  9781                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9782                           ;strlen@s stored from wreg
  9783  19FA  1283               	bcf	3,5	;RP0=0, select bank0
  9784  19FB  1303               	bcf	3,6	;RP1=0, select bank0
  9785  19FC  00A4               	movwf	strlen@s
  9786  19FD  0824               	movf	strlen@s,w
  9787  19FE  00A2               	movwf	??_strlen
  9788  19FF  0822               	movf	??_strlen,w
  9789  1A00  00A3               	movwf	strlen@cp
  9790  1A01                     l6024:	
  9791  1A01  0823               	movf	strlen@cp,w
  9792  1A02  0084               	movwf	4
  9793  1A03  1783               	bsf	3,7	;select IRP bank2
  9794  1A04  0800               	movf	0,w
  9795  1A05  1903               	btfsc	3,2
  9796  1A06  2A0C               	goto	l6026
  9797  1A07  3001               	movlw	1
  9798  1A08  00A2               	movwf	??_strlen
  9799  1A09  0822               	movf	??_strlen,w
  9800  1A0A  07A3               	addwf	strlen@cp,f
  9801  1A0B  2A01               	goto	l6024
  9802  1A0C                     l6026:	
  9803  1A0C  0824               	movf	strlen@s,w
  9804  1A0D  0223               	subwf	strlen@cp,w
  9805  1A0E  00A0               	movwf	?_strlen
  9806  1A0F  01A1               	clrf	?_strlen+1
  9807  1A10  1BA0               	btfsc	?_strlen,7
  9808  1A11  03A1               	decf	?_strlen+1,f
  9809  1A12  0008               	return
  9810  1A13                     __end_of_strlen:	
  9811                           
  9812                           	psect	text34
  9813  07AB                     __ptext34:	
  9814 ;; *************** function _PROCULUS_VP_Write *****************
  9815 ;; Defined at:
  9816 ;;		line 40 in file "proculus.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  vp              2   50[BANK0 ] unsigned int 
  9819 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9820 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9821 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9822 ;;  size            1   54[BANK0 ] unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  i               1   57[BANK0 ] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : B00/800
  9831 ;;		On exit  : 300/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9834 ;;      Params:         0       5       0       0       0
  9835 ;;      Locals:         0       1       0       0       0
  9836 ;;      Temps:          0       2       0       0       0
  9837 ;;      Totals:         0       8       0       0       0
  9838 ;;Total ram usage:        8 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    3
  9841 ;; This function calls:
  9842 ;;		_PROCULUS_Delay
  9843 ;;		_USART_put_int
  9844 ;;		_USART_putc
  9845 ;; This function is called by:
  9846 ;;		_PROCULUS_VP_Write_String
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           
  9851                           ;psect for function _PROCULUS_VP_Write
  9852  07AB                     _PROCULUS_VP_Write:	
  9853                           
  9854                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9855                           
  9856                           ;incstack = 0
  9857                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9858  07AB  30A5               	movlw	165
  9859  07AC  00CE               	movwf	USART_put_int@value
  9860  07AD  305A               	movlw	90
  9861  07AE  00CF               	movwf	USART_put_int@value+1
  9862  07AF  160A  158A  21B6  120A  118A  	fcall	_USART_put_int
  9863                           
  9864                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9865  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  9866  07B5  0856               	movf	PROCULUS_VP_Write@size,w
  9867  07B6  3E03               	addlw	3
  9868  07B7  160A  158A  217B  120A  118A  	fcall	_USART_putc
  9869                           
  9870                           ;proculus.c: 43:      USART_putc(0x82);
  9871  07BC  3082               	movlw	130
  9872  07BD  160A  158A  217B  120A  118A  	fcall	_USART_putc
  9873                           
  9874                           ;proculus.c: 44:      USART_put_int(vp);
  9875  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  9876  07C3  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9877  07C4  00CF               	movwf	USART_put_int@value+1
  9878  07C5  0852               	movf	PROCULUS_VP_Write@vp,w
  9879  07C6  00CE               	movwf	USART_put_int@value
  9880  07C7  160A  158A  21B6  120A  118A  	fcall	_USART_put_int
  9881                           
  9882                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9883  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  9884  07CD  01D9               	clrf	PROCULUS_VP_Write@i
  9885  07CE                     l6070:	
  9886  07CE  0856               	movf	PROCULUS_VP_Write@size,w
  9887  07CF  0259               	subwf	PROCULUS_VP_Write@i,w
  9888  07D0  1803               	btfsc	3,0
  9889  07D1  2FEA               	goto	l6072
  9890                           
  9891                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9892  07D2  0859               	movf	PROCULUS_VP_Write@i,w
  9893  07D3  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9894  07D4  00D7               	movwf	??_PROCULUS_VP_Write
  9895  07D5  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9896  07D6  1803               	skipnc
  9897  07D7  3E01               	addlw	1
  9898  07D8  00D8               	movwf	??_PROCULUS_VP_Write+1
  9899  07D9  0857               	movf	??_PROCULUS_VP_Write,w
  9900  07DA  0084               	movwf	4
  9901  07DB  1783               	bsf	3,7
  9902  07DC  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9903  07DD  1383               	bcf	3,7
  9904  07DE  0800               	movf	0,w
  9905  07DF  160A  158A  217B  120A  118A  	fcall	_USART_putc
  9906  07E4  3001               	movlw	1
  9907  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  9908  07E6  00D7               	movwf	??_PROCULUS_VP_Write
  9909  07E7  0857               	movf	??_PROCULUS_VP_Write,w
  9910  07E8  07D9               	addwf	PROCULUS_VP_Write@i,f
  9911  07E9  2FCE               	goto	l6070
  9912  07EA                     l6072:	
  9913                           
  9914                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9915  07EA  3001               	movlw	1
  9916  07EB  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9917  07EC  3000               	movlw	0
  9918  07ED  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9919  07EE  160A  158A  222F   	fcall	_PROCULUS_Delay
  9920  07F1  0008               	return
  9921  07F2                     __end_of_PROCULUS_VP_Write:	
  9922                           
  9923                           	psect	text35
  9924  198B                     __ptext35:	
  9925 ;; *************** function _PROCULUS_Show_Screen *****************
  9926 ;; Defined at:
  9927 ;;		line 243 in file "proculus.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  screen          2   54[BANK0 ] unsigned int 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 300/0
  9938 ;;		On exit  : 300/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9941 ;;      Params:         0       2       0       0       0
  9942 ;;      Locals:         0       3       0       0       0
  9943 ;;      Temps:          0       1       0       0       0
  9944 ;;      Totals:         0       6       0       0       0
  9945 ;;Total ram usage:        6 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    4
  9948 ;; This function calls:
  9949 ;;		_PROCULUS_Control_Register_Write
  9950 ;; This function is called by:
  9951 ;;		_Decodify_Command
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _PROCULUS_Show_Screen
  9957  198B                     _PROCULUS_Show_Screen:	
  9958                           
  9959                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9960                           
  9961                           ;incstack = 0
  9962                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9963  198B  3003               	movlw	3
  9964  198C  00D8               	movwf	??_PROCULUS_Show_Screen
  9965  198D  0858               	movf	??_PROCULUS_Show_Screen,w
  9966  198E  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9967                           
  9968                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9969  198F  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9970  1990  00D8               	movwf	??_PROCULUS_Show_Screen
  9971  1991  0858               	movf	??_PROCULUS_Show_Screen,w
  9972  1992  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9973                           
  9974                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9975  1993  0856               	movf	PROCULUS_Show_Screen@screen,w
  9976  1994  00D8               	movwf	??_PROCULUS_Show_Screen
  9977  1995  0858               	movf	??_PROCULUS_Show_Screen,w
  9978  1996  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9979                           
  9980                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9981  1997  3003               	movlw	3
  9982  1998  00D8               	movwf	??_PROCULUS_Show_Screen
  9983  1999  0858               	movf	??_PROCULUS_Show_Screen,w
  9984  199A  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9985  199B  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9986  199C  160A  158A  2548   	fcall	_PROCULUS_Control_Register_Write
  9987  199F  0008               	return
  9988  19A0                     __end_of_PROCULUS_Show_Screen:	
  9989                           
  9990                           	psect	text36
  9991  1B0A                     __ptext36:	
  9992 ;; *************** function _PROCULUS_Buzzer *****************
  9993 ;; Defined at:
  9994 ;;		line 223 in file "proculus.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 300/0
 10005 ;;		On exit  : 300/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10008 ;;      Params:         0       2       0       0       0
 10009 ;;      Locals:         0       2       0       0       0
 10010 ;;      Temps:          0       1       0       0       0
 10011 ;;      Totals:         0       5       0       0       0
 10012 ;;Total ram usage:        5 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    4
 10015 ;; This function calls:
 10016 ;;		_PROCULUS_Control_Register_Write
 10017 ;;		___lwdiv
 10018 ;; This function is called by:
 10019 ;;		_Decodify_Command
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           
 10024                           ;psect for function _PROCULUS_Buzzer
 10025  1B0A                     _PROCULUS_Buzzer:	
 10026                           
 10027                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10031  1B0A  300A               	movlw	10
 10032  1B0B  00A0               	movwf	___lwdiv@divisor
 10033  1B0C  3000               	movlw	0
 10034  1B0D  00A1               	movwf	___lwdiv@divisor+1
 10035  1B0E  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
 10036  1B0F  00A3               	movwf	___lwdiv@dividend+1
 10037  1B10  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10038  1B11  00A2               	movwf	___lwdiv@dividend
 10039  1B12  160A  158A  25F4  160A  158A  	fcall	___lwdiv
 10040  1B17  0821               	movf	?___lwdiv+1,w
 10041  1B18  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
 10042  1B19  0820               	movf	?___lwdiv,w
 10043  1B1A  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
 10044                           
 10045                           ;proculus.c: 226:      vetor[0]=0x02;
 10046  1B1B  3002               	movlw	2
 10047  1B1C  00D8               	movwf	??_PROCULUS_Buzzer
 10048  1B1D  0858               	movf	??_PROCULUS_Buzzer,w
 10049  1B1E  00D9               	movwf	PROCULUS_Buzzer@vetor
 10050                           
 10051                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10052  1B1F  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10053  1B20  00D8               	movwf	??_PROCULUS_Buzzer
 10054  1B21  0858               	movf	??_PROCULUS_Buzzer,w
 10055  1B22  00DA               	movwf	PROCULUS_Buzzer@vetor+1
 10056                           
 10057                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10058  1B23  3002               	movlw	2
 10059  1B24  00D8               	movwf	??_PROCULUS_Buzzer
 10060  1B25  0858               	movf	??_PROCULUS_Buzzer,w
 10061  1B26  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10062  1B27  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10063  1B28  160A  158A  2548   	fcall	_PROCULUS_Control_Register_Write
 10064  1B2B  0008               	return
 10065  1B2C                     __end_of_PROCULUS_Buzzer:	
 10066                           
 10067                           	psect	text37
 10068  1DF4                     __ptext37:	
 10069 ;; *************** function ___lwdiv *****************
 10070 ;; Defined at:
 10071 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  divisor         2    0[BANK0 ] unsigned int 
 10074 ;;  dividend        2    2[BANK0 ] unsigned int 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  quotient        2    6[BANK0 ] unsigned int 
 10077 ;;  counter         1    5[BANK0 ] unsigned char 
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  2    0[BANK0 ] unsigned int 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0
 10082 ;; Tracked objects:
 10083 ;;		On entry : 300/0
 10084 ;;		On exit  : 300/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10087 ;;      Params:         0       4       0       0       0
 10088 ;;      Locals:         0       3       0       0       0
 10089 ;;      Temps:          0       1       0       0       0
 10090 ;;      Totals:         0       8       0       0       0
 10091 ;;Total ram usage:        8 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:    1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_ADC_Media_10bits
 10098 ;;		_PROCULUS_Buzzer
 10099 ;;		_utoa
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           
 10104                           ;psect for function ___lwdiv
 10105  1DF4                     ___lwdiv:	
 10106                           
 10107                           ;incstack = 0
 10108                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10109  1DF4  01A6               	clrf	___lwdiv@quotient
 10110  1DF5  01A7               	clrf	___lwdiv@quotient+1
 10111  1DF6  0820               	movf	___lwdiv@divisor,w
 10112  1DF7  0421               	iorwf	___lwdiv@divisor+1,w
 10113  1DF8  1903               	btfsc	3,2
 10114  1DF9  2E2B               	goto	l5834
 10115  1DFA  01A5               	clrf	___lwdiv@counter
 10116  1DFB  0AA5               	incf	___lwdiv@counter,f
 10117  1DFC                     l5822:	
 10118  1DFC  1BA1               	btfsc	___lwdiv@divisor+1,7
 10119  1DFD  2E0A               	goto	l5824
 10120  1DFE  3001               	movlw	1
 10121  1DFF                     u5545:	
 10122  1DFF  1003               	clrc
 10123  1E00  0DA0               	rlf	___lwdiv@divisor,f
 10124  1E01  0DA1               	rlf	___lwdiv@divisor+1,f
 10125  1E02  3EFF               	addlw	-1
 10126  1E03  1D03               	skipz
 10127  1E04  2DFF               	goto	u5545
 10128  1E05  3001               	movlw	1
 10129  1E06  00A4               	movwf	??___lwdiv
 10130  1E07  0824               	movf	??___lwdiv,w
 10131  1E08  07A5               	addwf	___lwdiv@counter,f
 10132  1E09  2DFC               	goto	l5822
 10133  1E0A                     l5824:	
 10134  1E0A  3001               	movlw	1
 10135  1E0B                     u5565:	
 10136  1E0B  1003               	clrc
 10137  1E0C  0DA6               	rlf	___lwdiv@quotient,f
 10138  1E0D  0DA7               	rlf	___lwdiv@quotient+1,f
 10139  1E0E  3EFF               	addlw	-1
 10140  1E0F  1D03               	skipz
 10141  1E10  2E0B               	goto	u5565
 10142  1E11  0821               	movf	___lwdiv@divisor+1,w
 10143  1E12  0223               	subwf	___lwdiv@dividend+1,w
 10144  1E13  1D03               	skipz
 10145  1E14  2E17               	goto	u5575
 10146  1E15  0820               	movf	___lwdiv@divisor,w
 10147  1E16  0222               	subwf	___lwdiv@dividend,w
 10148  1E17                     u5575:	
 10149  1E17  1C03               	skipc
 10150  1E18  2E20               	goto	l5830
 10151  1E19  0820               	movf	___lwdiv@divisor,w
 10152  1E1A  02A2               	subwf	___lwdiv@dividend,f
 10153  1E1B  0821               	movf	___lwdiv@divisor+1,w
 10154  1E1C  1C03               	skipc
 10155  1E1D  03A3               	decf	___lwdiv@dividend+1,f
 10156  1E1E  02A3               	subwf	___lwdiv@dividend+1,f
 10157  1E1F  1426               	bsf	___lwdiv@quotient,0
 10158  1E20                     l5830:	
 10159  1E20  3001               	movlw	1
 10160  1E21                     u5585:	
 10161  1E21  1003               	clrc
 10162  1E22  0CA1               	rrf	___lwdiv@divisor+1,f
 10163  1E23  0CA0               	rrf	___lwdiv@divisor,f
 10164  1E24  3EFF               	addlw	-1
 10165  1E25  1D03               	skipz
 10166  1E26  2E21               	goto	u5585
 10167  1E27  3001               	movlw	1
 10168  1E28  02A5               	subwf	___lwdiv@counter,f
 10169  1E29  1D03               	btfss	3,2
 10170  1E2A  2E0A               	goto	l5824
 10171  1E2B                     l5834:	
 10172  1E2B  0827               	movf	___lwdiv@quotient+1,w
 10173  1E2C  00A1               	movwf	?___lwdiv+1
 10174  1E2D  0826               	movf	___lwdiv@quotient,w
 10175  1E2E  00A0               	movwf	?___lwdiv
 10176  1E2F  0008               	return
 10177  1E30                     __end_of___lwdiv:	
 10178                           
 10179                           	psect	text38
 10180  1D48                     __ptext38:	
 10181 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10182 ;; Defined at:
 10183 ;;		line 13 in file "proculus.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  vetor           1    wreg     PTR unsigned char 
 10186 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10187 ;;  size            1   50[BANK0 ] unsigned char 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10190 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10191 ;;  i               1   53[BANK0 ] unsigned char 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 300/0
 10198 ;;		On exit  : 300/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10201 ;;      Params:         0       1       0       0       0
 10202 ;;      Locals:         0       2       0       0       0
 10203 ;;      Temps:          0       1       0       0       0
 10204 ;;      Totals:         0       4       0       0       0
 10205 ;;Total ram usage:        4 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:    3
 10208 ;; This function calls:
 10209 ;;		_PROCULUS_Delay
 10210 ;;		_USART_put_int
 10211 ;;		_USART_putc
 10212 ;; This function is called by:
 10213 ;;		_PROCULUS_Buzzer
 10214 ;;		_PROCULUS_Show_Screen
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           
 10219                           ;psect for function _PROCULUS_Control_Register_Write
 10220  1D48                     _PROCULUS_Control_Register_Write:	
 10221                           
 10222                           ;incstack = 0
 10223                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10224                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10225  1D48  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10226                           
 10227                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10228  1D49  30A5               	movlw	165
 10229  1D4A  00CE               	movwf	USART_put_int@value
 10230  1D4B  305A               	movlw	90
 10231  1D4C  00CF               	movwf	USART_put_int@value+1
 10232  1D4D  160A  158A  21B6  160A  158A  	fcall	_USART_put_int
 10233                           
 10234                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10235  1D52  1283               	bcf	3,5	;RP0=0, select bank0
 10236  1D53  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10237  1D54  3E01               	addlw	1
 10238  1D55  160A  158A  217B  160A  158A  	fcall	_USART_putc
 10239                           
 10240                           ;proculus.c: 16:      USART_putc(0x80);
 10241  1D5A  3080               	movlw	128
 10242  1D5B  160A  158A  217B  160A  158A  	fcall	_USART_putc
 10243                           
 10244                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10245  1D60  1283               	bcf	3,5	;RP0=0, select bank0
 10246  1D61  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10247  1D62                     l6054:	
 10248  1D62  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10249  1D63  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10250  1D64  1803               	btfsc	3,0
 10251  1D65  2D78               	goto	l6056
 10252                           
 10253                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10254  1D66  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10255  1D67  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10256  1D68  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10257  1D69  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10258  1D6A  0084               	movwf	4
 10259  1D6B  1383               	bcf	3,7	;select IRP bank0
 10260  1D6C  0800               	movf	0,w
 10261  1D6D  160A  158A  217B  160A  158A  	fcall	_USART_putc
 10262  1D72  3001               	movlw	1
 10263  1D73  1283               	bcf	3,5	;RP0=0, select bank0
 10264  1D74  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10265  1D75  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10266  1D76  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10267  1D77  2D62               	goto	l6054
 10268  1D78                     l6056:	
 10269                           
 10270                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10271  1D78  3001               	movlw	1
 10272  1D79  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10273  1D7A  3000               	movlw	0
 10274  1D7B  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10275  1D7C  160A  158A  222F   	fcall	_PROCULUS_Delay
 10276  1D7F  0008               	return
 10277  1D80                     __end_of_PROCULUS_Control_Register_Write:	
 10278                           
 10279                           	psect	text39
 10280  19B6                     __ptext39:	
 10281 ;; *************** function _USART_put_int *****************
 10282 ;; Defined at:
 10283 ;;		line 138 in file "usart.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  value           2   46[BANK0 ] int 
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10288 ;;		 -> USART_put_int@value(2), 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 300/0
 10295 ;;		On exit  : 300/100
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10298 ;;      Params:         0       2       0       0       0
 10299 ;;      Locals:         0       1       0       0       0
 10300 ;;      Temps:          0       1       0       0       0
 10301 ;;      Totals:         0       4       0       0       0
 10302 ;;Total ram usage:        4 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; Hardware stack levels required when called:    2
 10305 ;; This function calls:
 10306 ;;		_USART_putc
 10307 ;; This function is called by:
 10308 ;;		_Decodify_Command
 10309 ;;		_PROCULUS_Control_Register_Write
 10310 ;;		_PROCULUS_VP_Write
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _USART_put_int
 10316  19B6                     _USART_put_int:	
 10317                           
 10318                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10319                           
 10320                           ;incstack = 0
 10321                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10322  19B6  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10323  19B7  00D0               	movwf	??_USART_put_int
 10324  19B8  0850               	movf	??_USART_put_int,w
 10325  19B9  00D1               	movwf	USART_put_int@dado
 10326                           
 10327                           ;usart.c: 141:      USART_putc(*(dado+1));
 10328  19BA  0A51               	incf	USART_put_int@dado,w
 10329  19BB  0084               	movwf	4
 10330  19BC  1383               	bcf	3,7	;select IRP bank0
 10331  19BD  0800               	movf	0,w
 10332  19BE  160A  158A  217B  160A  158A  	fcall	_USART_putc
 10333                           
 10334                           ;usart.c: 142:      USART_putc(*dado);
 10335  19C3  1283               	bcf	3,5	;RP0=0, select bank0
 10336  19C4  0851               	movf	USART_put_int@dado,w
 10337  19C5  0084               	movwf	4
 10338  19C6  1383               	bcf	3,7	;select IRP bank0
 10339  19C7  0800               	movf	0,w
 10340  19C8  160A  158A  217B   	fcall	_USART_putc
 10341  19CB  0008               	return
 10342  19CC                     __end_of_USART_put_int:	
 10343                           
 10344                           	psect	text40
 10345  197B                     __ptext40:	
 10346 ;; *************** function _USART_putc *****************
 10347 ;; Defined at:
 10348 ;;		line 89 in file "usart.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  value           1    wreg     unsigned char 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;  value           1    0[BANK0 ] unsigned char 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		wreg
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/100
 10359 ;;		On exit  : 300/100
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10362 ;;      Params:         0       0       0       0       0
 10363 ;;      Locals:         0       1       0       0       0
 10364 ;;      Temps:          0       0       0       0       0
 10365 ;;      Totals:         0       1       0       0       0
 10366 ;;Total ram usage:        1 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:    1
 10369 ;; This function calls:
 10370 ;;		Nothing
 10371 ;; This function is called by:
 10372 ;;		_Decodify_Command
 10373 ;;		_Send_To_MB
 10374 ;;		_PROCULUS_Control_Register_Write
 10375 ;;		_PROCULUS_VP_Write
 10376 ;;		_USART_put_buffer
 10377 ;;		_USART_put_int
 10378 ;;		_USART_put_string
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _USART_putc
 10384  197B                     _USART_putc:	
 10385                           
 10386                           ;incstack = 0
 10387                           ; Regs used in _USART_putc: [wreg]
 10388                           ;USART_putc@value stored from wreg
 10389  197B  1283               	bcf	3,5	;RP0=0, select bank0
 10390  197C  1303               	bcf	3,6	;RP1=0, select bank0
 10391  197D  00A0               	movwf	USART_putc@value
 10392                           
 10393                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10394  197E  3014               	movlw	20
 10395  197F  1683               	bsf	3,5	;RP0=1, select bank1
 10396  1980  00E1               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10397  1981  3000               	movlw	0
 10398  1982  00E2               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10399  1983                     l741:	
 10400                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10401                           
 10402  1983  1C98               	btfss	24,1	;volatile
 10403  1984  2983               	goto	l741
 10404                           
 10405                           ;usart.c: 93:     TXREG=value;
 10406  1985  1283               	bcf	3,5	;RP0=0, select bank0
 10407  1986  0820               	movf	USART_putc@value,w
 10408  1987  0099               	movwf	25	;volatile
 10409                           
 10410                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10411  1988  1683               	bsf	3,5	;RP0=1, select bank1
 10412  1989  1698               	bsf	24,5	;volatile
 10413  198A  0008               	return
 10414  198B                     __end_of_USART_putc:	
 10415                           
 10416                           	psect	text41
 10417  1A2F                     __ptext41:	
 10418 ;; *************** function _PROCULUS_Delay *****************
 10419 ;; Defined at:
 10420 ;;		line 267 in file "proculus.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  i               2    4[BANK0 ] unsigned int 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2
 10429 ;; Tracked objects:
 10430 ;;		On entry : 300/800
 10431 ;;		On exit  : 300/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10434 ;;      Params:         0       2       0       0       0
 10435 ;;      Locals:         0       2       0       0       0
 10436 ;;      Temps:          0       2       0       0       0
 10437 ;;      Totals:         0       6       0       0       0
 10438 ;;Total ram usage:        6 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    1
 10441 ;; This function calls:
 10442 ;;		Nothing
 10443 ;; This function is called by:
 10444 ;;		_PROCULUS_Control_Register_Write
 10445 ;;		_PROCULUS_VP_Write
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           
 10450                           ;psect for function _PROCULUS_Delay
 10451  1A2F                     _PROCULUS_Delay:	
 10452                           
 10453                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10454                           
 10455                           ;incstack = 0
 10456                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10457  1A2F  01A4               	clrf	PROCULUS_Delay@i
 10458  1A30  01A5               	clrf	PROCULUS_Delay@i+1
 10459  1A31                     l661:	
 10460  1A31  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10461  1A32  0225               	subwf	PROCULUS_Delay@i+1,w
 10462  1A33  1D03               	skipz
 10463  1A34  2A37               	goto	u5525
 10464  1A35  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10465  1A36  0224               	subwf	PROCULUS_Delay@i,w
 10466  1A37                     u5525:	
 10467  1A37  1803               	btfsc	3,0
 10468  1A38  0008               	return
 10469                           
 10470                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10471  1A39  3003               	movlw	3
 10472  1A3A  1283               	bcf	3,5	;RP0=0, select bank0
 10473  1A3B  1303               	bcf	3,6	;RP1=0, select bank0
 10474  1A3C  00A3               	movwf	??_PROCULUS_Delay+1
 10475  1A3D  3097               	movlw	151
 10476  1A3E  00A2               	movwf	??_PROCULUS_Delay
 10477  1A3F                     u8027:	
 10478  1A3F  0BA2               	decfsz	??_PROCULUS_Delay,f
 10479  1A40  2A3F               	goto	u8027
 10480  1A41  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10481  1A42  2A3F               	goto	u8027
 10482                           
 10483                           ;proculus.c: 270:     }
 10484  1A43  3001               	movlw	1
 10485  1A44  1283               	bcf	3,5	;RP0=0, select bank0
 10486  1A45  1303               	bcf	3,6	;RP1=0, select bank0
 10487  1A46  07A4               	addwf	PROCULUS_Delay@i,f
 10488  1A47  1803               	skipnc
 10489  1A48  0AA5               	incf	PROCULUS_Delay@i+1,f
 10490  1A49  3000               	movlw	0
 10491  1A4A  07A5               	addwf	PROCULUS_Delay@i+1,f
 10492  1A4B  2A31               	goto	l661
 10493  1A4C                     __end_of_PROCULUS_Delay:	
 10494                           
 10495                           	psect	text42
 10496  1BC5                     __ptext42:	
 10497 ;; *************** function _EEPROM_Write_String *****************
 10498 ;; Defined at:
 10499 ;;		line 97 in file "eeprom.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  addr            1    wreg     unsigned char 
 10502 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10503 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  addr            1    7[BANK0 ] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 300/300
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10515 ;;      Params:         0       1       0       0       0
 10516 ;;      Locals:         0       1       0       0       0
 10517 ;;      Temps:          0       1       0       0       0
 10518 ;;      Totals:         0       3       0       0       0
 10519 ;;Total ram usage:        3 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    2
 10522 ;; This function calls:
 10523 ;;		_EEPROM_Write_Byte
 10524 ;; This function is called by:
 10525 ;;		_Decodify_Command
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _EEPROM_Write_String
 10531  1BC5                     _EEPROM_Write_String:	
 10532                           
 10533                           ;incstack = 0
 10534                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10535                           ;EEPROM_Write_String@addr stored from wreg
 10536  1BC5  1283               	bcf	3,5	;RP0=0, select bank0
 10537  1BC6  1303               	bcf	3,6	;RP1=0, select bank0
 10538  1BC7  00A7               	movwf	EEPROM_Write_String@addr
 10539  1BC8                     l6596:	
 10540                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10541                           
 10542                           
 10543                           ;eeprom.c: 99:     while(*dado)
 10544  1BC8  0825               	movf	EEPROM_Write_String@dado,w
 10545  1BC9  0084               	movwf	4
 10546  1BCA  1783               	bsf	3,7	;select IRP bank2
 10547  1BCB  0800               	movf	0,w
 10548  1BCC  1903               	btfsc	3,2
 10549  1BCD  2BE5               	goto	l6598
 10550                           
 10551                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10552  1BCE  0825               	movf	EEPROM_Write_String@dado,w
 10553  1BCF  0084               	movwf	4
 10554  1BD0  0800               	movf	0,w
 10555  1BD1  00A6               	movwf	??_EEPROM_Write_String
 10556  1BD2  0826               	movf	??_EEPROM_Write_String,w
 10557  1BD3  00A0               	movwf	EEPROM_Write_Byte@dado
 10558  1BD4  0827               	movf	EEPROM_Write_String@addr,w
 10559  1BD5  160A  158A  25B8  160A  158A  	fcall	_EEPROM_Write_Byte
 10560                           
 10561                           ;eeprom.c: 102:      addr++;
 10562  1BDA  3001               	movlw	1
 10563  1BDB  1283               	bcf	3,5	;RP0=0, select bank0
 10564  1BDC  1303               	bcf	3,6	;RP1=0, select bank0
 10565  1BDD  00A6               	movwf	??_EEPROM_Write_String
 10566  1BDE  0826               	movf	??_EEPROM_Write_String,w
 10567  1BDF  07A7               	addwf	EEPROM_Write_String@addr,f
 10568                           
 10569                           ;eeprom.c: 103:      dado++;
 10570  1BE0  3001               	movlw	1
 10571  1BE1  00A6               	movwf	??_EEPROM_Write_String
 10572  1BE2  0826               	movf	??_EEPROM_Write_String,w
 10573  1BE3  07A5               	addwf	EEPROM_Write_String@dado,f
 10574  1BE4  2BC8               	goto	l6596
 10575  1BE5                     l6598:	
 10576                           
 10577                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10578  1BE5  0825               	movf	EEPROM_Write_String@dado,w
 10579  1BE6  0084               	movwf	4
 10580  1BE7  0800               	movf	0,w
 10581  1BE8  00A6               	movwf	??_EEPROM_Write_String
 10582  1BE9  0826               	movf	??_EEPROM_Write_String,w
 10583  1BEA  00A0               	movwf	EEPROM_Write_Byte@dado
 10584  1BEB  0827               	movf	EEPROM_Write_String@addr,w
 10585  1BEC  160A  158A  25B8   	fcall	_EEPROM_Write_Byte
 10586  1BEF  0008               	return
 10587  1BF0                     __end_of_EEPROM_Write_String:	
 10588                           
 10589                           	psect	text43
 10590  1C7A                     __ptext43:	
 10591 ;; *************** function _EEPROM_Write_Integer *****************
 10592 ;; Defined at:
 10593 ;;		line 68 in file "eeprom.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  addr            1    wreg     unsigned char 
 10596 ;;  dado            2    5[BANK0 ] unsigned int 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;  addr            1   11[BANK0 ] unsigned char 
 10599 ;;  i               1   12[BANK0 ] unsigned char 
 10600 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10601 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10602 ;;  addr_memo       1    0        unsigned char 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 200/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10612 ;;      Params:         0       2       0       0       0
 10613 ;;      Locals:         0       4       0       0       0
 10614 ;;      Temps:          0       2       0       0       0
 10615 ;;      Totals:         0       8       0       0       0
 10616 ;;Total ram usage:        8 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    2
 10619 ;; This function calls:
 10620 ;;		_EEPROM_Write_Byte
 10621 ;; This function is called by:
 10622 ;;		_main
 10623 ;;		_Decodify_Command
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           
 10628                           ;psect for function _EEPROM_Write_Integer
 10629  1C7A                     _EEPROM_Write_Integer:	
 10630                           
 10631                           ;incstack = 0
 10632                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10633                           ;EEPROM_Write_Integer@addr stored from wreg
 10634  1C7A  1283               	bcf	3,5	;RP0=0, select bank0
 10635  1C7B  00AB               	movwf	EEPROM_Write_Integer@addr
 10636                           
 10637                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10638  1C7C  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10639  1C7D  00A7               	movwf	??_EEPROM_Write_Integer
 10640  1C7E  0827               	movf	??_EEPROM_Write_Integer,w
 10641  1C7F  00AA               	movwf	EEPROM_Write_Integer@ptr
 10642                           
 10643                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10644  1C80  01AC               	clrf	EEPROM_Write_Integer@i
 10645  1C81                     l6550:	
 10646                           
 10647                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10648  1C81  082A               	movf	EEPROM_Write_Integer@ptr,w
 10649  1C82  0084               	movwf	4
 10650  1C83  1383               	bcf	3,7	;select IRP bank0
 10651  1C84  0800               	movf	0,w
 10652  1C85  00A7               	movwf	??_EEPROM_Write_Integer
 10653  1C86  0827               	movf	??_EEPROM_Write_Integer,w
 10654  1C87  00A0               	movwf	EEPROM_Write_Byte@dado
 10655  1C88  082B               	movf	EEPROM_Write_Integer@addr,w
 10656  1C89  160A  158A  25B8  160A  158A  	fcall	_EEPROM_Write_Byte
 10657  1C8E  3001               	movlw	1
 10658  1C8F  1283               	bcf	3,5	;RP0=0, select bank0
 10659  1C90  1303               	bcf	3,6	;RP1=0, select bank0
 10660  1C91  00A7               	movwf	??_EEPROM_Write_Integer
 10661  1C92  0827               	movf	??_EEPROM_Write_Integer,w
 10662  1C93  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10663  1C94  3001               	movlw	1
 10664  1C95  00A7               	movwf	??_EEPROM_Write_Integer
 10665  1C96  0827               	movf	??_EEPROM_Write_Integer,w
 10666  1C97  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10667  1C98  3001               	movlw	1
 10668  1C99  00A7               	movwf	??_EEPROM_Write_Integer
 10669  1C9A  0827               	movf	??_EEPROM_Write_Integer,w
 10670  1C9B  07AC               	addwf	EEPROM_Write_Integer@i,f
 10671  1C9C  3002               	movlw	2
 10672  1C9D  022C               	subwf	EEPROM_Write_Integer@i,w
 10673  1C9E  1C03               	skipc
 10674  1C9F  2C81               	goto	l6550
 10675                           
 10676                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10677  1CA0  304E               	movlw	78
 10678  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
 10679  1CA2  1303               	bcf	3,6	;RP1=0, select bank0
 10680  1CA3  00A8               	movwf	??_EEPROM_Write_Integer+1
 10681  1CA4  30EA               	movlw	234
 10682  1CA5  00A7               	movwf	??_EEPROM_Write_Integer
 10683  1CA6                     u8037:	
 10684  1CA6  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10685  1CA7  2CA6               	goto	u8037
 10686  1CA8  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10687  1CA9  2CA6               	goto	u8037
 10688  1CAA  0000               	nop
 10689  1CAB  0008               	return
 10690  1CAC                     __end_of_EEPROM_Write_Integer:	
 10691                           
 10692                           	psect	text44
 10693  1DB8                     __ptext44:	
 10694 ;; *************** function _EEPROM_Write_Byte *****************
 10695 ;; Defined at:
 10696 ;;		line 21 in file "eeprom.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;  addr            1    wreg     unsigned char 
 10699 ;;  dado            1    0[BANK0 ] unsigned char 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;  addr            1    3[BANK0 ] unsigned char 
 10702 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		wreg, status,2, status,0
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/300
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10712 ;;      Params:         0       1       0       0       0
 10713 ;;      Locals:         0       2       0       0       0
 10714 ;;      Temps:          0       2       0       0       0
 10715 ;;      Totals:         0       5       0       0       0
 10716 ;;Total ram usage:        5 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    1
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_Decodify_Command
 10723 ;;		_EEPROM_Write_Integer
 10724 ;;		_EEPROM_Write_String
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           
 10729                           ;psect for function _EEPROM_Write_Byte
 10730  1DB8                     _EEPROM_Write_Byte:	
 10731                           
 10732                           ;incstack = 0
 10733                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10734                           ;EEPROM_Write_Byte@addr stored from wreg
 10735  1DB8  1283               	bcf	3,5	;RP0=0, select bank0
 10736  1DB9  1303               	bcf	3,6	;RP1=0, select bank0
 10737  1DBA  00A3               	movwf	EEPROM_Write_Byte@addr
 10738                           
 10739                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10740  1DBB  3014               	movlw	20
 10741  1DBC  00FA               	movwf	_Delay_Led_Memory	;volatile
 10742  1DBD  3000               	movlw	0
 10743  1DBE  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10744  1DBF                     l380:	
 10745                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10746                           
 10747  1DBF  1683               	bsf	3,5	;RP0=1, select bank3
 10748  1DC0  1703               	bsf	3,6	;RP1=1, select bank3
 10749  1DC1  188C               	btfsc	12,1	;volsfr
 10750  1DC2  2DBF               	goto	l380
 10751                           
 10752                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10753  1DC3  1F8B               	btfss	11,7	;volatile
 10754  1DC4  2DCA               	goto	l5888
 10755                           
 10756                           ;eeprom.c: 28:           last_GIE=1;
 10757  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
 10758  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
 10759  1DC7  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10760  1DC8  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10761  1DC9  2DCD               	goto	l5890
 10762  1DCA                     l5888:	
 10763                           
 10764                           ;eeprom.c: 30:           last_GIE=0;
 10765  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
 10766  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
 10767  1DCC  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10768  1DCD                     l5890:	
 10769                           
 10770                           ;eeprom.c: 32:        EEADR=addr;
 10771  1DCD  0823               	movf	EEPROM_Write_Byte@addr,w
 10772  1DCE  1703               	bsf	3,6	;RP1=1, select bank2
 10773  1DCF  008D               	movwf	13	;volatile
 10774                           
 10775                           ;eeprom.c: 33:        EEDATA=dado;
 10776  1DD0  1303               	bcf	3,6	;RP1=0, select bank0
 10777  1DD1  0820               	movf	EEPROM_Write_Byte@dado,w
 10778  1DD2  1703               	bsf	3,6	;RP1=1, select bank2
 10779  1DD3  008C               	movwf	12	;volatile
 10780                           
 10781                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10782  1DD4  1683               	bsf	3,5	;RP0=1, select bank3
 10783  1DD5  138C               	bcf	12,7	;volsfr
 10784                           
 10785                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10786  1DD6  150C               	bsf	12,2	;volsfr
 10787                           
 10788                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10789  1DD7  138B               	bcf	11,7	;volatile
 10790                           
 10791                           ;eeprom.c: 37:        EECON2=0x55;
 10792  1DD8  3055               	movlw	85
 10793  1DD9  008D               	movwf	13	;volsfr
 10794                           
 10795                           ;eeprom.c: 38:        EECON2=0xAA;
 10796  1DDA  30AA               	movlw	170
 10797  1DDB  008D               	movwf	13	;volsfr
 10798                           
 10799                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10800  1DDC  148C               	bsf	12,1	;volsfr
 10801                           
 10802                           ;eeprom.c: 41:        if(last_GIE==1)
 10803  1DDD  1283               	bcf	3,5	;RP0=0, select bank0
 10804  1DDE  1303               	bcf	3,6	;RP1=0, select bank0
 10805  1DDF  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10806  1DE0  1D03               	btfss	3,2
 10807  1DE1  2DE4               	goto	l385
 10808                           
 10809                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10810  1DE2  178B               	bsf	11,7	;volatile
 10811  1DE3  2DE5               	goto	l386
 10812  1DE4                     l385:	
 10813                           ;eeprom.c: 43:        else
 10814                           
 10815                           
 10816                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10817  1DE4  138B               	bcf	11,7	;volatile
 10818  1DE5                     l386:	
 10819                           
 10820                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10821  1DE5  1683               	bsf	3,5	;RP0=1, select bank3
 10822  1DE6  1703               	bsf	3,6	;RP1=1, select bank3
 10823  1DE7  110C               	bcf	12,2	;volsfr
 10824                           
 10825                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10826  1DE8  304E               	movlw	78
 10827  1DE9  1283               	bcf	3,5	;RP0=0, select bank0
 10828  1DEA  1303               	bcf	3,6	;RP1=0, select bank0
 10829  1DEB  00A2               	movwf	??_EEPROM_Write_Byte+1
 10830  1DEC  30EA               	movlw	234
 10831  1DED  00A1               	movwf	??_EEPROM_Write_Byte
 10832  1DEE                     u8047:	
 10833  1DEE  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10834  1DEF  2DEE               	goto	u8047
 10835  1DF0  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10836  1DF1  2DEE               	goto	u8047
 10837  1DF2  0000               	nop
 10838  1DF3  0008               	return
 10839  1DF4                     __end_of_EEPROM_Write_Byte:	
 10840                           
 10841                           	psect	text45
 10842  1A88                     __ptext45:	
 10843 ;; *************** function _EEPROM_Read_String *****************
 10844 ;; Defined at:
 10845 ;;		line 109 in file "eeprom.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  addr            1    wreg     unsigned char 
 10848 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10849 ;;		 -> texto(16), 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  addr            1    5[BANK0 ] unsigned char 
 10852 ;;  c               1    6[BANK0 ] unsigned char 
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 300/300
 10859 ;;		On exit  : B00/800
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10862 ;;      Params:         0       1       0       0       0
 10863 ;;      Locals:         0       2       0       0       0
 10864 ;;      Temps:          0       1       0       0       0
 10865 ;;      Totals:         0       4       0       0       0
 10866 ;;Total ram usage:        4 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    2
 10869 ;; This function calls:
 10870 ;;		_EEPROM_Read_Byte
 10871 ;; This function is called by:
 10872 ;;		_Decodify_Command
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           
 10877                           ;psect for function _EEPROM_Read_String
 10878  1A88                     _EEPROM_Read_String:	
 10879                           
 10880                           ;incstack = 0
 10881                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10882                           ;EEPROM_Read_String@addr stored from wreg
 10883  1A88  1283               	bcf	3,5	;RP0=0, select bank0
 10884  1A89  1303               	bcf	3,6	;RP1=0, select bank0
 10885  1A8A  00A5               	movwf	EEPROM_Read_String@addr
 10886  1A8B                     l412:	
 10887                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10888                           
 10889                           
 10890                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10891  1A8B  0825               	movf	EEPROM_Read_String@addr,w
 10892  1A8C  160A  158A  22E8  160A  158A  	fcall	_EEPROM_Read_Byte
 10893  1A91  1303               	bcf	3,6	;RP1=0, select bank0
 10894  1A92  00A4               	movwf	??_EEPROM_Read_String
 10895  1A93  0824               	movf	??_EEPROM_Read_String,w
 10896  1A94  00A6               	movwf	EEPROM_Read_String@c
 10897  1A95  3001               	movlw	1
 10898  1A96  00A4               	movwf	??_EEPROM_Read_String
 10899  1A97  0824               	movf	??_EEPROM_Read_String,w
 10900  1A98  07A5               	addwf	EEPROM_Read_String@addr,f
 10901                           
 10902                           ;eeprom.c: 114:         *(dado++)=c;
 10903  1A99  0826               	movf	EEPROM_Read_String@c,w
 10904  1A9A  00A4               	movwf	??_EEPROM_Read_String
 10905  1A9B  0823               	movf	EEPROM_Read_String@dado,w
 10906  1A9C  0084               	movwf	4
 10907  1A9D  0824               	movf	??_EEPROM_Read_String,w
 10908  1A9E  1783               	bsf	3,7	;select IRP bank2
 10909  1A9F  0080               	movwf	0
 10910  1AA0  3001               	movlw	1
 10911  1AA1  00A4               	movwf	??_EEPROM_Read_String
 10912  1AA2  0824               	movf	??_EEPROM_Read_String,w
 10913  1AA3  07A3               	addwf	EEPROM_Read_String@dado,f
 10914                           
 10915                           ;eeprom.c: 116:       }while(c);
 10916  1AA4  0826               	movf	EEPROM_Read_String@c,w
 10917  1AA5  1903               	btfsc	3,2
 10918  1AA6  0008               	return
 10919  1AA7  2A8B               	goto	l412
 10920  1AA8                     __end_of_EEPROM_Read_String:	
 10921                           
 10922                           	psect	text46
 10923  1B9B                     __ptext46:	
 10924 ;; *************** function _EEPROM_Read_Integer *****************
 10925 ;; Defined at:
 10926 ;;		line 81 in file "eeprom.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  addr            1    wreg     unsigned char 
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;  addr            1    6[BANK0 ] unsigned char 
 10931 ;;  result          2    8[BANK0 ] unsigned int 
 10932 ;;  i               1   10[BANK0 ] unsigned char 
 10933 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10934 ;;		 -> EEPROM_Read_Integer@result(2), 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  2    3[BANK0 ] unsigned int 
 10937 ;; Registers used:
 10938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : B00/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10944 ;;      Params:         0       2       0       0       0
 10945 ;;      Locals:         0       5       0       0       0
 10946 ;;      Temps:          0       1       0       0       0
 10947 ;;      Totals:         0       8       0       0       0
 10948 ;;Total ram usage:        8 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    2
 10951 ;; This function calls:
 10952 ;;		_EEPROM_Read_Byte
 10953 ;; This function is called by:
 10954 ;;		_main
 10955 ;;		_Decodify_Command
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           
 10960                           ;psect for function _EEPROM_Read_Integer
 10961  1B9B                     _EEPROM_Read_Integer:	
 10962                           
 10963                           ;incstack = 0
 10964                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10965                           ;EEPROM_Read_Integer@addr stored from wreg
 10966  1B9B  1283               	bcf	3,5	;RP0=0, select bank0
 10967  1B9C  1303               	bcf	3,6	;RP1=0, select bank0
 10968  1B9D  00A6               	movwf	EEPROM_Read_Integer@addr
 10969                           
 10970                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10971  1B9E  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10972  1B9F  00A5               	movwf	??_EEPROM_Read_Integer
 10973  1BA0  0825               	movf	??_EEPROM_Read_Integer,w
 10974  1BA1  00A7               	movwf	EEPROM_Read_Integer@ptr
 10975                           
 10976                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10977  1BA2  01AA               	clrf	EEPROM_Read_Integer@i
 10978  1BA3                     l6526:	
 10979                           
 10980                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10981  1BA3  0826               	movf	EEPROM_Read_Integer@addr,w
 10982  1BA4  160A  158A  22E8  160A  158A  	fcall	_EEPROM_Read_Byte
 10983  1BA9  1303               	bcf	3,6	;RP1=0, select bank0
 10984  1BAA  00A5               	movwf	??_EEPROM_Read_Integer
 10985  1BAB  0827               	movf	EEPROM_Read_Integer@ptr,w
 10986  1BAC  0084               	movwf	4
 10987  1BAD  0825               	movf	??_EEPROM_Read_Integer,w
 10988  1BAE  1383               	bcf	3,7	;select IRP bank0
 10989  1BAF  0080               	movwf	0
 10990  1BB0  3001               	movlw	1
 10991  1BB1  00A5               	movwf	??_EEPROM_Read_Integer
 10992  1BB2  0825               	movf	??_EEPROM_Read_Integer,w
 10993  1BB3  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10994  1BB4  3001               	movlw	1
 10995  1BB5  00A5               	movwf	??_EEPROM_Read_Integer
 10996  1BB6  0825               	movf	??_EEPROM_Read_Integer,w
 10997  1BB7  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10998  1BB8  3001               	movlw	1
 10999  1BB9  00A5               	movwf	??_EEPROM_Read_Integer
 11000  1BBA  0825               	movf	??_EEPROM_Read_Integer,w
 11001  1BBB  07AA               	addwf	EEPROM_Read_Integer@i,f
 11002  1BBC  3002               	movlw	2
 11003  1BBD  022A               	subwf	EEPROM_Read_Integer@i,w
 11004  1BBE  1C03               	skipc
 11005  1BBF  2BA3               	goto	l6526
 11006                           
 11007                           ;eeprom.c: 89:       return result;
 11008  1BC0  0829               	movf	EEPROM_Read_Integer@result+1,w
 11009  1BC1  00A4               	movwf	?_EEPROM_Read_Integer+1
 11010  1BC2  0828               	movf	EEPROM_Read_Integer@result,w
 11011  1BC3  00A3               	movwf	?_EEPROM_Read_Integer
 11012  1BC4  0008               	return
 11013  1BC5                     __end_of_EEPROM_Read_Integer:	
 11014                           
 11015                           	psect	text47
 11016  1AE8                     __ptext47:	
 11017 ;; *************** function _EEPROM_Read_Byte *****************
 11018 ;; Defined at:
 11019 ;;		line 52 in file "eeprom.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  addr            1    wreg     unsigned char 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  addr            1    2[BANK0 ] unsigned char 
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  1    wreg      unsigned char 
 11026 ;; Registers used:
 11027 ;;		wreg
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/300
 11030 ;;		On exit  : 300/200
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11033 ;;      Params:         0       0       0       0       0
 11034 ;;      Locals:         0       1       0       0       0
 11035 ;;      Temps:          0       2       0       0       0
 11036 ;;      Totals:         0       3       0       0       0
 11037 ;;Total ram usage:        3 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    1
 11040 ;; This function calls:
 11041 ;;		Nothing
 11042 ;; This function is called by:
 11043 ;;		_Decodify_Command
 11044 ;;		_EEPROM_Read_Integer
 11045 ;;		_EEPROM_Read_String
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           
 11050                           ;psect for function _EEPROM_Read_Byte
 11051  1AE8                     _EEPROM_Read_Byte:	
 11052                           
 11053                           ;incstack = 0
 11054                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11055                           ;EEPROM_Read_Byte@addr stored from wreg
 11056  1AE8  1283               	bcf	3,5	;RP0=0, select bank0
 11057  1AE9  1303               	bcf	3,6	;RP1=0, select bank0
 11058  1AEA  00A2               	movwf	EEPROM_Read_Byte@addr
 11059                           
 11060                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11061  1AEB  3014               	movlw	20
 11062  1AEC  00FA               	movwf	_Delay_Led_Memory	;volatile
 11063  1AED  3000               	movlw	0
 11064  1AEE  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11065  1AEF                     l390:	
 11066                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11067                           
 11068  1AEF  1683               	bsf	3,5	;RP0=1, select bank3
 11069  1AF0  1703               	bsf	3,6	;RP1=1, select bank3
 11070  1AF1  188C               	btfsc	12,1	;volsfr
 11071  1AF2  2AEF               	goto	l390
 11072                           
 11073                           ;eeprom.c: 57:    EEADR=addr;
 11074  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
 11075  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
 11076  1AF5  0822               	movf	EEPROM_Read_Byte@addr,w
 11077  1AF6  1703               	bsf	3,6	;RP1=1, select bank2
 11078  1AF7  008D               	movwf	13	;volatile
 11079                           
 11080                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11081  1AF8  1683               	bsf	3,5	;RP0=1, select bank3
 11082  1AF9  138C               	bcf	12,7	;volsfr
 11083                           
 11084                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11085  1AFA  140C               	bsf	12,0	;volsfr
 11086                           
 11087                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11088  1AFB  304E               	movlw	78
 11089  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
 11090  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
 11091  1AFE  00A1               	movwf	??_EEPROM_Read_Byte+1
 11092  1AFF  30EA               	movlw	234
 11093  1B00  00A0               	movwf	??_EEPROM_Read_Byte
 11094  1B01                     u8057:	
 11095  1B01  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11096  1B02  2B01               	goto	u8057
 11097  1B03  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11098  1B04  2B01               	goto	u8057
 11099  1B05  0000               	nop
 11100                           
 11101                           ;eeprom.c: 61:    return EEDATA;
 11102  1B06  1283               	bcf	3,5	;RP0=0, select bank2
 11103  1B07  1703               	bsf	3,6	;RP1=1, select bank2
 11104  1B08  080C               	movf	12,w	;volatile
 11105  1B09  0008               	return
 11106  1B0A                     __end_of_EEPROM_Read_Byte:	
 11107                           
 11108                           	psect	text48
 11109  126F                     __ptext48:	
 11110 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11111 ;; Defined at:
 11112 ;;		line 141 in file "EEPROM_24C1025.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  chip_add        1    wreg     unsigned char 
 11115 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11116 ;;  data            1    6[BANK0 ] PTR unsigned char 
 11117 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  chip_add        1    9[BANK0 ] unsigned char 
 11120 ;;  ctrl            1   11[BANK0 ] unsigned char 
 11121 ;;  range           1   10[BANK0 ] unsigned char 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  1    wreg      void 
 11124 ;; Registers used:
 11125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 300/300
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11131 ;;      Params:         0       5       0       0       0
 11132 ;;      Locals:         0       3       0       0       0
 11133 ;;      Temps:          0       2       0       0       0
 11134 ;;      Totals:         0      10       0       0       0
 11135 ;;Total ram usage:       10 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    3
 11138 ;; This function calls:
 11139 ;;		_I2C_Master_Start
 11140 ;;		_I2C_Master_Stop
 11141 ;;		_I2C_Master_Write
 11142 ;; This function is called by:
 11143 ;;		_Decodify_Command
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           
 11148                           ;psect for function _EEPROM_24C1025_Write_Str
 11149  126F                     _EEPROM_24C1025_Write_Str:	
 11150                           
 11151                           ;incstack = 0
 11152                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11153                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11154  126F  1283               	bcf	3,5	;RP0=0, select bank0
 11155  1270  1303               	bcf	3,6	;RP1=0, select bank0
 11156  1271  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11157                           
 11158                           ;EEPROM_24C1025.c: 143:      unsigned char ctrl;;EEPROM_24C1025.c: 145:      if(mem_add>
      +                          0x1FFFF) return;
 11159  1272  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11160  1273  1D03               	btfss	3,2
 11161  1274  0008               	return
 11162  1275  3002               	movlw	2
 11163  1276  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11164  1277  1D03               	skipz
 11165  1278  2A81               	goto	u7003
 11166  1279  3000               	movlw	0
 11167  127A  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11168  127B  1D03               	skipz
 11169  127C  2A81               	goto	u7003
 11170  127D  3000               	movlw	0
 11171  127E  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11172  127F  1D03               	skipz
 11173  1280  2A81               	goto	u7003
 11174  1281                     u7003:	
 11175  1281  1803               	btfsc	3,0
 11176  1282  0008               	return
 11177  1283                     L10:	
 11178                           
 11179                           ;EEPROM_24C1025.c: 147:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11180  1283  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11181  1284  1D03               	btfss	3,2
 11182  1285  2A94               	goto	l6644
 11183  1286  3001               	movlw	1
 11184  1287  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11185  1288  1D03               	skipz
 11186  1289  2A92               	goto	u7013
 11187  128A  3000               	movlw	0
 11188  128B  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11189  128C  1D03               	skipz
 11190  128D  2A92               	goto	u7013
 11191  128E  3000               	movlw	0
 11192  128F  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11193  1290  1D03               	skipz
 11194  1291  2A92               	goto	u7013
 11195  1292                     u7013:	
 11196  1292  1C03               	btfss	3,0
 11197  1293  2A99               	goto	l6646
 11198  1294                     l6644:	
 11199  1294  3008               	movlw	8
 11200  1295  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11201  1296  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11202  1297  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 11203  1298  2A9A               	goto	l6648
 11204  1299                     l6646:	
 11205  1299  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 11206  129A                     l6648:	
 11207                           
 11208                           ;EEPROM_24C1025.c: 148:      ctrl=chip_add;
 11209  129A  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11210  129B  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11211  129C  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11212  129D  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11213                           
 11214                           ;EEPROM_24C1025.c: 149:      ctrl<<=1;
 11215  129E  1003               	clrc
 11216  129F  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11217                           
 11218                           ;EEPROM_24C1025.c: 150:      ctrl |= 0xA0;
 11219  12A0  30A0               	movlw	160
 11220  12A1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11221  12A2  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11222  12A3  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11223                           
 11224                           ;EEPROM_24C1025.c: 151:      ctrl |= range;
 11225  12A4  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 11226  12A5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11227  12A6  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11228  12A7  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11229                           
 11230                           ;EEPROM_24C1025.c: 153:      I2C_Master_Start();
 11231  12A8  160A  158A  2156  160A  118A  	fcall	_I2C_Master_Start
 11232                           
 11233                           ;EEPROM_24C1025.c: 154:      I2C_Master_Write(ctrl);
 11234  12AD  1283               	bcf	3,5	;RP0=0, select bank0
 11235  12AE  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11236  12AF  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11237  12B0  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11238  12B1  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11239  12B2  00A0               	movwf	I2C_Master_Write@d
 11240  12B3  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11241  12B4  00A1               	movwf	I2C_Master_Write@d+1
 11242  12B5  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11243                           
 11244                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(((char *)&mem_add)[1]);
 11245  12BA  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11246  12BB  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11247  12BC  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11248  12BD  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11249  12BE  00A0               	movwf	I2C_Master_Write@d
 11250  12BF  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11251  12C0  00A1               	movwf	I2C_Master_Write@d+1
 11252  12C1  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11253                           
 11254                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[0]);
 11255  12C6  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11256  12C7  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11257  12C8  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11258  12C9  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11259  12CA  00A0               	movwf	I2C_Master_Write@d
 11260  12CB  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11261  12CC  00A1               	movwf	I2C_Master_Write@d+1
 11262  12CD  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11263  12D2                     l6708:	
 11264                           ;EEPROM_24C1025.c: 157:      while(*data)
 11265                           
 11266                           
 11267                           ;EEPROM_24C1025.c: 157:      while(*data)
 11268  12D2  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11269  12D3  0084               	movwf	4
 11270  12D4  1783               	bsf	3,7	;select IRP bank2
 11271  12D5  0800               	movf	0,w
 11272  12D6  1903               	btfsc	3,2
 11273  12D7  2B41               	goto	l6710
 11274                           
 11275                           ;EEPROM_24C1025.c: 158:           {;EEPROM_24C1025.c: 159:           if(mem_add>0x1FFFF)
      +                           return;
 11276  12D8  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11277  12D9  1D03               	btfss	3,2
 11278  12DA  0008               	return
 11279  12DB  3002               	movlw	2
 11280  12DC  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11281  12DD  1D03               	skipz
 11282  12DE  2AE7               	goto	u7023
 11283  12DF  3000               	movlw	0
 11284  12E0  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11285  12E1  1D03               	skipz
 11286  12E2  2AE7               	goto	u7023
 11287  12E3  3000               	movlw	0
 11288  12E4  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11289  12E5  1D03               	skipz
 11290  12E6  2AE7               	goto	u7023
 11291  12E7                     u7023:	
 11292  12E7  1803               	btfsc	3,0
 11293  12E8  0008               	return
 11294                           
 11295                           ;EEPROM_24C1025.c: 160:           if((mem_add+1)%128==0)
 11296  12E9  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11297  12EA  3E01               	addlw	1
 11298  12EB  397F               	andlw	127
 11299  12EC  1D03               	btfss	3,2
 11300  12ED  2B20               	goto	l6702
 11301                           
 11302                           ;EEPROM_24C1025.c: 161:             {;EEPROM_24C1025.c: 162:             I2C_Master_Writ
      +                          e(*data);
 11303  12EE  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11304  12EF  0084               	movwf	4
 11305  12F0  0800               	movf	0,w
 11306  12F1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11307  12F2  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11308  12F3  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11309  12F4  00A0               	movwf	I2C_Master_Write@d
 11310  12F5  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11311  12F6  00A1               	movwf	I2C_Master_Write@d+1
 11312  12F7  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11313                           
 11314                           ;EEPROM_24C1025.c: 163:             I2C_Master_Stop();
 11315  12FC  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 11316                           
 11317                           ;EEPROM_24C1025.c: 165:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11318  1301  300D               	movlw	13
 11319  1302  1283               	bcf	3,5	;RP0=0, select bank0
 11320  1303  1303               	bcf	3,6	;RP1=0, select bank0
 11321  1304  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11322  1305  30FB               	movlw	251
 11323  1306  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11324  1307                     u8067:	
 11325  1307  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11326  1308  2B07               	goto	u8067
 11327  1309  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11328  130A  2B07               	goto	u8067
 11329                           
 11330                           ;EEPROM_24C1025.c: 166:             mem_add++;
 11331  130B  3001               	movlw	1
 11332  130C  1283               	bcf	3,5	;RP0=0, select bank0
 11333  130D  1303               	bcf	3,6	;RP1=0, select bank0
 11334  130E  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11335  130F  3000               	movlw	0
 11336  1310  1803               	skipnc
 11337  1311  3001               	movlw	1
 11338  1312  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11339  1313  3000               	movlw	0
 11340  1314  1803               	skipnc
 11341  1315  3001               	movlw	1
 11342  1316  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11343  1317  3000               	movlw	0
 11344  1318  1803               	skipnc
 11345  1319  3001               	movlw	1
 11346  131A  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11347                           
 11348                           ;EEPROM_24C1025.c: 167:             data++;
 11349  131B  3001               	movlw	1
 11350  131C  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11351  131D  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11352  131E  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11353  131F  2A83               	goto	L10
 11354  1320                     l6702:	
 11355                           ;EEPROM_24C1025.c: 168:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11356                           
 11357                           
 11358                           ;EEPROM_24C1025.c: 180:             {;EEPROM_24C1025.c: 181:             I2C_Master_Writ
      +                          e(*data);
 11359  1320  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11360  1321  0084               	movwf	4
 11361  1322  0800               	movf	0,w
 11362  1323  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11363  1324  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11364  1325  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11365  1326  00A0               	movwf	I2C_Master_Write@d
 11366  1327  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11367  1328  00A1               	movwf	I2C_Master_Write@d+1
 11368  1329  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11369                           
 11370                           ;EEPROM_24C1025.c: 182:             data++;
 11371  132E  3001               	movlw	1
 11372  132F  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11373  1330  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11374  1331  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11375                           
 11376                           ;EEPROM_24C1025.c: 183:             mem_add++;
 11377  1332  3001               	movlw	1
 11378  1333  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11379  1334  3000               	movlw	0
 11380  1335  1803               	skipnc
 11381  1336  3001               	movlw	1
 11382  1337  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11383  1338  3000               	movlw	0
 11384  1339  1803               	skipnc
 11385  133A  3001               	movlw	1
 11386  133B  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11387  133C  3000               	movlw	0
 11388  133D  1803               	skipnc
 11389  133E  3001               	movlw	1
 11390  133F  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11391  1340  2AD2               	goto	l6708
 11392  1341                     l6710:	
 11393                           
 11394                           ;EEPROM_24C1025.c: 186:      I2C_Master_Write(0);
 11395  1341  3000               	movlw	0
 11396  1342  00A0               	movwf	I2C_Master_Write@d
 11397  1343  00A1               	movwf	I2C_Master_Write@d+1
 11398  1344  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11399                           
 11400                           ;EEPROM_24C1025.c: 187:      I2C_Master_Stop();
 11401  1349  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 11402                           
 11403                           ;EEPROM_24C1025.c: 188:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11404  134E  30B9               	movlw	185
 11405  134F  1283               	bcf	3,5	;RP0=0, select bank0
 11406  1350  1303               	bcf	3,6	;RP1=0, select bank0
 11407  1351  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11408  1352                     u8077:	
 11409  1352  2B53               	nop2
 11410  1353  2B54               	nop2
 11411  1354  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11412  1355  2B52               	goto	u8077
 11413  1356  2B57               	nop2
 11414  1357  0008               	return
 11415  1358                     __end_of_EEPROM_24C1025_Write_Str:	
 11416                           
 11417                           	psect	text49
 11418  19A0                     __ptext49:	
 11419 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11420 ;; Defined at:
 11421 ;;		line 267 in file "EEPROM_24C1025.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  chip_add        1    wreg     unsigned char 
 11424 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11425 ;;  data            1   19[BANK0 ] PTR unsigned char 
 11426 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 300/300
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11438 ;;      Params:         0       5       0       0       0
 11439 ;;      Locals:         0       1       0       0       0
 11440 ;;      Temps:          0       0       0       0       0
 11441 ;;      Totals:         0       6       0       0       0
 11442 ;;Total ram usage:        6 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:    4
 11445 ;; This function calls:
 11446 ;;		_EEPROM_24C1025_Write_Buffer
 11447 ;; This function is called by:
 11448 ;;		_Decodify_Command
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           
 11453                           ;psect for function _EEPROM_24C1025_Write_Byte
 11454  19A0                     _EEPROM_24C1025_Write_Byte:	
 11455                           
 11456                           ;incstack = 0
 11457                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11458                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11459  19A0  1283               	bcf	3,5	;RP0=0, select bank0
 11460  19A1  1303               	bcf	3,6	;RP1=0, select bank0
 11461  19A2  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11462                           
 11463                           ;EEPROM_24C1025.c: 268:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, data);
 11464  19A3  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11465  19A4  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11466  19A5  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11467  19A6  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11468  19A7  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11469  19A8  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11470  19A9  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11471  19AA  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11472  19AB  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11473  19AC  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11474  19AD  0833               	movf	EEPROM_24C1025_Write_Byte@data,w
 11475  19AE  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11476  19AF  3001               	movlw	1
 11477  19B0  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11478  19B1  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11479  19B2  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
 11480  19B5  0008               	return
 11481  19B6                     __end_of_EEPROM_24C1025_Write_Byte:	
 11482                           
 11483                           	psect	text50
 11484  1694                     __ptext50:	
 11485 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11486 ;; Defined at:
 11487 ;;		line 195 in file "EEPROM_24C1025.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  chip_add        1    wreg     unsigned char 
 11490 ;;  mem_add         4    6[BANK0 ] unsigned long 
 11491 ;;  texto           1   10[BANK0 ] PTR unsigned char 
 11492 ;;		 -> texto(16), 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11495 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11496 ;;  range           1   15[BANK0 ] unsigned char 
 11497 ;;  cnt             1   13[BANK0 ] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 300/300
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11507 ;;      Params:         0       5       0       0       0
 11508 ;;      Locals:         0       4       0       0       0
 11509 ;;      Temps:          0       2       0       0       0
 11510 ;;      Totals:         0      11       0       0       0
 11511 ;;Total ram usage:       11 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    3
 11514 ;; This function calls:
 11515 ;;		_I2C_Master_Read
 11516 ;;		_I2C_Master_RepeatedStart
 11517 ;;		_I2C_Master_Start
 11518 ;;		_I2C_Master_Stop
 11519 ;;		_I2C_Master_Write
 11520 ;; This function is called by:
 11521 ;;		_Decodify_Command
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           
 11526                           ;psect for function _EEPROM_24C1025_Read_Str
 11527  1694                     _EEPROM_24C1025_Read_Str:	
 11528                           
 11529                           ;incstack = 0
 11530                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11531                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11532  1694  1283               	bcf	3,5	;RP0=0, select bank0
 11533  1695  1303               	bcf	3,6	;RP1=0, select bank0
 11534  1696  00AE               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11535                           
 11536                           ;EEPROM_24C1025.c: 197:      unsigned char range=0;
 11537  1697  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11538                           
 11539                           ;EEPROM_24C1025.c: 198:      unsigned char ctrl;;EEPROM_24C1025.c: 200:      if(mem_add>
      +                          0x1FFFF) return;
 11540  1698  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11541  1699  1D03               	btfss	3,2
 11542  169A  0008               	return
 11543  169B  3002               	movlw	2
 11544  169C  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11545  169D  1D03               	skipz
 11546  169E  2EA7               	goto	u7063
 11547  169F  3000               	movlw	0
 11548  16A0  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11549  16A1  1D03               	skipz
 11550  16A2  2EA7               	goto	u7063
 11551  16A3  3000               	movlw	0
 11552  16A4  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11553  16A5  1D03               	skipz
 11554  16A6  2EA7               	goto	u7063
 11555  16A7                     u7063:	
 11556  16A7  1803               	btfsc	3,0
 11557  16A8  0008               	return
 11558                           
 11559                           ;EEPROM_24C1025.c: 202:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11560  16A9  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11561  16AA  1D03               	btfss	3,2
 11562  16AB  2EBA               	goto	l6722
 11563  16AC  3001               	movlw	1
 11564  16AD  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11565  16AE  1D03               	skipz
 11566  16AF  2EB8               	goto	u7073
 11567  16B0  3000               	movlw	0
 11568  16B1  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11569  16B2  1D03               	skipz
 11570  16B3  2EB8               	goto	u7073
 11571  16B4  3000               	movlw	0
 11572  16B5  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11573  16B6  1D03               	skipz
 11574  16B7  2EB8               	goto	u7073
 11575  16B8                     u7073:	
 11576  16B8  1C03               	btfss	3,0
 11577  16B9  2EBF               	goto	l6724
 11578  16BA                     l6722:	
 11579  16BA  3008               	movlw	8
 11580  16BB  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11581  16BC  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11582  16BD  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11583  16BE  2EC0               	goto	l6726
 11584  16BF                     l6724:	
 11585  16BF  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11586  16C0                     l6726:	
 11587                           
 11588                           ;EEPROM_24C1025.c: 203:      ctrl=chip_add;
 11589  16C0  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11590  16C1  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11591  16C2  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11592  16C3  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11593                           
 11594                           ;EEPROM_24C1025.c: 204:      ctrl<<=1;
 11595  16C4  1003               	clrc
 11596  16C5  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11597                           
 11598                           ;EEPROM_24C1025.c: 205:      ctrl |= 0xA0;
 11599  16C6  30A0               	movlw	160
 11600  16C7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11601  16C8  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11602  16C9  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11603                           
 11604                           ;EEPROM_24C1025.c: 206:      ctrl |= 0b00000001;
 11605  16CA  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11606                           
 11607                           ;EEPROM_24C1025.c: 207:      ctrl |= range;
 11608  16CB  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11609  16CC  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11610  16CD  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11611  16CE  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11612                           
 11613                           ;EEPROM_24C1025.c: 209:      I2C_Master_Start();
 11614  16CF  160A  158A  2156  160A  118A  	fcall	_I2C_Master_Start
 11615                           
 11616                           ;EEPROM_24C1025.c: 210:      I2C_Master_Write(ctrl & 0xFE);
 11617  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11618  16D5  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11619  16D6  39FE               	andlw	254
 11620  16D7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11621  16D8  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11622  16D9  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11623  16DA  00A0               	movwf	I2C_Master_Write@d
 11624  16DB  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11625  16DC  00A1               	movwf	I2C_Master_Write@d+1
 11626  16DD  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11627                           
 11628                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(((char *)&mem_add)[1]);
 11629  16E2  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11630  16E3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11631  16E4  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11632  16E5  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11633  16E6  00A0               	movwf	I2C_Master_Write@d
 11634  16E7  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11635  16E8  00A1               	movwf	I2C_Master_Write@d+1
 11636  16E9  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11637                           
 11638                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[0]);
 11639  16EE  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11640  16EF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11641  16F0  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11642  16F1  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11643  16F2  00A0               	movwf	I2C_Master_Write@d
 11644  16F3  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11645  16F4  00A1               	movwf	I2C_Master_Write@d+1
 11646  16F5  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11647                           
 11648                           ;EEPROM_24C1025.c: 213:      I2C_Master_RepeatedStart();
 11649  16FA  160A  118A  2001  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11650                           
 11651                           ;EEPROM_24C1025.c: 214:      I2C_Master_Write(ctrl);
 11652  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11653  1700  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11654  1701  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11655  1702  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11656  1703  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11657  1704  00A0               	movwf	I2C_Master_Write@d
 11658  1705  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11659  1706  00A1               	movwf	I2C_Master_Write@d+1
 11660  1707  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11661                           
 11662                           ;EEPROM_24C1025.c: 216:      cnt=0;
 11663  170C  01AD               	clrf	EEPROM_24C1025_Read_Str@cnt
 11664  170D                     l6748:	
 11665                           
 11666                           ;EEPROM_24C1025.c: 218:            if(mem_add>0x1FFFF) break;
 11667  170D  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11668  170E  1D03               	btfss	3,2
 11669  170F  2FE9               	goto	l6804
 11670  1710  3002               	movlw	2
 11671  1711  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11672  1712  1D03               	skipz
 11673  1713  2F1C               	goto	u7083
 11674  1714  3000               	movlw	0
 11675  1715  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11676  1716  1D03               	skipz
 11677  1717  2F1C               	goto	u7083
 11678  1718  3000               	movlw	0
 11679  1719  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11680  171A  1D03               	skipz
 11681  171B  2F1C               	goto	u7083
 11682  171C                     u7083:	
 11683  171C  1803               	btfsc	3,0
 11684  171D  2FE9               	goto	l6804
 11685                           
 11686                           ;EEPROM_24C1025.c: 219:            if((mem_add+1)%128==0)
 11687  171E  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11688  171F  3E01               	addlw	1
 11689  1720  397F               	andlw	127
 11690  1721  1D03               	btfss	3,2
 11691  1722  2FB9               	goto	l6792
 11692                           
 11693                           ;EEPROM_24C1025.c: 220:              {;EEPROM_24C1025.c: 221:              (*texto)=I2C_
      +                          Master_Read(0);
 11694  1723  3000               	movlw	0
 11695  1724  00A0               	movwf	I2C_Master_Read@a
 11696  1725  00A1               	movwf	I2C_Master_Read@a+1
 11697  1726  160A  158A  241C  160A  118A  	fcall	_I2C_Master_Read
 11698  172B  0820               	movf	?_I2C_Master_Read,w
 11699  172C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11700  172D  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11701  172E  0084               	movwf	4
 11702  172F  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11703  1730  1783               	bsf	3,7	;select IRP bank2
 11704  1731  0080               	movwf	0
 11705                           
 11706                           ;EEPROM_24C1025.c: 222:              I2C_Master_Stop();
 11707  1732  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 11708                           
 11709                           ;EEPROM_24C1025.c: 224:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11710  1737  300D               	movlw	13
 11711  1738  1283               	bcf	3,5	;RP0=0, select bank0
 11712  1739  1303               	bcf	3,6	;RP1=0, select bank0
 11713  173A  00AC               	movwf	??_EEPROM_24C1025_Read_Str+1
 11714  173B  30FB               	movlw	251
 11715  173C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11716  173D                     u8087:	
 11717  173D  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11718  173E  2F3D               	goto	u8087
 11719  173F  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11720  1740  2F3D               	goto	u8087
 11721                           
 11722                           ;EEPROM_24C1025.c: 225:              mem_add++;
 11723  1741  3001               	movlw	1
 11724  1742  1283               	bcf	3,5	;RP0=0, select bank0
 11725  1743  1303               	bcf	3,6	;RP1=0, select bank0
 11726  1744  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11727  1745  3000               	movlw	0
 11728  1746  1803               	skipnc
 11729  1747  3001               	movlw	1
 11730  1748  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11731  1749  3000               	movlw	0
 11732  174A  1803               	skipnc
 11733  174B  3001               	movlw	1
 11734  174C  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11735  174D  3000               	movlw	0
 11736  174E  1803               	skipnc
 11737  174F  3001               	movlw	1
 11738  1750  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11739                           
 11740                           ;EEPROM_24C1025.c: 226:              texto++;
 11741  1751  3001               	movlw	1
 11742  1752  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11743  1753  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11744  1754  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11745                           
 11746                           ;EEPROM_24C1025.c: 227:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11747  1755  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11748  1756  1D03               	btfss	3,2
 11749  1757  2F66               	goto	l6766
 11750  1758  3001               	movlw	1
 11751  1759  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11752  175A  1D03               	skipz
 11753  175B  2F64               	goto	u7103
 11754  175C  3000               	movlw	0
 11755  175D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11756  175E  1D03               	skipz
 11757  175F  2F64               	goto	u7103
 11758  1760  3000               	movlw	0
 11759  1761  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11760  1762  1D03               	skipz
 11761  1763  2F64               	goto	u7103
 11762  1764                     u7103:	
 11763  1764  1C03               	btfss	3,0
 11764  1765  2F6B               	goto	l6768
 11765  1766                     l6766:	
 11766  1766  3008               	movlw	8
 11767  1767  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11768  1768  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11769  1769  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11770  176A  2F6C               	goto	l6770
 11771  176B                     l6768:	
 11772  176B  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11773  176C                     l6770:	
 11774                           
 11775                           ;EEPROM_24C1025.c: 228:              ctrl=chip_add;
 11776  176C  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11777  176D  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11778  176E  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11779  176F  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11780                           
 11781                           ;EEPROM_24C1025.c: 229:              ctrl<<=1;
 11782  1770  1003               	clrc
 11783  1771  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11784                           
 11785                           ;EEPROM_24C1025.c: 230:              ctrl |= 0xA0;
 11786  1772  30A0               	movlw	160
 11787  1773  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11788  1774  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11789  1775  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11790                           
 11791                           ;EEPROM_24C1025.c: 231:              ctrl |= 0b00000001;
 11792  1776  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11793                           
 11794                           ;EEPROM_24C1025.c: 232:              ctrl |= range;
 11795  1777  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11796  1778  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11797  1779  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11798  177A  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11799                           
 11800                           ;EEPROM_24C1025.c: 234:              I2C_Master_Start();
 11801  177B  160A  158A  2156  160A  118A  	fcall	_I2C_Master_Start
 11802                           
 11803                           ;EEPROM_24C1025.c: 235:              I2C_Master_Write(ctrl & 0xFE);
 11804  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11805  1781  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11806  1782  39FE               	andlw	254
 11807  1783  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11808  1784  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11809  1785  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11810  1786  00A0               	movwf	I2C_Master_Write@d
 11811  1787  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11812  1788  00A1               	movwf	I2C_Master_Write@d+1
 11813  1789  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11814                           
 11815                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(((char *)&mem_add)[1]);
 11816  178E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11817  178F  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11818  1790  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11819  1791  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11820  1792  00A0               	movwf	I2C_Master_Write@d
 11821  1793  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11822  1794  00A1               	movwf	I2C_Master_Write@d+1
 11823  1795  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11824                           
 11825                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[0]);
 11826  179A  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11827  179B  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11828  179C  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11829  179D  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11830  179E  00A0               	movwf	I2C_Master_Write@d
 11831  179F  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11832  17A0  00A1               	movwf	I2C_Master_Write@d+1
 11833  17A1  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11834                           
 11835                           ;EEPROM_24C1025.c: 238:              I2C_Master_RepeatedStart();
 11836  17A6  160A  118A  2001  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11837                           
 11838                           ;EEPROM_24C1025.c: 239:              I2C_Master_Write(ctrl);
 11839  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11840  17AC  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11841  17AD  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11842  17AE  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11843  17AF  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11844  17B0  00A0               	movwf	I2C_Master_Write@d
 11845  17B1  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11846  17B2  00A1               	movwf	I2C_Master_Write@d+1
 11847  17B3  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 11848                           
 11849                           ;EEPROM_24C1025.c: 240:              }
 11850  17B8  2FE0               	goto	l6802
 11851  17B9                     l6792:	
 11852                           
 11853                           ;EEPROM_24C1025.c: 242:              {;EEPROM_24C1025.c: 243:              (*texto)=I2C_
      +                          Master_Read(1);
 11854  17B9  3001               	movlw	1
 11855  17BA  00A0               	movwf	I2C_Master_Read@a
 11856  17BB  3000               	movlw	0
 11857  17BC  00A1               	movwf	I2C_Master_Read@a+1
 11858  17BD  160A  158A  241C  160A  118A  	fcall	_I2C_Master_Read
 11859  17C2  0820               	movf	?_I2C_Master_Read,w
 11860  17C3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11861  17C4  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11862  17C5  0084               	movwf	4
 11863  17C6  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11864  17C7  1783               	bsf	3,7	;select IRP bank2
 11865  17C8  0080               	movwf	0
 11866                           
 11867                           ;EEPROM_24C1025.c: 244:              if((*texto)==0)break;
 11868  17C9  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11869  17CA  0084               	movwf	4
 11870  17CB  0800               	movf	0,w
 11871  17CC  1903               	btfsc	3,2
 11872  17CD  2FE9               	goto	l6804
 11873                           
 11874                           ;EEPROM_24C1025.c: 245:              texto++;
 11875  17CE  3001               	movlw	1
 11876  17CF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11877  17D0  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11878  17D1  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11879                           
 11880                           ;EEPROM_24C1025.c: 246:              mem_add++;
 11881  17D2  3001               	movlw	1
 11882  17D3  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11883  17D4  3000               	movlw	0
 11884  17D5  1803               	skipnc
 11885  17D6  3001               	movlw	1
 11886  17D7  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11887  17D8  3000               	movlw	0
 11888  17D9  1803               	skipnc
 11889  17DA  3001               	movlw	1
 11890  17DB  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11891  17DC  3000               	movlw	0
 11892  17DD  1803               	skipnc
 11893  17DE  3001               	movlw	1
 11894  17DF  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11895  17E0                     l6802:	
 11896                           
 11897                           ;EEPROM_24C1025.c: 248:        }while((cnt++)<64);
 11898  17E0  3001               	movlw	1
 11899  17E1  07AD               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11900  17E2  30FF               	movlw	-1
 11901  17E3  072D               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11902  17E4  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11903  17E5  3040               	movlw	64
 11904  17E6  022B               	subwf	??_EEPROM_24C1025_Read_Str,w
 11905  17E7  1C03               	skipc
 11906  17E8  2F0D               	goto	l6748
 11907  17E9                     l6804:	
 11908                           
 11909                           ;EEPROM_24C1025.c: 250:      I2C_Master_Read(0);
 11910  17E9  3000               	movlw	0
 11911  17EA  00A0               	movwf	I2C_Master_Read@a
 11912  17EB  00A1               	movwf	I2C_Master_Read@a+1
 11913  17EC  160A  158A  241C  160A  118A  	fcall	_I2C_Master_Read
 11914                           
 11915                           ;EEPROM_24C1025.c: 251:      I2C_Master_Stop();
 11916  17F1  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 11917                           
 11918                           ;EEPROM_24C1025.c: 252:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11919  17F6  30B9               	movlw	185
 11920  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11921  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11922  17F9  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11923  17FA                     u8097:	
 11924  17FA  2FFB               	nop2
 11925  17FB  2FFC               	nop2
 11926  17FC  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11927  17FD  2FFA               	goto	u8097
 11928  17FE  2FFF               	nop2
 11929  17FF  0008               	return
 11930  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11931                           
 11932                           	psect	text51
 11933  1B73                     __ptext51:	
 11934 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11935 ;; Defined at:
 11936 ;;		line 286 in file "EEPROM_24C1025.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  chip_add        1    wreg     unsigned char 
 11939 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;  chip_add        1   26[BANK0 ] unsigned char 
 11942 ;;  data            2   27[BANK0 ] unsigned char [2]
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  2   20[BANK0 ] unsigned int 
 11945 ;; Registers used:
 11946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11947 ;; Tracked objects:
 11948 ;;		On entry : 300/300
 11949 ;;		On exit  : 300/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11952 ;;      Params:         0       4       0       0       0
 11953 ;;      Locals:         0       3       0       0       0
 11954 ;;      Temps:          0       2       0       0       0
 11955 ;;      Totals:         0       9       0       0       0
 11956 ;;Total ram usage:        9 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    4
 11959 ;; This function calls:
 11960 ;;		_EEPROM_24C1025_Read_Buffer
 11961 ;; This function is called by:
 11962 ;;		_Decodify_Command
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _EEPROM_24C1025_Read_Int
 11968  1B73                     _EEPROM_24C1025_Read_Int:	
 11969                           
 11970                           ;incstack = 0
 11971                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11972                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11973  1B73  1283               	bcf	3,5	;RP0=0, select bank0
 11974  1B74  1303               	bcf	3,6	;RP1=0, select bank0
 11975  1B75  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11976                           
 11977                           ;EEPROM_24C1025.c: 287:     char data[2];;EEPROM_24C1025.c: 288:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11978  1B76  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11979  1B77  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11980  1B78  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11981  1B79  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11982  1B7A  0835               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11983  1B7B  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11984  1B7C  0834               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11985  1B7D  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11986  1B7E  3002               	movlw	2
 11987  1B7F  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 11988  1B80  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 11989  1B81  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11990  1B82  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11991  1B83  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 11992  1B84  3000               	movlw	0
 11993  1B85  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11994  1B86  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11995  1B87  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 11996                           
 11997                           ;EEPROM_24C1025.c: 289:     return (data[0]<<8)+data[1];
 11998  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
 11999  1B8B  1303               	bcf	3,6	;RP1=0, select bank0
 12000  1B8C  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 12001  1B8D  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 12002  1B8E  01B9               	clrf	??_EEPROM_24C1025_Read_Int+1
 12003  1B8F  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 12004  1B90  00B9               	movwf	??_EEPROM_24C1025_Read_Int+1
 12005  1B91  01B8               	clrf	??_EEPROM_24C1025_Read_Int
 12006  1B92  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 12007  1B93  0738               	addwf	??_EEPROM_24C1025_Read_Int,w
 12008  1B94  00B4               	movwf	?_EEPROM_24C1025_Read_Int
 12009  1B95  3000               	movlw	0
 12010  1B96  1803               	skipnc
 12011  1B97  3001               	movlw	1
 12012  1B98  0739               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 12013  1B99  00B5               	movwf	?_EEPROM_24C1025_Read_Int+1
 12014  1B9A  0008               	return
 12015  1B9B                     __end_of_EEPROM_24C1025_Read_Int:	
 12016                           
 12017                           	psect	text52
 12018  1A13                     __ptext52:	
 12019 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12020 ;; Defined at:
 12021 ;;		line 272 in file "EEPROM_24C1025.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  chip_add        1    wreg     unsigned char 
 12024 ;;  mem_add         4   20[BANK0 ] unsigned long 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;  chip_add        1   24[BANK0 ] unsigned char 
 12027 ;;  data            1   25[BANK0 ] PTR unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      unsigned char 
 12030 ;; Registers used:
 12031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 300/300
 12034 ;;		On exit  : B00/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12037 ;;      Params:         0       4       0       0       0
 12038 ;;      Locals:         0       2       0       0       0
 12039 ;;      Temps:          0       0       0       0       0
 12040 ;;      Totals:         0       6       0       0       0
 12041 ;;Total ram usage:        6 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    4
 12044 ;; This function calls:
 12045 ;;		_EEPROM_24C1025_Read_Buffer
 12046 ;; This function is called by:
 12047 ;;		_Decodify_Command
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _EEPROM_24C1025_Read_Byte
 12053  1A13                     _EEPROM_24C1025_Read_Byte:	
 12054                           
 12055                           ;incstack = 0
 12056                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12057                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12058  1A13  1283               	bcf	3,5	;RP0=0, select bank0
 12059  1A14  1303               	bcf	3,6	;RP1=0, select bank0
 12060  1A15  00B8               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12061                           
 12062                           ;EEPROM_24C1025.c: 273:     char *data;;EEPROM_24C1025.c: 274:     EEPROM_24C1025_Read_B
      +                          uffer(chip_add, mem_add, 1, data);
 12063  1A16  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12064  1A17  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12065  1A18  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12066  1A19  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12067  1A1A  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12068  1A1B  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12069  1A1C  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12070  1A1D  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12071  1A1E  01AA               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12072  1A1F  0AAA               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12073  1A20  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12074  1A21  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12075  1A22  3000               	movlw	0
 12076  1A23  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12077  1A24  0838               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12078  1A25  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12079                           
 12080                           ;EEPROM_24C1025.c: 275:     return *data;
 12081  1A28  1283               	bcf	3,5	;RP0=0, select bank0
 12082  1A29  1303               	bcf	3,6	;RP1=0, select bank0
 12083  1A2A  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12084  1A2B  0084               	movwf	4
 12085  1A2C  1383               	bcf	3,7	;select IRP bank0
 12086  1A2D  0800               	movf	0,w
 12087  1A2E  0008               	return
 12088  1A2F                     __end_of_EEPROM_24C1025_Read_Byte:	
 12089                           
 12090                           	psect	text53
 12091  0828                     __ptext53:	
 12092 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 12093 ;; Defined at:
 12094 ;;		line 73 in file "EEPROM_24C1025.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;  chip_add        1    wreg     unsigned char 
 12097 ;;  mem_add         4    6[BANK0 ] unsigned long 
 12098 ;;  sizedata        1   10[BANK0 ] unsigned char 
 12099 ;;  data            2   11[BANK0 ] PTR unsigned char 
 12100 ;;		 -> EEPROM_24C1025_Read_Int@data(2), buffer(64), 
 12101 ;; Auto vars:     Size  Location     Type
 12102 ;;  chip_add        1   17[BANK0 ] unsigned char 
 12103 ;;  cnt             1   16[BANK0 ] unsigned char 
 12104 ;;  ctrl            1   19[BANK0 ] unsigned char 
 12105 ;;  range           1   18[BANK0 ] unsigned char 
 12106 ;;  cnt             1    0        unsigned char 
 12107 ;; Return value:  Size  Location     Type
 12108 ;;                  1    wreg      void 
 12109 ;; Registers used:
 12110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12111 ;; Tracked objects:
 12112 ;;		On entry : 0/300
 12113 ;;		On exit  : 0/0
 12114 ;;		Unchanged: 0/0
 12115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12116 ;;      Params:         0       7       0       0       0
 12117 ;;      Locals:         0       5       0       0       0
 12118 ;;      Temps:          0       2       0       0       0
 12119 ;;      Totals:         0      14       0       0       0
 12120 ;;Total ram usage:       14 bytes
 12121 ;; Hardware stack levels used:    1
 12122 ;; Hardware stack levels required when called:    3
 12123 ;; This function calls:
 12124 ;;		_I2C_Master_Read
 12125 ;;		_I2C_Master_RepeatedStart
 12126 ;;		_I2C_Master_Start
 12127 ;;		_I2C_Master_Stop
 12128 ;;		_I2C_Master_Write
 12129 ;; This function is called by:
 12130 ;;		_Decodify_Command
 12131 ;;		_EEPROM_24C1025_Read_Byte
 12132 ;;		_EEPROM_24C1025_Read_Int
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           
 12137                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12138  0828                     _EEPROM_24C1025_Read_Buffer:	
 12139                           
 12140                           ;incstack = 0
 12141                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12142                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12143  0828  1283               	bcf	3,5	;RP0=0, select bank0
 12144  0829  1303               	bcf	3,6	;RP1=0, select bank0
 12145  082A  00B1               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12146                           
 12147                           ;EEPROM_24C1025.c: 79:      unsigned char range=0;
 12148  082B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12149                           
 12150                           ;EEPROM_24C1025.c: 80:      unsigned char ctrl;;EEPROM_24C1025.c: 82:      Delay_Led_Mem
      +                          ory=20;
 12151  082C  3014               	movlw	20
 12152  082D  00FA               	movwf	_Delay_Led_Memory	;volatile
 12153  082E  3000               	movlw	0
 12154  082F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12155                           
 12156                           ;EEPROM_24C1025.c: 84:      if(mem_add>0x1FFFF) return;
 12157  0830  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12158  0831  1D03               	btfss	3,2
 12159  0832  0008               	return
 12160  0833  3002               	movlw	2
 12161  0834  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12162  0835  1D03               	skipz
 12163  0836  283F               	goto	u5743
 12164  0837  3000               	movlw	0
 12165  0838  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12166  0839  1D03               	skipz
 12167  083A  283F               	goto	u5743
 12168  083B  3000               	movlw	0
 12169  083C  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12170  083D  1D03               	skipz
 12171  083E  283F               	goto	u5743
 12172  083F                     u5743:	
 12173  083F  1803               	btfsc	3,0
 12174  0840  0008               	return
 12175                           
 12176                           ;EEPROM_24C1025.c: 86:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12177  0841  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12178  0842  1D03               	btfss	3,2
 12179  0843  2852               	goto	l5936
 12180  0844  3001               	movlw	1
 12181  0845  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12182  0846  1D03               	skipz
 12183  0847  2850               	goto	u5753
 12184  0848  3000               	movlw	0
 12185  0849  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12186  084A  1D03               	skipz
 12187  084B  2850               	goto	u5753
 12188  084C  3000               	movlw	0
 12189  084D  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12190  084E  1D03               	skipz
 12191  084F  2850               	goto	u5753
 12192  0850                     u5753:	
 12193  0850  1C03               	btfss	3,0
 12194  0851  2857               	goto	l5938
 12195  0852                     l5936:	
 12196  0852  3008               	movlw	8
 12197  0853  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12198  0854  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12199  0855  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12200  0856  2858               	goto	l5940
 12201  0857                     l5938:	
 12202  0857  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12203  0858                     l5940:	
 12204                           
 12205                           ;EEPROM_24C1025.c: 87:      ctrl=chip_add;
 12206  0858  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12207  0859  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12208  085A  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12209  085B  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12210                           
 12211                           ;EEPROM_24C1025.c: 88:      ctrl<<=1;
 12212  085C  1003               	clrc
 12213  085D  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12214                           
 12215                           ;EEPROM_24C1025.c: 89:      ctrl |= 0xA0;
 12216  085E  30A0               	movlw	160
 12217  085F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12218  0860  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12219  0861  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12220                           
 12221                           ;EEPROM_24C1025.c: 90:      ctrl |= 0b00000001;
 12222  0862  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12223                           
 12224                           ;EEPROM_24C1025.c: 91:      ctrl |= range;
 12225  0863  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12226  0864  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12227  0865  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12228  0866  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12229                           
 12230                           ;EEPROM_24C1025.c: 93:      I2C_Master_Start();
 12231  0867  160A  158A  2156  120A  158A  	fcall	_I2C_Master_Start
 12232                           
 12233                           ;EEPROM_24C1025.c: 94:      I2C_Master_Write(ctrl & 0xFE);
 12234  086C  1283               	bcf	3,5	;RP0=0, select bank0
 12235  086D  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12236  086E  39FE               	andlw	254
 12237  086F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12238  0870  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12239  0871  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12240  0872  00A0               	movwf	I2C_Master_Write@d
 12241  0873  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12242  0874  00A1               	movwf	I2C_Master_Write@d+1
 12243  0875  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12244                           
 12245                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(((char *)&mem_add)[1]);
 12246  087A  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12247  087B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12248  087C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12249  087D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12250  087E  00A0               	movwf	I2C_Master_Write@d
 12251  087F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12252  0880  00A1               	movwf	I2C_Master_Write@d+1
 12253  0881  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12254                           
 12255                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[0]);
 12256  0886  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12257  0887  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12258  0888  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12259  0889  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12260  088A  00A0               	movwf	I2C_Master_Write@d
 12261  088B  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12262  088C  00A1               	movwf	I2C_Master_Write@d+1
 12263  088D  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12264                           
 12265                           ;EEPROM_24C1025.c: 97:      I2C_Master_RepeatedStart();
 12266  0892  160A  118A  2001  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12267                           
 12268                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl);
 12269  0897  1283               	bcf	3,5	;RP0=0, select bank0
 12270  0898  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12271  0899  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12272  089A  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12273  089B  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12274  089C  00A0               	movwf	I2C_Master_Write@d
 12275  089D  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12276  089E  00A1               	movwf	I2C_Master_Write@d+1
 12277  089F  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12278                           
 12279                           ;EEPROM_24C1025.c: 100:      for(char cnt=0;cnt<(sizedata);cnt++)
 12280  08A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1529
 12281  08A5                     l6014:	
 12282  08A5  082A               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12283  08A6  0230               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1529,w
 12284  08A7  1803               	btfsc	3,0
 12285  08A8  2984               	goto	l6016
 12286                           
 12287                           ;EEPROM_24C1025.c: 101:         {;EEPROM_24C1025.c: 102:            if(mem_add>0x1FFFF) 
      +                          break;
 12288  08A9  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12289  08AA  1D03               	btfss	3,2
 12290  08AB  2984               	goto	l6016
 12291  08AC  3002               	movlw	2
 12292  08AD  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12293  08AE  1D03               	skipz
 12294  08AF  28B8               	goto	u5763
 12295  08B0  3000               	movlw	0
 12296  08B1  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12297  08B2  1D03               	skipz
 12298  08B3  28B8               	goto	u5763
 12299  08B4  3000               	movlw	0
 12300  08B5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12301  08B6  1D03               	skipz
 12302  08B7  28B8               	goto	u5763
 12303  08B8                     u5763:	
 12304  08B8  1803               	btfsc	3,0
 12305  08B9  2984               	goto	l6016
 12306                           
 12307                           ;EEPROM_24C1025.c: 103:            if((mem_add+1)%128==0)
 12308  08BA  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12309  08BB  3E01               	addlw	1
 12310  08BC  397F               	andlw	127
 12311  08BD  1D03               	btfss	3,2
 12312  08BE  2959               	goto	l6006
 12313                           
 12314                           ;EEPROM_24C1025.c: 104:              {;EEPROM_24C1025.c: 105:              (*data)=I2C_M
      +                          aster_Read(0);
 12315  08BF  3000               	movlw	0
 12316  08C0  00A0               	movwf	I2C_Master_Read@a
 12317  08C1  00A1               	movwf	I2C_Master_Read@a+1
 12318  08C2  160A  158A  241C  120A  158A  	fcall	_I2C_Master_Read
 12319  08C7  0820               	movf	?_I2C_Master_Read,w
 12320  08C8  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12321  08C9  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12322  08CA  0084               	movwf	4
 12323  08CB  1783               	bsf	3,7
 12324  08CC  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12325  08CD  1383               	bcf	3,7
 12326  08CE  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12327  08CF  0080               	movwf	0
 12328                           
 12329                           ;EEPROM_24C1025.c: 106:              I2C_Master_Stop();
 12330  08D0  160A  158A  2141  120A  158A  	fcall	_I2C_Master_Stop
 12331                           
 12332                           ;EEPROM_24C1025.c: 108:              _delay((unsigned long)((5)*(8000000/4000.0)));
 12333  08D5  300D               	movlw	13
 12334  08D6  1283               	bcf	3,5	;RP0=0, select bank0
 12335  08D7  1303               	bcf	3,6	;RP1=0, select bank0
 12336  08D8  00AE               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 12337  08D9  30FB               	movlw	251
 12338  08DA  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12339  08DB                     u8107:	
 12340  08DB  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12341  08DC  28DB               	goto	u8107
 12342  08DD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 12343  08DE  28DB               	goto	u8107
 12344                           
 12345                           ;EEPROM_24C1025.c: 109:              mem_add++;
 12346  08DF  3001               	movlw	1
 12347  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 12348  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 12349  08E2  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12350  08E3  3000               	movlw	0
 12351  08E4  1803               	skipnc
 12352  08E5  3001               	movlw	1
 12353  08E6  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12354  08E7  3000               	movlw	0
 12355  08E8  1803               	skipnc
 12356  08E9  3001               	movlw	1
 12357  08EA  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12358  08EB  3000               	movlw	0
 12359  08EC  1803               	skipnc
 12360  08ED  3001               	movlw	1
 12361  08EE  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12362                           
 12363                           ;EEPROM_24C1025.c: 110:              data++;
 12364  08EF  3001               	movlw	1
 12365  08F0  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12366  08F1  1803               	skipnc
 12367  08F2  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12368  08F3  3000               	movlw	0
 12369  08F4  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12370                           
 12371                           ;EEPROM_24C1025.c: 111:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12372  08F5  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12373  08F6  1D03               	btfss	3,2
 12374  08F7  2906               	goto	l5980
 12375  08F8  3001               	movlw	1
 12376  08F9  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12377  08FA  1D03               	skipz
 12378  08FB  2904               	goto	u5783
 12379  08FC  3000               	movlw	0
 12380  08FD  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12381  08FE  1D03               	skipz
 12382  08FF  2904               	goto	u5783
 12383  0900  3000               	movlw	0
 12384  0901  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12385  0902  1D03               	skipz
 12386  0903  2904               	goto	u5783
 12387  0904                     u5783:	
 12388  0904  1C03               	btfss	3,0
 12389  0905  290B               	goto	l5982
 12390  0906                     l5980:	
 12391  0906  3008               	movlw	8
 12392  0907  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12393  0908  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12394  0909  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12395  090A  290C               	goto	l5984
 12396  090B                     l5982:	
 12397  090B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12398  090C                     l5984:	
 12399                           
 12400                           ;EEPROM_24C1025.c: 112:              ctrl=chip_add;
 12401  090C  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12402  090D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12403  090E  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12404  090F  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12405                           
 12406                           ;EEPROM_24C1025.c: 113:              ctrl<<=1;
 12407  0910  1003               	clrc
 12408  0911  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12409                           
 12410                           ;EEPROM_24C1025.c: 114:              ctrl |= 0xA0;
 12411  0912  30A0               	movlw	160
 12412  0913  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12413  0914  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12414  0915  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12415                           
 12416                           ;EEPROM_24C1025.c: 115:              ctrl |= 0b00000001;
 12417  0916  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12418                           
 12419                           ;EEPROM_24C1025.c: 116:              ctrl |= range;
 12420  0917  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12421  0918  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12422  0919  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12423  091A  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12424                           
 12425                           ;EEPROM_24C1025.c: 118:              I2C_Master_Start();
 12426  091B  160A  158A  2156  120A  158A  	fcall	_I2C_Master_Start
 12427                           
 12428                           ;EEPROM_24C1025.c: 119:              I2C_Master_Write(ctrl & 0xFE);
 12429  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12430  0921  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12431  0922  39FE               	andlw	254
 12432  0923  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12433  0924  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12434  0925  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12435  0926  00A0               	movwf	I2C_Master_Write@d
 12436  0927  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12437  0928  00A1               	movwf	I2C_Master_Write@d+1
 12438  0929  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12439                           
 12440                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(((char *)&mem_add)[1]);
 12441  092E  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12442  092F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12443  0930  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12444  0931  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12445  0932  00A0               	movwf	I2C_Master_Write@d
 12446  0933  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12447  0934  00A1               	movwf	I2C_Master_Write@d+1
 12448  0935  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12449                           
 12450                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[0]);
 12451  093A  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12452  093B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12453  093C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12454  093D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12455  093E  00A0               	movwf	I2C_Master_Write@d
 12456  093F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12457  0940  00A1               	movwf	I2C_Master_Write@d+1
 12458  0941  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12459                           
 12460                           ;EEPROM_24C1025.c: 122:              I2C_Master_RepeatedStart();
 12461  0946  160A  118A  2001  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12462                           
 12463                           ;EEPROM_24C1025.c: 123:              I2C_Master_Write(ctrl);
 12464  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12465  094C  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12466  094D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12467  094E  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12468  094F  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12469  0950  00A0               	movwf	I2C_Master_Write@d
 12470  0951  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12471  0952  00A1               	movwf	I2C_Master_Write@d+1
 12472  0953  160A  158A  215F  120A  158A  	fcall	_I2C_Master_Write
 12473                           
 12474                           ;EEPROM_24C1025.c: 124:              }
 12475  0958  297F               	goto	l6012
 12476  0959                     l6006:	
 12477                           
 12478                           ;EEPROM_24C1025.c: 126:              {;EEPROM_24C1025.c: 127:              (*data)=I2C_M
      +                          aster_Read(1);
 12479  0959  3001               	movlw	1
 12480  095A  00A0               	movwf	I2C_Master_Read@a
 12481  095B  3000               	movlw	0
 12482  095C  00A1               	movwf	I2C_Master_Read@a+1
 12483  095D  160A  158A  241C  120A  158A  	fcall	_I2C_Master_Read
 12484  0962  0820               	movf	?_I2C_Master_Read,w
 12485  0963  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12486  0964  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12487  0965  0084               	movwf	4
 12488  0966  1783               	bsf	3,7
 12489  0967  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12490  0968  1383               	bcf	3,7
 12491  0969  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12492  096A  0080               	movwf	0
 12493                           
 12494                           ;EEPROM_24C1025.c: 128:              data++;
 12495  096B  3001               	movlw	1
 12496  096C  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12497  096D  1803               	skipnc
 12498  096E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12499  096F  3000               	movlw	0
 12500  0970  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12501                           
 12502                           ;EEPROM_24C1025.c: 129:              mem_add++;
 12503  0971  3001               	movlw	1
 12504  0972  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12505  0973  3000               	movlw	0
 12506  0974  1803               	skipnc
 12507  0975  3001               	movlw	1
 12508  0976  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12509  0977  3000               	movlw	0
 12510  0978  1803               	skipnc
 12511  0979  3001               	movlw	1
 12512  097A  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12513  097B  3000               	movlw	0
 12514  097C  1803               	skipnc
 12515  097D  3001               	movlw	1
 12516  097E  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12517  097F                     l6012:	
 12518                           
 12519                           ;EEPROM_24C1025.c: 131:         }
 12520  097F  3001               	movlw	1
 12521  0980  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12522  0981  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12523  0982  07B0               	addwf	EEPROM_24C1025_Read_Buffer@cnt_1529,f
 12524  0983  28A5               	goto	l6014
 12525  0984                     l6016:	
 12526                           
 12527                           ;EEPROM_24C1025.c: 132:         I2C_Master_Read(0);
 12528  0984  3000               	movlw	0
 12529  0985  00A0               	movwf	I2C_Master_Read@a
 12530  0986  00A1               	movwf	I2C_Master_Read@a+1
 12531  0987  160A  158A  241C  120A  158A  	fcall	_I2C_Master_Read
 12532                           
 12533                           ;EEPROM_24C1025.c: 133:         I2C_Master_Stop();
 12534  098C  160A  158A  2141  120A  158A  	fcall	_I2C_Master_Stop
 12535                           
 12536                           ;EEPROM_24C1025.c: 134:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12537  0991  30B9               	movlw	185
 12538  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12539  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12540  0994  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12541  0995                     u8117:	
 12542  0995  2996               	nop2
 12543  0996  2997               	nop2
 12544  0997  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12545  0998  2995               	goto	u8117
 12546  0999  299A               	nop2
 12547  099A  0008               	return
 12548  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12549                           
 12550                           	psect	text54
 12551  1001                     __ptext54:	
 12552 ;; *************** function _I2C_Master_RepeatedStart *****************
 12553 ;; Defined at:
 12554 ;;		line 52 in file "I2C.c"
 12555 ;; Parameters:    Size  Location     Type
 12556 ;;		None
 12557 ;; Auto vars:     Size  Location     Type
 12558 ;;		None
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1    wreg      void 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0, pclath, cstack
 12563 ;; Tracked objects:
 12564 ;;		On entry : 300/0
 12565 ;;		On exit  : 300/100
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12568 ;;      Params:         0       0       0       0       0
 12569 ;;      Locals:         0       0       0       0       0
 12570 ;;      Temps:          0       0       0       0       0
 12571 ;;      Totals:         0       0       0       0       0
 12572 ;;Total ram usage:        0 bytes
 12573 ;; Hardware stack levels used:    1
 12574 ;; Hardware stack levels required when called:    2
 12575 ;; This function calls:
 12576 ;;		_I2C_Master_Wait
 12577 ;; This function is called by:
 12578 ;;		_EEPROM_24C1025_Read_Buffer
 12579 ;;		_EEPROM_24C1025_Read_Str
 12580 ;; This function uses a non-reentrant model
 12581 ;;
 12582                           
 12583                           
 12584                           ;psect for function _I2C_Master_RepeatedStart
 12585  1001                     _I2C_Master_RepeatedStart:	
 12586                           
 12587                           ;I2C.c: 54:   I2C_Master_Wait();
 12588                           
 12589                           ;incstack = 0
 12590                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12591  1001  160A  158A  2146   	fcall	_I2C_Master_Wait
 12592                           
 12593                           ;I2C.c: 55:   RSEN = 1;
 12594  1004  1491               	bsf	17,1	;volatile
 12595  1005  0008               	return
 12596  1006                     __end_of_I2C_Master_RepeatedStart:	
 12597                           
 12598                           	psect	text55
 12599  1C1C                     __ptext55:	
 12600 ;; *************** function _I2C_Master_Read *****************
 12601 ;; Defined at:
 12602 ;;		line 71 in file "I2C.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  a               2    0[BANK0 ] unsigned short 
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;  temp            2    4[BANK0 ] unsigned short 
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  2    0[BANK0 ] unsigned short 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0, pclath, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 300/0
 12613 ;;		On exit  : 300/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12616 ;;      Params:         0       2       0       0       0
 12617 ;;      Locals:         0       2       0       0       0
 12618 ;;      Temps:          0       2       0       0       0
 12619 ;;      Totals:         0       6       0       0       0
 12620 ;;Total ram usage:        6 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; Hardware stack levels required when called:    2
 12623 ;; This function calls:
 12624 ;;		_I2C_Master_Wait
 12625 ;; This function is called by:
 12626 ;;		_EEPROM_24C1025_Read_Buffer
 12627 ;;		_EEPROM_24C1025_Read_Str
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           
 12632                           ;psect for function _I2C_Master_Read
 12633  1C1C                     _I2C_Master_Read:	
 12634                           
 12635                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12636                           
 12637                           ;incstack = 0
 12638                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12639  1C1C  1683               	bsf	3,5	;RP0=1, select bank1
 12640  1C1D  17EB               	bsf	_generic_status^(0+128),7
 12641                           
 12642                           ;I2C.c: 75:   I2C_Master_Wait();
 12643  1C1E  160A  158A  2146  160A  158A  	fcall	_I2C_Master_Wait
 12644                           
 12645                           ;I2C.c: 76:   RCEN = 1;
 12646  1C23  1591               	bsf	17,3	;volatile
 12647                           
 12648                           ;I2C.c: 77:   I2C_Master_Wait();
 12649  1C24  160A  158A  2146  160A  158A  	fcall	_I2C_Master_Wait
 12650                           
 12651                           ;I2C.c: 78:   temp = SSPBUF;
 12652  1C29  1283               	bcf	3,5	;RP0=0, select bank0
 12653  1C2A  0813               	movf	19,w	;volatile
 12654  1C2B  00A2               	movwf	??_I2C_Master_Read
 12655  1C2C  01A3               	clrf	??_I2C_Master_Read+1
 12656  1C2D  0822               	movf	??_I2C_Master_Read,w
 12657  1C2E  00A4               	movwf	I2C_Master_Read@temp
 12658  1C2F  0823               	movf	??_I2C_Master_Read+1,w
 12659  1C30  00A5               	movwf	I2C_Master_Read@temp+1
 12660                           
 12661                           ;I2C.c: 79:   I2C_Master_Wait();
 12662  1C31  160A  158A  2146  160A  158A  	fcall	_I2C_Master_Wait
 12663                           
 12664                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12665  1C36  1283               	bcf	3,5	;RP0=0, select bank0
 12666  1C37  0820               	movf	I2C_Master_Read@a,w
 12667  1C38  0421               	iorwf	I2C_Master_Read@a+1,w
 12668  1C39  1D03               	btfss	3,2
 12669  1C3A  2C3F               	goto	u5440
 12670  1C3B  1683               	bsf	3,5	;RP0=1, select bank1
 12671  1C3C  1303               	bcf	3,6	;RP1=0, select bank1
 12672  1C3D  1691               	bsf	17,5	;volatile
 12673  1C3E  2C42               	goto	l5712
 12674  1C3F                     u5440:	
 12675  1C3F  1683               	bsf	3,5	;RP0=1, select bank1
 12676  1C40  1303               	bcf	3,6	;RP1=0, select bank1
 12677  1C41  1291               	bcf	17,5	;volatile
 12678  1C42                     l5712:	
 12679                           
 12680                           ;I2C.c: 81:   ACKEN = 1;
 12681  1C42  1611               	bsf	17,4	;volatile
 12682                           
 12683                           ;I2C.c: 82:   return temp;
 12684  1C43  1283               	bcf	3,5	;RP0=0, select bank0
 12685  1C44  0825               	movf	I2C_Master_Read@temp+1,w
 12686  1C45  00A1               	movwf	?_I2C_Master_Read+1
 12687  1C46  0824               	movf	I2C_Master_Read@temp,w
 12688  1C47  00A0               	movwf	?_I2C_Master_Read
 12689  1C48  0008               	return
 12690  1C49                     __end_of_I2C_Master_Read:	
 12691                           
 12692                           	psect	text56
 12693  1EAA                     __ptext56:	
 12694 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12695 ;; Defined at:
 12696 ;;		line 293 in file "EEPROM_24C1025.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  chip_add        1    wreg     unsigned char 
 12699 ;;  value           1   15[BANK0 ] unsigned char 
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;  chip_add        1   19[BANK0 ] unsigned char 
 12702 ;;  page            2   21[BANK0 ] unsigned int 
 12703 ;;  i               1   20[BANK0 ] unsigned char 
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12708 ;; Tracked objects:
 12709 ;;		On entry : 300/300
 12710 ;;		On exit  : 300/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12713 ;;      Params:         0       1       0       0       0
 12714 ;;      Locals:         0       4       0       0       0
 12715 ;;      Temps:          0       3       0       0       0
 12716 ;;      Totals:         0       8       0       0       0
 12717 ;;Total ram usage:        8 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:    4
 12720 ;; This function calls:
 12721 ;;		_EEPROM_24C1025_Write_Buffer
 12722 ;; This function is called by:
 12723 ;;		_Decodify_Command
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           
 12728                           ;psect for function _EEPROM_24C1025_Fill_All
 12729  1EAA                     _EEPROM_24C1025_Fill_All:	
 12730                           
 12731                           ;incstack = 0
 12732                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12733                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12734  1EAA  1283               	bcf	3,5	;RP0=0, select bank0
 12735  1EAB  1303               	bcf	3,6	;RP1=0, select bank0
 12736  1EAC  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12737                           
 12738                           ;EEPROM_24C1025.c: 297:      for(i=0;i<128;i++) buffer[i]=value;
 12739  1EAD  01B4               	clrf	EEPROM_24C1025_Fill_All@i
 12740  1EAE                     l6814:	
 12741  1EAE  082F               	movf	EEPROM_24C1025_Fill_All@value,w
 12742  1EAF  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12743  1EB0  0834               	movf	EEPROM_24C1025_Fill_All@i,w
 12744  1EB1  3E10               	addlw	(low (_buffer| (0+256)))& (0+255)
 12745  1EB2  0084               	movwf	4
 12746  1EB3  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12747  1EB4  1783               	bsf	3,7	;select IRP bank2
 12748  1EB5  0080               	movwf	0
 12749  1EB6  3001               	movlw	1
 12750  1EB7  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12751  1EB8  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12752  1EB9  07B4               	addwf	EEPROM_24C1025_Fill_All@i,f
 12753  1EBA  3080               	movlw	128
 12754  1EBB  0234               	subwf	EEPROM_24C1025_Fill_All@i,w
 12755  1EBC  1C03               	skipc
 12756  1EBD  2EAE               	goto	l6814
 12757                           
 12758                           ;EEPROM_24C1025.c: 298:      for(page=0;page<1024;page++)
 12759  1EBE  01B5               	clrf	EEPROM_24C1025_Fill_All@page
 12760  1EBF  01B6               	clrf	EEPROM_24C1025_Fill_All@page+1
 12761  1EC0                     l6826:	
 12762                           
 12763                           ;EEPROM_24C1025.c: 299:         {;EEPROM_24C1025.c: 300:         EEPROM_24C1025_Write_Bu
      +                          ffer(chip_add, (page*128), 128, buffer);
 12764  1EC0  0836               	movf	EEPROM_24C1025_Fill_All@page+1,w
 12765  1EC1  00B1               	movwf	??_EEPROM_24C1025_Fill_All+1
 12766  1EC2  0835               	movf	EEPROM_24C1025_Fill_All@page,w
 12767  1EC3  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12768  1EC4  3007               	movlw	7
 12769  1EC5  00FF               	movwf	127
 12770  1EC6                     u7145:	
 12771  1EC6  1003               	clrc
 12772  1EC7  0DB0               	rlf	??_EEPROM_24C1025_Fill_All,f
 12773  1EC8  0DB1               	rlf	??_EEPROM_24C1025_Fill_All+1,f
 12774  1EC9  0BFF               	decfsz	127,f
 12775  1ECA  2EC6               	goto	u7145
 12776  1ECB  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12777  1ECC  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12778  1ECD  0831               	movf	??_EEPROM_24C1025_Fill_All+1,w
 12779  1ECE  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12780  1ECF  01A4               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12781  1ED0  01A5               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12782  1ED1  3080               	movlw	128
 12783  1ED2  00B2               	movwf	??_EEPROM_24C1025_Fill_All+2
 12784  1ED3  0832               	movf	??_EEPROM_24C1025_Fill_All+2,w
 12785  1ED4  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12786  1ED5  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
 12787  1ED6  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12788  1ED7  3001               	movlw	1
 12789  1ED8  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12790  1ED9  0833               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12791  1EDA  160A  118A  2532  160A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
 12792                           
 12793                           ;EEPROM_24C1025.c: 301:         }
 12794  1EDF  3001               	movlw	1
 12795  1EE0  1283               	bcf	3,5	;RP0=0, select bank0
 12796  1EE1  1303               	bcf	3,6	;RP1=0, select bank0
 12797  1EE2  07B5               	addwf	EEPROM_24C1025_Fill_All@page,f
 12798  1EE3  1803               	skipnc
 12799  1EE4  0AB6               	incf	EEPROM_24C1025_Fill_All@page+1,f
 12800  1EE5  3000               	movlw	0
 12801  1EE6  07B6               	addwf	EEPROM_24C1025_Fill_All@page+1,f
 12802  1EE7  3004               	movlw	4
 12803  1EE8  0236               	subwf	EEPROM_24C1025_Fill_All@page+1,w
 12804  1EE9  3000               	movlw	0
 12805  1EEA  1903               	skipnz
 12806  1EEB  0235               	subwf	EEPROM_24C1025_Fill_All@page,w
 12807  1EEC  1803               	btfsc	3,0
 12808  1EED  0008               	return
 12809  1EEE  2EC0               	goto	l6826
 12810  1EEF                     __end_of_EEPROM_24C1025_Fill_All:	
 12811                           
 12812                           	psect	text57
 12813  1532                     __ptext57:	
 12814 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12815 ;; Defined at:
 12816 ;;		line 12 in file "EEPROM_24C1025.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;  chip_add        1    wreg     unsigned char 
 12819 ;;  mem_add         4    2[BANK0 ] unsigned long 
 12820 ;;  sizedata        1    6[BANK0 ] unsigned char 
 12821 ;;  data            2    7[BANK0 ] PTR unsigned char 
 12822 ;;		 -> EEPROM_24C1025_Write_Int@local(2), buffer(64), usart_protocol.value(10), usart_protocol(16), 
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;  chip_add        1   12[BANK0 ] unsigned char 
 12825 ;;  ctrl            1   14[BANK0 ] unsigned char 
 12826 ;;  range           1   13[BANK0 ] unsigned char 
 12827 ;;  count           1   11[BANK0 ] unsigned char 
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1    wreg      void 
 12830 ;; Registers used:
 12831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/300
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12837 ;;      Params:         0       7       0       0       0
 12838 ;;      Locals:         0       4       0       0       0
 12839 ;;      Temps:          0       2       0       0       0
 12840 ;;      Totals:         0      13       0       0       0
 12841 ;;Total ram usage:       13 bytes
 12842 ;; Hardware stack levels used:    1
 12843 ;; Hardware stack levels required when called:    3
 12844 ;; This function calls:
 12845 ;;		_I2C_Master_Start
 12846 ;;		_I2C_Master_Stop
 12847 ;;		_I2C_Master_Write
 12848 ;; This function is called by:
 12849 ;;		_Decodify_Command
 12850 ;;		_EEPROM_24C1025_Write_Byte
 12851 ;;		_EEPROM_24C1025_Write_Int
 12852 ;;		_EEPROM_24C1025_Fill_All
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           
 12857                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12858  1532                     _EEPROM_24C1025_Write_Buffer:	
 12859                           
 12860                           ;incstack = 0
 12861                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 12862                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12863  1532  1283               	bcf	3,5	;RP0=0, select bank0
 12864  1533  1303               	bcf	3,6	;RP1=0, select bank0
 12865  1534  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12866                           
 12867                           ;EEPROM_24C1025.c: 18:      unsigned char ctrl;;EEPROM_24C1025.c: 19:      unsigned char
      +                           count;;EEPROM_24C1025.c: 21:      Delay_Led_Memory=20;
 12868  1535  3014               	movlw	20
 12869  1536  00FA               	movwf	_Delay_Led_Memory	;volatile
 12870  1537  3000               	movlw	0
 12871  1538  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12872                           
 12873                           ;EEPROM_24C1025.c: 23:      if(mem_add>0x1FFFF) return;
 12874  1539  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12875  153A  1D03               	btfss	3,2
 12876  153B  0008               	return
 12877  153C  3002               	movlw	2
 12878  153D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12879  153E  1D03               	skipz
 12880  153F  2D48               	goto	u5463
 12881  1540  3000               	movlw	0
 12882  1541  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12883  1542  1D03               	skipz
 12884  1543  2D48               	goto	u5463
 12885  1544  3000               	movlw	0
 12886  1545  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12887  1546  1D03               	skipz
 12888  1547  2D48               	goto	u5463
 12889  1548                     u5463:	
 12890  1548  1803               	btfsc	3,0
 12891  1549  0008               	return
 12892                           
 12893                           ;EEPROM_24C1025.c: 25:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12894  154A  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12895  154B  1D03               	btfss	3,2
 12896  154C  2D5B               	goto	l5734
 12897  154D  3001               	movlw	1
 12898  154E  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12899  154F  1D03               	skipz
 12900  1550  2D59               	goto	u5473
 12901  1551  3000               	movlw	0
 12902  1552  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12903  1553  1D03               	skipz
 12904  1554  2D59               	goto	u5473
 12905  1555  3000               	movlw	0
 12906  1556  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12907  1557  1D03               	skipz
 12908  1558  2D59               	goto	u5473
 12909  1559                     u5473:	
 12910  1559  1C03               	btfss	3,0
 12911  155A  2D60               	goto	l5736
 12912  155B                     l5734:	
 12913  155B  3008               	movlw	8
 12914  155C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12915  155D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12916  155E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 12917  155F  2D61               	goto	l5738
 12918  1560                     l5736:	
 12919  1560  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 12920  1561                     l5738:	
 12921                           
 12922                           ;EEPROM_24C1025.c: 26:      ctrl=chip_add;
 12923  1561  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12924  1562  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12925  1563  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12926  1564  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12927                           
 12928                           ;EEPROM_24C1025.c: 27:      ctrl<<=1;
 12929  1565  1003               	clrc
 12930  1566  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12931                           
 12932                           ;EEPROM_24C1025.c: 28:      ctrl |= 0xA0;
 12933  1567  30A0               	movlw	160
 12934  1568  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12935  1569  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12936  156A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12937                           
 12938                           ;EEPROM_24C1025.c: 29:      ctrl |= range;
 12939  156B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12940  156C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12941  156D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12942  156E  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12943                           
 12944                           ;EEPROM_24C1025.c: 31:      I2C_Master_Start();
 12945  156F  160A  158A  2156  160A  118A  	fcall	_I2C_Master_Start
 12946                           
 12947                           ;EEPROM_24C1025.c: 32:      I2C_Master_Write(ctrl);
 12948  1574  1283               	bcf	3,5	;RP0=0, select bank0
 12949  1575  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12950  1576  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12951  1577  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12952  1578  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12953  1579  00A0               	movwf	I2C_Master_Write@d
 12954  157A  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12955  157B  00A1               	movwf	I2C_Master_Write@d+1
 12956  157C  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 12957                           
 12958                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(((char *)&mem_add)[1]);
 12959  1581  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12960  1582  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12961  1583  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12962  1584  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12963  1585  00A0               	movwf	I2C_Master_Write@d
 12964  1586  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12965  1587  00A1               	movwf	I2C_Master_Write@d+1
 12966  1588  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 12967                           
 12968                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[0]);
 12969  158D  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12970  158E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12971  158F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12972  1590  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12973  1591  00A0               	movwf	I2C_Master_Write@d
 12974  1592  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12975  1593  00A1               	movwf	I2C_Master_Write@d+1
 12976  1594  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 12977                           
 12978                           ;EEPROM_24C1025.c: 35:      for(count=0;count<(sizedata-1);count++)
 12979  1599  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 12980  159A                     l5800:	
 12981  159A  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12982  159B  3EFF               	addlw	255
 12983  159C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12984  159D  30FF               	movlw	255
 12985  159E  1803               	skipnc
 12986  159F  3000               	movlw	0
 12987  15A0  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12988  15A1  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12989  15A2  3A80               	xorlw	128
 12990  15A3  3C80               	sublw	128
 12991  15A4  1D03               	skipz
 12992  15A5  2DA8               	goto	u5515
 12993  15A6  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12994  15A7  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12995  15A8                     u5515:	
 12996  15A8  1803               	btfsc	3,0
 12997  15A9  2E72               	goto	l5802
 12998                           
 12999                           ;EEPROM_24C1025.c: 36:           {;EEPROM_24C1025.c: 37:           if(mem_add>0x1FFFF) r
      +                          eturn;
 13000  15AA  1283               	bcf	3,5	;RP0=0, select bank0
 13001  15AB  1303               	bcf	3,6	;RP1=0, select bank0
 13002  15AC  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13003  15AD  1D03               	btfss	3,2
 13004  15AE  0008               	return
 13005  15AF  3002               	movlw	2
 13006  15B0  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13007  15B1  1D03               	skipz
 13008  15B2  2DBB               	goto	u5483
 13009  15B3  3000               	movlw	0
 13010  15B4  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13011  15B5  1D03               	skipz
 13012  15B6  2DBB               	goto	u5483
 13013  15B7  3000               	movlw	0
 13014  15B8  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13015  15B9  1D03               	skipz
 13016  15BA  2DBB               	goto	u5483
 13017  15BB                     u5483:	
 13018  15BB  1803               	btfsc	3,0
 13019  15BC  0008               	return
 13020                           
 13021                           ;EEPROM_24C1025.c: 38:           if((mem_add+1)%128==0)
 13022  15BD  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13023  15BE  3E01               	addlw	1
 13024  15BF  397F               	andlw	127
 13025  15C0  1D03               	btfss	3,2
 13026  15C1  2E48               	goto	l5792
 13027                           
 13028                           ;EEPROM_24C1025.c: 39:             {;EEPROM_24C1025.c: 40:             I2C_Master_Write(
      +                          *data);
 13029  15C2  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13030  15C3  0084               	movwf	4
 13031  15C4  1783               	bsf	3,7
 13032  15C5  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13033  15C6  1383               	bcf	3,7
 13034  15C7  0800               	movf	0,w
 13035  15C8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13036  15C9  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13037  15CA  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13038  15CB  00A0               	movwf	I2C_Master_Write@d
 13039  15CC  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13040  15CD  00A1               	movwf	I2C_Master_Write@d+1
 13041  15CE  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13042                           
 13043                           ;EEPROM_24C1025.c: 41:             I2C_Master_Stop();
 13044  15D3  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 13045                           
 13046                           ;EEPROM_24C1025.c: 43:             _delay((unsigned long)((5)*(8000000/4000.0)));
 13047  15D8  300D               	movlw	13
 13048  15D9  1283               	bcf	3,5	;RP0=0, select bank0
 13049  15DA  1303               	bcf	3,6	;RP1=0, select bank0
 13050  15DB  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13051  15DC  30FB               	movlw	251
 13052  15DD  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13053  15DE                     u8127:	
 13054  15DE  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13055  15DF  2DDE               	goto	u8127
 13056  15E0  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13057  15E1  2DDE               	goto	u8127
 13058                           
 13059                           ;EEPROM_24C1025.c: 44:             mem_add++;
 13060  15E2  3001               	movlw	1
 13061  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 13062  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 13063  15E5  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13064  15E6  3000               	movlw	0
 13065  15E7  1803               	skipnc
 13066  15E8  3001               	movlw	1
 13067  15E9  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13068  15EA  3000               	movlw	0
 13069  15EB  1803               	skipnc
 13070  15EC  3001               	movlw	1
 13071  15ED  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13072  15EE  3000               	movlw	0
 13073  15EF  1803               	skipnc
 13074  15F0  3001               	movlw	1
 13075  15F1  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13076                           
 13077                           ;EEPROM_24C1025.c: 45:             data++;
 13078  15F2  3001               	movlw	1
 13079  15F3  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13080  15F4  1803               	skipnc
 13081  15F5  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13082  15F6  3000               	movlw	0
 13083  15F7  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13084                           
 13085                           ;EEPROM_24C1025.c: 46:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13086  15F8  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13087  15F9  1D03               	btfss	3,2
 13088  15FA  2E09               	goto	l5772
 13089  15FB  3001               	movlw	1
 13090  15FC  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13091  15FD  1D03               	skipz
 13092  15FE  2E07               	goto	u5503
 13093  15FF  3000               	movlw	0
 13094  1600  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13095  1601  1D03               	skipz
 13096  1602  2E07               	goto	u5503
 13097  1603  3000               	movlw	0
 13098  1604  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13099  1605  1D03               	skipz
 13100  1606  2E07               	goto	u5503
 13101  1607                     u5503:	
 13102  1607  1C03               	btfss	3,0
 13103  1608  2E0E               	goto	l5774
 13104  1609                     l5772:	
 13105  1609  3008               	movlw	8
 13106  160A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13107  160B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13108  160C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13109  160D  2E0F               	goto	l5776
 13110  160E                     l5774:	
 13111  160E  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13112  160F                     l5776:	
 13113                           
 13114                           ;EEPROM_24C1025.c: 47:             ctrl=chip_add;
 13115  160F  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13116  1610  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13117  1611  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13118  1612  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13119                           
 13120                           ;EEPROM_24C1025.c: 48:             ctrl<<=1;
 13121  1613  1003               	clrc
 13122  1614  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13123                           
 13124                           ;EEPROM_24C1025.c: 49:             ctrl |= 0xA0;
 13125  1615  30A0               	movlw	160
 13126  1616  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13127  1617  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13128  1618  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13129                           
 13130                           ;EEPROM_24C1025.c: 50:             ctrl |= range;
 13131  1619  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13132  161A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13133  161B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13134  161C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13135                           
 13136                           ;EEPROM_24C1025.c: 52:             I2C_Master_Start();
 13137  161D  160A  158A  2156  160A  118A  	fcall	_I2C_Master_Start
 13138                           
 13139                           ;EEPROM_24C1025.c: 53:             I2C_Master_Write(ctrl);
 13140  1622  1283               	bcf	3,5	;RP0=0, select bank0
 13141  1623  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13142  1624  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13143  1625  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13144  1626  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13145  1627  00A0               	movwf	I2C_Master_Write@d
 13146  1628  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13147  1629  00A1               	movwf	I2C_Master_Write@d+1
 13148  162A  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13149                           
 13150                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(((char *)&mem_add)[1]);
 13151  162F  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13152  1630  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13153  1631  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13154  1632  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13155  1633  00A0               	movwf	I2C_Master_Write@d
 13156  1634  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13157  1635  00A1               	movwf	I2C_Master_Write@d+1
 13158  1636  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13159                           
 13160                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[0]);
 13161  163B  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13162  163C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13163  163D  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13164  163E  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13165  163F  00A0               	movwf	I2C_Master_Write@d
 13166  1640  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13167  1641  00A1               	movwf	I2C_Master_Write@d+1
 13168  1642  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13169                           
 13170                           ;EEPROM_24C1025.c: 56:             }
 13171  1647  2E6D               	goto	l5798
 13172  1648                     l5792:	
 13173                           
 13174                           ;EEPROM_24C1025.c: 58:             {;EEPROM_24C1025.c: 59:             I2C_Master_Write(
      +                          *data);
 13175  1648  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13176  1649  0084               	movwf	4
 13177  164A  1783               	bsf	3,7
 13178  164B  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13179  164C  1383               	bcf	3,7
 13180  164D  0800               	movf	0,w
 13181  164E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13182  164F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13183  1650  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13184  1651  00A0               	movwf	I2C_Master_Write@d
 13185  1652  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13186  1653  00A1               	movwf	I2C_Master_Write@d+1
 13187  1654  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13188                           
 13189                           ;EEPROM_24C1025.c: 60:             data++;
 13190  1659  3001               	movlw	1
 13191  165A  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13192  165B  1803               	skipnc
 13193  165C  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13194  165D  3000               	movlw	0
 13195  165E  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13196                           
 13197                           ;EEPROM_24C1025.c: 61:             mem_add++;
 13198  165F  3001               	movlw	1
 13199  1660  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13200  1661  3000               	movlw	0
 13201  1662  1803               	skipnc
 13202  1663  3001               	movlw	1
 13203  1664  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13204  1665  3000               	movlw	0
 13205  1666  1803               	skipnc
 13206  1667  3001               	movlw	1
 13207  1668  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13208  1669  3000               	movlw	0
 13209  166A  1803               	skipnc
 13210  166B  3001               	movlw	1
 13211  166C  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13212  166D                     l5798:	
 13213                           
 13214                           ;EEPROM_24C1025.c: 63:      }
 13215  166D  3001               	movlw	1
 13216  166E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13217  166F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13218  1670  07AB               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13219  1671  2D9A               	goto	l5800
 13220  1672                     l5802:	
 13221                           
 13222                           ;EEPROM_24C1025.c: 64:      I2C_Master_Write(*data);
 13223  1672  1283               	bcf	3,5	;RP0=0, select bank0
 13224  1673  1303               	bcf	3,6	;RP1=0, select bank0
 13225  1674  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13226  1675  0084               	movwf	4
 13227  1676  1783               	bsf	3,7
 13228  1677  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13229  1678  1383               	bcf	3,7
 13230  1679  0800               	movf	0,w
 13231  167A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13232  167B  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13233  167C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13234  167D  00A0               	movwf	I2C_Master_Write@d
 13235  167E  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13236  167F  00A1               	movwf	I2C_Master_Write@d+1
 13237  1680  160A  158A  215F  160A  118A  	fcall	_I2C_Master_Write
 13238                           
 13239                           ;EEPROM_24C1025.c: 65:      I2C_Master_Stop();
 13240  1685  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Stop
 13241                           
 13242                           ;EEPROM_24C1025.c: 66:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 13243  168A  30B9               	movlw	185
 13244  168B  1283               	bcf	3,5	;RP0=0, select bank0
 13245  168C  1303               	bcf	3,6	;RP1=0, select bank0
 13246  168D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13247  168E                     u8137:	
 13248  168E  2E8F               	nop2
 13249  168F  2E90               	nop2
 13250  1690  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13251  1691  2E8E               	goto	u8137
 13252  1692  2E93               	nop2
 13253  1693  0008               	return
 13254  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13255                           
 13256                           	psect	text58
 13257  195F                     __ptext58:	
 13258 ;; *************** function _I2C_Master_Write *****************
 13259 ;; Defined at:
 13260 ;;		line 64 in file "I2C.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  d               2    0[BANK0 ] unsigned int 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0, pclath, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 300/0
 13271 ;;		On exit  : 300/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13274 ;;      Params:         0       2       0       0       0
 13275 ;;      Locals:         0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0
 13277 ;;      Totals:         0       2       0       0       0
 13278 ;;Total ram usage:        2 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    2
 13281 ;; This function calls:
 13282 ;;		_I2C_Master_Wait
 13283 ;; This function is called by:
 13284 ;;		_EEPROM_24C1025_Write_Buffer
 13285 ;;		_EEPROM_24C1025_Read_Buffer
 13286 ;;		_EEPROM_24C1025_Write_Str
 13287 ;;		_EEPROM_24C1025_Read_Str
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           
 13292                           ;psect for function _I2C_Master_Write
 13293  195F                     _I2C_Master_Write:	
 13294                           
 13295                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 13296                           
 13297                           ;incstack = 0
 13298                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13299  195F  1683               	bsf	3,5	;RP0=1, select bank1
 13300  1960  17EB               	bsf	_generic_status^(0+128),7
 13301                           
 13302                           ;I2C.c: 67:   I2C_Master_Wait();
 13303  1961  160A  158A  2146   	fcall	_I2C_Master_Wait
 13304                           
 13305                           ;I2C.c: 68:   SSPBUF = d;
 13306  1964  1283               	bcf	3,5	;RP0=0, select bank0
 13307  1965  0820               	movf	I2C_Master_Write@d,w
 13308  1966  0093               	movwf	19	;volatile
 13309  1967  0008               	return
 13310  1968                     __end_of_I2C_Master_Write:	
 13311                           
 13312                           	psect	text59
 13313  1941                     __ptext59:	
 13314 ;; *************** function _I2C_Master_Stop *****************
 13315 ;; Defined at:
 13316 ;;		line 58 in file "I2C.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;		None
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg, status,2, status,0, pclath, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 300/800
 13327 ;;		On exit  : 300/100
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13330 ;;      Params:         0       0       0       0       0
 13331 ;;      Locals:         0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0
 13333 ;;      Totals:         0       0       0       0       0
 13334 ;;Total ram usage:        0 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    2
 13337 ;; This function calls:
 13338 ;;		_I2C_Master_Wait
 13339 ;; This function is called by:
 13340 ;;		_EEPROM_24C1025_Write_Buffer
 13341 ;;		_EEPROM_24C1025_Read_Buffer
 13342 ;;		_EEPROM_24C1025_Write_Str
 13343 ;;		_EEPROM_24C1025_Read_Str
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           
 13348                           ;psect for function _I2C_Master_Stop
 13349  1941                     _I2C_Master_Stop:	
 13350                           
 13351                           ;I2C.c: 60:   I2C_Master_Wait();
 13352                           
 13353                           ;incstack = 0
 13354                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13355  1941  160A  158A  2146   	fcall	_I2C_Master_Wait
 13356                           
 13357                           ;I2C.c: 61:   PEN = 1;
 13358  1944  1511               	bsf	17,2	;volatile
 13359  1945  0008               	return
 13360  1946                     __end_of_I2C_Master_Stop:	
 13361                           
 13362                           	psect	text60
 13363  1956                     __ptext60:	
 13364 ;; *************** function _I2C_Master_Start *****************
 13365 ;; Defined at:
 13366 ;;		line 45 in file "I2C.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;		None
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;		None
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1    wreg      void 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0, pclath, cstack
 13375 ;; Tracked objects:
 13376 ;;		On entry : 300/0
 13377 ;;		On exit  : 300/100
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13380 ;;      Params:         0       0       0       0       0
 13381 ;;      Locals:         0       0       0       0       0
 13382 ;;      Temps:          0       0       0       0       0
 13383 ;;      Totals:         0       0       0       0       0
 13384 ;;Total ram usage:        0 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:    2
 13387 ;; This function calls:
 13388 ;;		_I2C_Master_Wait
 13389 ;; This function is called by:
 13390 ;;		_EEPROM_24C1025_Write_Buffer
 13391 ;;		_EEPROM_24C1025_Read_Buffer
 13392 ;;		_EEPROM_24C1025_Write_Str
 13393 ;;		_EEPROM_24C1025_Read_Str
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           
 13398                           ;psect for function _I2C_Master_Start
 13399  1956                     _I2C_Master_Start:	
 13400                           
 13401                           ;I2C.c: 47:   Delay_Led_Memory=20;
 13402                           
 13403                           ;incstack = 0
 13404                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13405  1956  3014               	movlw	20
 13406  1957  00FA               	movwf	_Delay_Led_Memory	;volatile
 13407  1958  3000               	movlw	0
 13408  1959  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13409                           
 13410                           ;I2C.c: 48:   I2C_Master_Wait();
 13411  195A  160A  158A  2146   	fcall	_I2C_Master_Wait
 13412                           
 13413                           ;I2C.c: 49:   SEN = 1;
 13414  195D  1411               	bsf	17,0	;volatile
 13415  195E  0008               	return
 13416  195F                     __end_of_I2C_Master_Start:	
 13417                           
 13418                           	psect	text61
 13419  1946                     __ptext61:	
 13420 ;; *************** function _I2C_Master_Wait *****************
 13421 ;; Defined at:
 13422 ;;		line 40 in file "I2C.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;		None
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;		None
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  1    wreg      void 
 13429 ;; Registers used:
 13430 ;;		wreg, status,2
 13431 ;; Tracked objects:
 13432 ;;		On entry : 200/0
 13433 ;;		On exit  : 300/100
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13436 ;;      Params:         0       0       0       0       0
 13437 ;;      Locals:         0       0       0       0       0
 13438 ;;      Temps:          0       0       0       0       0
 13439 ;;      Totals:         0       0       0       0       0
 13440 ;;Total ram usage:        0 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    1
 13443 ;; This function calls:
 13444 ;;		Nothing
 13445 ;; This function is called by:
 13446 ;;		_I2C_Master_Start
 13447 ;;		_I2C_Master_RepeatedStart
 13448 ;;		_I2C_Master_Stop
 13449 ;;		_I2C_Master_Write
 13450 ;;		_I2C_Master_Read
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           
 13455                           ;psect for function _I2C_Master_Wait
 13456  1946                     _I2C_Master_Wait:	
 13457  1946                     l49:	
 13458                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13462                           
 13463  1946  1683               	bsf	3,5	;RP0=1, select bank1
 13464  1947  1914               	btfsc	20,2	;volatile
 13465  1948  2946               	goto	l49
 13466  1949  0811               	movf	17,w	;volatile
 13467  194A  391F               	andlw	31
 13468  194B  1903               	btfsc	3,2
 13469  194C  0008               	return
 13470  194D  2946               	goto	l49
 13471  194E                     __end_of_I2C_Master_Wait:	
 13472                           
 13473                           	psect	text62
 13474  07F2                     __ptext62:	
 13475 ;; *************** function _ADC_init *****************
 13476 ;; Defined at:
 13477 ;;		line 10 in file "adc.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/100
 13488 ;;		On exit  : 300/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13491 ;;      Params:         0       0       0       0       0
 13492 ;;      Locals:         0       0       0       0       0
 13493 ;;      Temps:          0       0       0       0       0
 13494 ;;      Totals:         0       0       0       0       0
 13495 ;;Total ram usage:        0 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; Hardware stack levels required when called:    1
 13498 ;; This function calls:
 13499 ;;		Nothing
 13500 ;; This function is called by:
 13501 ;;		_main
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           
 13506                           ;psect for function _ADC_init
 13507  07F2                     _ADC_init:	
 13508                           
 13509                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13510                           
 13511                           ;incstack = 0
 13512                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13513  07F2  30C0               	movlw	192
 13514  07F3  1283               	bcf	3,5	;RP0=0, select bank0
 13515  07F4  1303               	bcf	3,6	;RP1=0, select bank0
 13516  07F5  049F               	iorwf	31,f	;volatile
 13517                           
 13518                           ;adc.c: 12:      ADCON1=0b10000000;
 13519  07F6  3080               	movlw	128
 13520  07F7  1683               	bsf	3,5	;RP0=1, select bank1
 13521  07F8  009F               	movwf	31	;volatile
 13522                           
 13523                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13524  07F9  179F               	bsf	31,7	;volatile
 13525                           
 13526                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13527  07FA  1283               	bcf	3,5	;RP0=0, select bank0
 13528  07FB  141F               	bsf	31,0	;volatile
 13529  07FC  0008               	return
 13530  07FD                     __end_of_ADC_init:	
 13531                           
 13532                           	psect	text63
 13533  1358                     __ptext63:	
 13534 ;; *************** function _isr *****************
 13535 ;; Defined at:
 13536 ;;		line 29 in file "isr.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;		None
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  tempo           2    6[COMMON] unsigned int 
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  1    wreg      void 
 13543 ;; Registers used:
 13544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 300/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13550 ;;      Params:         0       0       0       0       0
 13551 ;;      Locals:         2       0       0       0       0
 13552 ;;      Temps:          6       0       0       0       0
 13553 ;;      Totals:         8       0       0       0       0
 13554 ;;Total ram usage:        8 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; This function calls:
 13557 ;;		Nothing
 13558 ;; This function is called by:
 13559 ;;		Interrupt level 1
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           
 13564                           ;psect for function _isr
 13565  1358                     _isr:	
 13566                           
 13567                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13568  1358  188B               	btfsc	11,1	;volatile
 13569                           
 13570                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13571  1359  108B               	bcf	11,1	;volatile
 13572                           
 13573                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13574                           
 13575                           ;isr.c: 37:       }
 13576  135A  1C0C               	btfss	12,0	;volatile
 13577  135B  2BD0               	goto	i1l5600
 13578                           
 13579                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13580  135C  30B1               	movlw	177
 13581  135D  008F               	movwf	15	;volatile
 13582                           
 13583                           ;isr.c: 42:                 TMR1L=0xF3;
 13584  135E  30F3               	movlw	243
 13585  135F  008E               	movwf	14	;volatile
 13586                           
 13587                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13588  1360  100C               	bcf	12,0	;volatile
 13589                           
 13590                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13591  1361  1683               	bsf	3,5	;RP0=1, select bank1
 13592  1362  1FEB               	btfss	_generic_status^(0+128),7
 13593  1363  2B66               	goto	i1l5556
 13594                           
 13595                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13596  1364  13EB               	bcf	_generic_status^(0+128),7
 13597  1365  0064               	clrwdt	;# 
 13598  1366                     i1l5556:	
 13599                           
 13600                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13601  1366  300A               	movlw	10
 13602  1367  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13603  1368  1803               	skipnc
 13604  1369  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13605  136A  3000               	movlw	0
 13606  136B  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13607                           
 13608                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13609  136C  3003               	movlw	3
 13610  136D  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13611  136E  30E8               	movlw	232
 13612  136F  1903               	skipnz
 13613  1370  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13614  1371  1C03               	skipc
 13615  1372  2B75               	goto	i1l5560
 13616                           
 13617                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13618  1373  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13619  1374  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13620  1375                     i1l5560:	
 13621                           
 13622                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13623  1375  3001               	movlw	1
 13624  1376  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13625  1377  30F4               	movlw	244
 13626  1378  1903               	skipnz
 13627  1379  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13628  137A  1803               	skipnc
 13629  137B  2B80               	goto	i1l505
 13630                           
 13631                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13632  137C  1283               	bcf	3,5	;RP0=0, select bank0
 13633  137D  1303               	bcf	3,6	;RP1=0, select bank0
 13634  137E  1786               	bsf	6,7	;volatile
 13635  137F  2B83               	goto	i1l5564
 13636  1380                     i1l505:	
 13637                           ;isr.c: 56:                 else
 13638                           
 13639                           
 13640                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13641  1380  1283               	bcf	3,5	;RP0=0, select bank0
 13642  1381  1303               	bcf	3,6	;RP1=0, select bank0
 13643  1382  1386               	bcf	6,7	;volatile
 13644  1383                     i1l5564:	
 13645                           
 13646                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13647  1383  1683               	bsf	3,5	;RP0=1, select bank1
 13648  1384  0861               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13649  1385  0462               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13650  1386  1903               	btfsc	3,2
 13651  1387  2B91               	goto	i1l507
 13652                           
 13653                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13654  1388  300A               	movlw	10
 13655  1389  02E1               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13656  138A  3000               	movlw	0
 13657  138B  1C03               	skipc
 13658  138C  03E2               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13659  138D  02E2               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13660                           
 13661                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13662  138E  1283               	bcf	3,5	;RP0=0, select bank0
 13663  138F  1706               	bsf	6,6	;volatile
 13664                           
 13665                           ;isr.c: 63:                    }
 13666  1390  2B93               	goto	i1l5570
 13667  1391                     i1l507:	
 13668                           ;isr.c: 64:                 else{
 13669                           
 13670                           
 13671                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13672  1391  1283               	bcf	3,5	;RP0=0, select bank0
 13673  1392  1306               	bcf	6,6	;volatile
 13674  1393                     i1l5570:	
 13675                           
 13676                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13677  1393  087A               	movf	_Delay_Led_Memory,w	;volatile
 13678  1394  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13679  1395  1903               	btfsc	3,2
 13680  1396  2B9F               	goto	i1l509
 13681                           
 13682                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13683  1397  300A               	movlw	10
 13684  1398  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13685  1399  3000               	movlw	0
 13686  139A  1C03               	skipc
 13687  139B  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13688  139C  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13689                           
 13690                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13691  139D  1686               	bsf	6,5	;volatile
 13692                           
 13693                           ;isr.c: 71:                    }
 13694  139E  2BA0               	goto	i1l5576
 13695  139F                     i1l509:	
 13696                           ;isr.c: 72:                 else{
 13697                           
 13698                           
 13699                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13700  139F  1286               	bcf	6,5	;volatile
 13701  13A0                     i1l5576:	
 13702                           
 13703                           ;isr.c: 77:                 tempodecorrido+=10;
 13704  13A0  300A               	movlw	10
 13705  13A1  1683               	bsf	3,5	;RP0=1, select bank1
 13706  13A2  07D9               	addwf	_tempodecorrido^(0+128),f	;volatile
 13707  13A3  1803               	skipnc
 13708  13A4  0ADA               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13709  13A5  3000               	movlw	0
 13710  13A6  07DA               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13711                           
 13712                           ;isr.c: 78:                 milisegundo+=10;
 13713  13A7  300A               	movlw	10
 13714  13A8  07DF               	addwf	_milisegundo^(0+128),f	;volatile
 13715  13A9  1803               	skipnc
 13716  13AA  0AE0               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13717  13AB  3000               	movlw	0
 13718  13AC  07E0               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13719                           
 13720                           ;isr.c: 79:                 if(milisegundo==1000){
 13721  13AD  30E8               	movlw	232
 13722  13AE  065F               	xorwf	_milisegundo^(0+128),w	;volatile
 13723  13AF  3003               	movlw	3
 13724  13B0  1903               	skipnz
 13725  13B1  0660               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13726  13B2  1D03               	btfss	3,2
 13727  13B3  2BD0               	goto	i1l5600
 13728                           
 13729                           ;isr.c: 80:                    milisegundo=0;
 13730  13B4  01DF               	clrf	_milisegundo^(0+128)	;volatile
 13731  13B5  01E0               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13732                           
 13733                           ;isr.c: 81:                    segundo++;
 13734  13B6  3001               	movlw	1
 13735  13B7  00F0               	movwf	??_isr
 13736  13B8  0870               	movf	??_isr,w
 13737  13B9  07E9               	addwf	_segundo^(0+128),f	;volatile
 13738                           
 13739                           ;isr.c: 88:                    if(segundo==60){
 13740  13BA  303C               	movlw	60
 13741  13BB  0669               	xorwf	_segundo^(0+128),w	;volatile
 13742  13BC  1D03               	btfss	3,2
 13743  13BD  2BD0               	goto	i1l5600
 13744                           
 13745                           ;isr.c: 89:                       segundo=0;
 13746  13BE  01E9               	clrf	_segundo^(0+128)	;volatile
 13747                           
 13748                           ;isr.c: 90:                       minuto++;
 13749  13BF  3001               	movlw	1
 13750  13C0  00F0               	movwf	??_isr
 13751  13C1  0870               	movf	??_isr,w
 13752  13C2  07E7               	addwf	_minuto^(0+128),f	;volatile
 13753                           
 13754                           ;isr.c: 91:                       if(minuto==60){
 13755  13C3  303C               	movlw	60
 13756  13C4  0667               	xorwf	_minuto^(0+128),w	;volatile
 13757  13C5  1D03               	btfss	3,2
 13758  13C6  2BD0               	goto	i1l5600
 13759                           
 13760                           ;isr.c: 92:                          minuto=0;
 13761  13C7  01E7               	clrf	_minuto^(0+128)	;volatile
 13762                           
 13763                           ;isr.c: 93:                          hora++;
 13764  13C8  3001               	movlw	1
 13765  13C9  00F0               	movwf	??_isr
 13766  13CA  0870               	movf	??_isr,w
 13767  13CB  07E8               	addwf	_hora^(0+128),f	;volatile
 13768                           
 13769                           ;isr.c: 94:                          if(hora==24){
 13770  13CC  3018               	movlw	24
 13771  13CD  0668               	xorwf	_hora^(0+128),w	;volatile
 13772  13CE  1903               	btfsc	3,2
 13773                           
 13774                           ;isr.c: 95:                             hora=0;
 13775  13CF  01E8               	clrf	_hora^(0+128)	;volatile
 13776  13D0                     i1l5600:	
 13777                           ;isr.c: 99:                 }
 13778                           
 13779                           
 13780                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13781  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 13782  13D1  1E8C               	btfss	12,5	;volatile
 13783  13D2  2C37               	goto	i1l523
 13784                           
 13785                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13786  13D3  1683               	bsf	3,5	;RP0=1, select bank1
 13787  13D4  146B               	bsf	_generic_status^(0+128),0
 13788                           
 13789                           ;isr.c: 109:         tempo=30;
 13790  13D5  301E               	movlw	30
 13791  13D6  00F6               	movwf	isr@tempo
 13792  13D7  3000               	movlw	0
 13793  13D8  00F7               	movwf	isr@tempo+1
 13794                           
 13795                           ;isr.c: 110:         count=0;
 13796  13D9  01DB               	clrf	_count^(0+128)	;volatile
 13797  13DA  01DC               	clrf	(_count+1)^(0+128)	;volatile
 13798                           
 13799                           ;isr.c: 111:         pointer=usart_buffer;
 13800  13DB  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13801  13DC  00F0               	movwf	??_isr
 13802  13DD  0870               	movf	??_isr,w
 13803  13DE  00E3               	movwf	_pointer^(0+128)
 13804  13DF                     i1l5622:	
 13805                           ;isr.c: 112:         while(tempo)
 13806                           
 13807                           
 13808                           ;isr.c: 112:         while(tempo)
 13809  13DF  0876               	movf	isr@tempo,w
 13810  13E0  0477               	iorwf	isr@tempo+1,w
 13811  13E1  1903               	btfsc	3,2
 13812  13E2  2C12               	goto	i1l5624
 13813                           
 13814                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13815  13E3  1283               	bcf	3,5	;RP0=0, select bank0
 13816  13E4  1303               	bcf	3,6	;RP1=0, select bank0
 13817  13E5  1E8C               	btfss	12,5	;volatile
 13818  13E6  2C0B               	goto	i1l5620
 13819                           
 13820                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13821  13E7  081A               	movf	26,w	;volatile
 13822  13E8  00F0               	movwf	??_isr
 13823  13E9  1683               	bsf	3,5	;RP0=1, select bank1
 13824  13EA  0863               	movf	_pointer^(0+128),w
 13825  13EB  0084               	movwf	4
 13826  13EC  0870               	movf	??_isr,w
 13827  13ED  1783               	bsf	3,7	;select IRP bank2
 13828  13EE  0080               	movwf	0
 13829                           
 13830                           ;isr.c: 118:                 if(count<25 -1)
 13831  13EF  085C               	movf	(_count+1)^(0+128),w	;volatile
 13832  13F0  3A80               	xorlw	128
 13833  13F1  00FF               	movwf	127
 13834  13F2  3080               	movlw	128
 13835  13F3  027F               	subwf	127,w
 13836  13F4  1D03               	skipz
 13837  13F5  2BF8               	goto	u538_25
 13838  13F6  3018               	movlw	24
 13839  13F7  025B               	subwf	_count^(0+128),w	;volatile
 13840  13F8                     u538_25:	
 13841  13F8  1803               	skipnc
 13842  13F9  2C06               	goto	i1l5618
 13843                           
 13844                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13845  13FA  3001               	movlw	1
 13846  13FB  1683               	bsf	3,5	;RP0=1, select bank1
 13847  13FC  1303               	bcf	3,6	;RP1=0, select bank1
 13848  13FD  07DB               	addwf	_count^(0+128),f	;volatile
 13849  13FE  1803               	skipnc
 13850  13FF  0ADC               	incf	(_count+1)^(0+128),f	;volatile
 13851  1400  3000               	movlw	0
 13852  1401  07DC               	addwf	(_count+1)^(0+128),f	;volatile
 13853                           
 13854                           ;isr.c: 121:                    pointer++;
 13855  1402  3001               	movlw	1
 13856  1403  00F0               	movwf	??_isr
 13857  1404  0870               	movf	??_isr,w
 13858  1405  07E3               	addwf	_pointer^(0+128),f
 13859  1406                     i1l5618:	
 13860                           
 13861                           ;isr.c: 123:                 tempo=30;
 13862  1406  301E               	movlw	30
 13863  1407  00F6               	movwf	isr@tempo
 13864  1408  3000               	movlw	0
 13865  1409  00F7               	movwf	isr@tempo+1
 13866                           
 13867                           ;isr.c: 124:             }
 13868  140A  2BDF               	goto	i1l5622
 13869  140B                     i1l5620:	
 13870                           
 13871                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13872  140B  3001               	movlw	1
 13873  140C  02F6               	subwf	isr@tempo,f
 13874  140D  3000               	movlw	0
 13875  140E  1C03               	skipc
 13876  140F  03F7               	decf	isr@tempo+1,f
 13877  1410  02F7               	subwf	isr@tempo+1,f
 13878  1411  2BDF               	goto	i1l5622
 13879  1412                     i1l5624:	
 13880                           
 13881                           ;isr.c: 131:         (*pointer)=0;
 13882  1412  1683               	bsf	3,5	;RP0=1, select bank1
 13883  1413  1303               	bcf	3,6	;RP1=0, select bank1
 13884  1414  0863               	movf	_pointer^(0+128),w
 13885  1415  0084               	movwf	4
 13886  1416  1783               	bsf	3,7	;select IRP bank2
 13887  1417  0180               	clrf	0
 13888                           
 13889                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13890  1418  1283               	bcf	3,5	;RP0=0, select bank0
 13891  1419  1C98               	btfss	24,1	;volatile
 13892  141A  2C37               	goto	i1l523
 13893                           
 13894                           ;isr.c: 134:            CREN=0;
 13895  141B  1218               	bcf	24,4	;volatile
 13896                           
 13897                           ;isr.c: 135:            CREN=1;
 13898  141C  1618               	bsf	24,4	;volatile
 13899                           
 13900                           ;isr.c: 136:            tempo=RCREG;
 13901  141D  081A               	movf	26,w	;volatile
 13902  141E  00F0               	movwf	??_isr
 13903  141F  01F1               	clrf	??_isr+1
 13904  1420  0870               	movf	??_isr,w
 13905  1421  00F6               	movwf	isr@tempo
 13906  1422  0871               	movf	??_isr+1,w
 13907  1423  00F7               	movwf	isr@tempo+1
 13908                           
 13909                           ;isr.c: 137:            tempo=RCREG;
 13910  1424  081A               	movf	26,w	;volatile
 13911  1425  00F0               	movwf	??_isr
 13912  1426  01F1               	clrf	??_isr+1
 13913  1427  0870               	movf	??_isr,w
 13914  1428  00F6               	movwf	isr@tempo
 13915  1429  0871               	movf	??_isr+1,w
 13916  142A  00F7               	movwf	isr@tempo+1
 13917                           
 13918                           ;isr.c: 138:            tempo=RCREG;
 13919  142B  081A               	movf	26,w	;volatile
 13920  142C  00F0               	movwf	??_isr
 13921  142D  01F1               	clrf	??_isr+1
 13922  142E  0870               	movf	??_isr,w
 13923  142F  00F6               	movwf	isr@tempo
 13924  1430  0871               	movf	??_isr+1,w
 13925  1431  00F7               	movwf	isr@tempo+1
 13926                           
 13927                           ;isr.c: 139:            usart_buffer[0]=0;
 13928  1432  1683               	bsf	3,5	;RP0=1, select bank3
 13929  1433  1703               	bsf	3,6	;RP1=1, select bank3
 13930  1434  0190               	clrf	_usart_buffer^(0+384)	;volatile
 13931                           
 13932                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13933  1435  1303               	bcf	3,6	;RP1=0, select bank1
 13934  1436  14EB               	bsf	_generic_status^(0+128),1
 13935  1437                     i1l523:	
 13936  1437  0875               	movf	??_isr+5,w
 13937  1438  1283               	bcf	3,5	;RP0=0, select bank0
 13938  1439  00FF               	movwf	127
 13939  143A  0874               	movf	??_isr+4,w
 13940  143B  008A               	movwf	10
 13941  143C  0873               	movf	??_isr+3,w
 13942  143D  0084               	movwf	4
 13943  143E  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13944  143F  0083               	movwf	3
 13945  1440  0EFE               	swapf	126,f
 13946  1441  0E7E               	swapf	126,w
 13947  1442  0009               	retfie
 13948  1443                     __end_of_isr:	
 13949  007E                     btemp	set	126	;btemp
 13950  007E                     wtemp0	set	126
 13951                           
 13952                           	psect	intentry
 13953  0004                     __pintentry:	
 13954                           ;incstack = 0
 13955                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13956                           
 13957  0004                     interrupt_function:	
 13958  007E                     saved_w	set	btemp
 13959  0004  00FE               	movwf	btemp
 13960  0005  0E03               	swapf	3,w
 13961  0006  00F2               	movwf	??_isr+2
 13962  0007  0804               	movf	4,w
 13963  0008  00F3               	movwf	??_isr+3
 13964  0009  080A               	movf	10,w
 13965  000A  00F4               	movwf	??_isr+4
 13966  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13967  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13968  000D  087F               	movf	btemp+1,w
 13969  000E  00F5               	movwf	??_isr+5
 13970  000F  160A  118A  2B58   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    64
    Data        0
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     47      76
    BANK3            96      0      57
    BANK2            96      0      64

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Write_Byte@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), buffer(BANK2[64]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Write_Int@local(BANK0[2]), buffer(BANK2[64]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), usart_buffer(BANK3[25]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_PROCULUS_VP_Write_String
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _EEPROM_24C1025_Write_Int->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  110843
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24285
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    51    51      0   84113
                                             62 BANK0      4     4      0
                                              0 BANK1     47    47      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   11696
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5336
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    5601
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    5127
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              6 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    5489
                                             20 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5443
                                             20 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5229
                                              6 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     605
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              8     7      1    5207
                                             15 BANK0      8     7      1
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4854
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     121       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      39       9       59.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     121      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 09:45:22 2019

                              _USART_putc 197B                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l49 1946  
         EEPROM_24C1025_Read_Buffer@range 0032          EEPROM_24C1025_Write_Str@chip_add 0029  
                                      fsr 0004                             _USART_put_int 19B6  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 181C              PROCULUS_VP_Write_String@text 005C  
      EEPROM_24C1025_Read_Buffer@cnt_1529 0030                                       l303 0F0F  
                                     l412 1A8B                                       l380 1DBF  
                                     l292 0459                                       l356 1972  
                                     l390 1AEF                                       l294 04B5  
                                     l288 044B                                       l385 1DE4  
                                     l386 1DE5                                       l661 1A31  
                                     l741 1983                                       l678 19F0  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0031  
                Decodify_Command@sizedata 00CA                                       _isr 1358  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1DF4                          _ADC_Media_10bits 1EEF  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1D80  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1D48                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1824  
                                    l1130 11B9                                      l1302 09E7  
                                    l1127 1153                                      l1146 111B  
                                    l1250 0C25                                      l1324 0B26  
                                    l1252 0C03                                      l1326 0B34  
                                    l1246 0B8C                                      l1407 10B8  
                                    l1280 0D46                                      l1450 1B3E  
                                    l1354 079E                                      l1267 0CDE  
                                    l1380 11E9                                      l1288 0D5E  
                                    l1393 123F                                      l1394 1249  
                                    l1386 1229                                      l6012 097F  
                                    l6006 0959                                      l6014 08A5  
                                    l6016 0984                                      l6024 1A01  
                                    l6026 1A0C                                      l6106 112A  
                                    l6034 1D19                                      l6130 0B62  
                                    l7100 0ABF                                      l7012 09B9  
                                    l6124 0B57                                      l6054 1D62  
                                    l6070 07CE                                      l7014 09C1  
                                    l6222 0C54                                      l6214 0C33  
                                    l6206 0C1F                                      l6056 1D78  
                                    l6072 07EA                                      l6400 06F0  
                                    l6320 04D3                                      l6080 10E0  
                                    l7104 0AC1                                      l7032 09DF  
                                    l7008 09B6                                      l6224 0C56  
                                    l6232 0C66                                      l6152 0B84  
                                    l6128 0B5A                                      l6402 070D  
                                    l6322 04DB                                      l7130 0B30  
                                    l7114 0AF3                                      l7042 0A06  
                                    l6250 0CF0                                      l6242 0CD0  
                                    l6412 0726                                      l6340 0500  
                                    l6076 10D7                                      l6500 108E  
                                    l7028 09DC                                      l6148 0B81  
                                    l6422 0758                                      l6318 04D1  
                                    l7302 007B                                      l7118 0B0C  
                                    l6158 0B96                                      l7206 1E62  
                                    l5800 159A                                      l5712 1C42  
                                    l6432 0787                                      l6408 0724  
                                    l6336 04F6                                      l6096 1107  
                                    l7048 0A12                                      l6272 0D11  
                                    l6264 0D06                                      l7152 1D88  
                                    l5802 1672                                      l6426 076E  
                                    l6338 04F8                                      l6098 1117  
                                    l7410 02DD                                      l7330 0138  
                                    l7322 010F                                      l7314 00D5  
                                    l6450 11E1                                      l7074 0A80  
                                    l6258 0CFF                                      l6266 0D08  
                                    l6348 050E                                      l7420 0312  
                                    l7404 02C0                                      l6460 11FC  
                                    l7092 0A8B                                      l7068 0A61  
                                    l7076 0A3D                                      l6276 0D13  
                                    l6196 0C0E                                      l6188 0BD2  
                                    l7244 0DF2                                      l7236 0DDB  
                                    l7228 0D93                                      l7172 1E41  
                                    l5734 155B                                      l6710 1341  
                                    l6702 1320                                      l6526 1BA3  
                                    l6550 1C81                                      l5830 1E20  
                                    l5822 1DFC                                      l7414 0301  
                                    l7326 011E                                      l6470 123D  
                                    l6462 120E                                      l7094 0AA8  
                                    l7078 0A85                                      l6294 0D56  
                                    l6198 0C10                                      l7262 0F35  
                                    l5736 1560                                      l5824 1E0A  
                                    l7352 01A1                                      l7336 0150  
                                    l6472 122E                                      l6456 11F8  
                                    l7192 1E5B                                      l5738 1561  
                                    l6802 17E0                                      l6722 16BA  
                                    l5834 1E2B                                      l6634 1B55  
                                    l6490 106F                                      l7370 01E6  
                                    l7346 0181                                      l6298 0D5A  
                                    l7274 0FA3                                      l7602 14F5  
                                    l5772 1609                                      l5940 0858  
                                    l6804 17E9                                      l6724 16BF  
                                    l6708 12D2                                      l6644 1294  
                                    l5852 1CCE                                      l7428 0366  
                                    l7364 01C9                                      l6484 1266  
                                    l7268 0F8D                                      ?_isr 0070  
                                    l5774 160E                                      l6814 1EAE  
                                    l6726 16C0                                      l6646 1299  
                                    l5846 1CB2                                      l7462 03F2  
                                    l7438 038C                                      l7390 025C  
                                    l7358 01AE                                      l7294 005E  
                                    l5776 160F                                      l5792 1648  
                                    l5936 0852                                      l6648 129A  
                                    l5864 1B36                                      l5880 1CE2  
                                    l5848 1CC0                                      l5856 1CD9  
                                    l7480 043F                                      l7456 03D8  
                                    l7448 03B2                                      l7384 023E  
                                    l7376 020D                                      l6912 19F8  
                                    l6826 1EC0                                      l5938 0857  
                                    l6770 176C                                      l5890 1DCD  
                                    l5882 1D04                                      l6578 1F7D  
                                    l6842 1ADB                                      l6850 1A51  
                                    l7474 041F                                      l7298 006D  
                                    l6930 1E88                                      l5980 0906  
                                    l6748 170D                                      l6596 1BC8  
                                    l7468 0403                                      l6908 19F5  
                                    l5798 166D                                      l5982 090B  
                                    l6766 1766                                      l6598 1BE5  
                                    l6862 1C09                                      l7486 044F  
                                    l7398 029B                                      l6950 1FB2  
                                    l5984 090C                                      l6768 176B  
                                    l6792 17B9                                      l5888 1DCA  
                                    l6856 1BF5                                      l7656 0468  
                                    l6960 1FEA                                      l6952 1FC2  
                                    l6936 1E9D                                      l7576 14CB  
                                    l6858 1BFF                                      l7498 045D  
                                    l6890 1F0B                                      l6964 1FF7  
                                    l6974 116D                                      l6978 1193  
                                    _BETA 1848                                      STR_1 1850  
                            __CFG_WDTE$ON 0000                                      STR_2 185B  
                                    STR_3 185A                                      STR_4 185C  
                                    STR_5 185A                                      STR_6 185C  
                                    STR_7 185A                                      STR_8 1857  
                             _statuspower 00EA                           ADC_Max_10Bits@i 0032  
                                    _CREN 00C4                                      u6200 0CA5  
                                    u6201 0CA6                                      u6202 0CAB  
                                    u6050 0BF2                                      u7003 1281  
                                    u6203 0CAC                                      u6060 0BF3  
                                    u7013 1292                                      u6045 0BE6  
                                    u5503 1607                                      u7103 1764  
                                    u7023 12E7                                      u5440 1C3F  
                                    u5515 15A8                                      _RCEN 048B  
                                    u5525 1A37                                      u6245 0CF2  
                                    u5463 1548                                      u7063 16A7  
                                    u5615 1CB5                                      u6191 0C91  
                                    u6183 0C78                                      u6175 0C5A  
                                    u6095 0C14                                      u8007 1DA3  
                                    u6192 0C92                                      u5473 1559  
                                    u7145 1EC6                                      u7073 16B8  
                                    u5545 1DFF                                      u7305 1FD9  
                                    u8017 1D33                                      u6345 0D30  
                                    u6193 0C97                                      u6194 0C98  
                                    u5483 15BB                                      u8107 08DB  
                                    u7083 171C                                      u8027 1A3F  
                                    u5635 1CC6                                      u7315 1FEB  
                                    u6195 0C9D                                      u6196 0C9E  
                                    u8117 0995                                      u8037 1CA6  
                                    u5565 1E0B                                      u6605 06A5  
                                    u5645 1CCF                                      u5813 1D2B  
                                    u7245 1E97                                      u8127 15DE  
                                    u5743 083F                                      u8047 1DEE  
                                    u5575 1E17                                      u6535 05B8  
                                    u8137 168E                                      u5753 0850  
                                    u8057 1B01                                      u5585 1E21  
                                    u7505 0A4F                                      u7361 117E  
                                    u7362 117F                                      u5763 08B8  
                                    u8067 1307                                      u5675 1B3F  
                                    u6635 06DC                                      u7275 1FB6  
                                    u7363 1184                                      u7364 1185  
                                    u8077 1352                                      u6645 06F4  
                                    u6565 0611                                      u5925 1120  
                                    u6805 1205                                      u7525 0A5A  
                                    u7381 11A4                                      u7365 118A  
                                    u7382 11A5                                      u7366 118B  
                                    u5783 0904                                      u8087 173D  
                                    u6735 0743                                      u7295 1FC4  
                                    u7535 0A6F                                      u7383 11AA  
                                    u7703 1D9A                                      u7384 11AB  
                                    u8097 17FA                                      u6745 0761  
                                    u6665 06FF                                      u5865 10E9  
                                    u6825 1221                                      u7385 11B0  
                                    u7386 11B1                                      u6755 0779  
                                    u6845 1236                                      u7565 0A8F  
                                    u5895 1108                                      u7655 0ADE  
                                    u7495 0A46                                      u7665 0AFC  
                                    u7585 0A9A                                      u7675 0B17  
                                    u6965 1F89                                      u6885 1251  
                                    u7695 1C57                                      u6995 1B5E  
                                    u7997 144B                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 1006                                      _main 1443  
                                    _hora 00E8                                      _itoa 1AC8  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
                                    _utoa 106A         __size_of_EEPROM_24C1025_Write_Str 00E9  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 0022               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 07FD  
                        _BALANCE_RESISTOR 184C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002A                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 0B3C                                     ?_itoa 0031  
                                   _EEADR 010D                           __end_of___flmul 07AB  
                         __end_of___flsub 1A88                           __end_of___fltol 1139  
                                   _ANSEL 0188                           __end_of___lldiv 2000  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1E30                                     i1l505 1380  
                         __end_of___lwmod 1CDE                                     i1l523 1437  
                                   i1l507 1391                                     i1l509 139F  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 197B  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E6              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00DB                                     _errno 00D7  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01A9                ?_EEPROM_24C1025_Write_Byte 002F  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0034  
                            __end_of_BETA 184C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1532                              __end_of_itoa 1AE8  
                            __end_of_utoa 10CE                            Send_To_MB@size 0021  
                        _USART_put_buffer 1B4F                  __end_of_EEPROM_Read_Byte 1B0A  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 106A                                    ??_utoa 002C  
                        _USART_put_string 1CDE                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0800  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 19A0                                    i1l5600 13D0  
                                  i1l5620 140B                                    i1l5622 13DF  
                                  i1l5624 1412                                    i1l5560 1375  
                                  i1l5618 1406                                    i1l5570 1393  
                                  i1l5564 1383                                    i1l5556 1366  
                                  i1l5576 13A0         __end_of_EEPROM_24C1025_Write_Byte 19B6  
                                  u538_25 13F8                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 002F                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
                        __end_of___xxtofl 126F                        PROCULUS_VP_Write@i 0059  
                __end_of_Decodify_Command 04B6                  ?_EEPROM_24C1025_Read_Int 0034  
                ?_EEPROM_24C1025_Read_Str 0026                  _I2C_Master_RepeatedStart 1001  
    __size_of_EEPROM_24C1025_Write_Buffer 0162                                    ___flge 1139  
                               ??___fladd 0052                                 ??___fldiv 0049  
                               ??___flmul 0031                                 ??___flsub 0066  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00DD  
                       __end_of_ROOM_TEMP 1820                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 0110  
                       _USART_to_Protocol 1F45                           USART_putc@value 0020  
                                  _minuto 00E7                                 ??_captura 0022  
                      ?_USART_to_Protocol 0070              Decodify_Command@add_24LCxxxx 00CB  
                                  _strcat 1BF0                                    _strcpy 1A4C  
                                  _strlen 19FA         EEPROM_24C1025_Read_Buffer@mem_add 0026  
        __end_of_EEPROM_24C1025_Read_Byte 1A2F                        __size_of__Umul8_16 0023  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 0034  
                               ?_ADC_init 0070                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 0010  
                __end_of_MediaPlacaVaccum 1000                                ___flge@ff1 0020  
                              ___flge@ff2 0024                              ___xxtofl@arg 003D  
                            ___xxtofl@exp 003C                              ___xxtofl@val 0033  
                        __end_oflog@coeff 1848                   __end_of__initialization 0032  
     PROCULUS_Control_Register_Write@size 0052                                ___fltol@f1 0043  
                            _Board_Number 00E5                  __end_of_ADC_Media_10bits 1F45  
                          __pcstackCOMMON 0070                  __size_of_PROCULUS_Buzzer 0022  
               __end_of_USART_to_Protocol 1FA2                     USART_put_string@vetor 0021  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0032  
                __size_of_my_delay_ms_WDT 0038                            _OPTION_REGbits 0081  
                 __size_of_ADC_Max_10Bits 003E                  __end_of_BALANCE_RESISTOR 1850  
        __end_of_EEPROM_24C1025_Write_Int 1AC8                        Decodify_Command@hh 00A0  
                      Decodify_Command@mm 00AA          __end_of_EEPROM_24C1025_Write_Str 1358  
                      Decodify_Command@ss 00B4                      USART_put_buffer@loop 0026  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1BF0           __end_of_EEPROM_24C1025_Fill_All 1EEF  
                             ?_Send_To_MB 0070                    __size_of_Send_Reply_OK 0009  
                              __pbssBANK1 00CF                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        _RESISTOR_ROOM_TEMP 1818  
         __end_of_EEPROM_24C1025_Read_Int 1B9B           __end_of_EEPROM_24C1025_Read_Str 1800  
                ?_Package_Usart_is_for_me 0070                                 ?_Save_Log 0058  
                          _PROCULUS_Delay 1A2F                         __end_of__Umul8_16 1B4F  
                              __pmaintext 1443                                   ?___flge 0020  
                     Save_Log@add_datalog 0058                       _EEPROM_Read_Integer 1B9B  
              PROCULUS_Show_Screen@screen 0056                                __pintentry 0004  
                    _PROCULUS_Show_Screen 198B                        ADC_Max_10Bits@Temp 002E  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020                         MediaPlacaVaccum@i 00A9  
                               ?___xxtofl 0033                                   _MAX_ADC 1820  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00BE  
             EEPROM_24C1025_Read_Int@data 003B                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 19E3                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 1A13  
                              __stringtab 1800                     Decodify_Command@valor 00C8  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1B73                __end_of_EEPROM_Read_String 1AA8  
                  __end_of_PROCULUS_Delay 1A4C                  __end_of_USART_put_string 1D11  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00D3  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0030  
                                 _Tensao1 00CF                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 005D               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 04B6                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1A6A                                   ___fltol 10CE  
                                 ___lldiv 1FA2                                   ___lwdiv 1DF4  
                                 ___lwmod 1CAC                             _Send_Reply_OK 1968  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 1971                          _statuspower_memo 007C  
                                 __ptext1 1D80                                   __ptext2 1E30  
                                 __ptext3 0D69                                   __ptext4 1A6A  
                                 __ptext5 0B3C                                   __ptext6 1139  
                                 __ptext7 099B                                   __ptext8 19E3  
                                 __ptext9 1EEF                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00E4                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcat 002C                           __size_of_strcpy 001E  
                         __size_of_strlen 0019                              __size_of_isr 00EB  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 00E9                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 002D                            _usart_protocol 01B9  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0008  
                __size_of_I2C_Master_Stop 0005             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00E3             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 194F                        __end_of_USART_init 1E6C  
         __end_of_Package_Usart_is_for_me 19FA                        __end_of_USART_putc 198B  
                       ADC_Media_10bits@i 0049                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 1AA8                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 126F                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0037                                   itoa@val 0031  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
               __size_of_I2C_Master_Start 0009                 __size_of_I2C_Master_Write 0009  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 005E  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 19A0  
                                 utoa@val 0028          __size_of_EEPROM_24C1025_Fill_All 0045  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 007A  
            ??_EEPROM_24C1025_Read_Buffer 002D             EEPROM_24C1025_Write_Str@range 002A  
                               _ROOM_TEMP 181C                            _ADC_Max_10Bits 1E6C  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0028  
        __size_of_EEPROM_24C1025_Read_Str 016C                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 1694               _EEPROM_24C1025_Write_Buffer 1532  
                             ___fldiv@grs 0055                               ___fldiv@rem 004E  
    PROCULUS_Control_Register_Write@vetor 0054          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 004E          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00C1  
                       ?_MediaPlacaVaccum 0070                     PROCULUS_VP_Write@size 0056  
         EEPROM_24C1025_Read_Str@chip_add 002E                               ___flmul@grs 0039  
                      ??_MediaPlacaVaccum 0066                  _PROCULUS_VP_Write_String 19CC  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 0173  
                       ?_ADC_Media_10bits 0041                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0058                        ??_ADC_Media_10bits 0045  
                          __end_of___flge 11CC                     __end_of_USART_put_int 19CC  
                  __end_of_ADC_Max_10Bits 1EAA                               _BAUDCTLbits 0187  
                          __end_of_strcat 1C1C                            __end_of_strcpy 1A6A  
                          __end_of_strlen 1A13                       start_initialization 0015  
                             __end_of_isr 1443                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1CAC  
        EEPROM_24C1025_Write_Int@chip_add 0055                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 0064                                 __Umul8_16 1B2C  
                      __end_of_Send_To_MB 0828          __size_of_Package_Usart_is_for_me 0017  
                         ?_ADC_Max_10Bits 002A                                  ??_strcat 0022  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 0038        EEPROM_24C1025_Write_Buffer@mem_add 0022  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 002F                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         _PROCULUS_VP_Write 07AB  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1956  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 195F  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00D9  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1B0A  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 1EAA  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1A88  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 099B                _EEPROM_24C1025_Read_Buffer 0828  
                   MediaPlacaVaccum@Valor 00A0                                  ?_captura 0020  
                               __pstrings 1800                     MediaPlacaVaccum@canal 00A4  
                         _my_delay_ms_WDT 1D80                   _EEPROM_24C1025_Read_Int 1B73  
                 _EEPROM_24C1025_Read_Str 1694                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0054                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                 __end_of_PROCULUS_VP_Write 07F2  
              EEPROM_24C1025_Read_Str@cnt 002D                                  _ADC_init 07F2  
                        ___lwdiv@quotient 0026                   EEPROM_Write_Integer@ptr 002A  
                        ??_PROCULUS_Delay 0022                       ADC_Max_10Bits@canal 002D  
          EEPROM_24C1025_Read_Buffer@data 002B            EEPROM_24C1025_Read_Buffer@ctrl 0033  
                     ADC_Max_10Bits@value 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0022                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 0022                      ??_EEPROM_Read_String 0024  
                               clear_ram0 194E                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0055  
                  Decodify_Command@OutPut 00C3                           _PT100_TRANSLADA 1810  
                         _Delay_Led_Usart 00E1              EEPROM_24C1025_Read_Byte@data 0039  
             __end_of_EEPROM_Read_Integer 1BC5                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0480                      _EEPROM_Write_Integer 1C7A  
          EEPROM_24C1025_Read_Int@mem_add 0034                                 main@reset 006D  
              ??_PROCULUS_VP_Write_String 005D                       I2C_Master_Read@temp 0024  
                 __end_of_PROCULUS_Buzzer 1B2C                            _generic_status 00EB  
                              _EECON1bits 018C                                  _Save_Log 1006  
               ??_EEPROM_24C1025_Fill_All 0030                       __end_of_my_delay_ms 1D48  
            EEPROM_24C1025_Read_Str@range 002F              EEPROM_24C1025_Read_Str@texto 002A  
                 __end_of_my_delay_ms_WDT 1DB8                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 0005                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 0038                   _Package_Usart_is_for_me 19E3  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002B  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                EEPROM_24C1025_Fill_All@i 0034                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1C49  
                         _I2C_Master_Read 1C1C                                  ___xxtofl 11CC  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 1946  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0038  
                         _I2C_Master_Stop 1941                 __size_of_ADC_Media_10bits 0056  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0025  
                                __ptext10 11CC                                  __ptext11 1E6C  
                                __ptext20 106A                                  __ptext12 1D11  
                                __ptext21 1CAC                                  __ptext13 1971  
                                __ptext30 1B2C                                  __ptext22 1F45  
                                __ptext14 1C49                                  __ptext31 1AA8  
                                __ptext23 1B4F                                  __ptext15 1FA2  
                                __ptext40 197B                                  __ptext32 19CC  
                                __ptext24 0800                                  __ptext16 0036  
                                __ptext41 1A2F                                  __ptext33 19FA  
                                __ptext25 1968                                  __ptext17 1A4C  
                                __ptext50 1694                                  __ptext42 1BC5  
                                __ptext34 07AB                                  __ptext26 1CDE  
                                __ptext18 1BF0                                  __ptext51 1B73  
                                __ptext43 1C7A                                  __ptext35 198B  
                                __ptext27 1006                                  __ptext19 1AC8  
                                __ptext60 1956                                  __ptext52 1A13  
                                __ptext44 1DB8                                  __ptext36 1B0A  
                                __ptext28 10CE                                  __ptext61 1946  
                                __ptext53 0828                                  __ptext45 1A88  
                                __ptext37 1DF4                                  __ptext29 04B6  
                                __ptext62 07F2                                  __ptext54 1001  
                                __ptext46 1B9B                                  __ptext38 1D48  
                                __ptext63 1358                                  __ptext55 1C1C  
                                __ptext47 1AE8                                  __ptext39 19B6  
                                __ptext56 1EAA                                  __ptext48 126F  
                                __ptext57 1532                                  __ptext49 19A0  
                                __ptext58 195F                                  __ptext59 1941  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 004E  
                          _PT100_CONSTANT 1814                      MediaPlacaVaccum@Temp 00A5  
                              strcpy@from 0020                             __size_of_main 00EF  
                           __size_of_itoa 0020                             __size_of_utoa 0064  
            EEPROM_24C1025_Fill_All@value 002F                PROCULUS_VP_Write_String@vp 005A  
                 __end_of_PT100_TRANSLADA 1814       EEPROM_24C1025_Write_Buffer@sizedata 0026  
                             _milisegundo 00DF                          ??_ADC_Max_10Bits 002C  
                          _Delay_Led_Tmr0 0078             __size_of_PROCULUS_Show_Screen 0015  
                     _EEPROM_Write_String 1BC5                                  log@coeff 1824  
                __end_of_I2C_Master_Start 195F                  __end_of_I2C_Master_Write 1968  
                              _INTCONbits 000B                    __end_of_PT100_CONSTANT 1818  
                                isr@tempo 0076                                  itoa@base 0033  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1AE8  
                             _my_delay_ms 1D11                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 0016              EEPROM_24C1025_Write_Int@data 0052  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0027  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
             EEPROM_24C1025_Fill_All@page 0035                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1971  
                 __end_of_I2C_Master_Init 1C7A                   __end_of_I2C_Master_Read 1C49  
                 __end_of_I2C_Master_Wait 194E                   __end_of_I2C_Master_Stop 1946  
            EEPROM_24C1025_Write_Str@data 0026              EEPROM_24C1025_Write_Str@ctrl 002B  
               __size_of_USART_put_buffer 0024               ?_EEPROM_24C1025_Read_Buffer 0026  
         EEPROM_24C1025_Fill_All@chip_add 0033                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 002A                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0036  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 0033                          ___lldiv@quotient 0029  
                       I2C_Master_Write@d 0020                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0023  
                                strcpy@to 0022                           ___lwmod@counter 0025  
                                stringdir 180A                                  stringtab 1800  
                       _EEPROM_Write_Byte 1DB8            EEPROM_24C1025_Read_Str@mem_add 0026  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 001C  
               ?_EEPROM_24C1025_Read_Byte 0034                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1E30  
