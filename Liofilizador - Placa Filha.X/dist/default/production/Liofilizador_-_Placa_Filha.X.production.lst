

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 07:18:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103                           
  1104                           	psect	strings
  1105  1000                     __pstrings:	
  1106  1000                     stringtab:	
  1107  1000                     __stringtab:	
  1108                           
  1109                           ;	String table - string pointers are 1 byte each
  1110  1000  1BFF               	btfsc	btemp+1,7
  1111  1001  280A               	ljmp	stringcode
  1112  1002  1383               	bcf	3,7
  1113  1003  187F               	btfsc	btemp+1,0
  1114  1004  1783               	bsf	3,7
  1115  1005  0800               	movf	0,w
  1116  1006  0A84               	incf	4,f
  1117  1007  1903               	skipnz
  1118  1008  0AFF               	incf	btemp+1,f
  1119  1009  0008               	return
  1120  100A                     stringcode:	
  1121  100A                     stringdir:	
  1122  100A  3010               	movlw	high stringdir
  1123  100B  008A               	movwf	10
  1124  100C  0804               	movf	4,w
  1125  100D  0A84               	incf	4,f
  1126  100E  0782               	addwf	2,f
  1127  100F                     __stringbase:	
  1128  100F  3400               	retlw	0
  1129  1010                     __end_of__stringtab:	
  1130  1010                     _PT100_TRANSLADA:	
  1131  1010  3466               	retlw	102
  1132  1011  3466               	retlw	102
  1133  1012  34A6               	retlw	166
  1134  1013  34BF               	retlw	191
  1135  1014                     __end_of_PT100_TRANSLADA:	
  1136  1014                     _PT100_CONSTANT:	
  1137  1014  3414               	retlw	20
  1138  1015  34AE               	retlw	174
  1139  1016  342B               	retlw	43
  1140  1017  34C1               	retlw	193
  1141  1018                     __end_of_PT100_CONSTANT:	
  1142  1018                     _RESISTOR_ROOM_TEMP:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1145  1018  3400               	retlw	0
  1146  1019  3440               	retlw	64
  1147  101A  341C               	retlw	28
  1148  101B  3446               	retlw	70
  1149  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1150  101C                     _ROOM_TEMP:	
  1151                           
  1152                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1153  101C  3466               	retlw	102
  1154  101D  3486               	retlw	134
  1155  101E  3496               	retlw	150
  1156  101F  3443               	retlw	67
  1157  1020                     __end_of_ROOM_TEMP:	
  1158  1020                     _MAX_ADC:	
  1159                           
  1160                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1161  1020  3400               	retlw	0
  1162  1021  34C0               	retlw	192
  1163  1022  347F               	retlw	127
  1164  1023  3444               	retlw	68
  1165  1024                     __end_of_MAX_ADC:	
  1166  1024                     log@coeff:	
  1167  1024  3400               	retlw	0
  1168  1025  3400               	retlw	0
  1169  1026  3400               	retlw	0
  1170  1027  3400               	retlw	0
  1171  1028  34C4               	retlw	196
  1172  1029  34FF               	retlw	255
  1173  102A  347F               	retlw	127
  1174  102B  343F               	retlw	63
  1175  102C  3480               	retlw	128
  1176  102D  34EF               	retlw	239
  1177  102E  34FF               	retlw	255
  1178  102F  34BE               	retlw	190
  1179  1030  3490               	retlw	144
  1180  1031  34E1               	retlw	225
  1181  1032  34A9               	retlw	169
  1182  1033  343E               	retlw	62
  1183  1034  34EC               	retlw	236
  1184  1035  3482               	retlw	130
  1185  1036  3476               	retlw	118
  1186  1037  34BE               	retlw	190
  1187  1038  3482               	retlw	130
  1188  1039  34AD               	retlw	173
  1189  103A  342B               	retlw	43
  1190  103B  343E               	retlw	62
  1191  103C  340E               	retlw	14
  1192  103D  343C               	retlw	60
  1193  103E  34C3               	retlw	195
  1194  103F  34BD               	retlw	189
  1195  1040  3487               	retlw	135
  1196  1041  34D1               	retlw	209
  1197  1042  3413               	retlw	19
  1198  1043  343D               	retlw	61
  1199  1044  3441               	retlw	65
  1200  1045  3478               	retlw	120
  1201  1046  34D3               	retlw	211
  1202  1047  34BB               	retlw	187
  1203  1048                     __end_oflog@coeff:	
  1204  1048                     _BETA:	
  1205                           
  1206                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1207  1048  3400               	retlw	0
  1208  1049  3460               	retlw	96
  1209  104A  3478               	retlw	120
  1210  104B  3445               	retlw	69
  1211  104C                     __end_of_BETA:	
  1212  104C                     _BALANCE_RESISTOR:	
  1213                           
  1214                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1215  104C  3400               	retlw	0
  1216  104D  3440               	retlw	64
  1217  104E  341C               	retlw	28
  1218  104F  3446               	retlw	70
  1219  1050                     __end_of_BALANCE_RESISTOR:	
  1220  0019                     _TXREG	set	25
  1221  0018                     _RCSTAbits	set	24
  1222  001A                     _RCREG	set	26
  1223  000E                     _TMR1L	set	14
  1224  000F                     _TMR1H	set	15
  1225  000C                     _PIR1bits	set	12
  1226  001E                     _ADRESH	set	30
  1227  001F                     _ADCON0bits	set	31
  1228  0005                     _PORTAbits	set	5
  1229  0007                     _PORTCbits	set	7
  1230  0010                     _T1CON	set	16
  1231  000B                     _INTCONbits	set	11
  1232  0006                     _PORTBbits	set	6
  1233  0009                     _PORTE	set	9
  1234  0007                     _PORTC	set	7
  1235  0005                     _PORTA	set	5
  1236  0013                     _SSPBUF	set	19
  1237  0014                     _SSPCON	set	20
  1238  0006                     _PORTB	set	6
  1239  00C4                     _CREN	set	196
  1240  0081                     _TMR1CS	set	129
  1241  0085                     _T1CKPS1	set	133
  1242  0084                     _T1CKPS0	set	132
  1243  008C                     _PIE1bits	set	140
  1244  0099                     _SPBRG	set	153
  1245  0098                     _TXSTAbits	set	152
  1246  009E                     _ADRESL	set	158
  1247  009F                     _ADCON1	set	159
  1248  009F                     _ADCON1bits	set	159
  1249  0095                     _WPUB	set	149
  1250  0081                     _OPTION_REGbits	set	129
  1251  0089                     _TRISE	set	137
  1252  0087                     _TRISC	set	135
  1253  0086                     _TRISB	set	134
  1254  0085                     _TRISA	set	133
  1255  008F                     _OSCCONbits	set	143
  1256  0094                     _SSPSTAT	set	148
  1257  0093                     _SSPADD	set	147
  1258  0091                     _SSPCON2	set	145
  1259  043F                     _TRISC7	set	1087
  1260  043E                     _TRISC6	set	1086
  1261  0460                     _TMR1IE	set	1120
  1262  048C                     _ACKEN	set	1164
  1263  048D                     _ACKDT	set	1165
  1264  048B                     _RCEN	set	1163
  1265  048A                     _PEN	set	1162
  1266  0489                     _RSEN	set	1161
  1267  0488                     _SEN	set	1160
  1268  043C                     _TRISC4	set	1084
  1269  043B                     _TRISC3	set	1083
  1270  010C                     _EEDATA	set	268
  1271  010D                     _EEADR	set	269
  1272  0187                     _BAUDCTLbits	set	391
  1273  018D                     _EECON2	set	397
  1274  018C                     _EECON1bits	set	396
  1275  0189                     _ANSELH	set	393
  1276  0188                     _ANSEL	set	392
  1277  1050                     STR_1:	
  1278  1050  3476               	retlw	118	;'v'
  1279  1051  3431               	retlw	49	;'1'
  1280  1052  342E               	retlw	46	;'.'
  1281  1053  3430               	retlw	48	;'0'
  1282  1054  342E               	retlw	46	;'.'
  1283  1055  3433               	retlw	51	;'3'
  1284  1056  3400               	retlw	0
  1285  1057                     STR_8:	
  1286  1057  344F               	retlw	79	;'O'
  1287  1058  344B               	retlw	75	;'K'
  1288  1059  3400               	retlw	0
  1289  105A                     STR_3:	
  1290  105A  3430               	retlw	48	;'0'
  1291  105B  3400               	retlw	0
  1292  105C                     STR_4:	
  1293  105C  343A               	retlw	58	;':'
  1294  105D  3400               	retlw	0
  1295  105B                     
  1296                           ; #config settings
  1297  0000                     
  1298                           	psect	cinit
  1299  0015                     start_initialization:	
  1300  0015                     __initialization:	
  1301                           
  1302                           ; Clear objects allocated to COMMON
  1303  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1304  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1305  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1306  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1307  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1308                           
  1309                           ; Clear objects allocated to BANK1
  1310  001A  1383               	bcf	3,7	;select IRP bank0
  1311  001B  30CF               	movlw	low __pbssBANK1
  1312  001C  0084               	movwf	4
  1313  001D  30EC               	movlw	low (__pbssBANK1+29)
  1314  001E  160A  158A  2110  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to BANK3
  1317  0023  1783               	bsf	3,7	;select IRP bank2
  1318  0024  3090               	movlw	low __pbssBANK3
  1319  0025  0084               	movwf	4
  1320  0026  30C9               	movlw	low (__pbssBANK3+57)
  1321  0027  160A  158A  2110  120A  118A  	fcall	clear_ram0
  1322                           
  1323                           ; Clear objects allocated to BANK2
  1324  002C  3010               	movlw	low __pbssBANK2
  1325  002D  0084               	movwf	4
  1326  002E  3050               	movlw	low (__pbssBANK2+64)
  1327  002F  160A  158A  2110   	fcall	clear_ram0
  1328  0032                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331  0032                     __end_of__initialization:	
  1332  0032  0183               	clrf	3
  1333  0033  160A  118A  2C47   	ljmp	_main	;jump to C main() function
  1334                           
  1335                           	psect	bssCOMMON
  1336  0078                     __pbssCOMMON:	
  1337  0078                     _Delay_Led_Tmr0:	
  1338  0078                     	ds	2
  1339  007A                     _Delay_Led_Memory:	
  1340  007A                     	ds	2
  1341  007C                     _statuspower_memo:	
  1342  007C                     	ds	1
  1343                           
  1344                           	psect	bssBANK1
  1345  00CF                     __pbssBANK1:	
  1346  00CF                     _Tensao1:	
  1347  00CF                     	ds	4
  1348  00D3                     _Vaccum0:	
  1349  00D3                     	ds	4
  1350  00D7                     _errno:	
  1351  00D7                     	ds	2
  1352  00D9                     _tempodecorrido:	
  1353  00D9                     	ds	2
  1354  00DB                     _count:	
  1355  00DB                     	ds	2
  1356  00DD                     _header:	
  1357  00DD                     	ds	2
  1358  00DF                     _milisegundo:	
  1359  00DF                     	ds	2
  1360  00E1                     _Delay_Led_Usart:	
  1361  00E1                     	ds	2
  1362  00E3                     _pointer:	
  1363  00E3                     	ds	1
  1364  00E4                     _destino:	
  1365  00E4                     	ds	1
  1366  00E5                     _Board_Number:	
  1367  00E5                     	ds	1
  1368  00E6                     _canal:	
  1369  00E6                     	ds	1
  1370  00E7                     _minuto:	
  1371  00E7                     	ds	1
  1372  00E8                     _hora:	
  1373  00E8                     	ds	1
  1374  00E9                     _segundo:	
  1375  00E9                     	ds	1
  1376  00EA                     _statuspower:	
  1377  00EA                     	ds	1
  1378  00EB                     _generic_status:	
  1379  00EB                     	ds	1
  1380                           
  1381                           	psect	bssBANK3
  1382  0190                     __pbssBANK3:	
  1383  0190                     _usart_buffer:	
  1384  0190                     	ds	25
  1385  01A9                     _texto:	
  1386  01A9                     	ds	16
  1387  01B9                     _usart_protocol:	
  1388  01B9                     	ds	16
  1389                           
  1390                           	psect	bssBANK2
  1391  0110                     __pbssBANK2:	
  1392  0110                     _buffer:	
  1393  0110                     	ds	64
  1394                           
  1395                           	psect	clrtext
  1396  1910                     clear_ram0:	
  1397                           ;	Called with FSR containing the base address, and
  1398                           ;	W with the last address+1
  1399                           
  1400  1910  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401  1911                     clrloop0:	
  1402  1911  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403  1912  0A84               	incf	4,f	;increment pointer
  1404  1913  0604               	xorwf	4,w	;XOR with final address
  1405  1914  1903               	btfsc	3,2	;have we reached the end yet?
  1406  1915  3400               	retlw	0	;all done for this memory range, return
  1407  1916  0604               	xorwf	4,w	;XOR again to restore value
  1408  1917  2911               	goto	clrloop0	;do the next byte
  1409                           
  1410                           	psect	cstackBANK1
  1411  00A0                     __pcstackBANK1:	
  1412  00A0                     MediaPlacaVaccum@Valor:	
  1413  00A0                     Decodify_Command@hh:	
  1414                           ; 4 bytes @ 0x0
  1415                           
  1416                           
  1417                           ; 10 bytes @ 0x0
  1418  00A0                     	ds	4
  1419  00A4                     MediaPlacaVaccum@canal:	
  1420                           
  1421                           ; 1 bytes @ 0x4
  1422  00A4                     	ds	1
  1423  00A5                     MediaPlacaVaccum@Temp:	
  1424                           
  1425                           ; 4 bytes @ 0x5
  1426  00A5                     	ds	4
  1427  00A9                     MediaPlacaVaccum@i:	
  1428                           
  1429                           ; 2 bytes @ 0x9
  1430  00A9                     	ds	1
  1431  00AA                     Decodify_Command@mm:	
  1432                           
  1433                           ; 10 bytes @ 0xA
  1434  00AA                     	ds	10
  1435  00B4                     Decodify_Command@ss:	
  1436                           
  1437                           ; 10 bytes @ 0x14
  1438  00B4                     	ds	10
  1439  00BE                     Decodify_Command@dados:	
  1440                           
  1441                           ; 2 bytes @ 0x1E
  1442  00BE                     	ds	2
  1443  00C0                     Decodify_Command@add:	
  1444                           
  1445                           ; 1 bytes @ 0x20
  1446  00C0                     	ds	1
  1447  00C1                     Decodify_Command@tempint:	
  1448                           
  1449                           ; 2 bytes @ 0x21
  1450  00C1                     	ds	2
  1451  00C3                     Decodify_Command@OutPut:	
  1452                           
  1453                           ; 4 bytes @ 0x23
  1454  00C3                     	ds	4
  1455  00C7                     Decodify_Command@tempchar:	
  1456                           
  1457                           ; 1 bytes @ 0x27
  1458  00C7                     	ds	1
  1459  00C8                     Decodify_Command@valor:	
  1460                           
  1461                           ; 2 bytes @ 0x28
  1462  00C8                     	ds	2
  1463  00CA                     Decodify_Command@sizedata:	
  1464                           
  1465                           ; 1 bytes @ 0x2A
  1466  00CA                     	ds	1
  1467  00CB                     Decodify_Command@add_24LCxxxx:	
  1468                           
  1469                           ; 4 bytes @ 0x2B
  1470  00CB                     	ds	4
  1471                           
  1472                           	psect	cstackCOMMON
  1473  0070                     __pcstackCOMMON:	
  1474  0070                     ?_ADC_init:	
  1475  0070                     ?_MediaPlacaVaccum:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_Decodify_Command:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_USART_to_Protocol:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_Send_To_MB:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_Send_Reply_OK:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_EEPROM_Read_Byte:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_USART_putc:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_Package_Usart_is_for_me:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_I2C_Master_Wait:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_I2C_Master_Start:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_I2C_Master_RepeatedStart:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_I2C_Master_Stop:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_main:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_isr:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ??_isr:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0x0
  1522  0070                     	ds	6
  1523  0076                     isr@tempo:	
  1524                           
  1525                           ; 2 bytes @ 0x6
  1526  0076                     	ds	2
  1527                           
  1528                           	psect	cstackBANK0
  1529  0020                     __pcstackBANK0:	
  1530  0020                     ?___flge:	
  1531  0020                     ?_my_delay_ms_WDT:	
  1532                           ; 1 bit 
  1533                           
  1534  0020                     ??_ADC_init:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0020                     ?_USART_init:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0020                     ??_USART_to_Protocol:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0020                     ?_EEPROM_Write_Byte:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0020                     ??_EEPROM_Read_Byte:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0020                     ??_USART_putc:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0020                     ?_strcpy:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0020                     ?_strcat:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0020                     ?_my_delay_ms:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0020                     ??_Package_Usart_is_for_me:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0020                     ?_PROCULUS_Delay:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0020                     ??_I2C_Master_Wait:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0020                     ??_I2C_Master_Start:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0020                     ??_I2C_Master_RepeatedStart:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0020                     ??_I2C_Master_Stop:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0020                     ?_I2C_Master_Write:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0020                     ?_strlen:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0020                     ?_captura:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588  0020                     ?__Umul8_16:	
  1589                           ; 2 bytes @ 0x0
  1590                           
  1591  0020                     ?_I2C_Master_Read:	
  1592                           ; 2 bytes @ 0x0
  1593                           
  1594  0020                     ?___lwdiv:	
  1595                           ; 2 bytes @ 0x0
  1596                           
  1597  0020                     ?___lwmod:	
  1598                           ; 2 bytes @ 0x0
  1599                           
  1600  0020                     ?___lldiv:	
  1601                           ; 2 bytes @ 0x0
  1602                           
  1603  0020                     EEPROM_Write_Byte@dado:	
  1604                           ; 4 bytes @ 0x0
  1605                           
  1606  0020                     Package_Usart_is_for_me@retorno:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     USART_putc@value:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     strcpy@from:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     __Umul8_16@multiplicand:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     I2C_Master_Write@d:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     I2C_Master_Read@a:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624  0020                     PROCULUS_Delay@tempo_ms:	
  1625                           ; 2 bytes @ 0x0
  1626                           
  1627  0020                     ___lwdiv@divisor:	
  1628                           ; 2 bytes @ 0x0
  1629                           
  1630  0020                     ___lwmod@divisor:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0020                     strcat@from:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0020                     my_delay_ms@time:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0020                     my_delay_ms_WDT@time:	
  1640                           ; 4 bytes @ 0x0
  1641                           
  1642  0020                     USART_init@baudrate:	
  1643                           ; 4 bytes @ 0x0
  1644                           
  1645  0020                     ___lldiv@divisor:	
  1646                           ; 4 bytes @ 0x0
  1647                           
  1648  0020                     ___flge@ff1:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0x0
  1653  0020                     	ds	1
  1654  0021                     ??_Send_To_MB:	
  1655  0021                     ?_USART_put_string:	
  1656                           ; 1 bytes @ 0x1
  1657                           
  1658  0021                     ??_EEPROM_Write_Byte:	
  1659                           ; 1 bytes @ 0x1
  1660                           
  1661  0021                     ?_USART_put_buffer:	
  1662                           ; 1 bytes @ 0x1
  1663                           
  1664  0021                     ??_strcpy:	
  1665                           ; 1 bytes @ 0x1
  1666                           
  1667  0021                     Send_To_MB@size:	
  1668                           ; 1 bytes @ 0x1
  1669                           
  1670  0021                     USART_put_buffer@size:	
  1671                           ; 1 bytes @ 0x1
  1672                           
  1673  0021                     USART_put_string@vetor:	
  1674                           ; 2 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0x1
  1678  0021                     	ds	1
  1679  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1680  0022                     ?_EEPROM_24C1025_Write_Str:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0022                     ??_strlen:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686  0022                     ??_strcat:	
  1687                           ; 1 bytes @ 0x2
  1688                           
  1689  0022                     ??_captura:	
  1690                           ; 1 bytes @ 0x2
  1691                           
  1692  0022                     ??_PROCULUS_Delay:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0022                     ??__Umul8_16:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0022                     ??_I2C_Master_Write:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0022                     ??_I2C_Master_Read:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0022                     EEPROM_Read_Byte@addr:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707  0022                     strcpy@to:	
  1708                           ; 1 bytes @ 0x2
  1709                           
  1710  0022                     USART_to_Protocol@i:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0022                     ___lwdiv@dividend:	
  1714                           ; 2 bytes @ 0x2
  1715                           
  1716  0022                     ___lwmod@dividend:	
  1717                           ; 2 bytes @ 0x2
  1718                           
  1719  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1720                           ; 2 bytes @ 0x2
  1721                           
  1722  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1723                           ; 4 bytes @ 0x2
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0x2
  1727  0022                     	ds	1
  1728  0023                     ??_USART_put_string:	
  1729  0023                     ?_EEPROM_Read_String:	
  1730                           ; 1 bytes @ 0x3
  1731                           
  1732  0023                     ??_USART_put_buffer:	
  1733                           ; 1 bytes @ 0x3
  1734                           
  1735  0023                     ?_EEPROM_Read_Integer:	
  1736                           ; 1 bytes @ 0x3
  1737                           
  1738  0023                     EEPROM_Write_Byte@addr:	
  1739                           ; 2 bytes @ 0x3
  1740                           
  1741  0023                     EEPROM_Read_String@dado:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744  0023                     strcat@cp:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747  0023                     strcpy@cp:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0023                     strlen@cp:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     USART_put_string@ptr:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0x3
  1758  0023                     	ds	1
  1759  0024                     ??_my_delay_ms_WDT:	
  1760  0024                     ??_USART_init:	
  1761                           ; 1 bytes @ 0x4
  1762                           
  1763  0024                     ??_EEPROM_Read_String:	
  1764                           ; 1 bytes @ 0x4
  1765                           
  1766  0024                     ??_my_delay_ms:	
  1767                           ; 1 bytes @ 0x4
  1768                           
  1769  0024                     ??___lwdiv:	
  1770                           ; 1 bytes @ 0x4
  1771                           
  1772  0024                     ??___lwmod:	
  1773                           ; 1 bytes @ 0x4
  1774                           
  1775  0024                     EEPROM_Write_Byte@last_GIE:	
  1776                           ; 1 bytes @ 0x4
  1777                           
  1778  0024                     USART_to_Protocol@usart_protocol:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781  0024                     strcat@to:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784  0024                     strlen@s:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0024                     I2C_Master_Read@temp:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0024                     PROCULUS_Delay@i:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793  0024                     __Umul8_16@product:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796  0024                     ___lldiv@dividend:	
  1797                           ; 2 bytes @ 0x4
  1798                           
  1799  0024                     ___flge@ff2:	
  1800                           ; 4 bytes @ 0x4
  1801                           
  1802                           
  1803                           ; 4 bytes @ 0x4
  1804  0024                     	ds	1
  1805  0025                     ??_EEPROM_Read_Integer:	
  1806  0025                     ?_EEPROM_Write_Integer:	
  1807                           ; 1 bytes @ 0x5
  1808                           
  1809  0025                     ??_Send_Reply_OK:	
  1810                           ; 1 bytes @ 0x5
  1811                           
  1812  0025                     ?_EEPROM_Write_String:	
  1813                           ; 1 bytes @ 0x5
  1814                           
  1815  0025                     EEPROM_Write_String@dado:	
  1816                           ; 1 bytes @ 0x5
  1817                           
  1818  0025                     EEPROM_Read_String@addr:	
  1819                           ; 1 bytes @ 0x5
  1820                           
  1821  0025                     USART_put_buffer@vetor:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824  0025                     ___lwdiv@counter:	
  1825                           ; 1 bytes @ 0x5
  1826                           
  1827  0025                     ___lwmod@counter:	
  1828                           ; 1 bytes @ 0x5
  1829                           
  1830  0025                     EEPROM_Write_Integer@dado:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833                           
  1834                           ; 2 bytes @ 0x5
  1835  0025                     	ds	1
  1836  0026                     ??_EEPROM_Write_String:	
  1837  0026                     ?_EEPROM_24C1025_Read_Buffer:	
  1838                           ; 1 bytes @ 0x6
  1839                           
  1840  0026                     ?_EEPROM_24C1025_Read_Str:	
  1841                           ; 1 bytes @ 0x6
  1842                           
  1843  0026                     EEPROM_Read_Integer@addr:	
  1844                           ; 1 bytes @ 0x6
  1845                           
  1846  0026                     EEPROM_Read_String@c:	
  1847                           ; 1 bytes @ 0x6
  1848                           
  1849  0026                     USART_init@i:	
  1850                           ; 1 bytes @ 0x6
  1851                           
  1852  0026                     USART_put_buffer@loop:	
  1853                           ; 1 bytes @ 0x6
  1854                           
  1855  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     EEPROM_24C1025_Write_Str@data:	
  1859                           ; 1 bytes @ 0x6
  1860                           
  1861  0026                     ___lwdiv@quotient:	
  1862                           ; 1 bytes @ 0x6
  1863                           
  1864  0026                     __Umul8_16@word_mpld:	
  1865                           ; 2 bytes @ 0x6
  1866                           
  1867  0026                     my_delay_ms@i:	
  1868                           ; 2 bytes @ 0x6
  1869                           
  1870  0026                     my_delay_ms_WDT@i:	
  1871                           ; 4 bytes @ 0x6
  1872                           
  1873  0026                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1874                           ; 4 bytes @ 0x6
  1875                           
  1876  0026                     EEPROM_24C1025_Read_Str@mem_add:	
  1877                           ; 4 bytes @ 0x6
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0x6
  1881  0026                     	ds	1
  1882  0027                     ??_EEPROM_Write_Integer:	
  1883  0027                     ??_EEPROM_24C1025_Write_Str:	
  1884                           ; 1 bytes @ 0x7
  1885                           
  1886  0027                     EEPROM_Read_Integer@ptr:	
  1887                           ; 1 bytes @ 0x7
  1888                           
  1889  0027                     EEPROM_Write_String@addr:	
  1890                           ; 1 bytes @ 0x7
  1891                           
  1892  0027                     USART_put_buffer@ptr:	
  1893                           ; 1 bytes @ 0x7
  1894                           
  1895  0027                     EEPROM_24C1025_Write_Buffer@data:	
  1896                           ; 1 bytes @ 0x7
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x7
  1900  0027                     	ds	1
  1901  0028                     ?_utoa:	
  1902  0028                     ??___lldiv:	
  1903                           ; 1 bytes @ 0x8
  1904                           
  1905  0028                     ??___flge:	
  1906                           ; 1 bytes @ 0x8
  1907                           
  1908  0028                     __Umul8_16@multiplier:	
  1909                           ; 1 bytes @ 0x8
  1910                           
  1911  0028                     EEPROM_Read_Integer@result:	
  1912                           ; 1 bytes @ 0x8
  1913                           
  1914  0028                     utoa@val:	
  1915                           ; 2 bytes @ 0x8
  1916                           
  1917                           
  1918                           ; 2 bytes @ 0x8
  1919  0028                     	ds	1
  1920  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  1921  0029                     ?___flmul:	
  1922                           ; 1 bytes @ 0x9
  1923                           
  1924  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  1925                           ; 4 bytes @ 0x9
  1926                           
  1927  0029                     ___lldiv@quotient:	
  1928                           ; 1 bytes @ 0x9
  1929                           
  1930  0029                     ___flmul@b:	
  1931                           ; 4 bytes @ 0x9
  1932                           
  1933                           
  1934                           ; 4 bytes @ 0x9
  1935  0029                     	ds	1
  1936  002A                     ?_ADC_Max_10Bits:	
  1937  002A                     EEPROM_Write_Integer@ptr:	
  1938                           ; 2 bytes @ 0xA
  1939                           
  1940  002A                     EEPROM_Read_Integer@i:	
  1941                           ; 1 bytes @ 0xA
  1942                           
  1943  002A                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1944                           ; 1 bytes @ 0xA
  1945                           
  1946  002A                     EEPROM_24C1025_Write_Str@range:	
  1947                           ; 1 bytes @ 0xA
  1948                           
  1949  002A                     EEPROM_24C1025_Read_Str@texto:	
  1950                           ; 1 bytes @ 0xA
  1951                           
  1952  002A                     utoa@base:	
  1953                           ; 1 bytes @ 0xA
  1954                           
  1955                           
  1956                           ; 2 bytes @ 0xA
  1957  002A                     	ds	1
  1958  002B                     ??_EEPROM_24C1025_Read_Str:	
  1959  002B                     EEPROM_Write_Integer@addr:	
  1960                           ; 1 bytes @ 0xB
  1961                           
  1962  002B                     EEPROM_24C1025_Write_Buffer@count:	
  1963                           ; 1 bytes @ 0xB
  1964                           
  1965  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  1966                           ; 1 bytes @ 0xB
  1967                           
  1968  002B                     EEPROM_24C1025_Read_Buffer@data:	
  1969                           ; 1 bytes @ 0xB
  1970                           
  1971                           
  1972                           ; 2 bytes @ 0xB
  1973  002B                     	ds	1
  1974  002C                     ??_ADC_Max_10Bits:	
  1975  002C                     ??_utoa:	
  1976                           ; 1 bytes @ 0xC
  1977                           
  1978  002C                     EEPROM_Write_Integer@i:	
  1979                           ; 1 bytes @ 0xC
  1980                           
  1981  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  1982                           ; 1 bytes @ 0xC
  1983                           
  1984                           
  1985                           ; 1 bytes @ 0xC
  1986  002C                     	ds	1
  1987  002D                     ??_EEPROM_24C1025_Read_Buffer:	
  1988  002D                     ADC_Max_10Bits@canal:	
  1989                           ; 1 bytes @ 0xD
  1990                           
  1991  002D                     EEPROM_24C1025_Write_Buffer@range:	
  1992                           ; 1 bytes @ 0xD
  1993                           
  1994  002D                     EEPROM_24C1025_Read_Str@cnt:	
  1995                           ; 1 bytes @ 0xD
  1996                           
  1997  002D                     ___lldiv@counter:	
  1998                           ; 1 bytes @ 0xD
  1999                           
  2000  002D                     utoa@v:	
  2001                           ; 1 bytes @ 0xD
  2002                           
  2003  002D                     ___flmul@a:	
  2004                           ; 2 bytes @ 0xD
  2005                           
  2006                           
  2007                           ; 4 bytes @ 0xD
  2008  002D                     	ds	1
  2009  002E                     ?_I2C_Master_Init:	
  2010  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2011                           ; 1 bytes @ 0xE
  2012                           
  2013  002E                     EEPROM_24C1025_Read_Str@chip_add:	
  2014                           ; 1 bytes @ 0xE
  2015                           
  2016  002E                     ADC_Max_10Bits@Temp:	
  2017                           ; 1 bytes @ 0xE
  2018                           
  2019  002E                     I2C_Master_Init@c:	
  2020                           ; 2 bytes @ 0xE
  2021                           
  2022                           
  2023                           ; 4 bytes @ 0xE
  2024  002E                     	ds	1
  2025  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2026  002F                     ?_EEPROM_24C1025_Fill_All:	
  2027                           ; 1 bytes @ 0xF
  2028                           
  2029  002F                     EEPROM_24C1025_Read_Str@range:	
  2030                           ; 1 bytes @ 0xF
  2031                           
  2032  002F                     EEPROM_24C1025_Fill_All@value:	
  2033                           ; 1 bytes @ 0xF
  2034                           
  2035  002F                     utoa@c:	
  2036                           ; 1 bytes @ 0xF
  2037                           
  2038  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2039                           ; 1 bytes @ 0xF
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0xF
  2043  002F                     	ds	1
  2044  0030                     ??_EEPROM_24C1025_Fill_All:	
  2045  0030                     EEPROM_24C1025_Read_Buffer@cnt_1528:	
  2046                           ; 1 bytes @ 0x10
  2047                           
  2048  0030                     EEPROM_24C1025_Read_Str@ctrl:	
  2049                           ; 1 bytes @ 0x10
  2050                           
  2051  0030                     utoa@buf:	
  2052                           ; 1 bytes @ 0x10
  2053                           
  2054  0030                     ADC_Max_10Bits@value:	
  2055                           ; 1 bytes @ 0x10
  2056                           
  2057                           
  2058                           ; 2 bytes @ 0x10
  2059  0030                     	ds	1
  2060  0031                     ?_itoa:	
  2061  0031                     ??___flmul:	
  2062                           ; 1 bytes @ 0x11
  2063                           
  2064  0031                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2065                           ; 1 bytes @ 0x11
  2066                           
  2067  0031                     itoa@val:	
  2068                           ; 1 bytes @ 0x11
  2069                           
  2070                           
  2071                           ; 2 bytes @ 0x11
  2072  0031                     	ds	1
  2073  0032                     ??_I2C_Master_Init:	
  2074  0032                     ADC_Max_10Bits@i:	
  2075                           ; 1 bytes @ 0x12
  2076                           
  2077  0032                     EEPROM_24C1025_Read_Buffer@range:	
  2078                           ; 1 bytes @ 0x12
  2079                           
  2080                           
  2081                           ; 1 bytes @ 0x12
  2082  0032                     	ds	1
  2083  0033                     ?___xxtofl:	
  2084  0033                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2085                           ; 4 bytes @ 0x13
  2086                           
  2087  0033                     EEPROM_24C1025_Write_Byte@data:	
  2088                           ; 1 bytes @ 0x13
  2089                           
  2090  0033                     EEPROM_24C1025_Fill_All@chip_add:	
  2091                           ; 1 bytes @ 0x13
  2092                           
  2093  0033                     itoa@base:	
  2094                           ; 1 bytes @ 0x13
  2095                           
  2096  0033                     ___xxtofl@val:	
  2097                           ; 2 bytes @ 0x13
  2098                           
  2099                           
  2100                           ; 4 bytes @ 0x13
  2101  0033                     	ds	1
  2102  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2103  0034                     ?_EEPROM_24C1025_Read_Byte:	
  2104                           ; 1 bytes @ 0x14
  2105                           
  2106  0034                     ?_EEPROM_24C1025_Read_Int:	
  2107                           ; 1 bytes @ 0x14
  2108                           
  2109  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2110                           ; 2 bytes @ 0x14
  2111                           
  2112  0034                     EEPROM_24C1025_Fill_All@i:	
  2113                           ; 1 bytes @ 0x14
  2114                           
  2115  0034                     EEPROM_24C1025_Read_Byte@mem_add:	
  2116                           ; 1 bytes @ 0x14
  2117                           
  2118  0034                     EEPROM_24C1025_Read_Int@mem_add:	
  2119                           ; 4 bytes @ 0x14
  2120                           
  2121                           
  2122                           ; 4 bytes @ 0x14
  2123  0034                     	ds	1
  2124  0035                     ??_itoa:	
  2125  0035                     EEPROM_24C1025_Fill_All@page:	
  2126                           ; 1 bytes @ 0x15
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x15
  2130  0035                     	ds	1
  2131  0036                     ___flmul@sign:	
  2132                           
  2133                           ; 1 bytes @ 0x16
  2134  0036                     	ds	1
  2135  0037                     ??___xxtofl:	
  2136  0037                     ___flmul@aexp:	
  2137                           ; 1 bytes @ 0x17
  2138                           
  2139  0037                     itoa@buf:	
  2140                           ; 1 bytes @ 0x17
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x17
  2144  0037                     	ds	1
  2145  0038                     ??_EEPROM_24C1025_Read_Byte:	
  2146  0038                     ??_EEPROM_24C1025_Read_Int:	
  2147                           ; 1 bytes @ 0x18
  2148                           
  2149  0038                     EEPROM_24C1025_Read_Byte@chip_add:	
  2150                           ; 1 bytes @ 0x18
  2151                           
  2152  0038                     ___flmul@bexp:	
  2153                           ; 1 bytes @ 0x18
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x18
  2157  0038                     	ds	1
  2158  0039                     EEPROM_24C1025_Read_Byte@data:	
  2159  0039                     ___flmul@grs:	
  2160                           ; 1 bytes @ 0x19
  2161                           
  2162                           
  2163                           ; 4 bytes @ 0x19
  2164  0039                     	ds	1
  2165  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2166                           
  2167                           ; 1 bytes @ 0x1A
  2168  003A                     	ds	1
  2169  003B                     ___xxtofl@sign:	
  2170  003B                     EEPROM_24C1025_Read_Int@data:	
  2171                           ; 1 bytes @ 0x1B
  2172                           
  2173                           
  2174                           ; 2 bytes @ 0x1B
  2175  003B                     	ds	1
  2176  003C                     ___xxtofl@exp:	
  2177                           
  2178                           ; 1 bytes @ 0x1C
  2179  003C                     	ds	1
  2180  003D                     ___flmul@prod:	
  2181  003D                     ___xxtofl@arg:	
  2182                           ; 4 bytes @ 0x1D
  2183                           
  2184                           
  2185                           ; 4 bytes @ 0x1D
  2186  003D                     	ds	4
  2187  0041                     ?_ADC_Media_10bits:	
  2188  0041                     ?___fldiv:	
  2189                           ; 4 bytes @ 0x21
  2190                           
  2191  0041                     ___flmul@temp:	
  2192                           ; 4 bytes @ 0x21
  2193                           
  2194  0041                     ___fldiv@a:	
  2195                           ; 2 bytes @ 0x21
  2196                           
  2197                           
  2198                           ; 4 bytes @ 0x21
  2199  0041                     	ds	2
  2200  0043                     ?___fltol:	
  2201  0043                     ___fltol@f1:	
  2202                           ; 4 bytes @ 0x23
  2203                           
  2204                           
  2205                           ; 4 bytes @ 0x23
  2206  0043                     	ds	2
  2207  0045                     ??_ADC_Media_10bits:	
  2208  0045                     ___fldiv@b:	
  2209                           ; 1 bytes @ 0x25
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0x25
  2213  0045                     	ds	1
  2214  0046                     ADC_Media_10bits@canal:	
  2215                           
  2216                           ; 1 bytes @ 0x26
  2217  0046                     	ds	1
  2218  0047                     ??___fltol:	
  2219  0047                     ADC_Media_10bits@value:	
  2220                           ; 1 bytes @ 0x27
  2221                           
  2222                           
  2223                           ; 2 bytes @ 0x27
  2224  0047                     	ds	2
  2225  0049                     ??___fldiv:	
  2226  0049                     ADC_Media_10bits@i:	
  2227                           ; 1 bytes @ 0x29
  2228                           
  2229                           
  2230                           ; 1 bytes @ 0x29
  2231  0049                     	ds	1
  2232  004A                     ?___fladd:	
  2233  004A                     ___fladd@b:	
  2234                           ; 4 bytes @ 0x2A
  2235                           
  2236                           
  2237                           ; 4 bytes @ 0x2A
  2238  004A                     	ds	2
  2239  004C                     ___fltol@sign1:	
  2240                           
  2241                           ; 1 bytes @ 0x2C
  2242  004C                     	ds	1
  2243  004D                     ___fltol@exp1:	
  2244                           
  2245                           ; 1 bytes @ 0x2D
  2246  004D                     	ds	1
  2247  004E                     ?_USART_put_int:	
  2248  004E                     ?_EEPROM_24C1025_Write_Int:	
  2249                           ; 1 bytes @ 0x2E
  2250                           
  2251  004E                     USART_put_int@value:	
  2252                           ; 1 bytes @ 0x2E
  2253                           
  2254  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2255                           ; 2 bytes @ 0x2E
  2256                           
  2257  004E                     ___fladd@a:	
  2258                           ; 4 bytes @ 0x2E
  2259                           
  2260  004E                     ___fldiv@rem:	
  2261                           ; 4 bytes @ 0x2E
  2262                           
  2263                           
  2264                           ; 4 bytes @ 0x2E
  2265  004E                     	ds	2
  2266  0050                     ??_USART_put_int:	
  2267                           
  2268                           ; 1 bytes @ 0x30
  2269  0050                     	ds	1
  2270  0051                     USART_put_int@dado:	
  2271                           
  2272                           ; 1 bytes @ 0x31
  2273  0051                     	ds	1
  2274  0052                     ?_PROCULUS_Control_Register_Write:	
  2275  0052                     ?_PROCULUS_VP_Write:	
  2276                           ; 1 bytes @ 0x32
  2277                           
  2278  0052                     ??___fladd:	
  2279                           ; 1 bytes @ 0x32
  2280                           
  2281  0052                     PROCULUS_Control_Register_Write@size:	
  2282                           ; 1 bytes @ 0x32
  2283                           
  2284  0052                     ___fldiv@sign:	
  2285                           ; 1 bytes @ 0x32
  2286                           
  2287  0052                     PROCULUS_VP_Write@vp:	
  2288                           ; 1 bytes @ 0x32
  2289                           
  2290  0052                     EEPROM_24C1025_Write_Int@data:	
  2291                           ; 2 bytes @ 0x32
  2292                           
  2293                           
  2294                           ; 2 bytes @ 0x32
  2295  0052                     	ds	1
  2296  0053                     ??_PROCULUS_Control_Register_Write:	
  2297  0053                     ___fldiv@new_exp:	
  2298                           ; 1 bytes @ 0x33
  2299                           
  2300                           
  2301                           ; 2 bytes @ 0x33
  2302  0053                     	ds	1
  2303  0054                     ??_EEPROM_24C1025_Write_Int:	
  2304  0054                     PROCULUS_Control_Register_Write@vetor:	
  2305                           ; 1 bytes @ 0x34
  2306                           
  2307  0054                     PROCULUS_VP_Write@vetor:	
  2308                           ; 1 bytes @ 0x34
  2309                           
  2310                           
  2311                           ; 2 bytes @ 0x34
  2312  0054                     	ds	1
  2313  0055                     PROCULUS_Control_Register_Write@i:	
  2314  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2315                           ; 1 bytes @ 0x35
  2316                           
  2317  0055                     ___fldiv@grs:	
  2318                           ; 1 bytes @ 0x35
  2319                           
  2320                           
  2321                           ; 4 bytes @ 0x35
  2322  0055                     	ds	1
  2323  0056                     ?_PROCULUS_Show_Screen:	
  2324  0056                     ?_PROCULUS_Buzzer:	
  2325                           ; 1 bytes @ 0x36
  2326                           
  2327  0056                     PROCULUS_VP_Write@size:	
  2328                           ; 1 bytes @ 0x36
  2329                           
  2330  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2331                           ; 1 bytes @ 0x36
  2332                           
  2333  0056                     PROCULUS_Show_Screen@screen:	
  2334                           ; 2 bytes @ 0x36
  2335                           
  2336  0056                     EEPROM_24C1025_Write_Int@local:	
  2337                           ; 2 bytes @ 0x36
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x36
  2341  0056                     	ds	1
  2342  0057                     ??_PROCULUS_VP_Write:	
  2343                           
  2344                           ; 1 bytes @ 0x37
  2345  0057                     	ds	1
  2346  0058                     ?_Save_Log:	
  2347  0058                     ??_PROCULUS_Show_Screen:	
  2348                           ; 1 bytes @ 0x38
  2349                           
  2350  0058                     ??_PROCULUS_Buzzer:	
  2351                           ; 1 bytes @ 0x38
  2352                           
  2353  0058                     Save_Log@add_memory:	
  2354                           ; 1 bytes @ 0x38
  2355                           
  2356                           
  2357                           ; 4 bytes @ 0x38
  2358  0058                     	ds	1
  2359  0059                     PROCULUS_VP_Write@i:	
  2360  0059                     ___fldiv@bexp:	
  2361                           ; 1 bytes @ 0x39
  2362                           
  2363  0059                     PROCULUS_Buzzer@vetor:	
  2364                           ; 1 bytes @ 0x39
  2365                           
  2366  0059                     PROCULUS_Show_Screen@vetor:	
  2367                           ; 2 bytes @ 0x39
  2368                           
  2369                           
  2370                           ; 3 bytes @ 0x39
  2371  0059                     	ds	1
  2372  005A                     ?_PROCULUS_VP_Write_String:	
  2373  005A                     ___fladd@signs:	
  2374                           ; 1 bytes @ 0x3A
  2375                           
  2376  005A                     ___fldiv@aexp:	
  2377                           ; 1 bytes @ 0x3A
  2378                           
  2379  005A                     PROCULUS_VP_Write_String@vp:	
  2380                           ; 1 bytes @ 0x3A
  2381                           
  2382                           
  2383                           ; 2 bytes @ 0x3A
  2384  005A                     	ds	1
  2385  005B                     ___fladd@aexp:	
  2386                           
  2387                           ; 1 bytes @ 0x3B
  2388  005B                     	ds	1
  2389  005C                     ??_Save_Log:	
  2390  005C                     PROCULUS_VP_Write_String@text:	
  2391                           ; 1 bytes @ 0x3C
  2392                           
  2393  005C                     ___fladd@bexp:	
  2394                           ; 1 bytes @ 0x3C
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x3C
  2398  005C                     	ds	1
  2399  005D                     ??_PROCULUS_VP_Write_String:	
  2400  005D                     ___fladd@grs:	
  2401                           ; 1 bytes @ 0x3D
  2402                           
  2403                           
  2404                           ; 1 bytes @ 0x3D
  2405  005D                     	ds	1
  2406  005E                     ??_Decodify_Command:	
  2407  005E                     ?___flsub:	
  2408                           ; 1 bytes @ 0x3E
  2409                           
  2410  005E                     ___flsub@a:	
  2411                           ; 4 bytes @ 0x3E
  2412                           
  2413                           
  2414                           ; 4 bytes @ 0x3E
  2415  005E                     	ds	4
  2416  0062                     ___flsub@b:	
  2417                           
  2418                           ; 4 bytes @ 0x42
  2419  0062                     	ds	4
  2420  0066                     ??_MediaPlacaVaccum:	
  2421  0066                     ??___flsub:	
  2422                           ; 1 bytes @ 0x46
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0x46
  2426  0066                     	ds	4
  2427  006A                     ??_main:	
  2428                           
  2429                           ; 1 bytes @ 0x4A
  2430  006A                     	ds	3
  2431  006D                     main@reset:	
  2432                           
  2433                           ; 2 bytes @ 0x4D
  2434  006D                     	ds	2
  2435                           
  2436                           	psect	maintext
  2437  1447                     __pmaintext:	
  2438 ;;
  2439 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2440 ;;
  2441 ;; *************** function _main *****************
  2442 ;; Defined at:
  2443 ;;		line 143 in file "SlaveLiofilizadorVer1.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  reset           2   77[BANK0 ] unsigned int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : B00/0
  2454 ;;		On exit  : 300/100
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       0       0       0       0
  2458 ;;      Locals:         0       2       0       0       0
  2459 ;;      Temps:          0       3       0       0       0
  2460 ;;      Totals:         0       5       0       0       0
  2461 ;;Total ram usage:        5 bytes
  2462 ;; Hardware stack levels required when called:    7
  2463 ;; This function calls:
  2464 ;;		_ADC_init
  2465 ;;		_Decodify_Command
  2466 ;;		_EEPROM_Read_Integer
  2467 ;;		_EEPROM_Write_Integer
  2468 ;;		_I2C_Master_Init
  2469 ;;		_MediaPlacaVaccum
  2470 ;;		_USART_init
  2471 ;;		_my_delay_ms_WDT
  2472 ;; This function is called by:
  2473 ;;		Startup code after reset
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _main
  2479  1447                     _main:	
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 144:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2485  1447  3002               	movlw	2
  2486  1448  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1449  1303               	bcf	3,6	;RP1=0, select bank0
  2488  144A  00EC               	movwf	??_main+2
  2489  144B  3004               	movlw	4
  2490  144C  00EB               	movwf	??_main+1
  2491  144D  30B9               	movlw	185
  2492  144E  00EA               	movwf	??_main
  2493  144F                     u7997:	
  2494  144F  0BEA               	decfsz	??_main,f
  2495  1450  2C4F               	goto	u7997
  2496  1451  0BEB               	decfsz	??_main+1,f
  2497  1452  2C4F               	goto	u7997
  2498  1453  0BEC               	decfsz	??_main+2,f
  2499  1454  2C4F               	goto	u7997
  2500  1455  2C56               	nop2
  2501                           
  2502                           ;SlaveLiofilizadorVer1.c: 145:      OSCCONbits.IRCF0=1;
  2503  1456  1683               	bsf	3,5	;RP0=1, select bank1
  2504  1457  1303               	bcf	3,6	;RP1=0, select bank1
  2505  1458  160F               	bsf	15,4	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF1=1;
  2508  1459  168F               	bsf	15,5	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF2=1;
  2511  145A  170F               	bsf	15,6	;volatile
  2512                           
  2513                           ;SlaveLiofilizadorVer1.c: 149:      PORTA=0;
  2514  145B  1283               	bcf	3,5	;RP0=0, select bank0
  2515  145C  0185               	clrf	5	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 150:      PORTB=0;
  2518  145D  0186               	clrf	6	;volatile
  2519                           
  2520                           ;SlaveLiofilizadorVer1.c: 151:      PORTC=0;
  2521  145E  0187               	clrf	7	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 152:      PORTE=0;
  2524  145F  0189               	clrf	9	;volatile
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 153:      TRISA=0b11101111;
  2527  1460  30EF               	movlw	239
  2528  1461  1683               	bsf	3,5	;RP0=1, select bank1
  2529  1462  0085               	movwf	5	;volatile
  2530                           
  2531                           ;SlaveLiofilizadorVer1.c: 154:      TRISB=0b00001111;
  2532  1463  300F               	movlw	15
  2533  1464  0086               	movwf	6	;volatile
  2534                           
  2535                           ;SlaveLiofilizadorVer1.c: 155:      TRISC=0xF0;
  2536  1465  30F0               	movlw	240
  2537  1466  0087               	movwf	7	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 156:      TRISE=0xFF;
  2540  1467  30FF               	movlw	255
  2541  1468  0089               	movwf	9	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 158:      ANSEL=0x00000011;
  2544  1469  3011               	movlw	17
  2545  146A  1703               	bsf	3,6	;RP1=1, select bank3
  2546  146B  0088               	movwf	8	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 159:      ANSELH=0x00000000;
  2549  146C  0189               	clrf	9	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 161:      OPTION_REGbits.nRBPU=0;
  2552  146D  1303               	bcf	3,6	;RP1=0, select bank1
  2553  146E  1381               	bcf	1,7	;volatile
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 162:      WPUB=0b00001111;
  2556  146F  300F               	movlw	15
  2557  1470  0095               	movwf	21	;volatile
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 165:      PORTBbits.RB7 =1;
  2560  1471  1283               	bcf	3,5	;RP0=0, select bank0
  2561  1472  1786               	bsf	6,7	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB6 =1;
  2564  1473  1706               	bsf	6,6	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB5=1;
  2567  1474  1686               	bsf	6,5	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 168:      my_delay_ms_WDT(1000);
  2570  1475  3000               	movlw	0
  2571  1476  00A3               	movwf	my_delay_ms_WDT@time+3
  2572  1477  3000               	movlw	0
  2573  1478  00A2               	movwf	my_delay_ms_WDT@time+2
  2574  1479  3003               	movlw	3
  2575  147A  00A1               	movwf	my_delay_ms_WDT@time+1
  2576  147B  30E8               	movlw	232
  2577  147C  00A0               	movwf	my_delay_ms_WDT@time
  2578  147D  160A  158A  2539  160A  118A  	fcall	_my_delay_ms_WDT
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 170:      OPTION_REGbits.T0CS=0;
  2581  1482  1683               	bsf	3,5	;RP0=1, select bank1
  2582  1483  1281               	bcf	1,5	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.PSA =1;
  2585  1484  1581               	bsf	1,3	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PS0 =1;
  2588  1485  1401               	bsf	1,0	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS1 =1;
  2591  1486  1481               	bsf	1,1	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS2 =1;
  2594  1487  1501               	bsf	1,2	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 175:      INTCONbits.T0IE =0;
  2597  1488  128B               	bcf	11,5	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.INTE =0;
  2600  1489  120B               	bcf	11,4	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.GIE =1;
  2603  148A  178B               	bsf	11,7	;volatile
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 180:      INTCONbits.PEIE = 1;
  2606  148B  170B               	bsf	11,6	;volatile
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 181:      T1CKPS0=1;
  2609  148C  1283               	bcf	3,5	;RP0=0, select bank0
  2610  148D  1610               	bsf	16,4	;volatile
  2611                           
  2612                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS1=1;
  2613  148E  1690               	bsf	16,5	;volatile
  2614                           
  2615                           ;SlaveLiofilizadorVer1.c: 183:      TMR1CS=0;
  2616  148F  1090               	bcf	16,1	;volatile
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 184:      TMR1IE=1;
  2619  1490  1683               	bsf	3,5	;RP0=1, select bank1
  2620  1491  140C               	bsf	12,0	;volatile
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 185:      T1CON=1;
  2623  1492  3001               	movlw	1
  2624  1493  1283               	bcf	3,5	;RP0=0, select bank0
  2625  1494  0090               	movwf	16	;volatile
  2626  1495  0064               	clrwdt	;# 
  2627                           
  2628                           ;SlaveLiofilizadorVer1.c: 192:      ADC_init();
  2629  1496  160A  158A  213D  160A  118A  	fcall	_ADC_init
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 193:      I2C_Master_Init(100000);
  2632  149B  3000               	movlw	0
  2633  149C  00B1               	movwf	I2C_Master_Init@c+3
  2634  149D  3001               	movlw	1
  2635  149E  00B0               	movwf	I2C_Master_Init@c+2
  2636  149F  3086               	movlw	134
  2637  14A0  00AF               	movwf	I2C_Master_Init@c+1
  2638  14A1  30A0               	movlw	160
  2639  14A2  00AE               	movwf	I2C_Master_Init@c
  2640  14A3  160A  158A  2402  160A  118A  	fcall	_I2C_Master_Init
  2641                           
  2642                           ;SlaveLiofilizadorVer1.c: 194:      USART_init(115200);
  2643  14A8  3000               	movlw	0
  2644  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  2645  14AA  00A3               	movwf	USART_init@baudrate+3
  2646  14AB  3001               	movlw	1
  2647  14AC  00A2               	movwf	USART_init@baudrate+2
  2648  14AD  30C2               	movlw	194
  2649  14AE  00A1               	movwf	USART_init@baudrate+1
  2650  14AF  3000               	movlw	0
  2651  14B0  00A0               	movwf	USART_init@baudrate
  2652  14B1  160A  158A  25E9  160A  118A  	fcall	_USART_init
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 200:      {;SlaveLiofilizadorVer1.c: 201:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 202:      reset=EEPROM_Read_Integer(0x10);
  2655  14B6  3010               	movlw	16
  2656  14B7  160A  158A  2380  160A  118A  	fcall	_EEPROM_Read_Integer
  2657  14BC  0824               	movf	?_EEPROM_Read_Integer+1,w
  2658  14BD  00EE               	movwf	main@reset+1
  2659  14BE  0823               	movf	?_EEPROM_Read_Integer,w
  2660  14BF  00ED               	movwf	main@reset
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 203:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2663  14C0  0A6D               	incf	main@reset,w
  2664  14C1  1D03               	skipz
  2665  14C2  2CCF               	goto	l7562
  2666  14C3  0A6E               	incf	main@reset+1,w
  2667  14C4  1D03               	btfss	3,2
  2668  14C5  2CCF               	goto	l7562
  2669  14C6  3000               	movlw	0
  2670  14C7  00A5               	movwf	EEPROM_Write_Integer@dado
  2671  14C8  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2672  14C9  3010               	movlw	16
  2673  14CA  160A  158A  2433  160A  118A  	fcall	_EEPROM_Write_Integer
  2674  14CF                     l7562:	
  2675                           
  2676                           ;SlaveLiofilizadorVer1.c: 204:      reset++;
  2677  14CF  3001               	movlw	1
  2678  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  2679  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  2680  14D2  07ED               	addwf	main@reset,f
  2681  14D3  1803               	skipnc
  2682  14D4  0AEE               	incf	main@reset+1,f
  2683  14D5  3000               	movlw	0
  2684  14D6  07EE               	addwf	main@reset+1,f
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 205:      EEPROM_Write_Integer(0x10,reset);
  2687  14D7  086E               	movf	main@reset+1,w
  2688  14D8  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2689  14D9  086D               	movf	main@reset,w
  2690  14DA  00A5               	movwf	EEPROM_Write_Integer@dado
  2691  14DB  3010               	movlw	16
  2692  14DC  160A  158A  2433  160A  118A  	fcall	_EEPROM_Write_Integer
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 206:      };SlaveLiofilizadorVer1.c: 210:      Delay_Led_Tmr0 
      +                          = 0;
  2695  14E1  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2696  14E2  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 211:      Delay_Led_Usart = 0;
  2699  14E3  1683               	bsf	3,5	;RP0=1, select bank1
  2700  14E4  1303               	bcf	3,6	;RP1=0, select bank1
  2701  14E5  01E1               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2702  14E6  01E2               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Memory = 0;
  2705  14E7  01FA               	clrf	_Delay_Led_Memory	;volatile
  2706  14E8  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 214:      segundo=0;
  2709  14E9  01E9               	clrf	_segundo^(0+128)	;volatile
  2710                           
  2711                           ;SlaveLiofilizadorVer1.c: 215:      hora=0;
  2712  14EA  01E8               	clrf	_hora^(0+128)	;volatile
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 216:      PORTCbits.RC0=0;
  2715  14EB  1283               	bcf	3,5	;RP0=0, select bank0
  2716  14EC  1007               	bcf	7,0	;volatile
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC1=0;
  2719  14ED  1087               	bcf	7,1	;volatile
  2720                           
  2721                           ;SlaveLiofilizadorVer1.c: 218:      PORTAbits.RA2=0;
  2722  14EE  1105               	bcf	5,2	;volatile
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA3=0;
  2725  14EF  1185               	bcf	5,3	;volatile
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 222:      Board_Number=(((0x0F)&(~PORTB)));
  2728  14F0  0906               	comf	6,w	;volatile
  2729  14F1  390F               	andlw	15
  2730  14F2  00EA               	movwf	??_main
  2731  14F3  086A               	movf	??_main,w
  2732  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  2733  14F5  00E5               	movwf	_Board_Number^(0+128)
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 223:      canal=1;
  2736  14F6  01E6               	clrf	_canal^(0+128)
  2737  14F7  0AE6               	incf	_canal^(0+128),f
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 231:      statuspower.flag_global_vacuo=0;
  2740  14F8  116A               	bcf	_statuspower^(0+128),2
  2741  14F9                     l7588:	
  2742                           
  2743                           ;SlaveLiofilizadorVer1.c: 244:           {;SlaveLiofilizadorVer1.c: 246:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2744  14F9  17EB               	bsf	_generic_status^(0+128),7
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 272:          if(++canal==2) canal=0;
  2747  14FA  3001               	movlw	1
  2748  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  2749  14FC  00EA               	movwf	??_main
  2750  14FD  086A               	movf	??_main,w
  2751  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  2752  14FF  07E6               	addwf	_canal^(0+128),f
  2753  1500  3002               	movlw	2
  2754  1501  0666               	xorwf	_canal^(0+128),w
  2755  1502  1903               	btfsc	3,2
  2756  1503  01E6               	clrf	_canal^(0+128)
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 273:          MediaPlacaVaccum(canal);
  2759  1504  0866               	movf	_canal^(0+128),w
  2760  1505  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 281:          if(generic_status.flag_usart_rx==1)
  2763  150A  1683               	bsf	3,5	;RP0=1, select bank1
  2764  150B  1C6B               	btfss	_generic_status^(0+128),0
  2765  150C  2CF9               	goto	l7588
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 282:             {;SlaveLiofilizadorVer1.c: 283:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2768  150D  1703               	bsf	3,6	;RP1=1, select bank3
  2769  150E  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2770  150F  1303               	bcf	3,6	;RP1=0, select bank1
  2771  1510  00DE               	movwf	(_header+1)^(0+128)
  2772  1511  1703               	bsf	3,6	;RP1=1, select bank3
  2773  1512  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2774  1513  1303               	bcf	3,6	;RP1=0, select bank1
  2775  1514  00DD               	movwf	_header^(0+128)
  2776                           
  2777                           ;SlaveLiofilizadorVer1.c: 284:             if(header==0xAABB)
  2778  1515  30BB               	movlw	187
  2779  1516  065D               	xorwf	_header^(0+128),w
  2780  1517  30AA               	movlw	170
  2781  1518  1903               	skipnz
  2782  1519  065E               	xorwf	(_header+1)^(0+128),w
  2783  151A  1D03               	btfss	3,2
  2784  151B  2CF9               	goto	l7588
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 285:                {;SlaveLiofilizadorVer1.c: 286:           
      +                               destino =usart_buffer[3];
  2787  151C  1703               	bsf	3,6	;RP1=1, select bank3
  2788  151D  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2789  151E  1283               	bcf	3,5	;RP0=0, select bank0
  2790  151F  1303               	bcf	3,6	;RP1=0, select bank0
  2791  1520  00EA               	movwf	??_main
  2792  1521  086A               	movf	??_main,w
  2793  1522  1683               	bsf	3,5	;RP0=1, select bank1
  2794  1523  00E4               	movwf	_destino^(0+128)
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 287:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2797  1524  0864               	movf	_destino^(0+128),w
  2798  1525  0665               	xorwf	_Board_Number^(0+128),w
  2799  1526  1D03               	btfss	3,2
  2800  1527  0A64               	incf	_destino^(0+128),w
  2801  1528  1D03               	btfss	3,2
  2802  1529  2CF9               	goto	l7588
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 288:                       {;SlaveLiofilizadorVer1.c: 289:    
      +                                             Delay_Led_Usart=20;
  2805  152A  3014               	movlw	20
  2806  152B  00E1               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2807  152C  3000               	movlw	0
  2808  152D  00E2               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2809                           
  2810                           ;SlaveLiofilizadorVer1.c: 290:                       Decodify_Command();
  2811  152E  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2812                           
  2813                           ;SlaveLiofilizadorVer1.c: 291:                       generic_status.flag_usart_rx=0;
  2814  1533  1683               	bsf	3,5	;RP0=1, select bank1
  2815  1534  106B               	bcf	_generic_status^(0+128),0
  2816                           
  2817                           ;SlaveLiofilizadorVer1.c: 294:             }
  2818  1535  2CF9               	goto	l7588
  2819  1536                     __end_of_main:	
  2820                           
  2821                           	psect	text1
  2822  1D39                     __ptext1:	
  2823 ;; *************** function _my_delay_ms_WDT *****************
  2824 ;; Defined at:
  2825 ;;		line 13 in file "my_delay.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  time            4    0[BANK0 ] long 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  i               4    6[BANK0 ] long 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, btemp+1
  2834 ;; Tracked objects:
  2835 ;;		On entry : 300/0
  2836 ;;		On exit  : 300/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       4       0       0       0
  2840 ;;      Locals:         0       4       0       0       0
  2841 ;;      Temps:          0       2       0       0       0
  2842 ;;      Totals:         0      10       0       0       0
  2843 ;;Total ram usage:       10 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _my_delay_ms_WDT
  2855  1D39                     _my_delay_ms_WDT:	
  2856                           
  2857                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
  2861  1D39  3000               	movlw	0
  2862  1D3A  00A9               	movwf	my_delay_ms_WDT@i+3
  2863  1D3B  3000               	movlw	0
  2864  1D3C  00A8               	movwf	my_delay_ms_WDT@i+2
  2865  1D3D  3000               	movlw	0
  2866  1D3E  00A7               	movwf	my_delay_ms_WDT@i+1
  2867  1D3F  3000               	movlw	0
  2868  1D40  00A6               	movwf	my_delay_ms_WDT@i
  2869  1D41                     l7138:	
  2870  1D41  0829               	movf	my_delay_ms_WDT@i+3,w
  2871  1D42  3A80               	xorlw	128
  2872  1D43  00FF               	movwf	127
  2873  1D44  0823               	movf	my_delay_ms_WDT@time+3,w
  2874  1D45  3A80               	xorlw	128
  2875  1D46  027F               	subwf	127,w
  2876  1D47  1D03               	skipz
  2877  1D48  2D53               	goto	u7703
  2878  1D49  0822               	movf	my_delay_ms_WDT@time+2,w
  2879  1D4A  0228               	subwf	my_delay_ms_WDT@i+2,w
  2880  1D4B  1D03               	skipz
  2881  1D4C  2D53               	goto	u7703
  2882  1D4D  0821               	movf	my_delay_ms_WDT@time+1,w
  2883  1D4E  0227               	subwf	my_delay_ms_WDT@i+1,w
  2884  1D4F  1D03               	skipz
  2885  1D50  2D53               	goto	u7703
  2886  1D51  0820               	movf	my_delay_ms_WDT@time,w
  2887  1D52  0226               	subwf	my_delay_ms_WDT@i,w
  2888  1D53                     u7703:	
  2889  1D53  1803               	btfsc	3,0
  2890  1D54  0008               	return
  2891  1D55  0064               	clrwdt	;# 
  2892                           
  2893                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2894  1D56  3003               	movlw	3
  2895  1D57  1283               	bcf	3,5	;RP0=0, select bank0
  2896  1D58  1303               	bcf	3,6	;RP1=0, select bank0
  2897  1D59  00A5               	movwf	??_my_delay_ms_WDT+1
  2898  1D5A  3097               	movlw	151
  2899  1D5B  00A4               	movwf	??_my_delay_ms_WDT
  2900  1D5C                     u8007:	
  2901  1D5C  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2902  1D5D  2D5C               	goto	u8007
  2903  1D5E  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2904  1D5F  2D5C               	goto	u8007
  2905                           
  2906                           ;my_delay.c: 19:             }
  2907  1D60  3001               	movlw	1
  2908  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  2909  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  2910  1D63  07A6               	addwf	my_delay_ms_WDT@i,f
  2911  1D64  3000               	movlw	0
  2912  1D65  1803               	skipnc
  2913  1D66  3001               	movlw	1
  2914  1D67  07A7               	addwf	my_delay_ms_WDT@i+1,f
  2915  1D68  3000               	movlw	0
  2916  1D69  1803               	skipnc
  2917  1D6A  3001               	movlw	1
  2918  1D6B  07A8               	addwf	my_delay_ms_WDT@i+2,f
  2919  1D6C  3000               	movlw	0
  2920  1D6D  1803               	skipnc
  2921  1D6E  3001               	movlw	1
  2922  1D6F  07A9               	addwf	my_delay_ms_WDT@i+3,f
  2923  1D70  2D41               	goto	l7138
  2924  1D71                     __end_of_my_delay_ms_WDT:	
  2925                           
  2926                           	psect	text2
  2927  1DE9                     __ptext2:	
  2928 ;; *************** function _USART_init *****************
  2929 ;; Defined at:
  2930 ;;		line 18 in file "usart.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  i               1    6[BANK0 ] unsigned char 
  2935 ;;  erro            1    0        unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 300/0
  2942 ;;		On exit  : 300/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       4       0       0       0
  2946 ;;      Locals:         0       2       0       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       7       0       0       0
  2949 ;;Total ram usage:        7 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _USART_init
  2961  1DE9                     _USART_init:	
  2962                           
  2963                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2967  1DE9  304B               	movlw	75
  2968  1DEA  0621               	xorwf	USART_init@baudrate+1,w
  2969  1DEB  0420               	iorwf	USART_init@baudrate,w
  2970  1DEC  0422               	iorwf	USART_init@baudrate+2,w
  2971  1DED  0423               	iorwf	USART_init@baudrate+3,w
  2972  1DEE  1D03               	btfss	3,2
  2973  1DEF  2DFA               	goto	l7158
  2974                           
  2975                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2976  1DF0  1798               	bsf	24,7	;volatile
  2977                           
  2978                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2979  1DF1  1618               	bsf	24,4	;volatile
  2980                           
  2981                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2982  1DF2  1683               	bsf	3,5	;RP0=1, select bank1
  2983  1DF3  1518               	bsf	24,2	;volatile
  2984                           
  2985                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2986  1DF4  1218               	bcf	24,4	;volatile
  2987                           
  2988                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2989  1DF5  1318               	bcf	24,6	;volatile
  2990                           
  2991                           ;usart.c: 32:           SPBRG =12;
  2992  1DF6  300C               	movlw	12
  2993  1DF7  0099               	movwf	25	;volatile
  2994                           
  2995                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2996  1DF8  170B               	bsf	11,6	;volatile
  2997  1DF9  2E13               	goto	L1
  2998  1DFA                     l7158:	
  2999                           ;usart.c: 35:           }
  3000                           
  3001                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  3002                           
  3003  1DFA  30C2               	movlw	194
  3004  1DFB  0621               	xorwf	USART_init@baudrate+1,w
  3005  1DFC  1D03               	skipz
  3006  1DFD  2E14               	goto	l7178
  3007  1DFE  0322               	decf	USART_init@baudrate+2,w
  3008  1DFF  0420               	iorwf	USART_init@baudrate,w
  3009  1E00  0423               	iorwf	USART_init@baudrate+3,w
  3010  1E01  1D03               	btfss	3,2
  3011  1E02  2E14               	goto	l7178
  3012                           
  3013                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  3014  1E03  3010               	movlw	16
  3015  1E04  1683               	bsf	3,5	;RP0=1, select bank1
  3016  1E05  0099               	movwf	25	;volatile
  3017                           
  3018                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  3019  1E06  1703               	bsf	3,6	;RP1=1, select bank3
  3020  1E07  1587               	bsf	7,3	;volatile
  3021                           
  3022                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  3023  1E08  1303               	bcf	3,6	;RP1=0, select bank1
  3024  1E09  1518               	bsf	24,2	;volatile
  3025                           
  3026                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  3027  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3028  1E0B  1798               	bsf	24,7	;volatile
  3029                           
  3030                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  3031  1E0C  1683               	bsf	3,5	;RP0=1, select bank1
  3032  1E0D  1218               	bcf	24,4	;volatile
  3033                           
  3034                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  3035  1E0E  1318               	bcf	24,6	;volatile
  3036                           
  3037                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3038  1E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3039  1E10  1618               	bsf	24,4	;volatile
  3040                           
  3041                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3042  1E11  170B               	bsf	11,6	;volatile
  3043                           
  3044                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3045  1E12  1683               	bsf	3,5	;RP0=1, select bank1
  3046  1E13                     L1:	
  3047  1E13  168C               	bsf	12,5	;volatile
  3048  1E14                     l7178:	
  3049                           
  3050                           ;usart.c: 68:      TRISC6= 1;
  3051  1E14  1683               	bsf	3,5	;RP0=1, select bank1
  3052  1E15  1707               	bsf	7,6	;volatile
  3053                           
  3054                           ;usart.c: 69:      TRISC7= 1;
  3055  1E16  1787               	bsf	7,7	;volatile
  3056                           
  3057                           ;usart.c: 71:      CREN=0;
  3058  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  3059  1E18  1218               	bcf	24,4	;volatile
  3060                           
  3061                           ;usart.c: 72:      CREN=1;
  3062  1E19  1618               	bsf	24,4	;volatile
  3063                           
  3064                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3065  1E1A  01A6               	clrf	USART_init@i
  3066  1E1B                     l7192:	
  3067  1E1B  081A               	movf	26,w	;volatile
  3068  1E1C  3001               	movlw	1
  3069  1E1D  00A4               	movwf	??_USART_init
  3070  1E1E  0824               	movf	??_USART_init,w
  3071  1E1F  07A6               	addwf	USART_init@i,f
  3072  1E20  300F               	movlw	15
  3073  1E21  0226               	subwf	USART_init@i,w
  3074  1E22  1803               	btfsc	3,0
  3075  1E23  0008               	return
  3076  1E24  2E1B               	goto	l7192
  3077  1E25                     __end_of_USART_init:	
  3078                           
  3079                           	psect	text3
  3080  0D69                     __ptext3:	
  3081 ;; *************** function _MediaPlacaVaccum *****************
  3082 ;; Defined at:
  3083 ;;		line 784 in file "SlaveLiofilizadorVer1.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  canal           1    wreg     unsigned char 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  canal           1    4[BANK1 ] unsigned char 
  3088 ;;  Temp            4    5[BANK1 ] float 
  3089 ;;  Valor           4    0[BANK1 ] float 
  3090 ;;  i               2    9[BANK1 ] unsigned int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 300/100
  3097 ;;		On exit  : 200/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         0       0      11       0       0
  3102 ;;      Temps:          0       4       0       0       0
  3103 ;;      Totals:         0       4      11       0       0
  3104 ;;Total ram usage:       15 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		_ADC_Max_10Bits
  3109 ;;		_ADC_Media_10bits
  3110 ;;		_Package_Usart_is_for_me
  3111 ;;		___fladd
  3112 ;;		___fldiv
  3113 ;;		___flge
  3114 ;;		___flmul
  3115 ;;		___flsub
  3116 ;;		___xxtofl
  3117 ;;		_my_delay_ms
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _MediaPlacaVaccum
  3125  0D69                     _MediaPlacaVaccum:	
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3129                           ;MediaPlacaVaccum@canal stored from wreg
  3130  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3131                           
  3132                           ;SlaveLiofilizadorVer1.c: 785:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 786:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 790:      if(canal==0)
  3133  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3134  0D6B  1D03               	btfss	3,2
  3135  0D6C  2F0F               	goto	l303
  3136                           
  3137                           ;SlaveLiofilizadorVer1.c: 791:        {;SlaveLiofilizadorVer1.c: 792:        ADCON1bits.
      +                          VCFG0=1;
  3138  0D6D  161F               	bsf	31,4	;volatile
  3139                           
  3140                           ;SlaveLiofilizadorVer1.c: 793:        ADCON1bits.VCFG1=1;
  3141  0D6E  169F               	bsf	31,5	;volatile
  3142                           
  3143                           ;SlaveLiofilizadorVer1.c: 794:        ADCON0bits.CHS=canal;
  3144  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3145  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3147  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3148  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3149  0D74  081F               	movf	31,w	;volatile
  3150  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3151  0D76  39C3               	andlw	-61
  3152  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3153  0D78  009F               	movwf	31	;volatile
  3154                           
  3155                           ;SlaveLiofilizadorVer1.c: 795:        my_delay_ms(10);
  3156  0D79  3000               	movlw	0
  3157  0D7A  00A3               	movwf	my_delay_ms@time+3
  3158  0D7B  3000               	movlw	0
  3159  0D7C  00A2               	movwf	my_delay_ms@time+2
  3160  0D7D  3000               	movlw	0
  3161  0D7E  00A1               	movwf	my_delay_ms@time+1
  3162  0D7F  300A               	movlw	10
  3163  0D80  00A0               	movwf	my_delay_ms@time
  3164  0D81  160A  158A  24CA  120A  158A  	fcall	_my_delay_ms
  3165                           
  3166                           ;SlaveLiofilizadorVer1.c: 796:        Temp=0;
  3167  0D86  3000               	movlw	0
  3168  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3170  0D89  3000               	movlw	0
  3171  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3172  0D8B  3000               	movlw	0
  3173  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3174  0D8D  3000               	movlw	0
  3175  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3176                           
  3177                           ;SlaveLiofilizadorVer1.c: 798:        for(i=1;i<15;i++)
  3178  0D8F  3001               	movlw	1
  3179  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3180  0D91  3000               	movlw	0
  3181  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3182  0D93                     l7214:	
  3183                           
  3184                           ;SlaveLiofilizadorVer1.c: 799:            {;SlaveLiofilizadorVer1.c: 800:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3185  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3186  0D94  160A  158A  26EF  120A  158A  	fcall	_ADC_Media_10bits
  3187  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3188  0D9A  00CD               	movwf	___fladd@b+3
  3189  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3190  0D9C  00CC               	movwf	___fladd@b+2
  3191  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3192  0D9E  00CB               	movwf	___fladd@b+1
  3193  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3194  0DA0  00CA               	movwf	___fladd@b
  3195  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3197  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0DA4  00D1               	movwf	___fladd@a+3
  3199  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3201  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0DA8  00D0               	movwf	___fladd@a+2
  3203  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3205  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DAC  00CF               	movwf	___fladd@a+1
  3207  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3209  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0DB0  00CE               	movwf	___fladd@a
  3211  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3212  0DB6  084D               	movf	?___fladd+3,w
  3213  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3215  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0DBA  084C               	movf	?___fladd+2,w
  3217  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3219  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0DBE  084B               	movf	?___fladd+1,w
  3221  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3223  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0DC2  084A               	movf	?___fladd,w
  3225  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3227                           
  3228                           ;SlaveLiofilizadorVer1.c: 801:            if(Package_Usart_is_for_me()==1) break;
  3229  0DC5  160A  158A  21A0  120A  158A  	fcall	_Package_Usart_is_for_me
  3230  0DCA  3A01               	xorlw	1
  3231  0DCB  1903               	btfsc	3,2
  3232  0DCC  2DDB               	goto	l7222
  3233                           
  3234                           ;SlaveLiofilizadorVer1.c: 802:            }
  3235  0DCD  3001               	movlw	1
  3236  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3238  0DD0  1803               	skipnc
  3239  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3240  0DD2  3000               	movlw	0
  3241  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3242  0DD4  3000               	movlw	0
  3243  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3244  0DD6  300F               	movlw	15
  3245  0DD7  1903               	skipnz
  3246  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3247  0DD9  1C03               	skipc
  3248  0DDA  2D93               	goto	l7214
  3249  0DDB                     l7222:	
  3250                           
  3251                           ;SlaveLiofilizadorVer1.c: 803:        if(i<10)
  3252  0DDB  3000               	movlw	0
  3253  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3255  0DDE  300A               	movlw	10
  3256  0DDF  1903               	skipnz
  3257  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3258  0DE1  1C03               	btfss	3,0
  3259  0DE2  0008               	return
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 809:        if(i==15)
  3262  0DE3  300F               	movlw	15
  3263  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3264  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3265  0DE6  1D03               	btfss	3,2
  3266  0DE7  2DF2               	goto	l7230
  3267                           
  3268                           ;SlaveLiofilizadorVer1.c: 810:          Temp/=(i-1);
  3269  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3270  0DE9  3EFF               	addlw	255
  3271  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0DEB  00B3               	movwf	___xxtofl@val
  3273  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3275  0DEE  1803               	skipnc
  3276  0DEF  3E01               	addlw	1
  3277  0DF0  3EFF               	addlw	255
  3278  0DF1  2DF7               	goto	L2
  3279  0DF2                     l7230:	
  3280                           
  3281                           ;SlaveLiofilizadorVer1.c: 812:          Temp/=(i);
  3282  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3283  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0DF4  00B3               	movwf	___xxtofl@val
  3285  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3287  0DF7                     L2:	
  3288  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3289  0DF8  00B4               	movwf	___xxtofl@val+1
  3290  0DF9  01B5               	clrf	___xxtofl@val+2
  3291  0DFA  01B6               	clrf	___xxtofl@val+3
  3292  0DFB  3000               	movlw	0
  3293  0DFC  160A  118A  21D0  120A  158A  	fcall	___xxtofl
  3294  0E01  0836               	movf	?___xxtofl+3,w
  3295  0E02  00C4               	movwf	___fldiv@a+3
  3296  0E03  0835               	movf	?___xxtofl+2,w
  3297  0E04  00C3               	movwf	___fldiv@a+2
  3298  0E05  0834               	movf	?___xxtofl+1,w
  3299  0E06  00C2               	movwf	___fldiv@a+1
  3300  0E07  0833               	movf	?___xxtofl,w
  3301  0E08  00C1               	movwf	___fldiv@a
  3302  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3304  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E0C  00C8               	movwf	___fldiv@b+3
  3306  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3308  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E10  00C7               	movwf	___fldiv@b+2
  3310  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3312  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E14  00C6               	movwf	___fldiv@b+1
  3314  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3315  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3316  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0E18  00C5               	movwf	___fldiv@b
  3318  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3319  0E1E  0844               	movf	?___fldiv+3,w
  3320  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3322  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E22  0843               	movf	?___fldiv+2,w
  3324  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3326  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0E26  0842               	movf	?___fldiv+1,w
  3328  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3330  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0E2A  0841               	movf	?___fldiv,w
  3332  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3334                           
  3335                           ;SlaveLiofilizadorVer1.c: 814:        Vaccum0 =1023.0-Temp;
  3336  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3337  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0E2F  00E1               	movwf	___flsub@a+3
  3339  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3341  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0E33  00E0               	movwf	___flsub@a+2
  3343  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3345  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0E37  00DF               	movwf	___flsub@a+1
  3347  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3349  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0E3B  00DE               	movwf	___flsub@a
  3351  0E3C  3044               	movlw	68
  3352  0E3D  00E5               	movwf	___flsub@b+3
  3353  0E3E  307F               	movlw	127
  3354  0E3F  00E4               	movwf	___flsub@b+2
  3355  0E40  30C0               	movlw	192
  3356  0E41  00E3               	movwf	___flsub@b+1
  3357  0E42  3000               	movlw	0
  3358  0E43  00E2               	movwf	___flsub@b
  3359  0E44  160A  158A  2227  120A  158A  	fcall	___flsub
  3360  0E49  0861               	movf	?___flsub+3,w
  3361  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0E4B  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3363  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0E4D  0860               	movf	?___flsub+2,w
  3365  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0E4F  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3367  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E51  085F               	movf	?___flsub+1,w
  3369  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E53  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3371  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0E55  085E               	movf	?___flsub,w
  3373  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0E57  00D3               	movwf	_Vaccum0^(0+128)
  3375                           
  3376                           ;SlaveLiofilizadorVer1.c: 815:        Vaccum0*=Vaccum0;
  3377  0E58  0856               	movf	(_Vaccum0+3)^(0+128),w
  3378  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0E5A  00AC               	movwf	___flmul@b+3
  3380  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0E5C  0855               	movf	(_Vaccum0+2)^(0+128),w
  3382  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0E5E  00AB               	movwf	___flmul@b+2
  3384  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0E60  0854               	movf	(_Vaccum0+1)^(0+128),w
  3386  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0E62  00AA               	movwf	___flmul@b+1
  3388  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0E64  0853               	movf	_Vaccum0^(0+128),w
  3390  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E66  00A9               	movwf	___flmul@b
  3392  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0E68  0856               	movf	(_Vaccum0+3)^(0+128),w
  3394  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0E6A  00B0               	movwf	___flmul@a+3
  3396  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0E6C  0855               	movf	(_Vaccum0+2)^(0+128),w
  3398  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0E6E  00AF               	movwf	___flmul@a+2
  3400  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0E70  0854               	movf	(_Vaccum0+1)^(0+128),w
  3402  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0E72  00AE               	movwf	___flmul@a+1
  3404  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3405  0E74  0853               	movf	_Vaccum0^(0+128),w
  3406  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0E76  00AD               	movwf	___flmul@a
  3408  0E77  120A  118A  24A2  120A  158A  	fcall	___flmul
  3409  0E7C  082C               	movf	?___flmul+3,w
  3410  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0E7E  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3412  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E80  082B               	movf	?___flmul+2,w
  3414  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0E82  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3416  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0E84  082A               	movf	?___flmul+1,w
  3418  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0E86  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3420  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0E88  0829               	movf	?___flmul,w
  3422  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0E8A  00D3               	movwf	_Vaccum0^(0+128)
  3424                           
  3425                           ;SlaveLiofilizadorVer1.c: 816:        Vaccum0*=0.00222;
  3426  0E8B  303B               	movlw	59
  3427  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0E8D  00AC               	movwf	___flmul@b+3
  3429  0E8E  3011               	movlw	17
  3430  0E8F  00AB               	movwf	___flmul@b+2
  3431  0E90  307D               	movlw	125
  3432  0E91  00AA               	movwf	___flmul@b+1
  3433  0E92  306B               	movlw	107
  3434  0E93  00A9               	movwf	___flmul@b
  3435  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0E95  0856               	movf	(_Vaccum0+3)^(0+128),w
  3437  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0E97  00B0               	movwf	___flmul@a+3
  3439  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0E99  0855               	movf	(_Vaccum0+2)^(0+128),w
  3441  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0E9B  00AF               	movwf	___flmul@a+2
  3443  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0E9D  0854               	movf	(_Vaccum0+1)^(0+128),w
  3445  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0E9F  00AE               	movwf	___flmul@a+1
  3447  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0EA1  0853               	movf	_Vaccum0^(0+128),w
  3449  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0EA3  00AD               	movwf	___flmul@a
  3451  0EA4  120A  118A  24A2  120A  158A  	fcall	___flmul
  3452  0EA9  082C               	movf	?___flmul+3,w
  3453  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0EAB  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3455  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0EAD  082B               	movf	?___flmul+2,w
  3457  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0EAF  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3459  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0EB1  082A               	movf	?___flmul+1,w
  3461  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0EB3  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3463  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0EB5  0829               	movf	?___flmul,w
  3465  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0EB7  00D3               	movwf	_Vaccum0^(0+128)
  3467                           
  3468                           ;SlaveLiofilizadorVer1.c: 817:        Vaccum0+=150;
  3469  0EB8  3043               	movlw	67
  3470  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0EBA  00CD               	movwf	___fladd@b+3
  3472  0EBB  3016               	movlw	22
  3473  0EBC  00CC               	movwf	___fladd@b+2
  3474  0EBD  3000               	movlw	0
  3475  0EBE  00CB               	movwf	___fladd@b+1
  3476  0EBF  3000               	movlw	0
  3477  0EC0  00CA               	movwf	___fladd@b
  3478  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0EC2  0856               	movf	(_Vaccum0+3)^(0+128),w
  3480  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0EC4  00D1               	movwf	___fladd@a+3
  3482  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0EC6  0855               	movf	(_Vaccum0+2)^(0+128),w
  3484  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0EC8  00D0               	movwf	___fladd@a+2
  3486  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0ECA  0854               	movf	(_Vaccum0+1)^(0+128),w
  3488  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0ECC  00CF               	movwf	___fladd@a+1
  3490  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0ECE  0853               	movf	_Vaccum0^(0+128),w
  3492  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0ED0  00CE               	movwf	___fladd@a
  3494  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3495  0ED6  084D               	movf	?___fladd+3,w
  3496  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0ED8  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3498  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0EDA  084C               	movf	?___fladd+2,w
  3500  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0EDC  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3502  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0EDE  084B               	movf	?___fladd+1,w
  3504  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0EE0  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3506  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0EE2  084A               	movf	?___fladd,w
  3508  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0EE4  00D3               	movwf	_Vaccum0^(0+128)
  3510                           
  3511                           ;SlaveLiofilizadorVer1.c: 819:        if(Vaccum0>2000)Vaccum0=2000;
  3512  0EE5  3044               	movlw	68
  3513  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0EE7  00A3               	movwf	___flge@ff1+3
  3515  0EE8  30FA               	movlw	250
  3516  0EE9  00A2               	movwf	___flge@ff1+2
  3517  0EEA  3000               	movlw	0
  3518  0EEB  00A1               	movwf	___flge@ff1+1
  3519  0EEC  3000               	movlw	0
  3520  0EED  00A0               	movwf	___flge@ff1
  3521  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0EEF  0856               	movf	(_Vaccum0+3)^(0+128),w
  3523  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0EF1  00A7               	movwf	___flge@ff2+3
  3525  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0EF3  0855               	movf	(_Vaccum0+2)^(0+128),w
  3527  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0EF5  00A6               	movwf	___flge@ff2+2
  3529  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3530  0EF7  0854               	movf	(_Vaccum0+1)^(0+128),w
  3531  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0EF9  00A5               	movwf	___flge@ff2+1
  3533  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3534  0EFB  0853               	movf	_Vaccum0^(0+128),w
  3535  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0EFD  00A4               	movwf	___flge@ff2
  3537  0EFE  160A  118A  213D  120A  158A  	fcall	___flge
  3538  0F03  1803               	btfsc	3,0
  3539  0F04  0008               	return
  3540  0F05  3044               	movlw	68
  3541  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0F07  00D6               	movwf	(_Vaccum0+3)^(0+128)
  3543  0F08  30FA               	movlw	250
  3544  0F09  00D5               	movwf	(_Vaccum0+2)^(0+128)
  3545  0F0A  3000               	movlw	0
  3546  0F0B  00D4               	movwf	(_Vaccum0+1)^(0+128)
  3547  0F0C  3000               	movlw	0
  3548  0F0D  00D3               	movwf	_Vaccum0^(0+128)
  3549  0F0E  0008               	return
  3550  0F0F                     l303:	
  3551                           ;SlaveLiofilizadorVer1.c: 822:      else
  3552                           
  3553                           
  3554                           ;SlaveLiofilizadorVer1.c: 823:        {;SlaveLiofilizadorVer1.c: 824:        ADCON1bits.
      +                          VCFG0=0;
  3555  0F0F  121F               	bcf	31,4	;volatile
  3556                           
  3557                           ;SlaveLiofilizadorVer1.c: 825:        ADCON1bits.VCFG1=0;
  3558  0F10  129F               	bcf	31,5	;volatile
  3559                           
  3560                           ;SlaveLiofilizadorVer1.c: 826:        ADCON0bits.CHS=canal;
  3561  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3562  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3564  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3565  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3566  0F16  081F               	movf	31,w	;volatile
  3567  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3568  0F18  39C3               	andlw	-61
  3569  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3570  0F1A  009F               	movwf	31	;volatile
  3571                           
  3572                           ;SlaveLiofilizadorVer1.c: 827:        my_delay_ms(10);
  3573  0F1B  3000               	movlw	0
  3574  0F1C  00A3               	movwf	my_delay_ms@time+3
  3575  0F1D  3000               	movlw	0
  3576  0F1E  00A2               	movwf	my_delay_ms@time+2
  3577  0F1F  3000               	movlw	0
  3578  0F20  00A1               	movwf	my_delay_ms@time+1
  3579  0F21  300A               	movlw	10
  3580  0F22  00A0               	movwf	my_delay_ms@time
  3581  0F23  160A  158A  24CA  120A  158A  	fcall	_my_delay_ms
  3582                           
  3583                           ;SlaveLiofilizadorVer1.c: 828:        Temp=0;
  3584  0F28  3000               	movlw	0
  3585  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3587  0F2B  3000               	movlw	0
  3588  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3589  0F2D  3000               	movlw	0
  3590  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3591  0F2F  3000               	movlw	0
  3592  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3593                           
  3594                           ;SlaveLiofilizadorVer1.c: 830:        for(i=1;i<15;i++)
  3595  0F31  3001               	movlw	1
  3596  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3597  0F33  3000               	movlw	0
  3598  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3599  0F35                     l7248:	
  3600                           
  3601                           ;SlaveLiofilizadorVer1.c: 831:            {;SlaveLiofilizadorVer1.c: 832:            Val
      +                          or=ADC_Max_10Bits(canal);
  3602  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3603  0F36  160A  158A  2625  120A  158A  	fcall	_ADC_Max_10Bits
  3604  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3605  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3606  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3607  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3608  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3609  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3610  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3611  0F42  00B6               	movwf	___xxtofl@val+3
  3612  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3613  0F44  00B5               	movwf	___xxtofl@val+2
  3614  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3615  0F46  00B4               	movwf	___xxtofl@val+1
  3616  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3617  0F48  00B3               	movwf	___xxtofl@val
  3618  0F49  3000               	movlw	0
  3619  0F4A  160A  118A  21D0  120A  158A  	fcall	___xxtofl
  3620  0F4F  0836               	movf	?___xxtofl+3,w
  3621  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3623  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0F53  0835               	movf	?___xxtofl+2,w
  3625  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3627  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0F57  0834               	movf	?___xxtofl+1,w
  3629  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3631  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0F5B  0833               	movf	?___xxtofl,w
  3633  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3635                           
  3636                           ;SlaveLiofilizadorVer1.c: 833:            if(Valor>Temp) Temp=Valor;
  3637  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3638  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0F60  00A3               	movwf	___flge@ff1+3
  3640  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3642  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0F64  00A2               	movwf	___flge@ff1+2
  3644  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3646  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0F68  00A1               	movwf	___flge@ff1+1
  3648  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3650  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0F6C  00A0               	movwf	___flge@ff1
  3652  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3654  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0F70  00A7               	movwf	___flge@ff2+3
  3656  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3657  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3658  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0F74  00A6               	movwf	___flge@ff2+2
  3660  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3661  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3662  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0F78  00A5               	movwf	___flge@ff2+1
  3664  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3666  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0F7C  00A4               	movwf	___flge@ff2
  3668  0F7D  160A  118A  213D  120A  158A  	fcall	___flge
  3669  0F82  1803               	btfsc	3,0
  3670  0F83  2F8D               	goto	l7254
  3671  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3673  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3674  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3675  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3676  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3677  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3678  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3679  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3680  0F8D                     l7254:	
  3681                           
  3682                           ;SlaveLiofilizadorVer1.c: 834:            if(Package_Usart_is_for_me()==1) break;
  3683  0F8D  160A  158A  21A0  120A  158A  	fcall	_Package_Usart_is_for_me
  3684  0F92  3A01               	xorlw	1
  3685  0F93  1903               	btfsc	3,2
  3686  0F94  2FA3               	goto	l7260
  3687                           
  3688                           ;SlaveLiofilizadorVer1.c: 835:            }
  3689  0F95  3001               	movlw	1
  3690  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3692  0F98  1803               	skipnc
  3693  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3694  0F9A  3000               	movlw	0
  3695  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3696  0F9C  3000               	movlw	0
  3697  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3698  0F9E  300F               	movlw	15
  3699  0F9F  1903               	skipnz
  3700  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3701  0FA1  1C03               	skipc
  3702  0FA2  2F35               	goto	l7248
  3703  0FA3                     l7260:	
  3704                           
  3705                           ;SlaveLiofilizadorVer1.c: 836:         if(i<10)
  3706  0FA3  3000               	movlw	0
  3707  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3709  0FA6  300A               	movlw	10
  3710  0FA7  1903               	skipnz
  3711  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3712  0FA9  1C03               	btfss	3,0
  3713  0FAA  0008               	return
  3714                           
  3715                           ;SlaveLiofilizadorVer1.c: 841:         Tensao1 =Temp*0.318296;
  3716  0FAB  303E               	movlw	62
  3717  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0FAD  00AC               	movwf	___flmul@b+3
  3719  0FAE  30A2               	movlw	162
  3720  0FAF  00AB               	movwf	___flmul@b+2
  3721  0FB0  30F7               	movlw	247
  3722  0FB1  00AA               	movwf	___flmul@b+1
  3723  0FB2  30B1               	movlw	177
  3724  0FB3  00A9               	movwf	___flmul@b
  3725  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3727  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FB7  00B0               	movwf	___flmul@a+3
  3729  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3731  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0FBB  00AF               	movwf	___flmul@a+2
  3733  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3735  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0FBF  00AE               	movwf	___flmul@a+1
  3737  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3739  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0FC3  00AD               	movwf	___flmul@a
  3741  0FC4  120A  118A  24A2  120A  158A  	fcall	___flmul
  3742  0FC9  082C               	movf	?___flmul+3,w
  3743  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3744  0FCB  00D2               	movwf	(_Tensao1+3)^(0+128)
  3745  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0FCD  082B               	movf	?___flmul+2,w
  3747  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0FCF  00D1               	movwf	(_Tensao1+2)^(0+128)
  3749  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0FD1  082A               	movf	?___flmul+1,w
  3751  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0FD3  00D0               	movwf	(_Tensao1+1)^(0+128)
  3753  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0FD5  0829               	movf	?___flmul,w
  3755  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3756  0FD7  00CF               	movwf	_Tensao1^(0+128)
  3757                           
  3758                           ;SlaveLiofilizadorVer1.c: 842:         if(Tensao1<15) Tensao1=0;
  3759  0FD8  0852               	movf	(_Tensao1+3)^(0+128),w
  3760  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0FDA  00A3               	movwf	___flge@ff1+3
  3762  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0FDC  0851               	movf	(_Tensao1+2)^(0+128),w
  3764  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0FDE  00A2               	movwf	___flge@ff1+2
  3766  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3767  0FE0  0850               	movf	(_Tensao1+1)^(0+128),w
  3768  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0FE2  00A1               	movwf	___flge@ff1+1
  3770  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3771  0FE4  084F               	movf	_Tensao1^(0+128),w
  3772  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3773  0FE6  00A0               	movwf	___flge@ff1
  3774  0FE7  3041               	movlw	65
  3775  0FE8  00A7               	movwf	___flge@ff2+3
  3776  0FE9  3070               	movlw	112
  3777  0FEA  00A6               	movwf	___flge@ff2+2
  3778  0FEB  3000               	movlw	0
  3779  0FEC  00A5               	movwf	___flge@ff2+1
  3780  0FED  3000               	movlw	0
  3781  0FEE  00A4               	movwf	___flge@ff2
  3782  0FEF  160A  118A  213D  120A  158A  	fcall	___flge
  3783  0FF4  1803               	btfsc	3,0
  3784  0FF5  0008               	return
  3785  0FF6  3000               	movlw	0
  3786  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0FF8  00D2               	movwf	(_Tensao1+3)^(0+128)
  3788  0FF9  3000               	movlw	0
  3789  0FFA  00D1               	movwf	(_Tensao1+2)^(0+128)
  3790  0FFB  3000               	movlw	0
  3791  0FFC  00D0               	movwf	(_Tensao1+1)^(0+128)
  3792  0FFD  3000               	movlw	0
  3793  0FFE  00CF               	movwf	_Tensao1^(0+128)
  3794  0FFF  0008               	return
  3795  1000                     __end_of_MediaPlacaVaccum:	
  3796                           
  3797                           	psect	text4
  3798  1A27                     __ptext4:	
  3799 ;; *************** function ___flsub *****************
  3800 ;; Defined at:
  3801 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  a               4   62[BANK0 ] void 
  3804 ;;  b               4   66[BANK0 ] void 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  4   62[BANK0 ] void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 300/0
  3813 ;;		On exit  : 300/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       8       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       8       0       0       0
  3820 ;;Total ram usage:        8 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    2
  3823 ;; This function calls:
  3824 ;;		___fladd
  3825 ;; This function is called by:
  3826 ;;		_MediaPlacaVaccum
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function ___flsub
  3832  1A27                     ___flsub:	
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3836  1A27  3080               	movlw	128
  3837  1A28  06E1               	xorwf	___flsub@a+3,f
  3838  1A29  0865               	movf	___flsub@b+3,w
  3839  1A2A  00CD               	movwf	___fladd@b+3
  3840  1A2B  0864               	movf	___flsub@b+2,w
  3841  1A2C  00CC               	movwf	___fladd@b+2
  3842  1A2D  0863               	movf	___flsub@b+1,w
  3843  1A2E  00CB               	movwf	___fladd@b+1
  3844  1A2F  0862               	movf	___flsub@b,w
  3845  1A30  00CA               	movwf	___fladd@b
  3846  1A31  0861               	movf	___flsub@a+3,w
  3847  1A32  00D1               	movwf	___fladd@a+3
  3848  1A33  0860               	movf	___flsub@a+2,w
  3849  1A34  00D0               	movwf	___fladd@a+2
  3850  1A35  085F               	movf	___flsub@a+1,w
  3851  1A36  00CF               	movwf	___fladd@a+1
  3852  1A37  085E               	movf	___flsub@a,w
  3853  1A38  00CE               	movwf	___fladd@a
  3854  1A39  120A  158A  233C   	fcall	___fladd
  3855  1A3C  084D               	movf	?___fladd+3,w
  3856  1A3D  00E1               	movwf	?___flsub+3
  3857  1A3E  084C               	movf	?___fladd+2,w
  3858  1A3F  00E0               	movwf	?___flsub+2
  3859  1A40  084B               	movf	?___fladd+1,w
  3860  1A41  00DF               	movwf	?___flsub+1
  3861  1A42  084A               	movf	?___fladd,w
  3862  1A43  00DE               	movwf	?___flsub
  3863  1A44  0008               	return
  3864  1A45                     __end_of___flsub:	
  3865                           
  3866                           	psect	text5
  3867  0B3C                     __ptext5:	
  3868 ;; *************** function ___fladd *****************
  3869 ;; Defined at:
  3870 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  b               4   42[BANK0 ] void 
  3873 ;;  a               4   46[BANK0 ] void 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  grs             1   61[BANK0 ] unsigned char 
  3876 ;;  bexp            1   60[BANK0 ] unsigned char 
  3877 ;;  aexp            1   59[BANK0 ] unsigned char 
  3878 ;;  signs           1   58[BANK0 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  4   42[BANK0 ] unsigned char 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, btemp+1
  3883 ;; Tracked objects:
  3884 ;;		On entry : 300/0
  3885 ;;		On exit  : 300/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       8       0       0       0
  3889 ;;      Locals:         0       4       0       0       0
  3890 ;;      Temps:          0       8       0       0       0
  3891 ;;      Totals:         0      20       0       0       0
  3892 ;;Total ram usage:       20 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_MediaPlacaVaccum
  3899 ;;		___flsub
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function ___fladd
  3905  0B3C                     ___fladd:	
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3909  0B3C  084D               	movf	___fladd@b+3,w
  3910  0B3D  3980               	andlw	128
  3911  0B3E  00D2               	movwf	??___fladd
  3912  0B3F  0852               	movf	??___fladd,w
  3913  0B40  00DA               	movwf	___fladd@signs
  3914  0B41  084D               	movf	___fladd@b+3,w
  3915  0B42  00D2               	movwf	??___fladd
  3916  0B43  0752               	addwf	??___fladd,w
  3917  0B44  00D3               	movwf	??___fladd+1
  3918  0B45  0853               	movf	??___fladd+1,w
  3919  0B46  00DC               	movwf	___fladd@bexp
  3920  0B47  1BCC               	btfsc	___fladd@b+2,7
  3921  0B48  145C               	bsf	___fladd@bexp,0
  3922  0B49  085C               	movf	___fladd@bexp,w
  3923  0B4A  1903               	btfsc	3,2
  3924  0B4B  2B5A               	goto	l6114
  3925  0B4C  0A5C               	incf	___fladd@bexp,w
  3926  0B4D  1D03               	btfss	3,2
  3927  0B4E  2B57               	goto	l6110
  3928  0B4F  3000               	movlw	0
  3929  0B50  00CD               	movwf	___fladd@b+3
  3930  0B51  3000               	movlw	0
  3931  0B52  00CC               	movwf	___fladd@b+2
  3932  0B53  3000               	movlw	0
  3933  0B54  00CB               	movwf	___fladd@b+1
  3934  0B55  3000               	movlw	0
  3935  0B56  00CA               	movwf	___fladd@b
  3936  0B57                     l6110:	
  3937  0B57  17CC               	bsf	___fladd@b+2,7
  3938  0B58  01CD               	clrf	___fladd@b+3
  3939  0B59  2B62               	goto	l6116
  3940  0B5A                     l6114:	
  3941  0B5A  3000               	movlw	0
  3942  0B5B  00CD               	movwf	___fladd@b+3
  3943  0B5C  3000               	movlw	0
  3944  0B5D  00CC               	movwf	___fladd@b+2
  3945  0B5E  3000               	movlw	0
  3946  0B5F  00CB               	movwf	___fladd@b+1
  3947  0B60  3000               	movlw	0
  3948  0B61  00CA               	movwf	___fladd@b
  3949  0B62                     l6116:	
  3950  0B62  0851               	movf	___fladd@a+3,w
  3951  0B63  3980               	andlw	128
  3952  0B64  00D2               	movwf	??___fladd
  3953  0B65  0852               	movf	??___fladd,w
  3954  0B66  00DB               	movwf	___fladd@aexp
  3955  0B67  085B               	movf	___fladd@aexp,w
  3956  0B68  065A               	xorwf	___fladd@signs,w
  3957  0B69  1D03               	btfss	3,2
  3958  0B6A  175A               	bsf	___fladd@signs,6
  3959  0B6B  0851               	movf	___fladd@a+3,w
  3960  0B6C  00D2               	movwf	??___fladd
  3961  0B6D  0752               	addwf	??___fladd,w
  3962  0B6E  00D3               	movwf	??___fladd+1
  3963  0B6F  0853               	movf	??___fladd+1,w
  3964  0B70  00DB               	movwf	___fladd@aexp
  3965  0B71  1BD0               	btfsc	___fladd@a+2,7
  3966  0B72  145B               	bsf	___fladd@aexp,0
  3967  0B73  085B               	movf	___fladd@aexp,w
  3968  0B74  1903               	btfsc	3,2
  3969  0B75  2B84               	goto	l6138
  3970  0B76  0A5B               	incf	___fladd@aexp,w
  3971  0B77  1D03               	btfss	3,2
  3972  0B78  2B81               	goto	l6134
  3973  0B79  3000               	movlw	0
  3974  0B7A  00D1               	movwf	___fladd@a+3
  3975  0B7B  3000               	movlw	0
  3976  0B7C  00D0               	movwf	___fladd@a+2
  3977  0B7D  3000               	movlw	0
  3978  0B7E  00CF               	movwf	___fladd@a+1
  3979  0B7F  3000               	movlw	0
  3980  0B80  00CE               	movwf	___fladd@a
  3981  0B81                     l6134:	
  3982  0B81  17D0               	bsf	___fladd@a+2,7
  3983  0B82  01D1               	clrf	___fladd@a+3
  3984  0B83  2B8C               	goto	l1244
  3985  0B84                     l6138:	
  3986  0B84  3000               	movlw	0
  3987  0B85  00D1               	movwf	___fladd@a+3
  3988  0B86  3000               	movlw	0
  3989  0B87  00D0               	movwf	___fladd@a+2
  3990  0B88  3000               	movlw	0
  3991  0B89  00CF               	movwf	___fladd@a+1
  3992  0B8A  3000               	movlw	0
  3993  0B8B  00CE               	movwf	___fladd@a
  3994  0B8C                     l1244:	
  3995  0B8C  085C               	movf	___fladd@bexp,w
  3996  0B8D  025B               	subwf	___fladd@aexp,w
  3997  0B8E  1803               	skipnc
  3998  0B8F  2BD2               	goto	l6174
  3999  0B90  1F5A               	btfss	___fladd@signs,6
  4000  0B91  2B96               	goto	l6144
  4001  0B92  3080               	movlw	128
  4002  0B93  00D2               	movwf	??___fladd
  4003  0B94  0852               	movf	??___fladd,w
  4004  0B95  06DA               	xorwf	___fladd@signs,f
  4005  0B96                     l6144:	
  4006  0B96  085C               	movf	___fladd@bexp,w
  4007  0B97  00D2               	movwf	??___fladd
  4008  0B98  0852               	movf	??___fladd,w
  4009  0B99  00DD               	movwf	___fladd@grs
  4010  0B9A  085B               	movf	___fladd@aexp,w
  4011  0B9B  00D2               	movwf	??___fladd
  4012  0B9C  0852               	movf	??___fladd,w
  4013  0B9D  00DC               	movwf	___fladd@bexp
  4014  0B9E  085D               	movf	___fladd@grs,w
  4015  0B9F  00D2               	movwf	??___fladd
  4016  0BA0  0852               	movf	??___fladd,w
  4017  0BA1  00DB               	movwf	___fladd@aexp
  4018  0BA2  084A               	movf	___fladd@b,w
  4019  0BA3  00D2               	movwf	??___fladd
  4020  0BA4  0852               	movf	??___fladd,w
  4021  0BA5  00DD               	movwf	___fladd@grs
  4022  0BA6  084E               	movf	___fladd@a,w
  4023  0BA7  00D2               	movwf	??___fladd
  4024  0BA8  0852               	movf	??___fladd,w
  4025  0BA9  00CA               	movwf	___fladd@b
  4026  0BAA  085D               	movf	___fladd@grs,w
  4027  0BAB  00D2               	movwf	??___fladd
  4028  0BAC  0852               	movf	??___fladd,w
  4029  0BAD  00CE               	movwf	___fladd@a
  4030  0BAE  084B               	movf	___fladd@b+1,w
  4031  0BAF  00D2               	movwf	??___fladd
  4032  0BB0  0852               	movf	??___fladd,w
  4033  0BB1  00DD               	movwf	___fladd@grs
  4034  0BB2  084F               	movf	___fladd@a+1,w
  4035  0BB3  00D2               	movwf	??___fladd
  4036  0BB4  0852               	movf	??___fladd,w
  4037  0BB5  00CB               	movwf	___fladd@b+1
  4038  0BB6  085D               	movf	___fladd@grs,w
  4039  0BB7  00D2               	movwf	??___fladd
  4040  0BB8  0852               	movf	??___fladd,w
  4041  0BB9  00CF               	movwf	___fladd@a+1
  4042  0BBA  084C               	movf	___fladd@b+2,w
  4043  0BBB  00D2               	movwf	??___fladd
  4044  0BBC  0852               	movf	??___fladd,w
  4045  0BBD  00DD               	movwf	___fladd@grs
  4046  0BBE  0850               	movf	___fladd@a+2,w
  4047  0BBF  00D2               	movwf	??___fladd
  4048  0BC0  0852               	movf	??___fladd,w
  4049  0BC1  00CC               	movwf	___fladd@b+2
  4050  0BC2  085D               	movf	___fladd@grs,w
  4051  0BC3  00D2               	movwf	??___fladd
  4052  0BC4  0852               	movf	??___fladd,w
  4053  0BC5  00D0               	movwf	___fladd@a+2
  4054  0BC6  084D               	movf	___fladd@b+3,w
  4055  0BC7  00D2               	movwf	??___fladd
  4056  0BC8  0852               	movf	??___fladd,w
  4057  0BC9  00DD               	movwf	___fladd@grs
  4058  0BCA  0851               	movf	___fladd@a+3,w
  4059  0BCB  00D2               	movwf	??___fladd
  4060  0BCC  0852               	movf	??___fladd,w
  4061  0BCD  00CD               	movwf	___fladd@b+3
  4062  0BCE  085D               	movf	___fladd@grs,w
  4063  0BCF  00D2               	movwf	??___fladd
  4064  0BD0  0852               	movf	??___fladd,w
  4065  0BD1  00D1               	movwf	___fladd@a+3
  4066  0BD2                     l6174:	
  4067  0BD2  01DD               	clrf	___fladd@grs
  4068  0BD3  085B               	movf	___fladd@aexp,w
  4069  0BD4  00D2               	movwf	??___fladd
  4070  0BD5  01D3               	clrf	??___fladd+1
  4071  0BD6  0853               	movf	??___fladd+1,w
  4072  0BD7  00D5               	movwf	??___fladd+3
  4073  0BD8  085C               	movf	___fladd@bexp,w
  4074  0BD9  0252               	subwf	??___fladd,w
  4075  0BDA  00D4               	movwf	??___fladd+2
  4076  0BDB  1C03               	skipc
  4077  0BDC  03D5               	decf	??___fladd+3,f
  4078  0BDD  0855               	movf	??___fladd+3,w
  4079  0BDE  3A80               	xorlw	128
  4080  0BDF  00FF               	movwf	127
  4081  0BE0  3080               	movlw	128
  4082  0BE1  027F               	subwf	127,w
  4083  0BE2  1D03               	skipz
  4084  0BE3  2BE6               	goto	u6045
  4085  0BE4  301A               	movlw	26
  4086  0BE5  0254               	subwf	??___fladd+2,w
  4087  0BE6                     u6045:	
  4088  0BE6  1C03               	skipc
  4089  0BE7  2C1F               	goto	l6192
  4090  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0BEA  084D               	movf	___fladd@b+3,w
  4093  0BEB  044C               	iorwf	___fladd@b+2,w
  4094  0BEC  044B               	iorwf	___fladd@b+1,w
  4095  0BED  044A               	iorwf	___fladd@b,w
  4096  0BEE  1903               	btfsc	3,2
  4097  0BEF  2BF2               	goto	u6050
  4098  0BF0  3001               	movlw	1
  4099  0BF1  2BF3               	goto	u6060
  4100  0BF2                     u6050:	
  4101  0BF2  3000               	movlw	0
  4102  0BF3                     u6060:	
  4103  0BF3  00D2               	movwf	??___fladd
  4104  0BF4  0852               	movf	??___fladd,w
  4105  0BF5  00DD               	movwf	___fladd@grs
  4106  0BF6  3000               	movlw	0
  4107  0BF7  00CD               	movwf	___fladd@b+3
  4108  0BF8  3000               	movlw	0
  4109  0BF9  00CC               	movwf	___fladd@b+2
  4110  0BFA  3000               	movlw	0
  4111  0BFB  00CB               	movwf	___fladd@b+1
  4112  0BFC  3000               	movlw	0
  4113  0BFD  00CA               	movwf	___fladd@b
  4114  0BFE  085B               	movf	___fladd@aexp,w
  4115  0BFF  00D2               	movwf	??___fladd
  4116  0C00  0852               	movf	??___fladd,w
  4117  0C01  00DC               	movwf	___fladd@bexp
  4118  0C02  2C25               	goto	l1248
  4119  0C03                     l1250:	
  4120  0C03  1C5D               	btfss	___fladd@grs,0
  4121  0C04  2C0E               	goto	l6182
  4122  0C05  085D               	movf	___fladd@grs,w
  4123  0C06  00D2               	movwf	??___fladd
  4124  0C07  1003               	clrc
  4125  0C08  0C52               	rrf	??___fladd,w
  4126  0C09  3801               	iorlw	1
  4127  0C0A  00D3               	movwf	??___fladd+1
  4128  0C0B  0853               	movf	??___fladd+1,w
  4129  0C0C  00DD               	movwf	___fladd@grs
  4130  0C0D  2C10               	goto	l6184
  4131  0C0E                     l6182:	
  4132  0C0E  1003               	clrc
  4133  0C0F  0CDD               	rrf	___fladd@grs,f
  4134  0C10                     l6184:	
  4135  0C10  184A               	btfsc	___fladd@b,0
  4136  0C11  17DD               	bsf	___fladd@grs,7
  4137  0C12  3001               	movlw	1
  4138  0C13  00D2               	movwf	??___fladd
  4139  0C14                     u6095:	
  4140  0C14  0D4D               	rlf	___fladd@b+3,w
  4141  0C15  0CCD               	rrf	___fladd@b+3,f
  4142  0C16  0CCC               	rrf	___fladd@b+2,f
  4143  0C17  0CCB               	rrf	___fladd@b+1,f
  4144  0C18  0CCA               	rrf	___fladd@b,f
  4145  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4146  0C1A  2C14               	goto	u6095
  4147  0C1B  3001               	movlw	1
  4148  0C1C  00D2               	movwf	??___fladd
  4149  0C1D  0852               	movf	??___fladd,w
  4150  0C1E  07DC               	addwf	___fladd@bexp,f
  4151  0C1F                     l6192:	
  4152  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0C21  085B               	movf	___fladd@aexp,w
  4155  0C22  025C               	subwf	___fladd@bexp,w
  4156  0C23  1C03               	skipc
  4157  0C24  2C03               	goto	l1250
  4158  0C25                     l1248:	
  4159  0C25  1B5A               	btfsc	___fladd@signs,6
  4160  0C26  2C66               	goto	l6218
  4161  0C27  085C               	movf	___fladd@bexp,w
  4162  0C28  1D03               	btfss	3,2
  4163  0C29  2C33               	goto	l6200
  4164  0C2A  3000               	movlw	0
  4165  0C2B  00CD               	movwf	?___fladd+3
  4166  0C2C  3000               	movlw	0
  4167  0C2D  00CC               	movwf	?___fladd+2
  4168  0C2E  3000               	movlw	0
  4169  0C2F  00CB               	movwf	?___fladd+1
  4170  0C30  3000               	movlw	0
  4171  0C31  00CA               	movwf	?___fladd
  4172  0C32  0008               	return
  4173  0C33                     l6200:	
  4174  0C33  084E               	movf	___fladd@a,w
  4175  0C34  07CA               	addwf	___fladd@b,f
  4176  0C35  084F               	movf	___fladd@a+1,w
  4177  0C36  1103               	clrz
  4178  0C37  1803               	skipnc
  4179  0C38  3E01               	addlw	1
  4180  0C39  1D03               	btfss	3,2
  4181  0C3A  07CB               	addwf	___fladd@b+1,f
  4182  0C3B  0850               	movf	___fladd@a+2,w
  4183  0C3C  1103               	clrz
  4184  0C3D  1803               	skipnc
  4185  0C3E  3E01               	addlw	1
  4186  0C3F  1D03               	btfss	3,2
  4187  0C40  07CC               	addwf	___fladd@b+2,f
  4188  0C41  0851               	movf	___fladd@a+3,w
  4189  0C42  1103               	clrz
  4190  0C43  1803               	skipnc
  4191  0C44  3E01               	addlw	1
  4192  0C45  1D03               	btfss	3,2
  4193  0C46  07CD               	addwf	___fladd@b+3,f
  4194  0C47  1C4D               	btfss	___fladd@b+3,0
  4195  0C48  2D08               	goto	l6252
  4196  0C49  1C5D               	btfss	___fladd@grs,0
  4197  0C4A  2C54               	goto	l6208
  4198  0C4B  085D               	movf	___fladd@grs,w
  4199  0C4C  00D2               	movwf	??___fladd
  4200  0C4D  1003               	clrc
  4201  0C4E  0C52               	rrf	??___fladd,w
  4202  0C4F  3801               	iorlw	1
  4203  0C50  00D3               	movwf	??___fladd+1
  4204  0C51  0853               	movf	??___fladd+1,w
  4205  0C52  00DD               	movwf	___fladd@grs
  4206  0C53  2C56               	goto	l6210
  4207  0C54                     l6208:	
  4208  0C54  1003               	clrc
  4209  0C55  0CDD               	rrf	___fladd@grs,f
  4210  0C56                     l6210:	
  4211  0C56  184A               	btfsc	___fladd@b,0
  4212  0C57  17DD               	bsf	___fladd@grs,7
  4213  0C58  3001               	movlw	1
  4214  0C59  00D2               	movwf	??___fladd
  4215  0C5A                     u6175:	
  4216  0C5A  0D4D               	rlf	___fladd@b+3,w
  4217  0C5B  0CCD               	rrf	___fladd@b+3,f
  4218  0C5C  0CCC               	rrf	___fladd@b+2,f
  4219  0C5D  0CCB               	rrf	___fladd@b+1,f
  4220  0C5E  0CCA               	rrf	___fladd@b,f
  4221  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4222  0C60  2C5A               	goto	u6175
  4223  0C61  3001               	movlw	1
  4224  0C62  00D2               	movwf	??___fladd
  4225  0C63  0852               	movf	??___fladd,w
  4226  0C64  07DC               	addwf	___fladd@bexp,f
  4227  0C65  2D08               	goto	l6252
  4228  0C66                     l6218:	
  4229  0C66  084D               	movf	___fladd@b+3,w
  4230  0C67  3A80               	xorlw	128
  4231  0C68  00FF               	movwf	127
  4232  0C69  0851               	movf	___fladd@a+3,w
  4233  0C6A  3A80               	xorlw	128
  4234  0C6B  027F               	subwf	127,w
  4235  0C6C  1D03               	skipz
  4236  0C6D  2C78               	goto	u6183
  4237  0C6E  0850               	movf	___fladd@a+2,w
  4238  0C6F  024C               	subwf	___fladd@b+2,w
  4239  0C70  1D03               	skipz
  4240  0C71  2C78               	goto	u6183
  4241  0C72  084F               	movf	___fladd@a+1,w
  4242  0C73  024B               	subwf	___fladd@b+1,w
  4243  0C74  1D03               	skipz
  4244  0C75  2C78               	goto	u6183
  4245  0C76  084E               	movf	___fladd@a,w
  4246  0C77  024A               	subwf	___fladd@b,w
  4247  0C78                     u6183:	
  4248  0C78  1803               	skipnc
  4249  0C79  2CD0               	goto	l6228
  4250  0C7A  30FF               	movlw	255
  4251  0C7B  00D2               	movwf	??___fladd
  4252  0C7C  30FF               	movlw	255
  4253  0C7D  00D3               	movwf	??___fladd+1
  4254  0C7E  30FF               	movlw	255
  4255  0C7F  00D4               	movwf	??___fladd+2
  4256  0C80  30FF               	movlw	255
  4257  0C81  00D5               	movwf	??___fladd+3
  4258  0C82  084E               	movf	___fladd@a,w
  4259  0C83  00D6               	movwf	??___fladd+4
  4260  0C84  084F               	movf	___fladd@a+1,w
  4261  0C85  00D7               	movwf	??___fladd+5
  4262  0C86  0850               	movf	___fladd@a+2,w
  4263  0C87  00D8               	movwf	??___fladd+6
  4264  0C88  0851               	movf	___fladd@a+3,w
  4265  0C89  00D9               	movwf	??___fladd+7
  4266  0C8A  084A               	movf	___fladd@b,w
  4267  0C8B  02D6               	subwf	??___fladd+4,f
  4268  0C8C  084B               	movf	___fladd@b+1,w
  4269  0C8D  1C03               	skipc
  4270  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4271  0C8F  2C91               	goto	u6191
  4272  0C90  2C92               	goto	u6192
  4273  0C91                     u6191:	
  4274  0C91  02D7               	subwf	??___fladd+5,f
  4275  0C92                     u6192:	
  4276  0C92  084C               	movf	___fladd@b+2,w
  4277  0C93  1C03               	skipc
  4278  0C94  0F4C               	incfsz	___fladd@b+2,w
  4279  0C95  2C97               	goto	u6193
  4280  0C96  2C98               	goto	u6194
  4281  0C97                     u6193:	
  4282  0C97  02D8               	subwf	??___fladd+6,f
  4283  0C98                     u6194:	
  4284  0C98  084D               	movf	___fladd@b+3,w
  4285  0C99  1C03               	skipc
  4286  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4287  0C9B  2C9D               	goto	u6195
  4288  0C9C  2C9E               	goto	u6196
  4289  0C9D                     u6195:	
  4290  0C9D  02D9               	subwf	??___fladd+7,f
  4291  0C9E                     u6196:	
  4292  0C9E  0856               	movf	??___fladd+4,w
  4293  0C9F  07D2               	addwf	??___fladd,f
  4294  0CA0  0857               	movf	??___fladd+5,w
  4295  0CA1  1803               	skipnc
  4296  0CA2  0F57               	incfsz	??___fladd+5,w
  4297  0CA3  2CA5               	goto	u6200
  4298  0CA4  2CA6               	goto	u6201
  4299  0CA5                     u6200:	
  4300  0CA5  07D3               	addwf	??___fladd+1,f
  4301  0CA6                     u6201:	
  4302  0CA6  0858               	movf	??___fladd+6,w
  4303  0CA7  1803               	skipnc
  4304  0CA8  0F58               	incfsz	??___fladd+6,w
  4305  0CA9  2CAB               	goto	u6202
  4306  0CAA  2CAC               	goto	u6203
  4307  0CAB                     u6202:	
  4308  0CAB  07D4               	addwf	??___fladd+2,f
  4309  0CAC                     u6203:	
  4310  0CAC  0859               	movf	??___fladd+7,w
  4311  0CAD  1803               	skipnc
  4312  0CAE  0A59               	incf	??___fladd+7,w
  4313  0CAF  07D5               	addwf	??___fladd+3,f
  4314  0CB0  0855               	movf	??___fladd+3,w
  4315  0CB1  00CD               	movwf	___fladd@b+3
  4316  0CB2  0854               	movf	??___fladd+2,w
  4317  0CB3  00CC               	movwf	___fladd@b+2
  4318  0CB4  0853               	movf	??___fladd+1,w
  4319  0CB5  00CB               	movwf	___fladd@b+1
  4320  0CB6  0852               	movf	??___fladd,w
  4321  0CB7  00CA               	movwf	___fladd@b
  4322  0CB8  3080               	movlw	128
  4323  0CB9  00D2               	movwf	??___fladd
  4324  0CBA  0852               	movf	??___fladd,w
  4325  0CBB  06DA               	xorwf	___fladd@signs,f
  4326  0CBC  09DD               	comf	___fladd@grs,f
  4327  0CBD  0ADD               	incf	___fladd@grs,f
  4328  0CBE  085D               	movf	___fladd@grs,w
  4329  0CBF  1D03               	btfss	3,2
  4330  0CC0  2CDE               	goto	l1265
  4331  0CC1  3001               	movlw	1
  4332  0CC2  07CA               	addwf	___fladd@b,f
  4333  0CC3  3000               	movlw	0
  4334  0CC4  1803               	skipnc
  4335  0CC5  3001               	movlw	1
  4336  0CC6  07CB               	addwf	___fladd@b+1,f
  4337  0CC7  3000               	movlw	0
  4338  0CC8  1803               	skipnc
  4339  0CC9  3001               	movlw	1
  4340  0CCA  07CC               	addwf	___fladd@b+2,f
  4341  0CCB  3000               	movlw	0
  4342  0CCC  1803               	skipnc
  4343  0CCD  3001               	movlw	1
  4344  0CCE  07CD               	addwf	___fladd@b+3,f
  4345  0CCF  2CDE               	goto	l1265
  4346  0CD0                     l6228:	
  4347  0CD0  084E               	movf	___fladd@a,w
  4348  0CD1  02CA               	subwf	___fladd@b,f
  4349  0CD2  084F               	movf	___fladd@a+1,w
  4350  0CD3  1C03               	skipc
  4351  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4352  0CD5  02CB               	subwf	___fladd@b+1,f
  4353  0CD6  0850               	movf	___fladd@a+2,w
  4354  0CD7  1C03               	skipc
  4355  0CD8  0F50               	incfsz	___fladd@a+2,w
  4356  0CD9  02CC               	subwf	___fladd@b+2,f
  4357  0CDA  0851               	movf	___fladd@a+3,w
  4358  0CDB  1C03               	skipc
  4359  0CDC  0F51               	incfsz	___fladd@a+3,w
  4360  0CDD  02CD               	subwf	___fladd@b+3,f
  4361  0CDE                     l1265:	
  4362  0CDE  084D               	movf	___fladd@b+3,w
  4363  0CDF  044C               	iorwf	___fladd@b+2,w
  4364  0CE0  044B               	iorwf	___fladd@b+1,w
  4365  0CE1  044A               	iorwf	___fladd@b,w
  4366  0CE2  1D03               	skipz
  4367  0CE3  2D06               	goto	l6250
  4368  0CE4  085D               	movf	___fladd@grs,w
  4369  0CE5  1D03               	btfss	3,2
  4370  0CE6  2D06               	goto	l6250
  4371  0CE7  3000               	movlw	0
  4372  0CE8  00CD               	movwf	?___fladd+3
  4373  0CE9  3000               	movlw	0
  4374  0CEA  00CC               	movwf	?___fladd+2
  4375  0CEB  3000               	movlw	0
  4376  0CEC  00CB               	movwf	?___fladd+1
  4377  0CED  3000               	movlw	0
  4378  0CEE  00CA               	movwf	?___fladd
  4379  0CEF  0008               	return
  4380  0CF0                     l6236:	
  4381  0CF0  3001               	movlw	1
  4382  0CF1  00D2               	movwf	??___fladd
  4383  0CF2                     u6245:	
  4384  0CF2  1003               	clrc
  4385  0CF3  0DCA               	rlf	___fladd@b,f
  4386  0CF4  0DCB               	rlf	___fladd@b+1,f
  4387  0CF5  0DCC               	rlf	___fladd@b+2,f
  4388  0CF6  0DCD               	rlf	___fladd@b+3,f
  4389  0CF7  0BD2               	decfsz	??___fladd,f
  4390  0CF8  2CF2               	goto	u6245
  4391  0CF9  1BDD               	btfsc	___fladd@grs,7
  4392  0CFA  144A               	bsf	___fladd@b,0
  4393  0CFB  1C5D               	btfss	___fladd@grs,0
  4394  0CFC  2CFF               	goto	l6244
  4395  0CFD  1403               	setc
  4396  0CFE  2D00               	goto	L3
  4397  0CFF                     l6244:	
  4398  0CFF  1003               	clrc
  4399  0D00                     L3:	
  4400  0D00  0DDD               	rlf	___fladd@grs,f
  4401  0D01  085C               	movf	___fladd@bexp,w
  4402  0D02  1903               	btfsc	3,2
  4403  0D03  2D06               	goto	l6250
  4404  0D04  3001               	movlw	1
  4405  0D05  02DC               	subwf	___fladd@bexp,f
  4406  0D06                     l6250:	
  4407  0D06  1FCC               	btfss	___fladd@b+2,7
  4408  0D07  2CF0               	goto	l6236
  4409  0D08                     l6252:	
  4410  0D08  01DB               	clrf	___fladd@aexp
  4411  0D09  1FDD               	btfss	___fladd@grs,7
  4412  0D0A  2D13               	goto	l6262
  4413  0D0B  085D               	movf	___fladd@grs,w
  4414  0D0C  397F               	andlw	127
  4415  0D0D  1903               	btfsc	3,2
  4416  0D0E  184A               	btfsc	___fladd@b,0
  4417  0D0F  2D11               	goto	l6258
  4418  0D10  2D13               	goto	l6262
  4419  0D11                     l6258:	
  4420  0D11  01DB               	clrf	___fladd@aexp
  4421  0D12  0ADB               	incf	___fladd@aexp,f
  4422  0D13                     l6262:	
  4423  0D13  085B               	movf	___fladd@aexp,w
  4424  0D14  1903               	btfsc	3,2
  4425  0D15  2D46               	goto	l1278
  4426  0D16  3001               	movlw	1
  4427  0D17  07CA               	addwf	___fladd@b,f
  4428  0D18  3000               	movlw	0
  4429  0D19  1803               	skipnc
  4430  0D1A  3001               	movlw	1
  4431  0D1B  07CB               	addwf	___fladd@b+1,f
  4432  0D1C  3000               	movlw	0
  4433  0D1D  1803               	skipnc
  4434  0D1E  3001               	movlw	1
  4435  0D1F  07CC               	addwf	___fladd@b+2,f
  4436  0D20  3000               	movlw	0
  4437  0D21  1803               	skipnc
  4438  0D22  3001               	movlw	1
  4439  0D23  07CD               	addwf	___fladd@b+3,f
  4440  0D24  1C4D               	btfss	___fladd@b+3,0
  4441  0D25  2D46               	goto	l1278
  4442  0D26  084A               	movf	___fladd@b,w
  4443  0D27  00D2               	movwf	??___fladd
  4444  0D28  084B               	movf	___fladd@b+1,w
  4445  0D29  00D3               	movwf	??___fladd+1
  4446  0D2A  084C               	movf	___fladd@b+2,w
  4447  0D2B  00D4               	movwf	??___fladd+2
  4448  0D2C  084D               	movf	___fladd@b+3,w
  4449  0D2D  00D5               	movwf	??___fladd+3
  4450  0D2E  3001               	movlw	1
  4451  0D2F  00D6               	movwf	??___fladd+4
  4452  0D30                     u6345:	
  4453  0D30  0D55               	rlf	??___fladd+3,w
  4454  0D31  0CD5               	rrf	??___fladd+3,f
  4455  0D32  0CD4               	rrf	??___fladd+2,f
  4456  0D33  0CD3               	rrf	??___fladd+1,f
  4457  0D34  0CD2               	rrf	??___fladd,f
  4458  0D35  0BD6               	decfsz	??___fladd+4,f
  4459  0D36  2D30               	goto	u6345
  4460  0D37  0855               	movf	??___fladd+3,w
  4461  0D38  00CD               	movwf	___fladd@b+3
  4462  0D39  0854               	movf	??___fladd+2,w
  4463  0D3A  00CC               	movwf	___fladd@b+2
  4464  0D3B  0853               	movf	??___fladd+1,w
  4465  0D3C  00CB               	movwf	___fladd@b+1
  4466  0D3D  0852               	movf	??___fladd,w
  4467  0D3E  00CA               	movwf	___fladd@b
  4468  0D3F  0A5C               	incf	___fladd@bexp,w
  4469  0D40  1903               	btfsc	3,2
  4470  0D41  2D46               	goto	l1278
  4471  0D42  3001               	movlw	1
  4472  0D43  00D2               	movwf	??___fladd
  4473  0D44  0852               	movf	??___fladd,w
  4474  0D45  07DC               	addwf	___fladd@bexp,f
  4475  0D46                     l1278:	
  4476  0D46  0A5C               	incf	___fladd@bexp,w
  4477  0D47  1D03               	btfss	3,2
  4478  0D48  085C               	movf	___fladd@bexp,w
  4479  0D49  1D03               	btfss	3,2
  4480  0D4A  2D56               	goto	l6280
  4481  0D4B  3000               	movlw	0
  4482  0D4C  00CD               	movwf	___fladd@b+3
  4483  0D4D  3000               	movlw	0
  4484  0D4E  00CC               	movwf	___fladd@b+2
  4485  0D4F  3000               	movlw	0
  4486  0D50  00CB               	movwf	___fladd@b+1
  4487  0D51  3000               	movlw	0
  4488  0D52  00CA               	movwf	___fladd@b
  4489  0D53  085C               	movf	___fladd@bexp,w
  4490  0D54  1903               	btfsc	3,2
  4491  0D55  01DA               	clrf	___fladd@signs
  4492  0D56                     l6280:	
  4493  0D56  1C5C               	btfss	___fladd@bexp,0
  4494  0D57  2D5A               	goto	l6284
  4495  0D58  17CC               	bsf	___fladd@b+2,7
  4496  0D59  2D5E               	goto	l1286
  4497  0D5A                     l6284:	
  4498  0D5A  307F               	movlw	127
  4499  0D5B  00D2               	movwf	??___fladd
  4500  0D5C  0852               	movf	??___fladd,w
  4501  0D5D  05CC               	andwf	___fladd@b+2,f
  4502  0D5E                     l1286:	
  4503  0D5E  085C               	movf	___fladd@bexp,w
  4504  0D5F  00D2               	movwf	??___fladd
  4505  0D60  1003               	clrc
  4506  0D61  0C52               	rrf	??___fladd,w
  4507  0D62  00D3               	movwf	??___fladd+1
  4508  0D63  0853               	movf	??___fladd+1,w
  4509  0D64  00CD               	movwf	___fladd@b+3
  4510  0D65  1FDA               	btfss	___fladd@signs,7
  4511  0D66  0008               	return
  4512  0D67  17CD               	bsf	___fladd@b+3,7
  4513  0D68  0008               	return
  4514  0D69                     __end_of___fladd:	
  4515                           
  4516                           	psect	text6
  4517  113D                     __ptext6:	
  4518 ;; *************** function ___flge *****************
  4519 ;; Defined at:
  4520 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  ff1             4    0[BANK0 ] unsigned char 
  4523 ;;  ff2             4    4[BANK0 ] unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 300/0
  4532 ;;		On exit  : 300/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       8       0       0       0
  4536 ;;      Locals:         0       0       0       0       0
  4537 ;;      Temps:          0       4       0       0       0
  4538 ;;      Totals:         0      12       0       0       0
  4539 ;;Total ram usage:       12 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_MediaPlacaVaccum
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function ___flge
  4551  113D                     ___flge:	
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4555  113D  3000               	movlw	0
  4556  113E  0520               	andwf	___flge@ff1,w
  4557  113F  00A8               	movwf	??___flge
  4558  1140  3000               	movlw	0
  4559  1141  0521               	andwf	___flge@ff1+1,w
  4560  1142  00A9               	movwf	??___flge+1
  4561  1143  3080               	movlw	128
  4562  1144  0522               	andwf	___flge@ff1+2,w
  4563  1145  00AA               	movwf	??___flge+2
  4564  1146  307F               	movlw	127
  4565  1147  0523               	andwf	___flge@ff1+3,w
  4566  1148  00AB               	movwf	??___flge+3
  4567  1149  082B               	movf	??___flge+3,w
  4568  114A  042A               	iorwf	??___flge+2,w
  4569  114B  0429               	iorwf	??___flge+1,w
  4570  114C  0428               	iorwf	??___flge,w
  4571  114D  1D03               	skipz
  4572  114E  2957               	goto	l1125
  4573  114F  3000               	movlw	0
  4574  1150  00A3               	movwf	___flge@ff1+3
  4575  1151  3000               	movlw	0
  4576  1152  00A2               	movwf	___flge@ff1+2
  4577  1153  3000               	movlw	0
  4578  1154  00A1               	movwf	___flge@ff1+1
  4579  1155  3000               	movlw	0
  4580  1156  00A0               	movwf	___flge@ff1
  4581  1157                     l1125:	
  4582  1157  3000               	movlw	0
  4583  1158  0524               	andwf	___flge@ff2,w
  4584  1159  00A8               	movwf	??___flge
  4585  115A  3000               	movlw	0
  4586  115B  0525               	andwf	___flge@ff2+1,w
  4587  115C  00A9               	movwf	??___flge+1
  4588  115D  3080               	movlw	128
  4589  115E  0526               	andwf	___flge@ff2+2,w
  4590  115F  00AA               	movwf	??___flge+2
  4591  1160  307F               	movlw	127
  4592  1161  0527               	andwf	___flge@ff2+3,w
  4593  1162  00AB               	movwf	??___flge+3
  4594  1163  082B               	movf	??___flge+3,w
  4595  1164  042A               	iorwf	??___flge+2,w
  4596  1165  0429               	iorwf	??___flge+1,w
  4597  1166  0428               	iorwf	??___flge,w
  4598  1167  1D03               	skipz
  4599  1168  2971               	goto	l6960
  4600  1169  3000               	movlw	0
  4601  116A  00A7               	movwf	___flge@ff2+3
  4602  116B  3000               	movlw	0
  4603  116C  00A6               	movwf	___flge@ff2+2
  4604  116D  3000               	movlw	0
  4605  116E  00A5               	movwf	___flge@ff2+1
  4606  116F  3000               	movlw	0
  4607  1170  00A4               	movwf	___flge@ff2
  4608  1171                     l6960:	
  4609  1171  1FA3               	btfss	___flge@ff1+3,7
  4610  1172  2997               	goto	l6964
  4611  1173  3000               	movlw	0
  4612  1174  00A8               	movwf	??___flge
  4613  1175  3000               	movlw	0
  4614  1176  00A9               	movwf	??___flge+1
  4615  1177  3000               	movlw	0
  4616  1178  00AA               	movwf	??___flge+2
  4617  1179  3080               	movlw	128
  4618  117A  00AB               	movwf	??___flge+3
  4619  117B  0820               	movf	___flge@ff1,w
  4620  117C  02A8               	subwf	??___flge,f
  4621  117D  0821               	movf	___flge@ff1+1,w
  4622  117E  1C03               	skipc
  4623  117F  0F21               	incfsz	___flge@ff1+1,w
  4624  1180  2982               	goto	u7361
  4625  1181  2983               	goto	u7362
  4626  1182                     u7361:	
  4627  1182  02A9               	subwf	??___flge+1,f
  4628  1183                     u7362:	
  4629  1183  0822               	movf	___flge@ff1+2,w
  4630  1184  1C03               	skipc
  4631  1185  0F22               	incfsz	___flge@ff1+2,w
  4632  1186  2988               	goto	u7363
  4633  1187  2989               	goto	u7364
  4634  1188                     u7363:	
  4635  1188  02AA               	subwf	??___flge+2,f
  4636  1189                     u7364:	
  4637  1189  0823               	movf	___flge@ff1+3,w
  4638  118A  1C03               	skipc
  4639  118B  0F23               	incfsz	___flge@ff1+3,w
  4640  118C  298E               	goto	u7365
  4641  118D  298F               	goto	u7366
  4642  118E                     u7365:	
  4643  118E  02AB               	subwf	??___flge+3,f
  4644  118F                     u7366:	
  4645  118F  082B               	movf	??___flge+3,w
  4646  1190  00A3               	movwf	___flge@ff1+3
  4647  1191  082A               	movf	??___flge+2,w
  4648  1192  00A2               	movwf	___flge@ff1+2
  4649  1193  0829               	movf	??___flge+1,w
  4650  1194  00A1               	movwf	___flge@ff1+1
  4651  1195  0828               	movf	??___flge,w
  4652  1196  00A0               	movwf	___flge@ff1
  4653  1197                     l6964:	
  4654  1197  1FA7               	btfss	___flge@ff2+3,7
  4655  1198  29BD               	goto	l1128
  4656  1199  3000               	movlw	0
  4657  119A  00A8               	movwf	??___flge
  4658  119B  3000               	movlw	0
  4659  119C  00A9               	movwf	??___flge+1
  4660  119D  3000               	movlw	0
  4661  119E  00AA               	movwf	??___flge+2
  4662  119F  3080               	movlw	128
  4663  11A0  00AB               	movwf	??___flge+3
  4664  11A1  0824               	movf	___flge@ff2,w
  4665  11A2  02A8               	subwf	??___flge,f
  4666  11A3  0825               	movf	___flge@ff2+1,w
  4667  11A4  1C03               	skipc
  4668  11A5  0F25               	incfsz	___flge@ff2+1,w
  4669  11A6  29A8               	goto	u7381
  4670  11A7  29A9               	goto	u7382
  4671  11A8                     u7381:	
  4672  11A8  02A9               	subwf	??___flge+1,f
  4673  11A9                     u7382:	
  4674  11A9  0826               	movf	___flge@ff2+2,w
  4675  11AA  1C03               	skipc
  4676  11AB  0F26               	incfsz	___flge@ff2+2,w
  4677  11AC  29AE               	goto	u7383
  4678  11AD  29AF               	goto	u7384
  4679  11AE                     u7383:	
  4680  11AE  02AA               	subwf	??___flge+2,f
  4681  11AF                     u7384:	
  4682  11AF  0827               	movf	___flge@ff2+3,w
  4683  11B0  1C03               	skipc
  4684  11B1  0F27               	incfsz	___flge@ff2+3,w
  4685  11B2  29B4               	goto	u7385
  4686  11B3  29B5               	goto	u7386
  4687  11B4                     u7385:	
  4688  11B4  02AB               	subwf	??___flge+3,f
  4689  11B5                     u7386:	
  4690  11B5  082B               	movf	??___flge+3,w
  4691  11B6  00A7               	movwf	___flge@ff2+3
  4692  11B7  082A               	movf	??___flge+2,w
  4693  11B8  00A6               	movwf	___flge@ff2+2
  4694  11B9  0829               	movf	??___flge+1,w
  4695  11BA  00A5               	movwf	___flge@ff2+1
  4696  11BB  0828               	movf	??___flge,w
  4697  11BC  00A4               	movwf	___flge@ff2
  4698  11BD                     l1128:	
  4699  11BD  3080               	movlw	128
  4700  11BE  06A3               	xorwf	___flge@ff1+3,f
  4701  11BF  3080               	movlw	128
  4702  11C0  06A7               	xorwf	___flge@ff2+3,f
  4703  11C1  0827               	movf	___flge@ff2+3,w
  4704  11C2  0223               	subwf	___flge@ff1+3,w
  4705  11C3  1D03               	skipz
  4706  11C4  0008               	return
  4707  11C5  0826               	movf	___flge@ff2+2,w
  4708  11C6  0222               	subwf	___flge@ff1+2,w
  4709  11C7  1D03               	skipz
  4710  11C8  0008               	return
  4711  11C9  0825               	movf	___flge@ff2+1,w
  4712  11CA  0221               	subwf	___flge@ff1+1,w
  4713  11CB  1D03               	skipz
  4714  11CC  0008               	return
  4715  11CD  0824               	movf	___flge@ff2,w
  4716  11CE  0220               	subwf	___flge@ff1,w
  4717  11CF  0008               	return
  4718  11D0                     __end_of___flge:	
  4719                           
  4720                           	psect	text7
  4721  099B                     __ptext7:	
  4722 ;; *************** function ___fldiv *****************
  4723 ;; Defined at:
  4724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  a               4   33[BANK0 ] unsigned char 
  4727 ;;  b               4   37[BANK0 ] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  grs             4   53[BANK0 ] unsigned long 
  4730 ;;  rem             4   46[BANK0 ] unsigned long 
  4731 ;;  new_exp         2   51[BANK0 ] int 
  4732 ;;  aexp            1   58[BANK0 ] unsigned char 
  4733 ;;  bexp            1   57[BANK0 ] unsigned char 
  4734 ;;  sign            1   50[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4   33[BANK0 ] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, btemp+1
  4739 ;; Tracked objects:
  4740 ;;		On entry : 300/0
  4741 ;;		On exit  : 300/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       8       0       0       0
  4745 ;;      Locals:         0      13       0       0       0
  4746 ;;      Temps:          0       5       0       0       0
  4747 ;;      Totals:         0      26       0       0       0
  4748 ;;Total ram usage:       26 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_MediaPlacaVaccum
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function ___fldiv
  4760  099B                     ___fldiv:	
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4764  099B  0848               	movf	___fldiv@b+3,w
  4765  099C  3980               	andlw	128
  4766  099D  00C9               	movwf	??___fldiv
  4767  099E  0849               	movf	??___fldiv,w
  4768  099F  00D2               	movwf	___fldiv@sign
  4769  09A0  0848               	movf	___fldiv@b+3,w
  4770  09A1  00C9               	movwf	??___fldiv
  4771  09A2  0749               	addwf	??___fldiv,w
  4772  09A3  00CA               	movwf	??___fldiv+1
  4773  09A4  084A               	movf	??___fldiv+1,w
  4774  09A5  00D9               	movwf	___fldiv@bexp
  4775  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4776  09A7  1459               	bsf	___fldiv@bexp,0
  4777  09A8  0859               	movf	___fldiv@bexp,w
  4778  09A9  1903               	btfsc	3,2
  4779  09AA  29B9               	goto	l6998
  4780  09AB  0A59               	incf	___fldiv@bexp,w
  4781  09AC  1D03               	btfss	3,2
  4782  09AD  29B6               	goto	l6994
  4783  09AE  3000               	movlw	0
  4784  09AF  00C8               	movwf	___fldiv@b+3
  4785  09B0  3000               	movlw	0
  4786  09B1  00C7               	movwf	___fldiv@b+2
  4787  09B2  3000               	movlw	0
  4788  09B3  00C6               	movwf	___fldiv@b+1
  4789  09B4  3000               	movlw	0
  4790  09B5  00C5               	movwf	___fldiv@b
  4791  09B6                     l6994:	
  4792  09B6  17C7               	bsf	___fldiv@b+2,7
  4793  09B7  01C8               	clrf	___fldiv@b+3
  4794  09B8  29C1               	goto	l7000
  4795  09B9                     l6998:	
  4796  09B9  3000               	movlw	0
  4797  09BA  00C8               	movwf	___fldiv@b+3
  4798  09BB  3000               	movlw	0
  4799  09BC  00C7               	movwf	___fldiv@b+2
  4800  09BD  3000               	movlw	0
  4801  09BE  00C6               	movwf	___fldiv@b+1
  4802  09BF  3000               	movlw	0
  4803  09C0  00C5               	movwf	___fldiv@b
  4804  09C1                     l7000:	
  4805  09C1  0844               	movf	___fldiv@a+3,w
  4806  09C2  3980               	andlw	128
  4807  09C3  00C9               	movwf	??___fldiv
  4808  09C4  0849               	movf	??___fldiv,w
  4809  09C5  06D2               	xorwf	___fldiv@sign,f
  4810  09C6  0844               	movf	___fldiv@a+3,w
  4811  09C7  00C9               	movwf	??___fldiv
  4812  09C8  0749               	addwf	??___fldiv,w
  4813  09C9  00CA               	movwf	??___fldiv+1
  4814  09CA  084A               	movf	??___fldiv+1,w
  4815  09CB  00DA               	movwf	___fldiv@aexp
  4816  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4817  09CD  145A               	bsf	___fldiv@aexp,0
  4818  09CE  085A               	movf	___fldiv@aexp,w
  4819  09CF  1903               	btfsc	3,2
  4820  09D0  29DF               	goto	l7018
  4821  09D1  0A5A               	incf	___fldiv@aexp,w
  4822  09D2  1D03               	btfss	3,2
  4823  09D3  29DC               	goto	l7014
  4824  09D4  3000               	movlw	0
  4825  09D5  00C4               	movwf	___fldiv@a+3
  4826  09D6  3000               	movlw	0
  4827  09D7  00C3               	movwf	___fldiv@a+2
  4828  09D8  3000               	movlw	0
  4829  09D9  00C2               	movwf	___fldiv@a+1
  4830  09DA  3000               	movlw	0
  4831  09DB  00C1               	movwf	___fldiv@a
  4832  09DC                     l7014:	
  4833  09DC  17C3               	bsf	___fldiv@a+2,7
  4834  09DD  01C4               	clrf	___fldiv@a+3
  4835  09DE  29E7               	goto	l1300
  4836  09DF                     l7018:	
  4837  09DF  3000               	movlw	0
  4838  09E0  00C4               	movwf	___fldiv@a+3
  4839  09E1  3000               	movlw	0
  4840  09E2  00C3               	movwf	___fldiv@a+2
  4841  09E3  3000               	movlw	0
  4842  09E4  00C2               	movwf	___fldiv@a+1
  4843  09E5  3000               	movlw	0
  4844  09E6  00C1               	movwf	___fldiv@a
  4845  09E7                     l1300:	
  4846  09E7  0844               	movf	___fldiv@a+3,w
  4847  09E8  0443               	iorwf	___fldiv@a+2,w
  4848  09E9  0442               	iorwf	___fldiv@a+1,w
  4849  09EA  0441               	iorwf	___fldiv@a,w
  4850  09EB  1D03               	skipz
  4851  09EC  2A06               	goto	l7028
  4852  09ED  3000               	movlw	0
  4853  09EE  00C8               	movwf	___fldiv@b+3
  4854  09EF  3000               	movlw	0
  4855  09F0  00C7               	movwf	___fldiv@b+2
  4856  09F1  3000               	movlw	0
  4857  09F2  00C6               	movwf	___fldiv@b+1
  4858  09F3  3000               	movlw	0
  4859  09F4  00C5               	movwf	___fldiv@b
  4860  09F5  3080               	movlw	128
  4861  09F6  04C7               	iorwf	___fldiv@b+2,f
  4862  09F7  307F               	movlw	127
  4863  09F8  04C8               	iorwf	___fldiv@b+3,f
  4864  09F9                     L5:	
  4865  09F9  0852               	movf	___fldiv@sign,w
  4866  09FA  00C9               	movwf	??___fldiv
  4867  09FB  0849               	movf	??___fldiv,w
  4868  09FC  04C8               	iorwf	___fldiv@b+3,f
  4869  09FD  0848               	movf	___fldiv@b+3,w
  4870  09FE  00C4               	movwf	?___fldiv+3
  4871  09FF  0847               	movf	___fldiv@b+2,w
  4872  0A00  00C3               	movwf	?___fldiv+2
  4873  0A01  0846               	movf	___fldiv@b+1,w
  4874  0A02  00C2               	movwf	?___fldiv+1
  4875  0A03  0845               	movf	___fldiv@b,w
  4876  0A04  00C1               	movwf	?___fldiv
  4877  0A05  0008               	return
  4878  0A06                     l7028:	
  4879  0A06  0859               	movf	___fldiv@bexp,w
  4880  0A07  1D03               	btfss	3,2
  4881  0A08  2A12               	goto	l7034
  4882  0A09  3000               	movlw	0
  4883  0A0A  00C4               	movwf	?___fldiv+3
  4884  0A0B  3000               	movlw	0
  4885  0A0C  00C3               	movwf	?___fldiv+2
  4886  0A0D  3000               	movlw	0
  4887  0A0E  00C2               	movwf	?___fldiv+1
  4888  0A0F  3000               	movlw	0
  4889  0A10  00C1               	movwf	?___fldiv
  4890  0A11  0008               	return
  4891  0A12                     l7034:	
  4892  0A12  0859               	movf	___fldiv@bexp,w
  4893  0A13  00C9               	movwf	??___fldiv
  4894  0A14  01CA               	clrf	??___fldiv+1
  4895  0A15  084A               	movf	??___fldiv+1,w
  4896  0A16  00CC               	movwf	??___fldiv+3
  4897  0A17  085A               	movf	___fldiv@aexp,w
  4898  0A18  0249               	subwf	??___fldiv,w
  4899  0A19  00CB               	movwf	??___fldiv+2
  4900  0A1A  1C03               	skipc
  4901  0A1B  03CC               	decf	??___fldiv+3,f
  4902  0A1C  084B               	movf	??___fldiv+2,w
  4903  0A1D  3E7F               	addlw	127
  4904  0A1E  00D3               	movwf	___fldiv@new_exp
  4905  0A1F  084C               	movf	??___fldiv+3,w
  4906  0A20  1803               	skipnc
  4907  0A21  3E01               	addlw	1
  4908  0A22  3E00               	addlw	0
  4909  0A23  00D4               	movwf	___fldiv@new_exp+1
  4910  0A24  0848               	movf	___fldiv@b+3,w
  4911  0A25  00D1               	movwf	___fldiv@rem+3
  4912  0A26  0847               	movf	___fldiv@b+2,w
  4913  0A27  00D0               	movwf	___fldiv@rem+2
  4914  0A28  0846               	movf	___fldiv@b+1,w
  4915  0A29  00CF               	movwf	___fldiv@rem+1
  4916  0A2A  0845               	movf	___fldiv@b,w
  4917  0A2B  00CE               	movwf	___fldiv@rem
  4918  0A2C  3000               	movlw	0
  4919  0A2D  00C8               	movwf	___fldiv@b+3
  4920  0A2E  3000               	movlw	0
  4921  0A2F  00C7               	movwf	___fldiv@b+2
  4922  0A30  3000               	movlw	0
  4923  0A31  00C6               	movwf	___fldiv@b+1
  4924  0A32  3000               	movlw	0
  4925  0A33  00C5               	movwf	___fldiv@b
  4926  0A34  3000               	movlw	0
  4927  0A35  00D8               	movwf	___fldiv@grs+3
  4928  0A36  3000               	movlw	0
  4929  0A37  00D7               	movwf	___fldiv@grs+2
  4930  0A38  3000               	movlw	0
  4931  0A39  00D6               	movwf	___fldiv@grs+1
  4932  0A3A  3000               	movlw	0
  4933  0A3B  00D5               	movwf	___fldiv@grs
  4934  0A3C  01DA               	clrf	___fldiv@aexp
  4935  0A3D                     l7062:	
  4936  0A3D  301A               	movlw	26
  4937  0A3E  025A               	subwf	___fldiv@aexp,w
  4938  0A3F  1803               	btfsc	3,0
  4939  0A40  2A85               	goto	l7064
  4940  0A41  085A               	movf	___fldiv@aexp,w
  4941  0A42  1903               	btfsc	3,2
  4942  0A43  2A61               	goto	l7054
  4943  0A44  3001               	movlw	1
  4944  0A45  00C9               	movwf	??___fldiv
  4945  0A46                     u7495:	
  4946  0A46  1003               	clrc
  4947  0A47  0DCE               	rlf	___fldiv@rem,f
  4948  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4949  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4950  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4951  0A4B  0BC9               	decfsz	??___fldiv,f
  4952  0A4C  2A46               	goto	u7495
  4953  0A4D  3001               	movlw	1
  4954  0A4E  00C9               	movwf	??___fldiv
  4955  0A4F                     u7505:	
  4956  0A4F  1003               	clrc
  4957  0A50  0DC5               	rlf	___fldiv@b,f
  4958  0A51  0DC6               	rlf	___fldiv@b+1,f
  4959  0A52  0DC7               	rlf	___fldiv@b+2,f
  4960  0A53  0DC8               	rlf	___fldiv@b+3,f
  4961  0A54  0BC9               	decfsz	??___fldiv,f
  4962  0A55  2A4F               	goto	u7505
  4963  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4964  0A57  1445               	bsf	___fldiv@b,0
  4965  0A58  3001               	movlw	1
  4966  0A59  00C9               	movwf	??___fldiv
  4967  0A5A                     u7525:	
  4968  0A5A  1003               	clrc
  4969  0A5B  0DD5               	rlf	___fldiv@grs,f
  4970  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4971  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4972  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4973  0A5F  0BC9               	decfsz	??___fldiv,f
  4974  0A60  2A5A               	goto	u7525
  4975  0A61                     l7054:	
  4976  0A61  0844               	movf	___fldiv@a+3,w
  4977  0A62  0251               	subwf	___fldiv@rem+3,w
  4978  0A63  1D03               	skipz
  4979  0A64  2A6F               	goto	u7535
  4980  0A65  0843               	movf	___fldiv@a+2,w
  4981  0A66  0250               	subwf	___fldiv@rem+2,w
  4982  0A67  1D03               	skipz
  4983  0A68  2A6F               	goto	u7535
  4984  0A69  0842               	movf	___fldiv@a+1,w
  4985  0A6A  024F               	subwf	___fldiv@rem+1,w
  4986  0A6B  1D03               	skipz
  4987  0A6C  2A6F               	goto	u7535
  4988  0A6D  0841               	movf	___fldiv@a,w
  4989  0A6E  024E               	subwf	___fldiv@rem,w
  4990  0A6F                     u7535:	
  4991  0A6F  1C03               	skipc
  4992  0A70  2A80               	goto	l7060
  4993  0A71  1758               	bsf	___fldiv@grs+3,6
  4994  0A72  0841               	movf	___fldiv@a,w
  4995  0A73  02CE               	subwf	___fldiv@rem,f
  4996  0A74  0842               	movf	___fldiv@a+1,w
  4997  0A75  1C03               	skipc
  4998  0A76  0F42               	incfsz	___fldiv@a+1,w
  4999  0A77  02CF               	subwf	___fldiv@rem+1,f
  5000  0A78  0843               	movf	___fldiv@a+2,w
  5001  0A79  1C03               	skipc
  5002  0A7A  0F43               	incfsz	___fldiv@a+2,w
  5003  0A7B  02D0               	subwf	___fldiv@rem+2,f
  5004  0A7C  0844               	movf	___fldiv@a+3,w
  5005  0A7D  1C03               	skipc
  5006  0A7E  0F44               	incfsz	___fldiv@a+3,w
  5007  0A7F  02D1               	subwf	___fldiv@rem+3,f
  5008  0A80                     l7060:	
  5009  0A80  3001               	movlw	1
  5010  0A81  00C9               	movwf	??___fldiv
  5011  0A82  0849               	movf	??___fldiv,w
  5012  0A83  07DA               	addwf	___fldiv@aexp,f
  5013  0A84  2A3D               	goto	l7062
  5014  0A85                     l7064:	
  5015  0A85  0851               	movf	___fldiv@rem+3,w
  5016  0A86  0450               	iorwf	___fldiv@rem+2,w
  5017  0A87  044F               	iorwf	___fldiv@rem+1,w
  5018  0A88  044E               	iorwf	___fldiv@rem,w
  5019  0A89  1D03               	btfss	3,2
  5020  0A8A  1455               	bsf	___fldiv@grs,0
  5021  0A8B                     l7078:	
  5022  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  5023  0A8C  2AA8               	goto	l7080
  5024  0A8D  3001               	movlw	1
  5025  0A8E  00C9               	movwf	??___fldiv
  5026  0A8F                     u7565:	
  5027  0A8F  1003               	clrc
  5028  0A90  0DC5               	rlf	___fldiv@b,f
  5029  0A91  0DC6               	rlf	___fldiv@b+1,f
  5030  0A92  0DC7               	rlf	___fldiv@b+2,f
  5031  0A93  0DC8               	rlf	___fldiv@b+3,f
  5032  0A94  0BC9               	decfsz	??___fldiv,f
  5033  0A95  2A8F               	goto	u7565
  5034  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  5035  0A97  1445               	bsf	___fldiv@b,0
  5036  0A98  3001               	movlw	1
  5037  0A99  00C9               	movwf	??___fldiv
  5038  0A9A                     u7585:	
  5039  0A9A  1003               	clrc
  5040  0A9B  0DD5               	rlf	___fldiv@grs,f
  5041  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5042  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5043  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5044  0A9F  0BC9               	decfsz	??___fldiv,f
  5045  0AA0  2A9A               	goto	u7585
  5046  0AA1  30FF               	movlw	255
  5047  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5048  0AA3  1803               	skipnc
  5049  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5050  0AA5  30FF               	movlw	255
  5051  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5052  0AA7  2A8B               	goto	l7078
  5053  0AA8                     l7080:	
  5054  0AA8  01DA               	clrf	___fldiv@aexp
  5055  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5056  0AAA  2AC1               	goto	l7090
  5057  0AAB  30FF               	movlw	255
  5058  0AAC  0555               	andwf	___fldiv@grs,w
  5059  0AAD  00C9               	movwf	??___fldiv
  5060  0AAE  30FF               	movlw	255
  5061  0AAF  0556               	andwf	___fldiv@grs+1,w
  5062  0AB0  00CA               	movwf	??___fldiv+1
  5063  0AB1  30FF               	movlw	255
  5064  0AB2  0557               	andwf	___fldiv@grs+2,w
  5065  0AB3  00CB               	movwf	??___fldiv+2
  5066  0AB4  307F               	movlw	127
  5067  0AB5  0558               	andwf	___fldiv@grs+3,w
  5068  0AB6  00CC               	movwf	??___fldiv+3
  5069  0AB7  084C               	movf	??___fldiv+3,w
  5070  0AB8  044B               	iorwf	??___fldiv+2,w
  5071  0AB9  044A               	iorwf	??___fldiv+1,w
  5072  0ABA  0449               	iorwf	??___fldiv,w
  5073  0ABB  1903               	skipnz
  5074  0ABC  1845               	btfsc	___fldiv@b,0
  5075  0ABD  2ABF               	goto	l7086
  5076  0ABE  2AC1               	goto	l7090
  5077  0ABF                     l7086:	
  5078  0ABF  01DA               	clrf	___fldiv@aexp
  5079  0AC0  0ADA               	incf	___fldiv@aexp,f
  5080  0AC1                     l7090:	
  5081  0AC1  085A               	movf	___fldiv@aexp,w
  5082  0AC2  1903               	btfsc	3,2
  5083  0AC3  2AF3               	goto	l7100
  5084  0AC4  3001               	movlw	1
  5085  0AC5  07C5               	addwf	___fldiv@b,f
  5086  0AC6  3000               	movlw	0
  5087  0AC7  1803               	skipnc
  5088  0AC8  3001               	movlw	1
  5089  0AC9  07C6               	addwf	___fldiv@b+1,f
  5090  0ACA  3000               	movlw	0
  5091  0ACB  1803               	skipnc
  5092  0ACC  3001               	movlw	1
  5093  0ACD  07C7               	addwf	___fldiv@b+2,f
  5094  0ACE  3000               	movlw	0
  5095  0ACF  1803               	skipnc
  5096  0AD0  3001               	movlw	1
  5097  0AD1  07C8               	addwf	___fldiv@b+3,f
  5098  0AD2  1C48               	btfss	___fldiv@b+3,0
  5099  0AD3  2AF3               	goto	l7100
  5100  0AD4  0845               	movf	___fldiv@b,w
  5101  0AD5  00C9               	movwf	??___fldiv
  5102  0AD6  0846               	movf	___fldiv@b+1,w
  5103  0AD7  00CA               	movwf	??___fldiv+1
  5104  0AD8  0847               	movf	___fldiv@b+2,w
  5105  0AD9  00CB               	movwf	??___fldiv+2
  5106  0ADA  0848               	movf	___fldiv@b+3,w
  5107  0ADB  00CC               	movwf	??___fldiv+3
  5108  0ADC  3001               	movlw	1
  5109  0ADD  00CD               	movwf	??___fldiv+4
  5110  0ADE                     u7655:	
  5111  0ADE  0D4C               	rlf	??___fldiv+3,w
  5112  0ADF  0CCC               	rrf	??___fldiv+3,f
  5113  0AE0  0CCB               	rrf	??___fldiv+2,f
  5114  0AE1  0CCA               	rrf	??___fldiv+1,f
  5115  0AE2  0CC9               	rrf	??___fldiv,f
  5116  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5117  0AE4  2ADE               	goto	u7655
  5118  0AE5  084C               	movf	??___fldiv+3,w
  5119  0AE6  00C8               	movwf	___fldiv@b+3
  5120  0AE7  084B               	movf	??___fldiv+2,w
  5121  0AE8  00C7               	movwf	___fldiv@b+2
  5122  0AE9  084A               	movf	??___fldiv+1,w
  5123  0AEA  00C6               	movwf	___fldiv@b+1
  5124  0AEB  0849               	movf	??___fldiv,w
  5125  0AEC  00C5               	movwf	___fldiv@b
  5126  0AED  3001               	movlw	1
  5127  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5128  0AEF  1803               	skipnc
  5129  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5130  0AF1  3000               	movlw	0
  5131  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5132  0AF3                     l7100:	
  5133  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5134  0AF4  3A80               	xorlw	128
  5135  0AF5  00FF               	movwf	127
  5136  0AF6  3080               	movlw	128
  5137  0AF7  027F               	subwf	127,w
  5138  0AF8  1D03               	skipz
  5139  0AF9  2AFC               	goto	u7665
  5140  0AFA  30FF               	movlw	255
  5141  0AFB  0253               	subwf	___fldiv@new_exp,w
  5142  0AFC                     u7665:	
  5143  0AFC  1C03               	skipc
  5144  0AFD  2B0C               	goto	l7104
  5145  0AFE  30FF               	movlw	255
  5146  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0B01  00D3               	movwf	___fldiv@new_exp
  5149  0B02  3000               	movlw	0
  5150  0B03  00D4               	movwf	___fldiv@new_exp+1
  5151  0B04  3000               	movlw	0
  5152  0B05  00C8               	movwf	___fldiv@b+3
  5153  0B06  3000               	movlw	0
  5154  0B07  00C7               	movwf	___fldiv@b+2
  5155  0B08  3000               	movlw	0
  5156  0B09  00C6               	movwf	___fldiv@b+1
  5157  0B0A  3000               	movlw	0
  5158  0B0B  00C5               	movwf	___fldiv@b
  5159  0B0C                     l7104:	
  5160  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5163  0B0F  3A80               	xorlw	128
  5164  0B10  00FF               	movwf	127
  5165  0B11  3080               	movlw	128
  5166  0B12  027F               	subwf	127,w
  5167  0B13  1D03               	skipz
  5168  0B14  2B17               	goto	u7675
  5169  0B15  3001               	movlw	1
  5170  0B16  0253               	subwf	___fldiv@new_exp,w
  5171  0B17                     u7675:	
  5172  0B17  1803               	skipnc
  5173  0B18  2B26               	goto	l1322
  5174  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0B1B  01D3               	clrf	___fldiv@new_exp
  5177  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5178  0B1D  3000               	movlw	0
  5179  0B1E  00C8               	movwf	___fldiv@b+3
  5180  0B1F  3000               	movlw	0
  5181  0B20  00C7               	movwf	___fldiv@b+2
  5182  0B21  3000               	movlw	0
  5183  0B22  00C6               	movwf	___fldiv@b+1
  5184  0B23  3000               	movlw	0
  5185  0B24  00C5               	movwf	___fldiv@b
  5186  0B25  01D2               	clrf	___fldiv@sign
  5187  0B26                     l1322:	
  5188  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0B28  0853               	movf	___fldiv@new_exp,w
  5191  0B29  00C9               	movwf	??___fldiv
  5192  0B2A  0849               	movf	??___fldiv,w
  5193  0B2B  00D9               	movwf	___fldiv@bexp
  5194  0B2C  1C59               	btfss	___fldiv@bexp,0
  5195  0B2D  2B30               	goto	l7116
  5196  0B2E  17C7               	bsf	___fldiv@b+2,7
  5197  0B2F  2B34               	goto	l1324
  5198  0B30                     l7116:	
  5199  0B30  307F               	movlw	127
  5200  0B31  00C9               	movwf	??___fldiv
  5201  0B32  0849               	movf	??___fldiv,w
  5202  0B33  05C7               	andwf	___fldiv@b+2,f
  5203  0B34                     l1324:	
  5204  0B34  0859               	movf	___fldiv@bexp,w
  5205  0B35  00C9               	movwf	??___fldiv
  5206  0B36  1003               	clrc
  5207  0B37  0C49               	rrf	??___fldiv,w
  5208  0B38  00CA               	movwf	??___fldiv+1
  5209  0B39  084A               	movf	??___fldiv+1,w
  5210  0B3A  00C8               	movwf	___fldiv@b+3
  5211  0B3B  29F9               	goto	L5
  5212  0B3C                     __end_of___fldiv:	
  5213                           
  5214                           	psect	text8
  5215  19A0                     __ptext8:	
  5216 ;; *************** function _Package_Usart_is_for_me *****************
  5217 ;; Defined at:
  5218 ;;		line 8 in file "protocolo.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  retorno         1    0[BANK0 ] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      unsigned char 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 200/100
  5229 ;;		On exit  : 300/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       0       0       0       0
  5233 ;;      Locals:         0       1       0       0       0
  5234 ;;      Temps:          0       0       0       0       0
  5235 ;;      Totals:         0       1       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_MediaPlacaVaccum
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function _Package_Usart_is_for_me
  5248  19A0                     _Package_Usart_is_for_me:	
  5249                           
  5250                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5254  19A0  1683               	bsf	3,5	;RP0=1, select bank1
  5255  19A1  1C6B               	btfss	_generic_status^(0+128),0
  5256  19A2  29B2               	goto	l6894
  5257                           
  5258                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5259  19A3  1703               	bsf	3,6	;RP1=1, select bank3
  5260  19A4  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5261  19A5  1303               	bcf	3,6	;RP1=0, select bank1
  5262  19A6  0665               	xorwf	_Board_Number^(0+128),w
  5263  19A7  1903               	skipnz
  5264  19A8  29AD               	goto	l678
  5265  19A9  1703               	bsf	3,6	;RP1=1, select bank3
  5266  19AA  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5267  19AB  1D03               	btfss	3,2
  5268  19AC  29B2               	goto	l6894
  5269  19AD                     l678:	
  5270                           
  5271                           ;protocolo.c: 13:             retorno=1;
  5272  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  5273  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  5274  19AF  01A0               	clrf	Package_Usart_is_for_me@retorno
  5275  19B0  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5276  19B1  29B5               	goto	l6898
  5277  19B2                     l6894:	
  5278                           
  5279                           ;protocolo.c: 15:             retorno=0;
  5280  19B2  1283               	bcf	3,5	;RP0=0, select bank0
  5281  19B3  1303               	bcf	3,6	;RP1=0, select bank0
  5282  19B4  01A0               	clrf	Package_Usart_is_for_me@retorno
  5283  19B5                     l6898:	
  5284                           
  5285                           ;protocolo.c: 21:      return retorno;
  5286  19B5  0820               	movf	Package_Usart_is_for_me@retorno,w
  5287  19B6  0008               	return
  5288  19B7                     __end_of_Package_Usart_is_for_me:	
  5289                           
  5290                           	psect	text9
  5291  1EEF                     __ptext9:	
  5292 ;; *************** function _ADC_Media_10bits *****************
  5293 ;; Defined at:
  5294 ;;		line 20 in file "adc.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  canal           1    wreg     unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  canal           1   38[BANK0 ] unsigned char 
  5299 ;;  value           2   39[BANK0 ] unsigned int 
  5300 ;;  i               1   41[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4   33[BANK0 ] float 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 300/100
  5307 ;;		On exit  : 300/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       4       0       0       0
  5311 ;;      Locals:         0       4       0       0       0
  5312 ;;      Temps:          0       1       0       0       0
  5313 ;;      Totals:         0       9       0       0       0
  5314 ;;Total ram usage:        9 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		___lwdiv
  5319 ;;		___xxtofl
  5320 ;;		_captura
  5321 ;;		_my_delay_ms
  5322 ;; This function is called by:
  5323 ;;		_MediaPlacaVaccum
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _ADC_Media_10bits
  5329  1EEF                     _ADC_Media_10bits:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5333                           ;ADC_Media_10bits@canal stored from wreg
  5334  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5335  1EF0  00C6               	movwf	ADC_Media_10bits@canal
  5336                           
  5337                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5338  1EF1  0846               	movf	ADC_Media_10bits@canal,w
  5339  1EF2  00C5               	movwf	??_ADC_Media_10bits
  5340  1EF3  0DC5               	rlf	??_ADC_Media_10bits,f
  5341  1EF4  0DC5               	rlf	??_ADC_Media_10bits,f
  5342  1EF5  081F               	movf	31,w	;volatile
  5343  1EF6  0645               	xorwf	??_ADC_Media_10bits,w
  5344  1EF7  39C3               	andlw	-61
  5345  1EF8  0645               	xorwf	??_ADC_Media_10bits,w
  5346  1EF9  009F               	movwf	31	;volatile
  5347                           
  5348                           ;adc.c: 24:       my_delay_ms(10);
  5349  1EFA  3000               	movlw	0
  5350  1EFB  00A3               	movwf	my_delay_ms@time+3
  5351  1EFC  3000               	movlw	0
  5352  1EFD  00A2               	movwf	my_delay_ms@time+2
  5353  1EFE  3000               	movlw	0
  5354  1EFF  00A1               	movwf	my_delay_ms@time+1
  5355  1F00  300A               	movlw	10
  5356  1F01  00A0               	movwf	my_delay_ms@time
  5357  1F02  160A  158A  24CA  160A  158A  	fcall	_my_delay_ms
  5358                           
  5359                           ;adc.c: 26:       value=0;
  5360  1F07  01C7               	clrf	ADC_Media_10bits@value
  5361  1F08  01C8               	clrf	ADC_Media_10bits@value+1
  5362                           
  5363                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5364  1F09  01C9               	clrf	ADC_Media_10bits@i
  5365  1F0A  0AC9               	incf	ADC_Media_10bits@i,f
  5366  1F0B                     l6876:	
  5367                           
  5368                           ;adc.c: 28:           value+=captura();
  5369  1F0B  160A  158A  2133  160A  158A  	fcall	_captura
  5370  1F10  0820               	movf	?_captura,w
  5371  1F11  07C7               	addwf	ADC_Media_10bits@value,f
  5372  1F12  1803               	skipnc
  5373  1F13  0AC8               	incf	ADC_Media_10bits@value+1,f
  5374  1F14  0821               	movf	?_captura+1,w
  5375  1F15  07C8               	addwf	ADC_Media_10bits@value+1,f
  5376  1F16  3001               	movlw	1
  5377  1F17  00C5               	movwf	??_ADC_Media_10bits
  5378  1F18  0845               	movf	??_ADC_Media_10bits,w
  5379  1F19  07C9               	addwf	ADC_Media_10bits@i,f
  5380  1F1A  3033               	movlw	51
  5381  1F1B  0249               	subwf	ADC_Media_10bits@i,w
  5382  1F1C  1C03               	skipc
  5383  1F1D  2F0B               	goto	l6876
  5384                           
  5385                           ;adc.c: 29:       value/=(i-1);
  5386  1F1E  0849               	movf	ADC_Media_10bits@i,w
  5387  1F1F  3EFF               	addlw	255
  5388  1F20  00A0               	movwf	___lwdiv@divisor
  5389  1F21  30FF               	movlw	255
  5390  1F22  1803               	skipnc
  5391  1F23  3000               	movlw	0
  5392  1F24  00A1               	movwf	___lwdiv@divisor+1
  5393  1F25  0848               	movf	ADC_Media_10bits@value+1,w
  5394  1F26  00A3               	movwf	___lwdiv@dividend+1
  5395  1F27  0847               	movf	ADC_Media_10bits@value,w
  5396  1F28  00A2               	movwf	___lwdiv@dividend
  5397  1F29  160A  158A  25AD  160A  158A  	fcall	___lwdiv
  5398  1F2E  0821               	movf	?___lwdiv+1,w
  5399  1F2F  00C8               	movwf	ADC_Media_10bits@value+1
  5400  1F30  0820               	movf	?___lwdiv,w
  5401  1F31  00C7               	movwf	ADC_Media_10bits@value
  5402                           
  5403                           ;adc.c: 30:       return value;
  5404  1F32  0847               	movf	ADC_Media_10bits@value,w
  5405  1F33  00B3               	movwf	___xxtofl@val
  5406  1F34  0848               	movf	ADC_Media_10bits@value+1,w
  5407  1F35  00B4               	movwf	___xxtofl@val+1
  5408  1F36  01B5               	clrf	___xxtofl@val+2
  5409  1F37  01B6               	clrf	___xxtofl@val+3
  5410  1F38  3000               	movlw	0
  5411  1F39  160A  118A  21D0   	fcall	___xxtofl
  5412  1F3C  0836               	movf	?___xxtofl+3,w
  5413  1F3D  00C4               	movwf	?_ADC_Media_10bits+3
  5414  1F3E  0835               	movf	?___xxtofl+2,w
  5415  1F3F  00C3               	movwf	?_ADC_Media_10bits+2
  5416  1F40  0834               	movf	?___xxtofl+1,w
  5417  1F41  00C2               	movwf	?_ADC_Media_10bits+1
  5418  1F42  0833               	movf	?___xxtofl,w
  5419  1F43  00C1               	movwf	?_ADC_Media_10bits
  5420  1F44  0008               	return
  5421  1F45                     __end_of_ADC_Media_10bits:	
  5422                           
  5423                           	psect	text10
  5424  11D0                     __ptext10:	
  5425 ;; *************** function ___xxtofl *****************
  5426 ;; Defined at:
  5427 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  sign            1    wreg     unsigned char 
  5430 ;;  val             4   19[BANK0 ] long 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  sign            1   27[BANK0 ] unsigned char 
  5433 ;;  arg             4   29[BANK0 ] unsigned long 
  5434 ;;  exp             1   28[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  4   19[BANK0 ] unsigned char 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 300/0
  5441 ;;		On exit  : 300/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       4       0       0       0
  5445 ;;      Locals:         0       6       0       0       0
  5446 ;;      Temps:          0       4       0       0       0
  5447 ;;      Totals:         0      14       0       0       0
  5448 ;;Total ram usage:       14 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_MediaPlacaVaccum
  5455 ;;		_ADC_Media_10bits
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function ___xxtofl
  5461  11D0                     ___xxtofl:	
  5462                           
  5463                           ;incstack = 0
  5464                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5465                           ;___xxtofl@sign stored from wreg
  5466  11D0  00BB               	movwf	___xxtofl@sign
  5467  11D1  083B               	movf	___xxtofl@sign,w
  5468  11D2  1D03               	btfss	3,2
  5469  11D3  1FB6               	btfss	___xxtofl@val+3,7
  5470  11D4  29E5               	goto	l6436
  5471  11D5  0933               	comf	___xxtofl@val,w
  5472  11D6  00BD               	movwf	___xxtofl@arg
  5473  11D7  0934               	comf	___xxtofl@val+1,w
  5474  11D8  00BE               	movwf	___xxtofl@arg+1
  5475  11D9  0935               	comf	___xxtofl@val+2,w
  5476  11DA  00BF               	movwf	___xxtofl@arg+2
  5477  11DB  0936               	comf	___xxtofl@val+3,w
  5478  11DC  00C0               	movwf	___xxtofl@arg+3
  5479  11DD  0ABD               	incf	___xxtofl@arg,f
  5480  11DE  1903               	skipnz
  5481  11DF  0ABE               	incf	___xxtofl@arg+1,f
  5482  11E0  1903               	skipnz
  5483  11E1  0ABF               	incf	___xxtofl@arg+2,f
  5484  11E2  1903               	skipnz
  5485  11E3  0AC0               	incf	___xxtofl@arg+3,f
  5486  11E4  29ED               	goto	l1378
  5487  11E5                     l6436:	
  5488  11E5  0836               	movf	___xxtofl@val+3,w
  5489  11E6  00C0               	movwf	___xxtofl@arg+3
  5490  11E7  0835               	movf	___xxtofl@val+2,w
  5491  11E8  00BF               	movwf	___xxtofl@arg+2
  5492  11E9  0834               	movf	___xxtofl@val+1,w
  5493  11EA  00BE               	movwf	___xxtofl@arg+1
  5494  11EB  0833               	movf	___xxtofl@val,w
  5495  11EC  00BD               	movwf	___xxtofl@arg
  5496  11ED                     l1378:	
  5497  11ED  0836               	movf	___xxtofl@val+3,w
  5498  11EE  0435               	iorwf	___xxtofl@val+2,w
  5499  11EF  0434               	iorwf	___xxtofl@val+1,w
  5500  11F0  0433               	iorwf	___xxtofl@val,w
  5501  11F1  1D03               	skipz
  5502  11F2  29FC               	goto	l6442
  5503  11F3  3000               	movlw	0
  5504  11F4  00B6               	movwf	?___xxtofl+3
  5505  11F5  3000               	movlw	0
  5506  11F6  00B5               	movwf	?___xxtofl+2
  5507  11F7  3000               	movlw	0
  5508  11F8  00B4               	movwf	?___xxtofl+1
  5509  11F9  3000               	movlw	0
  5510  11FA  00B3               	movwf	?___xxtofl
  5511  11FB  0008               	return
  5512  11FC                     l6442:	
  5513  11FC  3096               	movlw	150
  5514  11FD  00B7               	movwf	??___xxtofl
  5515  11FE  0837               	movf	??___xxtofl,w
  5516  11FF  00BC               	movwf	___xxtofl@exp
  5517  1200                     l6446:	
  5518  1200  30FE               	movlw	254
  5519  1201  0540               	andwf	___xxtofl@arg+3,w
  5520  1202  1903               	btfsc	3,2
  5521  1203  2A2D               	goto	l1384
  5522  1204  3001               	movlw	1
  5523  1205  00B7               	movwf	??___xxtofl
  5524  1206  0837               	movf	??___xxtofl,w
  5525  1207  07BC               	addwf	___xxtofl@exp,f
  5526  1208  3001               	movlw	1
  5527  1209                     u6805:	
  5528  1209  1003               	clrc
  5529  120A  0CC0               	rrf	___xxtofl@arg+3,f
  5530  120B  0CBF               	rrf	___xxtofl@arg+2,f
  5531  120C  0CBE               	rrf	___xxtofl@arg+1,f
  5532  120D  0CBD               	rrf	___xxtofl@arg,f
  5533  120E  3EFF               	addlw	-1
  5534  120F  1D03               	skipz
  5535  1210  2A09               	goto	u6805
  5536  1211  2A00               	goto	l6446
  5537  1212                     l6448:	
  5538  1212  3001               	movlw	1
  5539  1213  00B7               	movwf	??___xxtofl
  5540  1214  0837               	movf	??___xxtofl,w
  5541  1215  07BC               	addwf	___xxtofl@exp,f
  5542  1216  3001               	movlw	1
  5543  1217  07BD               	addwf	___xxtofl@arg,f
  5544  1218  3000               	movlw	0
  5545  1219  1803               	skipnc
  5546  121A  3001               	movlw	1
  5547  121B  07BE               	addwf	___xxtofl@arg+1,f
  5548  121C  3000               	movlw	0
  5549  121D  1803               	skipnc
  5550  121E  3001               	movlw	1
  5551  121F  07BF               	addwf	___xxtofl@arg+2,f
  5552  1220  3000               	movlw	0
  5553  1221  1803               	skipnc
  5554  1222  3001               	movlw	1
  5555  1223  07C0               	addwf	___xxtofl@arg+3,f
  5556  1224  3001               	movlw	1
  5557  1225                     u6825:	
  5558  1225  1003               	clrc
  5559  1226  0CC0               	rrf	___xxtofl@arg+3,f
  5560  1227  0CBF               	rrf	___xxtofl@arg+2,f
  5561  1228  0CBE               	rrf	___xxtofl@arg+1,f
  5562  1229  0CBD               	rrf	___xxtofl@arg,f
  5563  122A  3EFF               	addlw	-1
  5564  122B  1D03               	skipz
  5565  122C  2A25               	goto	u6825
  5566  122D                     l1384:	
  5567  122D  30FF               	movlw	255
  5568  122E  0540               	andwf	___xxtofl@arg+3,w
  5569  122F  1903               	btfsc	3,2
  5570  1230  2A41               	goto	l6456
  5571  1231  2A12               	goto	l6448
  5572  1232                     l6458:	
  5573  1232  3002               	movlw	2
  5574  1233  023C               	subwf	___xxtofl@exp,w
  5575  1234  1C03               	btfss	3,0
  5576  1235  2A43               	goto	l1391
  5577  1236  3001               	movlw	1
  5578  1237  02BC               	subwf	___xxtofl@exp,f
  5579  1238  3001               	movlw	1
  5580  1239  00B7               	movwf	??___xxtofl
  5581  123A                     u6845:	
  5582  123A  1003               	clrc
  5583  123B  0DBD               	rlf	___xxtofl@arg,f
  5584  123C  0DBE               	rlf	___xxtofl@arg+1,f
  5585  123D  0DBF               	rlf	___xxtofl@arg+2,f
  5586  123E  0DC0               	rlf	___xxtofl@arg+3,f
  5587  123F  0BB7               	decfsz	??___xxtofl,f
  5588  1240  2A3A               	goto	u6845
  5589  1241                     l6456:	
  5590  1241  1FBF               	btfss	___xxtofl@arg+2,7
  5591  1242  2A32               	goto	l6458
  5592  1243                     l1391:	
  5593  1243  183C               	btfsc	___xxtofl@exp,0
  5594  1244  2A4D               	goto	l1392
  5595  1245  30FF               	movlw	255
  5596  1246  05BD               	andwf	___xxtofl@arg,f
  5597  1247  30FF               	movlw	255
  5598  1248  05BE               	andwf	___xxtofl@arg+1,f
  5599  1249  307F               	movlw	127
  5600  124A  05BF               	andwf	___xxtofl@arg+2,f
  5601  124B  30FF               	movlw	255
  5602  124C  05C0               	andwf	___xxtofl@arg+3,f
  5603  124D                     l1392:	
  5604  124D  1003               	clrc
  5605  124E  0CBC               	rrf	___xxtofl@exp,f
  5606  124F  083C               	movf	___xxtofl@exp,w
  5607  1250  00B7               	movwf	??___xxtofl
  5608  1251  01B8               	clrf	??___xxtofl+1
  5609  1252  01B9               	clrf	??___xxtofl+2
  5610  1253  01BA               	clrf	??___xxtofl+3
  5611  1254  3018               	movlw	24
  5612  1255                     u6885:	
  5613  1255  1003               	clrc
  5614  1256  0DB7               	rlf	??___xxtofl,f
  5615  1257  0DB8               	rlf	??___xxtofl+1,f
  5616  1258  0DB9               	rlf	??___xxtofl+2,f
  5617  1259  0DBA               	rlf	??___xxtofl+3,f
  5618  125A  3EFF               	addlw	-1
  5619  125B  1D03               	skipz
  5620  125C  2A55               	goto	u6885
  5621  125D  0837               	movf	??___xxtofl,w
  5622  125E  04BD               	iorwf	___xxtofl@arg,f
  5623  125F  0838               	movf	??___xxtofl+1,w
  5624  1260  04BE               	iorwf	___xxtofl@arg+1,f
  5625  1261  0839               	movf	??___xxtofl+2,w
  5626  1262  04BF               	iorwf	___xxtofl@arg+2,f
  5627  1263  083A               	movf	??___xxtofl+3,w
  5628  1264  04C0               	iorwf	___xxtofl@arg+3,f
  5629  1265  083B               	movf	___xxtofl@sign,w
  5630  1266  1D03               	btfss	3,2
  5631  1267  1FB6               	btfss	___xxtofl@val+3,7
  5632  1268  2A6A               	goto	l6470
  5633  1269  17C0               	bsf	___xxtofl@arg+3,7
  5634  126A                     l6470:	
  5635  126A  0840               	movf	___xxtofl@arg+3,w
  5636  126B  00B6               	movwf	?___xxtofl+3
  5637  126C  083F               	movf	___xxtofl@arg+2,w
  5638  126D  00B5               	movwf	?___xxtofl+2
  5639  126E  083E               	movf	___xxtofl@arg+1,w
  5640  126F  00B4               	movwf	?___xxtofl+1
  5641  1270  083D               	movf	___xxtofl@arg,w
  5642  1271  00B3               	movwf	?___xxtofl
  5643  1272  0008               	return
  5644  1273                     __end_of___xxtofl:	
  5645                           
  5646                           	psect	text11
  5647  1E25                     __ptext11:	
  5648 ;; *************** function _ADC_Max_10Bits *****************
  5649 ;; Defined at:
  5650 ;;		line 34 in file "adc.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  canal           1    wreg     unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  canal           1   13[BANK0 ] unsigned char 
  5655 ;;  value           2   16[BANK0 ] unsigned int 
  5656 ;;  Temp            2   14[BANK0 ] unsigned int 
  5657 ;;  i               1   18[BANK0 ] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2   10[BANK0 ] unsigned int 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 300/100
  5664 ;;		On exit  : 300/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5667 ;;      Params:         0       2       0       0       0
  5668 ;;      Locals:         0       6       0       0       0
  5669 ;;      Temps:          0       1       0       0       0
  5670 ;;      Totals:         0       9       0       0       0
  5671 ;;Total ram usage:        9 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    2
  5674 ;; This function calls:
  5675 ;;		_captura
  5676 ;;		_my_delay_ms
  5677 ;; This function is called by:
  5678 ;;		_MediaPlacaVaccum
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _ADC_Max_10Bits
  5684  1E25                     _ADC_Max_10Bits:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5688                           ;ADC_Max_10Bits@canal stored from wreg
  5689  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1E26  00AD               	movwf	ADC_Max_10Bits@canal
  5691                           
  5692                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5693  1E27  082D               	movf	ADC_Max_10Bits@canal,w
  5694  1E28  00AC               	movwf	??_ADC_Max_10Bits
  5695  1E29  0DAC               	rlf	??_ADC_Max_10Bits,f
  5696  1E2A  0DAC               	rlf	??_ADC_Max_10Bits,f
  5697  1E2B  081F               	movf	31,w	;volatile
  5698  1E2C  062C               	xorwf	??_ADC_Max_10Bits,w
  5699  1E2D  39C3               	andlw	-61
  5700  1E2E  062C               	xorwf	??_ADC_Max_10Bits,w
  5701  1E2F  009F               	movwf	31	;volatile
  5702                           
  5703                           ;adc.c: 39:       my_delay_ms(10);
  5704  1E30  3000               	movlw	0
  5705  1E31  00A3               	movwf	my_delay_ms@time+3
  5706  1E32  3000               	movlw	0
  5707  1E33  00A2               	movwf	my_delay_ms@time+2
  5708  1E34  3000               	movlw	0
  5709  1E35  00A1               	movwf	my_delay_ms@time+1
  5710  1E36  300A               	movlw	10
  5711  1E37  00A0               	movwf	my_delay_ms@time
  5712  1E38  160A  158A  24CA  160A  158A  	fcall	_my_delay_ms
  5713                           
  5714                           ;adc.c: 41:       value=0;
  5715  1E3D  01B0               	clrf	ADC_Max_10Bits@value
  5716  1E3E  01B1               	clrf	ADC_Max_10Bits@value+1
  5717                           
  5718                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5719  1E3F  01B2               	clrf	ADC_Max_10Bits@i
  5720  1E40  0AB2               	incf	ADC_Max_10Bits@i,f
  5721  1E41                     l6916:	
  5722                           
  5723                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5724  1E41  160A  158A  2133  160A  158A  	fcall	_captura
  5725  1E46  0821               	movf	?_captura+1,w
  5726  1E47  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5727  1E48  0820               	movf	?_captura,w
  5728  1E49  00AE               	movwf	ADC_Max_10Bits@Temp
  5729                           
  5730                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5731  1E4A  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5732  1E4B  0231               	subwf	ADC_Max_10Bits@value+1,w
  5733  1E4C  1D03               	skipz
  5734  1E4D  2E50               	goto	u7245
  5735  1E4E  082E               	movf	ADC_Max_10Bits@Temp,w
  5736  1E4F  0230               	subwf	ADC_Max_10Bits@value,w
  5737  1E50                     u7245:	
  5738  1E50  1803               	skipnc
  5739  1E51  2E56               	goto	l6922
  5740  1E52  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5741  1E53  00B1               	movwf	ADC_Max_10Bits@value+1
  5742  1E54  082E               	movf	ADC_Max_10Bits@Temp,w
  5743  1E55  00B0               	movwf	ADC_Max_10Bits@value
  5744  1E56                     l6922:	
  5745                           
  5746                           ;adc.c: 46:           }
  5747  1E56  3001               	movlw	1
  5748  1E57  00AC               	movwf	??_ADC_Max_10Bits
  5749  1E58  082C               	movf	??_ADC_Max_10Bits,w
  5750  1E59  07B2               	addwf	ADC_Max_10Bits@i,f
  5751  1E5A  3033               	movlw	51
  5752  1E5B  0232               	subwf	ADC_Max_10Bits@i,w
  5753  1E5C  1C03               	skipc
  5754  1E5D  2E41               	goto	l6916
  5755                           
  5756                           ;adc.c: 47:       return value;
  5757  1E5E  0831               	movf	ADC_Max_10Bits@value+1,w
  5758  1E5F  00AB               	movwf	?_ADC_Max_10Bits+1
  5759  1E60  0830               	movf	ADC_Max_10Bits@value,w
  5760  1E61  00AA               	movwf	?_ADC_Max_10Bits
  5761  1E62  0008               	return
  5762  1E63                     __end_of_ADC_Max_10Bits:	
  5763                           
  5764                           	psect	text12
  5765  1CCA                     __ptext12:	
  5766 ;; *************** function _my_delay_ms *****************
  5767 ;; Defined at:
  5768 ;;		line 5 in file "my_delay.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  time            4    0[BANK0 ] long 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  i               4    6[BANK0 ] long 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, btemp+1
  5777 ;; Tracked objects:
  5778 ;;		On entry : 300/0
  5779 ;;		On exit  : 300/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       4       0       0       0
  5783 ;;      Locals:         0       4       0       0       0
  5784 ;;      Temps:          0       2       0       0       0
  5785 ;;      Totals:         0      10       0       0       0
  5786 ;;Total ram usage:       10 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_MediaPlacaVaccum
  5793 ;;		_ADC_Media_10bits
  5794 ;;		_ADC_Max_10Bits
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _my_delay_ms
  5800  1CCA                     _my_delay_ms:	
  5801                           
  5802                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5806  1CCA  3000               	movlw	0
  5807  1CCB  00A9               	movwf	my_delay_ms@i+3
  5808  1CCC  3000               	movlw	0
  5809  1CCD  00A8               	movwf	my_delay_ms@i+2
  5810  1CCE  3000               	movlw	0
  5811  1CCF  00A7               	movwf	my_delay_ms@i+1
  5812  1CD0  3000               	movlw	0
  5813  1CD1  00A6               	movwf	my_delay_ms@i
  5814  1CD2                     l6020:	
  5815  1CD2  0829               	movf	my_delay_ms@i+3,w
  5816  1CD3  3A80               	xorlw	128
  5817  1CD4  00FF               	movwf	127
  5818  1CD5  0823               	movf	my_delay_ms@time+3,w
  5819  1CD6  3A80               	xorlw	128
  5820  1CD7  027F               	subwf	127,w
  5821  1CD8  1D03               	skipz
  5822  1CD9  2CE4               	goto	u5813
  5823  1CDA  0822               	movf	my_delay_ms@time+2,w
  5824  1CDB  0228               	subwf	my_delay_ms@i+2,w
  5825  1CDC  1D03               	skipz
  5826  1CDD  2CE4               	goto	u5813
  5827  1CDE  0821               	movf	my_delay_ms@time+1,w
  5828  1CDF  0227               	subwf	my_delay_ms@i+1,w
  5829  1CE0  1D03               	skipz
  5830  1CE1  2CE4               	goto	u5813
  5831  1CE2  0820               	movf	my_delay_ms@time,w
  5832  1CE3  0226               	subwf	my_delay_ms@i,w
  5833  1CE4                     u5813:	
  5834  1CE4  1803               	btfsc	3,0
  5835  1CE5  0008               	return
  5836                           
  5837                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5838  1CE6  3003               	movlw	3
  5839  1CE7  1283               	bcf	3,5	;RP0=0, select bank0
  5840  1CE8  1303               	bcf	3,6	;RP1=0, select bank0
  5841  1CE9  00A5               	movwf	??_my_delay_ms+1
  5842  1CEA  3097               	movlw	151
  5843  1CEB  00A4               	movwf	??_my_delay_ms
  5844  1CEC                     u8017:	
  5845  1CEC  0BA4               	decfsz	??_my_delay_ms,f
  5846  1CED  2CEC               	goto	u8017
  5847  1CEE  0BA5               	decfsz	??_my_delay_ms+1,f
  5848  1CEF  2CEC               	goto	u8017
  5849                           
  5850                           ;my_delay.c: 10:             }
  5851  1CF0  3001               	movlw	1
  5852  1CF1  1283               	bcf	3,5	;RP0=0, select bank0
  5853  1CF2  1303               	bcf	3,6	;RP1=0, select bank0
  5854  1CF3  07A6               	addwf	my_delay_ms@i,f
  5855  1CF4  3000               	movlw	0
  5856  1CF5  1803               	skipnc
  5857  1CF6  3001               	movlw	1
  5858  1CF7  07A7               	addwf	my_delay_ms@i+1,f
  5859  1CF8  3000               	movlw	0
  5860  1CF9  1803               	skipnc
  5861  1CFA  3001               	movlw	1
  5862  1CFB  07A8               	addwf	my_delay_ms@i+2,f
  5863  1CFC  3000               	movlw	0
  5864  1CFD  1803               	skipnc
  5865  1CFE  3001               	movlw	1
  5866  1CFF  07A9               	addwf	my_delay_ms@i+3,f
  5867  1D00  2CD2               	goto	l6020
  5868  1D01                     __end_of_my_delay_ms:	
  5869                           
  5870                           	psect	text13
  5871  1933                     __ptext13:	
  5872 ;; *************** function _captura *****************
  5873 ;; Defined at:
  5874 ;;		line 123 in file "adc.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  2    0[BANK0 ] unsigned int 
  5881 ;; Registers used:
  5882 ;;		wreg
  5883 ;; Tracked objects:
  5884 ;;		On entry : 300/0
  5885 ;;		On exit  : 300/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5888 ;;      Params:         0       2       0       0       0
  5889 ;;      Locals:         0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0
  5891 ;;      Totals:         0       2       0       0       0
  5892 ;;Total ram usage:        2 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    1
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_ADC_Media_10bits
  5899 ;;		_ADC_Max_10Bits
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _captura
  5905  1933                     _captura:	
  5906                           
  5907                           ;adc.c: 124:     ADCON0bits.GO=1;
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _captura: [wreg]
  5911  1933  149F               	bsf	31,1	;volatile
  5912  1934                     l356:	
  5913                           ;adc.c: 128:           }
  5914                           
  5915                           
  5916                           ;adc.c: 125:     while(ADCON0bits.GO)
  5917  1934  189F               	btfsc	31,1	;volatile
  5918  1935  2934               	goto	l356
  5919                           
  5920                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5921  1936  081E               	movf	30,w	;volatile
  5922  1937  00A1               	movwf	?_captura+1
  5923  1938  1683               	bsf	3,5	;RP0=1, select bank1
  5924  1939  081E               	movf	30,w	;volatile
  5925  193A  1283               	bcf	3,5	;RP0=0, select bank0
  5926  193B  00A0               	movwf	?_captura
  5927  193C  0008               	return
  5928  193D                     __end_of_captura:	
  5929                           
  5930                           	psect	text14
  5931  1C02                     __ptext14:	
  5932 ;; *************** function _I2C_Master_Init *****************
  5933 ;; Defined at:
  5934 ;;		line 7 in file "I2C.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  c               4   14[BANK0 ] const unsigned long 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 300/0
  5945 ;;		On exit  : 300/100
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5948 ;;      Params:         0       4       0       0       0
  5949 ;;      Locals:         0       0       0       0       0
  5950 ;;      Temps:          0       4       0       0       0
  5951 ;;      Totals:         0       8       0       0       0
  5952 ;;Total ram usage:        8 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    2
  5955 ;; This function calls:
  5956 ;;		___lldiv
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _I2C_Master_Init
  5964  1C02                     _I2C_Master_Init:	
  5965                           
  5966                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5967                           
  5968                           ;incstack = 0
  5969                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5970  1C02  3028               	movlw	40
  5971  1C03  0094               	movwf	20	;volatile
  5972                           
  5973                           ;I2C.c: 11:   SSPCON2 = 0;
  5974  1C04  1683               	bsf	3,5	;RP0=1, select bank1
  5975  1C05  0191               	clrf	17	;volatile
  5976                           
  5977                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5978  1C06  1283               	bcf	3,5	;RP0=0, select bank0
  5979  1C07  082E               	movf	I2C_Master_Init@c,w
  5980  1C08  00B2               	movwf	??_I2C_Master_Init
  5981  1C09  082F               	movf	I2C_Master_Init@c+1,w
  5982  1C0A  00B3               	movwf	??_I2C_Master_Init+1
  5983  1C0B  0830               	movf	I2C_Master_Init@c+2,w
  5984  1C0C  00B4               	movwf	??_I2C_Master_Init+2
  5985  1C0D  0831               	movf	I2C_Master_Init@c+3,w
  5986  1C0E  00B5               	movwf	??_I2C_Master_Init+3
  5987  1C0F  3002               	movlw	2
  5988  1C10                     u7695:	
  5989  1C10  1003               	clrc
  5990  1C11  0DB2               	rlf	??_I2C_Master_Init,f
  5991  1C12  0DB3               	rlf	??_I2C_Master_Init+1,f
  5992  1C13  0DB4               	rlf	??_I2C_Master_Init+2,f
  5993  1C14  0DB5               	rlf	??_I2C_Master_Init+3,f
  5994  1C15  3EFF               	addlw	-1
  5995  1C16  1D03               	skipz
  5996  1C17  2C10               	goto	u7695
  5997  1C18  0835               	movf	??_I2C_Master_Init+3,w
  5998  1C19  00A3               	movwf	___lldiv@divisor+3
  5999  1C1A  0834               	movf	??_I2C_Master_Init+2,w
  6000  1C1B  00A2               	movwf	___lldiv@divisor+2
  6001  1C1C  0833               	movf	??_I2C_Master_Init+1,w
  6002  1C1D  00A1               	movwf	___lldiv@divisor+1
  6003  1C1E  0832               	movf	??_I2C_Master_Init,w
  6004  1C1F  00A0               	movwf	___lldiv@divisor
  6005  1C20  3000               	movlw	0
  6006  1C21  00A7               	movwf	___lldiv@dividend+3
  6007  1C22  307A               	movlw	122
  6008  1C23  00A6               	movwf	___lldiv@dividend+2
  6009  1C24  3012               	movlw	18
  6010  1C25  00A5               	movwf	___lldiv@dividend+1
  6011  1C26  3000               	movlw	0
  6012  1C27  00A4               	movwf	___lldiv@dividend
  6013  1C28  160A  158A  27A2   	fcall	___lldiv
  6014  1C2B  0820               	movf	?___lldiv,w
  6015  1C2C  3EFF               	addlw	255
  6016  1C2D  1683               	bsf	3,5	;RP0=1, select bank1
  6017  1C2E  0093               	movwf	19	;volatile
  6018                           
  6019                           ;I2C.c: 13:   SSPSTAT = 0;
  6020  1C2F  0194               	clrf	20	;volatile
  6021                           
  6022                           ;I2C.c: 14:   TRISC3 = 1;
  6023  1C30  1587               	bsf	7,3	;volatile
  6024                           
  6025                           ;I2C.c: 15:   TRISC4 = 1;
  6026  1C31  1607               	bsf	7,4	;volatile
  6027  1C32  0008               	return
  6028  1C33                     __end_of_I2C_Master_Init:	
  6029                           
  6030                           	psect	text15
  6031  1FA2                     __ptext15:	
  6032 ;; *************** function ___lldiv *****************
  6033 ;; Defined at:
  6034 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  divisor         4    0[BANK0 ] unsigned long 
  6037 ;;  dividend        4    4[BANK0 ] unsigned long 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  quotient        4    9[BANK0 ] unsigned long 
  6040 ;;  counter         1   13[BANK0 ] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  4    0[BANK0 ] unsigned long 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 300/0
  6047 ;;		On exit  : 300/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         0       8       0       0       0
  6051 ;;      Locals:         0       5       0       0       0
  6052 ;;      Temps:          0       1       0       0       0
  6053 ;;      Totals:         0      14       0       0       0
  6054 ;;Total ram usage:       14 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_I2C_Master_Init
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function ___lldiv
  6066  1FA2                     ___lldiv:	
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6070  1FA2  3000               	movlw	0
  6071  1FA3  00AC               	movwf	___lldiv@quotient+3
  6072  1FA4  3000               	movlw	0
  6073  1FA5  00AB               	movwf	___lldiv@quotient+2
  6074  1FA6  3000               	movlw	0
  6075  1FA7  00AA               	movwf	___lldiv@quotient+1
  6076  1FA8  3000               	movlw	0
  6077  1FA9  00A9               	movwf	___lldiv@quotient
  6078  1FAA  0823               	movf	___lldiv@divisor+3,w
  6079  1FAB  0422               	iorwf	___lldiv@divisor+2,w
  6080  1FAC  0421               	iorwf	___lldiv@divisor+1,w
  6081  1FAD  0420               	iorwf	___lldiv@divisor,w
  6082  1FAE  1903               	skipnz
  6083  1FAF  2FF7               	goto	l6950
  6084  1FB0  01AD               	clrf	___lldiv@counter
  6085  1FB1  0AAD               	incf	___lldiv@counter,f
  6086  1FB2                     l6936:	
  6087  1FB2  1BA3               	btfsc	___lldiv@divisor+3,7
  6088  1FB3  2FC2               	goto	l6938
  6089  1FB4  3001               	movlw	1
  6090  1FB5  00A8               	movwf	??___lldiv
  6091  1FB6                     u7275:	
  6092  1FB6  1003               	clrc
  6093  1FB7  0DA0               	rlf	___lldiv@divisor,f
  6094  1FB8  0DA1               	rlf	___lldiv@divisor+1,f
  6095  1FB9  0DA2               	rlf	___lldiv@divisor+2,f
  6096  1FBA  0DA3               	rlf	___lldiv@divisor+3,f
  6097  1FBB  0BA8               	decfsz	??___lldiv,f
  6098  1FBC  2FB6               	goto	u7275
  6099  1FBD  3001               	movlw	1
  6100  1FBE  00A8               	movwf	??___lldiv
  6101  1FBF  0828               	movf	??___lldiv,w
  6102  1FC0  07AD               	addwf	___lldiv@counter,f
  6103  1FC1  2FB2               	goto	l6936
  6104  1FC2                     l6938:	
  6105  1FC2  3001               	movlw	1
  6106  1FC3  00A8               	movwf	??___lldiv
  6107  1FC4                     u7295:	
  6108  1FC4  1003               	clrc
  6109  1FC5  0DA9               	rlf	___lldiv@quotient,f
  6110  1FC6  0DAA               	rlf	___lldiv@quotient+1,f
  6111  1FC7  0DAB               	rlf	___lldiv@quotient+2,f
  6112  1FC8  0DAC               	rlf	___lldiv@quotient+3,f
  6113  1FC9  0BA8               	decfsz	??___lldiv,f
  6114  1FCA  2FC4               	goto	u7295
  6115  1FCB  0823               	movf	___lldiv@divisor+3,w
  6116  1FCC  0227               	subwf	___lldiv@dividend+3,w
  6117  1FCD  1D03               	skipz
  6118  1FCE  2FD9               	goto	u7305
  6119  1FCF  0822               	movf	___lldiv@divisor+2,w
  6120  1FD0  0226               	subwf	___lldiv@dividend+2,w
  6121  1FD1  1D03               	skipz
  6122  1FD2  2FD9               	goto	u7305
  6123  1FD3  0821               	movf	___lldiv@divisor+1,w
  6124  1FD4  0225               	subwf	___lldiv@dividend+1,w
  6125  1FD5  1D03               	skipz
  6126  1FD6  2FD9               	goto	u7305
  6127  1FD7  0820               	movf	___lldiv@divisor,w
  6128  1FD8  0224               	subwf	___lldiv@dividend,w
  6129  1FD9                     u7305:	
  6130  1FD9  1C03               	skipc
  6131  1FDA  2FEA               	goto	l6946
  6132  1FDB  0820               	movf	___lldiv@divisor,w
  6133  1FDC  02A4               	subwf	___lldiv@dividend,f
  6134  1FDD  0821               	movf	___lldiv@divisor+1,w
  6135  1FDE  1C03               	skipc
  6136  1FDF  0F21               	incfsz	___lldiv@divisor+1,w
  6137  1FE0  02A5               	subwf	___lldiv@dividend+1,f
  6138  1FE1  0822               	movf	___lldiv@divisor+2,w
  6139  1FE2  1C03               	skipc
  6140  1FE3  0F22               	incfsz	___lldiv@divisor+2,w
  6141  1FE4  02A6               	subwf	___lldiv@dividend+2,f
  6142  1FE5  0823               	movf	___lldiv@divisor+3,w
  6143  1FE6  1C03               	skipc
  6144  1FE7  0F23               	incfsz	___lldiv@divisor+3,w
  6145  1FE8  02A7               	subwf	___lldiv@dividend+3,f
  6146  1FE9  1429               	bsf	___lldiv@quotient,0
  6147  1FEA                     l6946:	
  6148  1FEA  3001               	movlw	1
  6149  1FEB                     u7315:	
  6150  1FEB  1003               	clrc
  6151  1FEC  0CA3               	rrf	___lldiv@divisor+3,f
  6152  1FED  0CA2               	rrf	___lldiv@divisor+2,f
  6153  1FEE  0CA1               	rrf	___lldiv@divisor+1,f
  6154  1FEF  0CA0               	rrf	___lldiv@divisor,f
  6155  1FF0  3EFF               	addlw	-1
  6156  1FF1  1D03               	skipz
  6157  1FF2  2FEB               	goto	u7315
  6158  1FF3  3001               	movlw	1
  6159  1FF4  02AD               	subwf	___lldiv@counter,f
  6160  1FF5  1D03               	btfss	3,2
  6161  1FF6  2FC2               	goto	l6938
  6162  1FF7                     l6950:	
  6163  1FF7  082C               	movf	___lldiv@quotient+3,w
  6164  1FF8  00A3               	movwf	?___lldiv+3
  6165  1FF9  082B               	movf	___lldiv@quotient+2,w
  6166  1FFA  00A2               	movwf	?___lldiv+2
  6167  1FFB  082A               	movf	___lldiv@quotient+1,w
  6168  1FFC  00A1               	movwf	?___lldiv+1
  6169  1FFD  0829               	movf	___lldiv@quotient,w
  6170  1FFE  00A0               	movwf	?___lldiv
  6171  1FFF  0008               	return
  6172  2000                     __end_of___lldiv:	
  6173                           
  6174                           	psect	text16
  6175  0036                     __ptext16:	
  6176 ;; *************** function _Decodify_Command *****************
  6177 ;; Defined at:
  6178 ;;		line 302 in file "SlaveLiofilizadorVer1.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6183 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6184 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6185 ;;  sizedata        1   42[BANK1 ] unsigned char 
  6186 ;;  valor           2   40[BANK1 ] int 
  6187 ;;  add             1   32[BANK1 ] unsigned char 
  6188 ;;  add_24LCxxxx    4   43[BANK1 ] unsigned long 
  6189 ;;  OutPut          4   35[BANK1 ] float 
  6190 ;;  tempint         2   33[BANK1 ] int 
  6191 ;;  dados           2   30[BANK1 ] int 
  6192 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 300/100
  6199 ;;		On exit  : 200/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       0       0       0       0
  6203 ;;      Locals:         0       0      47       0       0
  6204 ;;      Temps:          0       4       0       0       0
  6205 ;;      Totals:         0       4      47       0       0
  6206 ;;Total ram usage:       51 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    6
  6209 ;; This function calls:
  6210 ;;		_EEPROM_24C1025_Fill_All
  6211 ;;		_EEPROM_24C1025_Read_Buffer
  6212 ;;		_EEPROM_24C1025_Read_Byte
  6213 ;;		_EEPROM_24C1025_Read_Int
  6214 ;;		_EEPROM_24C1025_Read_Str
  6215 ;;		_EEPROM_24C1025_Write_Buffer
  6216 ;;		_EEPROM_24C1025_Write_Byte
  6217 ;;		_EEPROM_24C1025_Write_Int
  6218 ;;		_EEPROM_24C1025_Write_Str
  6219 ;;		_EEPROM_Read_Byte
  6220 ;;		_EEPROM_Read_Integer
  6221 ;;		_EEPROM_Read_String
  6222 ;;		_EEPROM_Write_Byte
  6223 ;;		_EEPROM_Write_Integer
  6224 ;;		_EEPROM_Write_String
  6225 ;;		_PROCULUS_Buzzer
  6226 ;;		_PROCULUS_Show_Screen
  6227 ;;		_PROCULUS_VP_Write_String
  6228 ;;		_Save_Log
  6229 ;;		_Send_Reply_OK
  6230 ;;		_Send_To_MB
  6231 ;;		_USART_put_buffer
  6232 ;;		_USART_put_int
  6233 ;;		_USART_put_string
  6234 ;;		_USART_putc
  6235 ;;		_USART_to_Protocol
  6236 ;;		___flmul
  6237 ;;		___fltol
  6238 ;;		_itoa
  6239 ;;		_strcat
  6240 ;;		_strcpy
  6241 ;;		_strlen
  6242 ;; This function is called by:
  6243 ;;		_main
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _Decodify_Command
  6249  0036                     _Decodify_Command:	
  6250                           
  6251                           ;SlaveLiofilizadorVer1.c: 304:     int dados;;SlaveLiofilizadorVer1.c: 305:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 306:     int tempint;;SlaveLiofilizadorVer1.c: 307:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 308:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 320:     USART_to_Protocol(&usart_protocol);
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6255  0036  30B9               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6256  0037  160A  158A  2745  120A  118A  	fcall	_USART_to_Protocol
  6257                           
  6258                           ;SlaveLiofilizadorVer1.c: 322:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6259  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6260  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6261  003E  0840               	movf	(_usart_protocol^(0+384)+7),w
  6262  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6264  0041  00DE               	movwf	??_Decodify_Command
  6265  0042  085E               	movf	??_Decodify_Command,w
  6266  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0044  00CE               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6268                           
  6269                           ;SlaveLiofilizadorVer1.c: 323:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6270  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6271  0046  0841               	movf	(_usart_protocol^(0+384)+8),w
  6272  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0049  00DE               	movwf	??_Decodify_Command
  6275  004A  085E               	movf	??_Decodify_Command,w
  6276  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6277  004C  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6278                           
  6279                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6280  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6281  004E  0842               	movf	(_usart_protocol^(0+384)+9),w
  6282  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6283  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6284  0051  00DE               	movwf	??_Decodify_Command
  6285  0052  085E               	movf	??_Decodify_Command,w
  6286  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6287  0054  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6288                           
  6289                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6290  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6291  0056  0843               	movf	(_usart_protocol^(0+384)+10),w
  6292  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0059  00DE               	movwf	??_Decodify_Command
  6295  005A  085E               	movf	??_Decodify_Command,w
  6296  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6297  005C  00CB               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6298                           
  6299                           ;SlaveLiofilizadorVer1.c: 332:     switch(usart_protocol.command){
  6300  005D  2C49               	goto	l7484
  6301  005E                     l7280:	
  6302                           
  6303                           ;SlaveLiofilizadorVer1.c: 341:              Send_To_MB(11);
  6304  005E  300B               	movlw	11
  6305  005F  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6306                           
  6307                           ;SlaveLiofilizadorVer1.c: 342:              USART_put_string("v1.0.3");
  6308  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6309  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0066  00A1               	movwf	USART_put_string@vetor
  6311  0067  3080               	movlw	128
  6312  0068  00A2               	movwf	USART_put_string@vetor+1
  6313  0069  160A  158A  2497   	fcall	_USART_put_string
  6314                           
  6315                           ;SlaveLiofilizadorVer1.c: 343:              break;
  6316  006C  0008               	return
  6317  006D                     l7284:	
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 360:              if(usart_protocol.value[0]==0)
  6320  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6321  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6322  006F  083F               	movf	(_usart_protocol^(0+384)+6),w
  6323  0070  1D03               	btfss	3,2
  6324  0071  287B               	goto	l7288
  6325                           
  6326                           ;SlaveLiofilizadorVer1.c: 361:                 OutPut=Tensao1;
  6327  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6328  0073  0852               	movf	(_Tensao1+3)^(0+128),w
  6329  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6330  0075  0851               	movf	(_Tensao1+2)^(0+128),w
  6331  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6332  0077  0850               	movf	(_Tensao1+1)^(0+128),w
  6333  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6334  0079  084F               	movf	_Tensao1^(0+128),w
  6335  007A  2883               	goto	L6
  6336  007B                     l7288:	
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 363:                 OutPut=Vaccum0;
  6339  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6340  007C  0856               	movf	(_Vaccum0+3)^(0+128),w
  6341  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6342  007E  0855               	movf	(_Vaccum0+2)^(0+128),w
  6343  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6344  0080  0854               	movf	(_Vaccum0+1)^(0+128),w
  6345  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6346  0082  0853               	movf	_Vaccum0^(0+128),w
  6347  0083                     L6:	
  6348  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6349                           
  6350                           ;SlaveLiofilizadorVer1.c: 366:              OutPut*=10.0;
  6351  0084  3041               	movlw	65
  6352  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0086  00AC               	movwf	___flmul@b+3
  6354  0087  3020               	movlw	32
  6355  0088  00AB               	movwf	___flmul@b+2
  6356  0089  3000               	movlw	0
  6357  008A  00AA               	movwf	___flmul@b+1
  6358  008B  3000               	movlw	0
  6359  008C  00A9               	movwf	___flmul@b
  6360  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6361  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6362  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0090  00B0               	movwf	___flmul@a+3
  6364  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6365  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6366  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0094  00AF               	movwf	___flmul@a+2
  6368  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6370  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0098  00AE               	movwf	___flmul@a+1
  6372  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6373  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6374  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6375  009C  00AD               	movwf	___flmul@a
  6376  009D  120A  118A  24A2  120A  118A  	fcall	___flmul
  6377  00A2  082C               	movf	?___flmul+3,w
  6378  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6379  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6380  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6381  00A6  082B               	movf	?___flmul+2,w
  6382  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6383  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6384  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6385  00AA  082A               	movf	?___flmul+1,w
  6386  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6387  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6388  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6389  00AE  0829               	movf	?___flmul,w
  6390  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6391  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6392                           
  6393                           ;SlaveLiofilizadorVer1.c: 368:              INTCONbits.GIE=0;
  6394  00B1  138B               	bcf	11,7	;volatile
  6395                           
  6396                           ;SlaveLiofilizadorVer1.c: 369:              Send_To_MB(2);
  6397  00B2  3002               	movlw	2
  6398  00B3  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6399                           
  6400                           ;SlaveLiofilizadorVer1.c: 370:              USART_put_int(OutPut);
  6401  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6402  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6403  00BA  00C6               	movwf	___fltol@f1+3
  6404  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6405  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6406  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6407  00BE  00C5               	movwf	___fltol@f1+2
  6408  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6409  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6410  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6411  00C2  00C4               	movwf	___fltol@f1+1
  6412  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6413  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6414  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6415  00C6  00C3               	movwf	___fltol@f1
  6416  00C7  160A  118A  20D2  120A  118A  	fcall	___fltol
  6417  00CC  0844               	movf	?___fltol+1,w
  6418  00CD  00CF               	movwf	USART_put_int@value+1
  6419  00CE  0843               	movf	?___fltol,w
  6420  00CF  00CE               	movwf	USART_put_int@value
  6421  00D0  160A  158A  2173   	fcall	_USART_put_int
  6422                           
  6423                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=1;
  6424  00D3  178B               	bsf	11,7	;volatile
  6425                           
  6426                           ;SlaveLiofilizadorVer1.c: 372:              break;
  6427  00D4  0008               	return
  6428  00D5                     l7300:	
  6429                           
  6430                           ;SlaveLiofilizadorVer1.c: 377:              Save_Log((usart_protocol.value[0]<<8)+(usart
      +                          _protocol.value[1]));
  6431  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6432  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6433  00D7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6434  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6435  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6436  00DA  00DE               	movwf	??_Decodify_Command
  6437  00DB  01DF               	clrf	??_Decodify_Command+1
  6438  00DC  085E               	movf	??_Decodify_Command,w
  6439  00DD  00DF               	movwf	??_Decodify_Command+1
  6440  00DE  01DE               	clrf	??_Decodify_Command
  6441  00DF  1683               	bsf	3,5	;RP0=1, select bank3
  6442  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  6443  00E1  0840               	movf	(_usart_protocol^(0+384)+7),w
  6444  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  6445  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  6446  00E4  075E               	addwf	??_Decodify_Command,w
  6447  00E5  00D8               	movwf	Save_Log@add_memory
  6448  00E6  3000               	movlw	0
  6449  00E7  1803               	skipnc
  6450  00E8  3001               	movlw	1
  6451  00E9  075F               	addwf	??_Decodify_Command+1,w
  6452  00EA  00D9               	movwf	Save_Log@add_memory+1
  6453  00EB  01DA               	clrf	Save_Log@add_memory+2
  6454  00EC  1BD9               	btfsc	Save_Log@add_memory+1,7
  6455  00ED  03DA               	decf	Save_Log@add_memory+2,f
  6456  00EE  085A               	movf	Save_Log@add_memory+2,w
  6457  00EF  00DB               	movwf	Save_Log@add_memory+3
  6458  00F0  160A  118A  206E   	fcall	_Save_Log
  6459                           
  6460                           ;SlaveLiofilizadorVer1.c: 378:              Delay_Led_Tmr0=0;
  6461  00F3  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6462  00F4  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6463                           
  6464                           ;SlaveLiofilizadorVer1.c: 379:              milisegundo=0;
  6465  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  6466  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  6467  00F7  01DF               	clrf	_milisegundo^(0+128)	;volatile
  6468  00F8  01E0               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6469                           
  6470                           ;SlaveLiofilizadorVer1.c: 380:              segundo=0;
  6471  00F9  01E9               	clrf	_segundo^(0+128)	;volatile
  6472                           
  6473                           ;SlaveLiofilizadorVer1.c: 381:              break;
  6474  00FA  0008               	return
  6475  00FB                     l7308:	
  6476                           
  6477                           ;SlaveLiofilizadorVer1.c: 393:              Send_To_MB(2);
  6478  00FB  3002               	movlw	2
  6479  00FC  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6480                           
  6481                           ;SlaveLiofilizadorVer1.c: 395:              USART_put_int(1);
  6482  0101  3001               	movlw	1
  6483  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0103  00CE               	movwf	USART_put_int@value
  6485  0104  3000               	movlw	0
  6486  0105  00CF               	movwf	USART_put_int@value+1
  6487  0106  160A  158A  2173   	fcall	_USART_put_int
  6488                           
  6489                           ;SlaveLiofilizadorVer1.c: 405:              break;
  6490  0109  0008               	return
  6491  010A                     l7312:	
  6492                           
  6493                           ;SlaveLiofilizadorVer1.c: 422:              EEPROM_Write_Byte(usart_protocol.value[0],
  6494  010A  1683               	bsf	3,5	;RP0=1, select bank3
  6495  010B  1703               	bsf	3,6	;RP1=1, select bank3
  6496  010C  0840               	movf	(_usart_protocol^(0+384)+7),w
  6497  010D  1283               	bcf	3,5	;RP0=0, select bank0
  6498  010E  1303               	bcf	3,6	;RP1=0, select bank0
  6499  010F  00DE               	movwf	??_Decodify_Command
  6500  0110  085E               	movf	??_Decodify_Command,w
  6501  0111  00A0               	movwf	EEPROM_Write_Byte@dado
  6502  0112  1683               	bsf	3,5	;RP0=1, select bank3
  6503  0113  1703               	bsf	3,6	;RP1=1, select bank3
  6504  0114  083F               	movf	(_usart_protocol^(0+384)+6),w
  6505  0115  160A  158A  2571  120A  118A  	fcall	_EEPROM_Write_Byte
  6506  011A                     L7:	
  6507                           
  6508                           ;SlaveLiofilizadorVer1.c: 424:              Send_To_MB(3);
  6509  011A  3003               	movlw	3
  6510  011B  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6511                           
  6512                           ;SlaveLiofilizadorVer1.c: 425:              Send_Reply_OK();
  6513  0120  160A  158A  212A   	fcall	_Send_Reply_OK
  6514                           
  6515                           ;SlaveLiofilizadorVer1.c: 426:              break;
  6516  0123  0008               	return
  6517  0124                     l7316:	
  6518                           
  6519                           ;SlaveLiofilizadorVer1.c: 428:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6520  0124  1683               	bsf	3,5	;RP0=1, select bank3
  6521  0125  1703               	bsf	3,6	;RP1=1, select bank3
  6522  0126  083F               	movf	(_usart_protocol^(0+384)+6),w
  6523  0127  160A  158A  22A5  120A  118A  	fcall	_EEPROM_Read_Byte
  6524  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6525  012D  00DE               	movwf	??_Decodify_Command
  6526  012E  085E               	movf	??_Decodify_Command,w
  6527  012F  1683               	bsf	3,5	;RP0=1, select bank1
  6528  0130  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6529                           
  6530                           ;SlaveLiofilizadorVer1.c: 429:              Send_To_MB(1);;
  6531  0131  3001               	movlw	1
  6532  0132  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6533                           
  6534                           ;SlaveLiofilizadorVer1.c: 430:              USART_putc(tempchar);
  6535  0137  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6536  0138  160A  118A  205E   	fcall	_USART_putc
  6537                           
  6538                           ;SlaveLiofilizadorVer1.c: 431:              break;
  6539  013B  0008               	return
  6540  013C                     l7322:	
  6541                           
  6542                           ;SlaveLiofilizadorVer1.c: 433:              {;SlaveLiofilizadorVer1.c: 434:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 435:              add=usart_protocol.value[
      +                          0];
  6543  013C  1683               	bsf	3,5	;RP0=1, select bank3
  6544  013D  1703               	bsf	3,6	;RP1=1, select bank3
  6545  013E  083F               	movf	(_usart_protocol^(0+384)+6),w
  6546  013F  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0141  00DE               	movwf	??_Decodify_Command
  6549  0142  085E               	movf	??_Decodify_Command,w
  6550  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6551  0144  00C0               	movwf	Decodify_Command@add^(0+128)
  6552                           
  6553                           ;SlaveLiofilizadorVer1.c: 436:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6554  0145  1703               	bsf	3,6	;RP1=1, select bank3
  6555  0146  0841               	movf	(_usart_protocol^(0+384)+8),w
  6556  0147  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0148  1303               	bcf	3,6	;RP1=0, select bank0
  6558  0149  00DE               	movwf	??_Decodify_Command
  6559  014A  01DF               	clrf	??_Decodify_Command+1
  6560  014B  1683               	bsf	3,5	;RP0=1, select bank3
  6561  014C  1703               	bsf	3,6	;RP1=1, select bank3
  6562  014D  0840               	movf	(_usart_protocol^(0+384)+7),w
  6563  014E  1283               	bcf	3,5	;RP0=0, select bank0
  6564  014F  1303               	bcf	3,6	;RP1=0, select bank0
  6565  0150  00E0               	movwf	??_Decodify_Command+2
  6566  0151  01E1               	clrf	??_Decodify_Command+3
  6567  0152  0860               	movf	??_Decodify_Command+2,w
  6568  0153  00E1               	movwf	??_Decodify_Command+3
  6569  0154  01E0               	clrf	??_Decodify_Command+2
  6570  0155  085E               	movf	??_Decodify_Command,w
  6571  0156  0460               	iorwf	??_Decodify_Command+2,w
  6572  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6573  0158  00BE               	movwf	Decodify_Command@dados^(0+128)
  6574  0159  1283               	bcf	3,5	;RP0=0, select bank0
  6575  015A  085F               	movf	??_Decodify_Command+1,w
  6576  015B  0461               	iorwf	??_Decodify_Command+3,w
  6577  015C  1683               	bsf	3,5	;RP0=1, select bank1
  6578  015D  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6579                           
  6580                           ;SlaveLiofilizadorVer1.c: 437:              EEPROM_Write_Integer(add,dados);
  6581  015E  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6582  015F  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0160  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6584  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6585  0162  083E               	movf	Decodify_Command@dados^(0+128),w
  6586  0163  1283               	bcf	3,5	;RP0=0, select bank0
  6587  0164  00A5               	movwf	EEPROM_Write_Integer@dado
  6588  0165  1683               	bsf	3,5	;RP0=1, select bank1
  6589  0166  0840               	movf	Decodify_Command@add^(0+128),w
  6590  0167  160A  158A  2433  120A  118A  	fcall	_EEPROM_Write_Integer
  6591  016C  291A               	goto	L7
  6592  016D                     l7332:	
  6593                           ;SlaveLiofilizadorVer1.c: 438:              Send_To_MB(3);
  6594                           
  6595                           
  6596                           ;SlaveLiofilizadorVer1.c: 443:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6597  016D  1683               	bsf	3,5	;RP0=1, select bank3
  6598  016E  1703               	bsf	3,6	;RP1=1, select bank3
  6599  016F  083F               	movf	(_usart_protocol^(0+384)+6),w
  6600  0170  160A  158A  2380  120A  118A  	fcall	_EEPROM_Read_Integer
  6601  0175  0824               	movf	?_EEPROM_Read_Integer+1,w
  6602  0176  1683               	bsf	3,5	;RP0=1, select bank1
  6603  0177  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6604  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6605  0179  0823               	movf	?_EEPROM_Read_Integer,w
  6606  017A                     L8:	
  6607  017A  1683               	bsf	3,5	;RP0=1, select bank1
  6608  017B  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6609                           
  6610                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(2);
  6611  017C  3002               	movlw	2
  6612  017D  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6613                           
  6614                           ;SlaveLiofilizadorVer1.c: 445:              USART_put_int(tempint);
  6615  0182  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6616  0183  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0184  00CF               	movwf	USART_put_int@value+1
  6618  0185  1683               	bsf	3,5	;RP0=1, select bank1
  6619  0186  0841               	movf	Decodify_Command@tempint^(0+128),w
  6620  0187  1283               	bcf	3,5	;RP0=0, select bank0
  6621  0188  00CE               	movwf	USART_put_int@value
  6622  0189  160A  158A  2173   	fcall	_USART_put_int
  6623                           
  6624                           ;SlaveLiofilizadorVer1.c: 446:              break;
  6625  018C  0008               	return
  6626  018D                     l7338:	
  6627                           
  6628                           ;SlaveLiofilizadorVer1.c: 449:              EEPROM_Write_String(usart_protocol.value[0],
  6629  018D  30C0               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6630  018E  00DE               	movwf	??_Decodify_Command
  6631  018F  085E               	movf	??_Decodify_Command,w
  6632  0190  00A5               	movwf	EEPROM_Write_String@dado
  6633  0191  1683               	bsf	3,5	;RP0=1, select bank3
  6634  0192  1703               	bsf	3,6	;RP1=1, select bank3
  6635  0193  083F               	movf	(_usart_protocol^(0+384)+6),w
  6636  0194  160A  158A  23AA  120A  118A  	fcall	_EEPROM_Write_String
  6637  0199  291A               	goto	L7
  6638  019A                     l7344:	
  6639                           ;SlaveLiofilizadorVer1.c: 451:              Send_To_MB(3);
  6640                           
  6641                           
  6642                           ;SlaveLiofilizadorVer1.c: 455:              {;SlaveLiofilizadorVer1.c: 457:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6643  019A  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6644  019B  00DE               	movwf	??_Decodify_Command
  6645  019C  085E               	movf	??_Decodify_Command,w
  6646  019D  00A3               	movwf	EEPROM_Read_String@dado
  6647  019E  1683               	bsf	3,5	;RP0=1, select bank3
  6648  019F  1703               	bsf	3,6	;RP1=1, select bank3
  6649  01A0  083F               	movf	(_usart_protocol^(0+384)+6),w
  6650  01A1  160A  158A  2245  120A  118A  	fcall	_EEPROM_Read_String
  6651                           
  6652                           ;SlaveLiofilizadorVer1.c: 458:              Send_To_MB(sizeof(texto));
  6653  01A6  3010               	movlw	16
  6654  01A7                     L9:	
  6655  01A7  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6656                           
  6657                           ;SlaveLiofilizadorVer1.c: 459:              USART_put_string(texto);
  6658  01AC  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6659  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  6660  01AE  00A1               	movwf	USART_put_string@vetor
  6661  01AF  3001               	movlw	1
  6662  01B0  00A2               	movwf	USART_put_string@vetor+1
  6663  01B1  160A  158A  2497   	fcall	_USART_put_string
  6664                           
  6665                           ;SlaveLiofilizadorVer1.c: 460:              break;
  6666  01B4  0008               	return
  6667  01B5                     l7350:	
  6668                           
  6669                           ;SlaveLiofilizadorVer1.c: 465:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6670  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  6671  01B6  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6672  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  6673  01B8  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6674  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  6675  01BA  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6676  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  6677  01BC  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6678  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  6679  01BE  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6680  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  6681  01C0  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6682  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  6683  01C2  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6684  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  6685  01C4  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6686  01C5  30C4               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6687  01C6  00DE               	movwf	??_Decodify_Command
  6688  01C7  085E               	movf	??_Decodify_Command,w
  6689  01C8  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  6690  01C9  1683               	bsf	3,5	;RP0=1, select bank3
  6691  01CA  1703               	bsf	3,6	;RP1=1, select bank3
  6692  01CB  083F               	movf	(_usart_protocol^(0+384)+6),w
  6693  01CC  160A  158A  215D  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6694  01D1  291A               	goto	L7
  6695  01D2                     l7356:	
  6696                           ;SlaveLiofilizadorVer1.c: 468:              Send_To_MB(3);
  6697                           
  6698                           
  6699                           ;SlaveLiofilizadorVer1.c: 472:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6700  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  6701  01D3  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6702  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6703  01D5  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6704  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  6705  01D7  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6706  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  6707  01D9  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6708  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  6709  01DB  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6710  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  6711  01DD  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6712  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  6713  01DF  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6714  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6715  01E1  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6716  01E2  1683               	bsf	3,5	;RP0=1, select bank3
  6717  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  6718  01E4  083F               	movf	(_usart_protocol^(0+384)+6),w
  6719  01E5  160A  158A  21D0  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6720  01EA  00DE               	movwf	??_Decodify_Command
  6721  01EB  085E               	movf	??_Decodify_Command,w
  6722  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  6723  01ED  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6724                           
  6725                           ;SlaveLiofilizadorVer1.c: 476:              Send_To_MB(1);
  6726  01EE  3001               	movlw	1
  6727  01EF  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6728                           
  6729                           ;SlaveLiofilizadorVer1.c: 477:              USART_putc(tempchar);
  6730  01F4  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6731  01F5  160A  118A  205E   	fcall	_USART_putc
  6732                           
  6733                           ;SlaveLiofilizadorVer1.c: 478:              break;
  6734  01F8  0008               	return
  6735  01F9                     l7362:	
  6736                           
  6737                           ;SlaveLiofilizadorVer1.c: 480:              {;SlaveLiofilizadorVer1.c: 481:             
      +                           int valor;;SlaveLiofilizadorVer1.c: 482:              ((char *)&valor)[1]=(usart_protoc
      +                          ol.value[5]);
  6738  01F9  1683               	bsf	3,5	;RP0=1, select bank3
  6739  01FA  1703               	bsf	3,6	;RP1=1, select bank3
  6740  01FB  0844               	movf	(_usart_protocol^(0+384)+11),w
  6741  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  6742  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  6743  01FE  00DE               	movwf	??_Decodify_Command
  6744  01FF  085E               	movf	??_Decodify_Command,w
  6745  0200  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0201  00C9               	movwf	(Decodify_Command@valor^(0+128)+1)
  6747                           
  6748                           ;SlaveLiofilizadorVer1.c: 483:              ((char *)&valor)[0]=(usart_protocol.value[6]
      +                          );
  6749  0202  1703               	bsf	3,6	;RP1=1, select bank3
  6750  0203  0845               	movf	(_usart_protocol^(0+384)+12),w
  6751  0204  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0205  1303               	bcf	3,6	;RP1=0, select bank0
  6753  0206  00DE               	movwf	??_Decodify_Command
  6754  0207  085E               	movf	??_Decodify_Command,w
  6755  0208  1683               	bsf	3,5	;RP0=1, select bank1
  6756  0209  00C8               	movwf	Decodify_Command@valor^(0+128)
  6757                           
  6758                           ;SlaveLiofilizadorVer1.c: 484:              EEPROM_24C1025_Write_Int(usart_protocol.valu
      +                          e[0],
  6759  020A  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6760  020B  1283               	bcf	3,5	;RP0=0, select bank0
  6761  020C  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6762  020D  1683               	bsf	3,5	;RP0=1, select bank1
  6763  020E  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6764  020F  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0210  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6766  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6767  0212  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6768  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6769  0214  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6770  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6771  0216  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6772  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6773  0218  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6774  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6775  021A  0849               	movf	(Decodify_Command@valor+1)^(0+128),w
  6776  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6777  021C  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6778  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6779  021E  0848               	movf	Decodify_Command@valor^(0+128),w
  6780  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0220  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6782  0221  1683               	bsf	3,5	;RP0=1, select bank3
  6783  0222  1703               	bsf	3,6	;RP1=1, select bank3
  6784  0223  083F               	movf	(_usart_protocol^(0+384)+6),w
  6785  0224  160A  158A  2265  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6786  0229  291A               	goto	L7
  6787  022A                     l7370:	
  6788                           ;SlaveLiofilizadorVer1.c: 487:              Send_To_MB(3);
  6789                           
  6790                           
  6791                           ;SlaveLiofilizadorVer1.c: 492:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6792  022A  1683               	bsf	3,5	;RP0=1, select bank1
  6793  022B  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6794  022C  1283               	bcf	3,5	;RP0=0, select bank0
  6795  022D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6796  022E  1683               	bsf	3,5	;RP0=1, select bank1
  6797  022F  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6798  0230  1283               	bcf	3,5	;RP0=0, select bank0
  6799  0231  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6800  0232  1683               	bsf	3,5	;RP0=1, select bank1
  6801  0233  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6802  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0235  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6804  0236  1683               	bsf	3,5	;RP0=1, select bank1
  6805  0237  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6806  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6807  0239  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6808  023A  1683               	bsf	3,5	;RP0=1, select bank3
  6809  023B  1703               	bsf	3,6	;RP1=1, select bank3
  6810  023C  083F               	movf	(_usart_protocol^(0+384)+6),w
  6811  023D  160A  158A  2330  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6812  0242  0835               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6813  0243  1683               	bsf	3,5	;RP0=1, select bank1
  6814  0244  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6815  0245  1283               	bcf	3,5	;RP0=0, select bank0
  6816  0246  0834               	movf	?_EEPROM_24C1025_Read_Int,w
  6817  0247  297A               	goto	L8
  6818  0248                     l7376:	
  6819                           ;SlaveLiofilizadorVer1.c: 494:              Send_To_MB(2);
  6820                           
  6821                           
  6822                           ;SlaveLiofilizadorVer1.c: 500:              {;SlaveLiofilizadorVer1.c: 501:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 502:              sizedata=usart_protocol.value
      +                          [5];
  6823  0248  1683               	bsf	3,5	;RP0=1, select bank3
  6824  0249  1703               	bsf	3,6	;RP1=1, select bank3
  6825  024A  0844               	movf	(_usart_protocol^(0+384)+11),w
  6826  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6827  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6828  024D  00DE               	movwf	??_Decodify_Command
  6829  024E  085E               	movf	??_Decodify_Command,w
  6830  024F  1683               	bsf	3,5	;RP0=1, select bank1
  6831  0250  00CA               	movwf	Decodify_Command@sizedata^(0+128)
  6832                           
  6833                           ;SlaveLiofilizadorVer1.c: 503:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6834  0251  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6835  0252  1283               	bcf	3,5	;RP0=0, select bank0
  6836  0253  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6837  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6838  0255  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6839  0256  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0257  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6841  0258  1683               	bsf	3,5	;RP0=1, select bank1
  6842  0259  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6843  025A  1283               	bcf	3,5	;RP0=0, select bank0
  6844  025B  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6845  025C  1683               	bsf	3,5	;RP0=1, select bank1
  6846  025D  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6847  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6848  025F  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6849  0260  1683               	bsf	3,5	;RP0=1, select bank1
  6850  0261  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6851  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6852  0263  00DE               	movwf	??_Decodify_Command
  6853  0264  085E               	movf	??_Decodify_Command,w
  6854  0265  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6855  0266  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6856  0267  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
  6857  0268  3001               	movlw	1
  6858  0269  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6859  026A  1683               	bsf	3,5	;RP0=1, select bank3
  6860  026B  1703               	bsf	3,6	;RP1=1, select bank3
  6861  026C  083F               	movf	(_usart_protocol^(0+384)+6),w
  6862  026D  120A  158A  202C  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6863                           
  6864                           ;SlaveLiofilizadorVer1.c: 510:              Send_To_MB(sizedata);
  6865  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6866  0273  1303               	bcf	3,6	;RP1=0, select bank1
  6867  0274  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6868  0275  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  6869                           
  6870                           ;SlaveLiofilizadorVer1.c: 511:              USART_put_buffer(buffer,sizedata);
  6871  027A  084A               	movf	Decodify_Command@sizedata^(0+128),w
  6872  027B  1283               	bcf	3,5	;RP0=0, select bank0
  6873  027C  00DE               	movwf	??_Decodify_Command
  6874  027D  01DF               	clrf	??_Decodify_Command+1
  6875  027E  085E               	movf	??_Decodify_Command,w
  6876  027F  00A1               	movwf	USART_put_buffer@size
  6877  0280  085F               	movf	??_Decodify_Command+1,w
  6878  0281  00A2               	movwf	USART_put_buffer@size+1
  6879  0282  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6880  0283  160A  158A  230C   	fcall	_USART_put_buffer
  6881                           
  6882                           ;SlaveLiofilizadorVer1.c: 512:              };SlaveLiofilizadorVer1.c: 513:             
      +                           break;
  6883  0286  0008               	return
  6884  0287                     l7384:	
  6885                           
  6886                           ;SlaveLiofilizadorVer1.c: 516:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6887  0287  1683               	bsf	3,5	;RP0=1, select bank1
  6888  0288  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6889  0289  1283               	bcf	3,5	;RP0=0, select bank0
  6890  028A  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6891  028B  1683               	bsf	3,5	;RP0=1, select bank1
  6892  028C  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6893  028D  1283               	bcf	3,5	;RP0=0, select bank0
  6894  028E  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6895  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6896  0290  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6897  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0292  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6899  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6900  0294  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6901  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6902  0296  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6903  0297  1683               	bsf	3,5	;RP0=1, select bank3
  6904  0298  1703               	bsf	3,6	;RP1=1, select bank3
  6905  0299  0844               	movf	(_usart_protocol^(0+384)+11),w
  6906  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6907  029B  1303               	bcf	3,6	;RP1=0, select bank0
  6908  029C  00DE               	movwf	??_Decodify_Command
  6909  029D  085E               	movf	??_Decodify_Command,w
  6910  029E  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6911  029F  30C5               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6912  02A0  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  6913  02A1  3001               	movlw	1
  6914  02A2  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6915  02A3  1683               	bsf	3,5	;RP0=1, select bank3
  6916  02A4  1703               	bsf	3,6	;RP1=1, select bank3
  6917  02A5  083F               	movf	(_usart_protocol^(0+384)+6),w
  6918  02A6  160A  118A  2536  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6919  02AB  291A               	goto	L7
  6920  02AC                     l7390:	
  6921                           ;SlaveLiofilizadorVer1.c: 521:              Send_To_MB(3);
  6922                           
  6923                           
  6924                           ;SlaveLiofilizadorVer1.c: 526:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6925  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  6926  02AD  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6927  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  6928  02AF  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6929  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  6930  02B1  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6931  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  6932  02B3  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6933  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6934  02B5  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6935  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6936  02B7  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6937  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6938  02B9  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6939  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6940  02BB  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6941  02BC  30C4               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6942  02BD  00DE               	movwf	??_Decodify_Command
  6943  02BE  085E               	movf	??_Decodify_Command,w
  6944  02BF  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  6945  02C0  1683               	bsf	3,5	;RP0=1, select bank3
  6946  02C1  1703               	bsf	3,6	;RP1=1, select bank3
  6947  02C2  083F               	movf	(_usart_protocol^(0+384)+6),w
  6948  02C3  160A  118A  2273  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6949  02C8  291A               	goto	L7
  6950  02C9                     l7396:	
  6951                           ;SlaveLiofilizadorVer1.c: 529:              Send_To_MB(3);
  6952                           
  6953                           
  6954                           ;SlaveLiofilizadorVer1.c: 533:              {;SlaveLiofilizadorVer1.c: 534:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6955  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  6956  02CA  084E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6957  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  6958  02CC  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6959  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  6960  02CE  084D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6961  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6962  02D0  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6963  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  6964  02D2  084C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6965  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6966  02D4  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6967  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  6968  02D6  084B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6969  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6970  02D8  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6971  02D9  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6972  02DA  00DE               	movwf	??_Decodify_Command
  6973  02DB  085E               	movf	??_Decodify_Command,w
  6974  02DC  00AA               	movwf	EEPROM_24C1025_Read_Str@texto
  6975  02DD  1683               	bsf	3,5	;RP0=1, select bank3
  6976  02DE  1703               	bsf	3,6	;RP1=1, select bank3
  6977  02DF  083F               	movf	(_usart_protocol^(0+384)+6),w
  6978  02E0  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6979                           
  6980                           ;SlaveLiofilizadorVer1.c: 538:              Send_To_MB(strlen(texto));
  6981  02E5  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  6982  02E6  160A  158A  21B7  120A  118A  	fcall	_strlen
  6983  02EB  0820               	movf	?_strlen,w
  6984  02EC  29A7               	goto	L9
  6985  02ED                     l7400:	
  6986                           
  6987                           ;SlaveLiofilizadorVer1.c: 544:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6988  02ED  1683               	bsf	3,5	;RP0=1, select bank3
  6989  02EE  1703               	bsf	3,6	;RP1=1, select bank3
  6990  02EF  0840               	movf	(_usart_protocol^(0+384)+7),w
  6991  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6992  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6993  02F2  00DE               	movwf	??_Decodify_Command
  6994  02F3  085E               	movf	??_Decodify_Command,w
  6995  02F4  00AF               	movwf	EEPROM_24C1025_Fill_All@value
  6996  02F5  1683               	bsf	3,5	;RP0=1, select bank3
  6997  02F6  1703               	bsf	3,6	;RP1=1, select bank3
  6998  02F7  083F               	movf	(_usart_protocol^(0+384)+6),w
  6999  02F8  160A  158A  2663  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7000  02FD  291A               	goto	L7
  7001  02FE                     l7406:	
  7002                           ;SlaveLiofilizadorVer1.c: 546:              Send_To_MB(3);
  7003                           
  7004                           
  7005                           ;SlaveLiofilizadorVer1.c: 551:              {;SlaveLiofilizadorVer1.c: 552:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 553:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 554:              char ss[10];;SlaveLiofilizadorVer1.c: 556:              itoa(hh
      +                          ,hora,10);
  7006  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  7007  02FF  0868               	movf	_hora^(0+128),w	;volatile
  7008  0300  1283               	bcf	3,5	;RP0=0, select bank0
  7009  0301  00DE               	movwf	??_Decodify_Command
  7010  0302  01DF               	clrf	??_Decodify_Command+1
  7011  0303  085E               	movf	??_Decodify_Command,w
  7012  0304  00B1               	movwf	itoa@val
  7013  0305  085F               	movf	??_Decodify_Command+1,w
  7014  0306  00B2               	movwf	itoa@val+1
  7015  0307  300A               	movlw	10
  7016  0308  00B3               	movwf	itoa@base
  7017  0309  3000               	movlw	0
  7018  030A  00B4               	movwf	itoa@base+1
  7019  030B  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7020  030C  160A  158A  2285  120A  118A  	fcall	_itoa
  7021                           
  7022                           ;SlaveLiofilizadorVer1.c: 557:              itoa(mm,minuto,10);
  7023  0311  1683               	bsf	3,5	;RP0=1, select bank1
  7024  0312  0867               	movf	_minuto^(0+128),w	;volatile
  7025  0313  1283               	bcf	3,5	;RP0=0, select bank0
  7026  0314  00DE               	movwf	??_Decodify_Command
  7027  0315  01DF               	clrf	??_Decodify_Command+1
  7028  0316  085E               	movf	??_Decodify_Command,w
  7029  0317  00B1               	movwf	itoa@val
  7030  0318  085F               	movf	??_Decodify_Command+1,w
  7031  0319  00B2               	movwf	itoa@val+1
  7032  031A  300A               	movlw	10
  7033  031B  00B3               	movwf	itoa@base
  7034  031C  3000               	movlw	0
  7035  031D  00B4               	movwf	itoa@base+1
  7036  031E  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7037  031F  160A  158A  2285  120A  118A  	fcall	_itoa
  7038                           
  7039                           ;SlaveLiofilizadorVer1.c: 558:              itoa(ss,segundo,10);
  7040  0324  1683               	bsf	3,5	;RP0=1, select bank1
  7041  0325  0869               	movf	_segundo^(0+128),w	;volatile
  7042  0326  1283               	bcf	3,5	;RP0=0, select bank0
  7043  0327  00DE               	movwf	??_Decodify_Command
  7044  0328  01DF               	clrf	??_Decodify_Command+1
  7045  0329  085E               	movf	??_Decodify_Command,w
  7046  032A  00B1               	movwf	itoa@val
  7047  032B  085F               	movf	??_Decodify_Command+1,w
  7048  032C  00B2               	movwf	itoa@val+1
  7049  032D  300A               	movlw	10
  7050  032E  00B3               	movwf	itoa@base
  7051  032F  3000               	movlw	0
  7052  0330  00B4               	movwf	itoa@base+1
  7053  0331  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7054  0332  160A  158A  2285  120A  118A  	fcall	_itoa
  7055                           
  7056                           ;SlaveLiofilizadorVer1.c: 561:              strcpy(texto,"");
  7057  0337  304C               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7058  0338  00DE               	movwf	??_Decodify_Command
  7059  0339  085E               	movf	??_Decodify_Command,w
  7060  033A  00A0               	movwf	strcpy@from
  7061  033B  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7062  033C  160A  158A  2209  120A  118A  	fcall	_strcpy
  7063                           
  7064                           ;SlaveLiofilizadorVer1.c: 562:              if (hh[1]==0)
  7065  0341  1683               	bsf	3,5	;RP0=1, select bank1
  7066  0342  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7067  0343  1D03               	btfss	3,2
  7068  0344  2B52               	goto	l7414
  7069                           
  7070                           ;SlaveLiofilizadorVer1.c: 563:                 {;SlaveLiofilizadorVer1.c: 564:          
      +                                 strcat(texto,"0");
  7071  0345  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7072  0346  1283               	bcf	3,5	;RP0=0, select bank0
  7073  0347  00A0               	movwf	strcat@from
  7074  0348  3080               	movlw	128
  7075  0349  00A1               	movwf	strcat@from+1
  7076  034A  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7077  034B  120A  158A  2000  120A  118A  	fcall	_strcat
  7078                           
  7079                           ;SlaveLiofilizadorVer1.c: 565:                 hh[2]=0;
  7080  0350  1683               	bsf	3,5	;RP0=1, select bank1
  7081  0351  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7082  0352                     l7414:	
  7083                           
  7084                           ;SlaveLiofilizadorVer1.c: 567:              strcat(texto,hh);
  7085  0352  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7086  0353  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0354  00A0               	movwf	strcat@from
  7088  0355  3000               	movlw	0
  7089  0356  00A1               	movwf	strcat@from+1
  7090  0357  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7091  0358  120A  158A  2000  120A  118A  	fcall	_strcat
  7092                           
  7093                           ;SlaveLiofilizadorVer1.c: 568:              strcat(texto,":");
  7094  035D  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7095  035E  00A0               	movwf	strcat@from
  7096  035F  3080               	movlw	128
  7097  0360  00A1               	movwf	strcat@from+1
  7098  0361  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7099  0362  120A  158A  2000  120A  118A  	fcall	_strcat
  7100                           
  7101                           ;SlaveLiofilizadorVer1.c: 569:              if(mm[1]==0)
  7102  0367  1683               	bsf	3,5	;RP0=1, select bank1
  7103  0368  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7104  0369  1D03               	btfss	3,2
  7105  036A  2B78               	goto	l7424
  7106                           
  7107                           ;SlaveLiofilizadorVer1.c: 570:                 {;SlaveLiofilizadorVer1.c: 571:          
      +                                 strcat(texto,"0");
  7108  036B  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7109  036C  1283               	bcf	3,5	;RP0=0, select bank0
  7110  036D  00A0               	movwf	strcat@from
  7111  036E  3080               	movlw	128
  7112  036F  00A1               	movwf	strcat@from+1
  7113  0370  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7114  0371  120A  158A  2000  120A  118A  	fcall	_strcat
  7115                           
  7116                           ;SlaveLiofilizadorVer1.c: 572:                 mm[2]=0;
  7117  0376  1683               	bsf	3,5	;RP0=1, select bank1
  7118  0377  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7119  0378                     l7424:	
  7120                           
  7121                           ;SlaveLiofilizadorVer1.c: 574:              strcat(texto,mm);
  7122  0378  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7123  0379  1283               	bcf	3,5	;RP0=0, select bank0
  7124  037A  00A0               	movwf	strcat@from
  7125  037B  3000               	movlw	0
  7126  037C  00A1               	movwf	strcat@from+1
  7127  037D  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7128  037E  120A  158A  2000  120A  118A  	fcall	_strcat
  7129                           
  7130                           ;SlaveLiofilizadorVer1.c: 575:              strcat(texto,":");
  7131  0383  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7132  0384  00A0               	movwf	strcat@from
  7133  0385  3080               	movlw	128
  7134  0386  00A1               	movwf	strcat@from+1
  7135  0387  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7136  0388  120A  158A  2000  120A  118A  	fcall	_strcat
  7137                           
  7138                           ;SlaveLiofilizadorVer1.c: 576:              if(ss[1]==0)
  7139  038D  1683               	bsf	3,5	;RP0=1, select bank1
  7140  038E  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7141  038F  1D03               	btfss	3,2
  7142  0390  2B9E               	goto	l7434
  7143                           
  7144                           ;SlaveLiofilizadorVer1.c: 577:                 {;SlaveLiofilizadorVer1.c: 578:          
      +                                 strcat(texto,"0");
  7145  0391  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7146  0392  1283               	bcf	3,5	;RP0=0, select bank0
  7147  0393  00A0               	movwf	strcat@from
  7148  0394  3080               	movlw	128
  7149  0395  00A1               	movwf	strcat@from+1
  7150  0396  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7151  0397  120A  158A  2000  120A  118A  	fcall	_strcat
  7152                           
  7153                           ;SlaveLiofilizadorVer1.c: 579:                 ss[2]=0;
  7154  039C  1683               	bsf	3,5	;RP0=1, select bank1
  7155  039D  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7156  039E                     l7434:	
  7157                           
  7158                           ;SlaveLiofilizadorVer1.c: 581:              strcat(texto,ss);
  7159  039E  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7160  039F  1283               	bcf	3,5	;RP0=0, select bank0
  7161  03A0  00A0               	movwf	strcat@from
  7162  03A1  3000               	movlw	0
  7163  03A2  00A1               	movwf	strcat@from+1
  7164  03A3  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7165  03A4  120A  158A  2000  120A  118A  	fcall	_strcat
  7166                           
  7167                           ;SlaveLiofilizadorVer1.c: 582:              Send_To_MB(strlen(texto));
  7168  03A9  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7169  03AA  160A  158A  21B7  120A  118A  	fcall	_strlen
  7170  03AF  0820               	movf	?_strlen,w
  7171  03B0  160A  158A  2358  120A  118A  	fcall	_Send_To_MB
  7172                           
  7173                           ;SlaveLiofilizadorVer1.c: 583:              USART_put_string(texto);
  7174  03B5  30A9               	movlw	(low (_texto| (0+256)))& (0+255)
  7175  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  7176  03B7  00A1               	movwf	USART_put_string@vetor
  7177  03B8  3001               	movlw	1
  7178  03B9  00A2               	movwf	USART_put_string@vetor+1
  7179  03BA  160A  158A  2497  120A  118A  	fcall	_USART_put_string
  7180                           
  7181                           ;SlaveLiofilizadorVer1.c: 584:              USART_putc(0);
  7182  03BF  3000               	movlw	0
  7183  03C0  160A  118A  205E   	fcall	_USART_putc
  7184                           
  7185                           ;SlaveLiofilizadorVer1.c: 585:              };SlaveLiofilizadorVer1.c: 586:             
      +                           break;
  7186  03C3  0008               	return
  7187  03C4                     l7442:	
  7188                           
  7189                           ;SlaveLiofilizadorVer1.c: 589:              hora=usart_protocol.value[0];
  7190  03C4  1683               	bsf	3,5	;RP0=1, select bank3
  7191  03C5  1703               	bsf	3,6	;RP1=1, select bank3
  7192  03C6  083F               	movf	(_usart_protocol^(0+384)+6),w
  7193  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  7194  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  7195  03C9  00DE               	movwf	??_Decodify_Command
  7196  03CA  085E               	movf	??_Decodify_Command,w
  7197  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  7198  03CC  00E8               	movwf	_hora^(0+128)	;volatile
  7199                           
  7200                           ;SlaveLiofilizadorVer1.c: 590:              minuto=usart_protocol.value[1];
  7201  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  7202  03CE  0840               	movf	(_usart_protocol^(0+384)+7),w
  7203  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  7204  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  7205  03D1  00DE               	movwf	??_Decodify_Command
  7206  03D2  085E               	movf	??_Decodify_Command,w
  7207  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  7208  03D4  00E7               	movwf	_minuto^(0+128)	;volatile
  7209                           
  7210                           ;SlaveLiofilizadorVer1.c: 591:              segundo=usart_protocol.value[2];
  7211  03D5  1703               	bsf	3,6	;RP1=1, select bank3
  7212  03D6  0841               	movf	(_usart_protocol^(0+384)+8),w
  7213  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  7214  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  7215  03D9  00DE               	movwf	??_Decodify_Command
  7216  03DA  085E               	movf	??_Decodify_Command,w
  7217  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  7218  03DC  00E9               	movwf	_segundo^(0+128)	;volatile
  7219  03DD  291A               	goto	L7
  7220  03DE                     l7448:	
  7221                           ;SlaveLiofilizadorVer1.c: 592:              Send_To_MB(3);
  7222                           
  7223                           
  7224                           ;SlaveLiofilizadorVer1.c: 597:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7225  03DE  1683               	bsf	3,5	;RP0=1, select bank3
  7226  03DF  1703               	bsf	3,6	;RP1=1, select bank3
  7227  03E0  083F               	movf	(_usart_protocol^(0+384)+6),w
  7228  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  7229  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  7230  03E3  00DE               	movwf	??_Decodify_Command
  7231  03E4  01DF               	clrf	??_Decodify_Command+1
  7232  03E5  085E               	movf	??_Decodify_Command,w
  7233  03E6  00D6               	movwf	PROCULUS_Show_Screen@screen
  7234  03E7  085F               	movf	??_Decodify_Command+1,w
  7235  03E8  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7236  03E9  160A  158A  2148  120A  118A  	fcall	_PROCULUS_Show_Screen
  7237  03EE  291A               	goto	L7
  7238  03EF                     l7454:	
  7239                           ;SlaveLiofilizadorVer1.c: 598:              Send_To_MB(3);
  7240                           
  7241                           
  7242                           ;SlaveLiofilizadorVer1.c: 603:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7243  03EF  1683               	bsf	3,5	;RP0=1, select bank3
  7244  03F0  1703               	bsf	3,6	;RP1=1, select bank3
  7245  03F1  083F               	movf	(_usart_protocol^(0+384)+6),w
  7246  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  7247  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  7248  03F4  00DE               	movwf	??_Decodify_Command
  7249  03F5  01DF               	clrf	??_Decodify_Command+1
  7250  03F6  085E               	movf	??_Decodify_Command,w
  7251  03F7  00DF               	movwf	??_Decodify_Command+1
  7252  03F8  01DE               	clrf	??_Decodify_Command
  7253  03F9  1683               	bsf	3,5	;RP0=1, select bank3
  7254  03FA  1703               	bsf	3,6	;RP1=1, select bank3
  7255  03FB  0840               	movf	(_usart_protocol^(0+384)+7),w
  7256  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  7257  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  7258  03FE  075E               	addwf	??_Decodify_Command,w
  7259  03FF  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7260  0400  3000               	movlw	0
  7261  0401  1803               	skipnc
  7262  0402  3001               	movlw	1
  7263  0403  075F               	addwf	??_Decodify_Command+1,w
  7264  0404  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7265  0405  160A  158A  22C7  120A  118A  	fcall	_PROCULUS_Buzzer
  7266  040A  291A               	goto	L7
  7267  040B                     l7460:	
  7268                           ;SlaveLiofilizadorVer1.c: 605:              Send_To_MB(3);
  7269                           
  7270                           
  7271                           ;SlaveLiofilizadorVer1.c: 609:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7272  040B  1683               	bsf	3,5	;RP0=1, select bank3
  7273  040C  1703               	bsf	3,6	;RP1=1, select bank3
  7274  040D  083F               	movf	(_usart_protocol^(0+384)+6),w
  7275  040E  1283               	bcf	3,5	;RP0=0, select bank0
  7276  040F  1303               	bcf	3,6	;RP1=0, select bank0
  7277  0410  00DE               	movwf	??_Decodify_Command
  7278  0411  01DF               	clrf	??_Decodify_Command+1
  7279  0412  085E               	movf	??_Decodify_Command,w
  7280  0413  00DF               	movwf	??_Decodify_Command+1
  7281  0414  01DE               	clrf	??_Decodify_Command
  7282  0415  1683               	bsf	3,5	;RP0=1, select bank3
  7283  0416  1703               	bsf	3,6	;RP1=1, select bank3
  7284  0417  0840               	movf	(_usart_protocol^(0+384)+7),w
  7285  0418  1283               	bcf	3,5	;RP0=0, select bank0
  7286  0419  1303               	bcf	3,6	;RP1=0, select bank0
  7287  041A  075E               	addwf	??_Decodify_Command,w
  7288  041B  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7289  041C  3000               	movlw	0
  7290  041D  1803               	skipnc
  7291  041E  3001               	movlw	1
  7292  041F  075F               	addwf	??_Decodify_Command+1,w
  7293  0420  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7294  0421  30C1               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7295  0422  00E0               	movwf	??_Decodify_Command+2
  7296  0423  0860               	movf	??_Decodify_Command+2,w
  7297  0424  00DC               	movwf	PROCULUS_VP_Write_String@text
  7298  0425  160A  158A  2189  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7299  042A  291A               	goto	L7
  7300  042B                     l7466:	
  7301                           ;SlaveLiofilizadorVer1.c: 612:              Send_To_MB(3);
  7302                           
  7303                           
  7304                           ;SlaveLiofilizadorVer1.c: 618:              if(usart_protocol.value[0]==0)
  7305  042B  1683               	bsf	3,5	;RP0=1, select bank3
  7306  042C  1703               	bsf	3,6	;RP1=1, select bank3
  7307  042D  083F               	movf	(_usart_protocol^(0+384)+6),w
  7308  042E  1D03               	btfss	3,2
  7309  042F  2C3B               	goto	l7472
  7310                           
  7311                           ;SlaveLiofilizadorVer1.c: 619:                 {;SlaveLiofilizadorVer1.c: 620:          
      +                                 if(!usart_protocol.value[1])
  7312  0430  0840               	movf	(_usart_protocol^(0+384)+7),w
  7313  0431  1D03               	btfss	3,2
  7314  0432  2C37               	goto	l288
  7315                           
  7316                           ;SlaveLiofilizadorVer1.c: 621:                    PORTCbits.RC0=0;
  7317  0433  1283               	bcf	3,5	;RP0=0, select bank0
  7318  0434  1303               	bcf	3,6	;RP1=0, select bank0
  7319  0435  1007               	bcf	7,0	;volatile
  7320  0436  291A               	goto	L7
  7321  0437                     l288:	
  7322                           ;SlaveLiofilizadorVer1.c: 622:                 else
  7323                           
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 623:                    PORTCbits.RC0=1;
  7326  0437  1283               	bcf	3,5	;RP0=0, select bank0
  7327  0438  1303               	bcf	3,6	;RP1=0, select bank0
  7328  0439  1407               	bsf	7,0	;volatile
  7329  043A  291A               	goto	L7
  7330  043B                     l7472:	
  7331  043B  033F               	decf	(_usart_protocol^(0+384)+6),w
  7332  043C  1D03               	btfss	3,2
  7333  043D  291A               	goto	L7
  7334                           
  7335                           ;SlaveLiofilizadorVer1.c: 626:                      {;SlaveLiofilizadorVer1.c: 627:     
      +                                            if(!usart_protocol.value[1])
  7336  043E  0840               	movf	(_usart_protocol^(0+384)+7),w
  7337  043F  1D03               	btfss	3,2
  7338  0440  2C45               	goto	l292
  7339                           
  7340                           ;SlaveLiofilizadorVer1.c: 628:                          PORTCbits.RC1=0;
  7341  0441  1283               	bcf	3,5	;RP0=0, select bank0
  7342  0442  1303               	bcf	3,6	;RP1=0, select bank0
  7343  0443  1087               	bcf	7,1	;volatile
  7344  0444  291A               	goto	L7
  7345  0445                     l292:	
  7346                           ;SlaveLiofilizadorVer1.c: 629:                       else
  7347                           
  7348                           
  7349                           ;SlaveLiofilizadorVer1.c: 630:                          PORTCbits.RC1=1;
  7350  0445  1283               	bcf	3,5	;RP0=0, select bank0
  7351  0446  1303               	bcf	3,6	;RP1=0, select bank0
  7352  0447  1487               	bsf	7,1	;volatile
  7353  0448  291A               	goto	L7
  7354  0449                     l7484:	
  7355                           ;SlaveLiofilizadorVer1.c: 632:              Send_To_MB(3);
  7356                           
  7357  0449  1703               	bsf	3,6	;RP1=1, select bank3
  7358  044A  083D               	movf	(_usart_protocol^(0+384)+4),w
  7359  044B  1283               	bcf	3,5	;RP0=0, select bank0
  7360  044C  1303               	bcf	3,6	;RP1=0, select bank0
  7361  044D  00DE               	movwf	??_Decodify_Command
  7362  044E  01DF               	clrf	??_Decodify_Command+1
  7363                           
  7364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7365                           ; Switch size 1, requested type "simple"
  7366                           ; Number of cases is 1, Range of values is 0 to 0
  7367                           ; switch strategies available:
  7368                           ; Name         Instructions Cycles
  7369                           ; simple_byte            4     3 (average)
  7370                           ; direct_byte           11     8 (fixed)
  7371                           ; jumptable            260     6 (fixed)
  7372                           ;	Chosen strategy is simple_byte
  7373  044F  085F               	movf	??_Decodify_Command+1,w
  7374  0450  3A00               	xorlw	0	; case 0
  7375  0451  1903               	skipnz
  7376  0452  2C54               	goto	l7642
  7377  0453  2CA1               	goto	l294
  7378  0454                     l7642:	
  7379                           
  7380                           ; Switch size 1, requested type "simple"
  7381                           ; Number of cases is 25, Range of values is 2 to 43
  7382                           ; switch strategies available:
  7383                           ; Name         Instructions Cycles
  7384                           ; simple_byte           76    39 (average)
  7385                           ; direct_byte          137    11 (fixed)
  7386                           ; jumptable            263     9 (fixed)
  7387                           ;	Chosen strategy is simple_byte
  7388  0454  085E               	movf	??_Decodify_Command,w
  7389  0455  3A02               	xorlw	2	; case 2
  7390  0456  1903               	skipnz
  7391  0457  28D5               	goto	l7300
  7392  0458  3A01               	xorlw	1	; case 3
  7393  0459  1903               	skipnz
  7394  045A  28FB               	goto	l7308
  7395  045B  3A0B               	xorlw	11	; case 8
  7396  045C  1903               	skipnz
  7397  045D  290A               	goto	l7312
  7398  045E  3A01               	xorlw	1	; case 9
  7399  045F  1903               	skipnz
  7400  0460  2924               	goto	l7316
  7401  0461  3A03               	xorlw	3	; case 10
  7402  0462  1903               	skipnz
  7403  0463  293C               	goto	l7322
  7404  0464  3A01               	xorlw	1	; case 11
  7405  0465  1903               	skipnz
  7406  0466  296D               	goto	l7332
  7407  0467  3A07               	xorlw	7	; case 12
  7408  0468  1903               	skipnz
  7409  0469  298D               	goto	l7338
  7410  046A  3A01               	xorlw	1	; case 13
  7411  046B  1903               	skipnz
  7412  046C  299A               	goto	l7344
  7413  046D  3A1C               	xorlw	28	; case 17
  7414  046E  1903               	skipnz
  7415  046F  29B5               	goto	l7350
  7416  0470  3A03               	xorlw	3	; case 18
  7417  0471  1903               	skipnz
  7418  0472  29D2               	goto	l7356
  7419  0473  3A01               	xorlw	1	; case 19
  7420  0474  1903               	skipnz
  7421  0475  29F9               	goto	l7362
  7422  0476  3A07               	xorlw	7	; case 20
  7423  0477  1903               	skipnz
  7424  0478  2A2A               	goto	l7370
  7425  0479  3A01               	xorlw	1	; case 21
  7426  047A  1903               	skipnz
  7427  047B  2AAC               	goto	l7390
  7428  047C  3A03               	xorlw	3	; case 22
  7429  047D  1903               	skipnz
  7430  047E  2AC9               	goto	l7396
  7431  047F  3A01               	xorlw	1	; case 23
  7432  0480  1903               	skipnz
  7433  0481  2A87               	goto	l7384
  7434  0482  3A0F               	xorlw	15	; case 24
  7435  0483  1903               	skipnz
  7436  0484  2A48               	goto	l7376
  7437  0485  3A01               	xorlw	1	; case 25
  7438  0486  1903               	skipnz
  7439  0487  2AED               	goto	l7400
  7440  0488  3A03               	xorlw	3	; case 26
  7441  0489  1903               	skipnz
  7442  048A  286D               	goto	l7284
  7443  048B  3A04               	xorlw	4	; case 30
  7444  048C  1903               	skipnz
  7445  048D  2BC4               	goto	l7442
  7446  048E  3A01               	xorlw	1	; case 31
  7447  048F  1903               	skipnz
  7448  0490  2AFE               	goto	l7406
  7449  0491  3A3F               	xorlw	63	; case 32
  7450  0492  1903               	skipnz
  7451  0493  2BDE               	goto	l7448
  7452  0494  3A01               	xorlw	1	; case 33
  7453  0495  1903               	skipnz
  7454  0496  2BEF               	goto	l7454
  7455  0497  3A05               	xorlw	5	; case 36
  7456  0498  1903               	skipnz
  7457  0499  2C0B               	goto	l7460
  7458  049A  3A02               	xorlw	2	; case 38
  7459  049B  1903               	skipnz
  7460  049C  2C2B               	goto	l7466
  7461  049D  3A0D               	xorlw	13	; case 43
  7462  049E  1903               	skipnz
  7463  049F  285E               	goto	l7280
  7464  04A0  2CA1               	goto	l294
  7465  04A1                     l294:	
  7466  04A1  0008               	return
  7467  04A2                     __end_of_Decodify_Command:	
  7468                           
  7469                           	psect	text17
  7470  1A09                     __ptext17:	
  7471 ;; *************** function _strcpy *****************
  7472 ;; Defined at:
  7473 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  to              1    wreg     PTR unsigned char 
  7476 ;;		 -> texto(16), 
  7477 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7478 ;;		 -> STR_2(1), 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7481 ;;		 -> texto(16), 
  7482 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7483 ;;		 -> texto(16), 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      PTR unsigned char 
  7486 ;; Registers used:
  7487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7488 ;; Tracked objects:
  7489 ;;		On entry : B00/0
  7490 ;;		On exit  : B00/800
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7493 ;;      Params:         0       1       0       0       0
  7494 ;;      Locals:         0       2       0       0       0
  7495 ;;      Temps:          0       1       0       0       0
  7496 ;;      Totals:         0       4       0       0       0
  7497 ;;Total ram usage:        4 bytes
  7498 ;; Hardware stack levels used:    2
  7499 ;; Hardware stack levels required when called:    1
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_Decodify_Command
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           
  7508                           ;psect for function _strcpy
  7509  1A09                     _strcpy:	
  7510                           
  7511                           ;incstack = 0
  7512                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7513                           ;strcpy@to stored from wreg
  7514  1A09  00A2               	movwf	strcpy@to
  7515  1A0A  0822               	movf	strcpy@to,w
  7516  1A0B  00A1               	movwf	??_strcpy
  7517  1A0C  0821               	movf	??_strcpy,w
  7518  1A0D  00A3               	movwf	strcpy@cp
  7519  1A0E                     l6836:	
  7520  1A0E  0820               	movf	strcpy@from,w
  7521  1A0F  0084               	movwf	4
  7522  1A10  160A  118A  200A  160A  158A  	fcall	stringdir
  7523  1A15  00A1               	movwf	??_strcpy
  7524  1A16  0823               	movf	strcpy@cp,w
  7525  1A17  0084               	movwf	4
  7526  1A18  0821               	movf	??_strcpy,w
  7527  1A19  1783               	bsf	3,7	;select IRP bank2
  7528  1A1A  0080               	movwf	0
  7529  1A1B  0800               	movf	0,w
  7530  1A1C  1903               	btfsc	3,2
  7531  1A1D  0008               	return
  7532  1A1E  3001               	movlw	1
  7533  1A1F  00A1               	movwf	??_strcpy
  7534  1A20  0821               	movf	??_strcpy,w
  7535  1A21  07A3               	addwf	strcpy@cp,f
  7536  1A22  3001               	movlw	1
  7537  1A23  00A1               	movwf	??_strcpy
  7538  1A24  0821               	movf	??_strcpy,w
  7539  1A25  07A0               	addwf	strcpy@from,f
  7540  1A26  2A0E               	goto	l6836
  7541  1A27                     __end_of_strcpy:	
  7542                           
  7543                           	psect	text18
  7544  0800                     __ptext18:	
  7545 ;; *************** function _strcat *****************
  7546 ;; Defined at:
  7547 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  to              1    wreg     PTR unsigned char 
  7550 ;;		 -> texto(16), 
  7551 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7552 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7553 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7556 ;;		 -> texto(16), 
  7557 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7558 ;;		 -> texto(16), 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      PTR unsigned char 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7563 ;; Tracked objects:
  7564 ;;		On entry : B00/800
  7565 ;;		On exit  : B00/800
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7568 ;;      Params:         0       2       0       0       0
  7569 ;;      Locals:         0       2       0       0       0
  7570 ;;      Temps:          0       1       0       0       0
  7571 ;;      Totals:         0       5       0       0       0
  7572 ;;Total ram usage:        5 bytes
  7573 ;; Hardware stack levels used:    2
  7574 ;; Hardware stack levels required when called:    1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_Decodify_Command
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function _strcat
  7584  0800                     _strcat:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7588                           ;strcat@to stored from wreg
  7589  0800  00A4               	movwf	strcat@to
  7590  0801  0824               	movf	strcat@to,w
  7591  0802  00A2               	movwf	??_strcat
  7592  0803  0822               	movf	??_strcat,w
  7593  0804  00A3               	movwf	strcat@cp
  7594  0805                     l6842:	
  7595  0805  0823               	movf	strcat@cp,w
  7596  0806  0084               	movwf	4
  7597  0807  0800               	movf	0,w
  7598  0808  1903               	btfsc	3,2
  7599  0809  2819               	goto	l6848
  7600  080A  3001               	movlw	1
  7601  080B  00A2               	movwf	??_strcat
  7602  080C  0822               	movf	??_strcat,w
  7603  080D  07A3               	addwf	strcat@cp,f
  7604  080E  2805               	goto	l6842
  7605  080F                     l6844:	
  7606  080F  3001               	movlw	1
  7607  0810  00A2               	movwf	??_strcat
  7608  0811  0822               	movf	??_strcat,w
  7609  0812  07A3               	addwf	strcat@cp,f
  7610  0813  3001               	movlw	1
  7611  0814  07A0               	addwf	strcat@from,f
  7612  0815  1803               	skipnc
  7613  0816  0AA1               	incf	strcat@from+1,f
  7614  0817  3000               	movlw	0
  7615  0818  07A1               	addwf	strcat@from+1,f
  7616  0819                     l6848:	
  7617  0819  0821               	movf	strcat@from+1,w
  7618  081A  00FF               	movwf	127
  7619  081B  0820               	movf	strcat@from,w
  7620  081C  0084               	movwf	4
  7621  081D  160A  118A  2000  120A  158A  	fcall	stringtab
  7622  0822  00A2               	movwf	??_strcat
  7623  0823  0823               	movf	strcat@cp,w
  7624  0824  0084               	movwf	4
  7625  0825  0822               	movf	??_strcat,w
  7626  0826  1783               	bsf	3,7	;select IRP bank2
  7627  0827  0080               	movwf	0
  7628  0828  0800               	movf	0,w
  7629  0829  1903               	btfsc	3,2
  7630  082A  0008               	return
  7631  082B  280F               	goto	l6844
  7632  082C                     __end_of_strcat:	
  7633                           
  7634                           	psect	text19
  7635  1A85                     __ptext19:	
  7636 ;; *************** function _itoa *****************
  7637 ;; Defined at:
  7638 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  buf             1    wreg     PTR unsigned char 
  7641 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7642 ;;  val             2   17[BANK0 ] int 
  7643 ;;  base            2   19[BANK0 ] int 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7646 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7647 ;;  cp              1    0        PTR unsigned char 
  7648 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      PTR unsigned char 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 300/0
  7655 ;;		On exit  : B00/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7658 ;;      Params:         0       4       0       0       0
  7659 ;;      Locals:         0       2       0       0       0
  7660 ;;      Temps:          0       1       0       0       0
  7661 ;;      Totals:         0       7       0       0       0
  7662 ;;Total ram usage:        7 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    3
  7665 ;; This function calls:
  7666 ;;		_utoa
  7667 ;; This function is called by:
  7668 ;;		_Decodify_Command
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function _itoa
  7674  1A85                     _itoa:	
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7678                           ;itoa@buf stored from wreg
  7679  1A85  00B7               	movwf	itoa@buf
  7680  1A86  1FB2               	btfss	itoa@val+1,7
  7681  1A87  2A98               	goto	l6828
  7682  1A88  302D               	movlw	45
  7683  1A89  00B5               	movwf	??_itoa
  7684  1A8A  0837               	movf	itoa@buf,w
  7685  1A8B  0084               	movwf	4
  7686  1A8C  0835               	movf	??_itoa,w
  7687  1A8D  1383               	bcf	3,7	;select IRP bank0
  7688  1A8E  0080               	movwf	0
  7689  1A8F  3001               	movlw	1
  7690  1A90  00B5               	movwf	??_itoa
  7691  1A91  0835               	movf	??_itoa,w
  7692  1A92  07B7               	addwf	itoa@buf,f
  7693  1A93  09B1               	comf	itoa@val,f
  7694  1A94  09B2               	comf	itoa@val+1,f
  7695  1A95  0AB1               	incf	itoa@val,f
  7696  1A96  1903               	skipnz
  7697  1A97  0AB2               	incf	itoa@val+1,f
  7698  1A98                     l6828:	
  7699  1A98  0832               	movf	itoa@val+1,w
  7700  1A99  00A9               	movwf	utoa@val+1
  7701  1A9A  0831               	movf	itoa@val,w
  7702  1A9B  00A8               	movwf	utoa@val
  7703  1A9C  0834               	movf	itoa@base+1,w
  7704  1A9D  00AB               	movwf	utoa@base+1
  7705  1A9E  0833               	movf	itoa@base,w
  7706  1A9F  00AA               	movwf	utoa@base
  7707  1AA0  0837               	movf	itoa@buf,w
  7708  1AA1  120A  118A  2797   	fcall	_utoa
  7709  1AA4  0008               	return
  7710  1AA5                     __end_of_itoa:	
  7711                           
  7712                           	psect	text20
  7713  0797                     __ptext20:	
  7714 ;; *************** function _utoa *****************
  7715 ;; Defined at:
  7716 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  buf             1    wreg     PTR unsigned char 
  7719 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7720 ;;  val             2    8[BANK0 ] unsigned int 
  7721 ;;  base            2   10[BANK0 ] int 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7724 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7725 ;;  v               2   13[BANK0 ] unsigned int 
  7726 ;;  c               1   15[BANK0 ] unsigned char 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      PTR unsigned char 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 300/0
  7733 ;;		On exit  : B00/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7736 ;;      Params:         0       4       0       0       0
  7737 ;;      Locals:         0       4       0       0       0
  7738 ;;      Temps:          0       1       0       0       0
  7739 ;;      Totals:         0       9       0       0       0
  7740 ;;Total ram usage:        9 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    2
  7743 ;; This function calls:
  7744 ;;		___lwdiv
  7745 ;;		___lwmod
  7746 ;; This function is called by:
  7747 ;;		_itoa
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _utoa
  7753  0797                     _utoa:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7757                           ;utoa@buf stored from wreg
  7758  0797  00B0               	movwf	utoa@buf
  7759  0798  0829               	movf	utoa@val+1,w
  7760  0799  00AE               	movwf	utoa@v+1
  7761  079A  0828               	movf	utoa@val,w
  7762  079B  00AD               	movwf	utoa@v
  7763  079C                     l6476:	
  7764  079C  082B               	movf	utoa@base+1,w
  7765  079D  00A1               	movwf	___lwdiv@divisor+1
  7766  079E  082A               	movf	utoa@base,w
  7767  079F  00A0               	movwf	___lwdiv@divisor
  7768  07A0  082E               	movf	utoa@v+1,w
  7769  07A1  00A3               	movwf	___lwdiv@dividend+1
  7770  07A2  082D               	movf	utoa@v,w
  7771  07A3  00A2               	movwf	___lwdiv@dividend
  7772  07A4  160A  158A  25AD  120A  118A  	fcall	___lwdiv
  7773  07A9  0821               	movf	?___lwdiv+1,w
  7774  07AA  00AE               	movwf	utoa@v+1
  7775  07AB  0820               	movf	?___lwdiv,w
  7776  07AC  00AD               	movwf	utoa@v
  7777  07AD  3001               	movlw	1
  7778  07AE  00AC               	movwf	??_utoa
  7779  07AF  082C               	movf	??_utoa,w
  7780  07B0  07B0               	addwf	utoa@buf,f
  7781  07B1  082D               	movf	utoa@v,w
  7782  07B2  042E               	iorwf	utoa@v+1,w
  7783  07B3  1D03               	btfss	3,2
  7784  07B4  2F9C               	goto	l6476
  7785  07B5  0830               	movf	utoa@buf,w
  7786  07B6  0084               	movwf	4
  7787  07B7  1383               	bcf	3,7	;select IRP bank0
  7788  07B8  0180               	clrf	0
  7789  07B9  3001               	movlw	1
  7790  07BA  02B0               	subwf	utoa@buf,f
  7791  07BB                     l6486:	
  7792  07BB  082B               	movf	utoa@base+1,w
  7793  07BC  00A1               	movwf	___lwmod@divisor+1
  7794  07BD  082A               	movf	utoa@base,w
  7795  07BE  00A0               	movwf	___lwmod@divisor
  7796  07BF  0829               	movf	utoa@val+1,w
  7797  07C0  00A3               	movwf	___lwmod@dividend+1
  7798  07C1  0828               	movf	utoa@val,w
  7799  07C2  00A2               	movwf	___lwmod@dividend
  7800  07C3  160A  158A  2465  120A  118A  	fcall	___lwmod
  7801  07C8  0820               	movf	?___lwmod,w
  7802  07C9  00AC               	movwf	??_utoa
  7803  07CA  082C               	movf	??_utoa,w
  7804  07CB  00AF               	movwf	utoa@c
  7805  07CC  082B               	movf	utoa@base+1,w
  7806  07CD  00A1               	movwf	___lwdiv@divisor+1
  7807  07CE  082A               	movf	utoa@base,w
  7808  07CF  00A0               	movwf	___lwdiv@divisor
  7809  07D0  0829               	movf	utoa@val+1,w
  7810  07D1  00A3               	movwf	___lwdiv@dividend+1
  7811  07D2  0828               	movf	utoa@val,w
  7812  07D3  00A2               	movwf	___lwdiv@dividend
  7813  07D4  160A  158A  25AD  120A  118A  	fcall	___lwdiv
  7814  07D9  0821               	movf	?___lwdiv+1,w
  7815  07DA  00A9               	movwf	utoa@val+1
  7816  07DB  0820               	movf	?___lwdiv,w
  7817  07DC  00A8               	movwf	utoa@val
  7818  07DD  300A               	movlw	10
  7819  07DE  022F               	subwf	utoa@c,w
  7820  07DF  1C03               	skipc
  7821  07E0  2FE5               	goto	l1405
  7822  07E1  3007               	movlw	7
  7823  07E2  00AC               	movwf	??_utoa
  7824  07E3  082C               	movf	??_utoa,w
  7825  07E4  07AF               	addwf	utoa@c,f
  7826  07E5                     l1405:	
  7827  07E5  3030               	movlw	48
  7828  07E6  00AC               	movwf	??_utoa
  7829  07E7  082C               	movf	??_utoa,w
  7830  07E8  07AF               	addwf	utoa@c,f
  7831  07E9  082F               	movf	utoa@c,w
  7832  07EA  00AC               	movwf	??_utoa
  7833  07EB  0830               	movf	utoa@buf,w
  7834  07EC  0084               	movwf	4
  7835  07ED  082C               	movf	??_utoa,w
  7836  07EE  1383               	bcf	3,7	;select IRP bank0
  7837  07EF  0080               	movwf	0
  7838  07F0  3001               	movlw	1
  7839  07F1  02B0               	subwf	utoa@buf,f
  7840  07F2  0828               	movf	utoa@val,w
  7841  07F3  0429               	iorwf	utoa@val+1,w
  7842  07F4  1D03               	btfss	3,2
  7843  07F5  2FBB               	goto	l6486
  7844                           
  7845                           ;	Return value of _utoa is never used
  7846  07F6  3001               	movlw	1
  7847  07F7  00AC               	movwf	??_utoa
  7848  07F8  082C               	movf	??_utoa,w
  7849  07F9  07B0               	addwf	utoa@buf,f
  7850  07FA  0008               	return
  7851  07FB                     __end_of_utoa:	
  7852                           
  7853                           	psect	text21
  7854  1C65                     __ptext21:	
  7855 ;; *************** function ___lwmod *****************
  7856 ;; Defined at:
  7857 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  divisor         2    0[BANK0 ] unsigned int 
  7860 ;;  dividend        2    2[BANK0 ] unsigned int 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  counter         1    5[BANK0 ] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  2    0[BANK0 ] unsigned int 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0
  7867 ;; Tracked objects:
  7868 ;;		On entry : 300/0
  7869 ;;		On exit  : 300/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7872 ;;      Params:         0       4       0       0       0
  7873 ;;      Locals:         0       1       0       0       0
  7874 ;;      Temps:          0       1       0       0       0
  7875 ;;      Totals:         0       6       0       0       0
  7876 ;;Total ram usage:        6 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_utoa
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function ___lwmod
  7888  1C65                     ___lwmod:	
  7889                           
  7890                           ;incstack = 0
  7891                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7892  1C65  0820               	movf	___lwmod@divisor,w
  7893  1C66  0421               	iorwf	___lwmod@divisor+1,w
  7894  1C67  1903               	btfsc	3,2
  7895  1C68  2C92               	goto	l5844
  7896  1C69  01A5               	clrf	___lwmod@counter
  7897  1C6A  0AA5               	incf	___lwmod@counter,f
  7898  1C6B                     l5834:	
  7899  1C6B  1BA1               	btfsc	___lwmod@divisor+1,7
  7900  1C6C  2C79               	goto	l5836
  7901  1C6D  3001               	movlw	1
  7902  1C6E                     u5615:	
  7903  1C6E  1003               	clrc
  7904  1C6F  0DA0               	rlf	___lwmod@divisor,f
  7905  1C70  0DA1               	rlf	___lwmod@divisor+1,f
  7906  1C71  3EFF               	addlw	-1
  7907  1C72  1D03               	skipz
  7908  1C73  2C6E               	goto	u5615
  7909  1C74  3001               	movlw	1
  7910  1C75  00A4               	movwf	??___lwmod
  7911  1C76  0824               	movf	??___lwmod,w
  7912  1C77  07A5               	addwf	___lwmod@counter,f
  7913  1C78  2C6B               	goto	l5834
  7914  1C79                     l5836:	
  7915  1C79  0821               	movf	___lwmod@divisor+1,w
  7916  1C7A  0223               	subwf	___lwmod@dividend+1,w
  7917  1C7B  1D03               	skipz
  7918  1C7C  2C7F               	goto	u5635
  7919  1C7D  0820               	movf	___lwmod@divisor,w
  7920  1C7E  0222               	subwf	___lwmod@dividend,w
  7921  1C7F                     u5635:	
  7922  1C7F  1C03               	skipc
  7923  1C80  2C87               	goto	l5840
  7924  1C81  0820               	movf	___lwmod@divisor,w
  7925  1C82  02A2               	subwf	___lwmod@dividend,f
  7926  1C83  0821               	movf	___lwmod@divisor+1,w
  7927  1C84  1C03               	skipc
  7928  1C85  03A3               	decf	___lwmod@dividend+1,f
  7929  1C86  02A3               	subwf	___lwmod@dividend+1,f
  7930  1C87                     l5840:	
  7931  1C87  3001               	movlw	1
  7932  1C88                     u5645:	
  7933  1C88  1003               	clrc
  7934  1C89  0CA1               	rrf	___lwmod@divisor+1,f
  7935  1C8A  0CA0               	rrf	___lwmod@divisor,f
  7936  1C8B  3EFF               	addlw	-1
  7937  1C8C  1D03               	skipz
  7938  1C8D  2C88               	goto	u5645
  7939  1C8E  3001               	movlw	1
  7940  1C8F  02A5               	subwf	___lwmod@counter,f
  7941  1C90  1D03               	btfss	3,2
  7942  1C91  2C79               	goto	l5836
  7943  1C92                     l5844:	
  7944  1C92  0823               	movf	___lwmod@dividend+1,w
  7945  1C93  00A1               	movwf	?___lwmod+1
  7946  1C94  0822               	movf	___lwmod@dividend,w
  7947  1C95  00A0               	movwf	?___lwmod
  7948  1C96  0008               	return
  7949  1C97                     __end_of___lwmod:	
  7950                           
  7951                           	psect	text22
  7952  1F45                     __ptext22:	
  7953 ;; *************** function _USART_to_Protocol *****************
  7954 ;; Defined at:
  7955 ;;		line 77 in file "usart.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  usart_protoc    1    wreg     PTR struct .
  7958 ;;		 -> usart_protocol(16), 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7961 ;;		 -> usart_protocol(16), 
  7962 ;;  i               2    2[BANK0 ] int 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : 300/100
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7972 ;;      Params:         0       0       0       0       0
  7973 ;;      Locals:         0       3       0       0       0
  7974 ;;      Temps:          0       2       0       0       0
  7975 ;;      Totals:         0       5       0       0       0
  7976 ;;Total ram usage:        5 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    1
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_Decodify_Command
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           
  7987                           ;psect for function _USART_to_Protocol
  7988  1F45                     _USART_to_Protocol:	
  7989                           
  7990                           ;incstack = 0
  7991                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7992                           ;USART_to_Protocol@usart_protocol stored from wreg
  7993  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  7994  1F46  00A4               	movwf	USART_to_Protocol@usart_protocol
  7995                           
  7996                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7997  1F47  0824               	movf	USART_to_Protocol@usart_protocol,w
  7998  1F48  0084               	movwf	4
  7999  1F49  1683               	bsf	3,5	;RP0=1, select bank3
  8000  1F4A  1703               	bsf	3,6	;RP1=1, select bank3
  8001  1F4B  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8002  1F4C  1783               	bsf	3,7	;select IRP bank2
  8003  1F4D  0080               	movwf	0
  8004  1F4E  0A84               	incf	4,f
  8005  1F4F  0810               	movf	_usart_buffer^(0+384),w	;volatile
  8006  1F50  0080               	movwf	0
  8007                           
  8008                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8009  1F51  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8010  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  8011  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  8012  1F54  00A0               	movwf	??_USART_to_Protocol
  8013  1F55  0824               	movf	USART_to_Protocol@usart_protocol,w
  8014  1F56  3E02               	addlw	2
  8015  1F57  0084               	movwf	4
  8016  1F58  0820               	movf	??_USART_to_Protocol,w
  8017  1F59  0080               	movwf	0
  8018                           
  8019                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8020  1F5A  1683               	bsf	3,5	;RP0=1, select bank3
  8021  1F5B  1703               	bsf	3,6	;RP1=1, select bank3
  8022  1F5C  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8023  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  8024  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  8025  1F5F  00A0               	movwf	??_USART_to_Protocol
  8026  1F60  0824               	movf	USART_to_Protocol@usart_protocol,w
  8027  1F61  3E03               	addlw	3
  8028  1F62  0084               	movwf	4
  8029  1F63  0820               	movf	??_USART_to_Protocol,w
  8030  1F64  0080               	movwf	0
  8031                           
  8032                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8033  1F65  1683               	bsf	3,5	;RP0=1, select bank3
  8034  1F66  1703               	bsf	3,6	;RP1=1, select bank3
  8035  1F67  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8036  1F68  1283               	bcf	3,5	;RP0=0, select bank0
  8037  1F69  1303               	bcf	3,6	;RP1=0, select bank0
  8038  1F6A  00A0               	movwf	??_USART_to_Protocol
  8039  1F6B  0824               	movf	USART_to_Protocol@usart_protocol,w
  8040  1F6C  3E04               	addlw	4
  8041  1F6D  0084               	movwf	4
  8042  1F6E  0820               	movf	??_USART_to_Protocol,w
  8043  1F6F  0080               	movwf	0
  8044                           
  8045                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8046  1F70  1683               	bsf	3,5	;RP0=1, select bank3
  8047  1F71  1703               	bsf	3,6	;RP1=1, select bank3
  8048  1F72  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8049  1F73  1283               	bcf	3,5	;RP0=0, select bank0
  8050  1F74  1303               	bcf	3,6	;RP1=0, select bank0
  8051  1F75  00A0               	movwf	??_USART_to_Protocol
  8052  1F76  0824               	movf	USART_to_Protocol@usart_protocol,w
  8053  1F77  3E05               	addlw	5
  8054  1F78  0084               	movwf	4
  8055  1F79  0820               	movf	??_USART_to_Protocol,w
  8056  1F7A  0080               	movwf	0
  8057                           
  8058                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8059  1F7B  01A2               	clrf	USART_to_Protocol@i
  8060  1F7C  01A3               	clrf	USART_to_Protocol@i+1
  8061  1F7D                     l6564:	
  8062  1F7D  0824               	movf	USART_to_Protocol@usart_protocol,w
  8063  1F7E  3E05               	addlw	5
  8064  1F7F  0084               	movwf	4
  8065  1F80  0823               	movf	USART_to_Protocol@i+1,w
  8066  1F81  3A80               	xorlw	128
  8067  1F82  00A0               	movwf	??_USART_to_Protocol
  8068  1F83  3080               	movlw	128
  8069  1F84  0220               	subwf	??_USART_to_Protocol,w
  8070  1F85  1D03               	skipz
  8071  1F86  2F89               	goto	u6965
  8072  1F87  0800               	movf	0,w
  8073  1F88  0222               	subwf	USART_to_Protocol@i,w
  8074  1F89                     u6965:	
  8075  1F89  1803               	btfsc	3,0
  8076  1F8A  0008               	return
  8077                           
  8078                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8079  1F8B  1283               	bcf	3,5	;RP0=0, select bank0
  8080  1F8C  1303               	bcf	3,6	;RP1=0, select bank0
  8081  1F8D  0822               	movf	USART_to_Protocol@i,w
  8082  1F8E  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8083  1F8F  0084               	movwf	4
  8084  1F90  1783               	bsf	3,7	;select IRP bank3
  8085  1F91  0800               	movf	0,w
  8086  1F92  00A0               	movwf	??_USART_to_Protocol
  8087  1F93  0822               	movf	USART_to_Protocol@i,w
  8088  1F94  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8089  1F95  00A1               	movwf	??_USART_to_Protocol+1
  8090  1F96  0821               	movf	??_USART_to_Protocol+1,w
  8091  1F97  3E06               	addlw	6
  8092  1F98  0084               	movwf	4
  8093  1F99  0820               	movf	??_USART_to_Protocol,w
  8094  1F9A  0080               	movwf	0
  8095  1F9B  3001               	movlw	1
  8096  1F9C  07A2               	addwf	USART_to_Protocol@i,f
  8097  1F9D  1803               	skipnc
  8098  1F9E  0AA3               	incf	USART_to_Protocol@i+1,f
  8099  1F9F  3000               	movlw	0
  8100  1FA0  07A3               	addwf	USART_to_Protocol@i+1,f
  8101  1FA1  2F7D               	goto	l6564
  8102  1FA2                     __end_of_USART_to_Protocol:	
  8103                           
  8104                           	psect	text23
  8105  1B0C                     __ptext23:	
  8106 ;; *************** function _USART_put_buffer *****************
  8107 ;; Defined at:
  8108 ;;		line 99 in file "usart.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  vetor           1    wreg     PTR unsigned char 
  8111 ;;		 -> buffer(64), 
  8112 ;;  size            2    1[BANK0 ] unsigned int 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8115 ;;		 -> buffer(64), 
  8116 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8117 ;;		 -> USART_put_buffer@vetor(1), 
  8118 ;;  loop            1    6[BANK0 ] unsigned char 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 300/0
  8125 ;;		On exit  : 300/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8128 ;;      Params:         0       2       0       0       0
  8129 ;;      Locals:         0       3       0       0       0
  8130 ;;      Temps:          0       2       0       0       0
  8131 ;;      Totals:         0       7       0       0       0
  8132 ;;Total ram usage:        7 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    2
  8135 ;; This function calls:
  8136 ;;		_USART_putc
  8137 ;; This function is called by:
  8138 ;;		_Decodify_Command
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           
  8143                           ;psect for function _USART_put_buffer
  8144  1B0C                     _USART_put_buffer:	
  8145                           
  8146                           ;incstack = 0
  8147                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8148                           ;USART_put_buffer@vetor stored from wreg
  8149  1B0C  00A5               	movwf	USART_put_buffer@vetor
  8150                           
  8151                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8152  1B0D  01A6               	clrf	USART_put_buffer@loop
  8153                           
  8154                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8155  1B0E  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8156  1B0F  00A3               	movwf	??_USART_put_buffer
  8157  1B10  0823               	movf	??_USART_put_buffer,w
  8158  1B11  00A7               	movwf	USART_put_buffer@ptr
  8159  1B12                     l6620:	
  8160                           ;usart.c: 105:     while(loop<size)
  8161                           
  8162                           
  8163                           ;usart.c: 105:     while(loop<size)
  8164  1B12  0826               	movf	USART_put_buffer@loop,w
  8165  1B13  00A3               	movwf	??_USART_put_buffer
  8166  1B14  01A4               	clrf	??_USART_put_buffer+1
  8167  1B15  0822               	movf	USART_put_buffer@size+1,w
  8168  1B16  0224               	subwf	??_USART_put_buffer+1,w
  8169  1B17  1D03               	skipz
  8170  1B18  2B1B               	goto	u6995
  8171  1B19  0821               	movf	USART_put_buffer@size,w
  8172  1B1A  0223               	subwf	??_USART_put_buffer,w
  8173  1B1B                     u6995:	
  8174  1B1B  1803               	btfsc	3,0
  8175  1B1C  0008               	return
  8176                           
  8177                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8178  1B1D  0827               	movf	USART_put_buffer@ptr,w
  8179  1B1E  0084               	movwf	4
  8180  1B1F  1383               	bcf	3,7	;select IRP bank0
  8181  1B20  0800               	movf	0,w
  8182  1B21  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8183                           
  8184                           ;usart.c: 108:         ptr++;
  8185  1B26  3001               	movlw	1
  8186  1B27  1283               	bcf	3,5	;RP0=0, select bank0
  8187  1B28  00A3               	movwf	??_USART_put_buffer
  8188  1B29  0823               	movf	??_USART_put_buffer,w
  8189  1B2A  07A7               	addwf	USART_put_buffer@ptr,f
  8190                           
  8191                           ;usart.c: 109:         loop++;
  8192  1B2B  3001               	movlw	1
  8193  1B2C  00A3               	movwf	??_USART_put_buffer
  8194  1B2D  0823               	movf	??_USART_put_buffer,w
  8195  1B2E  07A6               	addwf	USART_put_buffer@loop,f
  8196  1B2F  2B12               	goto	l6620
  8197  1B30                     __end_of_USART_put_buffer:	
  8198                           
  8199                           	psect	text24
  8200  1B58                     __ptext24:	
  8201 ;; *************** function _Send_To_MB *****************
  8202 ;; Defined at:
  8203 ;;		line 642 in file "SlaveLiofilizadorVer1.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  size            1    wreg     unsigned char 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  size            1    1[BANK0 ] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0, pclath, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 300/100
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8217 ;;      Params:         0       0       0       0       0
  8218 ;;      Locals:         0       1       0       0       0
  8219 ;;      Temps:          0       0       0       0       0
  8220 ;;      Totals:         0       1       0       0       0
  8221 ;;Total ram usage:        1 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    2
  8224 ;; This function calls:
  8225 ;;		_USART_putc
  8226 ;; This function is called by:
  8227 ;;		_Decodify_Command
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           
  8232                           ;psect for function _Send_To_MB
  8233  1B58                     _Send_To_MB:	
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8237                           ;Send_To_MB@size stored from wreg
  8238  1B58  1283               	bcf	3,5	;RP0=0, select bank0
  8239  1B59  1303               	bcf	3,6	;RP1=0, select bank0
  8240  1B5A  00A1               	movwf	Send_To_MB@size
  8241                           
  8242                           ;SlaveLiofilizadorVer1.c: 644:      USART_putc(0xAA);
  8243  1B5B  30AA               	movlw	170
  8244  1B5C  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8245                           
  8246                           ;SlaveLiofilizadorVer1.c: 645:      USART_putc(0xBB);
  8247  1B61  30BB               	movlw	187
  8248  1B62  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8249                           
  8250                           ;SlaveLiofilizadorVer1.c: 646:      USART_putc(Board_Number);
  8251  1B67  0865               	movf	_Board_Number^(0+128),w
  8252  1B68  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8253                           
  8254                           ;SlaveLiofilizadorVer1.c: 647:      USART_putc(0x00);
  8255  1B6D  3000               	movlw	0
  8256  1B6E  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8257                           
  8258                           ;SlaveLiofilizadorVer1.c: 648:      USART_putc(usart_protocol.command);
  8259  1B73  1703               	bsf	3,6	;RP1=1, select bank3
  8260  1B74  083D               	movf	(_usart_protocol^(0+384)+4),w
  8261  1B75  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8262                           
  8263                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(size);
  8264  1B7A  1283               	bcf	3,5	;RP0=0, select bank0
  8265  1B7B  0821               	movf	Send_To_MB@size,w
  8266  1B7C  160A  118A  205E   	fcall	_USART_putc
  8267  1B7F  0008               	return
  8268  1B80                     __end_of_Send_To_MB:	
  8269                           
  8270                           	psect	text25
  8271  192A                     __ptext25:	
  8272 ;; *************** function _Send_Reply_OK *****************
  8273 ;; Defined at:
  8274 ;;		line 653 in file "SlaveLiofilizadorVer1.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 300/100
  8285 ;;		On exit  : 300/100
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8288 ;;      Params:         0       0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    3
  8295 ;; This function calls:
  8296 ;;		_USART_put_string
  8297 ;; This function is called by:
  8298 ;;		_Decodify_Command
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function _Send_Reply_OK
  8304  192A                     _Send_Reply_OK:	
  8305                           
  8306                           ;SlaveLiofilizadorVer1.c: 654:      USART_put_string("OK");
  8307                           
  8308                           ;incstack = 0
  8309                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8310  192A  3048               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8311  192B  1283               	bcf	3,5	;RP0=0, select bank0
  8312  192C  00A1               	movwf	USART_put_string@vetor
  8313  192D  3080               	movlw	128
  8314  192E  00A2               	movwf	USART_put_string@vetor+1
  8315  192F  160A  158A  2497   	fcall	_USART_put_string
  8316  1932  0008               	return
  8317  1933                     __end_of_Send_Reply_OK:	
  8318                           
  8319                           	psect	text26
  8320  1C97                     __ptext26:	
  8321 ;; *************** function _USART_put_string *****************
  8322 ;; Defined at:
  8323 ;;		line 168 in file "usart.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8326 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8329 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 300/0
  8336 ;;		On exit  : 300/100
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8339 ;;      Params:         0       2       0       0       0
  8340 ;;      Locals:         0       2       0       0       0
  8341 ;;      Temps:          0       0       0       0       0
  8342 ;;      Totals:         0       4       0       0       0
  8343 ;;Total ram usage:        4 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    2
  8346 ;; This function calls:
  8347 ;;		_USART_putc
  8348 ;; This function is called by:
  8349 ;;		_Decodify_Command
  8350 ;;		_Send_Reply_OK
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           
  8355                           ;psect for function _USART_put_string
  8356  1C97                     _USART_put_string:	
  8357                           
  8358                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8359                           
  8360                           ;incstack = 0
  8361                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8362  1C97  0821               	movf	USART_put_string@vetor,w
  8363  1C98  00A3               	movwf	USART_put_string@ptr
  8364  1C99  0822               	movf	USART_put_string@vetor+1,w
  8365  1C9A  00A4               	movwf	USART_put_string@ptr+1
  8366  1C9B                     l5868:	
  8367                           ;usart.c: 172:     while(*(ptr)){
  8368                           
  8369                           
  8370                           ;usart.c: 172:     while(*(ptr)){
  8371  1C9B  0824               	movf	USART_put_string@ptr+1,w
  8372  1C9C  00FF               	movwf	127
  8373  1C9D  0823               	movf	USART_put_string@ptr,w
  8374  1C9E  0084               	movwf	4
  8375  1C9F  160A  118A  2000  160A  158A  	fcall	stringtab
  8376  1CA4  3A00               	xorlw	0
  8377  1CA5  1903               	btfsc	3,2
  8378  1CA6  2CBD               	goto	l5870
  8379                           
  8380                           ;usart.c: 173:         USART_putc(*(ptr));
  8381  1CA7  0824               	movf	USART_put_string@ptr+1,w
  8382  1CA8  00FF               	movwf	127
  8383  1CA9  0823               	movf	USART_put_string@ptr,w
  8384  1CAA  0084               	movwf	4
  8385  1CAB  160A  118A  2000  160A  158A  	fcall	stringtab
  8386  1CB0  160A  118A  205E  160A  158A  	fcall	_USART_putc
  8387                           
  8388                           ;usart.c: 174:         ptr++;
  8389  1CB5  3001               	movlw	1
  8390  1CB6  1283               	bcf	3,5	;RP0=0, select bank0
  8391  1CB7  07A3               	addwf	USART_put_string@ptr,f
  8392  1CB8  1803               	skipnc
  8393  1CB9  0AA4               	incf	USART_put_string@ptr+1,f
  8394  1CBA  3000               	movlw	0
  8395  1CBB  07A4               	addwf	USART_put_string@ptr+1,f
  8396  1CBC  2C9B               	goto	l5868
  8397  1CBD                     l5870:	
  8398                           
  8399                           ;usart.c: 176:     USART_putc(*(ptr));
  8400  1CBD  0824               	movf	USART_put_string@ptr+1,w
  8401  1CBE  00FF               	movwf	127
  8402  1CBF  0823               	movf	USART_put_string@ptr,w
  8403  1CC0  0084               	movwf	4
  8404  1CC1  160A  118A  2000  160A  158A  	fcall	stringtab
  8405  1CC6  160A  118A  205E   	fcall	_USART_putc
  8406  1CC9  0008               	return
  8407  1CCA                     __end_of_USART_put_string:	
  8408                           
  8409                           	psect	text27
  8410  106E                     __ptext27:	
  8411 ;; *************** function _Save_Log *****************
  8412 ;; Defined at:
  8413 ;;		line 1009 in file "SlaveLiofilizadorVer1.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  add_memory      4   56[BANK0 ] unsigned long 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8422 ;; Tracked objects:
  8423 ;;		On entry : 300/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8427 ;;      Params:         0       4       0       0       0
  8428 ;;      Locals:         0       0       0       0       0
  8429 ;;      Temps:          0       0       0       0       0
  8430 ;;      Totals:         0       4       0       0       0
  8431 ;;Total ram usage:        4 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; Hardware stack levels required when called:    5
  8434 ;; This function calls:
  8435 ;;		_EEPROM_24C1025_Write_Int
  8436 ;;		___flmul
  8437 ;;		___fltol
  8438 ;; This function is called by:
  8439 ;;		_Decodify_Command
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function _Save_Log
  8445  106E                     _Save_Log:	
  8446                           
  8447                           ;SlaveLiofilizadorVer1.c: 1010:      EEPROM_24C1025_Write_Int(0x00, add_memory, Vaccum0)
      +                          ;
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8451  106E  085B               	movf	Save_Log@add_memory+3,w
  8452  106F  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8453  1070  085A               	movf	Save_Log@add_memory+2,w
  8454  1071  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8455  1072  0859               	movf	Save_Log@add_memory+1,w
  8456  1073  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8457  1074  0858               	movf	Save_Log@add_memory,w
  8458  1075  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8459  1076  1683               	bsf	3,5	;RP0=1, select bank1
  8460  1077  0856               	movf	(_Vaccum0+3)^(0+128),w
  8461  1078  1283               	bcf	3,5	;RP0=0, select bank0
  8462  1079  00C6               	movwf	___fltol@f1+3
  8463  107A  1683               	bsf	3,5	;RP0=1, select bank1
  8464  107B  0855               	movf	(_Vaccum0+2)^(0+128),w
  8465  107C  1283               	bcf	3,5	;RP0=0, select bank0
  8466  107D  00C5               	movwf	___fltol@f1+2
  8467  107E  1683               	bsf	3,5	;RP0=1, select bank1
  8468  107F  0854               	movf	(_Vaccum0+1)^(0+128),w
  8469  1080  1283               	bcf	3,5	;RP0=0, select bank0
  8470  1081  00C4               	movwf	___fltol@f1+1
  8471  1082  1683               	bsf	3,5	;RP0=1, select bank1
  8472  1083  0853               	movf	_Vaccum0^(0+128),w
  8473  1084  1283               	bcf	3,5	;RP0=0, select bank0
  8474  1085  00C3               	movwf	___fltol@f1
  8475  1086  160A  118A  20D2  160A  118A  	fcall	___fltol
  8476  108B  0844               	movf	?___fltol+1,w
  8477  108C  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8478  108D  0843               	movf	?___fltol,w
  8479  108E  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8480  108F  3000               	movlw	0
  8481  1090  160A  158A  2265  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8482                           
  8483                           ;SlaveLiofilizadorVer1.c: 1011:      EEPROM_24C1025_Write_Int(0x01, add_memory, Tensao1*
      +                          10);
  8484  1095  1283               	bcf	3,5	;RP0=0, select bank0
  8485  1096  1303               	bcf	3,6	;RP1=0, select bank0
  8486  1097  085B               	movf	Save_Log@add_memory+3,w
  8487  1098  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8488  1099  085A               	movf	Save_Log@add_memory+2,w
  8489  109A  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8490  109B  0859               	movf	Save_Log@add_memory+1,w
  8491  109C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8492  109D  0858               	movf	Save_Log@add_memory,w
  8493  109E  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8494  109F  1683               	bsf	3,5	;RP0=1, select bank1
  8495  10A0  0852               	movf	(_Tensao1+3)^(0+128),w
  8496  10A1  1283               	bcf	3,5	;RP0=0, select bank0
  8497  10A2  00B0               	movwf	___flmul@a+3
  8498  10A3  1683               	bsf	3,5	;RP0=1, select bank1
  8499  10A4  0851               	movf	(_Tensao1+2)^(0+128),w
  8500  10A5  1283               	bcf	3,5	;RP0=0, select bank0
  8501  10A6  00AF               	movwf	___flmul@a+2
  8502  10A7  1683               	bsf	3,5	;RP0=1, select bank1
  8503  10A8  0850               	movf	(_Tensao1+1)^(0+128),w
  8504  10A9  1283               	bcf	3,5	;RP0=0, select bank0
  8505  10AA  00AE               	movwf	___flmul@a+1
  8506  10AB  1683               	bsf	3,5	;RP0=1, select bank1
  8507  10AC  084F               	movf	_Tensao1^(0+128),w
  8508  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  8509  10AE  00AD               	movwf	___flmul@a
  8510  10AF  3041               	movlw	65
  8511  10B0  00AC               	movwf	___flmul@b+3
  8512  10B1  3020               	movlw	32
  8513  10B2  00AB               	movwf	___flmul@b+2
  8514  10B3  3000               	movlw	0
  8515  10B4  00AA               	movwf	___flmul@b+1
  8516  10B5  3000               	movlw	0
  8517  10B6  00A9               	movwf	___flmul@b
  8518  10B7  120A  118A  24A2  160A  118A  	fcall	___flmul
  8519  10BC  082C               	movf	?___flmul+3,w
  8520  10BD  00C6               	movwf	___fltol@f1+3
  8521  10BE  082B               	movf	?___flmul+2,w
  8522  10BF  00C5               	movwf	___fltol@f1+2
  8523  10C0  082A               	movf	?___flmul+1,w
  8524  10C1  00C4               	movwf	___fltol@f1+1
  8525  10C2  0829               	movf	?___flmul,w
  8526  10C3  00C3               	movwf	___fltol@f1
  8527  10C4  160A  118A  20D2  160A  118A  	fcall	___fltol
  8528  10C9  0844               	movf	?___fltol+1,w
  8529  10CA  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8530  10CB  0843               	movf	?___fltol,w
  8531  10CC  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8532  10CD  3001               	movlw	1
  8533  10CE  160A  158A  2265   	fcall	_EEPROM_24C1025_Write_Int
  8534  10D1  0008               	return
  8535  10D2                     __end_of_Save_Log:	
  8536                           
  8537                           	psect	text28
  8538  10D2                     __ptext28:	
  8539 ;; *************** function ___fltol *****************
  8540 ;; Defined at:
  8541 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  f1              4   35[BANK0 ] void 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  exp1            1   45[BANK0 ] unsigned char 
  8546 ;;  sign1           1   44[BANK0 ] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  4   35[BANK0 ] long 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0
  8551 ;; Tracked objects:
  8552 ;;		On entry : 300/0
  8553 ;;		On exit  : 300/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8556 ;;      Params:         0       4       0       0       0
  8557 ;;      Locals:         0       2       0       0       0
  8558 ;;      Temps:          0       5       0       0       0
  8559 ;;      Totals:         0      11       0       0       0
  8560 ;;Total ram usage:       11 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    1
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		_Decodify_Command
  8567 ;;		_Save_Log
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function ___fltol
  8573  10D2                     ___fltol:	
  8574                           
  8575                           ;incstack = 0
  8576                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8577  10D2  1003               	clrc
  8578  10D3  0D45               	rlf	___fltol@f1+2,w
  8579  10D4  0D46               	rlf	___fltol@f1+3,w
  8580  10D5  00C7               	movwf	??___fltol
  8581  10D6  0847               	movf	??___fltol,w
  8582  10D7  00CD               	movwf	___fltol@exp1
  8583  10D8  084D               	movf	___fltol@exp1,w
  8584  10D9  1D03               	btfss	3,2
  8585  10DA  28E4               	goto	l6066
  8586  10DB                     l6062:	
  8587  10DB  3000               	movlw	0
  8588  10DC  00C6               	movwf	?___fltol+3
  8589  10DD  3000               	movlw	0
  8590  10DE  00C5               	movwf	?___fltol+2
  8591  10DF  3000               	movlw	0
  8592  10E0  00C4               	movwf	?___fltol+1
  8593  10E1  3000               	movlw	0
  8594  10E2  00C3               	movwf	?___fltol
  8595  10E3  0008               	return
  8596  10E4                     l6066:	
  8597  10E4  0843               	movf	___fltol@f1,w
  8598  10E5  00C7               	movwf	??___fltol
  8599  10E6  0844               	movf	___fltol@f1+1,w
  8600  10E7  00C8               	movwf	??___fltol+1
  8601  10E8  0845               	movf	___fltol@f1+2,w
  8602  10E9  00C9               	movwf	??___fltol+2
  8603  10EA  0846               	movf	___fltol@f1+3,w
  8604  10EB  00CA               	movwf	??___fltol+3
  8605  10EC  301F               	movlw	31
  8606  10ED                     u5865:	
  8607  10ED  1003               	clrc
  8608  10EE  0CCA               	rrf	??___fltol+3,f
  8609  10EF  0CC9               	rrf	??___fltol+2,f
  8610  10F0  0CC8               	rrf	??___fltol+1,f
  8611  10F1  0CC7               	rrf	??___fltol,f
  8612  10F2  3EFF               	addlw	-1
  8613  10F3  1D03               	skipz
  8614  10F4  28ED               	goto	u5865
  8615  10F5  0847               	movf	??___fltol,w
  8616  10F6  00CB               	movwf	??___fltol+4
  8617  10F7  084B               	movf	??___fltol+4,w
  8618  10F8  00CC               	movwf	___fltol@sign1
  8619  10F9  17C5               	bsf	___fltol@f1+2,7
  8620  10FA  30FF               	movlw	255
  8621  10FB  05C3               	andwf	___fltol@f1,f
  8622  10FC  30FF               	movlw	255
  8623  10FD  05C4               	andwf	___fltol@f1+1,f
  8624  10FE  30FF               	movlw	255
  8625  10FF  05C5               	andwf	___fltol@f1+2,f
  8626  1100  3000               	movlw	0
  8627  1101  05C6               	andwf	___fltol@f1+3,f
  8628  1102  3096               	movlw	150
  8629  1103  02CD               	subwf	___fltol@exp1,f
  8630  1104  1FCD               	btfss	___fltol@exp1,7
  8631  1105  291B               	goto	l6084
  8632  1106  084D               	movf	___fltol@exp1,w
  8633  1107  3A80               	xorlw	128
  8634  1108  3E97               	addlw	151
  8635  1109  1C03               	btfss	3,0
  8636  110A  28DB               	goto	l6062
  8637  110B                     l6082:	
  8638  110B  3001               	movlw	1
  8639  110C                     u5895:	
  8640  110C  1003               	clrc
  8641  110D  0CC6               	rrf	___fltol@f1+3,f
  8642  110E  0CC5               	rrf	___fltol@f1+2,f
  8643  110F  0CC4               	rrf	___fltol@f1+1,f
  8644  1110  0CC3               	rrf	___fltol@f1,f
  8645  1111  3EFF               	addlw	-1
  8646  1112  1D03               	skipz
  8647  1113  290C               	goto	u5895
  8648  1114  3001               	movlw	1
  8649  1115  00C7               	movwf	??___fltol
  8650  1116  0847               	movf	??___fltol,w
  8651  1117  07CD               	addwf	___fltol@exp1,f
  8652  1118  1903               	btfsc	3,2
  8653  1119  292E               	goto	l6092
  8654  111A  290B               	goto	l6082
  8655  111B                     l6084:	
  8656  111B  3020               	movlw	32
  8657  111C  024D               	subwf	___fltol@exp1,w
  8658  111D  1803               	btfsc	3,0
  8659  111E  28DB               	goto	l6062
  8660  111F                     l1144:	
  8661  111F  084D               	movf	___fltol@exp1,w
  8662  1120  1903               	btfsc	3,2
  8663  1121  292E               	goto	l6092
  8664  1122  3001               	movlw	1
  8665  1123  00C7               	movwf	??___fltol
  8666  1124                     u5925:	
  8667  1124  1003               	clrc
  8668  1125  0DC3               	rlf	___fltol@f1,f
  8669  1126  0DC4               	rlf	___fltol@f1+1,f
  8670  1127  0DC5               	rlf	___fltol@f1+2,f
  8671  1128  0DC6               	rlf	___fltol@f1+3,f
  8672  1129  0BC7               	decfsz	??___fltol,f
  8673  112A  2924               	goto	u5925
  8674  112B  3001               	movlw	1
  8675  112C  02CD               	subwf	___fltol@exp1,f
  8676  112D  291F               	goto	l1144
  8677  112E                     l6092:	
  8678  112E  084C               	movf	___fltol@sign1,w
  8679  112F  1903               	btfsc	3,2
  8680  1130  0008               	return
  8681  1131  09C3               	comf	___fltol@f1,f
  8682  1132  09C4               	comf	___fltol@f1+1,f
  8683  1133  09C5               	comf	___fltol@f1+2,f
  8684  1134  09C6               	comf	___fltol@f1+3,f
  8685  1135  0AC3               	incf	___fltol@f1,f
  8686  1136  1903               	skipnz
  8687  1137  0AC4               	incf	___fltol@f1+1,f
  8688  1138  1903               	skipnz
  8689  1139  0AC5               	incf	___fltol@f1+2,f
  8690  113A  1903               	skipnz
  8691  113B  0AC6               	incf	___fltol@f1+3,f
  8692  113C  0008               	return
  8693  113D                     __end_of___fltol:	
  8694                           
  8695                           	psect	text29
  8696  04A2                     __ptext29:	
  8697 ;; *************** function ___flmul *****************
  8698 ;; Defined at:
  8699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  b               4    9[BANK0 ] long 
  8702 ;;  a               4   13[BANK0 ] long 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  prod            4   29[BANK0 ] struct .
  8705 ;;  grs             4   25[BANK0 ] unsigned long 
  8706 ;;  temp            2   33[BANK0 ] struct .
  8707 ;;  bexp            1   24[BANK0 ] unsigned char 
  8708 ;;  aexp            1   23[BANK0 ] unsigned char 
  8709 ;;  sign            1   22[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  4    9[BANK0 ] unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 300/0
  8716 ;;		On exit  : 300/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8719 ;;      Params:         0       8       0       0       0
  8720 ;;      Locals:         0      13       0       0       0
  8721 ;;      Temps:          0       5       0       0       0
  8722 ;;      Totals:         0      26       0       0       0
  8723 ;;Total ram usage:       26 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    2
  8726 ;; This function calls:
  8727 ;;		__Umul8_16
  8728 ;; This function is called by:
  8729 ;;		_Decodify_Command
  8730 ;;		_MediaPlacaVaccum
  8731 ;;		_Save_Log
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function ___flmul
  8737  04A2                     ___flmul:	
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8741  04A2  082C               	movf	___flmul@b+3,w
  8742  04A3  3980               	andlw	128
  8743  04A4  00B1               	movwf	??___flmul
  8744  04A5  0831               	movf	??___flmul,w
  8745  04A6  00B6               	movwf	___flmul@sign
  8746  04A7  082C               	movf	___flmul@b+3,w
  8747  04A8  00B1               	movwf	??___flmul
  8748  04A9  0731               	addwf	??___flmul,w
  8749  04AA  00B2               	movwf	??___flmul+1
  8750  04AB  0832               	movf	??___flmul+1,w
  8751  04AC  00B8               	movwf	___flmul@bexp
  8752  04AD  1BAB               	btfsc	___flmul@b+2,7
  8753  04AE  1438               	bsf	___flmul@bexp,0
  8754  04AF  0838               	movf	___flmul@bexp,w
  8755  04B0  1903               	btfsc	3,2
  8756  04B1  2CBF               	goto	l6306
  8757  04B2  0A38               	incf	___flmul@bexp,w
  8758  04B3  1D03               	btfss	3,2
  8759  04B4  2CBD               	goto	l6304
  8760  04B5  3000               	movlw	0
  8761  04B6  00AC               	movwf	___flmul@b+3
  8762  04B7  3000               	movlw	0
  8763  04B8  00AB               	movwf	___flmul@b+2
  8764  04B9  3000               	movlw	0
  8765  04BA  00AA               	movwf	___flmul@b+1
  8766  04BB  3000               	movlw	0
  8767  04BC  00A9               	movwf	___flmul@b
  8768  04BD                     l6304:	
  8769  04BD  17AB               	bsf	___flmul@b+2,7
  8770  04BE  2CC7               	goto	l6308
  8771  04BF                     l6306:	
  8772  04BF  3000               	movlw	0
  8773  04C0  00AC               	movwf	___flmul@b+3
  8774  04C1  3000               	movlw	0
  8775  04C2  00AB               	movwf	___flmul@b+2
  8776  04C3  3000               	movlw	0
  8777  04C4  00AA               	movwf	___flmul@b+1
  8778  04C5  3000               	movlw	0
  8779  04C6  00A9               	movwf	___flmul@b
  8780  04C7                     l6308:	
  8781  04C7  0830               	movf	___flmul@a+3,w
  8782  04C8  3980               	andlw	128
  8783  04C9  00B1               	movwf	??___flmul
  8784  04CA  0831               	movf	??___flmul,w
  8785  04CB  06B6               	xorwf	___flmul@sign,f
  8786  04CC  0830               	movf	___flmul@a+3,w
  8787  04CD  00B1               	movwf	??___flmul
  8788  04CE  0731               	addwf	??___flmul,w
  8789  04CF  00B2               	movwf	??___flmul+1
  8790  04D0  0832               	movf	??___flmul+1,w
  8791  04D1  00B7               	movwf	___flmul@aexp
  8792  04D2  1BAF               	btfsc	___flmul@a+2,7
  8793  04D3  1437               	bsf	___flmul@aexp,0
  8794  04D4  0837               	movf	___flmul@aexp,w
  8795  04D5  1903               	btfsc	3,2
  8796  04D6  2CE4               	goto	l6324
  8797  04D7  0A37               	incf	___flmul@aexp,w
  8798  04D8  1D03               	btfss	3,2
  8799  04D9  2CE2               	goto	l6322
  8800  04DA  3000               	movlw	0
  8801  04DB  00B0               	movwf	___flmul@a+3
  8802  04DC  3000               	movlw	0
  8803  04DD  00AF               	movwf	___flmul@a+2
  8804  04DE  3000               	movlw	0
  8805  04DF  00AE               	movwf	___flmul@a+1
  8806  04E0  3000               	movlw	0
  8807  04E1  00AD               	movwf	___flmul@a
  8808  04E2                     l6322:	
  8809  04E2  17AF               	bsf	___flmul@a+2,7
  8810  04E3  2CEC               	goto	l6326
  8811  04E4                     l6324:	
  8812  04E4  3000               	movlw	0
  8813  04E5  00B0               	movwf	___flmul@a+3
  8814  04E6  3000               	movlw	0
  8815  04E7  00AF               	movwf	___flmul@a+2
  8816  04E8  3000               	movlw	0
  8817  04E9  00AE               	movwf	___flmul@a+1
  8818  04EA  3000               	movlw	0
  8819  04EB  00AD               	movwf	___flmul@a
  8820  04EC                     l6326:	
  8821  04EC  0837               	movf	___flmul@aexp,w
  8822  04ED  1D03               	btfss	3,2
  8823  04EE  0838               	movf	___flmul@bexp,w
  8824  04EF  1D03               	btfss	3,2
  8825  04F0  2CFA               	goto	l6334
  8826  04F1  3000               	movlw	0
  8827  04F2  00AC               	movwf	?___flmul+3
  8828  04F3  3000               	movlw	0
  8829  04F4  00AB               	movwf	?___flmul+2
  8830  04F5  3000               	movlw	0
  8831  04F6  00AA               	movwf	?___flmul+1
  8832  04F7  3000               	movlw	0
  8833  04F8  00A9               	movwf	?___flmul
  8834  04F9  0008               	return
  8835  04FA                     l6334:	
  8836  04FA  0829               	movf	___flmul@b,w
  8837  04FB  00B1               	movwf	??___flmul
  8838  04FC  0831               	movf	??___flmul,w
  8839  04FD  00A0               	movwf	__Umul8_16@multiplicand
  8840  04FE  082F               	movf	___flmul@a+2,w
  8841  04FF  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  8842  0504  0821               	movf	?__Umul8_16+1,w
  8843  0505  00C2               	movwf	___flmul@temp+1
  8844  0506  0820               	movf	?__Umul8_16,w
  8845  0507  00C1               	movwf	___flmul@temp
  8846  0508  0841               	movf	___flmul@temp,w
  8847  0509  00B1               	movwf	??___flmul
  8848  050A  01B2               	clrf	??___flmul+1
  8849  050B  01B3               	clrf	??___flmul+2
  8850  050C  01B4               	clrf	??___flmul+3
  8851  050D  0834               	movf	??___flmul+3,w
  8852  050E  00BC               	movwf	___flmul@grs+3
  8853  050F  0833               	movf	??___flmul+2,w
  8854  0510  00BB               	movwf	___flmul@grs+2
  8855  0511  0832               	movf	??___flmul+1,w
  8856  0512  00BA               	movwf	___flmul@grs+1
  8857  0513  0831               	movf	??___flmul,w
  8858  0514  00B9               	movwf	___flmul@grs
  8859  0515  0842               	movf	___flmul@temp+1,w
  8860  0516  00B1               	movwf	??___flmul
  8861  0517  01B2               	clrf	??___flmul+1
  8862  0518  01B3               	clrf	??___flmul+2
  8863  0519  01B4               	clrf	??___flmul+3
  8864  051A  0834               	movf	??___flmul+3,w
  8865  051B  00C0               	movwf	___flmul@prod+3
  8866  051C  0833               	movf	??___flmul+2,w
  8867  051D  00BF               	movwf	___flmul@prod+2
  8868  051E  0832               	movf	??___flmul+1,w
  8869  051F  00BE               	movwf	___flmul@prod+1
  8870  0520  0831               	movf	??___flmul,w
  8871  0521  00BD               	movwf	___flmul@prod
  8872  0522  082A               	movf	___flmul@b+1,w
  8873  0523  00B1               	movwf	??___flmul
  8874  0524  0831               	movf	??___flmul,w
  8875  0525  00A0               	movwf	__Umul8_16@multiplicand
  8876  0526  082E               	movf	___flmul@a+1,w
  8877  0527  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  8878  052C  0821               	movf	?__Umul8_16+1,w
  8879  052D  00C2               	movwf	___flmul@temp+1
  8880  052E  0820               	movf	?__Umul8_16,w
  8881  052F  00C1               	movwf	___flmul@temp
  8882  0530  0841               	movf	___flmul@temp,w
  8883  0531  00B1               	movwf	??___flmul
  8884  0532  01B2               	clrf	??___flmul+1
  8885  0533  01B3               	clrf	??___flmul+2
  8886  0534  01B4               	clrf	??___flmul+3
  8887  0535  0831               	movf	??___flmul,w
  8888  0536  07B9               	addwf	___flmul@grs,f
  8889  0537  0832               	movf	??___flmul+1,w
  8890  0538  1103               	clrz
  8891  0539  1803               	skipnc
  8892  053A  3E01               	addlw	1
  8893  053B  1D03               	btfss	3,2
  8894  053C  07BA               	addwf	___flmul@grs+1,f
  8895  053D  0833               	movf	??___flmul+2,w
  8896  053E  1103               	clrz
  8897  053F  1803               	skipnc
  8898  0540  3E01               	addlw	1
  8899  0541  1D03               	btfss	3,2
  8900  0542  07BB               	addwf	___flmul@grs+2,f
  8901  0543  0834               	movf	??___flmul+3,w
  8902  0544  1103               	clrz
  8903  0545  1803               	skipnc
  8904  0546  3E01               	addlw	1
  8905  0547  1D03               	btfss	3,2
  8906  0548  07BC               	addwf	___flmul@grs+3,f
  8907  0549  0842               	movf	___flmul@temp+1,w
  8908  054A  00B1               	movwf	??___flmul
  8909  054B  01B2               	clrf	??___flmul+1
  8910  054C  01B3               	clrf	??___flmul+2
  8911  054D  01B4               	clrf	??___flmul+3
  8912  054E  0831               	movf	??___flmul,w
  8913  054F  07BD               	addwf	___flmul@prod,f
  8914  0550  0832               	movf	??___flmul+1,w
  8915  0551  1103               	clrz
  8916  0552  1803               	skipnc
  8917  0553  3E01               	addlw	1
  8918  0554  1D03               	btfss	3,2
  8919  0555  07BE               	addwf	___flmul@prod+1,f
  8920  0556  0833               	movf	??___flmul+2,w
  8921  0557  1103               	clrz
  8922  0558  1803               	skipnc
  8923  0559  3E01               	addlw	1
  8924  055A  1D03               	btfss	3,2
  8925  055B  07BF               	addwf	___flmul@prod+2,f
  8926  055C  0834               	movf	??___flmul+3,w
  8927  055D  1103               	clrz
  8928  055E  1803               	skipnc
  8929  055F  3E01               	addlw	1
  8930  0560  1D03               	btfss	3,2
  8931  0561  07C0               	addwf	___flmul@prod+3,f
  8932  0562  082B               	movf	___flmul@b+2,w
  8933  0563  00B1               	movwf	??___flmul
  8934  0564  0831               	movf	??___flmul,w
  8935  0565  00A0               	movwf	__Umul8_16@multiplicand
  8936  0566  082D               	movf	___flmul@a,w
  8937  0567  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  8938  056C  0821               	movf	?__Umul8_16+1,w
  8939  056D  00C2               	movwf	___flmul@temp+1
  8940  056E  0820               	movf	?__Umul8_16,w
  8941  056F  00C1               	movwf	___flmul@temp
  8942  0570  0841               	movf	___flmul@temp,w
  8943  0571  00B1               	movwf	??___flmul
  8944  0572  01B2               	clrf	??___flmul+1
  8945  0573  01B3               	clrf	??___flmul+2
  8946  0574  01B4               	clrf	??___flmul+3
  8947  0575  0831               	movf	??___flmul,w
  8948  0576  07B9               	addwf	___flmul@grs,f
  8949  0577  0832               	movf	??___flmul+1,w
  8950  0578  1103               	clrz
  8951  0579  1803               	skipnc
  8952  057A  3E01               	addlw	1
  8953  057B  1D03               	btfss	3,2
  8954  057C  07BA               	addwf	___flmul@grs+1,f
  8955  057D  0833               	movf	??___flmul+2,w
  8956  057E  1103               	clrz
  8957  057F  1803               	skipnc
  8958  0580  3E01               	addlw	1
  8959  0581  1D03               	btfss	3,2
  8960  0582  07BB               	addwf	___flmul@grs+2,f
  8961  0583  0834               	movf	??___flmul+3,w
  8962  0584  1103               	clrz
  8963  0585  1803               	skipnc
  8964  0586  3E01               	addlw	1
  8965  0587  1D03               	btfss	3,2
  8966  0588  07BC               	addwf	___flmul@grs+3,f
  8967  0589  0842               	movf	___flmul@temp+1,w
  8968  058A  00B1               	movwf	??___flmul
  8969  058B  01B2               	clrf	??___flmul+1
  8970  058C  01B3               	clrf	??___flmul+2
  8971  058D  01B4               	clrf	??___flmul+3
  8972  058E  0831               	movf	??___flmul,w
  8973  058F  07BD               	addwf	___flmul@prod,f
  8974  0590  0832               	movf	??___flmul+1,w
  8975  0591  1103               	clrz
  8976  0592  1803               	skipnc
  8977  0593  3E01               	addlw	1
  8978  0594  1D03               	btfss	3,2
  8979  0595  07BE               	addwf	___flmul@prod+1,f
  8980  0596  0833               	movf	??___flmul+2,w
  8981  0597  1103               	clrz
  8982  0598  1803               	skipnc
  8983  0599  3E01               	addlw	1
  8984  059A  1D03               	btfss	3,2
  8985  059B  07BF               	addwf	___flmul@prod+2,f
  8986  059C  0834               	movf	??___flmul+3,w
  8987  059D  1103               	clrz
  8988  059E  1803               	skipnc
  8989  059F  3E01               	addlw	1
  8990  05A0  1D03               	btfss	3,2
  8991  05A1  07C0               	addwf	___flmul@prod+3,f
  8992  05A2  3008               	movlw	8
  8993  05A3  00B1               	movwf	??___flmul
  8994  05A4                     u6535:	
  8995  05A4  1003               	clrc
  8996  05A5  0DB9               	rlf	___flmul@grs,f
  8997  05A6  0DBA               	rlf	___flmul@grs+1,f
  8998  05A7  0DBB               	rlf	___flmul@grs+2,f
  8999  05A8  0DBC               	rlf	___flmul@grs+3,f
  9000  05A9  0BB1               	decfsz	??___flmul,f
  9001  05AA  2DA4               	goto	u6535
  9002  05AB  082A               	movf	___flmul@b+1,w
  9003  05AC  00B1               	movwf	??___flmul
  9004  05AD  0831               	movf	??___flmul,w
  9005  05AE  00A0               	movwf	__Umul8_16@multiplicand
  9006  05AF  082D               	movf	___flmul@a,w
  9007  05B0  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9008  05B5  0821               	movf	?__Umul8_16+1,w
  9009  05B6  00C2               	movwf	___flmul@temp+1
  9010  05B7  0820               	movf	?__Umul8_16,w
  9011  05B8  00C1               	movwf	___flmul@temp
  9012  05B9  0841               	movf	___flmul@temp,w
  9013  05BA  00B1               	movwf	??___flmul
  9014  05BB  0842               	movf	___flmul@temp+1,w
  9015  05BC  00B2               	movwf	??___flmul+1
  9016  05BD  01B3               	clrf	??___flmul+2
  9017  05BE  01B4               	clrf	??___flmul+3
  9018  05BF  0831               	movf	??___flmul,w
  9019  05C0  07B9               	addwf	___flmul@grs,f
  9020  05C1  0832               	movf	??___flmul+1,w
  9021  05C2  1103               	clrz
  9022  05C3  1803               	skipnc
  9023  05C4  3E01               	addlw	1
  9024  05C5  1D03               	btfss	3,2
  9025  05C6  07BA               	addwf	___flmul@grs+1,f
  9026  05C7  0833               	movf	??___flmul+2,w
  9027  05C8  1103               	clrz
  9028  05C9  1803               	skipnc
  9029  05CA  3E01               	addlw	1
  9030  05CB  1D03               	btfss	3,2
  9031  05CC  07BB               	addwf	___flmul@grs+2,f
  9032  05CD  0834               	movf	??___flmul+3,w
  9033  05CE  1103               	clrz
  9034  05CF  1803               	skipnc
  9035  05D0  3E01               	addlw	1
  9036  05D1  1D03               	btfss	3,2
  9037  05D2  07BC               	addwf	___flmul@grs+3,f
  9038  05D3  0829               	movf	___flmul@b,w
  9039  05D4  00B1               	movwf	??___flmul
  9040  05D5  0831               	movf	??___flmul,w
  9041  05D6  00A0               	movwf	__Umul8_16@multiplicand
  9042  05D7  082E               	movf	___flmul@a+1,w
  9043  05D8  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9044  05DD  0821               	movf	?__Umul8_16+1,w
  9045  05DE  00C2               	movwf	___flmul@temp+1
  9046  05DF  0820               	movf	?__Umul8_16,w
  9047  05E0  00C1               	movwf	___flmul@temp
  9048  05E1  0841               	movf	___flmul@temp,w
  9049  05E2  00B1               	movwf	??___flmul
  9050  05E3  0842               	movf	___flmul@temp+1,w
  9051  05E4  00B2               	movwf	??___flmul+1
  9052  05E5  01B3               	clrf	??___flmul+2
  9053  05E6  01B4               	clrf	??___flmul+3
  9054  05E7  0831               	movf	??___flmul,w
  9055  05E8  07B9               	addwf	___flmul@grs,f
  9056  05E9  0832               	movf	??___flmul+1,w
  9057  05EA  1103               	clrz
  9058  05EB  1803               	skipnc
  9059  05EC  3E01               	addlw	1
  9060  05ED  1D03               	btfss	3,2
  9061  05EE  07BA               	addwf	___flmul@grs+1,f
  9062  05EF  0833               	movf	??___flmul+2,w
  9063  05F0  1103               	clrz
  9064  05F1  1803               	skipnc
  9065  05F2  3E01               	addlw	1
  9066  05F3  1D03               	btfss	3,2
  9067  05F4  07BB               	addwf	___flmul@grs+2,f
  9068  05F5  0834               	movf	??___flmul+3,w
  9069  05F6  1103               	clrz
  9070  05F7  1803               	skipnc
  9071  05F8  3E01               	addlw	1
  9072  05F9  1D03               	btfss	3,2
  9073  05FA  07BC               	addwf	___flmul@grs+3,f
  9074  05FB  3008               	movlw	8
  9075  05FC  00B1               	movwf	??___flmul
  9076  05FD                     u6565:	
  9077  05FD  1003               	clrc
  9078  05FE  0DB9               	rlf	___flmul@grs,f
  9079  05FF  0DBA               	rlf	___flmul@grs+1,f
  9080  0600  0DBB               	rlf	___flmul@grs+2,f
  9081  0601  0DBC               	rlf	___flmul@grs+3,f
  9082  0602  0BB1               	decfsz	??___flmul,f
  9083  0603  2DFD               	goto	u6565
  9084  0604  0829               	movf	___flmul@b,w
  9085  0605  00B1               	movwf	??___flmul
  9086  0606  0831               	movf	??___flmul,w
  9087  0607  00A0               	movwf	__Umul8_16@multiplicand
  9088  0608  082D               	movf	___flmul@a,w
  9089  0609  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9090  060E  0821               	movf	?__Umul8_16+1,w
  9091  060F  00C2               	movwf	___flmul@temp+1
  9092  0610  0820               	movf	?__Umul8_16,w
  9093  0611  00C1               	movwf	___flmul@temp
  9094  0612  0841               	movf	___flmul@temp,w
  9095  0613  00B1               	movwf	??___flmul
  9096  0614  0842               	movf	___flmul@temp+1,w
  9097  0615  00B2               	movwf	??___flmul+1
  9098  0616  01B3               	clrf	??___flmul+2
  9099  0617  01B4               	clrf	??___flmul+3
  9100  0618  0831               	movf	??___flmul,w
  9101  0619  07B9               	addwf	___flmul@grs,f
  9102  061A  0832               	movf	??___flmul+1,w
  9103  061B  1103               	clrz
  9104  061C  1803               	skipnc
  9105  061D  3E01               	addlw	1
  9106  061E  1D03               	btfss	3,2
  9107  061F  07BA               	addwf	___flmul@grs+1,f
  9108  0620  0833               	movf	??___flmul+2,w
  9109  0621  1103               	clrz
  9110  0622  1803               	skipnc
  9111  0623  3E01               	addlw	1
  9112  0624  1D03               	btfss	3,2
  9113  0625  07BB               	addwf	___flmul@grs+2,f
  9114  0626  0834               	movf	??___flmul+3,w
  9115  0627  1103               	clrz
  9116  0628  1803               	skipnc
  9117  0629  3E01               	addlw	1
  9118  062A  1D03               	btfss	3,2
  9119  062B  07BC               	addwf	___flmul@grs+3,f
  9120  062C  082A               	movf	___flmul@b+1,w
  9121  062D  00B1               	movwf	??___flmul
  9122  062E  0831               	movf	??___flmul,w
  9123  062F  00A0               	movwf	__Umul8_16@multiplicand
  9124  0630  082F               	movf	___flmul@a+2,w
  9125  0631  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9126  0636  0821               	movf	?__Umul8_16+1,w
  9127  0637  00C2               	movwf	___flmul@temp+1
  9128  0638  0820               	movf	?__Umul8_16,w
  9129  0639  00C1               	movwf	___flmul@temp
  9130  063A  0841               	movf	___flmul@temp,w
  9131  063B  00B1               	movwf	??___flmul
  9132  063C  0842               	movf	___flmul@temp+1,w
  9133  063D  00B2               	movwf	??___flmul+1
  9134  063E  01B3               	clrf	??___flmul+2
  9135  063F  01B4               	clrf	??___flmul+3
  9136  0640  0831               	movf	??___flmul,w
  9137  0641  07BD               	addwf	___flmul@prod,f
  9138  0642  0832               	movf	??___flmul+1,w
  9139  0643  1103               	clrz
  9140  0644  1803               	skipnc
  9141  0645  3E01               	addlw	1
  9142  0646  1D03               	btfss	3,2
  9143  0647  07BE               	addwf	___flmul@prod+1,f
  9144  0648  0833               	movf	??___flmul+2,w
  9145  0649  1103               	clrz
  9146  064A  1803               	skipnc
  9147  064B  3E01               	addlw	1
  9148  064C  1D03               	btfss	3,2
  9149  064D  07BF               	addwf	___flmul@prod+2,f
  9150  064E  0834               	movf	??___flmul+3,w
  9151  064F  1103               	clrz
  9152  0650  1803               	skipnc
  9153  0651  3E01               	addlw	1
  9154  0652  1D03               	btfss	3,2
  9155  0653  07C0               	addwf	___flmul@prod+3,f
  9156  0654  082B               	movf	___flmul@b+2,w
  9157  0655  00B1               	movwf	??___flmul
  9158  0656  0831               	movf	??___flmul,w
  9159  0657  00A0               	movwf	__Umul8_16@multiplicand
  9160  0658  082E               	movf	___flmul@a+1,w
  9161  0659  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9162  065E  0821               	movf	?__Umul8_16+1,w
  9163  065F  00C2               	movwf	___flmul@temp+1
  9164  0660  0820               	movf	?__Umul8_16,w
  9165  0661  00C1               	movwf	___flmul@temp
  9166  0662  0841               	movf	___flmul@temp,w
  9167  0663  00B1               	movwf	??___flmul
  9168  0664  0842               	movf	___flmul@temp+1,w
  9169  0665  00B2               	movwf	??___flmul+1
  9170  0666  01B3               	clrf	??___flmul+2
  9171  0667  01B4               	clrf	??___flmul+3
  9172  0668  0831               	movf	??___flmul,w
  9173  0669  07BD               	addwf	___flmul@prod,f
  9174  066A  0832               	movf	??___flmul+1,w
  9175  066B  1103               	clrz
  9176  066C  1803               	skipnc
  9177  066D  3E01               	addlw	1
  9178  066E  1D03               	btfss	3,2
  9179  066F  07BE               	addwf	___flmul@prod+1,f
  9180  0670  0833               	movf	??___flmul+2,w
  9181  0671  1103               	clrz
  9182  0672  1803               	skipnc
  9183  0673  3E01               	addlw	1
  9184  0674  1D03               	btfss	3,2
  9185  0675  07BF               	addwf	___flmul@prod+2,f
  9186  0676  0834               	movf	??___flmul+3,w
  9187  0677  1103               	clrz
  9188  0678  1803               	skipnc
  9189  0679  3E01               	addlw	1
  9190  067A  1D03               	btfss	3,2
  9191  067B  07C0               	addwf	___flmul@prod+3,f
  9192  067C  082B               	movf	___flmul@b+2,w
  9193  067D  00B1               	movwf	??___flmul
  9194  067E  0831               	movf	??___flmul,w
  9195  067F  00A0               	movwf	__Umul8_16@multiplicand
  9196  0680  082F               	movf	___flmul@a+2,w
  9197  0681  160A  158A  22E9  120A  118A  	fcall	__Umul8_16
  9198  0686  0821               	movf	?__Umul8_16+1,w
  9199  0687  00C2               	movwf	___flmul@temp+1
  9200  0688  0820               	movf	?__Umul8_16,w
  9201  0689  00C1               	movwf	___flmul@temp
  9202  068A  0841               	movf	___flmul@temp,w
  9203  068B  00B1               	movwf	??___flmul
  9204  068C  0842               	movf	___flmul@temp+1,w
  9205  068D  00B2               	movwf	??___flmul+1
  9206  068E  01B3               	clrf	??___flmul+2
  9207  068F  01B4               	clrf	??___flmul+3
  9208  0690  3008               	movlw	8
  9209  0691                     u6605:	
  9210  0691  1003               	clrc
  9211  0692  0DB1               	rlf	??___flmul,f
  9212  0693  0DB2               	rlf	??___flmul+1,f
  9213  0694  0DB3               	rlf	??___flmul+2,f
  9214  0695  0DB4               	rlf	??___flmul+3,f
  9215  0696  3EFF               	addlw	-1
  9216  0697  1D03               	skipz
  9217  0698  2E91               	goto	u6605
  9218  0699  0831               	movf	??___flmul,w
  9219  069A  07BD               	addwf	___flmul@prod,f
  9220  069B  0832               	movf	??___flmul+1,w
  9221  069C  1103               	clrz
  9222  069D  1803               	skipnc
  9223  069E  3E01               	addlw	1
  9224  069F  1D03               	btfss	3,2
  9225  06A0  07BE               	addwf	___flmul@prod+1,f
  9226  06A1  0833               	movf	??___flmul+2,w
  9227  06A2  1103               	clrz
  9228  06A3  1803               	skipnc
  9229  06A4  3E01               	addlw	1
  9230  06A5  1D03               	btfss	3,2
  9231  06A6  07BF               	addwf	___flmul@prod+2,f
  9232  06A7  0834               	movf	??___flmul+3,w
  9233  06A8  1103               	clrz
  9234  06A9  1803               	skipnc
  9235  06AA  3E01               	addlw	1
  9236  06AB  1D03               	btfss	3,2
  9237  06AC  07C0               	addwf	___flmul@prod+3,f
  9238  06AD  083C               	movf	___flmul@grs+3,w
  9239  06AE  00B1               	movwf	??___flmul
  9240  06AF  01B2               	clrf	??___flmul+1
  9241  06B0  01B3               	clrf	??___flmul+2
  9242  06B1  01B4               	clrf	??___flmul+3
  9243  06B2  0831               	movf	??___flmul,w
  9244  06B3  07BD               	addwf	___flmul@prod,f
  9245  06B4  0832               	movf	??___flmul+1,w
  9246  06B5  1103               	clrz
  9247  06B6  1803               	skipnc
  9248  06B7  3E01               	addlw	1
  9249  06B8  1D03               	btfss	3,2
  9250  06B9  07BE               	addwf	___flmul@prod+1,f
  9251  06BA  0833               	movf	??___flmul+2,w
  9252  06BB  1103               	clrz
  9253  06BC  1803               	skipnc
  9254  06BD  3E01               	addlw	1
  9255  06BE  1D03               	btfss	3,2
  9256  06BF  07BF               	addwf	___flmul@prod+2,f
  9257  06C0  0834               	movf	??___flmul+3,w
  9258  06C1  1103               	clrz
  9259  06C2  1803               	skipnc
  9260  06C3  3E01               	addlw	1
  9261  06C4  1D03               	btfss	3,2
  9262  06C5  07C0               	addwf	___flmul@prod+3,f
  9263  06C6  3008               	movlw	8
  9264  06C7  00B1               	movwf	??___flmul
  9265  06C8                     u6635:	
  9266  06C8  1003               	clrc
  9267  06C9  0DB9               	rlf	___flmul@grs,f
  9268  06CA  0DBA               	rlf	___flmul@grs+1,f
  9269  06CB  0DBB               	rlf	___flmul@grs+2,f
  9270  06CC  0DBC               	rlf	___flmul@grs+3,f
  9271  06CD  0BB1               	decfsz	??___flmul,f
  9272  06CE  2EC8               	goto	u6635
  9273  06CF  0838               	movf	___flmul@bexp,w
  9274  06D0  0737               	addwf	___flmul@aexp,w
  9275  06D1  00B1               	movwf	??___flmul
  9276  06D2  01B2               	clrf	??___flmul+1
  9277  06D3  0DB2               	rlf	??___flmul+1,f
  9278  06D4  0831               	movf	??___flmul,w
  9279  06D5  3E82               	addlw	130
  9280  06D6  00C1               	movwf	___flmul@temp
  9281  06D7  0832               	movf	??___flmul+1,w
  9282  06D8  1803               	skipnc
  9283  06D9  3E01               	addlw	1
  9284  06DA  3EFF               	addlw	255
  9285  06DB  00C2               	movwf	___flmul@temp+1
  9286  06DC                     l6386:	
  9287  06DC  1BBF               	btfsc	___flmul@prod+2,7
  9288  06DD  2EF9               	goto	l6388
  9289  06DE  3001               	movlw	1
  9290  06DF  00B1               	movwf	??___flmul
  9291  06E0                     u6645:	
  9292  06E0  1003               	clrc
  9293  06E1  0DBD               	rlf	___flmul@prod,f
  9294  06E2  0DBE               	rlf	___flmul@prod+1,f
  9295  06E3  0DBF               	rlf	___flmul@prod+2,f
  9296  06E4  0DC0               	rlf	___flmul@prod+3,f
  9297  06E5  0BB1               	decfsz	??___flmul,f
  9298  06E6  2EE0               	goto	u6645
  9299  06E7  1BBC               	btfsc	___flmul@grs+3,7
  9300  06E8  143D               	bsf	___flmul@prod,0
  9301  06E9  3001               	movlw	1
  9302  06EA  00B1               	movwf	??___flmul
  9303  06EB                     u6665:	
  9304  06EB  1003               	clrc
  9305  06EC  0DB9               	rlf	___flmul@grs,f
  9306  06ED  0DBA               	rlf	___flmul@grs+1,f
  9307  06EE  0DBB               	rlf	___flmul@grs+2,f
  9308  06EF  0DBC               	rlf	___flmul@grs+3,f
  9309  06F0  0BB1               	decfsz	??___flmul,f
  9310  06F1  2EEB               	goto	u6665
  9311  06F2  30FF               	movlw	255
  9312  06F3  07C1               	addwf	___flmul@temp,f
  9313  06F4  1803               	skipnc
  9314  06F5  0AC2               	incf	___flmul@temp+1,f
  9315  06F6  30FF               	movlw	255
  9316  06F7  07C2               	addwf	___flmul@temp+1,f
  9317  06F8  2EDC               	goto	l6386
  9318  06F9                     l6388:	
  9319  06F9  01B7               	clrf	___flmul@aexp
  9320  06FA  1FBC               	btfss	___flmul@grs+3,7
  9321  06FB  2F12               	goto	l6398
  9322  06FC  30FF               	movlw	255
  9323  06FD  0539               	andwf	___flmul@grs,w
  9324  06FE  00B1               	movwf	??___flmul
  9325  06FF  30FF               	movlw	255
  9326  0700  053A               	andwf	___flmul@grs+1,w
  9327  0701  00B2               	movwf	??___flmul+1
  9328  0702  30FF               	movlw	255
  9329  0703  053B               	andwf	___flmul@grs+2,w
  9330  0704  00B3               	movwf	??___flmul+2
  9331  0705  307F               	movlw	127
  9332  0706  053C               	andwf	___flmul@grs+3,w
  9333  0707  00B4               	movwf	??___flmul+3
  9334  0708  0834               	movf	??___flmul+3,w
  9335  0709  0433               	iorwf	??___flmul+2,w
  9336  070A  0432               	iorwf	??___flmul+1,w
  9337  070B  0431               	iorwf	??___flmul,w
  9338  070C  1903               	skipnz
  9339  070D  183D               	btfsc	___flmul@prod,0
  9340  070E  2F10               	goto	l6394
  9341  070F  2F12               	goto	l6398
  9342  0710                     l6394:	
  9343  0710  01B7               	clrf	___flmul@aexp
  9344  0711  0AB7               	incf	___flmul@aexp,f
  9345  0712                     l6398:	
  9346  0712  0837               	movf	___flmul@aexp,w
  9347  0713  1903               	btfsc	3,2
  9348  0714  2F44               	goto	l6408
  9349  0715  3001               	movlw	1
  9350  0716  07BD               	addwf	___flmul@prod,f
  9351  0717  3000               	movlw	0
  9352  0718  1803               	skipnc
  9353  0719  3001               	movlw	1
  9354  071A  07BE               	addwf	___flmul@prod+1,f
  9355  071B  3000               	movlw	0
  9356  071C  1803               	skipnc
  9357  071D  3001               	movlw	1
  9358  071E  07BF               	addwf	___flmul@prod+2,f
  9359  071F  3000               	movlw	0
  9360  0720  1803               	skipnc
  9361  0721  3001               	movlw	1
  9362  0722  07C0               	addwf	___flmul@prod+3,f
  9363  0723  1C40               	btfss	___flmul@prod+3,0
  9364  0724  2F44               	goto	l6408
  9365  0725  083D               	movf	___flmul@prod,w
  9366  0726  00B1               	movwf	??___flmul
  9367  0727  083E               	movf	___flmul@prod+1,w
  9368  0728  00B2               	movwf	??___flmul+1
  9369  0729  083F               	movf	___flmul@prod+2,w
  9370  072A  00B3               	movwf	??___flmul+2
  9371  072B  0840               	movf	___flmul@prod+3,w
  9372  072C  00B4               	movwf	??___flmul+3
  9373  072D  3001               	movlw	1
  9374  072E  00B5               	movwf	??___flmul+4
  9375  072F                     u6735:	
  9376  072F  0D34               	rlf	??___flmul+3,w
  9377  0730  0CB4               	rrf	??___flmul+3,f
  9378  0731  0CB3               	rrf	??___flmul+2,f
  9379  0732  0CB2               	rrf	??___flmul+1,f
  9380  0733  0CB1               	rrf	??___flmul,f
  9381  0734  0BB5               	decfsz	??___flmul+4,f
  9382  0735  2F2F               	goto	u6735
  9383  0736  0834               	movf	??___flmul+3,w
  9384  0737  00C0               	movwf	___flmul@prod+3
  9385  0738  0833               	movf	??___flmul+2,w
  9386  0739  00BF               	movwf	___flmul@prod+2
  9387  073A  0832               	movf	??___flmul+1,w
  9388  073B  00BE               	movwf	___flmul@prod+1
  9389  073C  0831               	movf	??___flmul,w
  9390  073D  00BD               	movwf	___flmul@prod
  9391  073E  3001               	movlw	1
  9392  073F  07C1               	addwf	___flmul@temp,f
  9393  0740  1803               	skipnc
  9394  0741  0AC2               	incf	___flmul@temp+1,f
  9395  0742  3000               	movlw	0
  9396  0743  07C2               	addwf	___flmul@temp+1,f
  9397  0744                     l6408:	
  9398  0744  0842               	movf	___flmul@temp+1,w
  9399  0745  3A80               	xorlw	128
  9400  0746  00FF               	movwf	127
  9401  0747  3080               	movlw	128
  9402  0748  027F               	subwf	127,w
  9403  0749  1D03               	skipz
  9404  074A  2F4D               	goto	u6745
  9405  074B  30FF               	movlw	255
  9406  074C  0241               	subwf	___flmul@temp,w
  9407  074D                     u6745:	
  9408  074D  1C03               	skipc
  9409  074E  2F5A               	goto	l6412
  9410  074F  307F               	movlw	127
  9411  0750  1283               	bcf	3,5	;RP0=0, select bank0
  9412  0751  1303               	bcf	3,6	;RP1=0, select bank0
  9413  0752  00C0               	movwf	___flmul@prod+3
  9414  0753  3080               	movlw	128
  9415  0754  00BF               	movwf	___flmul@prod+2
  9416  0755  3000               	movlw	0
  9417  0756  00BE               	movwf	___flmul@prod+1
  9418  0757  3000               	movlw	0
  9419  0758  00BD               	movwf	___flmul@prod
  9420  0759  2F8A               	goto	l1352
  9421  075A                     l6412:	
  9422  075A  1283               	bcf	3,5	;RP0=0, select bank0
  9423  075B  1303               	bcf	3,6	;RP1=0, select bank0
  9424  075C  0842               	movf	___flmul@temp+1,w
  9425  075D  3A80               	xorlw	128
  9426  075E  00FF               	movwf	127
  9427  075F  3080               	movlw	128
  9428  0760  027F               	subwf	127,w
  9429  0761  1D03               	skipz
  9430  0762  2F65               	goto	u6755
  9431  0763  3001               	movlw	1
  9432  0764  0241               	subwf	___flmul@temp,w
  9433  0765                     u6755:	
  9434  0765  1803               	skipnc
  9435  0766  2F73               	goto	l6418
  9436  0767  3000               	movlw	0
  9437  0768  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0769  1303               	bcf	3,6	;RP1=0, select bank0
  9439  076A  00C0               	movwf	___flmul@prod+3
  9440  076B  3000               	movlw	0
  9441  076C  00BF               	movwf	___flmul@prod+2
  9442  076D  3000               	movlw	0
  9443  076E  00BE               	movwf	___flmul@prod+1
  9444  076F  3000               	movlw	0
  9445  0770  00BD               	movwf	___flmul@prod
  9446  0771  01B6               	clrf	___flmul@sign
  9447  0772  2F8A               	goto	l1352
  9448  0773                     l6418:	
  9449  0773  1283               	bcf	3,5	;RP0=0, select bank0
  9450  0774  1303               	bcf	3,6	;RP1=0, select bank0
  9451  0775  0841               	movf	___flmul@temp,w
  9452  0776  00B1               	movwf	??___flmul
  9453  0777  0831               	movf	??___flmul,w
  9454  0778  00B8               	movwf	___flmul@bexp
  9455  0779  30FF               	movlw	255
  9456  077A  05BD               	andwf	___flmul@prod,f
  9457  077B  30FF               	movlw	255
  9458  077C  05BE               	andwf	___flmul@prod+1,f
  9459  077D  307F               	movlw	127
  9460  077E  05BF               	andwf	___flmul@prod+2,f
  9461  077F  3000               	movlw	0
  9462  0780  05C0               	andwf	___flmul@prod+3,f
  9463  0781  1838               	btfsc	___flmul@bexp,0
  9464  0782  17BF               	bsf	___flmul@prod+2,7
  9465  0783  0838               	movf	___flmul@bexp,w
  9466  0784  00B1               	movwf	??___flmul
  9467  0785  1003               	clrc
  9468  0786  0C31               	rrf	??___flmul,w
  9469  0787  00B2               	movwf	??___flmul+1
  9470  0788  0832               	movf	??___flmul+1,w
  9471  0789  00C0               	movwf	___flmul@prod+3
  9472  078A                     l1352:	
  9473  078A  0836               	movf	___flmul@sign,w
  9474  078B  00B1               	movwf	??___flmul
  9475  078C  0831               	movf	??___flmul,w
  9476  078D  04C0               	iorwf	___flmul@prod+3,f
  9477  078E  0840               	movf	___flmul@prod+3,w
  9478  078F  00AC               	movwf	?___flmul+3
  9479  0790  083F               	movf	___flmul@prod+2,w
  9480  0791  00AB               	movwf	?___flmul+2
  9481  0792  083E               	movf	___flmul@prod+1,w
  9482  0793  00AA               	movwf	?___flmul+1
  9483  0794  083D               	movf	___flmul@prod,w
  9484  0795  00A9               	movwf	?___flmul
  9485  0796  0008               	return
  9486  0797                     __end_of___flmul:	
  9487                           
  9488                           	psect	text30
  9489  1AE9                     __ptext30:	
  9490 ;; *************** function __Umul8_16 *****************
  9491 ;; Defined at:
  9492 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  multiplier      1    wreg     unsigned char 
  9495 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9498 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9499 ;;  product         2    4[BANK0 ] unsigned int 
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  2    0[BANK0 ] unsigned int 
  9502 ;; Registers used:
  9503 ;;		wreg, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 300/0
  9506 ;;		On exit  : 300/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9509 ;;      Params:         0       2       0       0       0
  9510 ;;      Locals:         0       5       0       0       0
  9511 ;;      Temps:          0       2       0       0       0
  9512 ;;      Totals:         0       9       0       0       0
  9513 ;;Total ram usage:        9 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		___flmul
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           
  9524                           ;psect for function __Umul8_16
  9525  1AE9                     __Umul8_16:	
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9529                           ;__Umul8_16@multiplier stored from wreg
  9530  1AE9  00A8               	movwf	__Umul8_16@multiplier
  9531  1AEA  01A4               	clrf	__Umul8_16@product
  9532  1AEB  01A5               	clrf	__Umul8_16@product+1
  9533  1AEC  0820               	movf	__Umul8_16@multiplicand,w
  9534  1AED  00A2               	movwf	??__Umul8_16
  9535  1AEE  01A3               	clrf	??__Umul8_16+1
  9536  1AEF  0822               	movf	??__Umul8_16,w
  9537  1AF0  00A6               	movwf	__Umul8_16@word_mpld
  9538  1AF1  0823               	movf	??__Umul8_16+1,w
  9539  1AF2  00A7               	movwf	__Umul8_16@word_mpld+1
  9540  1AF3                     l5852:	
  9541  1AF3  1C28               	btfss	__Umul8_16@multiplier,0
  9542  1AF4  2AFB               	goto	l1448
  9543  1AF5  0826               	movf	__Umul8_16@word_mpld,w
  9544  1AF6  07A4               	addwf	__Umul8_16@product,f
  9545  1AF7  1803               	skipnc
  9546  1AF8  0AA5               	incf	__Umul8_16@product+1,f
  9547  1AF9  0827               	movf	__Umul8_16@word_mpld+1,w
  9548  1AFA  07A5               	addwf	__Umul8_16@product+1,f
  9549  1AFB                     l1448:	
  9550  1AFB  3001               	movlw	1
  9551  1AFC                     u5675:	
  9552  1AFC  1003               	clrc
  9553  1AFD  0DA6               	rlf	__Umul8_16@word_mpld,f
  9554  1AFE  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9555  1AFF  3EFF               	addlw	-1
  9556  1B00  1D03               	skipz
  9557  1B01  2AFC               	goto	u5675
  9558  1B02  1003               	clrc
  9559  1B03  0CA8               	rrf	__Umul8_16@multiplier,f
  9560  1B04  0828               	movf	__Umul8_16@multiplier,w
  9561  1B05  1D03               	btfss	3,2
  9562  1B06  2AF3               	goto	l5852
  9563  1B07  0825               	movf	__Umul8_16@product+1,w
  9564  1B08  00A1               	movwf	?__Umul8_16+1
  9565  1B09  0824               	movf	__Umul8_16@product,w
  9566  1B0A  00A0               	movwf	?__Umul8_16
  9567  1B0B  0008               	return
  9568  1B0C                     __end_of__Umul8_16:	
  9569                           
  9570                           	psect	text31
  9571  1A65                     __ptext31:	
  9572 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  9573 ;; Defined at:
  9574 ;;		line 272 in file "EEPROM_24C1025.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  chip_add        1    wreg     unsigned char 
  9577 ;;  mem_add         4   46[BANK0 ] unsigned long 
  9578 ;;  data            2   50[BANK0 ] int 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  chip_add        1   53[BANK0 ] unsigned char 
  9581 ;;  local           2   54[BANK0 ] unsigned char [2]
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      void 
  9584 ;; Registers used:
  9585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/300
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9591 ;;      Params:         0       6       0       0       0
  9592 ;;      Locals:         0       3       0       0       0
  9593 ;;      Temps:          0       1       0       0       0
  9594 ;;      Totals:         0      10       0       0       0
  9595 ;;Total ram usage:       10 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    4
  9598 ;; This function calls:
  9599 ;;		_EEPROM_24C1025_Write_Buffer
  9600 ;; This function is called by:
  9601 ;;		_Decodify_Command
  9602 ;;		_Save_Log
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           
  9607                           ;psect for function _EEPROM_24C1025_Write_Int
  9608  1A65                     _EEPROM_24C1025_Write_Int:	
  9609                           
  9610                           ;incstack = 0
  9611                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9612                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  9613  1A65  1283               	bcf	3,5	;RP0=0, select bank0
  9614  1A66  1303               	bcf	3,6	;RP1=0, select bank0
  9615  1A67  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
  9616                           
  9617                           ;EEPROM_24C1025.c: 273:      char local[2];;EEPROM_24C1025.c: 274:      local[0]=((char 
      +                          *)&data)[1];
  9618  1A68  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
  9619  1A69  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9620  1A6A  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9621  1A6B  00D6               	movwf	EEPROM_24C1025_Write_Int@local
  9622                           
  9623                           ;EEPROM_24C1025.c: 275:      local[1]=((char *)&data)[0];
  9624  1A6C  0852               	movf	EEPROM_24C1025_Write_Int@data,w
  9625  1A6D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9626  1A6E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9627  1A6F  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
  9628                           
  9629                           ;EEPROM_24C1025.c: 276:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  9630  1A70  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
  9631  1A71  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9632  1A72  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
  9633  1A73  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9634  1A74  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
  9635  1A75  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9636  1A76  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
  9637  1A77  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9638  1A78  3002               	movlw	2
  9639  1A79  00D4               	movwf	??_EEPROM_24C1025_Write_Int
  9640  1A7A  0854               	movf	??_EEPROM_24C1025_Write_Int,w
  9641  1A7B  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  9642  1A7C  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  9643  1A7D  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  9644  1A7E  3000               	movlw	0
  9645  1A7F  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9646  1A80  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
  9647  1A81  160A  118A  2536   	fcall	_EEPROM_24C1025_Write_Buffer
  9648  1A84  0008               	return
  9649  1A85                     __end_of_EEPROM_24C1025_Write_Int:	
  9650                           
  9651                           	psect	text32
  9652  1989                     __ptext32:	
  9653 ;; *************** function _PROCULUS_VP_Write_String *****************
  9654 ;; Defined at:
  9655 ;;		line 205 in file "proculus.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  vp              2   58[BANK0 ] unsigned int 
  9658 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9659 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 300/0
  9668 ;;		On exit  : 300/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       3       0       0       0
  9672 ;;      Locals:         0       0       0       0       0
  9673 ;;      Temps:          0       1       0       0       0
  9674 ;;      Totals:         0       4       0       0       0
  9675 ;;Total ram usage:        4 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    4
  9678 ;; This function calls:
  9679 ;;		_PROCULUS_VP_Write
  9680 ;;		_strlen
  9681 ;; This function is called by:
  9682 ;;		_Decodify_Command
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _PROCULUS_VP_Write_String
  9688  1989                     _PROCULUS_VP_Write_String:	
  9689                           
  9690                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9694  1989  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9695  198A  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9696  198B  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9697  198C  00D2               	movwf	PROCULUS_VP_Write@vp
  9698  198D  085C               	movf	PROCULUS_VP_Write_String@text,w
  9699  198E  00D4               	movwf	PROCULUS_VP_Write@vetor
  9700  198F  3001               	movlw	1
  9701  1990  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9702  1991  085C               	movf	PROCULUS_VP_Write_String@text,w
  9703  1992  160A  158A  21B7  160A  158A  	fcall	_strlen
  9704  1997  0820               	movf	?_strlen,w
  9705  1998  3E01               	addlw	1
  9706  1999  00DD               	movwf	??_PROCULUS_VP_Write_String
  9707  199A  085D               	movf	??_PROCULUS_VP_Write_String,w
  9708  199B  00D6               	movwf	PROCULUS_VP_Write@size
  9709  199C  160A  158A  26A8   	fcall	_PROCULUS_VP_Write
  9710  199F  0008               	return
  9711  19A0                     __end_of_PROCULUS_VP_Write_String:	
  9712                           
  9713                           	psect	text33
  9714  19B7                     __ptext33:	
  9715 ;; *************** function _strlen *****************
  9716 ;; Defined at:
  9717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  s               1    wreg     PTR const unsigned char 
  9720 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9723 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9724 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9725 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2    0[BANK0 ] unsigned int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/300
  9732 ;;		On exit  : B00/800
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9735 ;;      Params:         0       2       0       0       0
  9736 ;;      Locals:         0       2       0       0       0
  9737 ;;      Temps:          0       1       0       0       0
  9738 ;;      Totals:         0       5       0       0       0
  9739 ;;Total ram usage:        5 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    1
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_Decodify_Command
  9746 ;;		_PROCULUS_VP_Write_String
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           
  9751                           ;psect for function _strlen
  9752  19B7                     _strlen:	
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9756                           ;strlen@s stored from wreg
  9757  19B7  1283               	bcf	3,5	;RP0=0, select bank0
  9758  19B8  1303               	bcf	3,6	;RP1=0, select bank0
  9759  19B9  00A4               	movwf	strlen@s
  9760  19BA  0824               	movf	strlen@s,w
  9761  19BB  00A2               	movwf	??_strlen
  9762  19BC  0822               	movf	??_strlen,w
  9763  19BD  00A3               	movwf	strlen@cp
  9764  19BE                     l6010:	
  9765  19BE  0823               	movf	strlen@cp,w
  9766  19BF  0084               	movwf	4
  9767  19C0  1783               	bsf	3,7	;select IRP bank2
  9768  19C1  0800               	movf	0,w
  9769  19C2  1903               	btfsc	3,2
  9770  19C3  29C9               	goto	l6012
  9771  19C4  3001               	movlw	1
  9772  19C5  00A2               	movwf	??_strlen
  9773  19C6  0822               	movf	??_strlen,w
  9774  19C7  07A3               	addwf	strlen@cp,f
  9775  19C8  29BE               	goto	l6010
  9776  19C9                     l6012:	
  9777  19C9  0824               	movf	strlen@s,w
  9778  19CA  0223               	subwf	strlen@cp,w
  9779  19CB  00A0               	movwf	?_strlen
  9780  19CC  01A1               	clrf	?_strlen+1
  9781  19CD  1BA0               	btfsc	?_strlen,7
  9782  19CE  03A1               	decf	?_strlen+1,f
  9783  19CF  0008               	return
  9784  19D0                     __end_of_strlen:	
  9785                           
  9786                           	psect	text34
  9787  1EA8                     __ptext34:	
  9788 ;; *************** function _PROCULUS_VP_Write *****************
  9789 ;; Defined at:
  9790 ;;		line 40 in file "proculus.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  vp              2   50[BANK0 ] unsigned int 
  9793 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9794 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9795 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9796 ;;  size            1   54[BANK0 ] unsigned char 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  i               1   57[BANK0 ] unsigned char 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : B00/800
  9805 ;;		On exit  : 300/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9808 ;;      Params:         0       5       0       0       0
  9809 ;;      Locals:         0       1       0       0       0
  9810 ;;      Temps:          0       2       0       0       0
  9811 ;;      Totals:         0       8       0       0       0
  9812 ;;Total ram usage:        8 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    3
  9815 ;; This function calls:
  9816 ;;		_PROCULUS_Delay
  9817 ;;		_USART_put_int
  9818 ;;		_USART_putc
  9819 ;; This function is called by:
  9820 ;;		_PROCULUS_VP_Write_String
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           
  9825                           ;psect for function _PROCULUS_VP_Write
  9826  1EA8                     _PROCULUS_VP_Write:	
  9827                           
  9828                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9829                           
  9830                           ;incstack = 0
  9831                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9832  1EA8  30A5               	movlw	165
  9833  1EA9  00CE               	movwf	USART_put_int@value
  9834  1EAA  305A               	movlw	90
  9835  1EAB  00CF               	movwf	USART_put_int@value+1
  9836  1EAC  160A  158A  2173  160A  158A  	fcall	_USART_put_int
  9837                           
  9838                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9839  1EB1  1283               	bcf	3,5	;RP0=0, select bank0
  9840  1EB2  0856               	movf	PROCULUS_VP_Write@size,w
  9841  1EB3  3E03               	addlw	3
  9842  1EB4  160A  118A  205E  160A  158A  	fcall	_USART_putc
  9843                           
  9844                           ;proculus.c: 43:      USART_putc(0x82);
  9845  1EB9  3082               	movlw	130
  9846  1EBA  160A  118A  205E  160A  158A  	fcall	_USART_putc
  9847                           
  9848                           ;proculus.c: 44:      USART_put_int(vp);
  9849  1EBF  1283               	bcf	3,5	;RP0=0, select bank0
  9850  1EC0  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9851  1EC1  00CF               	movwf	USART_put_int@value+1
  9852  1EC2  0852               	movf	PROCULUS_VP_Write@vp,w
  9853  1EC3  00CE               	movwf	USART_put_int@value
  9854  1EC4  160A  158A  2173  160A  158A  	fcall	_USART_put_int
  9855                           
  9856                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9857  1EC9  1283               	bcf	3,5	;RP0=0, select bank0
  9858  1ECA  01D9               	clrf	PROCULUS_VP_Write@i
  9859  1ECB                     l6056:	
  9860  1ECB  0856               	movf	PROCULUS_VP_Write@size,w
  9861  1ECC  0259               	subwf	PROCULUS_VP_Write@i,w
  9862  1ECD  1803               	btfsc	3,0
  9863  1ECE  2EE7               	goto	l6058
  9864                           
  9865                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9866  1ECF  0859               	movf	PROCULUS_VP_Write@i,w
  9867  1ED0  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9868  1ED1  00D7               	movwf	??_PROCULUS_VP_Write
  9869  1ED2  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9870  1ED3  1803               	skipnc
  9871  1ED4  3E01               	addlw	1
  9872  1ED5  00D8               	movwf	??_PROCULUS_VP_Write+1
  9873  1ED6  0857               	movf	??_PROCULUS_VP_Write,w
  9874  1ED7  0084               	movwf	4
  9875  1ED8  1783               	bsf	3,7
  9876  1ED9  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9877  1EDA  1383               	bcf	3,7
  9878  1EDB  0800               	movf	0,w
  9879  1EDC  160A  118A  205E  160A  158A  	fcall	_USART_putc
  9880  1EE1  3001               	movlw	1
  9881  1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  9882  1EE3  00D7               	movwf	??_PROCULUS_VP_Write
  9883  1EE4  0857               	movf	??_PROCULUS_VP_Write,w
  9884  1EE5  07D9               	addwf	PROCULUS_VP_Write@i,f
  9885  1EE6  2ECB               	goto	l6056
  9886  1EE7                     l6058:	
  9887                           
  9888                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9889  1EE7  3001               	movlw	1
  9890  1EE8  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9891  1EE9  3000               	movlw	0
  9892  1EEA  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9893  1EEB  160A  158A  21EC   	fcall	_PROCULUS_Delay
  9894  1EEE  0008               	return
  9895  1EEF                     __end_of_PROCULUS_VP_Write:	
  9896                           
  9897                           	psect	text35
  9898  1948                     __ptext35:	
  9899 ;; *************** function _PROCULUS_Show_Screen *****************
  9900 ;; Defined at:
  9901 ;;		line 243 in file "proculus.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  screen          2   54[BANK0 ] unsigned int 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 300/0
  9912 ;;		On exit  : 300/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9915 ;;      Params:         0       2       0       0       0
  9916 ;;      Locals:         0       3       0       0       0
  9917 ;;      Temps:          0       1       0       0       0
  9918 ;;      Totals:         0       6       0       0       0
  9919 ;;Total ram usage:        6 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    4
  9922 ;; This function calls:
  9923 ;;		_PROCULUS_Control_Register_Write
  9924 ;; This function is called by:
  9925 ;;		_Decodify_Command
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           
  9930                           ;psect for function _PROCULUS_Show_Screen
  9931  1948                     _PROCULUS_Show_Screen:	
  9932                           
  9933                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9934                           
  9935                           ;incstack = 0
  9936                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9937  1948  3003               	movlw	3
  9938  1949  00D8               	movwf	??_PROCULUS_Show_Screen
  9939  194A  0858               	movf	??_PROCULUS_Show_Screen,w
  9940  194B  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9941                           
  9942                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9943  194C  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9944  194D  00D8               	movwf	??_PROCULUS_Show_Screen
  9945  194E  0858               	movf	??_PROCULUS_Show_Screen,w
  9946  194F  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9947                           
  9948                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9949  1950  0856               	movf	PROCULUS_Show_Screen@screen,w
  9950  1951  00D8               	movwf	??_PROCULUS_Show_Screen
  9951  1952  0858               	movf	??_PROCULUS_Show_Screen,w
  9952  1953  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9953                           
  9954                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9955  1954  3003               	movlw	3
  9956  1955  00D8               	movwf	??_PROCULUS_Show_Screen
  9957  1956  0858               	movf	??_PROCULUS_Show_Screen,w
  9958  1957  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9959  1958  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9960  1959  160A  158A  2501   	fcall	_PROCULUS_Control_Register_Write
  9961  195C  0008               	return
  9962  195D                     __end_of_PROCULUS_Show_Screen:	
  9963                           
  9964                           	psect	text36
  9965  1AC7                     __ptext36:	
  9966 ;; *************** function _PROCULUS_Buzzer *****************
  9967 ;; Defined at:
  9968 ;;		line 223 in file "proculus.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 300/0
  9979 ;;		On exit  : 300/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9982 ;;      Params:         0       2       0       0       0
  9983 ;;      Locals:         0       2       0       0       0
  9984 ;;      Temps:          0       1       0       0       0
  9985 ;;      Totals:         0       5       0       0       0
  9986 ;;Total ram usage:        5 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:    4
  9989 ;; This function calls:
  9990 ;;		_PROCULUS_Control_Register_Write
  9991 ;;		___lwdiv
  9992 ;; This function is called by:
  9993 ;;		_Decodify_Command
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           
  9998                           ;psect for function _PROCULUS_Buzzer
  9999  1AC7                     _PROCULUS_Buzzer:	
 10000                           
 10001                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10005  1AC7  300A               	movlw	10
 10006  1AC8  00A0               	movwf	___lwdiv@divisor
 10007  1AC9  3000               	movlw	0
 10008  1ACA  00A1               	movwf	___lwdiv@divisor+1
 10009  1ACB  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
 10010  1ACC  00A3               	movwf	___lwdiv@dividend+1
 10011  1ACD  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10012  1ACE  00A2               	movwf	___lwdiv@dividend
 10013  1ACF  160A  158A  25AD  160A  158A  	fcall	___lwdiv
 10014  1AD4  0821               	movf	?___lwdiv+1,w
 10015  1AD5  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
 10016  1AD6  0820               	movf	?___lwdiv,w
 10017  1AD7  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
 10018                           
 10019                           ;proculus.c: 226:      vetor[0]=0x02;
 10020  1AD8  3002               	movlw	2
 10021  1AD9  00D8               	movwf	??_PROCULUS_Buzzer
 10022  1ADA  0858               	movf	??_PROCULUS_Buzzer,w
 10023  1ADB  00D9               	movwf	PROCULUS_Buzzer@vetor
 10024                           
 10025                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10026  1ADC  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10027  1ADD  00D8               	movwf	??_PROCULUS_Buzzer
 10028  1ADE  0858               	movf	??_PROCULUS_Buzzer,w
 10029  1ADF  00DA               	movwf	PROCULUS_Buzzer@vetor+1
 10030                           
 10031                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10032  1AE0  3002               	movlw	2
 10033  1AE1  00D8               	movwf	??_PROCULUS_Buzzer
 10034  1AE2  0858               	movf	??_PROCULUS_Buzzer,w
 10035  1AE3  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10036  1AE4  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10037  1AE5  160A  158A  2501   	fcall	_PROCULUS_Control_Register_Write
 10038  1AE8  0008               	return
 10039  1AE9                     __end_of_PROCULUS_Buzzer:	
 10040                           
 10041                           	psect	text37
 10042  1DAD                     __ptext37:	
 10043 ;; *************** function ___lwdiv *****************
 10044 ;; Defined at:
 10045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  divisor         2    0[BANK0 ] unsigned int 
 10048 ;;  dividend        2    2[BANK0 ] unsigned int 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  quotient        2    6[BANK0 ] unsigned int 
 10051 ;;  counter         1    5[BANK0 ] unsigned char 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  2    0[BANK0 ] unsigned int 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 300/0
 10058 ;;		On exit  : 300/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10061 ;;      Params:         0       4       0       0       0
 10062 ;;      Locals:         0       3       0       0       0
 10063 ;;      Temps:          0       1       0       0       0
 10064 ;;      Totals:         0       8       0       0       0
 10065 ;;Total ram usage:        8 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    1
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_ADC_Media_10bits
 10072 ;;		_PROCULUS_Buzzer
 10073 ;;		_utoa
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           
 10078                           ;psect for function ___lwdiv
 10079  1DAD                     ___lwdiv:	
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10083  1DAD  01A6               	clrf	___lwdiv@quotient
 10084  1DAE  01A7               	clrf	___lwdiv@quotient+1
 10085  1DAF  0820               	movf	___lwdiv@divisor,w
 10086  1DB0  0421               	iorwf	___lwdiv@divisor+1,w
 10087  1DB1  1903               	btfsc	3,2
 10088  1DB2  2DE4               	goto	l5822
 10089  1DB3  01A5               	clrf	___lwdiv@counter
 10090  1DB4  0AA5               	incf	___lwdiv@counter,f
 10091  1DB5                     l5810:	
 10092  1DB5  1BA1               	btfsc	___lwdiv@divisor+1,7
 10093  1DB6  2DC3               	goto	l5812
 10094  1DB7  3001               	movlw	1
 10095  1DB8                     u5545:	
 10096  1DB8  1003               	clrc
 10097  1DB9  0DA0               	rlf	___lwdiv@divisor,f
 10098  1DBA  0DA1               	rlf	___lwdiv@divisor+1,f
 10099  1DBB  3EFF               	addlw	-1
 10100  1DBC  1D03               	skipz
 10101  1DBD  2DB8               	goto	u5545
 10102  1DBE  3001               	movlw	1
 10103  1DBF  00A4               	movwf	??___lwdiv
 10104  1DC0  0824               	movf	??___lwdiv,w
 10105  1DC1  07A5               	addwf	___lwdiv@counter,f
 10106  1DC2  2DB5               	goto	l5810
 10107  1DC3                     l5812:	
 10108  1DC3  3001               	movlw	1
 10109  1DC4                     u5565:	
 10110  1DC4  1003               	clrc
 10111  1DC5  0DA6               	rlf	___lwdiv@quotient,f
 10112  1DC6  0DA7               	rlf	___lwdiv@quotient+1,f
 10113  1DC7  3EFF               	addlw	-1
 10114  1DC8  1D03               	skipz
 10115  1DC9  2DC4               	goto	u5565
 10116  1DCA  0821               	movf	___lwdiv@divisor+1,w
 10117  1DCB  0223               	subwf	___lwdiv@dividend+1,w
 10118  1DCC  1D03               	skipz
 10119  1DCD  2DD0               	goto	u5575
 10120  1DCE  0820               	movf	___lwdiv@divisor,w
 10121  1DCF  0222               	subwf	___lwdiv@dividend,w
 10122  1DD0                     u5575:	
 10123  1DD0  1C03               	skipc
 10124  1DD1  2DD9               	goto	l5818
 10125  1DD2  0820               	movf	___lwdiv@divisor,w
 10126  1DD3  02A2               	subwf	___lwdiv@dividend,f
 10127  1DD4  0821               	movf	___lwdiv@divisor+1,w
 10128  1DD5  1C03               	skipc
 10129  1DD6  03A3               	decf	___lwdiv@dividend+1,f
 10130  1DD7  02A3               	subwf	___lwdiv@dividend+1,f
 10131  1DD8  1426               	bsf	___lwdiv@quotient,0
 10132  1DD9                     l5818:	
 10133  1DD9  3001               	movlw	1
 10134  1DDA                     u5585:	
 10135  1DDA  1003               	clrc
 10136  1DDB  0CA1               	rrf	___lwdiv@divisor+1,f
 10137  1DDC  0CA0               	rrf	___lwdiv@divisor,f
 10138  1DDD  3EFF               	addlw	-1
 10139  1DDE  1D03               	skipz
 10140  1DDF  2DDA               	goto	u5585
 10141  1DE0  3001               	movlw	1
 10142  1DE1  02A5               	subwf	___lwdiv@counter,f
 10143  1DE2  1D03               	btfss	3,2
 10144  1DE3  2DC3               	goto	l5812
 10145  1DE4                     l5822:	
 10146  1DE4  0827               	movf	___lwdiv@quotient+1,w
 10147  1DE5  00A1               	movwf	?___lwdiv+1
 10148  1DE6  0826               	movf	___lwdiv@quotient,w
 10149  1DE7  00A0               	movwf	?___lwdiv
 10150  1DE8  0008               	return
 10151  1DE9                     __end_of___lwdiv:	
 10152                           
 10153                           	psect	text38
 10154  1D01                     __ptext38:	
 10155 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10156 ;; Defined at:
 10157 ;;		line 13 in file "proculus.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  vetor           1    wreg     PTR unsigned char 
 10160 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10161 ;;  size            1   50[BANK0 ] unsigned char 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10164 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10165 ;;  i               1   53[BANK0 ] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 300/0
 10172 ;;		On exit  : 300/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10175 ;;      Params:         0       1       0       0       0
 10176 ;;      Locals:         0       2       0       0       0
 10177 ;;      Temps:          0       1       0       0       0
 10178 ;;      Totals:         0       4       0       0       0
 10179 ;;Total ram usage:        4 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    3
 10182 ;; This function calls:
 10183 ;;		_PROCULUS_Delay
 10184 ;;		_USART_put_int
 10185 ;;		_USART_putc
 10186 ;; This function is called by:
 10187 ;;		_PROCULUS_Buzzer
 10188 ;;		_PROCULUS_Show_Screen
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           
 10193                           ;psect for function _PROCULUS_Control_Register_Write
 10194  1D01                     _PROCULUS_Control_Register_Write:	
 10195                           
 10196                           ;incstack = 0
 10197                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10198                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10199  1D01  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10200                           
 10201                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10202  1D02  30A5               	movlw	165
 10203  1D03  00CE               	movwf	USART_put_int@value
 10204  1D04  305A               	movlw	90
 10205  1D05  00CF               	movwf	USART_put_int@value+1
 10206  1D06  160A  158A  2173  160A  158A  	fcall	_USART_put_int
 10207                           
 10208                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10209  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
 10210  1D0C  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10211  1D0D  3E01               	addlw	1
 10212  1D0E  160A  118A  205E  160A  158A  	fcall	_USART_putc
 10213                           
 10214                           ;proculus.c: 16:      USART_putc(0x80);
 10215  1D13  3080               	movlw	128
 10216  1D14  160A  118A  205E  160A  158A  	fcall	_USART_putc
 10217                           
 10218                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10219  1D19  1283               	bcf	3,5	;RP0=0, select bank0
 10220  1D1A  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10221  1D1B                     l6040:	
 10222  1D1B  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10223  1D1C  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10224  1D1D  1803               	btfsc	3,0
 10225  1D1E  2D31               	goto	l6042
 10226                           
 10227                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10228  1D1F  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10229  1D20  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10230  1D21  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10231  1D22  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10232  1D23  0084               	movwf	4
 10233  1D24  1383               	bcf	3,7	;select IRP bank0
 10234  1D25  0800               	movf	0,w
 10235  1D26  160A  118A  205E  160A  158A  	fcall	_USART_putc
 10236  1D2B  3001               	movlw	1
 10237  1D2C  1283               	bcf	3,5	;RP0=0, select bank0
 10238  1D2D  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10239  1D2E  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10240  1D2F  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10241  1D30  2D1B               	goto	l6040
 10242  1D31                     l6042:	
 10243                           
 10244                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10245  1D31  3001               	movlw	1
 10246  1D32  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10247  1D33  3000               	movlw	0
 10248  1D34  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10249  1D35  160A  158A  21EC   	fcall	_PROCULUS_Delay
 10250  1D38  0008               	return
 10251  1D39                     __end_of_PROCULUS_Control_Register_Write:	
 10252                           
 10253                           	psect	text39
 10254  1973                     __ptext39:	
 10255 ;; *************** function _USART_put_int *****************
 10256 ;; Defined at:
 10257 ;;		line 138 in file "usart.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  value           2   46[BANK0 ] int 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10262 ;;		 -> USART_put_int@value(2), 
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1    wreg      void 
 10265 ;; Registers used:
 10266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10267 ;; Tracked objects:
 10268 ;;		On entry : 300/0
 10269 ;;		On exit  : 300/100
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10272 ;;      Params:         0       2       0       0       0
 10273 ;;      Locals:         0       1       0       0       0
 10274 ;;      Temps:          0       1       0       0       0
 10275 ;;      Totals:         0       4       0       0       0
 10276 ;;Total ram usage:        4 bytes
 10277 ;; Hardware stack levels used:    1
 10278 ;; Hardware stack levels required when called:    2
 10279 ;; This function calls:
 10280 ;;		_USART_putc
 10281 ;; This function is called by:
 10282 ;;		_Decodify_Command
 10283 ;;		_PROCULUS_Control_Register_Write
 10284 ;;		_PROCULUS_VP_Write
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           
 10289                           ;psect for function _USART_put_int
 10290  1973                     _USART_put_int:	
 10291                           
 10292                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10293                           
 10294                           ;incstack = 0
 10295                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10296  1973  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10297  1974  00D0               	movwf	??_USART_put_int
 10298  1975  0850               	movf	??_USART_put_int,w
 10299  1976  00D1               	movwf	USART_put_int@dado
 10300                           
 10301                           ;usart.c: 141:      USART_putc(*(dado+1));
 10302  1977  0A51               	incf	USART_put_int@dado,w
 10303  1978  0084               	movwf	4
 10304  1979  1383               	bcf	3,7	;select IRP bank0
 10305  197A  0800               	movf	0,w
 10306  197B  160A  118A  205E  160A  158A  	fcall	_USART_putc
 10307                           
 10308                           ;usart.c: 142:      USART_putc(*dado);
 10309  1980  1283               	bcf	3,5	;RP0=0, select bank0
 10310  1981  0851               	movf	USART_put_int@dado,w
 10311  1982  0084               	movwf	4
 10312  1983  1383               	bcf	3,7	;select IRP bank0
 10313  1984  0800               	movf	0,w
 10314  1985  160A  118A  205E   	fcall	_USART_putc
 10315  1988  0008               	return
 10316  1989                     __end_of_USART_put_int:	
 10317                           
 10318                           	psect	text40
 10319  105E                     __ptext40:	
 10320 ;; *************** function _USART_putc *****************
 10321 ;; Defined at:
 10322 ;;		line 89 in file "usart.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  value           1    wreg     unsigned char 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  value           1    0[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/100
 10333 ;;		On exit  : 300/100
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10336 ;;      Params:         0       0       0       0       0
 10337 ;;      Locals:         0       1       0       0       0
 10338 ;;      Temps:          0       0       0       0       0
 10339 ;;      Totals:         0       1       0       0       0
 10340 ;;Total ram usage:        1 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    1
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_Decodify_Command
 10347 ;;		_Send_To_MB
 10348 ;;		_PROCULUS_Control_Register_Write
 10349 ;;		_PROCULUS_VP_Write
 10350 ;;		_USART_put_buffer
 10351 ;;		_USART_put_int
 10352 ;;		_USART_put_string
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           
 10357                           ;psect for function _USART_putc
 10358  105E                     _USART_putc:	
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _USART_putc: [wreg]
 10362                           ;USART_putc@value stored from wreg
 10363  105E  1283               	bcf	3,5	;RP0=0, select bank0
 10364  105F  1303               	bcf	3,6	;RP1=0, select bank0
 10365  1060  00A0               	movwf	USART_putc@value
 10366                           
 10367                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10368  1061  3014               	movlw	20
 10369  1062  1683               	bsf	3,5	;RP0=1, select bank1
 10370  1063  00E1               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10371  1064  3000               	movlw	0
 10372  1065  00E2               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10373  1066                     l741:	
 10374                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10375                           
 10376  1066  1C98               	btfss	24,1	;volatile
 10377  1067  2866               	goto	l741
 10378                           
 10379                           ;usart.c: 93:     TXREG=value;
 10380  1068  1283               	bcf	3,5	;RP0=0, select bank0
 10381  1069  0820               	movf	USART_putc@value,w
 10382  106A  0099               	movwf	25	;volatile
 10383                           
 10384                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10385  106B  1683               	bsf	3,5	;RP0=1, select bank1
 10386  106C  1698               	bsf	24,5	;volatile
 10387  106D  0008               	return
 10388  106E                     __end_of_USART_putc:	
 10389                           
 10390                           	psect	text41
 10391  19EC                     __ptext41:	
 10392 ;; *************** function _PROCULUS_Delay *****************
 10393 ;; Defined at:
 10394 ;;		line 267 in file "proculus.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  i               2    4[BANK0 ] unsigned int 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, status,2
 10403 ;; Tracked objects:
 10404 ;;		On entry : 300/800
 10405 ;;		On exit  : 300/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10408 ;;      Params:         0       2       0       0       0
 10409 ;;      Locals:         0       2       0       0       0
 10410 ;;      Temps:          0       2       0       0       0
 10411 ;;      Totals:         0       6       0       0       0
 10412 ;;Total ram usage:        6 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    1
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_PROCULUS_Control_Register_Write
 10419 ;;		_PROCULUS_VP_Write
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function _PROCULUS_Delay
 10425  19EC                     _PROCULUS_Delay:	
 10426                           
 10427                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10431  19EC  01A4               	clrf	PROCULUS_Delay@i
 10432  19ED  01A5               	clrf	PROCULUS_Delay@i+1
 10433  19EE                     l661:	
 10434  19EE  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10435  19EF  0225               	subwf	PROCULUS_Delay@i+1,w
 10436  19F0  1D03               	skipz
 10437  19F1  29F4               	goto	u5525
 10438  19F2  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10439  19F3  0224               	subwf	PROCULUS_Delay@i,w
 10440  19F4                     u5525:	
 10441  19F4  1803               	btfsc	3,0
 10442  19F5  0008               	return
 10443                           
 10444                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10445  19F6  3003               	movlw	3
 10446  19F7  1283               	bcf	3,5	;RP0=0, select bank0
 10447  19F8  1303               	bcf	3,6	;RP1=0, select bank0
 10448  19F9  00A3               	movwf	??_PROCULUS_Delay+1
 10449  19FA  3097               	movlw	151
 10450  19FB  00A2               	movwf	??_PROCULUS_Delay
 10451  19FC                     u8027:	
 10452  19FC  0BA2               	decfsz	??_PROCULUS_Delay,f
 10453  19FD  29FC               	goto	u8027
 10454  19FE  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10455  19FF  29FC               	goto	u8027
 10456                           
 10457                           ;proculus.c: 270:     }
 10458  1A00  3001               	movlw	1
 10459  1A01  1283               	bcf	3,5	;RP0=0, select bank0
 10460  1A02  1303               	bcf	3,6	;RP1=0, select bank0
 10461  1A03  07A4               	addwf	PROCULUS_Delay@i,f
 10462  1A04  1803               	skipnc
 10463  1A05  0AA5               	incf	PROCULUS_Delay@i+1,f
 10464  1A06  3000               	movlw	0
 10465  1A07  07A5               	addwf	PROCULUS_Delay@i+1,f
 10466  1A08  29EE               	goto	l661
 10467  1A09                     __end_of_PROCULUS_Delay:	
 10468                           
 10469                           	psect	text42
 10470  1BAA                     __ptext42:	
 10471 ;; *************** function _EEPROM_Write_String *****************
 10472 ;; Defined at:
 10473 ;;		line 97 in file "eeprom.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  addr            1    wreg     unsigned char 
 10476 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10477 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  addr            1    7[BANK0 ] unsigned char 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 300/300
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10489 ;;      Params:         0       1       0       0       0
 10490 ;;      Locals:         0       1       0       0       0
 10491 ;;      Temps:          0       1       0       0       0
 10492 ;;      Totals:         0       3       0       0       0
 10493 ;;Total ram usage:        3 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:    2
 10496 ;; This function calls:
 10497 ;;		_EEPROM_Write_Byte
 10498 ;; This function is called by:
 10499 ;;		_Decodify_Command
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           
 10504                           ;psect for function _EEPROM_Write_String
 10505  1BAA                     _EEPROM_Write_String:	
 10506                           
 10507                           ;incstack = 0
 10508                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10509                           ;EEPROM_Write_String@addr stored from wreg
 10510  1BAA  1283               	bcf	3,5	;RP0=0, select bank0
 10511  1BAB  1303               	bcf	3,6	;RP1=0, select bank0
 10512  1BAC  00A7               	movwf	EEPROM_Write_String@addr
 10513  1BAD                     l6582:	
 10514                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10515                           
 10516                           
 10517                           ;eeprom.c: 99:     while(*dado)
 10518  1BAD  0825               	movf	EEPROM_Write_String@dado,w
 10519  1BAE  0084               	movwf	4
 10520  1BAF  1783               	bsf	3,7	;select IRP bank2
 10521  1BB0  0800               	movf	0,w
 10522  1BB1  1903               	btfsc	3,2
 10523  1BB2  2BCA               	goto	l6584
 10524                           
 10525                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10526  1BB3  0825               	movf	EEPROM_Write_String@dado,w
 10527  1BB4  0084               	movwf	4
 10528  1BB5  0800               	movf	0,w
 10529  1BB6  00A6               	movwf	??_EEPROM_Write_String
 10530  1BB7  0826               	movf	??_EEPROM_Write_String,w
 10531  1BB8  00A0               	movwf	EEPROM_Write_Byte@dado
 10532  1BB9  0827               	movf	EEPROM_Write_String@addr,w
 10533  1BBA  160A  158A  2571  160A  158A  	fcall	_EEPROM_Write_Byte
 10534                           
 10535                           ;eeprom.c: 102:      addr++;
 10536  1BBF  3001               	movlw	1
 10537  1BC0  1283               	bcf	3,5	;RP0=0, select bank0
 10538  1BC1  1303               	bcf	3,6	;RP1=0, select bank0
 10539  1BC2  00A6               	movwf	??_EEPROM_Write_String
 10540  1BC3  0826               	movf	??_EEPROM_Write_String,w
 10541  1BC4  07A7               	addwf	EEPROM_Write_String@addr,f
 10542                           
 10543                           ;eeprom.c: 103:      dado++;
 10544  1BC5  3001               	movlw	1
 10545  1BC6  00A6               	movwf	??_EEPROM_Write_String
 10546  1BC7  0826               	movf	??_EEPROM_Write_String,w
 10547  1BC8  07A5               	addwf	EEPROM_Write_String@dado,f
 10548  1BC9  2BAD               	goto	l6582
 10549  1BCA                     l6584:	
 10550                           
 10551                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10552  1BCA  0825               	movf	EEPROM_Write_String@dado,w
 10553  1BCB  0084               	movwf	4
 10554  1BCC  0800               	movf	0,w
 10555  1BCD  00A6               	movwf	??_EEPROM_Write_String
 10556  1BCE  0826               	movf	??_EEPROM_Write_String,w
 10557  1BCF  00A0               	movwf	EEPROM_Write_Byte@dado
 10558  1BD0  0827               	movf	EEPROM_Write_String@addr,w
 10559  1BD1  160A  158A  2571   	fcall	_EEPROM_Write_Byte
 10560  1BD4  0008               	return
 10561  1BD5                     __end_of_EEPROM_Write_String:	
 10562                           
 10563                           	psect	text43
 10564  1C33                     __ptext43:	
 10565 ;; *************** function _EEPROM_Write_Integer *****************
 10566 ;; Defined at:
 10567 ;;		line 68 in file "eeprom.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  addr            1    wreg     unsigned char 
 10570 ;;  dado            2    5[BANK0 ] unsigned int 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  addr            1   11[BANK0 ] unsigned char 
 10573 ;;  i               1   12[BANK0 ] unsigned char 
 10574 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10575 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10576 ;;  addr_memo       1    0        unsigned char 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10581 ;; Tracked objects:
 10582 ;;		On entry : 200/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10586 ;;      Params:         0       2       0       0       0
 10587 ;;      Locals:         0       4       0       0       0
 10588 ;;      Temps:          0       2       0       0       0
 10589 ;;      Totals:         0       8       0       0       0
 10590 ;;Total ram usage:        8 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    2
 10593 ;; This function calls:
 10594 ;;		_EEPROM_Write_Byte
 10595 ;; This function is called by:
 10596 ;;		_main
 10597 ;;		_Decodify_Command
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           
 10602                           ;psect for function _EEPROM_Write_Integer
 10603  1C33                     _EEPROM_Write_Integer:	
 10604                           
 10605                           ;incstack = 0
 10606                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10607                           ;EEPROM_Write_Integer@addr stored from wreg
 10608  1C33  1283               	bcf	3,5	;RP0=0, select bank0
 10609  1C34  00AB               	movwf	EEPROM_Write_Integer@addr
 10610                           
 10611                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10612  1C35  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10613  1C36  00A7               	movwf	??_EEPROM_Write_Integer
 10614  1C37  0827               	movf	??_EEPROM_Write_Integer,w
 10615  1C38  00AA               	movwf	EEPROM_Write_Integer@ptr
 10616                           
 10617                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10618  1C39  01AC               	clrf	EEPROM_Write_Integer@i
 10619  1C3A                     l6536:	
 10620                           
 10621                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10622  1C3A  082A               	movf	EEPROM_Write_Integer@ptr,w
 10623  1C3B  0084               	movwf	4
 10624  1C3C  1383               	bcf	3,7	;select IRP bank0
 10625  1C3D  0800               	movf	0,w
 10626  1C3E  00A7               	movwf	??_EEPROM_Write_Integer
 10627  1C3F  0827               	movf	??_EEPROM_Write_Integer,w
 10628  1C40  00A0               	movwf	EEPROM_Write_Byte@dado
 10629  1C41  082B               	movf	EEPROM_Write_Integer@addr,w
 10630  1C42  160A  158A  2571  160A  158A  	fcall	_EEPROM_Write_Byte
 10631  1C47  3001               	movlw	1
 10632  1C48  1283               	bcf	3,5	;RP0=0, select bank0
 10633  1C49  1303               	bcf	3,6	;RP1=0, select bank0
 10634  1C4A  00A7               	movwf	??_EEPROM_Write_Integer
 10635  1C4B  0827               	movf	??_EEPROM_Write_Integer,w
 10636  1C4C  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10637  1C4D  3001               	movlw	1
 10638  1C4E  00A7               	movwf	??_EEPROM_Write_Integer
 10639  1C4F  0827               	movf	??_EEPROM_Write_Integer,w
 10640  1C50  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10641  1C51  3001               	movlw	1
 10642  1C52  00A7               	movwf	??_EEPROM_Write_Integer
 10643  1C53  0827               	movf	??_EEPROM_Write_Integer,w
 10644  1C54  07AC               	addwf	EEPROM_Write_Integer@i,f
 10645  1C55  3002               	movlw	2
 10646  1C56  022C               	subwf	EEPROM_Write_Integer@i,w
 10647  1C57  1C03               	skipc
 10648  1C58  2C3A               	goto	l6536
 10649                           
 10650                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10651  1C59  304E               	movlw	78
 10652  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
 10653  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
 10654  1C5C  00A8               	movwf	??_EEPROM_Write_Integer+1
 10655  1C5D  30EA               	movlw	234
 10656  1C5E  00A7               	movwf	??_EEPROM_Write_Integer
 10657  1C5F                     u8037:	
 10658  1C5F  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10659  1C60  2C5F               	goto	u8037
 10660  1C61  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10661  1C62  2C5F               	goto	u8037
 10662  1C63  0000               	nop
 10663  1C64  0008               	return
 10664  1C65                     __end_of_EEPROM_Write_Integer:	
 10665                           
 10666                           	psect	text44
 10667  1D71                     __ptext44:	
 10668 ;; *************** function _EEPROM_Write_Byte *****************
 10669 ;; Defined at:
 10670 ;;		line 21 in file "eeprom.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  addr            1    wreg     unsigned char 
 10673 ;;  dado            1    0[BANK0 ] unsigned char 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;  addr            1    3[BANK0 ] unsigned char 
 10676 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/300
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10686 ;;      Params:         0       1       0       0       0
 10687 ;;      Locals:         0       2       0       0       0
 10688 ;;      Temps:          0       2       0       0       0
 10689 ;;      Totals:         0       5       0       0       0
 10690 ;;Total ram usage:        5 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    1
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_Decodify_Command
 10697 ;;		_EEPROM_Write_Integer
 10698 ;;		_EEPROM_Write_String
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           
 10703                           ;psect for function _EEPROM_Write_Byte
 10704  1D71                     _EEPROM_Write_Byte:	
 10705                           
 10706                           ;incstack = 0
 10707                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10708                           ;EEPROM_Write_Byte@addr stored from wreg
 10709  1D71  1283               	bcf	3,5	;RP0=0, select bank0
 10710  1D72  1303               	bcf	3,6	;RP1=0, select bank0
 10711  1D73  00A3               	movwf	EEPROM_Write_Byte@addr
 10712                           
 10713                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10714  1D74  3014               	movlw	20
 10715  1D75  00FA               	movwf	_Delay_Led_Memory	;volatile
 10716  1D76  3000               	movlw	0
 10717  1D77  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10718  1D78                     l380:	
 10719                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10720                           
 10721  1D78  1683               	bsf	3,5	;RP0=1, select bank3
 10722  1D79  1703               	bsf	3,6	;RP1=1, select bank3
 10723  1D7A  188C               	btfsc	12,1	;volsfr
 10724  1D7B  2D78               	goto	l380
 10725                           
 10726                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10727  1D7C  1F8B               	btfss	11,7	;volatile
 10728  1D7D  2D83               	goto	l5876
 10729                           
 10730                           ;eeprom.c: 28:           last_GIE=1;
 10731  1D7E  1283               	bcf	3,5	;RP0=0, select bank0
 10732  1D7F  1303               	bcf	3,6	;RP1=0, select bank0
 10733  1D80  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10734  1D81  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10735  1D82  2D86               	goto	l5878
 10736  1D83                     l5876:	
 10737                           
 10738                           ;eeprom.c: 30:           last_GIE=0;
 10739  1D83  1283               	bcf	3,5	;RP0=0, select bank0
 10740  1D84  1303               	bcf	3,6	;RP1=0, select bank0
 10741  1D85  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10742  1D86                     l5878:	
 10743                           
 10744                           ;eeprom.c: 32:        EEADR=addr;
 10745  1D86  0823               	movf	EEPROM_Write_Byte@addr,w
 10746  1D87  1703               	bsf	3,6	;RP1=1, select bank2
 10747  1D88  008D               	movwf	13	;volatile
 10748                           
 10749                           ;eeprom.c: 33:        EEDATA=dado;
 10750  1D89  1303               	bcf	3,6	;RP1=0, select bank0
 10751  1D8A  0820               	movf	EEPROM_Write_Byte@dado,w
 10752  1D8B  1703               	bsf	3,6	;RP1=1, select bank2
 10753  1D8C  008C               	movwf	12	;volatile
 10754                           
 10755                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10756  1D8D  1683               	bsf	3,5	;RP0=1, select bank3
 10757  1D8E  138C               	bcf	12,7	;volsfr
 10758                           
 10759                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10760  1D8F  150C               	bsf	12,2	;volsfr
 10761                           
 10762                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10763  1D90  138B               	bcf	11,7	;volatile
 10764                           
 10765                           ;eeprom.c: 37:        EECON2=0x55;
 10766  1D91  3055               	movlw	85
 10767  1D92  008D               	movwf	13	;volsfr
 10768                           
 10769                           ;eeprom.c: 38:        EECON2=0xAA;
 10770  1D93  30AA               	movlw	170
 10771  1D94  008D               	movwf	13	;volsfr
 10772                           
 10773                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10774  1D95  148C               	bsf	12,1	;volsfr
 10775                           
 10776                           ;eeprom.c: 41:        if(last_GIE==1)
 10777  1D96  1283               	bcf	3,5	;RP0=0, select bank0
 10778  1D97  1303               	bcf	3,6	;RP1=0, select bank0
 10779  1D98  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10780  1D99  1D03               	btfss	3,2
 10781  1D9A  2D9D               	goto	l385
 10782                           
 10783                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10784  1D9B  178B               	bsf	11,7	;volatile
 10785  1D9C  2D9E               	goto	l386
 10786  1D9D                     l385:	
 10787                           ;eeprom.c: 43:        else
 10788                           
 10789                           
 10790                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10791  1D9D  138B               	bcf	11,7	;volatile
 10792  1D9E                     l386:	
 10793                           
 10794                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10795  1D9E  1683               	bsf	3,5	;RP0=1, select bank3
 10796  1D9F  1703               	bsf	3,6	;RP1=1, select bank3
 10797  1DA0  110C               	bcf	12,2	;volsfr
 10798                           
 10799                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10800  1DA1  304E               	movlw	78
 10801  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
 10802  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
 10803  1DA4  00A2               	movwf	??_EEPROM_Write_Byte+1
 10804  1DA5  30EA               	movlw	234
 10805  1DA6  00A1               	movwf	??_EEPROM_Write_Byte
 10806  1DA7                     u8047:	
 10807  1DA7  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10808  1DA8  2DA7               	goto	u8047
 10809  1DA9  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10810  1DAA  2DA7               	goto	u8047
 10811  1DAB  0000               	nop
 10812  1DAC  0008               	return
 10813  1DAD                     __end_of_EEPROM_Write_Byte:	
 10814                           
 10815                           	psect	text45
 10816  1A45                     __ptext45:	
 10817 ;; *************** function _EEPROM_Read_String *****************
 10818 ;; Defined at:
 10819 ;;		line 109 in file "eeprom.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  addr            1    wreg     unsigned char 
 10822 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10823 ;;		 -> texto(16), 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  addr            1    5[BANK0 ] unsigned char 
 10826 ;;  c               1    6[BANK0 ] unsigned char 
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  1    wreg      void 
 10829 ;; Registers used:
 10830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10831 ;; Tracked objects:
 10832 ;;		On entry : 300/300
 10833 ;;		On exit  : B00/800
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10836 ;;      Params:         0       1       0       0       0
 10837 ;;      Locals:         0       2       0       0       0
 10838 ;;      Temps:          0       1       0       0       0
 10839 ;;      Totals:         0       4       0       0       0
 10840 ;;Total ram usage:        4 bytes
 10841 ;; Hardware stack levels used:    1
 10842 ;; Hardware stack levels required when called:    2
 10843 ;; This function calls:
 10844 ;;		_EEPROM_Read_Byte
 10845 ;; This function is called by:
 10846 ;;		_Decodify_Command
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _EEPROM_Read_String
 10852  1A45                     _EEPROM_Read_String:	
 10853                           
 10854                           ;incstack = 0
 10855                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10856                           ;EEPROM_Read_String@addr stored from wreg
 10857  1A45  1283               	bcf	3,5	;RP0=0, select bank0
 10858  1A46  1303               	bcf	3,6	;RP1=0, select bank0
 10859  1A47  00A5               	movwf	EEPROM_Read_String@addr
 10860  1A48                     l412:	
 10861                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10862                           
 10863                           
 10864                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10865  1A48  0825               	movf	EEPROM_Read_String@addr,w
 10866  1A49  160A  158A  22A5  160A  158A  	fcall	_EEPROM_Read_Byte
 10867  1A4E  1303               	bcf	3,6	;RP1=0, select bank0
 10868  1A4F  00A4               	movwf	??_EEPROM_Read_String
 10869  1A50  0824               	movf	??_EEPROM_Read_String,w
 10870  1A51  00A6               	movwf	EEPROM_Read_String@c
 10871  1A52  3001               	movlw	1
 10872  1A53  00A4               	movwf	??_EEPROM_Read_String
 10873  1A54  0824               	movf	??_EEPROM_Read_String,w
 10874  1A55  07A5               	addwf	EEPROM_Read_String@addr,f
 10875                           
 10876                           ;eeprom.c: 114:         *(dado++)=c;
 10877  1A56  0826               	movf	EEPROM_Read_String@c,w
 10878  1A57  00A4               	movwf	??_EEPROM_Read_String
 10879  1A58  0823               	movf	EEPROM_Read_String@dado,w
 10880  1A59  0084               	movwf	4
 10881  1A5A  0824               	movf	??_EEPROM_Read_String,w
 10882  1A5B  1783               	bsf	3,7	;select IRP bank2
 10883  1A5C  0080               	movwf	0
 10884  1A5D  3001               	movlw	1
 10885  1A5E  00A4               	movwf	??_EEPROM_Read_String
 10886  1A5F  0824               	movf	??_EEPROM_Read_String,w
 10887  1A60  07A3               	addwf	EEPROM_Read_String@dado,f
 10888                           
 10889                           ;eeprom.c: 116:       }while(c);
 10890  1A61  0826               	movf	EEPROM_Read_String@c,w
 10891  1A62  1903               	btfsc	3,2
 10892  1A63  0008               	return
 10893  1A64  2A48               	goto	l412
 10894  1A65                     __end_of_EEPROM_Read_String:	
 10895                           
 10896                           	psect	text46
 10897  1B80                     __ptext46:	
 10898 ;; *************** function _EEPROM_Read_Integer *****************
 10899 ;; Defined at:
 10900 ;;		line 81 in file "eeprom.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  addr            1    wreg     unsigned char 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  addr            1    6[BANK0 ] unsigned char 
 10905 ;;  result          2    8[BANK0 ] unsigned int 
 10906 ;;  i               1   10[BANK0 ] unsigned char 
 10907 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10908 ;;		 -> EEPROM_Read_Integer@result(2), 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  2    3[BANK0 ] unsigned int 
 10911 ;; Registers used:
 10912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : B00/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10918 ;;      Params:         0       2       0       0       0
 10919 ;;      Locals:         0       5       0       0       0
 10920 ;;      Temps:          0       1       0       0       0
 10921 ;;      Totals:         0       8       0       0       0
 10922 ;;Total ram usage:        8 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    2
 10925 ;; This function calls:
 10926 ;;		_EEPROM_Read_Byte
 10927 ;; This function is called by:
 10928 ;;		_main
 10929 ;;		_Decodify_Command
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           
 10934                           ;psect for function _EEPROM_Read_Integer
 10935  1B80                     _EEPROM_Read_Integer:	
 10936                           
 10937                           ;incstack = 0
 10938                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10939                           ;EEPROM_Read_Integer@addr stored from wreg
 10940  1B80  1283               	bcf	3,5	;RP0=0, select bank0
 10941  1B81  1303               	bcf	3,6	;RP1=0, select bank0
 10942  1B82  00A6               	movwf	EEPROM_Read_Integer@addr
 10943                           
 10944                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10945  1B83  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10946  1B84  00A5               	movwf	??_EEPROM_Read_Integer
 10947  1B85  0825               	movf	??_EEPROM_Read_Integer,w
 10948  1B86  00A7               	movwf	EEPROM_Read_Integer@ptr
 10949                           
 10950                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10951  1B87  01AA               	clrf	EEPROM_Read_Integer@i
 10952  1B88                     l6512:	
 10953                           
 10954                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10955  1B88  0826               	movf	EEPROM_Read_Integer@addr,w
 10956  1B89  160A  158A  22A5  160A  158A  	fcall	_EEPROM_Read_Byte
 10957  1B8E  1303               	bcf	3,6	;RP1=0, select bank0
 10958  1B8F  00A5               	movwf	??_EEPROM_Read_Integer
 10959  1B90  0827               	movf	EEPROM_Read_Integer@ptr,w
 10960  1B91  0084               	movwf	4
 10961  1B92  0825               	movf	??_EEPROM_Read_Integer,w
 10962  1B93  1383               	bcf	3,7	;select IRP bank0
 10963  1B94  0080               	movwf	0
 10964  1B95  3001               	movlw	1
 10965  1B96  00A5               	movwf	??_EEPROM_Read_Integer
 10966  1B97  0825               	movf	??_EEPROM_Read_Integer,w
 10967  1B98  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10968  1B99  3001               	movlw	1
 10969  1B9A  00A5               	movwf	??_EEPROM_Read_Integer
 10970  1B9B  0825               	movf	??_EEPROM_Read_Integer,w
 10971  1B9C  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10972  1B9D  3001               	movlw	1
 10973  1B9E  00A5               	movwf	??_EEPROM_Read_Integer
 10974  1B9F  0825               	movf	??_EEPROM_Read_Integer,w
 10975  1BA0  07AA               	addwf	EEPROM_Read_Integer@i,f
 10976  1BA1  3002               	movlw	2
 10977  1BA2  022A               	subwf	EEPROM_Read_Integer@i,w
 10978  1BA3  1C03               	skipc
 10979  1BA4  2B88               	goto	l6512
 10980                           
 10981                           ;eeprom.c: 89:       return result;
 10982  1BA5  0829               	movf	EEPROM_Read_Integer@result+1,w
 10983  1BA6  00A4               	movwf	?_EEPROM_Read_Integer+1
 10984  1BA7  0828               	movf	EEPROM_Read_Integer@result,w
 10985  1BA8  00A3               	movwf	?_EEPROM_Read_Integer
 10986  1BA9  0008               	return
 10987  1BAA                     __end_of_EEPROM_Read_Integer:	
 10988                           
 10989                           	psect	text47
 10990  1AA5                     __ptext47:	
 10991 ;; *************** function _EEPROM_Read_Byte *****************
 10992 ;; Defined at:
 10993 ;;		line 52 in file "eeprom.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;  addr            1    wreg     unsigned char 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  addr            1    2[BANK0 ] unsigned char 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      unsigned char 
 11000 ;; Registers used:
 11001 ;;		wreg
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/300
 11004 ;;		On exit  : 300/200
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11007 ;;      Params:         0       0       0       0       0
 11008 ;;      Locals:         0       1       0       0       0
 11009 ;;      Temps:          0       2       0       0       0
 11010 ;;      Totals:         0       3       0       0       0
 11011 ;;Total ram usage:        3 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    1
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_Decodify_Command
 11018 ;;		_EEPROM_Read_Integer
 11019 ;;		_EEPROM_Read_String
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           
 11024                           ;psect for function _EEPROM_Read_Byte
 11025  1AA5                     _EEPROM_Read_Byte:	
 11026                           
 11027                           ;incstack = 0
 11028                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11029                           ;EEPROM_Read_Byte@addr stored from wreg
 11030  1AA5  1283               	bcf	3,5	;RP0=0, select bank0
 11031  1AA6  1303               	bcf	3,6	;RP1=0, select bank0
 11032  1AA7  00A2               	movwf	EEPROM_Read_Byte@addr
 11033                           
 11034                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11035  1AA8  3014               	movlw	20
 11036  1AA9  00FA               	movwf	_Delay_Led_Memory	;volatile
 11037  1AAA  3000               	movlw	0
 11038  1AAB  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11039  1AAC                     l390:	
 11040                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11041                           
 11042  1AAC  1683               	bsf	3,5	;RP0=1, select bank3
 11043  1AAD  1703               	bsf	3,6	;RP1=1, select bank3
 11044  1AAE  188C               	btfsc	12,1	;volsfr
 11045  1AAF  2AAC               	goto	l390
 11046                           
 11047                           ;eeprom.c: 57:    EEADR=addr;
 11048  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
 11049  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
 11050  1AB2  0822               	movf	EEPROM_Read_Byte@addr,w
 11051  1AB3  1703               	bsf	3,6	;RP1=1, select bank2
 11052  1AB4  008D               	movwf	13	;volatile
 11053                           
 11054                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11055  1AB5  1683               	bsf	3,5	;RP0=1, select bank3
 11056  1AB6  138C               	bcf	12,7	;volsfr
 11057                           
 11058                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11059  1AB7  140C               	bsf	12,0	;volsfr
 11060                           
 11061                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11062  1AB8  304E               	movlw	78
 11063  1AB9  1283               	bcf	3,5	;RP0=0, select bank0
 11064  1ABA  1303               	bcf	3,6	;RP1=0, select bank0
 11065  1ABB  00A1               	movwf	??_EEPROM_Read_Byte+1
 11066  1ABC  30EA               	movlw	234
 11067  1ABD  00A0               	movwf	??_EEPROM_Read_Byte
 11068  1ABE                     u8057:	
 11069  1ABE  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11070  1ABF  2ABE               	goto	u8057
 11071  1AC0  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11072  1AC1  2ABE               	goto	u8057
 11073  1AC2  0000               	nop
 11074                           
 11075                           ;eeprom.c: 61:    return EEDATA;
 11076  1AC3  1283               	bcf	3,5	;RP0=0, select bank2
 11077  1AC4  1703               	bsf	3,6	;RP1=1, select bank2
 11078  1AC5  080C               	movf	12,w	;volatile
 11079  1AC6  0008               	return
 11080  1AC7                     __end_of_EEPROM_Read_Byte:	
 11081                           
 11082                           	psect	text48
 11083  1273                     __ptext48:	
 11084 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11085 ;; Defined at:
 11086 ;;		line 135 in file "EEPROM_24C1025.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  chip_add        1    wreg     unsigned char 
 11089 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11090 ;;  data            1    6[BANK0 ] PTR unsigned char 
 11091 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  chip_add        1    9[BANK0 ] unsigned char 
 11094 ;;  ctrl            1   11[BANK0 ] unsigned char 
 11095 ;;  range           1   10[BANK0 ] unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1    wreg      void 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 300/300
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11105 ;;      Params:         0       5       0       0       0
 11106 ;;      Locals:         0       3       0       0       0
 11107 ;;      Temps:          0       2       0       0       0
 11108 ;;      Totals:         0      10       0       0       0
 11109 ;;Total ram usage:       10 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    3
 11112 ;; This function calls:
 11113 ;;		_I2C_Master_Start
 11114 ;;		_I2C_Master_Stop
 11115 ;;		_I2C_Master_Write
 11116 ;; This function is called by:
 11117 ;;		_Decodify_Command
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           
 11122                           ;psect for function _EEPROM_24C1025_Write_Str
 11123  1273                     _EEPROM_24C1025_Write_Str:	
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11127                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11128  1273  1283               	bcf	3,5	;RP0=0, select bank0
 11129  1274  1303               	bcf	3,6	;RP1=0, select bank0
 11130  1275  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11131                           
 11132                           ;EEPROM_24C1025.c: 137:      unsigned char ctrl;;EEPROM_24C1025.c: 139:      if(mem_add>
      +                          0x1FFFF) return;
 11133  1276  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11134  1277  1D03               	btfss	3,2
 11135  1278  0008               	return
 11136  1279  3002               	movlw	2
 11137  127A  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11138  127B  1D03               	skipz
 11139  127C  2A85               	goto	u7003
 11140  127D  3000               	movlw	0
 11141  127E  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11142  127F  1D03               	skipz
 11143  1280  2A85               	goto	u7003
 11144  1281  3000               	movlw	0
 11145  1282  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11146  1283  1D03               	skipz
 11147  1284  2A85               	goto	u7003
 11148  1285                     u7003:	
 11149  1285  1803               	btfsc	3,0
 11150  1286  0008               	return
 11151  1287                     L10:	
 11152                           
 11153                           ;EEPROM_24C1025.c: 141:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11154  1287  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11155  1288  1D03               	btfss	3,2
 11156  1289  2A98               	goto	l6630
 11157  128A  3001               	movlw	1
 11158  128B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11159  128C  1D03               	skipz
 11160  128D  2A96               	goto	u7013
 11161  128E  3000               	movlw	0
 11162  128F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11163  1290  1D03               	skipz
 11164  1291  2A96               	goto	u7013
 11165  1292  3000               	movlw	0
 11166  1293  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11167  1294  1D03               	skipz
 11168  1295  2A96               	goto	u7013
 11169  1296                     u7013:	
 11170  1296  1C03               	btfss	3,0
 11171  1297  2A9D               	goto	l6632
 11172  1298                     l6630:	
 11173  1298  3008               	movlw	8
 11174  1299  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11175  129A  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11176  129B  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 11177  129C  2A9E               	goto	l6634
 11178  129D                     l6632:	
 11179  129D  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 11180  129E                     l6634:	
 11181                           
 11182                           ;EEPROM_24C1025.c: 142:      ctrl=chip_add;
 11183  129E  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11184  129F  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11185  12A0  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11186  12A1  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11187                           
 11188                           ;EEPROM_24C1025.c: 143:      ctrl<<=1;
 11189  12A2  1003               	clrc
 11190  12A3  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11191                           
 11192                           ;EEPROM_24C1025.c: 144:      ctrl |= 0xA0;
 11193  12A4  30A0               	movlw	160
 11194  12A5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11195  12A6  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11196  12A7  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11197                           
 11198                           ;EEPROM_24C1025.c: 145:      ctrl |= range;
 11199  12A8  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 11200  12A9  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11201  12AA  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11202  12AB  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11203                           
 11204                           ;EEPROM_24C1025.c: 147:      I2C_Master_Start();
 11205  12AC  160A  158A  2118  160A  118A  	fcall	_I2C_Master_Start
 11206                           
 11207                           ;EEPROM_24C1025.c: 148:      I2C_Master_Write(ctrl);
 11208  12B1  1283               	bcf	3,5	;RP0=0, select bank0
 11209  12B2  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11210  12B3  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11211  12B4  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11212  12B5  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11213  12B6  00A0               	movwf	I2C_Master_Write@d
 11214  12B7  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11215  12B8  00A1               	movwf	I2C_Master_Write@d+1
 11216  12B9  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11217                           
 11218                           ;EEPROM_24C1025.c: 149:      I2C_Master_Write(((char *)&mem_add)[1]);
 11219  12BE  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11220  12BF  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11221  12C0  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11222  12C1  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11223  12C2  00A0               	movwf	I2C_Master_Write@d
 11224  12C3  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11225  12C4  00A1               	movwf	I2C_Master_Write@d+1
 11226  12C5  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11227                           
 11228                           ;EEPROM_24C1025.c: 150:      I2C_Master_Write(((char *)&mem_add)[0]);
 11229  12CA  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11230  12CB  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11231  12CC  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11232  12CD  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11233  12CE  00A0               	movwf	I2C_Master_Write@d
 11234  12CF  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11235  12D0  00A1               	movwf	I2C_Master_Write@d+1
 11236  12D1  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11237  12D6                     l6694:	
 11238                           ;EEPROM_24C1025.c: 151:      while(*data)
 11239                           
 11240                           
 11241                           ;EEPROM_24C1025.c: 151:      while(*data)
 11242  12D6  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11243  12D7  0084               	movwf	4
 11244  12D8  1783               	bsf	3,7	;select IRP bank2
 11245  12D9  0800               	movf	0,w
 11246  12DA  1903               	btfsc	3,2
 11247  12DB  2B45               	goto	l6696
 11248                           
 11249                           ;EEPROM_24C1025.c: 152:           {;EEPROM_24C1025.c: 153:           if(mem_add>0x1FFFF)
      +                           return;
 11250  12DC  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11251  12DD  1D03               	btfss	3,2
 11252  12DE  0008               	return
 11253  12DF  3002               	movlw	2
 11254  12E0  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11255  12E1  1D03               	skipz
 11256  12E2  2AEB               	goto	u7023
 11257  12E3  3000               	movlw	0
 11258  12E4  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11259  12E5  1D03               	skipz
 11260  12E6  2AEB               	goto	u7023
 11261  12E7  3000               	movlw	0
 11262  12E8  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11263  12E9  1D03               	skipz
 11264  12EA  2AEB               	goto	u7023
 11265  12EB                     u7023:	
 11266  12EB  1803               	btfsc	3,0
 11267  12EC  0008               	return
 11268                           
 11269                           ;EEPROM_24C1025.c: 154:           if((mem_add+1)%128==0)
 11270  12ED  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11271  12EE  3E01               	addlw	1
 11272  12EF  397F               	andlw	127
 11273  12F0  1D03               	btfss	3,2
 11274  12F1  2B24               	goto	l6688
 11275                           
 11276                           ;EEPROM_24C1025.c: 155:             {;EEPROM_24C1025.c: 156:             I2C_Master_Writ
      +                          e(*data);
 11277  12F2  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11278  12F3  0084               	movwf	4
 11279  12F4  0800               	movf	0,w
 11280  12F5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11281  12F6  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11282  12F7  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11283  12F8  00A0               	movwf	I2C_Master_Write@d
 11284  12F9  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11285  12FA  00A1               	movwf	I2C_Master_Write@d+1
 11286  12FB  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11287                           
 11288                           ;EEPROM_24C1025.c: 157:             I2C_Master_Stop();
 11289  1300  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 11290                           
 11291                           ;EEPROM_24C1025.c: 159:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11292  1305  300D               	movlw	13
 11293  1306  1283               	bcf	3,5	;RP0=0, select bank0
 11294  1307  1303               	bcf	3,6	;RP1=0, select bank0
 11295  1308  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11296  1309  30FB               	movlw	251
 11297  130A  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11298  130B                     u8067:	
 11299  130B  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11300  130C  2B0B               	goto	u8067
 11301  130D  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11302  130E  2B0B               	goto	u8067
 11303                           
 11304                           ;EEPROM_24C1025.c: 160:             mem_add++;
 11305  130F  3001               	movlw	1
 11306  1310  1283               	bcf	3,5	;RP0=0, select bank0
 11307  1311  1303               	bcf	3,6	;RP1=0, select bank0
 11308  1312  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11309  1313  3000               	movlw	0
 11310  1314  1803               	skipnc
 11311  1315  3001               	movlw	1
 11312  1316  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11313  1317  3000               	movlw	0
 11314  1318  1803               	skipnc
 11315  1319  3001               	movlw	1
 11316  131A  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11317  131B  3000               	movlw	0
 11318  131C  1803               	skipnc
 11319  131D  3001               	movlw	1
 11320  131E  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11321                           
 11322                           ;EEPROM_24C1025.c: 161:             data++;
 11323  131F  3001               	movlw	1
 11324  1320  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11325  1321  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11326  1322  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11327  1323  2A87               	goto	L10
 11328  1324                     l6688:	
 11329                           ;EEPROM_24C1025.c: 162:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11330                           
 11331                           
 11332                           ;EEPROM_24C1025.c: 174:             {;EEPROM_24C1025.c: 175:             I2C_Master_Writ
      +                          e(*data);
 11333  1324  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11334  1325  0084               	movwf	4
 11335  1326  0800               	movf	0,w
 11336  1327  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11337  1328  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11338  1329  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11339  132A  00A0               	movwf	I2C_Master_Write@d
 11340  132B  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11341  132C  00A1               	movwf	I2C_Master_Write@d+1
 11342  132D  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11343                           
 11344                           ;EEPROM_24C1025.c: 176:             data++;
 11345  1332  3001               	movlw	1
 11346  1333  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11347  1334  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11348  1335  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11349                           
 11350                           ;EEPROM_24C1025.c: 177:             mem_add++;
 11351  1336  3001               	movlw	1
 11352  1337  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11353  1338  3000               	movlw	0
 11354  1339  1803               	skipnc
 11355  133A  3001               	movlw	1
 11356  133B  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11357  133C  3000               	movlw	0
 11358  133D  1803               	skipnc
 11359  133E  3001               	movlw	1
 11360  133F  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11361  1340  3000               	movlw	0
 11362  1341  1803               	skipnc
 11363  1342  3001               	movlw	1
 11364  1343  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11365  1344  2AD6               	goto	l6694
 11366  1345                     l6696:	
 11367                           
 11368                           ;EEPROM_24C1025.c: 180:      I2C_Master_Write(0);
 11369  1345  3000               	movlw	0
 11370  1346  00A0               	movwf	I2C_Master_Write@d
 11371  1347  00A1               	movwf	I2C_Master_Write@d+1
 11372  1348  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11373                           
 11374                           ;EEPROM_24C1025.c: 181:      I2C_Master_Stop();
 11375  134D  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 11376                           
 11377                           ;EEPROM_24C1025.c: 182:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11378  1352  30B9               	movlw	185
 11379  1353  1283               	bcf	3,5	;RP0=0, select bank0
 11380  1354  1303               	bcf	3,6	;RP1=0, select bank0
 11381  1355  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11382  1356                     u8077:	
 11383  1356  2B57               	nop2
 11384  1357  2B58               	nop2
 11385  1358  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11386  1359  2B56               	goto	u8077
 11387  135A  2B5B               	nop2
 11388  135B  0008               	return
 11389  135C                     __end_of_EEPROM_24C1025_Write_Str:	
 11390                           
 11391                           	psect	text49
 11392  195D                     __ptext49:	
 11393 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11394 ;; Defined at:
 11395 ;;		line 261 in file "EEPROM_24C1025.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  chip_add        1    wreg     unsigned char 
 11398 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11399 ;;  data            1   19[BANK0 ] PTR unsigned char 
 11400 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      void 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11407 ;; Tracked objects:
 11408 ;;		On entry : 300/300
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11412 ;;      Params:         0       5       0       0       0
 11413 ;;      Locals:         0       1       0       0       0
 11414 ;;      Temps:          0       0       0       0       0
 11415 ;;      Totals:         0       6       0       0       0
 11416 ;;Total ram usage:        6 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    4
 11419 ;; This function calls:
 11420 ;;		_EEPROM_24C1025_Write_Buffer
 11421 ;; This function is called by:
 11422 ;;		_Decodify_Command
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           
 11427                           ;psect for function _EEPROM_24C1025_Write_Byte
 11428  195D                     _EEPROM_24C1025_Write_Byte:	
 11429                           
 11430                           ;incstack = 0
 11431                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11432                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11433  195D  1283               	bcf	3,5	;RP0=0, select bank0
 11434  195E  1303               	bcf	3,6	;RP1=0, select bank0
 11435  195F  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11436                           
 11437                           ;EEPROM_24C1025.c: 262:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, data);
 11438  1960  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11439  1961  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11440  1962  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11441  1963  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11442  1964  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11443  1965  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11444  1966  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11445  1967  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11446  1968  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11447  1969  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11448  196A  0833               	movf	EEPROM_24C1025_Write_Byte@data,w
 11449  196B  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11450  196C  3001               	movlw	1
 11451  196D  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11452  196E  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11453  196F  160A  118A  2536   	fcall	_EEPROM_24C1025_Write_Buffer
 11454  1972  0008               	return
 11455  1973                     __end_of_EEPROM_24C1025_Write_Byte:	
 11456                           
 11457                           	psect	text50
 11458  1694                     __ptext50:	
 11459 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11460 ;; Defined at:
 11461 ;;		line 189 in file "EEPROM_24C1025.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  chip_add        1    wreg     unsigned char 
 11464 ;;  mem_add         4    6[BANK0 ] unsigned long 
 11465 ;;  texto           1   10[BANK0 ] PTR unsigned char 
 11466 ;;		 -> texto(16), 
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11469 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11470 ;;  range           1   15[BANK0 ] unsigned char 
 11471 ;;  cnt             1   13[BANK0 ] unsigned char 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 300/300
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11481 ;;      Params:         0       5       0       0       0
 11482 ;;      Locals:         0       4       0       0       0
 11483 ;;      Temps:          0       2       0       0       0
 11484 ;;      Totals:         0      11       0       0       0
 11485 ;;Total ram usage:       11 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    3
 11488 ;; This function calls:
 11489 ;;		_I2C_Master_Read
 11490 ;;		_I2C_Master_RepeatedStart
 11491 ;;		_I2C_Master_Start
 11492 ;;		_I2C_Master_Stop
 11493 ;;		_I2C_Master_Write
 11494 ;; This function is called by:
 11495 ;;		_Decodify_Command
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _EEPROM_24C1025_Read_Str
 11501  1694                     _EEPROM_24C1025_Read_Str:	
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11505                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11506  1694  1283               	bcf	3,5	;RP0=0, select bank0
 11507  1695  1303               	bcf	3,6	;RP1=0, select bank0
 11508  1696  00AE               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11509                           
 11510                           ;EEPROM_24C1025.c: 191:      unsigned char range=0;
 11511  1697  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11512                           
 11513                           ;EEPROM_24C1025.c: 192:      unsigned char ctrl;;EEPROM_24C1025.c: 194:      if(mem_add>
      +                          0x1FFFF) return;
 11514  1698  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11515  1699  1D03               	btfss	3,2
 11516  169A  0008               	return
 11517  169B  3002               	movlw	2
 11518  169C  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11519  169D  1D03               	skipz
 11520  169E  2EA7               	goto	u7063
 11521  169F  3000               	movlw	0
 11522  16A0  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11523  16A1  1D03               	skipz
 11524  16A2  2EA7               	goto	u7063
 11525  16A3  3000               	movlw	0
 11526  16A4  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11527  16A5  1D03               	skipz
 11528  16A6  2EA7               	goto	u7063
 11529  16A7                     u7063:	
 11530  16A7  1803               	btfsc	3,0
 11531  16A8  0008               	return
 11532                           
 11533                           ;EEPROM_24C1025.c: 196:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11534  16A9  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11535  16AA  1D03               	btfss	3,2
 11536  16AB  2EBA               	goto	l6708
 11537  16AC  3001               	movlw	1
 11538  16AD  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11539  16AE  1D03               	skipz
 11540  16AF  2EB8               	goto	u7073
 11541  16B0  3000               	movlw	0
 11542  16B1  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11543  16B2  1D03               	skipz
 11544  16B3  2EB8               	goto	u7073
 11545  16B4  3000               	movlw	0
 11546  16B5  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11547  16B6  1D03               	skipz
 11548  16B7  2EB8               	goto	u7073
 11549  16B8                     u7073:	
 11550  16B8  1C03               	btfss	3,0
 11551  16B9  2EBF               	goto	l6710
 11552  16BA                     l6708:	
 11553  16BA  3008               	movlw	8
 11554  16BB  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11555  16BC  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11556  16BD  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11557  16BE  2EC0               	goto	l6712
 11558  16BF                     l6710:	
 11559  16BF  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11560  16C0                     l6712:	
 11561                           
 11562                           ;EEPROM_24C1025.c: 197:      ctrl=chip_add;
 11563  16C0  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11564  16C1  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11565  16C2  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11566  16C3  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11567                           
 11568                           ;EEPROM_24C1025.c: 198:      ctrl<<=1;
 11569  16C4  1003               	clrc
 11570  16C5  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11571                           
 11572                           ;EEPROM_24C1025.c: 199:      ctrl |= 0xA0;
 11573  16C6  30A0               	movlw	160
 11574  16C7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11575  16C8  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11576  16C9  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11577                           
 11578                           ;EEPROM_24C1025.c: 200:      ctrl |= 0b00000001;
 11579  16CA  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11580                           
 11581                           ;EEPROM_24C1025.c: 201:      ctrl |= range;
 11582  16CB  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11583  16CC  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11584  16CD  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11585  16CE  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11586                           
 11587                           ;EEPROM_24C1025.c: 203:      I2C_Master_Start();
 11588  16CF  160A  158A  2118  160A  118A  	fcall	_I2C_Master_Start
 11589                           
 11590                           ;EEPROM_24C1025.c: 204:      I2C_Master_Write(ctrl & 0xFE);
 11591  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11592  16D5  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11593  16D6  39FE               	andlw	254
 11594  16D7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11595  16D8  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11596  16D9  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11597  16DA  00A0               	movwf	I2C_Master_Write@d
 11598  16DB  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11599  16DC  00A1               	movwf	I2C_Master_Write@d+1
 11600  16DD  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11601                           
 11602                           ;EEPROM_24C1025.c: 205:      I2C_Master_Write(((char *)&mem_add)[1]);
 11603  16E2  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11604  16E3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11605  16E4  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11606  16E5  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11607  16E6  00A0               	movwf	I2C_Master_Write@d
 11608  16E7  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11609  16E8  00A1               	movwf	I2C_Master_Write@d+1
 11610  16E9  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11611                           
 11612                           ;EEPROM_24C1025.c: 206:      I2C_Master_Write(((char *)&mem_add)[0]);
 11613  16EE  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11614  16EF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11615  16F0  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11616  16F1  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11617  16F2  00A0               	movwf	I2C_Master_Write@d
 11618  16F3  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11619  16F4  00A1               	movwf	I2C_Master_Write@d+1
 11620  16F5  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11621                           
 11622                           ;EEPROM_24C1025.c: 207:      I2C_Master_RepeatedStart();
 11623  16FA  120A  118A  27FB  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11624                           
 11625                           ;EEPROM_24C1025.c: 208:      I2C_Master_Write(ctrl);
 11626  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11627  1700  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11628  1701  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11629  1702  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11630  1703  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11631  1704  00A0               	movwf	I2C_Master_Write@d
 11632  1705  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11633  1706  00A1               	movwf	I2C_Master_Write@d+1
 11634  1707  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11635                           
 11636                           ;EEPROM_24C1025.c: 210:      cnt=0;
 11637  170C  01AD               	clrf	EEPROM_24C1025_Read_Str@cnt
 11638  170D                     l6734:	
 11639                           
 11640                           ;EEPROM_24C1025.c: 212:            if(mem_add>0x1FFFF) break;
 11641  170D  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11642  170E  1D03               	btfss	3,2
 11643  170F  2FE9               	goto	l6790
 11644  1710  3002               	movlw	2
 11645  1711  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11646  1712  1D03               	skipz
 11647  1713  2F1C               	goto	u7083
 11648  1714  3000               	movlw	0
 11649  1715  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11650  1716  1D03               	skipz
 11651  1717  2F1C               	goto	u7083
 11652  1718  3000               	movlw	0
 11653  1719  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11654  171A  1D03               	skipz
 11655  171B  2F1C               	goto	u7083
 11656  171C                     u7083:	
 11657  171C  1803               	btfsc	3,0
 11658  171D  2FE9               	goto	l6790
 11659                           
 11660                           ;EEPROM_24C1025.c: 213:            if((mem_add+1)%128==0)
 11661  171E  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11662  171F  3E01               	addlw	1
 11663  1720  397F               	andlw	127
 11664  1721  1D03               	btfss	3,2
 11665  1722  2FB9               	goto	l6778
 11666                           
 11667                           ;EEPROM_24C1025.c: 214:              {;EEPROM_24C1025.c: 215:              (*texto)=I2C_
      +                          Master_Read(0);
 11668  1723  3000               	movlw	0
 11669  1724  00A0               	movwf	I2C_Master_Read@a
 11670  1725  00A1               	movwf	I2C_Master_Read@a+1
 11671  1726  160A  158A  23D5  160A  118A  	fcall	_I2C_Master_Read
 11672  172B  0820               	movf	?_I2C_Master_Read,w
 11673  172C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11674  172D  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11675  172E  0084               	movwf	4
 11676  172F  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11677  1730  1783               	bsf	3,7	;select IRP bank2
 11678  1731  0080               	movwf	0
 11679                           
 11680                           ;EEPROM_24C1025.c: 216:              I2C_Master_Stop();
 11681  1732  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 11682                           
 11683                           ;EEPROM_24C1025.c: 218:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11684  1737  300D               	movlw	13
 11685  1738  1283               	bcf	3,5	;RP0=0, select bank0
 11686  1739  1303               	bcf	3,6	;RP1=0, select bank0
 11687  173A  00AC               	movwf	??_EEPROM_24C1025_Read_Str+1
 11688  173B  30FB               	movlw	251
 11689  173C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11690  173D                     u8087:	
 11691  173D  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11692  173E  2F3D               	goto	u8087
 11693  173F  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11694  1740  2F3D               	goto	u8087
 11695                           
 11696                           ;EEPROM_24C1025.c: 219:              mem_add++;
 11697  1741  3001               	movlw	1
 11698  1742  1283               	bcf	3,5	;RP0=0, select bank0
 11699  1743  1303               	bcf	3,6	;RP1=0, select bank0
 11700  1744  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11701  1745  3000               	movlw	0
 11702  1746  1803               	skipnc
 11703  1747  3001               	movlw	1
 11704  1748  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11705  1749  3000               	movlw	0
 11706  174A  1803               	skipnc
 11707  174B  3001               	movlw	1
 11708  174C  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11709  174D  3000               	movlw	0
 11710  174E  1803               	skipnc
 11711  174F  3001               	movlw	1
 11712  1750  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11713                           
 11714                           ;EEPROM_24C1025.c: 220:              texto++;
 11715  1751  3001               	movlw	1
 11716  1752  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11717  1753  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11718  1754  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11719                           
 11720                           ;EEPROM_24C1025.c: 221:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11721  1755  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11722  1756  1D03               	btfss	3,2
 11723  1757  2F66               	goto	l6752
 11724  1758  3001               	movlw	1
 11725  1759  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11726  175A  1D03               	skipz
 11727  175B  2F64               	goto	u7103
 11728  175C  3000               	movlw	0
 11729  175D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11730  175E  1D03               	skipz
 11731  175F  2F64               	goto	u7103
 11732  1760  3000               	movlw	0
 11733  1761  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11734  1762  1D03               	skipz
 11735  1763  2F64               	goto	u7103
 11736  1764                     u7103:	
 11737  1764  1C03               	btfss	3,0
 11738  1765  2F6B               	goto	l6754
 11739  1766                     l6752:	
 11740  1766  3008               	movlw	8
 11741  1767  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11742  1768  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11743  1769  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11744  176A  2F6C               	goto	l6756
 11745  176B                     l6754:	
 11746  176B  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11747  176C                     l6756:	
 11748                           
 11749                           ;EEPROM_24C1025.c: 222:              ctrl=chip_add;
 11750  176C  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11751  176D  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11752  176E  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11753  176F  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11754                           
 11755                           ;EEPROM_24C1025.c: 223:              ctrl<<=1;
 11756  1770  1003               	clrc
 11757  1771  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11758                           
 11759                           ;EEPROM_24C1025.c: 224:              ctrl |= 0xA0;
 11760  1772  30A0               	movlw	160
 11761  1773  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11762  1774  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11763  1775  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11764                           
 11765                           ;EEPROM_24C1025.c: 225:              ctrl |= 0b00000001;
 11766  1776  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11767                           
 11768                           ;EEPROM_24C1025.c: 226:              ctrl |= range;
 11769  1777  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11770  1778  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11771  1779  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11772  177A  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11773                           
 11774                           ;EEPROM_24C1025.c: 228:              I2C_Master_Start();
 11775  177B  160A  158A  2118  160A  118A  	fcall	_I2C_Master_Start
 11776                           
 11777                           ;EEPROM_24C1025.c: 229:              I2C_Master_Write(ctrl & 0xFE);
 11778  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11779  1781  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11780  1782  39FE               	andlw	254
 11781  1783  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11782  1784  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11783  1785  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11784  1786  00A0               	movwf	I2C_Master_Write@d
 11785  1787  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11786  1788  00A1               	movwf	I2C_Master_Write@d+1
 11787  1789  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11788                           
 11789                           ;EEPROM_24C1025.c: 230:              I2C_Master_Write(((char *)&mem_add)[1]);
 11790  178E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11791  178F  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11792  1790  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11793  1791  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11794  1792  00A0               	movwf	I2C_Master_Write@d
 11795  1793  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11796  1794  00A1               	movwf	I2C_Master_Write@d+1
 11797  1795  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11798                           
 11799                           ;EEPROM_24C1025.c: 231:              I2C_Master_Write(((char *)&mem_add)[0]);
 11800  179A  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11801  179B  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11802  179C  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11803  179D  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11804  179E  00A0               	movwf	I2C_Master_Write@d
 11805  179F  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11806  17A0  00A1               	movwf	I2C_Master_Write@d+1
 11807  17A1  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11808                           
 11809                           ;EEPROM_24C1025.c: 232:              I2C_Master_RepeatedStart();
 11810  17A6  120A  118A  27FB  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11811                           
 11812                           ;EEPROM_24C1025.c: 233:              I2C_Master_Write(ctrl);
 11813  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11814  17AC  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11815  17AD  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11816  17AE  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11817  17AF  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11818  17B0  00A0               	movwf	I2C_Master_Write@d
 11819  17B1  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11820  17B2  00A1               	movwf	I2C_Master_Write@d+1
 11821  17B3  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 11822                           
 11823                           ;EEPROM_24C1025.c: 234:              }
 11824  17B8  2FE0               	goto	l6788
 11825  17B9                     l6778:	
 11826                           
 11827                           ;EEPROM_24C1025.c: 236:              {;EEPROM_24C1025.c: 237:              (*texto)=I2C_
      +                          Master_Read(1);
 11828  17B9  3001               	movlw	1
 11829  17BA  00A0               	movwf	I2C_Master_Read@a
 11830  17BB  3000               	movlw	0
 11831  17BC  00A1               	movwf	I2C_Master_Read@a+1
 11832  17BD  160A  158A  23D5  160A  118A  	fcall	_I2C_Master_Read
 11833  17C2  0820               	movf	?_I2C_Master_Read,w
 11834  17C3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11835  17C4  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11836  17C5  0084               	movwf	4
 11837  17C6  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11838  17C7  1783               	bsf	3,7	;select IRP bank2
 11839  17C8  0080               	movwf	0
 11840                           
 11841                           ;EEPROM_24C1025.c: 238:              if((*texto)==0)break;
 11842  17C9  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11843  17CA  0084               	movwf	4
 11844  17CB  0800               	movf	0,w
 11845  17CC  1903               	btfsc	3,2
 11846  17CD  2FE9               	goto	l6790
 11847                           
 11848                           ;EEPROM_24C1025.c: 239:              texto++;
 11849  17CE  3001               	movlw	1
 11850  17CF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11851  17D0  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11852  17D1  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11853                           
 11854                           ;EEPROM_24C1025.c: 240:              mem_add++;
 11855  17D2  3001               	movlw	1
 11856  17D3  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11857  17D4  3000               	movlw	0
 11858  17D5  1803               	skipnc
 11859  17D6  3001               	movlw	1
 11860  17D7  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11861  17D8  3000               	movlw	0
 11862  17D9  1803               	skipnc
 11863  17DA  3001               	movlw	1
 11864  17DB  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11865  17DC  3000               	movlw	0
 11866  17DD  1803               	skipnc
 11867  17DE  3001               	movlw	1
 11868  17DF  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11869  17E0                     l6788:	
 11870                           
 11871                           ;EEPROM_24C1025.c: 242:        }while((cnt++)<64);
 11872  17E0  3001               	movlw	1
 11873  17E1  07AD               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11874  17E2  30FF               	movlw	-1
 11875  17E3  072D               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11876  17E4  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11877  17E5  3040               	movlw	64
 11878  17E6  022B               	subwf	??_EEPROM_24C1025_Read_Str,w
 11879  17E7  1C03               	skipc
 11880  17E8  2F0D               	goto	l6734
 11881  17E9                     l6790:	
 11882                           
 11883                           ;EEPROM_24C1025.c: 244:      I2C_Master_Read(0);
 11884  17E9  3000               	movlw	0
 11885  17EA  00A0               	movwf	I2C_Master_Read@a
 11886  17EB  00A1               	movwf	I2C_Master_Read@a+1
 11887  17EC  160A  158A  23D5  160A  118A  	fcall	_I2C_Master_Read
 11888                           
 11889                           ;EEPROM_24C1025.c: 245:      I2C_Master_Stop();
 11890  17F1  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 11891                           
 11892                           ;EEPROM_24C1025.c: 246:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11893  17F6  30B9               	movlw	185
 11894  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11895  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11896  17F9  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11897  17FA                     u8097:	
 11898  17FA  2FFB               	nop2
 11899  17FB  2FFC               	nop2
 11900  17FC  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11901  17FD  2FFA               	goto	u8097
 11902  17FE  2FFF               	nop2
 11903  17FF  0008               	return
 11904  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11905                           
 11906                           	psect	text51
 11907  1B30                     __ptext51:	
 11908 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11909 ;; Defined at:
 11910 ;;		line 280 in file "EEPROM_24C1025.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;  chip_add        1    wreg     unsigned char 
 11913 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  chip_add        1   26[BANK0 ] unsigned char 
 11916 ;;  data            2   27[BANK0 ] unsigned char [2]
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  2   20[BANK0 ] unsigned int 
 11919 ;; Registers used:
 11920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 300/300
 11923 ;;		On exit  : 300/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11926 ;;      Params:         0       4       0       0       0
 11927 ;;      Locals:         0       3       0       0       0
 11928 ;;      Temps:          0       2       0       0       0
 11929 ;;      Totals:         0       9       0       0       0
 11930 ;;Total ram usage:        9 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    4
 11933 ;; This function calls:
 11934 ;;		_EEPROM_24C1025_Read_Buffer
 11935 ;; This function is called by:
 11936 ;;		_Decodify_Command
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           
 11941                           ;psect for function _EEPROM_24C1025_Read_Int
 11942  1B30                     _EEPROM_24C1025_Read_Int:	
 11943                           
 11944                           ;incstack = 0
 11945                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11946                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11947  1B30  1283               	bcf	3,5	;RP0=0, select bank0
 11948  1B31  1303               	bcf	3,6	;RP1=0, select bank0
 11949  1B32  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11950                           
 11951                           ;EEPROM_24C1025.c: 281:     char data[2];;EEPROM_24C1025.c: 282:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11952  1B33  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11953  1B34  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11954  1B35  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11955  1B36  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11956  1B37  0835               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11957  1B38  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11958  1B39  0834               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11959  1B3A  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11960  1B3B  3002               	movlw	2
 11961  1B3C  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 11962  1B3D  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 11963  1B3E  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11964  1B3F  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11965  1B40  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 11966  1B41  3000               	movlw	0
 11967  1B42  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11968  1B43  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11969  1B44  120A  158A  202C   	fcall	_EEPROM_24C1025_Read_Buffer
 11970                           
 11971                           ;EEPROM_24C1025.c: 283:     return (data[0]<<8)+data[1];
 11972  1B47  1283               	bcf	3,5	;RP0=0, select bank0
 11973  1B48  1303               	bcf	3,6	;RP1=0, select bank0
 11974  1B49  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 11975  1B4A  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 11976  1B4B  01B9               	clrf	??_EEPROM_24C1025_Read_Int+1
 11977  1B4C  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 11978  1B4D  00B9               	movwf	??_EEPROM_24C1025_Read_Int+1
 11979  1B4E  01B8               	clrf	??_EEPROM_24C1025_Read_Int
 11980  1B4F  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11981  1B50  0738               	addwf	??_EEPROM_24C1025_Read_Int,w
 11982  1B51  00B4               	movwf	?_EEPROM_24C1025_Read_Int
 11983  1B52  3000               	movlw	0
 11984  1B53  1803               	skipnc
 11985  1B54  3001               	movlw	1
 11986  1B55  0739               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11987  1B56  00B5               	movwf	?_EEPROM_24C1025_Read_Int+1
 11988  1B57  0008               	return
 11989  1B58                     __end_of_EEPROM_24C1025_Read_Int:	
 11990                           
 11991                           	psect	text52
 11992  19D0                     __ptext52:	
 11993 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11994 ;; Defined at:
 11995 ;;		line 266 in file "EEPROM_24C1025.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;  chip_add        1    wreg     unsigned char 
 11998 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  chip_add        1   24[BANK0 ] unsigned char 
 12001 ;;  data            1   25[BANK0 ] PTR unsigned char 
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      unsigned char 
 12004 ;; Registers used:
 12005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 300/300
 12008 ;;		On exit  : B00/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12011 ;;      Params:         0       4       0       0       0
 12012 ;;      Locals:         0       2       0       0       0
 12013 ;;      Temps:          0       0       0       0       0
 12014 ;;      Totals:         0       6       0       0       0
 12015 ;;Total ram usage:        6 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    4
 12018 ;; This function calls:
 12019 ;;		_EEPROM_24C1025_Read_Buffer
 12020 ;; This function is called by:
 12021 ;;		_Decodify_Command
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           
 12026                           ;psect for function _EEPROM_24C1025_Read_Byte
 12027  19D0                     _EEPROM_24C1025_Read_Byte:	
 12028                           
 12029                           ;incstack = 0
 12030                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12031                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12032  19D0  1283               	bcf	3,5	;RP0=0, select bank0
 12033  19D1  1303               	bcf	3,6	;RP1=0, select bank0
 12034  19D2  00B8               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12035                           
 12036                           ;EEPROM_24C1025.c: 267:     char *data;;EEPROM_24C1025.c: 268:     EEPROM_24C1025_Read_B
      +                          uffer(chip_add, mem_add, 1, data);
 12037  19D3  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12038  19D4  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12039  19D5  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12040  19D6  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12041  19D7  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12042  19D8  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12043  19D9  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12044  19DA  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12045  19DB  01AA               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12046  19DC  0AAA               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12047  19DD  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12048  19DE  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12049  19DF  3000               	movlw	0
 12050  19E0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12051  19E1  0838               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12052  19E2  120A  158A  202C   	fcall	_EEPROM_24C1025_Read_Buffer
 12053                           
 12054                           ;EEPROM_24C1025.c: 269:     return *data;
 12055  19E5  1283               	bcf	3,5	;RP0=0, select bank0
 12056  19E6  1303               	bcf	3,6	;RP1=0, select bank0
 12057  19E7  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12058  19E8  0084               	movwf	4
 12059  19E9  1383               	bcf	3,7	;select IRP bank0
 12060  19EA  0800               	movf	0,w
 12061  19EB  0008               	return
 12062  19EC                     __end_of_EEPROM_24C1025_Read_Byte:	
 12063                           
 12064                           	psect	text53
 12065  082C                     __ptext53:	
 12066 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 12067 ;; Defined at:
 12068 ;;		line 69 in file "EEPROM_24C1025.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  chip_add        1    wreg     unsigned char 
 12071 ;;  mem_add         4    6[BANK0 ] unsigned long 
 12072 ;;  sizedata        1   10[BANK0 ] unsigned char 
 12073 ;;  data            2   11[BANK0 ] PTR unsigned char 
 12074 ;;		 -> EEPROM_24C1025_Read_Int@data(2), buffer(64), 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;  chip_add        1   17[BANK0 ] unsigned char 
 12077 ;;  cnt             1   16[BANK0 ] unsigned char 
 12078 ;;  ctrl            1   19[BANK0 ] unsigned char 
 12079 ;;  range           1   18[BANK0 ] unsigned char 
 12080 ;;  cnt             1    0        unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/300
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12090 ;;      Params:         0       7       0       0       0
 12091 ;;      Locals:         0       5       0       0       0
 12092 ;;      Temps:          0       2       0       0       0
 12093 ;;      Totals:         0      14       0       0       0
 12094 ;;Total ram usage:       14 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    3
 12097 ;; This function calls:
 12098 ;;		_I2C_Master_Read
 12099 ;;		_I2C_Master_RepeatedStart
 12100 ;;		_I2C_Master_Start
 12101 ;;		_I2C_Master_Stop
 12102 ;;		_I2C_Master_Write
 12103 ;; This function is called by:
 12104 ;;		_Decodify_Command
 12105 ;;		_EEPROM_24C1025_Read_Byte
 12106 ;;		_EEPROM_24C1025_Read_Int
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           
 12111                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12112  082C                     _EEPROM_24C1025_Read_Buffer:	
 12113                           
 12114                           ;incstack = 0
 12115                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12116                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12117  082C  1283               	bcf	3,5	;RP0=0, select bank0
 12118  082D  1303               	bcf	3,6	;RP1=0, select bank0
 12119  082E  00B1               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12120                           
 12121                           ;EEPROM_24C1025.c: 75:      unsigned char range=0;
 12122  082F  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12123                           
 12124                           ;EEPROM_24C1025.c: 76:      unsigned char ctrl;;EEPROM_24C1025.c: 78:      if(mem_add>0x
      +                          1FFFF) return;
 12125  0830  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12126  0831  1D03               	btfss	3,2
 12127  0832  0008               	return
 12128  0833  3002               	movlw	2
 12129  0834  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12130  0835  1D03               	skipz
 12131  0836  283F               	goto	u5743
 12132  0837  3000               	movlw	0
 12133  0838  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12134  0839  1D03               	skipz
 12135  083A  283F               	goto	u5743
 12136  083B  3000               	movlw	0
 12137  083C  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12138  083D  1D03               	skipz
 12139  083E  283F               	goto	u5743
 12140  083F                     u5743:	
 12141  083F  1803               	btfsc	3,0
 12142  0840  0008               	return
 12143                           
 12144                           ;EEPROM_24C1025.c: 80:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12145  0841  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12146  0842  1D03               	btfss	3,2
 12147  0843  2852               	goto	l5922
 12148  0844  3001               	movlw	1
 12149  0845  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12150  0846  1D03               	skipz
 12151  0847  2850               	goto	u5753
 12152  0848  3000               	movlw	0
 12153  0849  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12154  084A  1D03               	skipz
 12155  084B  2850               	goto	u5753
 12156  084C  3000               	movlw	0
 12157  084D  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12158  084E  1D03               	skipz
 12159  084F  2850               	goto	u5753
 12160  0850                     u5753:	
 12161  0850  1C03               	btfss	3,0
 12162  0851  2857               	goto	l5924
 12163  0852                     l5922:	
 12164  0852  3008               	movlw	8
 12165  0853  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12166  0854  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12167  0855  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12168  0856  2858               	goto	l5926
 12169  0857                     l5924:	
 12170  0857  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12171  0858                     l5926:	
 12172                           
 12173                           ;EEPROM_24C1025.c: 81:      ctrl=chip_add;
 12174  0858  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12175  0859  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12176  085A  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12177  085B  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12178                           
 12179                           ;EEPROM_24C1025.c: 82:      ctrl<<=1;
 12180  085C  1003               	clrc
 12181  085D  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12182                           
 12183                           ;EEPROM_24C1025.c: 83:      ctrl |= 0xA0;
 12184  085E  30A0               	movlw	160
 12185  085F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12186  0860  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12187  0861  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12188                           
 12189                           ;EEPROM_24C1025.c: 84:      ctrl |= 0b00000001;
 12190  0862  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12191                           
 12192                           ;EEPROM_24C1025.c: 85:      ctrl |= range;
 12193  0863  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12194  0864  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12195  0865  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12196  0866  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12197                           
 12198                           ;EEPROM_24C1025.c: 87:      I2C_Master_Start();
 12199  0867  160A  158A  2118  120A  158A  	fcall	_I2C_Master_Start
 12200                           
 12201                           ;EEPROM_24C1025.c: 88:      I2C_Master_Write(ctrl & 0xFE);
 12202  086C  1283               	bcf	3,5	;RP0=0, select bank0
 12203  086D  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12204  086E  39FE               	andlw	254
 12205  086F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12206  0870  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12207  0871  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12208  0872  00A0               	movwf	I2C_Master_Write@d
 12209  0873  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12210  0874  00A1               	movwf	I2C_Master_Write@d+1
 12211  0875  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12212                           
 12213                           ;EEPROM_24C1025.c: 89:      I2C_Master_Write(((char *)&mem_add)[1]);
 12214  087A  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12215  087B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12216  087C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12217  087D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12218  087E  00A0               	movwf	I2C_Master_Write@d
 12219  087F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12220  0880  00A1               	movwf	I2C_Master_Write@d+1
 12221  0881  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12222                           
 12223                           ;EEPROM_24C1025.c: 90:      I2C_Master_Write(((char *)&mem_add)[0]);
 12224  0886  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12225  0887  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12226  0888  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12227  0889  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12228  088A  00A0               	movwf	I2C_Master_Write@d
 12229  088B  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12230  088C  00A1               	movwf	I2C_Master_Write@d+1
 12231  088D  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12232                           
 12233                           ;EEPROM_24C1025.c: 91:      I2C_Master_RepeatedStart();
 12234  0892  120A  118A  27FB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12235                           
 12236                           ;EEPROM_24C1025.c: 92:      I2C_Master_Write(ctrl);
 12237  0897  1283               	bcf	3,5	;RP0=0, select bank0
 12238  0898  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12239  0899  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12240  089A  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12241  089B  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12242  089C  00A0               	movwf	I2C_Master_Write@d
 12243  089D  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12244  089E  00A1               	movwf	I2C_Master_Write@d+1
 12245  089F  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12246                           
 12247                           ;EEPROM_24C1025.c: 94:      for(char cnt=0;cnt<(sizedata);cnt++)
 12248  08A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1528
 12249  08A5                     l6000:	
 12250  08A5  082A               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12251  08A6  0230               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1528,w
 12252  08A7  1803               	btfsc	3,0
 12253  08A8  2984               	goto	l6002
 12254                           
 12255                           ;EEPROM_24C1025.c: 95:         {;EEPROM_24C1025.c: 96:            if(mem_add>0x1FFFF) br
      +                          eak;
 12256  08A9  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12257  08AA  1D03               	btfss	3,2
 12258  08AB  2984               	goto	l6002
 12259  08AC  3002               	movlw	2
 12260  08AD  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12261  08AE  1D03               	skipz
 12262  08AF  28B8               	goto	u5763
 12263  08B0  3000               	movlw	0
 12264  08B1  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12265  08B2  1D03               	skipz
 12266  08B3  28B8               	goto	u5763
 12267  08B4  3000               	movlw	0
 12268  08B5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12269  08B6  1D03               	skipz
 12270  08B7  28B8               	goto	u5763
 12271  08B8                     u5763:	
 12272  08B8  1803               	btfsc	3,0
 12273  08B9  2984               	goto	l6002
 12274                           
 12275                           ;EEPROM_24C1025.c: 97:            if((mem_add+1)%128==0)
 12276  08BA  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12277  08BB  3E01               	addlw	1
 12278  08BC  397F               	andlw	127
 12279  08BD  1D03               	btfss	3,2
 12280  08BE  2959               	goto	l5992
 12281                           
 12282                           ;EEPROM_24C1025.c: 98:              {;EEPROM_24C1025.c: 99:              (*data)=I2C_Mas
      +                          ter_Read(0);
 12283  08BF  3000               	movlw	0
 12284  08C0  00A0               	movwf	I2C_Master_Read@a
 12285  08C1  00A1               	movwf	I2C_Master_Read@a+1
 12286  08C2  160A  158A  23D5  120A  158A  	fcall	_I2C_Master_Read
 12287  08C7  0820               	movf	?_I2C_Master_Read,w
 12288  08C8  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12289  08C9  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12290  08CA  0084               	movwf	4
 12291  08CB  1783               	bsf	3,7
 12292  08CC  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12293  08CD  1383               	bcf	3,7
 12294  08CE  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12295  08CF  0080               	movwf	0
 12296                           
 12297                           ;EEPROM_24C1025.c: 100:              I2C_Master_Stop();
 12298  08D0  160A  158A  2103  120A  158A  	fcall	_I2C_Master_Stop
 12299                           
 12300                           ;EEPROM_24C1025.c: 102:              _delay((unsigned long)((5)*(8000000/4000.0)));
 12301  08D5  300D               	movlw	13
 12302  08D6  1283               	bcf	3,5	;RP0=0, select bank0
 12303  08D7  1303               	bcf	3,6	;RP1=0, select bank0
 12304  08D8  00AE               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 12305  08D9  30FB               	movlw	251
 12306  08DA  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12307  08DB                     u8107:	
 12308  08DB  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12309  08DC  28DB               	goto	u8107
 12310  08DD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 12311  08DE  28DB               	goto	u8107
 12312                           
 12313                           ;EEPROM_24C1025.c: 103:              mem_add++;
 12314  08DF  3001               	movlw	1
 12315  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 12316  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 12317  08E2  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12318  08E3  3000               	movlw	0
 12319  08E4  1803               	skipnc
 12320  08E5  3001               	movlw	1
 12321  08E6  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12322  08E7  3000               	movlw	0
 12323  08E8  1803               	skipnc
 12324  08E9  3001               	movlw	1
 12325  08EA  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12326  08EB  3000               	movlw	0
 12327  08EC  1803               	skipnc
 12328  08ED  3001               	movlw	1
 12329  08EE  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12330                           
 12331                           ;EEPROM_24C1025.c: 104:              data++;
 12332  08EF  3001               	movlw	1
 12333  08F0  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12334  08F1  1803               	skipnc
 12335  08F2  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12336  08F3  3000               	movlw	0
 12337  08F4  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12338                           
 12339                           ;EEPROM_24C1025.c: 105:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12340  08F5  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12341  08F6  1D03               	btfss	3,2
 12342  08F7  2906               	goto	l5966
 12343  08F8  3001               	movlw	1
 12344  08F9  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12345  08FA  1D03               	skipz
 12346  08FB  2904               	goto	u5783
 12347  08FC  3000               	movlw	0
 12348  08FD  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12349  08FE  1D03               	skipz
 12350  08FF  2904               	goto	u5783
 12351  0900  3000               	movlw	0
 12352  0901  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12353  0902  1D03               	skipz
 12354  0903  2904               	goto	u5783
 12355  0904                     u5783:	
 12356  0904  1C03               	btfss	3,0
 12357  0905  290B               	goto	l5968
 12358  0906                     l5966:	
 12359  0906  3008               	movlw	8
 12360  0907  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12361  0908  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12362  0909  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12363  090A  290C               	goto	l5970
 12364  090B                     l5968:	
 12365  090B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12366  090C                     l5970:	
 12367                           
 12368                           ;EEPROM_24C1025.c: 106:              ctrl=chip_add;
 12369  090C  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12370  090D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12371  090E  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12372  090F  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12373                           
 12374                           ;EEPROM_24C1025.c: 107:              ctrl<<=1;
 12375  0910  1003               	clrc
 12376  0911  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12377                           
 12378                           ;EEPROM_24C1025.c: 108:              ctrl |= 0xA0;
 12379  0912  30A0               	movlw	160
 12380  0913  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12381  0914  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12382  0915  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12383                           
 12384                           ;EEPROM_24C1025.c: 109:              ctrl |= 0b00000001;
 12385  0916  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12386                           
 12387                           ;EEPROM_24C1025.c: 110:              ctrl |= range;
 12388  0917  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12389  0918  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12390  0919  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12391  091A  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12392                           
 12393                           ;EEPROM_24C1025.c: 112:              I2C_Master_Start();
 12394  091B  160A  158A  2118  120A  158A  	fcall	_I2C_Master_Start
 12395                           
 12396                           ;EEPROM_24C1025.c: 113:              I2C_Master_Write(ctrl & 0xFE);
 12397  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12398  0921  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12399  0922  39FE               	andlw	254
 12400  0923  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12401  0924  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12402  0925  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12403  0926  00A0               	movwf	I2C_Master_Write@d
 12404  0927  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12405  0928  00A1               	movwf	I2C_Master_Write@d+1
 12406  0929  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12407                           
 12408                           ;EEPROM_24C1025.c: 114:              I2C_Master_Write(((char *)&mem_add)[1]);
 12409  092E  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12410  092F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12411  0930  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12412  0931  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12413  0932  00A0               	movwf	I2C_Master_Write@d
 12414  0933  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12415  0934  00A1               	movwf	I2C_Master_Write@d+1
 12416  0935  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12417                           
 12418                           ;EEPROM_24C1025.c: 115:              I2C_Master_Write(((char *)&mem_add)[0]);
 12419  093A  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12420  093B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12421  093C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12422  093D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12423  093E  00A0               	movwf	I2C_Master_Write@d
 12424  093F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12425  0940  00A1               	movwf	I2C_Master_Write@d+1
 12426  0941  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12427                           
 12428                           ;EEPROM_24C1025.c: 116:              I2C_Master_RepeatedStart();
 12429  0946  120A  118A  27FB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12430                           
 12431                           ;EEPROM_24C1025.c: 117:              I2C_Master_Write(ctrl);
 12432  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12433  094C  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12434  094D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12435  094E  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12436  094F  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12437  0950  00A0               	movwf	I2C_Master_Write@d
 12438  0951  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12439  0952  00A1               	movwf	I2C_Master_Write@d+1
 12440  0953  160A  158A  2121  120A  158A  	fcall	_I2C_Master_Write
 12441                           
 12442                           ;EEPROM_24C1025.c: 118:              }
 12443  0958  297F               	goto	l5998
 12444  0959                     l5992:	
 12445                           
 12446                           ;EEPROM_24C1025.c: 120:              {;EEPROM_24C1025.c: 121:              (*data)=I2C_M
      +                          aster_Read(1);
 12447  0959  3001               	movlw	1
 12448  095A  00A0               	movwf	I2C_Master_Read@a
 12449  095B  3000               	movlw	0
 12450  095C  00A1               	movwf	I2C_Master_Read@a+1
 12451  095D  160A  158A  23D5  120A  158A  	fcall	_I2C_Master_Read
 12452  0962  0820               	movf	?_I2C_Master_Read,w
 12453  0963  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12454  0964  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12455  0965  0084               	movwf	4
 12456  0966  1783               	bsf	3,7
 12457  0967  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12458  0968  1383               	bcf	3,7
 12459  0969  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12460  096A  0080               	movwf	0
 12461                           
 12462                           ;EEPROM_24C1025.c: 122:              data++;
 12463  096B  3001               	movlw	1
 12464  096C  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12465  096D  1803               	skipnc
 12466  096E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12467  096F  3000               	movlw	0
 12468  0970  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12469                           
 12470                           ;EEPROM_24C1025.c: 123:              mem_add++;
 12471  0971  3001               	movlw	1
 12472  0972  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12473  0973  3000               	movlw	0
 12474  0974  1803               	skipnc
 12475  0975  3001               	movlw	1
 12476  0976  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12477  0977  3000               	movlw	0
 12478  0978  1803               	skipnc
 12479  0979  3001               	movlw	1
 12480  097A  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12481  097B  3000               	movlw	0
 12482  097C  1803               	skipnc
 12483  097D  3001               	movlw	1
 12484  097E  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12485  097F                     l5998:	
 12486                           
 12487                           ;EEPROM_24C1025.c: 125:         }
 12488  097F  3001               	movlw	1
 12489  0980  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12490  0981  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12491  0982  07B0               	addwf	EEPROM_24C1025_Read_Buffer@cnt_1528,f
 12492  0983  28A5               	goto	l6000
 12493  0984                     l6002:	
 12494                           
 12495                           ;EEPROM_24C1025.c: 126:         I2C_Master_Read(0);
 12496  0984  3000               	movlw	0
 12497  0985  00A0               	movwf	I2C_Master_Read@a
 12498  0986  00A1               	movwf	I2C_Master_Read@a+1
 12499  0987  160A  158A  23D5  120A  158A  	fcall	_I2C_Master_Read
 12500                           
 12501                           ;EEPROM_24C1025.c: 127:         I2C_Master_Stop();
 12502  098C  160A  158A  2103  120A  158A  	fcall	_I2C_Master_Stop
 12503                           
 12504                           ;EEPROM_24C1025.c: 128:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12505  0991  30B9               	movlw	185
 12506  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12507  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12508  0994  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12509  0995                     u8117:	
 12510  0995  2996               	nop2
 12511  0996  2997               	nop2
 12512  0997  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12513  0998  2995               	goto	u8117
 12514  0999  299A               	nop2
 12515  099A  0008               	return
 12516  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12517                           
 12518                           	psect	text54
 12519  07FB                     __ptext54:	
 12520 ;; *************** function _I2C_Master_RepeatedStart *****************
 12521 ;; Defined at:
 12522 ;;		line 52 in file "I2C.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;		None
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0, pclath, cstack
 12531 ;; Tracked objects:
 12532 ;;		On entry : 300/0
 12533 ;;		On exit  : 300/100
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12536 ;;      Params:         0       0       0       0       0
 12537 ;;      Locals:         0       0       0       0       0
 12538 ;;      Temps:          0       0       0       0       0
 12539 ;;      Totals:         0       0       0       0       0
 12540 ;;Total ram usage:        0 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; Hardware stack levels required when called:    2
 12543 ;; This function calls:
 12544 ;;		_I2C_Master_Wait
 12545 ;; This function is called by:
 12546 ;;		_EEPROM_24C1025_Read_Buffer
 12547 ;;		_EEPROM_24C1025_Read_Str
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           
 12552                           ;psect for function _I2C_Master_RepeatedStart
 12553  07FB                     _I2C_Master_RepeatedStart:	
 12554                           
 12555                           ;I2C.c: 54:   I2C_Master_Wait();
 12556                           
 12557                           ;incstack = 0
 12558                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12559  07FB  160A  158A  2108   	fcall	_I2C_Master_Wait
 12560                           
 12561                           ;I2C.c: 55:   RSEN = 1;
 12562  07FE  1491               	bsf	17,1	;volatile
 12563  07FF  0008               	return
 12564  0800                     __end_of_I2C_Master_RepeatedStart:	
 12565                           
 12566                           	psect	text55
 12567  1BD5                     __ptext55:	
 12568 ;; *************** function _I2C_Master_Read *****************
 12569 ;; Defined at:
 12570 ;;		line 71 in file "I2C.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  a               2    0[BANK0 ] unsigned short 
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;  temp            2    4[BANK0 ] unsigned short 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  2    0[BANK0 ] unsigned short 
 12577 ;; Registers used:
 12578 ;;		wreg, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : 300/0
 12581 ;;		On exit  : 300/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12584 ;;      Params:         0       2       0       0       0
 12585 ;;      Locals:         0       2       0       0       0
 12586 ;;      Temps:          0       2       0       0       0
 12587 ;;      Totals:         0       6       0       0       0
 12588 ;;Total ram usage:        6 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:    2
 12591 ;; This function calls:
 12592 ;;		_I2C_Master_Wait
 12593 ;; This function is called by:
 12594 ;;		_EEPROM_24C1025_Read_Buffer
 12595 ;;		_EEPROM_24C1025_Read_Str
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599                           
 12600                           ;psect for function _I2C_Master_Read
 12601  1BD5                     _I2C_Master_Read:	
 12602                           
 12603                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12604                           
 12605                           ;incstack = 0
 12606                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12607  1BD5  1683               	bsf	3,5	;RP0=1, select bank1
 12608  1BD6  17EB               	bsf	_generic_status^(0+128),7
 12609                           
 12610                           ;I2C.c: 75:   I2C_Master_Wait();
 12611  1BD7  160A  158A  2108  160A  158A  	fcall	_I2C_Master_Wait
 12612                           
 12613                           ;I2C.c: 76:   RCEN = 1;
 12614  1BDC  1591               	bsf	17,3	;volatile
 12615                           
 12616                           ;I2C.c: 77:   I2C_Master_Wait();
 12617  1BDD  160A  158A  2108  160A  158A  	fcall	_I2C_Master_Wait
 12618                           
 12619                           ;I2C.c: 78:   temp = SSPBUF;
 12620  1BE2  1283               	bcf	3,5	;RP0=0, select bank0
 12621  1BE3  0813               	movf	19,w	;volatile
 12622  1BE4  00A2               	movwf	??_I2C_Master_Read
 12623  1BE5  01A3               	clrf	??_I2C_Master_Read+1
 12624  1BE6  0822               	movf	??_I2C_Master_Read,w
 12625  1BE7  00A4               	movwf	I2C_Master_Read@temp
 12626  1BE8  0823               	movf	??_I2C_Master_Read+1,w
 12627  1BE9  00A5               	movwf	I2C_Master_Read@temp+1
 12628                           
 12629                           ;I2C.c: 79:   I2C_Master_Wait();
 12630  1BEA  160A  158A  2108  160A  158A  	fcall	_I2C_Master_Wait
 12631                           
 12632                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12633  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
 12634  1BF0  0820               	movf	I2C_Master_Read@a,w
 12635  1BF1  0421               	iorwf	I2C_Master_Read@a+1,w
 12636  1BF2  1D03               	btfss	3,2
 12637  1BF3  2BF8               	goto	u5440
 12638  1BF4  1683               	bsf	3,5	;RP0=1, select bank1
 12639  1BF5  1303               	bcf	3,6	;RP1=0, select bank1
 12640  1BF6  1691               	bsf	17,5	;volatile
 12641  1BF7  2BFB               	goto	l5702
 12642  1BF8                     u5440:	
 12643  1BF8  1683               	bsf	3,5	;RP0=1, select bank1
 12644  1BF9  1303               	bcf	3,6	;RP1=0, select bank1
 12645  1BFA  1291               	bcf	17,5	;volatile
 12646  1BFB                     l5702:	
 12647                           
 12648                           ;I2C.c: 81:   ACKEN = 1;
 12649  1BFB  1611               	bsf	17,4	;volatile
 12650                           
 12651                           ;I2C.c: 82:   return temp;
 12652  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
 12653  1BFD  0825               	movf	I2C_Master_Read@temp+1,w
 12654  1BFE  00A1               	movwf	?_I2C_Master_Read+1
 12655  1BFF  0824               	movf	I2C_Master_Read@temp,w
 12656  1C00  00A0               	movwf	?_I2C_Master_Read
 12657  1C01  0008               	return
 12658  1C02                     __end_of_I2C_Master_Read:	
 12659                           
 12660                           	psect	text56
 12661  1E63                     __ptext56:	
 12662 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12663 ;; Defined at:
 12664 ;;		line 287 in file "EEPROM_24C1025.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  chip_add        1    wreg     unsigned char 
 12667 ;;  value           1   15[BANK0 ] unsigned char 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  chip_add        1   19[BANK0 ] unsigned char 
 12670 ;;  page            2   21[BANK0 ] unsigned int 
 12671 ;;  i               1   20[BANK0 ] unsigned char 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  1    wreg      void 
 12674 ;; Registers used:
 12675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12676 ;; Tracked objects:
 12677 ;;		On entry : 300/300
 12678 ;;		On exit  : 300/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12681 ;;      Params:         0       1       0       0       0
 12682 ;;      Locals:         0       4       0       0       0
 12683 ;;      Temps:          0       3       0       0       0
 12684 ;;      Totals:         0       8       0       0       0
 12685 ;;Total ram usage:        8 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:    4
 12688 ;; This function calls:
 12689 ;;		_EEPROM_24C1025_Write_Buffer
 12690 ;; This function is called by:
 12691 ;;		_Decodify_Command
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           
 12696                           ;psect for function _EEPROM_24C1025_Fill_All
 12697  1E63                     _EEPROM_24C1025_Fill_All:	
 12698                           
 12699                           ;incstack = 0
 12700                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12701                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12702  1E63  1283               	bcf	3,5	;RP0=0, select bank0
 12703  1E64  1303               	bcf	3,6	;RP1=0, select bank0
 12704  1E65  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12705                           
 12706                           ;EEPROM_24C1025.c: 291:      for(i=0;i<128;i++) buffer[i]=value;
 12707  1E66  01B4               	clrf	EEPROM_24C1025_Fill_All@i
 12708  1E67                     l6800:	
 12709  1E67  082F               	movf	EEPROM_24C1025_Fill_All@value,w
 12710  1E68  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12711  1E69  0834               	movf	EEPROM_24C1025_Fill_All@i,w
 12712  1E6A  3E10               	addlw	(low (_buffer| (0+256)))& (0+255)
 12713  1E6B  0084               	movwf	4
 12714  1E6C  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12715  1E6D  1783               	bsf	3,7	;select IRP bank2
 12716  1E6E  0080               	movwf	0
 12717  1E6F  3001               	movlw	1
 12718  1E70  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12719  1E71  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12720  1E72  07B4               	addwf	EEPROM_24C1025_Fill_All@i,f
 12721  1E73  3080               	movlw	128
 12722  1E74  0234               	subwf	EEPROM_24C1025_Fill_All@i,w
 12723  1E75  1C03               	skipc
 12724  1E76  2E67               	goto	l6800
 12725                           
 12726                           ;EEPROM_24C1025.c: 292:      for(page=0;page<1024;page++)
 12727  1E77  01B5               	clrf	EEPROM_24C1025_Fill_All@page
 12728  1E78  01B6               	clrf	EEPROM_24C1025_Fill_All@page+1
 12729  1E79                     l6812:	
 12730                           
 12731                           ;EEPROM_24C1025.c: 293:         {;EEPROM_24C1025.c: 294:         EEPROM_24C1025_Write_Bu
      +                          ffer(chip_add, (page*128), 128, buffer);
 12732  1E79  0836               	movf	EEPROM_24C1025_Fill_All@page+1,w
 12733  1E7A  00B1               	movwf	??_EEPROM_24C1025_Fill_All+1
 12734  1E7B  0835               	movf	EEPROM_24C1025_Fill_All@page,w
 12735  1E7C  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12736  1E7D  3007               	movlw	7
 12737  1E7E  00FF               	movwf	127
 12738  1E7F                     u7145:	
 12739  1E7F  1003               	clrc
 12740  1E80  0DB0               	rlf	??_EEPROM_24C1025_Fill_All,f
 12741  1E81  0DB1               	rlf	??_EEPROM_24C1025_Fill_All+1,f
 12742  1E82  0BFF               	decfsz	127,f
 12743  1E83  2E7F               	goto	u7145
 12744  1E84  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12745  1E85  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12746  1E86  0831               	movf	??_EEPROM_24C1025_Fill_All+1,w
 12747  1E87  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12748  1E88  01A4               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12749  1E89  01A5               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12750  1E8A  3080               	movlw	128
 12751  1E8B  00B2               	movwf	??_EEPROM_24C1025_Fill_All+2
 12752  1E8C  0832               	movf	??_EEPROM_24C1025_Fill_All+2,w
 12753  1E8D  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12754  1E8E  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
 12755  1E8F  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12756  1E90  3001               	movlw	1
 12757  1E91  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12758  1E92  0833               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12759  1E93  160A  118A  2536  160A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
 12760                           
 12761                           ;EEPROM_24C1025.c: 295:         }
 12762  1E98  3001               	movlw	1
 12763  1E99  1283               	bcf	3,5	;RP0=0, select bank0
 12764  1E9A  1303               	bcf	3,6	;RP1=0, select bank0
 12765  1E9B  07B5               	addwf	EEPROM_24C1025_Fill_All@page,f
 12766  1E9C  1803               	skipnc
 12767  1E9D  0AB6               	incf	EEPROM_24C1025_Fill_All@page+1,f
 12768  1E9E  3000               	movlw	0
 12769  1E9F  07B6               	addwf	EEPROM_24C1025_Fill_All@page+1,f
 12770  1EA0  3004               	movlw	4
 12771  1EA1  0236               	subwf	EEPROM_24C1025_Fill_All@page+1,w
 12772  1EA2  3000               	movlw	0
 12773  1EA3  1903               	skipnz
 12774  1EA4  0235               	subwf	EEPROM_24C1025_Fill_All@page,w
 12775  1EA5  1803               	btfsc	3,0
 12776  1EA6  0008               	return
 12777  1EA7  2E79               	goto	l6812
 12778  1EA8                     __end_of_EEPROM_24C1025_Fill_All:	
 12779                           
 12780                           	psect	text57
 12781  1536                     __ptext57:	
 12782 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12783 ;; Defined at:
 12784 ;;		line 10 in file "EEPROM_24C1025.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  chip_add        1    wreg     unsigned char 
 12787 ;;  mem_add         4    2[BANK0 ] unsigned long 
 12788 ;;  sizedata        1    6[BANK0 ] unsigned char 
 12789 ;;  data            2    7[BANK0 ] PTR unsigned char 
 12790 ;;		 -> EEPROM_24C1025_Write_Int@local(2), buffer(64), usart_protocol.value(10), usart_protocol(16), 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  chip_add        1   12[BANK0 ] unsigned char 
 12793 ;;  ctrl            1   14[BANK0 ] unsigned char 
 12794 ;;  range           1   13[BANK0 ] unsigned char 
 12795 ;;  count           1   11[BANK0 ] unsigned char 
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  1    wreg      void 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/300
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12805 ;;      Params:         0       7       0       0       0
 12806 ;;      Locals:         0       4       0       0       0
 12807 ;;      Temps:          0       2       0       0       0
 12808 ;;      Totals:         0      13       0       0       0
 12809 ;;Total ram usage:       13 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    3
 12812 ;; This function calls:
 12813 ;;		_I2C_Master_Start
 12814 ;;		_I2C_Master_Stop
 12815 ;;		_I2C_Master_Write
 12816 ;; This function is called by:
 12817 ;;		_Decodify_Command
 12818 ;;		_EEPROM_24C1025_Write_Byte
 12819 ;;		_EEPROM_24C1025_Write_Int
 12820 ;;		_EEPROM_24C1025_Fill_All
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           
 12825                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12826  1536                     _EEPROM_24C1025_Write_Buffer:	
 12827                           
 12828                           ;incstack = 0
 12829                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 12830                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12831  1536  1283               	bcf	3,5	;RP0=0, select bank0
 12832  1537  1303               	bcf	3,6	;RP1=0, select bank0
 12833  1538  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12834                           
 12835                           ;EEPROM_24C1025.c: 16:      unsigned char ctrl;;EEPROM_24C1025.c: 17:      unsigned char
      +                           count;;EEPROM_24C1025.c: 19:      if(mem_add>0x1FFFF) return;
 12836  1539  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12837  153A  1D03               	btfss	3,2
 12838  153B  0008               	return
 12839  153C  3002               	movlw	2
 12840  153D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12841  153E  1D03               	skipz
 12842  153F  2D48               	goto	u5463
 12843  1540  3000               	movlw	0
 12844  1541  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12845  1542  1D03               	skipz
 12846  1543  2D48               	goto	u5463
 12847  1544  3000               	movlw	0
 12848  1545  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12849  1546  1D03               	skipz
 12850  1547  2D48               	goto	u5463
 12851  1548                     u5463:	
 12852  1548  1803               	btfsc	3,0
 12853  1549  0008               	return
 12854                           
 12855                           ;EEPROM_24C1025.c: 21:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12856  154A  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12857  154B  1D03               	btfss	3,2
 12858  154C  2D5B               	goto	l5722
 12859  154D  3001               	movlw	1
 12860  154E  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12861  154F  1D03               	skipz
 12862  1550  2D59               	goto	u5473
 12863  1551  3000               	movlw	0
 12864  1552  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12865  1553  1D03               	skipz
 12866  1554  2D59               	goto	u5473
 12867  1555  3000               	movlw	0
 12868  1556  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12869  1557  1D03               	skipz
 12870  1558  2D59               	goto	u5473
 12871  1559                     u5473:	
 12872  1559  1C03               	btfss	3,0
 12873  155A  2D60               	goto	l5724
 12874  155B                     l5722:	
 12875  155B  3008               	movlw	8
 12876  155C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12877  155D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12878  155E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 12879  155F  2D61               	goto	l5726
 12880  1560                     l5724:	
 12881  1560  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 12882  1561                     l5726:	
 12883                           
 12884                           ;EEPROM_24C1025.c: 22:      ctrl=chip_add;
 12885  1561  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12886  1562  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12887  1563  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12888  1564  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12889                           
 12890                           ;EEPROM_24C1025.c: 23:      ctrl<<=1;
 12891  1565  1003               	clrc
 12892  1566  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12893                           
 12894                           ;EEPROM_24C1025.c: 24:      ctrl |= 0xA0;
 12895  1567  30A0               	movlw	160
 12896  1568  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12897  1569  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12898  156A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12899                           
 12900                           ;EEPROM_24C1025.c: 25:      ctrl |= range;
 12901  156B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12902  156C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12903  156D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12904  156E  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12905                           
 12906                           ;EEPROM_24C1025.c: 27:      I2C_Master_Start();
 12907  156F  160A  158A  2118  160A  118A  	fcall	_I2C_Master_Start
 12908                           
 12909                           ;EEPROM_24C1025.c: 28:      I2C_Master_Write(ctrl);
 12910  1574  1283               	bcf	3,5	;RP0=0, select bank0
 12911  1575  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12912  1576  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12913  1577  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12914  1578  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12915  1579  00A0               	movwf	I2C_Master_Write@d
 12916  157A  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12917  157B  00A1               	movwf	I2C_Master_Write@d+1
 12918  157C  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 12919                           
 12920                           ;EEPROM_24C1025.c: 29:      I2C_Master_Write(((char *)&mem_add)[1]);
 12921  1581  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12922  1582  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12923  1583  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12924  1584  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12925  1585  00A0               	movwf	I2C_Master_Write@d
 12926  1586  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12927  1587  00A1               	movwf	I2C_Master_Write@d+1
 12928  1588  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 12929                           
 12930                           ;EEPROM_24C1025.c: 30:      I2C_Master_Write(((char *)&mem_add)[0]);
 12931  158D  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12932  158E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12933  158F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12934  1590  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12935  1591  00A0               	movwf	I2C_Master_Write@d
 12936  1592  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12937  1593  00A1               	movwf	I2C_Master_Write@d+1
 12938  1594  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 12939                           
 12940                           ;EEPROM_24C1025.c: 31:      for(count=0;count<(sizedata-1);count++)
 12941  1599  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 12942  159A                     l5788:	
 12943  159A  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12944  159B  3EFF               	addlw	255
 12945  159C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12946  159D  30FF               	movlw	255
 12947  159E  1803               	skipnc
 12948  159F  3000               	movlw	0
 12949  15A0  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12950  15A1  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12951  15A2  3A80               	xorlw	128
 12952  15A3  3C80               	sublw	128
 12953  15A4  1D03               	skipz
 12954  15A5  2DA8               	goto	u5515
 12955  15A6  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12956  15A7  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12957  15A8                     u5515:	
 12958  15A8  1803               	btfsc	3,0
 12959  15A9  2E72               	goto	l5790
 12960                           
 12961                           ;EEPROM_24C1025.c: 32:           {;EEPROM_24C1025.c: 33:           if(mem_add>0x1FFFF) r
      +                          eturn;
 12962  15AA  1283               	bcf	3,5	;RP0=0, select bank0
 12963  15AB  1303               	bcf	3,6	;RP1=0, select bank0
 12964  15AC  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12965  15AD  1D03               	btfss	3,2
 12966  15AE  0008               	return
 12967  15AF  3002               	movlw	2
 12968  15B0  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12969  15B1  1D03               	skipz
 12970  15B2  2DBB               	goto	u5483
 12971  15B3  3000               	movlw	0
 12972  15B4  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12973  15B5  1D03               	skipz
 12974  15B6  2DBB               	goto	u5483
 12975  15B7  3000               	movlw	0
 12976  15B8  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12977  15B9  1D03               	skipz
 12978  15BA  2DBB               	goto	u5483
 12979  15BB                     u5483:	
 12980  15BB  1803               	btfsc	3,0
 12981  15BC  0008               	return
 12982                           
 12983                           ;EEPROM_24C1025.c: 34:           if((mem_add+1)%128==0)
 12984  15BD  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12985  15BE  3E01               	addlw	1
 12986  15BF  397F               	andlw	127
 12987  15C0  1D03               	btfss	3,2
 12988  15C1  2E48               	goto	l5780
 12989                           
 12990                           ;EEPROM_24C1025.c: 35:             {;EEPROM_24C1025.c: 36:             I2C_Master_Write(
      +                          *data);
 12991  15C2  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12992  15C3  0084               	movwf	4
 12993  15C4  1783               	bsf	3,7
 12994  15C5  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12995  15C6  1383               	bcf	3,7
 12996  15C7  0800               	movf	0,w
 12997  15C8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12998  15C9  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12999  15CA  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13000  15CB  00A0               	movwf	I2C_Master_Write@d
 13001  15CC  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13002  15CD  00A1               	movwf	I2C_Master_Write@d+1
 13003  15CE  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13004                           
 13005                           ;EEPROM_24C1025.c: 37:             I2C_Master_Stop();
 13006  15D3  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 13007                           
 13008                           ;EEPROM_24C1025.c: 39:             _delay((unsigned long)((5)*(8000000/4000.0)));
 13009  15D8  300D               	movlw	13
 13010  15D9  1283               	bcf	3,5	;RP0=0, select bank0
 13011  15DA  1303               	bcf	3,6	;RP1=0, select bank0
 13012  15DB  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13013  15DC  30FB               	movlw	251
 13014  15DD  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13015  15DE                     u8127:	
 13016  15DE  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13017  15DF  2DDE               	goto	u8127
 13018  15E0  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13019  15E1  2DDE               	goto	u8127
 13020                           
 13021                           ;EEPROM_24C1025.c: 40:             mem_add++;
 13022  15E2  3001               	movlw	1
 13023  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 13024  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 13025  15E5  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13026  15E6  3000               	movlw	0
 13027  15E7  1803               	skipnc
 13028  15E8  3001               	movlw	1
 13029  15E9  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13030  15EA  3000               	movlw	0
 13031  15EB  1803               	skipnc
 13032  15EC  3001               	movlw	1
 13033  15ED  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13034  15EE  3000               	movlw	0
 13035  15EF  1803               	skipnc
 13036  15F0  3001               	movlw	1
 13037  15F1  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13038                           
 13039                           ;EEPROM_24C1025.c: 41:             data++;
 13040  15F2  3001               	movlw	1
 13041  15F3  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13042  15F4  1803               	skipnc
 13043  15F5  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13044  15F6  3000               	movlw	0
 13045  15F7  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13046                           
 13047                           ;EEPROM_24C1025.c: 42:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13048  15F8  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13049  15F9  1D03               	btfss	3,2
 13050  15FA  2E09               	goto	l5760
 13051  15FB  3001               	movlw	1
 13052  15FC  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13053  15FD  1D03               	skipz
 13054  15FE  2E07               	goto	u5503
 13055  15FF  3000               	movlw	0
 13056  1600  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13057  1601  1D03               	skipz
 13058  1602  2E07               	goto	u5503
 13059  1603  3000               	movlw	0
 13060  1604  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13061  1605  1D03               	skipz
 13062  1606  2E07               	goto	u5503
 13063  1607                     u5503:	
 13064  1607  1C03               	btfss	3,0
 13065  1608  2E0E               	goto	l5762
 13066  1609                     l5760:	
 13067  1609  3008               	movlw	8
 13068  160A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13069  160B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13070  160C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13071  160D  2E0F               	goto	l5764
 13072  160E                     l5762:	
 13073  160E  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13074  160F                     l5764:	
 13075                           
 13076                           ;EEPROM_24C1025.c: 43:             ctrl=chip_add;
 13077  160F  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13078  1610  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13079  1611  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13080  1612  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13081                           
 13082                           ;EEPROM_24C1025.c: 44:             ctrl<<=1;
 13083  1613  1003               	clrc
 13084  1614  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13085                           
 13086                           ;EEPROM_24C1025.c: 45:             ctrl |= 0xA0;
 13087  1615  30A0               	movlw	160
 13088  1616  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13089  1617  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13090  1618  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13091                           
 13092                           ;EEPROM_24C1025.c: 46:             ctrl |= range;
 13093  1619  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13094  161A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13095  161B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13096  161C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13097                           
 13098                           ;EEPROM_24C1025.c: 48:             I2C_Master_Start();
 13099  161D  160A  158A  2118  160A  118A  	fcall	_I2C_Master_Start
 13100                           
 13101                           ;EEPROM_24C1025.c: 49:             I2C_Master_Write(ctrl);
 13102  1622  1283               	bcf	3,5	;RP0=0, select bank0
 13103  1623  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13104  1624  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13105  1625  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13106  1626  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13107  1627  00A0               	movwf	I2C_Master_Write@d
 13108  1628  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13109  1629  00A1               	movwf	I2C_Master_Write@d+1
 13110  162A  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13111                           
 13112                           ;EEPROM_24C1025.c: 50:             I2C_Master_Write(((char *)&mem_add)[1]);
 13113  162F  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13114  1630  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13115  1631  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13116  1632  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13117  1633  00A0               	movwf	I2C_Master_Write@d
 13118  1634  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13119  1635  00A1               	movwf	I2C_Master_Write@d+1
 13120  1636  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13121                           
 13122                           ;EEPROM_24C1025.c: 51:             I2C_Master_Write(((char *)&mem_add)[0]);
 13123  163B  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13124  163C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13125  163D  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13126  163E  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13127  163F  00A0               	movwf	I2C_Master_Write@d
 13128  1640  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13129  1641  00A1               	movwf	I2C_Master_Write@d+1
 13130  1642  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13131                           
 13132                           ;EEPROM_24C1025.c: 52:             }
 13133  1647  2E6D               	goto	l5786
 13134  1648                     l5780:	
 13135                           
 13136                           ;EEPROM_24C1025.c: 54:             {;EEPROM_24C1025.c: 55:             I2C_Master_Write(
      +                          *data);
 13137  1648  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13138  1649  0084               	movwf	4
 13139  164A  1783               	bsf	3,7
 13140  164B  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13141  164C  1383               	bcf	3,7
 13142  164D  0800               	movf	0,w
 13143  164E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13144  164F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13145  1650  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13146  1651  00A0               	movwf	I2C_Master_Write@d
 13147  1652  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13148  1653  00A1               	movwf	I2C_Master_Write@d+1
 13149  1654  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13150                           
 13151                           ;EEPROM_24C1025.c: 56:             data++;
 13152  1659  3001               	movlw	1
 13153  165A  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13154  165B  1803               	skipnc
 13155  165C  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13156  165D  3000               	movlw	0
 13157  165E  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13158                           
 13159                           ;EEPROM_24C1025.c: 57:             mem_add++;
 13160  165F  3001               	movlw	1
 13161  1660  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13162  1661  3000               	movlw	0
 13163  1662  1803               	skipnc
 13164  1663  3001               	movlw	1
 13165  1664  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13166  1665  3000               	movlw	0
 13167  1666  1803               	skipnc
 13168  1667  3001               	movlw	1
 13169  1668  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13170  1669  3000               	movlw	0
 13171  166A  1803               	skipnc
 13172  166B  3001               	movlw	1
 13173  166C  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13174  166D                     l5786:	
 13175                           
 13176                           ;EEPROM_24C1025.c: 59:      }
 13177  166D  3001               	movlw	1
 13178  166E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13179  166F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13180  1670  07AB               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13181  1671  2D9A               	goto	l5788
 13182  1672                     l5790:	
 13183                           
 13184                           ;EEPROM_24C1025.c: 60:      I2C_Master_Write(*data);
 13185  1672  1283               	bcf	3,5	;RP0=0, select bank0
 13186  1673  1303               	bcf	3,6	;RP1=0, select bank0
 13187  1674  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13188  1675  0084               	movwf	4
 13189  1676  1783               	bsf	3,7
 13190  1677  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13191  1678  1383               	bcf	3,7
 13192  1679  0800               	movf	0,w
 13193  167A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13194  167B  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13195  167C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13196  167D  00A0               	movwf	I2C_Master_Write@d
 13197  167E  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13198  167F  00A1               	movwf	I2C_Master_Write@d+1
 13199  1680  160A  158A  2121  160A  118A  	fcall	_I2C_Master_Write
 13200                           
 13201                           ;EEPROM_24C1025.c: 61:      I2C_Master_Stop();
 13202  1685  160A  158A  2103  160A  118A  	fcall	_I2C_Master_Stop
 13203                           
 13204                           ;EEPROM_24C1025.c: 62:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 13205  168A  30B9               	movlw	185
 13206  168B  1283               	bcf	3,5	;RP0=0, select bank0
 13207  168C  1303               	bcf	3,6	;RP1=0, select bank0
 13208  168D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13209  168E                     u8137:	
 13210  168E  2E8F               	nop2
 13211  168F  2E90               	nop2
 13212  1690  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13213  1691  2E8E               	goto	u8137
 13214  1692  2E93               	nop2
 13215  1693  0008               	return
 13216  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13217                           
 13218                           	psect	text58
 13219  1921                     __ptext58:	
 13220 ;; *************** function _I2C_Master_Write *****************
 13221 ;; Defined at:
 13222 ;;		line 64 in file "I2C.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;  d               2    0[BANK0 ] unsigned int 
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;		None
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, status,2, status,0, pclath, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 300/0
 13233 ;;		On exit  : 300/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13236 ;;      Params:         0       2       0       0       0
 13237 ;;      Locals:         0       0       0       0       0
 13238 ;;      Temps:          0       0       0       0       0
 13239 ;;      Totals:         0       2       0       0       0
 13240 ;;Total ram usage:        2 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:    2
 13243 ;; This function calls:
 13244 ;;		_I2C_Master_Wait
 13245 ;; This function is called by:
 13246 ;;		_EEPROM_24C1025_Write_Buffer
 13247 ;;		_EEPROM_24C1025_Read_Buffer
 13248 ;;		_EEPROM_24C1025_Write_Str
 13249 ;;		_EEPROM_24C1025_Read_Str
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           
 13254                           ;psect for function _I2C_Master_Write
 13255  1921                     _I2C_Master_Write:	
 13256                           
 13257                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 13258                           
 13259                           ;incstack = 0
 13260                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13261  1921  1683               	bsf	3,5	;RP0=1, select bank1
 13262  1922  17EB               	bsf	_generic_status^(0+128),7
 13263                           
 13264                           ;I2C.c: 67:   I2C_Master_Wait();
 13265  1923  160A  158A  2108   	fcall	_I2C_Master_Wait
 13266                           
 13267                           ;I2C.c: 68:   SSPBUF = d;
 13268  1926  1283               	bcf	3,5	;RP0=0, select bank0
 13269  1927  0820               	movf	I2C_Master_Write@d,w
 13270  1928  0093               	movwf	19	;volatile
 13271  1929  0008               	return
 13272  192A                     __end_of_I2C_Master_Write:	
 13273                           
 13274                           	psect	text59
 13275  1903                     __ptext59:	
 13276 ;; *************** function _I2C_Master_Stop *****************
 13277 ;; Defined at:
 13278 ;;		line 58 in file "I2C.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;		None
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0, pclath, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 300/800
 13289 ;;		On exit  : 300/100
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13292 ;;      Params:         0       0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0
 13295 ;;      Totals:         0       0       0       0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:    2
 13299 ;; This function calls:
 13300 ;;		_I2C_Master_Wait
 13301 ;; This function is called by:
 13302 ;;		_EEPROM_24C1025_Write_Buffer
 13303 ;;		_EEPROM_24C1025_Read_Buffer
 13304 ;;		_EEPROM_24C1025_Write_Str
 13305 ;;		_EEPROM_24C1025_Read_Str
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           
 13310                           ;psect for function _I2C_Master_Stop
 13311  1903                     _I2C_Master_Stop:	
 13312                           
 13313                           ;I2C.c: 60:   I2C_Master_Wait();
 13314                           
 13315                           ;incstack = 0
 13316                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13317  1903  160A  158A  2108   	fcall	_I2C_Master_Wait
 13318                           
 13319                           ;I2C.c: 61:   PEN = 1;
 13320  1906  1511               	bsf	17,2	;volatile
 13321  1907  0008               	return
 13322  1908                     __end_of_I2C_Master_Stop:	
 13323                           
 13324                           	psect	text60
 13325  1918                     __ptext60:	
 13326 ;; *************** function _I2C_Master_Start *****************
 13327 ;; Defined at:
 13328 ;;		line 45 in file "I2C.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;		None
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;		None
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      void 
 13335 ;; Registers used:
 13336 ;;		wreg, status,2, status,0, pclath, cstack
 13337 ;; Tracked objects:
 13338 ;;		On entry : 300/0
 13339 ;;		On exit  : 300/100
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13342 ;;      Params:         0       0       0       0       0
 13343 ;;      Locals:         0       0       0       0       0
 13344 ;;      Temps:          0       0       0       0       0
 13345 ;;      Totals:         0       0       0       0       0
 13346 ;;Total ram usage:        0 bytes
 13347 ;; Hardware stack levels used:    1
 13348 ;; Hardware stack levels required when called:    2
 13349 ;; This function calls:
 13350 ;;		_I2C_Master_Wait
 13351 ;; This function is called by:
 13352 ;;		_EEPROM_24C1025_Write_Buffer
 13353 ;;		_EEPROM_24C1025_Read_Buffer
 13354 ;;		_EEPROM_24C1025_Write_Str
 13355 ;;		_EEPROM_24C1025_Read_Str
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           
 13360                           ;psect for function _I2C_Master_Start
 13361  1918                     _I2C_Master_Start:	
 13362                           
 13363                           ;I2C.c: 47:   Delay_Led_Memory=20;
 13364                           
 13365                           ;incstack = 0
 13366                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13367  1918  3014               	movlw	20
 13368  1919  00FA               	movwf	_Delay_Led_Memory	;volatile
 13369  191A  3000               	movlw	0
 13370  191B  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13371                           
 13372                           ;I2C.c: 48:   I2C_Master_Wait();
 13373  191C  160A  158A  2108   	fcall	_I2C_Master_Wait
 13374                           
 13375                           ;I2C.c: 49:   SEN = 1;
 13376  191F  1411               	bsf	17,0	;volatile
 13377  1920  0008               	return
 13378  1921                     __end_of_I2C_Master_Start:	
 13379                           
 13380                           	psect	text61
 13381  1908                     __ptext61:	
 13382 ;; *************** function _I2C_Master_Wait *****************
 13383 ;; Defined at:
 13384 ;;		line 40 in file "I2C.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;		None
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;		None
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  1    wreg      void 
 13391 ;; Registers used:
 13392 ;;		wreg, status,2
 13393 ;; Tracked objects:
 13394 ;;		On entry : 200/0
 13395 ;;		On exit  : 300/100
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13398 ;;      Params:         0       0       0       0       0
 13399 ;;      Locals:         0       0       0       0       0
 13400 ;;      Temps:          0       0       0       0       0
 13401 ;;      Totals:         0       0       0       0       0
 13402 ;;Total ram usage:        0 bytes
 13403 ;; Hardware stack levels used:    1
 13404 ;; Hardware stack levels required when called:    1
 13405 ;; This function calls:
 13406 ;;		Nothing
 13407 ;; This function is called by:
 13408 ;;		_I2C_Master_Start
 13409 ;;		_I2C_Master_RepeatedStart
 13410 ;;		_I2C_Master_Stop
 13411 ;;		_I2C_Master_Write
 13412 ;;		_I2C_Master_Read
 13413 ;; This function uses a non-reentrant model
 13414 ;;
 13415                           
 13416                           
 13417                           ;psect for function _I2C_Master_Wait
 13418  1908                     _I2C_Master_Wait:	
 13419  1908                     l49:	
 13420                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13421                           
 13422                           ;incstack = 0
 13423                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13424                           
 13425  1908  1683               	bsf	3,5	;RP0=1, select bank1
 13426  1909  1914               	btfsc	20,2	;volatile
 13427  190A  2908               	goto	l49
 13428  190B  0811               	movf	17,w	;volatile
 13429  190C  391F               	andlw	31
 13430  190D  1903               	btfsc	3,2
 13431  190E  0008               	return
 13432  190F  2908               	goto	l49
 13433  1910                     __end_of_I2C_Master_Wait:	
 13434                           
 13435                           	psect	text62
 13436  193D                     __ptext62:	
 13437 ;; *************** function _ADC_init *****************
 13438 ;; Defined at:
 13439 ;;		line 10 in file "adc.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;		None
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      void 
 13446 ;; Registers used:
 13447 ;;		wreg, status,2, status,0
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/100
 13450 ;;		On exit  : 300/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13453 ;;      Params:         0       0       0       0       0
 13454 ;;      Locals:         0       0       0       0       0
 13455 ;;      Temps:          0       0       0       0       0
 13456 ;;      Totals:         0       0       0       0       0
 13457 ;;Total ram usage:        0 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; Hardware stack levels required when called:    1
 13460 ;; This function calls:
 13461 ;;		Nothing
 13462 ;; This function is called by:
 13463 ;;		_main
 13464 ;; This function uses a non-reentrant model
 13465 ;;
 13466                           
 13467                           
 13468                           ;psect for function _ADC_init
 13469  193D                     _ADC_init:	
 13470                           
 13471                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13472                           
 13473                           ;incstack = 0
 13474                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13475  193D  30C0               	movlw	192
 13476  193E  1283               	bcf	3,5	;RP0=0, select bank0
 13477  193F  1303               	bcf	3,6	;RP1=0, select bank0
 13478  1940  049F               	iorwf	31,f	;volatile
 13479                           
 13480                           ;adc.c: 12:      ADCON1=0b10000000;
 13481  1941  3080               	movlw	128
 13482  1942  1683               	bsf	3,5	;RP0=1, select bank1
 13483  1943  009F               	movwf	31	;volatile
 13484                           
 13485                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13486  1944  179F               	bsf	31,7	;volatile
 13487                           
 13488                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13489  1945  1283               	bcf	3,5	;RP0=0, select bank0
 13490  1946  141F               	bsf	31,0	;volatile
 13491  1947  0008               	return
 13492  1948                     __end_of_ADC_init:	
 13493                           
 13494                           	psect	text63
 13495  135C                     __ptext63:	
 13496 ;; *************** function _isr *****************
 13497 ;; Defined at:
 13498 ;;		line 29 in file "isr.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;		None
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;  tempo           2    6[COMMON] unsigned int 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 300/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13512 ;;      Params:         0       0       0       0       0
 13513 ;;      Locals:         2       0       0       0       0
 13514 ;;      Temps:          6       0       0       0       0
 13515 ;;      Totals:         8       0       0       0       0
 13516 ;;Total ram usage:        8 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		Interrupt level 1
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           
 13526                           ;psect for function _isr
 13527  135C                     _isr:	
 13528                           
 13529                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13530  135C  188B               	btfsc	11,1	;volatile
 13531                           
 13532                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13533  135D  108B               	bcf	11,1	;volatile
 13534                           
 13535                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13536                           
 13537                           ;isr.c: 37:       }
 13538  135E  1C0C               	btfss	12,0	;volatile
 13539  135F  2BD4               	goto	i1l5590
 13540                           
 13541                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13542  1360  30B1               	movlw	177
 13543  1361  008F               	movwf	15	;volatile
 13544                           
 13545                           ;isr.c: 42:                 TMR1L=0xF3;
 13546  1362  30F3               	movlw	243
 13547  1363  008E               	movwf	14	;volatile
 13548                           
 13549                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13550  1364  100C               	bcf	12,0	;volatile
 13551                           
 13552                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13553  1365  1683               	bsf	3,5	;RP0=1, select bank1
 13554  1366  1FEB               	btfss	_generic_status^(0+128),7
 13555  1367  2B6A               	goto	i1l5546
 13556                           
 13557                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13558  1368  13EB               	bcf	_generic_status^(0+128),7
 13559  1369  0064               	clrwdt	;# 
 13560  136A                     i1l5546:	
 13561                           
 13562                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13563  136A  300A               	movlw	10
 13564  136B  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13565  136C  1803               	skipnc
 13566  136D  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13567  136E  3000               	movlw	0
 13568  136F  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13569                           
 13570                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13571  1370  3003               	movlw	3
 13572  1371  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13573  1372  30E8               	movlw	232
 13574  1373  1903               	skipnz
 13575  1374  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13576  1375  1C03               	skipc
 13577  1376  2B79               	goto	i1l5550
 13578                           
 13579                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13580  1377  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13581  1378  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13582  1379                     i1l5550:	
 13583                           
 13584                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13585  1379  3001               	movlw	1
 13586  137A  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13587  137B  30F4               	movlw	244
 13588  137C  1903               	skipnz
 13589  137D  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13590  137E  1803               	skipnc
 13591  137F  2B84               	goto	i1l505
 13592                           
 13593                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13594  1380  1283               	bcf	3,5	;RP0=0, select bank0
 13595  1381  1303               	bcf	3,6	;RP1=0, select bank0
 13596  1382  1786               	bsf	6,7	;volatile
 13597  1383  2B87               	goto	i1l5554
 13598  1384                     i1l505:	
 13599                           ;isr.c: 56:                 else
 13600                           
 13601                           
 13602                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13603  1384  1283               	bcf	3,5	;RP0=0, select bank0
 13604  1385  1303               	bcf	3,6	;RP1=0, select bank0
 13605  1386  1386               	bcf	6,7	;volatile
 13606  1387                     i1l5554:	
 13607                           
 13608                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13609  1387  1683               	bsf	3,5	;RP0=1, select bank1
 13610  1388  0861               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13611  1389  0462               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13612  138A  1903               	btfsc	3,2
 13613  138B  2B95               	goto	i1l507
 13614                           
 13615                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13616  138C  300A               	movlw	10
 13617  138D  02E1               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13618  138E  3000               	movlw	0
 13619  138F  1C03               	skipc
 13620  1390  03E2               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13621  1391  02E2               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13622                           
 13623                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13624  1392  1283               	bcf	3,5	;RP0=0, select bank0
 13625  1393  1706               	bsf	6,6	;volatile
 13626                           
 13627                           ;isr.c: 63:                    }
 13628  1394  2B97               	goto	i1l5560
 13629  1395                     i1l507:	
 13630                           ;isr.c: 64:                 else{
 13631                           
 13632                           
 13633                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13634  1395  1283               	bcf	3,5	;RP0=0, select bank0
 13635  1396  1306               	bcf	6,6	;volatile
 13636  1397                     i1l5560:	
 13637                           
 13638                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13639  1397  087A               	movf	_Delay_Led_Memory,w	;volatile
 13640  1398  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13641  1399  1903               	btfsc	3,2
 13642  139A  2BA3               	goto	i1l509
 13643                           
 13644                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13645  139B  300A               	movlw	10
 13646  139C  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13647  139D  3000               	movlw	0
 13648  139E  1C03               	skipc
 13649  139F  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13650  13A0  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13651                           
 13652                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13653  13A1  1686               	bsf	6,5	;volatile
 13654                           
 13655                           ;isr.c: 71:                    }
 13656  13A2  2BA4               	goto	i1l5566
 13657  13A3                     i1l509:	
 13658                           ;isr.c: 72:                 else{
 13659                           
 13660                           
 13661                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13662  13A3  1286               	bcf	6,5	;volatile
 13663  13A4                     i1l5566:	
 13664                           
 13665                           ;isr.c: 77:                 tempodecorrido+=10;
 13666  13A4  300A               	movlw	10
 13667  13A5  1683               	bsf	3,5	;RP0=1, select bank1
 13668  13A6  07D9               	addwf	_tempodecorrido^(0+128),f	;volatile
 13669  13A7  1803               	skipnc
 13670  13A8  0ADA               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13671  13A9  3000               	movlw	0
 13672  13AA  07DA               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13673                           
 13674                           ;isr.c: 78:                 milisegundo+=10;
 13675  13AB  300A               	movlw	10
 13676  13AC  07DF               	addwf	_milisegundo^(0+128),f	;volatile
 13677  13AD  1803               	skipnc
 13678  13AE  0AE0               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13679  13AF  3000               	movlw	0
 13680  13B0  07E0               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13681                           
 13682                           ;isr.c: 79:                 if(milisegundo==1000){
 13683  13B1  30E8               	movlw	232
 13684  13B2  065F               	xorwf	_milisegundo^(0+128),w	;volatile
 13685  13B3  3003               	movlw	3
 13686  13B4  1903               	skipnz
 13687  13B5  0660               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13688  13B6  1D03               	btfss	3,2
 13689  13B7  2BD4               	goto	i1l5590
 13690                           
 13691                           ;isr.c: 80:                    milisegundo=0;
 13692  13B8  01DF               	clrf	_milisegundo^(0+128)	;volatile
 13693  13B9  01E0               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13694                           
 13695                           ;isr.c: 81:                    segundo++;
 13696  13BA  3001               	movlw	1
 13697  13BB  00F0               	movwf	??_isr
 13698  13BC  0870               	movf	??_isr,w
 13699  13BD  07E9               	addwf	_segundo^(0+128),f	;volatile
 13700                           
 13701                           ;isr.c: 88:                    if(segundo==60){
 13702  13BE  303C               	movlw	60
 13703  13BF  0669               	xorwf	_segundo^(0+128),w	;volatile
 13704  13C0  1D03               	btfss	3,2
 13705  13C1  2BD4               	goto	i1l5590
 13706                           
 13707                           ;isr.c: 89:                       segundo=0;
 13708  13C2  01E9               	clrf	_segundo^(0+128)	;volatile
 13709                           
 13710                           ;isr.c: 90:                       minuto++;
 13711  13C3  3001               	movlw	1
 13712  13C4  00F0               	movwf	??_isr
 13713  13C5  0870               	movf	??_isr,w
 13714  13C6  07E7               	addwf	_minuto^(0+128),f	;volatile
 13715                           
 13716                           ;isr.c: 91:                       if(minuto==60){
 13717  13C7  303C               	movlw	60
 13718  13C8  0667               	xorwf	_minuto^(0+128),w	;volatile
 13719  13C9  1D03               	btfss	3,2
 13720  13CA  2BD4               	goto	i1l5590
 13721                           
 13722                           ;isr.c: 92:                          minuto=0;
 13723  13CB  01E7               	clrf	_minuto^(0+128)	;volatile
 13724                           
 13725                           ;isr.c: 93:                          hora++;
 13726  13CC  3001               	movlw	1
 13727  13CD  00F0               	movwf	??_isr
 13728  13CE  0870               	movf	??_isr,w
 13729  13CF  07E8               	addwf	_hora^(0+128),f	;volatile
 13730                           
 13731                           ;isr.c: 94:                          if(hora==24){
 13732  13D0  3018               	movlw	24
 13733  13D1  0668               	xorwf	_hora^(0+128),w	;volatile
 13734  13D2  1903               	btfsc	3,2
 13735                           
 13736                           ;isr.c: 95:                             hora=0;
 13737  13D3  01E8               	clrf	_hora^(0+128)	;volatile
 13738  13D4                     i1l5590:	
 13739                           ;isr.c: 99:                 }
 13740                           
 13741                           
 13742                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13743  13D4  1283               	bcf	3,5	;RP0=0, select bank0
 13744  13D5  1E8C               	btfss	12,5	;volatile
 13745  13D6  2C3B               	goto	i1l523
 13746                           
 13747                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13748  13D7  1683               	bsf	3,5	;RP0=1, select bank1
 13749  13D8  146B               	bsf	_generic_status^(0+128),0
 13750                           
 13751                           ;isr.c: 109:         tempo=30;
 13752  13D9  301E               	movlw	30
 13753  13DA  00F6               	movwf	isr@tempo
 13754  13DB  3000               	movlw	0
 13755  13DC  00F7               	movwf	isr@tempo+1
 13756                           
 13757                           ;isr.c: 110:         count=0;
 13758  13DD  01DB               	clrf	_count^(0+128)	;volatile
 13759  13DE  01DC               	clrf	(_count+1)^(0+128)	;volatile
 13760                           
 13761                           ;isr.c: 111:         pointer=usart_buffer;
 13762  13DF  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13763  13E0  00F0               	movwf	??_isr
 13764  13E1  0870               	movf	??_isr,w
 13765  13E2  00E3               	movwf	_pointer^(0+128)
 13766  13E3                     i1l5612:	
 13767                           ;isr.c: 112:         while(tempo)
 13768                           
 13769                           
 13770                           ;isr.c: 112:         while(tempo)
 13771  13E3  0876               	movf	isr@tempo,w
 13772  13E4  0477               	iorwf	isr@tempo+1,w
 13773  13E5  1903               	btfsc	3,2
 13774  13E6  2C16               	goto	i1l5614
 13775                           
 13776                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13777  13E7  1283               	bcf	3,5	;RP0=0, select bank0
 13778  13E8  1303               	bcf	3,6	;RP1=0, select bank0
 13779  13E9  1E8C               	btfss	12,5	;volatile
 13780  13EA  2C0F               	goto	i1l5610
 13781                           
 13782                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13783  13EB  081A               	movf	26,w	;volatile
 13784  13EC  00F0               	movwf	??_isr
 13785  13ED  1683               	bsf	3,5	;RP0=1, select bank1
 13786  13EE  0863               	movf	_pointer^(0+128),w
 13787  13EF  0084               	movwf	4
 13788  13F0  0870               	movf	??_isr,w
 13789  13F1  1783               	bsf	3,7	;select IRP bank2
 13790  13F2  0080               	movwf	0
 13791                           
 13792                           ;isr.c: 118:                 if(count<25 -1)
 13793  13F3  085C               	movf	(_count+1)^(0+128),w	;volatile
 13794  13F4  3A80               	xorlw	128
 13795  13F5  00FF               	movwf	127
 13796  13F6  3080               	movlw	128
 13797  13F7  027F               	subwf	127,w
 13798  13F8  1D03               	skipz
 13799  13F9  2BFC               	goto	u538_25
 13800  13FA  3018               	movlw	24
 13801  13FB  025B               	subwf	_count^(0+128),w	;volatile
 13802  13FC                     u538_25:	
 13803  13FC  1803               	skipnc
 13804  13FD  2C0A               	goto	i1l5608
 13805                           
 13806                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13807  13FE  3001               	movlw	1
 13808  13FF  1683               	bsf	3,5	;RP0=1, select bank1
 13809  1400  1303               	bcf	3,6	;RP1=0, select bank1
 13810  1401  07DB               	addwf	_count^(0+128),f	;volatile
 13811  1402  1803               	skipnc
 13812  1403  0ADC               	incf	(_count+1)^(0+128),f	;volatile
 13813  1404  3000               	movlw	0
 13814  1405  07DC               	addwf	(_count+1)^(0+128),f	;volatile
 13815                           
 13816                           ;isr.c: 121:                    pointer++;
 13817  1406  3001               	movlw	1
 13818  1407  00F0               	movwf	??_isr
 13819  1408  0870               	movf	??_isr,w
 13820  1409  07E3               	addwf	_pointer^(0+128),f
 13821  140A                     i1l5608:	
 13822                           
 13823                           ;isr.c: 123:                 tempo=30;
 13824  140A  301E               	movlw	30
 13825  140B  00F6               	movwf	isr@tempo
 13826  140C  3000               	movlw	0
 13827  140D  00F7               	movwf	isr@tempo+1
 13828                           
 13829                           ;isr.c: 124:             }
 13830  140E  2BE3               	goto	i1l5612
 13831  140F                     i1l5610:	
 13832                           
 13833                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13834  140F  3001               	movlw	1
 13835  1410  02F6               	subwf	isr@tempo,f
 13836  1411  3000               	movlw	0
 13837  1412  1C03               	skipc
 13838  1413  03F7               	decf	isr@tempo+1,f
 13839  1414  02F7               	subwf	isr@tempo+1,f
 13840  1415  2BE3               	goto	i1l5612
 13841  1416                     i1l5614:	
 13842                           
 13843                           ;isr.c: 131:         (*pointer)=0;
 13844  1416  1683               	bsf	3,5	;RP0=1, select bank1
 13845  1417  1303               	bcf	3,6	;RP1=0, select bank1
 13846  1418  0863               	movf	_pointer^(0+128),w
 13847  1419  0084               	movwf	4
 13848  141A  1783               	bsf	3,7	;select IRP bank2
 13849  141B  0180               	clrf	0
 13850                           
 13851                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13852  141C  1283               	bcf	3,5	;RP0=0, select bank0
 13853  141D  1C98               	btfss	24,1	;volatile
 13854  141E  2C3B               	goto	i1l523
 13855                           
 13856                           ;isr.c: 134:            CREN=0;
 13857  141F  1218               	bcf	24,4	;volatile
 13858                           
 13859                           ;isr.c: 135:            CREN=1;
 13860  1420  1618               	bsf	24,4	;volatile
 13861                           
 13862                           ;isr.c: 136:            tempo=RCREG;
 13863  1421  081A               	movf	26,w	;volatile
 13864  1422  00F0               	movwf	??_isr
 13865  1423  01F1               	clrf	??_isr+1
 13866  1424  0870               	movf	??_isr,w
 13867  1425  00F6               	movwf	isr@tempo
 13868  1426  0871               	movf	??_isr+1,w
 13869  1427  00F7               	movwf	isr@tempo+1
 13870                           
 13871                           ;isr.c: 137:            tempo=RCREG;
 13872  1428  081A               	movf	26,w	;volatile
 13873  1429  00F0               	movwf	??_isr
 13874  142A  01F1               	clrf	??_isr+1
 13875  142B  0870               	movf	??_isr,w
 13876  142C  00F6               	movwf	isr@tempo
 13877  142D  0871               	movf	??_isr+1,w
 13878  142E  00F7               	movwf	isr@tempo+1
 13879                           
 13880                           ;isr.c: 138:            tempo=RCREG;
 13881  142F  081A               	movf	26,w	;volatile
 13882  1430  00F0               	movwf	??_isr
 13883  1431  01F1               	clrf	??_isr+1
 13884  1432  0870               	movf	??_isr,w
 13885  1433  00F6               	movwf	isr@tempo
 13886  1434  0871               	movf	??_isr+1,w
 13887  1435  00F7               	movwf	isr@tempo+1
 13888                           
 13889                           ;isr.c: 139:            usart_buffer[0]=0;
 13890  1436  1683               	bsf	3,5	;RP0=1, select bank3
 13891  1437  1703               	bsf	3,6	;RP1=1, select bank3
 13892  1438  0190               	clrf	_usart_buffer^(0+384)	;volatile
 13893                           
 13894                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13895  1439  1303               	bcf	3,6	;RP1=0, select bank1
 13896  143A  14EB               	bsf	_generic_status^(0+128),1
 13897  143B                     i1l523:	
 13898  143B  0875               	movf	??_isr+5,w
 13899  143C  1283               	bcf	3,5	;RP0=0, select bank0
 13900  143D  00FF               	movwf	127
 13901  143E  0874               	movf	??_isr+4,w
 13902  143F  008A               	movwf	10
 13903  1440  0873               	movf	??_isr+3,w
 13904  1441  0084               	movwf	4
 13905  1442  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13906  1443  0083               	movwf	3
 13907  1444  0EFE               	swapf	126,f
 13908  1445  0E7E               	swapf	126,w
 13909  1446  0009               	retfie
 13910  1447                     __end_of_isr:	
 13911  007E                     btemp	set	126	;btemp
 13912  007E                     wtemp0	set	126
 13913                           
 13914                           	psect	intentry
 13915  0004                     __pintentry:	
 13916                           ;incstack = 0
 13917                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13918                           
 13919  0004                     interrupt_function:	
 13920  007E                     saved_w	set	btemp
 13921  0004  00FE               	movwf	btemp
 13922  0005  0E03               	swapf	3,w
 13923  0006  00F2               	movwf	??_isr+2
 13924  0007  0804               	movf	4,w
 13925  0008  00F3               	movwf	??_isr+3
 13926  0009  080A               	movf	10,w
 13927  000A  00F4               	movwf	??_isr+4
 13928  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13929  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13930  000D  087F               	movf	btemp+1,w
 13931  000E  00F5               	movwf	??_isr+5
 13932  000F  160A  118A  2B5C   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    64
    Data        0
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     47      76
    BANK3            96      0      57
    BANK2            96      0      64

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Write_Byte@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), buffer(BANK2[64]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Write_Int@local(BANK0[2]), buffer(BANK2[64]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), usart_buffer(BANK3[25]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_PROCULUS_VP_Write_String
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _EEPROM_24C1025_Write_Int->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  110698
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24285
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    51    51      0   83968
                                             62 BANK0      4     4      0
                                              0 BANK1     47    47      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   11696
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5336
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    5601
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    5127
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              6 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    5489
                                             20 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5443
                                             20 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5229
                                              6 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     605
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              8     7      1    5207
                                             15 BANK0      8     7      1
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4854
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     121       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      39       9       59.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     121      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 07:18:56 2019

                              _USART_putc 105E                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l49 1908  
         EEPROM_24C1025_Read_Buffer@range 0032          EEPROM_24C1025_Write_Str@chip_add 0029  
                                      fsr 0004                             _USART_put_int 1973  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 101C              PROCULUS_VP_Write_String@text 005C  
      EEPROM_24C1025_Read_Buffer@cnt_1528 0030                                       l303 0F0F  
                                     l412 1A48                                       l380 1D78  
                                     l292 0445                                       l356 1934  
                                     l390 1AAC                                       l294 04A1  
                                     l288 0437                                       l385 1D9D  
                                     l386 1D9E                                       l661 19EE  
                                     l741 1066                                       l678 19AD  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0031  
                Decodify_Command@sizedata 00CA                                       _isr 135C  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1DAD                          _ADC_Media_10bits 1EEF  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1D39  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1D01                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1024  
                                    l1300 09E7                                      l1125 1157  
                                    l1144 111F                                      l1128 11BD  
                                    l1322 0B26                                      l1250 0C03  
                                    l1324 0B34                                      l1244 0B8C  
                                    l1405 07E5                                      l1352 078A  
                                    l1248 0C25                                      l1265 0CDE  
                                    l1286 0D5E                                      l1278 0D46  
                                    l1391 1243                                      l1448 1AFB  
                                    l1392 124D                                      l1384 122D  
                                    l1378 11ED                                      l6000 08A5  
                                    l6002 0984                                      l6010 19BE  
                                    l6012 19C9                                      l6020 1CD2  
                                    l6110 0B57                                      l6040 1D1B  
                                    l7000 09C1                                      l6200 0C33  
                                    l6042 1D31                                      l6210 0C56  
                                    l6114 0B5A                                      l7100 0AF3  
                                    l6116 0B62                                      l6062 10DB  
                                    l7014 09DC                                      l6134 0B81  
                                    l6056 1ECB                                      l6304 04BD  
                                    l7104 0B0C                                      l6208 0C54  
                                    l6144 0B96                                      l6058 1EE7  
                                    l6322 04E2                                      l6306 04BF  
                                    l6082 110B                                      l6066 10E4  
                                    l7034 0A12                                      l7018 09DF  
                                    l6250 0D06                                      l6218 0C66  
                                    l6138 0B84                                      l6412 075A  
                                    l6324 04E4                                      l6308 04C7  
                                    l6092 112E                                      l6084 111B  
                                    l7300 00D5                                      l7116 0B30  
                                    l7060 0A80                                      l7028 0A06  
                                    l6244 0CFF                                      l6236 0CF0  
                                    l6228 0CD0                                      l6252 0D08  
                                    l5702 1BFB                                      l6334 04FA  
                                    l6326 04EC                                      l7054 0A61  
                                    l7062 0A3D                                      l6262 0D13  
                                    l6182 0C0E                                      l6174 0BD2  
                                    l7230 0DF2                                      l7222 0DDB  
                                    l7214 0D93                                      l6512 1B88  
                                    l6408 0744                                      l7400 02ED  
                                    l7312 010A                                      l7080 0AA8  
                                    l7064 0A85                                      l6280 0D56  
                                    l6184 0C10                                      l6192 0C1F  
                                    l5722 155B                                      l5810 1DB5  
                                    l6418 0773                                      l7322 013C  
                                    l6442 11FC                                      l7090 0AC1  
                                    l6258 0D11                                      l7138 1D41  
                                    l5724 1560                                      l5812 1DC3  
                                    l6620 1B12                                      l7332 016D  
                                    l7316 0124                                      l7308 00FB  
                                    l6436 11E5                                      l6284 0D5A  
                                    l7260 0FA3                                      l5726 1561  
                                    l6710 16BF                                      l6630 1298  
                                    l5822 1DE4                                      l7414 0352  
                                    l7406 02FE                                      l7350 01B5  
                                    l6470 126A                                      l6446 1200  
                                    l7086 0ABF                                      l7078 0A8B  
                                    l7254 0F8D                                      l7158 1DFA  
                                    l5760 1609                                      l6800 1E67  
                                    l6712 16C0                                      l6632 129D  
                                    l6536 1C3A                                      l5840 1C87  
                                    l7424 0378                                      l7344 019A  
                                    l7280 005E                                      l6456 1241  
                                    l6448 1212                                      l7248 0F35  
                                    l7192 1E1B                                      l5762 160E  
                                    l5922 0852                                      l6634 129E  
                                    l5818 1DD9                                      l6394 0710  
                                    l6386 06DC                                      l5834 1C6B  
                                    l7442 03C4                                      l7434 039E  
                                    l7370 022A                                      l7362 01F9  
                                    l7338 018D                                      l6458 1232  
                                    l7178 1E14                                      l5764 160F  
                                    l5780 1648                                      l6812 1E79  
                                    l5924 0857                                      l6708 16BA  
                                    l5852 1AF3                                      l6388 06F9  
                                    l6564 1F7D                                      l5836 1C79  
                                    l5844 1C92                                      l6476 079C  
                                    l7460 040B                                      l7356 01D2  
                                    l7284 006D                                      ?_isr 0070  
                                    l5790 1672                                      l5926 0858  
                                    l6734 170D                                      l6582 1BAD  
                                    l6398 0712                                      l5870 1CBD  
                                    l6486 07BB                                      l7454 03EF  
                                    l7390 02AC                                      l6752 1766  
                                    l6584 1BCA                                      l7472 043B  
                                    l7448 03DE                                      l7384 0287  
                                    l7376 0248                                      l7288 007B  
                                    l5786 166D                                      l5970 090C  
                                    l6754 176B                                      l6842 0805  
                                    l7642 0454                                      l7466 042B  
                                    l6922 1E56                                      l7562 14CF  
                                    l5788 159A                                      l6756 176C  
                                    l5876 1D83                                      l5868 1C9B  
                                    l6828 1A98                                      l6844 080F  
                                    l6836 1A0E                                      l7396 02C9  
                                    l7484 0449                                      l6916 1E41  
                                    l5966 0906                                      l6790 17E9  
                                    l6694 12D6                                      l5878 1D86  
                                    l6950 1FF7                                      l5968 090B  
                                    l5992 0959                                      l6696 1345  
                                    l6688 1324                                      l6848 0819  
                                    l6936 1FB2                                      l6960 1171  
                                    l6778 17B9                                      l6946 1FEA  
                                    l6938 1FC2                                      l6788 17E0  
                                    l6876 1F0B                                      l6964 1197  
                                    l7588 14F9                                      l5998 097F  
                                    l6894 19B2                                      l6898 19B5  
                                    l6994 09B6                                      _BETA 1048  
                                    l6998 09B9                                      STR_1 1050  
                                    STR_2 105B                                      STR_3 105A  
                                    STR_4 105C                                      STR_5 105A  
                                    STR_6 105C                                      STR_7 105A  
                                    STR_8 1057                               _statuspower 00EA  
                         ADC_Max_10Bits@i 0032                                      _CREN 00C4  
                                    u6200 0CA5                                      u6201 0CA6  
                                    u6202 0CAB                                      u6050 0BF2  
                                    u7003 1285                                      u6203 0CAC  
                                    u6060 0BF3                                      u7013 1296  
                                    u6045 0BE6                                      u5503 1607  
                                    u7103 1764                                      u7023 12EB  
                                    u5440 1BF8                                      u5515 15A8  
                                    _RCEN 048B                                      u5525 19F4  
                                    u6245 0CF2                                      u5463 1548  
                                    u7063 16A7                                      u5615 1C6E  
                                    u6191 0C91                                      u6183 0C78  
                                    u6175 0C5A                                      u6095 0C14  
                                    u8007 1D5C                                      u6192 0C92  
                                    u5473 1559                                      u7145 1E7F  
                                    u7073 16B8                                      u5545 1DB8  
                                    u7305 1FD9                                      u8017 1CEC  
                                    u6345 0D30                                      u6193 0C97  
                                    u6194 0C98                                      u5483 15BB  
                                    u8107 08DB                                      u7083 171C  
                                    u8027 19FC                                      u5635 1C7F  
                                    u7315 1FEB                                      u6195 0C9D  
                                    u6196 0C9E                                      u8117 0995  
                                    u8037 1C5F                                      u5565 1DC4  
                                    u6605 0691                                      u5645 1C88  
                                    u5813 1CE4                                      u7245 1E50  
                                    u8127 15DE                                      u5743 083F  
                                    u8047 1DA7                                      u5575 1DD0  
                                    u6535 05A4                                      u8137 168E  
                                    u5753 0850                                      u8057 1ABE  
                                    u5585 1DDA                                      u7505 0A4F  
                                    u7361 1182                                      u7362 1183  
                                    u5763 08B8                                      u8067 130B  
                                    u5675 1AFC                                      u6635 06C8  
                                    u7275 1FB6                                      u7363 1188  
                                    u7364 1189                                      u8077 1356  
                                    u6645 06E0                                      u6565 05FD  
                                    u5925 1124                                      u6805 1209  
                                    u7525 0A5A                                      u7381 11A8  
                                    u7365 118E                                      u7382 11A9  
                                    u7366 118F                                      u5783 0904  
                                    u8087 173D                                      u6735 072F  
                                    u7295 1FC4                                      u7535 0A6F  
                                    u7383 11AE                                      u7703 1D53  
                                    u7384 11AF                                      u8097 17FA  
                                    u6745 074D                                      u6665 06EB  
                                    u5865 10ED                                      u6825 1225  
                                    u7385 11B4                                      u7386 11B5  
                                    u6755 0765                                      u6845 123A  
                                    u7565 0A8F                                      u5895 110C  
                                    u7655 0ADE                                      u7495 0A46  
                                    u7665 0AFC                                      u7585 0A9A  
                                    u7675 0B17                                      u6965 1F89  
                                    u6885 1255                                      u7695 1C10  
                                    u6995 1B1B                                      u7997 144F  
                                    _RSEN 0489                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0059                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 0800  
                                    _main 1447                                      _hora 00E8  
                                    _itoa 1A85         __size_of_EEPROM_24C1025_Write_Int 0020  
                                    btemp 007E                                      _utoa 0797  
       __size_of_EEPROM_24C1025_Write_Str 00E9                 ?_EEPROM_24C1025_Write_Int 004E  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 0022  
             __size_of_EEPROM_Read_String 0020                                      start 0012  
                        __end_of_ADC_init 1948                          _BALANCE_RESISTOR 104C  
                         ___fldiv@new_exp 0053        EEPROM_24C1025_Read_Buffer@sizedata 002A  
                                   ??_isr 0070                          ?_I2C_Master_Init 002E  
                        ?_I2C_Master_Read 0020                          ?_I2C_Master_Wait 0070  
                        ?_I2C_Master_Stop 0070                            ?_USART_put_int 004E  
                           ___fltol@sign1 004C                           __end_of___fladd 0D69  
                                   ?_main 0070                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 0B3C  
                                   ?_itoa 0031                                     _EEADR 010D  
                           __CFG_WDTE$OFF 0000                           __end_of___flmul 0797  
                         __end_of___flsub 1A45                           __end_of___fltol 113D  
                                   _ANSEL 0188                           __end_of___lldiv 2000  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1DE9                                     i1l505 1384  
                         __end_of___lwmod 1C97                                     i1l523 143B  
                                   i1l507 1395                                     i1l509 13A3  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 193D  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E6              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00DB                                     _errno 00D7  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01A9                ?_EEPROM_24C1025_Write_Byte 002F  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0034  
                            __end_of_BETA 104C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1536                              __end_of_itoa 1AA5  
                            __end_of_utoa 07FB                            Send_To_MB@size 0021  
                        _USART_put_buffer 1B0C                  __end_of_EEPROM_Read_Byte 1AC7  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 10D2                                    ??_utoa 002C  
                        _USART_put_string 1C97                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                        Save_Log@add_memory 0058  
                              _Send_To_MB 1B58                     EEPROM_Write_Integer@i 002C  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 195D  
                                  i1l5610 140F                                    i1l5612 13E3  
                                  i1l5614 1416                                    i1l5550 1379  
                                  i1l5608 140A                                    i1l5560 1397  
                                  i1l5554 1387                                    i1l5546 136A  
                                  i1l5566 13A4                                    i1l5590 13D4  
       __end_of_EEPROM_24C1025_Write_Byte 1973                                    u538_25 13FC  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 002F  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013                          __end_of___xxtofl 1273  
                      PROCULUS_VP_Write@i 0059                  __end_of_Decodify_Command 04A2  
                ?_EEPROM_24C1025_Read_Int 0034                  ?_EEPROM_24C1025_Read_Str 0026  
                _I2C_Master_RepeatedStart 07FB      __size_of_EEPROM_24C1025_Write_Buffer 015E  
                                  ___flge 113D                                 ??___fladd 0052  
                               ??___fldiv 0049                                 ??___flmul 0031  
                               ??___flsub 0066                                 ??___fltol 0047  
                         ??_USART_put_int 0050                                 ??___lldiv 0028  
                                  _header 00DD                         __end_of_ROOM_TEMP 1020  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 0110                         _USART_to_Protocol 1F45  
                         USART_putc@value 0020                                    _minuto 00E7  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00CB                                    _strcat 0800  
                                  _strcpy 1A09                                    _strlen 19B7  
       EEPROM_24C1025_Read_Buffer@mem_add 0026          __end_of_EEPROM_24C1025_Read_Byte 19EC  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0070  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 003C  
                     __size_of_USART_putc 0010                  __end_of_MediaPlacaVaccum 1000  
                              ___flge@ff1 0020                                ___flge@ff2 0024  
                            ___xxtofl@arg 003D                              ___xxtofl@exp 003C  
                            ___xxtofl@val 0033                          __end_oflog@coeff 1048  
                 __end_of__initialization 0032       PROCULUS_Control_Register_Write@size 0052  
                              ___fltol@f1 0043                              _Board_Number 00E5  
                __end_of_ADC_Media_10bits 1F45                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 1FA2  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                   __size_of_ADC_Max_10Bits 003E  
                __end_of_BALANCE_RESISTOR 1050          __end_of_EEPROM_24C1025_Write_Int 1A85  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 135C                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1BD5  
         __end_of_EEPROM_24C1025_Fill_All 1EA8                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00CF  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1018           __end_of_EEPROM_24C1025_Read_Int 1B58  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 19EC  
                       __end_of__Umul8_16 1B0C                                __pmaintext 1447  
                                 ?___flge 0020                       _EEPROM_Read_Integer 1B80  
              PROCULUS_Show_Screen@screen 0056                                __pintentry 0004  
                    _PROCULUS_Show_Screen 1948                        ADC_Max_10Bits@Temp 002E  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020                         MediaPlacaVaccum@i 00A9  
                               ?___xxtofl 0033                                   _MAX_ADC 1020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00BE  
             EEPROM_24C1025_Read_Int@data 003B                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 19A0                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 19D0  
                              __stringtab 1000                     Decodify_Command@valor 00C8  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1B30                __end_of_EEPROM_Read_String 1A65  
                  __end_of_PROCULUS_Delay 1A09                  __end_of_USART_put_string 1CCA  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00D3  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0030  
                                 _Tensao1 00CF                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 005D               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 04A2                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1A27                                   ___fltol 10D2  
                                 ___lldiv 1FA2                                   ___lwdiv 1DAD  
                                 ___lwmod 1C65                             _Send_Reply_OK 192A  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 1933                          _statuspower_memo 007C  
                                 __ptext1 1D39                                   __ptext2 1DE9  
                                 __ptext3 0D69                                   __ptext4 1A27  
                                 __ptext5 0B3C                                   __ptext6 113D  
                                 __ptext7 099B                                   __ptext8 19A0  
                                 __ptext9 1EEF                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00E4                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcat 002C                           __size_of_strcpy 001E  
                         __size_of_strlen 0019                              __size_of_isr 00EB  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 00E9                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 002D                            _usart_protocol 01B9  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0008  
                __size_of_I2C_Master_Stop 0005             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00E3             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 1911                        __end_of_USART_init 1E25  
         __end_of_Package_Usart_is_for_me 19B7                        __end_of_USART_putc 106E  
                       ADC_Media_10bits@i 0049                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 1A65                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 1273                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0037                                   itoa@val 0031  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
               __size_of_I2C_Master_Start 0009                 __size_of_I2C_Master_Write 0009  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 005E  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 195D  
                                 utoa@val 0028          __size_of_EEPROM_24C1025_Fill_All 0045  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 007A  
            ??_EEPROM_24C1025_Read_Buffer 002D             EEPROM_24C1025_Write_Str@range 002A  
                               _ROOM_TEMP 101C                            _ADC_Max_10Bits 1E25  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0028  
        __size_of_EEPROM_24C1025_Read_Str 016C                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 1694               _EEPROM_24C1025_Write_Buffer 1536  
                             ___fldiv@grs 0055                               ___fldiv@rem 004E  
    PROCULUS_Control_Register_Write@vetor 0054          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 004E          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00C1  
                       ?_MediaPlacaVaccum 0070                     PROCULUS_VP_Write@size 0056  
         EEPROM_24C1025_Read_Str@chip_add 002E                               ___flmul@grs 0039  
                      ??_MediaPlacaVaccum 0066                  _PROCULUS_VP_Write_String 1989  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 016F  
                       ?_ADC_Media_10bits 0041                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0058                        ??_ADC_Media_10bits 0045  
                          __end_of___flge 11D0                     __end_of_USART_put_int 1989  
                  __end_of_ADC_Max_10Bits 1E63                               _BAUDCTLbits 0187  
                          __end_of_strcat 082C                            __end_of_strcpy 1A27  
                          __end_of_strlen 19D0                       start_initialization 0015  
                             __end_of_isr 1447                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1C65  
        EEPROM_24C1025_Write_Int@chip_add 0055                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 0064                                 __Umul8_16 1AE9  
                      __end_of_Send_To_MB 1B80          __size_of_Package_Usart_is_for_me 0017  
                         ?_ADC_Max_10Bits 002A                                  ??_strcat 0022  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 0038        EEPROM_24C1025_Write_Buffer@mem_add 0022  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 002F                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         _PROCULUS_VP_Write 1EA8  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1918  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 1921  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00D9  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1AC7  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 1E63  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1A45  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 099B                _EEPROM_24C1025_Read_Buffer 082C  
                   MediaPlacaVaccum@Valor 00A0                                  ?_captura 0020  
                               __pstrings 1000                     MediaPlacaVaccum@canal 00A4  
                         _my_delay_ms_WDT 1D39                   _EEPROM_24C1025_Read_Int 1B30  
                 _EEPROM_24C1025_Read_Str 1694                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0054                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                 __end_of_PROCULUS_VP_Write 1EEF  
              EEPROM_24C1025_Read_Str@cnt 002D                                  _ADC_init 193D  
                        ___lwdiv@quotient 0026                   EEPROM_Write_Integer@ptr 002A  
                        ??_PROCULUS_Delay 0022                       ADC_Max_10Bits@canal 002D  
          EEPROM_24C1025_Read_Buffer@data 002B            EEPROM_24C1025_Read_Buffer@ctrl 0033  
                     ADC_Max_10Bits@value 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0022                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 0022                      ??_EEPROM_Read_String 0024  
                               clear_ram0 1910                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0055  
                  Decodify_Command@OutPut 00C3                           _PT100_TRANSLADA 1010  
                         _Delay_Led_Usart 00E1              EEPROM_24C1025_Read_Byte@data 0039  
             __end_of_EEPROM_Read_Integer 1BAA                                _ADCON0bits 001F  
                             __stringbase 100F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 046C                      _EEPROM_Write_Integer 1C33  
          EEPROM_24C1025_Read_Int@mem_add 0034                                 main@reset 006D  
              ??_PROCULUS_VP_Write_String 005D                       I2C_Master_Read@temp 0024  
                 __end_of_PROCULUS_Buzzer 1AE9                            _generic_status 00EB  
                              _EECON1bits 018C                                  _Save_Log 106E  
               ??_EEPROM_24C1025_Fill_All 0030                       __end_of_my_delay_ms 1D01  
            EEPROM_24C1025_Read_Str@range 002F              EEPROM_24C1025_Read_Str@texto 002A  
                 __end_of_my_delay_ms_WDT 1D71                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 0005                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 0038                   _Package_Usart_is_for_me 19A0  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002B  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                        __end_of__stringtab 1010  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                EEPROM_24C1025_Fill_All@i 0034                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1C02  
                         _I2C_Master_Read 1BD5                                  ___xxtofl 11D0  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 1908  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0038  
                         _I2C_Master_Stop 1903                 __size_of_ADC_Media_10bits 0056  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0025  
                                __ptext10 11D0                                  __ptext11 1E25  
                                __ptext20 0797                                  __ptext12 1CCA  
                                __ptext21 1C65                                  __ptext13 1933  
                                __ptext30 1AE9                                  __ptext22 1F45  
                                __ptext14 1C02                                  __ptext31 1A65  
                                __ptext23 1B0C                                  __ptext15 1FA2  
                                __ptext40 105E                                  __ptext32 1989  
                                __ptext24 1B58                                  __ptext16 0036  
                                __ptext41 19EC                                  __ptext33 19B7  
                                __ptext25 192A                                  __ptext17 1A09  
                                __ptext50 1694                                  __ptext42 1BAA  
                                __ptext34 1EA8                                  __ptext26 1C97  
                                __ptext18 0800                                  __ptext51 1B30  
                                __ptext43 1C33                                  __ptext35 1948  
                                __ptext27 106E                                  __ptext19 1A85  
                                __ptext60 1918                                  __ptext52 19D0  
                                __ptext44 1D71                                  __ptext36 1AC7  
                                __ptext28 10D2                                  __ptext61 1908  
                                __ptext53 082C                                  __ptext45 1A45  
                                __ptext37 1DAD                                  __ptext29 04A2  
                                __ptext62 193D                                  __ptext54 07FB  
                                __ptext46 1B80                                  __ptext38 1D01  
                                __ptext63 135C                                  __ptext55 1BD5  
                                __ptext47 1AA5                                  __ptext39 1973  
                                __ptext56 1E63                                  __ptext48 1273  
                                __ptext57 1536                                  __ptext49 195D  
                                __ptext58 1921                                  __ptext59 1903  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 004E  
                          _PT100_CONSTANT 1014                      MediaPlacaVaccum@Temp 00A5  
                              strcpy@from 0020                             __size_of_main 00EF  
                           __size_of_itoa 0020                             __size_of_utoa 0064  
            EEPROM_24C1025_Fill_All@value 002F                PROCULUS_VP_Write_String@vp 005A  
                 __end_of_PT100_TRANSLADA 1014       EEPROM_24C1025_Write_Buffer@sizedata 0026  
                             _milisegundo 00DF                          ??_ADC_Max_10Bits 002C  
                          _Delay_Led_Tmr0 0078             __size_of_PROCULUS_Show_Screen 0015  
                     _EEPROM_Write_String 1BAA                                  log@coeff 1024  
                __end_of_I2C_Master_Start 1921                  __end_of_I2C_Master_Write 192A  
                              _INTCONbits 000B                    __end_of_PT100_CONSTANT 1018  
                                isr@tempo 0076                                  itoa@base 0033  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1AA5  
                             _my_delay_ms 1CCA                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 0016              EEPROM_24C1025_Write_Int@data 0052  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0027  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
             EEPROM_24C1025_Fill_All@page 0035                                 stringcode 100A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1933  
                 __end_of_I2C_Master_Init 1C33                   __end_of_I2C_Master_Read 1C02  
                 __end_of_I2C_Master_Wait 1910                   __end_of_I2C_Master_Stop 1908  
            EEPROM_24C1025_Write_Str@data 0026              EEPROM_24C1025_Write_Str@ctrl 002B  
               __size_of_USART_put_buffer 0024               ?_EEPROM_24C1025_Read_Buffer 0026  
         EEPROM_24C1025_Fill_All@chip_add 0033                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 002A                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0036  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 0033                          ___lldiv@quotient 0029  
                       I2C_Master_Write@d 0020                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0023  
                                strcpy@to 0022                           ___lwmod@counter 0025  
                                stringdir 100A                                  stringtab 1000  
                       _EEPROM_Write_Byte 1D71            EEPROM_24C1025_Read_Str@mem_add 0026  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 001C  
               ?_EEPROM_24C1025_Read_Byte 0034                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1DE9  
